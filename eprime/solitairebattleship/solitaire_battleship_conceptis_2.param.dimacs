p cnf 8958 89674                                                                                    

1 0
c Encoding variable: agrid_00001_00001 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00001' order represents '0' with '2'
c Var 'agrid_00001_00001' direct represents '0' with '2'
c Var 'agrid_00001_00001' order represents '1' with '3'
-2 3 0
c Var 'agrid_00001_00001' direct represents '1' with '4'
2 -3 4 0
-4 3 0
-4 -2 0
c Var 'agrid_00001_00001' order represents '2' with '5'
-3 5 0
c Var 'agrid_00001_00001' direct represents '2' with '6'
3 -5 6 0
-6 5 0
-6 -3 0
c Var 'agrid_00001_00001' order represents '3' with '7'
-5 7 0
c Var 'agrid_00001_00001' direct represents '3' with '8'
5 -7 8 0
-8 7 0
-8 -5 0
c Var 'agrid_00001_00001' direct represents '4' with '-7'
2 4 6 8 -7 0
c Encoding variable: agrid_00001_00002 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00002' order represents '0' with '9'
c Var 'agrid_00001_00002' direct represents '0' with '9'
c Var 'agrid_00001_00002' order represents '1' with '10'
-9 10 0
c Var 'agrid_00001_00002' direct represents '1' with '11'
9 -10 11 0
-11 10 0
-11 -9 0
c Var 'agrid_00001_00002' order represents '2' with '12'
-10 12 0
c Var 'agrid_00001_00002' direct represents '2' with '13'
10 -12 13 0
-13 12 0
-13 -10 0
c Var 'agrid_00001_00002' order represents '3' with '14'
-12 14 0
c Var 'agrid_00001_00002' direct represents '3' with '15'
12 -14 15 0
-15 14 0
-15 -12 0
c Var 'agrid_00001_00002' direct represents '4' with '-14'
9 11 13 15 -14 0
c Encoding variable: agrid_00001_00003 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00003' order represents '0' with '16'
c Var 'agrid_00001_00003' direct represents '0' with '16'
c Var 'agrid_00001_00003' order represents '1' with '17'
-16 17 0
c Var 'agrid_00001_00003' direct represents '1' with '18'
16 -17 18 0
-18 17 0
-18 -16 0
c Var 'agrid_00001_00003' order represents '2' with '19'
-17 19 0
c Var 'agrid_00001_00003' direct represents '2' with '20'
17 -19 20 0
-20 19 0
-20 -17 0
c Var 'agrid_00001_00003' order represents '3' with '21'
-19 21 0
c Var 'agrid_00001_00003' direct represents '3' with '22'
19 -21 22 0
-22 21 0
-22 -19 0
c Var 'agrid_00001_00003' direct represents '4' with '-21'
16 18 20 22 -21 0
c Encoding variable: agrid_00001_00004 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00004' order represents '0' with '23'
c Var 'agrid_00001_00004' direct represents '0' with '23'
c Var 'agrid_00001_00004' order represents '1' with '24'
-23 24 0
c Var 'agrid_00001_00004' direct represents '1' with '25'
23 -24 25 0
-25 24 0
-25 -23 0
c Var 'agrid_00001_00004' order represents '2' with '26'
-24 26 0
c Var 'agrid_00001_00004' direct represents '2' with '27'
24 -26 27 0
-27 26 0
-27 -24 0
c Var 'agrid_00001_00004' order represents '3' with '28'
-26 28 0
c Var 'agrid_00001_00004' direct represents '3' with '29'
26 -28 29 0
-29 28 0
-29 -26 0
c Var 'agrid_00001_00004' direct represents '4' with '-28'
23 25 27 29 -28 0
c Encoding variable: agrid_00001_00005 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00005' order represents '0' with '30'
c Var 'agrid_00001_00005' direct represents '0' with '30'
c Var 'agrid_00001_00005' order represents '1' with '31'
-30 31 0
c Var 'agrid_00001_00005' direct represents '1' with '32'
30 -31 32 0
-32 31 0
-32 -30 0
c Var 'agrid_00001_00005' order represents '2' with '33'
-31 33 0
c Var 'agrid_00001_00005' direct represents '2' with '34'
31 -33 34 0
-34 33 0
-34 -31 0
c Var 'agrid_00001_00005' order represents '3' with '35'
-33 35 0
c Var 'agrid_00001_00005' direct represents '3' with '36'
33 -35 36 0
-36 35 0
-36 -33 0
c Var 'agrid_00001_00005' direct represents '4' with '-35'
30 32 34 36 -35 0
c Encoding variable: agrid_00001_00006 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00006' order represents '0' with '37'
c Var 'agrid_00001_00006' direct represents '0' with '37'
c Var 'agrid_00001_00006' order represents '1' with '38'
-37 38 0
c Var 'agrid_00001_00006' direct represents '1' with '39'
37 -38 39 0
-39 38 0
-39 -37 0
c Var 'agrid_00001_00006' order represents '2' with '40'
-38 40 0
c Var 'agrid_00001_00006' direct represents '2' with '41'
38 -40 41 0
-41 40 0
-41 -38 0
c Var 'agrid_00001_00006' order represents '3' with '42'
-40 42 0
c Var 'agrid_00001_00006' direct represents '3' with '43'
40 -42 43 0
-43 42 0
-43 -40 0
c Var 'agrid_00001_00006' direct represents '4' with '-42'
37 39 41 43 -42 0
c Encoding variable: agrid_00001_00007 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00007' order represents '0' with '44'
c Var 'agrid_00001_00007' direct represents '0' with '44'
c Var 'agrid_00001_00007' order represents '1' with '45'
-44 45 0
c Var 'agrid_00001_00007' direct represents '1' with '46'
44 -45 46 0
-46 45 0
-46 -44 0
c Var 'agrid_00001_00007' order represents '2' with '47'
-45 47 0
c Var 'agrid_00001_00007' direct represents '2' with '48'
45 -47 48 0
-48 47 0
-48 -45 0
c Var 'agrid_00001_00007' order represents '3' with '49'
-47 49 0
c Var 'agrid_00001_00007' direct represents '3' with '50'
47 -49 50 0
-50 49 0
-50 -47 0
c Var 'agrid_00001_00007' direct represents '4' with '-49'
44 46 48 50 -49 0
c Encoding variable: agrid_00001_00008 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00001_00008' order represents '0' with '51'
c Var 'agrid_00001_00008' direct represents '0' with '51'
c Var 'agrid_00001_00008' order represents '1' with '52'
-51 52 0
c Var 'agrid_00001_00008' direct represents '1' with '53'
51 -52 53 0
-53 52 0
-53 -51 0
c Var 'agrid_00001_00008' order represents '2' with '54'
-52 54 0
c Var 'agrid_00001_00008' direct represents '2' with '55'
52 -54 55 0
-55 54 0
-55 -52 0
c Var 'agrid_00001_00008' order represents '3' with '56'
-54 56 0
c Var 'agrid_00001_00008' direct represents '3' with '57'
54 -56 57 0
-57 56 0
-57 -54 0
c Var 'agrid_00001_00008' direct represents '4' with '-56'
51 53 55 57 -56 0
c Encoding variable: agrid_00002_00001 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00001' order represents '0' with '58'
c Var 'agrid_00002_00001' direct represents '0' with '58'
c Var 'agrid_00002_00001' order represents '1' with '59'
-58 59 0
c Var 'agrid_00002_00001' direct represents '1' with '60'
58 -59 60 0
-60 59 0
-60 -58 0
c Var 'agrid_00002_00001' order represents '2' with '61'
-59 61 0
c Var 'agrid_00002_00001' direct represents '2' with '62'
59 -61 62 0
-62 61 0
-62 -59 0
c Var 'agrid_00002_00001' order represents '3' with '63'
-61 63 0
c Var 'agrid_00002_00001' direct represents '3' with '64'
61 -63 64 0
-64 63 0
-64 -61 0
c Var 'agrid_00002_00001' direct represents '4' with '-63'
58 60 62 64 -63 0
c Encoding variable: agrid_00002_00002 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00002' order represents '0' with '65'
c Var 'agrid_00002_00002' direct represents '0' with '65'
c Var 'agrid_00002_00002' order represents '1' with '66'
-65 66 0
c Var 'agrid_00002_00002' direct represents '1' with '67'
65 -66 67 0
-67 66 0
-67 -65 0
c Var 'agrid_00002_00002' order represents '2' with '68'
-66 68 0
c Var 'agrid_00002_00002' direct represents '2' with '69'
66 -68 69 0
-69 68 0
-69 -66 0
c Var 'agrid_00002_00002' order represents '3' with '70'
-68 70 0
c Var 'agrid_00002_00002' direct represents '3' with '71'
68 -70 71 0
-71 70 0
-71 -68 0
c Var 'agrid_00002_00002' direct represents '4' with '-70'
65 67 69 71 -70 0
c Encoding variable: agrid_00002_00003 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00003' order represents '0' with '72'
c Var 'agrid_00002_00003' direct represents '0' with '72'
c Var 'agrid_00002_00003' order represents '1' with '73'
-72 73 0
c Var 'agrid_00002_00003' direct represents '1' with '74'
72 -73 74 0
-74 73 0
-74 -72 0
c Var 'agrid_00002_00003' order represents '2' with '75'
-73 75 0
c Var 'agrid_00002_00003' direct represents '2' with '76'
73 -75 76 0
-76 75 0
-76 -73 0
c Var 'agrid_00002_00003' order represents '3' with '77'
-75 77 0
c Var 'agrid_00002_00003' direct represents '3' with '78'
75 -77 78 0
-78 77 0
-78 -75 0
c Var 'agrid_00002_00003' direct represents '4' with '-77'
72 74 76 78 -77 0
c Encoding variable: agrid_00002_00004 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00004' order represents '0' with '79'
c Var 'agrid_00002_00004' direct represents '0' with '79'
c Var 'agrid_00002_00004' order represents '1' with '80'
-79 80 0
c Var 'agrid_00002_00004' direct represents '1' with '81'
79 -80 81 0
-81 80 0
-81 -79 0
c Var 'agrid_00002_00004' order represents '2' with '82'
-80 82 0
c Var 'agrid_00002_00004' direct represents '2' with '83'
80 -82 83 0
-83 82 0
-83 -80 0
c Var 'agrid_00002_00004' order represents '3' with '84'
-82 84 0
c Var 'agrid_00002_00004' direct represents '3' with '85'
82 -84 85 0
-85 84 0
-85 -82 0
c Var 'agrid_00002_00004' direct represents '4' with '-84'
79 81 83 85 -84 0
c Encoding variable: agrid_00002_00005 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00005' order represents '0' with '86'
c Var 'agrid_00002_00005' direct represents '0' with '86'
c Var 'agrid_00002_00005' order represents '1' with '87'
-86 87 0
c Var 'agrid_00002_00005' direct represents '1' with '88'
86 -87 88 0
-88 87 0
-88 -86 0
c Var 'agrid_00002_00005' order represents '2' with '89'
-87 89 0
c Var 'agrid_00002_00005' direct represents '2' with '90'
87 -89 90 0
-90 89 0
-90 -87 0
c Var 'agrid_00002_00005' order represents '3' with '91'
-89 91 0
c Var 'agrid_00002_00005' direct represents '3' with '92'
89 -91 92 0
-92 91 0
-92 -89 0
c Var 'agrid_00002_00005' direct represents '4' with '-91'
86 88 90 92 -91 0
c Encoding variable: agrid_00002_00006 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00006' order represents '0' with '93'
c Var 'agrid_00002_00006' direct represents '0' with '93'
c Var 'agrid_00002_00006' order represents '1' with '94'
-93 94 0
c Var 'agrid_00002_00006' direct represents '1' with '95'
93 -94 95 0
-95 94 0
-95 -93 0
c Var 'agrid_00002_00006' order represents '2' with '96'
-94 96 0
c Var 'agrid_00002_00006' direct represents '2' with '97'
94 -96 97 0
-97 96 0
-97 -94 0
c Var 'agrid_00002_00006' order represents '3' with '98'
-96 98 0
c Var 'agrid_00002_00006' direct represents '3' with '99'
96 -98 99 0
-99 98 0
-99 -96 0
c Var 'agrid_00002_00006' direct represents '4' with '-98'
93 95 97 99 -98 0
c Encoding variable: agrid_00002_00007 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00007' order represents '0' with '100'
c Var 'agrid_00002_00007' direct represents '0' with '100'
c Var 'agrid_00002_00007' order represents '1' with '101'
-100 101 0
c Var 'agrid_00002_00007' direct represents '1' with '102'
100 -101 102 0
-102 101 0
-102 -100 0
c Var 'agrid_00002_00007' order represents '2' with '103'
-101 103 0
c Var 'agrid_00002_00007' direct represents '2' with '104'
101 -103 104 0
-104 103 0
-104 -101 0
c Var 'agrid_00002_00007' order represents '3' with '105'
-103 105 0
c Var 'agrid_00002_00007' direct represents '3' with '106'
103 -105 106 0
-106 105 0
-106 -103 0
c Var 'agrid_00002_00007' direct represents '4' with '-105'
100 102 104 106 -105 0
c Encoding variable: agrid_00002_00008 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00002_00008' order represents '0' with '107'
c Var 'agrid_00002_00008' direct represents '0' with '107'
c Var 'agrid_00002_00008' order represents '1' with '108'
-107 108 0
c Var 'agrid_00002_00008' direct represents '1' with '109'
107 -108 109 0
-109 108 0
-109 -107 0
c Var 'agrid_00002_00008' order represents '2' with '110'
-108 110 0
c Var 'agrid_00002_00008' direct represents '2' with '111'
108 -110 111 0
-111 110 0
-111 -108 0
c Var 'agrid_00002_00008' order represents '3' with '112'
-110 112 0
c Var 'agrid_00002_00008' direct represents '3' with '113'
110 -112 113 0
-113 112 0
-113 -110 0
c Var 'agrid_00002_00008' direct represents '4' with '-112'
107 109 111 113 -112 0
c Encoding variable: agrid_00003_00001 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00001' order represents '0' with '114'
c Var 'agrid_00003_00001' direct represents '0' with '114'
c Var 'agrid_00003_00001' order represents '1' with '115'
-114 115 0
c Var 'agrid_00003_00001' direct represents '1' with '116'
114 -115 116 0
-116 115 0
-116 -114 0
c Var 'agrid_00003_00001' order represents '2' with '117'
-115 117 0
c Var 'agrid_00003_00001' direct represents '2' with '118'
115 -117 118 0
-118 117 0
-118 -115 0
c Var 'agrid_00003_00001' order represents '3' with '119'
-117 119 0
c Var 'agrid_00003_00001' direct represents '3' with '120'
117 -119 120 0
-120 119 0
-120 -117 0
c Var 'agrid_00003_00001' direct represents '4' with '-119'
114 116 118 120 -119 0
c Encoding variable: agrid_00003_00002 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00002' order represents '0' with '121'
c Var 'agrid_00003_00002' direct represents '0' with '121'
c Var 'agrid_00003_00002' order represents '1' with '122'
-121 122 0
c Var 'agrid_00003_00002' direct represents '1' with '123'
121 -122 123 0
-123 122 0
-123 -121 0
c Var 'agrid_00003_00002' order represents '2' with '124'
-122 124 0
c Var 'agrid_00003_00002' direct represents '2' with '125'
122 -124 125 0
-125 124 0
-125 -122 0
c Var 'agrid_00003_00002' order represents '3' with '126'
-124 126 0
c Var 'agrid_00003_00002' direct represents '3' with '127'
124 -126 127 0
-127 126 0
-127 -124 0
c Var 'agrid_00003_00002' direct represents '4' with '-126'
121 123 125 127 -126 0
c Encoding variable: agrid_00003_00003 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00003' order represents '0' with '128'
c Var 'agrid_00003_00003' direct represents '0' with '128'
c Var 'agrid_00003_00003' order represents '1' with '129'
-128 129 0
c Var 'agrid_00003_00003' direct represents '1' with '130'
128 -129 130 0
-130 129 0
-130 -128 0
c Var 'agrid_00003_00003' order represents '2' with '131'
-129 131 0
c Var 'agrid_00003_00003' direct represents '2' with '132'
129 -131 132 0
-132 131 0
-132 -129 0
c Var 'agrid_00003_00003' order represents '3' with '133'
-131 133 0
c Var 'agrid_00003_00003' direct represents '3' with '134'
131 -133 134 0
-134 133 0
-134 -131 0
c Var 'agrid_00003_00003' direct represents '4' with '-133'
128 130 132 134 -133 0
c Encoding variable: agrid_00003_00004 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00004' order represents '0' with '135'
c Var 'agrid_00003_00004' direct represents '0' with '135'
c Var 'agrid_00003_00004' order represents '1' with '136'
-135 136 0
c Var 'agrid_00003_00004' direct represents '1' with '137'
135 -136 137 0
-137 136 0
-137 -135 0
c Var 'agrid_00003_00004' order represents '2' with '138'
-136 138 0
c Var 'agrid_00003_00004' direct represents '2' with '139'
136 -138 139 0
-139 138 0
-139 -136 0
c Var 'agrid_00003_00004' order represents '3' with '140'
-138 140 0
c Var 'agrid_00003_00004' direct represents '3' with '141'
138 -140 141 0
-141 140 0
-141 -138 0
c Var 'agrid_00003_00004' direct represents '4' with '-140'
135 137 139 141 -140 0
c Encoding variable: agrid_00003_00005 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00005' order represents '0' with '142'
c Var 'agrid_00003_00005' direct represents '0' with '142'
c Var 'agrid_00003_00005' order represents '1' with '143'
-142 143 0
c Var 'agrid_00003_00005' direct represents '1' with '144'
142 -143 144 0
-144 143 0
-144 -142 0
c Var 'agrid_00003_00005' order represents '2' with '145'
-143 145 0
c Var 'agrid_00003_00005' direct represents '2' with '146'
143 -145 146 0
-146 145 0
-146 -143 0
c Var 'agrid_00003_00005' order represents '3' with '147'
-145 147 0
c Var 'agrid_00003_00005' direct represents '3' with '148'
145 -147 148 0
-148 147 0
-148 -145 0
c Var 'agrid_00003_00005' direct represents '4' with '-147'
142 144 146 148 -147 0
c Encoding variable: agrid_00003_00006 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00006' order represents '0' with '149'
c Var 'agrid_00003_00006' direct represents '0' with '149'
c Var 'agrid_00003_00006' order represents '1' with '150'
-149 150 0
c Var 'agrid_00003_00006' direct represents '1' with '151'
149 -150 151 0
-151 150 0
-151 -149 0
c Var 'agrid_00003_00006' order represents '2' with '152'
-150 152 0
c Var 'agrid_00003_00006' direct represents '2' with '153'
150 -152 153 0
-153 152 0
-153 -150 0
c Var 'agrid_00003_00006' order represents '3' with '154'
-152 154 0
c Var 'agrid_00003_00006' direct represents '3' with '155'
152 -154 155 0
-155 154 0
-155 -152 0
c Var 'agrid_00003_00006' direct represents '4' with '-154'
149 151 153 155 -154 0
c Encoding variable: agrid_00003_00007 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00007' order represents '0' with '156'
c Var 'agrid_00003_00007' direct represents '0' with '156'
c Var 'agrid_00003_00007' order represents '1' with '157'
-156 157 0
c Var 'agrid_00003_00007' direct represents '1' with '158'
156 -157 158 0
-158 157 0
-158 -156 0
c Var 'agrid_00003_00007' order represents '2' with '159'
-157 159 0
c Var 'agrid_00003_00007' direct represents '2' with '160'
157 -159 160 0
-160 159 0
-160 -157 0
c Var 'agrid_00003_00007' order represents '3' with '161'
-159 161 0
c Var 'agrid_00003_00007' direct represents '3' with '162'
159 -161 162 0
-162 161 0
-162 -159 0
c Var 'agrid_00003_00007' direct represents '4' with '-161'
156 158 160 162 -161 0
c Encoding variable: agrid_00003_00008 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00003_00008' order represents '0' with '163'
c Var 'agrid_00003_00008' direct represents '0' with '163'
c Var 'agrid_00003_00008' order represents '1' with '164'
-163 164 0
c Var 'agrid_00003_00008' direct represents '1' with '165'
163 -164 165 0
-165 164 0
-165 -163 0
c Var 'agrid_00003_00008' order represents '2' with '166'
-164 166 0
c Var 'agrid_00003_00008' direct represents '2' with '167'
164 -166 167 0
-167 166 0
-167 -164 0
c Var 'agrid_00003_00008' order represents '3' with '168'
-166 168 0
c Var 'agrid_00003_00008' direct represents '3' with '169'
166 -168 169 0
-169 168 0
-169 -166 0
c Var 'agrid_00003_00008' direct represents '4' with '-168'
163 165 167 169 -168 0
c Encoding variable: agrid_00004_00001 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00001' order represents '0' with '170'
c Var 'agrid_00004_00001' direct represents '0' with '170'
c Var 'agrid_00004_00001' order represents '1' with '171'
-170 171 0
c Var 'agrid_00004_00001' direct represents '1' with '172'
170 -171 172 0
-172 171 0
-172 -170 0
c Var 'agrid_00004_00001' order represents '2' with '173'
-171 173 0
c Var 'agrid_00004_00001' direct represents '2' with '174'
171 -173 174 0
-174 173 0
-174 -171 0
c Var 'agrid_00004_00001' order represents '3' with '175'
-173 175 0
c Var 'agrid_00004_00001' direct represents '3' with '176'
173 -175 176 0
-176 175 0
-176 -173 0
c Var 'agrid_00004_00001' direct represents '4' with '-175'
170 172 174 176 -175 0
c Encoding variable: agrid_00004_00002 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00002' order represents '0' with '177'
c Var 'agrid_00004_00002' direct represents '0' with '177'
c Var 'agrid_00004_00002' order represents '1' with '178'
-177 178 0
c Var 'agrid_00004_00002' direct represents '1' with '179'
177 -178 179 0
-179 178 0
-179 -177 0
c Var 'agrid_00004_00002' order represents '2' with '180'
-178 180 0
c Var 'agrid_00004_00002' direct represents '2' with '181'
178 -180 181 0
-181 180 0
-181 -178 0
c Var 'agrid_00004_00002' order represents '3' with '182'
-180 182 0
c Var 'agrid_00004_00002' direct represents '3' with '183'
180 -182 183 0
-183 182 0
-183 -180 0
c Var 'agrid_00004_00002' direct represents '4' with '-182'
177 179 181 183 -182 0
c Encoding variable: agrid_00004_00003 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00003' order represents '0' with '184'
c Var 'agrid_00004_00003' direct represents '0' with '184'
c Var 'agrid_00004_00003' order represents '1' with '185'
-184 185 0
c Var 'agrid_00004_00003' direct represents '1' with '186'
184 -185 186 0
-186 185 0
-186 -184 0
c Var 'agrid_00004_00003' order represents '2' with '187'
-185 187 0
c Var 'agrid_00004_00003' direct represents '2' with '188'
185 -187 188 0
-188 187 0
-188 -185 0
c Var 'agrid_00004_00003' order represents '3' with '189'
-187 189 0
c Var 'agrid_00004_00003' direct represents '3' with '190'
187 -189 190 0
-190 189 0
-190 -187 0
c Var 'agrid_00004_00003' direct represents '4' with '-189'
184 186 188 190 -189 0
c Encoding variable: agrid_00004_00004 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00004' order represents '0' with '191'
c Var 'agrid_00004_00004' direct represents '0' with '191'
c Var 'agrid_00004_00004' order represents '1' with '192'
-191 192 0
c Var 'agrid_00004_00004' direct represents '1' with '193'
191 -192 193 0
-193 192 0
-193 -191 0
c Var 'agrid_00004_00004' order represents '2' with '194'
-192 194 0
c Var 'agrid_00004_00004' direct represents '2' with '195'
192 -194 195 0
-195 194 0
-195 -192 0
c Var 'agrid_00004_00004' order represents '3' with '196'
-194 196 0
c Var 'agrid_00004_00004' direct represents '3' with '197'
194 -196 197 0
-197 196 0
-197 -194 0
c Var 'agrid_00004_00004' direct represents '4' with '-196'
191 193 195 197 -196 0
c Encoding variable: agrid_00004_00005 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00005' order represents '0' with '198'
c Var 'agrid_00004_00005' direct represents '0' with '198'
c Var 'agrid_00004_00005' order represents '1' with '199'
-198 199 0
c Var 'agrid_00004_00005' direct represents '1' with '200'
198 -199 200 0
-200 199 0
-200 -198 0
c Var 'agrid_00004_00005' order represents '2' with '201'
-199 201 0
c Var 'agrid_00004_00005' direct represents '2' with '202'
199 -201 202 0
-202 201 0
-202 -199 0
c Var 'agrid_00004_00005' order represents '3' with '203'
-201 203 0
c Var 'agrid_00004_00005' direct represents '3' with '204'
201 -203 204 0
-204 203 0
-204 -201 0
c Var 'agrid_00004_00005' direct represents '4' with '-203'
198 200 202 204 -203 0
c Encoding variable: agrid_00004_00006 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00006' order represents '0' with '205'
c Var 'agrid_00004_00006' direct represents '0' with '205'
c Var 'agrid_00004_00006' order represents '1' with '206'
-205 206 0
c Var 'agrid_00004_00006' direct represents '1' with '207'
205 -206 207 0
-207 206 0
-207 -205 0
c Var 'agrid_00004_00006' order represents '2' with '208'
-206 208 0
c Var 'agrid_00004_00006' direct represents '2' with '209'
206 -208 209 0
-209 208 0
-209 -206 0
c Var 'agrid_00004_00006' order represents '3' with '210'
-208 210 0
c Var 'agrid_00004_00006' direct represents '3' with '211'
208 -210 211 0
-211 210 0
-211 -208 0
c Var 'agrid_00004_00006' direct represents '4' with '-210'
205 207 209 211 -210 0
c Encoding variable: agrid_00004_00007 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00007' order represents '0' with '212'
c Var 'agrid_00004_00007' direct represents '0' with '212'
c Var 'agrid_00004_00007' order represents '1' with '213'
-212 213 0
c Var 'agrid_00004_00007' direct represents '1' with '214'
212 -213 214 0
-214 213 0
-214 -212 0
c Var 'agrid_00004_00007' order represents '2' with '215'
-213 215 0
c Var 'agrid_00004_00007' direct represents '2' with '216'
213 -215 216 0
-216 215 0
-216 -213 0
c Var 'agrid_00004_00007' order represents '3' with '217'
-215 217 0
c Var 'agrid_00004_00007' direct represents '3' with '218'
215 -217 218 0
-218 217 0
-218 -215 0
c Var 'agrid_00004_00007' direct represents '4' with '-217'
212 214 216 218 -217 0
c Encoding variable: agrid_00004_00008 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00004_00008' order represents '0' with '219'
c Var 'agrid_00004_00008' direct represents '0' with '219'
c Var 'agrid_00004_00008' order represents '1' with '220'
-219 220 0
c Var 'agrid_00004_00008' direct represents '1' with '221'
219 -220 221 0
-221 220 0
-221 -219 0
c Var 'agrid_00004_00008' order represents '2' with '222'
-220 222 0
c Var 'agrid_00004_00008' direct represents '2' with '223'
220 -222 223 0
-223 222 0
-223 -220 0
c Var 'agrid_00004_00008' order represents '3' with '224'
-222 224 0
c Var 'agrid_00004_00008' direct represents '3' with '225'
222 -224 225 0
-225 224 0
-225 -222 0
c Var 'agrid_00004_00008' direct represents '4' with '-224'
219 221 223 225 -224 0
c Encoding variable: agrid_00005_00001 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00001' order represents '0' with '226'
c Var 'agrid_00005_00001' direct represents '0' with '226'
c Var 'agrid_00005_00001' order represents '1' with '227'
-226 227 0
c Var 'agrid_00005_00001' direct represents '1' with '228'
226 -227 228 0
-228 227 0
-228 -226 0
c Var 'agrid_00005_00001' order represents '2' with '229'
-227 229 0
c Var 'agrid_00005_00001' direct represents '2' with '230'
227 -229 230 0
-230 229 0
-230 -227 0
c Var 'agrid_00005_00001' order represents '3' with '231'
-229 231 0
c Var 'agrid_00005_00001' direct represents '3' with '232'
229 -231 232 0
-232 231 0
-232 -229 0
c Var 'agrid_00005_00001' direct represents '4' with '-231'
226 228 230 232 -231 0
c Encoding variable: agrid_00005_00002 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00002' order represents '0' with '233'
c Var 'agrid_00005_00002' direct represents '0' with '233'
c Var 'agrid_00005_00002' order represents '1' with '234'
-233 234 0
c Var 'agrid_00005_00002' direct represents '1' with '235'
233 -234 235 0
-235 234 0
-235 -233 0
c Var 'agrid_00005_00002' order represents '2' with '236'
-234 236 0
c Var 'agrid_00005_00002' direct represents '2' with '237'
234 -236 237 0
-237 236 0
-237 -234 0
c Var 'agrid_00005_00002' order represents '3' with '238'
-236 238 0
c Var 'agrid_00005_00002' direct represents '3' with '239'
236 -238 239 0
-239 238 0
-239 -236 0
c Var 'agrid_00005_00002' direct represents '4' with '-238'
233 235 237 239 -238 0
c Encoding variable: agrid_00005_00003 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00003' order represents '0' with '240'
c Var 'agrid_00005_00003' direct represents '0' with '240'
c Var 'agrid_00005_00003' order represents '1' with '241'
-240 241 0
c Var 'agrid_00005_00003' direct represents '1' with '242'
240 -241 242 0
-242 241 0
-242 -240 0
c Var 'agrid_00005_00003' order represents '2' with '243'
-241 243 0
c Var 'agrid_00005_00003' direct represents '2' with '244'
241 -243 244 0
-244 243 0
-244 -241 0
c Var 'agrid_00005_00003' order represents '3' with '245'
-243 245 0
c Var 'agrid_00005_00003' direct represents '3' with '246'
243 -245 246 0
-246 245 0
-246 -243 0
c Var 'agrid_00005_00003' direct represents '4' with '-245'
240 242 244 246 -245 0
c Encoding variable: agrid_00005_00004 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00004' order represents '0' with '247'
c Var 'agrid_00005_00004' direct represents '0' with '247'
c Var 'agrid_00005_00004' order represents '1' with '248'
-247 248 0
c Var 'agrid_00005_00004' direct represents '1' with '249'
247 -248 249 0
-249 248 0
-249 -247 0
c Var 'agrid_00005_00004' order represents '2' with '250'
-248 250 0
c Var 'agrid_00005_00004' direct represents '2' with '251'
248 -250 251 0
-251 250 0
-251 -248 0
c Var 'agrid_00005_00004' order represents '3' with '252'
-250 252 0
c Var 'agrid_00005_00004' direct represents '3' with '253'
250 -252 253 0
-253 252 0
-253 -250 0
c Var 'agrid_00005_00004' direct represents '4' with '-252'
247 249 251 253 -252 0
c Encoding variable: agrid_00005_00005 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00005' order represents '0' with '254'
c Var 'agrid_00005_00005' direct represents '0' with '254'
c Var 'agrid_00005_00005' order represents '1' with '255'
-254 255 0
c Var 'agrid_00005_00005' direct represents '1' with '256'
254 -255 256 0
-256 255 0
-256 -254 0
c Var 'agrid_00005_00005' order represents '2' with '257'
-255 257 0
c Var 'agrid_00005_00005' direct represents '2' with '258'
255 -257 258 0
-258 257 0
-258 -255 0
c Var 'agrid_00005_00005' order represents '3' with '259'
-257 259 0
c Var 'agrid_00005_00005' direct represents '3' with '260'
257 -259 260 0
-260 259 0
-260 -257 0
c Var 'agrid_00005_00005' direct represents '4' with '-259'
254 256 258 260 -259 0
c Encoding variable: agrid_00005_00006 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00006' order represents '0' with '261'
c Var 'agrid_00005_00006' direct represents '0' with '261'
c Var 'agrid_00005_00006' order represents '1' with '262'
-261 262 0
c Var 'agrid_00005_00006' direct represents '1' with '263'
261 -262 263 0
-263 262 0
-263 -261 0
c Var 'agrid_00005_00006' order represents '2' with '264'
-262 264 0
c Var 'agrid_00005_00006' direct represents '2' with '265'
262 -264 265 0
-265 264 0
-265 -262 0
c Var 'agrid_00005_00006' order represents '3' with '266'
-264 266 0
c Var 'agrid_00005_00006' direct represents '3' with '267'
264 -266 267 0
-267 266 0
-267 -264 0
c Var 'agrid_00005_00006' direct represents '4' with '-266'
261 263 265 267 -266 0
c Encoding variable: agrid_00005_00007 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00007' order represents '0' with '268'
c Var 'agrid_00005_00007' direct represents '0' with '268'
c Var 'agrid_00005_00007' order represents '1' with '269'
-268 269 0
c Var 'agrid_00005_00007' direct represents '1' with '270'
268 -269 270 0
-270 269 0
-270 -268 0
c Var 'agrid_00005_00007' order represents '2' with '271'
-269 271 0
c Var 'agrid_00005_00007' direct represents '2' with '272'
269 -271 272 0
-272 271 0
-272 -269 0
c Var 'agrid_00005_00007' order represents '3' with '273'
-271 273 0
c Var 'agrid_00005_00007' direct represents '3' with '274'
271 -273 274 0
-274 273 0
-274 -271 0
c Var 'agrid_00005_00007' direct represents '4' with '-273'
268 270 272 274 -273 0
c Encoding variable: agrid_00005_00008 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00005_00008' order represents '0' with '275'
c Var 'agrid_00005_00008' direct represents '0' with '275'
c Var 'agrid_00005_00008' order represents '1' with '276'
-275 276 0
c Var 'agrid_00005_00008' direct represents '1' with '277'
275 -276 277 0
-277 276 0
-277 -275 0
c Var 'agrid_00005_00008' order represents '2' with '278'
-276 278 0
c Var 'agrid_00005_00008' direct represents '2' with '279'
276 -278 279 0
-279 278 0
-279 -276 0
c Var 'agrid_00005_00008' order represents '3' with '280'
-278 280 0
c Var 'agrid_00005_00008' direct represents '3' with '281'
278 -280 281 0
-281 280 0
-281 -278 0
c Var 'agrid_00005_00008' direct represents '4' with '-280'
275 277 279 281 -280 0
c Encoding variable: agrid_00006_00001 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00001' order represents '0' with '282'
c Var 'agrid_00006_00001' direct represents '0' with '282'
c Var 'agrid_00006_00001' order represents '1' with '283'
-282 283 0
c Var 'agrid_00006_00001' direct represents '1' with '284'
282 -283 284 0
-284 283 0
-284 -282 0
c Var 'agrid_00006_00001' order represents '2' with '285'
-283 285 0
c Var 'agrid_00006_00001' direct represents '2' with '286'
283 -285 286 0
-286 285 0
-286 -283 0
c Var 'agrid_00006_00001' order represents '3' with '287'
-285 287 0
c Var 'agrid_00006_00001' direct represents '3' with '288'
285 -287 288 0
-288 287 0
-288 -285 0
c Var 'agrid_00006_00001' direct represents '4' with '-287'
282 284 286 288 -287 0
c Encoding variable: agrid_00006_00002 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00002' order represents '0' with '289'
c Var 'agrid_00006_00002' direct represents '0' with '289'
c Var 'agrid_00006_00002' order represents '1' with '290'
-289 290 0
c Var 'agrid_00006_00002' direct represents '1' with '291'
289 -290 291 0
-291 290 0
-291 -289 0
c Var 'agrid_00006_00002' order represents '2' with '292'
-290 292 0
c Var 'agrid_00006_00002' direct represents '2' with '293'
290 -292 293 0
-293 292 0
-293 -290 0
c Var 'agrid_00006_00002' order represents '3' with '294'
-292 294 0
c Var 'agrid_00006_00002' direct represents '3' with '295'
292 -294 295 0
-295 294 0
-295 -292 0
c Var 'agrid_00006_00002' direct represents '4' with '-294'
289 291 293 295 -294 0
c Encoding variable: agrid_00006_00003 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00003' order represents '0' with '296'
c Var 'agrid_00006_00003' direct represents '0' with '296'
c Var 'agrid_00006_00003' order represents '1' with '297'
-296 297 0
c Var 'agrid_00006_00003' direct represents '1' with '298'
296 -297 298 0
-298 297 0
-298 -296 0
c Var 'agrid_00006_00003' order represents '2' with '299'
-297 299 0
c Var 'agrid_00006_00003' direct represents '2' with '300'
297 -299 300 0
-300 299 0
-300 -297 0
c Var 'agrid_00006_00003' order represents '3' with '301'
-299 301 0
c Var 'agrid_00006_00003' direct represents '3' with '302'
299 -301 302 0
-302 301 0
-302 -299 0
c Var 'agrid_00006_00003' direct represents '4' with '-301'
296 298 300 302 -301 0
c Encoding variable: agrid_00006_00004 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00004' order represents '0' with '303'
c Var 'agrid_00006_00004' direct represents '0' with '303'
c Var 'agrid_00006_00004' order represents '1' with '304'
-303 304 0
c Var 'agrid_00006_00004' direct represents '1' with '305'
303 -304 305 0
-305 304 0
-305 -303 0
c Var 'agrid_00006_00004' order represents '2' with '306'
-304 306 0
c Var 'agrid_00006_00004' direct represents '2' with '307'
304 -306 307 0
-307 306 0
-307 -304 0
c Var 'agrid_00006_00004' order represents '3' with '308'
-306 308 0
c Var 'agrid_00006_00004' direct represents '3' with '309'
306 -308 309 0
-309 308 0
-309 -306 0
c Var 'agrid_00006_00004' direct represents '4' with '-308'
303 305 307 309 -308 0
c Encoding variable: agrid_00006_00005 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00005' order represents '0' with '310'
c Var 'agrid_00006_00005' direct represents '0' with '310'
c Var 'agrid_00006_00005' order represents '1' with '311'
-310 311 0
c Var 'agrid_00006_00005' direct represents '1' with '312'
310 -311 312 0
-312 311 0
-312 -310 0
c Var 'agrid_00006_00005' order represents '2' with '313'
-311 313 0
c Var 'agrid_00006_00005' direct represents '2' with '314'
311 -313 314 0
-314 313 0
-314 -311 0
c Var 'agrid_00006_00005' order represents '3' with '315'
-313 315 0
c Var 'agrid_00006_00005' direct represents '3' with '316'
313 -315 316 0
-316 315 0
-316 -313 0
c Var 'agrid_00006_00005' direct represents '4' with '-315'
310 312 314 316 -315 0
c Encoding variable: agrid_00006_00006 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00006' order represents '0' with '317'
c Var 'agrid_00006_00006' direct represents '0' with '317'
c Var 'agrid_00006_00006' order represents '1' with '318'
-317 318 0
c Var 'agrid_00006_00006' direct represents '1' with '319'
317 -318 319 0
-319 318 0
-319 -317 0
c Var 'agrid_00006_00006' order represents '2' with '320'
-318 320 0
c Var 'agrid_00006_00006' direct represents '2' with '321'
318 -320 321 0
-321 320 0
-321 -318 0
c Var 'agrid_00006_00006' order represents '3' with '322'
-320 322 0
c Var 'agrid_00006_00006' direct represents '3' with '323'
320 -322 323 0
-323 322 0
-323 -320 0
c Var 'agrid_00006_00006' direct represents '4' with '-322'
317 319 321 323 -322 0
c Encoding variable: agrid_00006_00007 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00007' order represents '0' with '324'
c Var 'agrid_00006_00007' direct represents '0' with '324'
c Var 'agrid_00006_00007' order represents '1' with '325'
-324 325 0
c Var 'agrid_00006_00007' direct represents '1' with '326'
324 -325 326 0
-326 325 0
-326 -324 0
c Var 'agrid_00006_00007' order represents '2' with '327'
-325 327 0
c Var 'agrid_00006_00007' direct represents '2' with '328'
325 -327 328 0
-328 327 0
-328 -325 0
c Var 'agrid_00006_00007' order represents '3' with '329'
-327 329 0
c Var 'agrid_00006_00007' direct represents '3' with '330'
327 -329 330 0
-330 329 0
-330 -327 0
c Var 'agrid_00006_00007' direct represents '4' with '-329'
324 326 328 330 -329 0
c Encoding variable: agrid_00006_00008 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00006_00008' order represents '0' with '331'
c Var 'agrid_00006_00008' direct represents '0' with '331'
c Var 'agrid_00006_00008' order represents '1' with '332'
-331 332 0
c Var 'agrid_00006_00008' direct represents '1' with '333'
331 -332 333 0
-333 332 0
-333 -331 0
c Var 'agrid_00006_00008' order represents '2' with '334'
-332 334 0
c Var 'agrid_00006_00008' direct represents '2' with '335'
332 -334 335 0
-335 334 0
-335 -332 0
c Var 'agrid_00006_00008' order represents '3' with '336'
-334 336 0
c Var 'agrid_00006_00008' direct represents '3' with '337'
334 -336 337 0
-337 336 0
-337 -334 0
c Var 'agrid_00006_00008' direct represents '4' with '-336'
331 333 335 337 -336 0
c Encoding variable: agrid_00007_00001 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00007_00001' order represents '0' with '338'
c Var 'agrid_00007_00001' direct represents '0' with '338'
c Var 'agrid_00007_00001' order represents '1' with '339'
-338 339 0
c Var 'agrid_00007_00001' direct represents '1' with '340'
338 -339 340 0
-340 339 0
-340 -338 0
c Var 'agrid_00007_00001' order represents '2' with '341'
-339 341 0
c Var 'agrid_00007_00001' direct represents '2' with '342'
339 -341 342 0
-342 341 0
-342 -339 0
c Var 'agrid_00007_00001' order represents '3' with '343'
-341 343 0
c Var 'agrid_00007_00001' direct represents '3' with '344'
341 -343 344 0
-344 343 0
-344 -341 0
c Var 'agrid_00007_00001' direct represents '4' with '-343'
338 340 342 344 -343 0
c Encoding variable: agrid_00007_00002 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00007_00002' order represents '0' with '345'
c Var 'agrid_00007_00002' direct represents '0' with '345'
c Var 'agrid_00007_00002' order represents '1' with '346'
-345 346 0
c Var 'agrid_00007_00002' direct represents '1' with '347'
345 -346 347 0
-347 346 0
-347 -345 0
c Var 'agrid_00007_00002' order represents '2' with '348'
-346 348 0
c Var 'agrid_00007_00002' direct represents '2' with '349'
346 -348 349 0
-349 348 0
-349 -346 0
c Var 'agrid_00007_00002' order represents '3' with '350'
-348 350 0
c Var 'agrid_00007_00002' direct represents '3' with '351'
348 -350 351 0
-351 350 0
-351 -348 0
c Var 'agrid_00007_00002' direct represents '4' with '-350'
345 347 349 351 -350 0
c Encoding variable: agrid_00007_00003 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00007_00003' order represents '0' with '352'
c Var 'agrid_00007_00003' direct represents '0' with '352'
c Var 'agrid_00007_00003' order represents '1' with '353'
-352 353 0
c Var 'agrid_00007_00003' direct represents '1' with '354'
352 -353 354 0
-354 353 0
-354 -352 0
c Var 'agrid_00007_00003' order represents '2' with '355'
-353 355 0
c Var 'agrid_00007_00003' direct represents '2' with '356'
353 -355 356 0
-356 355 0
-356 -353 0
c Var 'agrid_00007_00003' order represents '3' with '357'
-355 357 0
c Var 'agrid_00007_00003' direct represents '3' with '358'
355 -357 358 0
-358 357 0
-358 -355 0
c Var 'agrid_00007_00003' direct represents '4' with '-357'
352 354 356 358 -357 0
c Encoding variable: agrid_00007_00004 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00007_00004' order represents '0' with '359'
c Var 'agrid_00007_00004' direct represents '0' with '359'
c Var 'agrid_00007_00004' order represents '1' with '360'
-359 360 0
c Var 'agrid_00007_00004' direct represents '1' with '361'
359 -360 361 0
-361 360 0
-361 -359 0
c Var 'agrid_00007_00004' order represents '2' with '362'
-360 362 0
c Var 'agrid_00007_00004' direct represents '2' with '363'
360 -362 363 0
-363 362 0
-363 -360 0
c Var 'agrid_00007_00004' order represents '3' with '364'
-362 364 0
c Var 'agrid_00007_00004' direct represents '3' with '365'
362 -364 365 0
-365 364 0
-365 -362 0
c Var 'agrid_00007_00004' direct represents '4' with '-364'
359 361 363 365 -364 0
c Encoding variable: agrid_00007_00005 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00007_00005' order represents '0' with '366'
c Var 'agrid_00007_00005' direct represents '0' with '366'
c Var 'agrid_00007_00005' order represents '1' with '367'
-366 367 0
c Var 'agrid_00007_00005' direct represents '1' with '368'
366 -367 368 0
-368 367 0
-368 -366 0
c Var 'agrid_00007_00005' order represents '2' with '369'
-367 369 0
c Var 'agrid_00007_00005' direct represents '2' with '370'
367 -369 370 0
-370 369 0
-370 -367 0
c Var 'agrid_00007_00005' order represents '3' with '371'
-369 371 0
c Var 'agrid_00007_00005' direct represents '3' with '372'
369 -371 372 0
-372 371 0
-372 -369 0
c Var 'agrid_00007_00005' direct represents '4' with '-371'
366 368 370 372 -371 0
c Encoding variable: agrid_00007_00006 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00007_00006' order represents '0' with '373'
c Var 'agrid_00007_00006' direct represents '0' with '373'
c Var 'agrid_00007_00006' order represents '1' with '374'
-373 374 0
c Var 'agrid_00007_00006' direct represents '1' with '375'
373 -374 375 0
-375 374 0
-375 -373 0
c Var 'agrid_00007_00006' order represents '2' with '376'
-374 376 0
c Var 'agrid_00007_00006' direct represents '2' with '377'
374 -376 377 0
-377 376 0
-377 -374 0
c Var 'agrid_00007_00006' order represents '3' with '378'
-376 378 0
c Var 'agrid_00007_00006' direct represents '3' with '379'
376 -378 379 0
-379 378 0
-379 -376 0
c Var 'agrid_00007_00006' direct represents '4' with '-378'
373 375 377 379 -378 0
c Encoding variable: agrid_00007_00007 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00007_00007' order represents '0' with '380'
c Var 'agrid_00007_00007' direct represents '0' with '380'
c Var 'agrid_00007_00007' order represents '1' with '381'
-380 381 0
c Var 'agrid_00007_00007' direct represents '1' with '382'
380 -381 382 0
-382 381 0
-382 -380 0
c Var 'agrid_00007_00007' order represents '2' with '383'
-381 383 0
c Var 'agrid_00007_00007' direct represents '2' with '384'
381 -383 384 0
-384 383 0
-384 -381 0
c Var 'agrid_00007_00007' order represents '3' with '385'
-383 385 0
c Var 'agrid_00007_00007' direct represents '3' with '386'
383 -385 386 0
-386 385 0
-386 -383 0
c Var 'agrid_00007_00007' direct represents '4' with '-385'
380 382 384 386 -385 0
c Encoding variable: agrid_00007_00008 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00007_00008' order represents '0' with '387'
c Var 'agrid_00007_00008' direct represents '0' with '387'
c Var 'agrid_00007_00008' order represents '1' with '388'
-387 388 0
c Var 'agrid_00007_00008' direct represents '1' with '389'
387 -388 389 0
-389 388 0
-389 -387 0
c Var 'agrid_00007_00008' order represents '2' with '390'
-388 390 0
c Var 'agrid_00007_00008' direct represents '2' with '391'
388 -390 391 0
-391 390 0
-391 -388 0
c Var 'agrid_00007_00008' order represents '3' with '392'
-390 392 0
c Var 'agrid_00007_00008' direct represents '3' with '393'
390 -392 393 0
-393 392 0
-393 -390 0
c Var 'agrid_00007_00008' direct represents '4' with '-392'
387 389 391 393 -392 0
c Encoding variable: agrid_00008_00001 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00008_00001' order represents '0' with '394'
c Var 'agrid_00008_00001' direct represents '0' with '394'
c Var 'agrid_00008_00001' order represents '1' with '395'
-394 395 0
c Var 'agrid_00008_00001' direct represents '1' with '396'
394 -395 396 0
-396 395 0
-396 -394 0
c Var 'agrid_00008_00001' order represents '2' with '397'
-395 397 0
c Var 'agrid_00008_00001' direct represents '2' with '398'
395 -397 398 0
-398 397 0
-398 -395 0
c Var 'agrid_00008_00001' order represents '3' with '399'
-397 399 0
c Var 'agrid_00008_00001' direct represents '3' with '400'
397 -399 400 0
-400 399 0
-400 -397 0
c Var 'agrid_00008_00001' direct represents '4' with '-399'
394 396 398 400 -399 0
c Encoding variable: agrid_00008_00002 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00008_00002' order represents '0' with '401'
c Var 'agrid_00008_00002' direct represents '0' with '401'
c Var 'agrid_00008_00002' order represents '1' with '402'
-401 402 0
c Var 'agrid_00008_00002' direct represents '1' with '403'
401 -402 403 0
-403 402 0
-403 -401 0
c Var 'agrid_00008_00002' order represents '2' with '404'
-402 404 0
c Var 'agrid_00008_00002' direct represents '2' with '405'
402 -404 405 0
-405 404 0
-405 -402 0
c Var 'agrid_00008_00002' order represents '3' with '406'
-404 406 0
c Var 'agrid_00008_00002' direct represents '3' with '407'
404 -406 407 0
-407 406 0
-407 -404 0
c Var 'agrid_00008_00002' direct represents '4' with '-406'
401 403 405 407 -406 0
c Encoding variable: agrid_00008_00003 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00008_00003' order represents '0' with '408'
c Var 'agrid_00008_00003' direct represents '0' with '408'
c Var 'agrid_00008_00003' order represents '1' with '409'
-408 409 0
c Var 'agrid_00008_00003' direct represents '1' with '410'
408 -409 410 0
-410 409 0
-410 -408 0
c Var 'agrid_00008_00003' order represents '2' with '411'
-409 411 0
c Var 'agrid_00008_00003' direct represents '2' with '412'
409 -411 412 0
-412 411 0
-412 -409 0
c Var 'agrid_00008_00003' order represents '3' with '413'
-411 413 0
c Var 'agrid_00008_00003' direct represents '3' with '414'
411 -413 414 0
-414 413 0
-414 -411 0
c Var 'agrid_00008_00003' direct represents '4' with '-413'
408 410 412 414 -413 0
c Encoding variable: agrid_00008_00004 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00008_00004' order represents '0' with '415'
c Var 'agrid_00008_00004' direct represents '0' with '415'
c Var 'agrid_00008_00004' order represents '1' with '416'
-415 416 0
c Var 'agrid_00008_00004' direct represents '1' with '417'
415 -416 417 0
-417 416 0
-417 -415 0
c Var 'agrid_00008_00004' order represents '2' with '418'
-416 418 0
c Var 'agrid_00008_00004' direct represents '2' with '419'
416 -418 419 0
-419 418 0
-419 -416 0
c Var 'agrid_00008_00004' order represents '3' with '420'
-418 420 0
c Var 'agrid_00008_00004' direct represents '3' with '421'
418 -420 421 0
-421 420 0
-421 -418 0
c Var 'agrid_00008_00004' direct represents '4' with '-420'
415 417 419 421 -420 0
c Encoding variable: agrid_00008_00005 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00008_00005' order represents '0' with '422'
c Var 'agrid_00008_00005' direct represents '0' with '422'
c Var 'agrid_00008_00005' order represents '1' with '423'
-422 423 0
c Var 'agrid_00008_00005' direct represents '1' with '424'
422 -423 424 0
-424 423 0
-424 -422 0
c Var 'agrid_00008_00005' order represents '2' with '425'
-423 425 0
c Var 'agrid_00008_00005' direct represents '2' with '426'
423 -425 426 0
-426 425 0
-426 -423 0
c Var 'agrid_00008_00005' order represents '3' with '427'
-425 427 0
c Var 'agrid_00008_00005' direct represents '3' with '428'
425 -427 428 0
-428 427 0
-428 -425 0
c Var 'agrid_00008_00005' direct represents '4' with '-427'
422 424 426 428 -427 0
c Encoding variable: agrid_00008_00006 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00008_00006' order represents '0' with '429'
c Var 'agrid_00008_00006' direct represents '0' with '429'
c Var 'agrid_00008_00006' order represents '1' with '430'
-429 430 0
c Var 'agrid_00008_00006' direct represents '1' with '431'
429 -430 431 0
-431 430 0
-431 -429 0
c Var 'agrid_00008_00006' order represents '2' with '432'
-430 432 0
c Var 'agrid_00008_00006' direct represents '2' with '433'
430 -432 433 0
-433 432 0
-433 -430 0
c Var 'agrid_00008_00006' order represents '3' with '434'
-432 434 0
c Var 'agrid_00008_00006' direct represents '3' with '435'
432 -434 435 0
-435 434 0
-435 -432 0
c Var 'agrid_00008_00006' direct represents '4' with '-434'
429 431 433 435 -434 0
c Encoding variable: agrid_00008_00007 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00008_00007' order represents '0' with '436'
c Var 'agrid_00008_00007' direct represents '0' with '436'
c Var 'agrid_00008_00007' order represents '1' with '437'
-436 437 0
c Var 'agrid_00008_00007' direct represents '1' with '438'
436 -437 438 0
-438 437 0
-438 -436 0
c Var 'agrid_00008_00007' order represents '2' with '439'
-437 439 0
c Var 'agrid_00008_00007' direct represents '2' with '440'
437 -439 440 0
-440 439 0
-440 -437 0
c Var 'agrid_00008_00007' order represents '3' with '441'
-439 441 0
c Var 'agrid_00008_00007' direct represents '3' with '442'
439 -441 442 0
-442 441 0
-442 -439 0
c Var 'agrid_00008_00007' direct represents '4' with '-441'
436 438 440 442 -441 0
c Encoding variable: agrid_00008_00008 with domain: int(0..4) (representing constraint )
c Both direct and order encoding.
c Var 'agrid_00008_00008' order represents '0' with '443'
c Var 'agrid_00008_00008' direct represents '0' with '443'
c Var 'agrid_00008_00008' order represents '1' with '444'
-443 444 0
c Var 'agrid_00008_00008' direct represents '1' with '445'
443 -444 445 0
-445 444 0
-445 -443 0
c Var 'agrid_00008_00008' order represents '2' with '446'
-444 446 0
c Var 'agrid_00008_00008' direct represents '2' with '447'
444 -446 447 0
-447 446 0
-447 -444 0
c Var 'agrid_00008_00008' order represents '3' with '448'
-446 448 0
c Var 'agrid_00008_00008' direct represents '3' with '449'
446 -448 449 0
-449 448 0
-449 -446 0
c Var 'agrid_00008_00008' direct represents '4' with '-448'
443 445 447 449 -448 0
c Encoding variable: sij_00000_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00000' direct represents '0' with '450'
450 0
c Encoding variable: sij_00000_00001 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00001' direct represents '0' with '451'
451 0
c Encoding variable: sij_00000_00002 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00002' direct represents '0' with '452'
452 0
c Encoding variable: sij_00000_00003 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00003' direct represents '0' with '453'
453 0
c Encoding variable: sij_00000_00004 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00004' direct represents '0' with '454'
454 0
c Encoding variable: sij_00000_00005 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00005' direct represents '0' with '455'
455 0
c Encoding variable: sij_00000_00006 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00006' direct represents '0' with '456'
456 0
c Encoding variable: sij_00000_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00007' direct represents '0' with '457'
457 0
c Encoding variable: sij_00000_00008 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00008' direct represents '0' with '458'
458 0
c Encoding variable: sij_00000_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00000_00009' direct represents '0' with '459'
459 0
c Encoding variable: sij_00001_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00001_00000' direct represents '0' with '460'
460 0
c Encoding variable: sij_00001_00001 with domain: bool (representing constraint )
c Var 'sij_00001_00001' direct represents '0' with '-461'
c Var 'sij_00001_00001' direct represents '1' with '461'
c Var 'sij_00001_00001' order represents '1' with '1'
c Var 'sij_00001_00001' order represents '0' with '-461'
c Encoding variable: sij_00001_00002 with domain: bool (representing constraint )
c Var 'sij_00001_00002' direct represents '0' with '-462'
c Var 'sij_00001_00002' direct represents '1' with '462'
c Var 'sij_00001_00002' order represents '1' with '1'
c Var 'sij_00001_00002' order represents '0' with '-462'
c Encoding variable: sij_00001_00003 with domain: bool (representing constraint )
c Var 'sij_00001_00003' direct represents '0' with '-463'
c Var 'sij_00001_00003' direct represents '1' with '463'
c Var 'sij_00001_00003' order represents '1' with '1'
c Var 'sij_00001_00003' order represents '0' with '-463'
c Encoding variable: sij_00001_00004 with domain: bool (representing constraint )
c Var 'sij_00001_00004' direct represents '0' with '-464'
c Var 'sij_00001_00004' direct represents '1' with '464'
c Var 'sij_00001_00004' order represents '1' with '1'
c Var 'sij_00001_00004' order represents '0' with '-464'
c Encoding variable: sij_00001_00005 with domain: bool (representing constraint )
c Var 'sij_00001_00005' direct represents '0' with '-465'
c Var 'sij_00001_00005' direct represents '1' with '465'
c Var 'sij_00001_00005' order represents '1' with '1'
c Var 'sij_00001_00005' order represents '0' with '-465'
c Encoding variable: sij_00001_00006 with domain: bool (representing constraint )
c Var 'sij_00001_00006' direct represents '0' with '-466'
c Var 'sij_00001_00006' direct represents '1' with '466'
c Var 'sij_00001_00006' order represents '1' with '1'
c Var 'sij_00001_00006' order represents '0' with '-466'
c Encoding variable: sij_00001_00007 with domain: bool (representing constraint )
c Var 'sij_00001_00007' direct represents '0' with '-467'
c Var 'sij_00001_00007' direct represents '1' with '467'
c Var 'sij_00001_00007' order represents '1' with '1'
c Var 'sij_00001_00007' order represents '0' with '-467'
c Encoding variable: sij_00001_00008 with domain: bool (representing constraint )
c Var 'sij_00001_00008' direct represents '0' with '-468'
c Var 'sij_00001_00008' direct represents '1' with '468'
c Var 'sij_00001_00008' order represents '1' with '1'
c Var 'sij_00001_00008' order represents '0' with '-468'
c Encoding variable: sij_00001_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00001_00009' direct represents '0' with '469'
469 0
c Encoding variable: sij_00002_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00002_00000' direct represents '0' with '470'
470 0
c Encoding variable: sij_00002_00001 with domain: bool (representing constraint )
c Var 'sij_00002_00001' direct represents '0' with '-471'
c Var 'sij_00002_00001' direct represents '1' with '471'
c Var 'sij_00002_00001' order represents '1' with '1'
c Var 'sij_00002_00001' order represents '0' with '-471'
c Encoding variable: sij_00002_00002 with domain: bool (representing constraint )
c Var 'sij_00002_00002' direct represents '0' with '-472'
c Var 'sij_00002_00002' direct represents '1' with '472'
c Var 'sij_00002_00002' order represents '1' with '1'
c Var 'sij_00002_00002' order represents '0' with '-472'
c Encoding variable: sij_00002_00003 with domain: bool (representing constraint )
c Var 'sij_00002_00003' direct represents '0' with '-473'
c Var 'sij_00002_00003' direct represents '1' with '473'
c Var 'sij_00002_00003' order represents '1' with '1'
c Var 'sij_00002_00003' order represents '0' with '-473'
c Encoding variable: sij_00002_00004 with domain: bool (representing constraint )
c Var 'sij_00002_00004' direct represents '0' with '-474'
c Var 'sij_00002_00004' direct represents '1' with '474'
c Var 'sij_00002_00004' order represents '1' with '1'
c Var 'sij_00002_00004' order represents '0' with '-474'
c Encoding variable: sij_00002_00005 with domain: bool (representing constraint )
c Var 'sij_00002_00005' direct represents '0' with '-475'
c Var 'sij_00002_00005' direct represents '1' with '475'
c Var 'sij_00002_00005' order represents '1' with '1'
c Var 'sij_00002_00005' order represents '0' with '-475'
c Encoding variable: sij_00002_00006 with domain: bool (representing constraint )
c Var 'sij_00002_00006' direct represents '0' with '-476'
c Var 'sij_00002_00006' direct represents '1' with '476'
c Var 'sij_00002_00006' order represents '1' with '1'
c Var 'sij_00002_00006' order represents '0' with '-476'
c Encoding variable: sij_00002_00007 with domain: bool (representing constraint )
c Var 'sij_00002_00007' direct represents '0' with '-477'
c Var 'sij_00002_00007' direct represents '1' with '477'
c Var 'sij_00002_00007' order represents '1' with '1'
c Var 'sij_00002_00007' order represents '0' with '-477'
c Encoding variable: sij_00002_00008 with domain: bool (representing constraint )
c Var 'sij_00002_00008' direct represents '0' with '-478'
c Var 'sij_00002_00008' direct represents '1' with '478'
c Var 'sij_00002_00008' order represents '1' with '1'
c Var 'sij_00002_00008' order represents '0' with '-478'
c Encoding variable: sij_00002_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00002_00009' direct represents '0' with '479'
479 0
c Encoding variable: sij_00003_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00003_00000' direct represents '0' with '480'
480 0
c Encoding variable: sij_00003_00001 with domain: bool (representing constraint )
c Var 'sij_00003_00001' direct represents '0' with '-481'
c Var 'sij_00003_00001' direct represents '1' with '481'
c Var 'sij_00003_00001' order represents '1' with '1'
c Var 'sij_00003_00001' order represents '0' with '-481'
c Encoding variable: sij_00003_00002 with domain: bool (representing constraint )
c Var 'sij_00003_00002' direct represents '0' with '-482'
c Var 'sij_00003_00002' direct represents '1' with '482'
c Var 'sij_00003_00002' order represents '1' with '1'
c Var 'sij_00003_00002' order represents '0' with '-482'
c Encoding variable: sij_00003_00003 with domain: bool (representing constraint )
c Var 'sij_00003_00003' direct represents '0' with '-483'
c Var 'sij_00003_00003' direct represents '1' with '483'
c Var 'sij_00003_00003' order represents '1' with '1'
c Var 'sij_00003_00003' order represents '0' with '-483'
c Encoding variable: sij_00003_00004 with domain: bool (representing constraint )
c Var 'sij_00003_00004' direct represents '0' with '-484'
c Var 'sij_00003_00004' direct represents '1' with '484'
c Var 'sij_00003_00004' order represents '1' with '1'
c Var 'sij_00003_00004' order represents '0' with '-484'
c Encoding variable: sij_00003_00005 with domain: bool (representing constraint )
c Var 'sij_00003_00005' direct represents '0' with '-485'
c Var 'sij_00003_00005' direct represents '1' with '485'
c Var 'sij_00003_00005' order represents '1' with '1'
c Var 'sij_00003_00005' order represents '0' with '-485'
c Encoding variable: sij_00003_00006 with domain: bool (representing constraint )
c Var 'sij_00003_00006' direct represents '0' with '-486'
c Var 'sij_00003_00006' direct represents '1' with '486'
c Var 'sij_00003_00006' order represents '1' with '1'
c Var 'sij_00003_00006' order represents '0' with '-486'
c Encoding variable: sij_00003_00007 with domain: bool (representing constraint )
c Var 'sij_00003_00007' direct represents '0' with '-487'
c Var 'sij_00003_00007' direct represents '1' with '487'
c Var 'sij_00003_00007' order represents '1' with '1'
c Var 'sij_00003_00007' order represents '0' with '-487'
c Encoding variable: sij_00003_00008 with domain: bool (representing constraint )
c Var 'sij_00003_00008' direct represents '0' with '-488'
c Var 'sij_00003_00008' direct represents '1' with '488'
c Var 'sij_00003_00008' order represents '1' with '1'
c Var 'sij_00003_00008' order represents '0' with '-488'
c Encoding variable: sij_00003_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00003_00009' direct represents '0' with '489'
489 0
c Encoding variable: sij_00004_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00004_00000' direct represents '0' with '490'
490 0
c Encoding variable: sij_00004_00001 with domain: bool (representing constraint )
c Var 'sij_00004_00001' direct represents '0' with '-491'
c Var 'sij_00004_00001' direct represents '1' with '491'
c Var 'sij_00004_00001' order represents '1' with '1'
c Var 'sij_00004_00001' order represents '0' with '-491'
c Encoding variable: sij_00004_00002 with domain: bool (representing constraint )
c Var 'sij_00004_00002' direct represents '0' with '-492'
c Var 'sij_00004_00002' direct represents '1' with '492'
c Var 'sij_00004_00002' order represents '1' with '1'
c Var 'sij_00004_00002' order represents '0' with '-492'
c Encoding variable: sij_00004_00003 with domain: bool (representing constraint )
c Var 'sij_00004_00003' direct represents '0' with '-493'
c Var 'sij_00004_00003' direct represents '1' with '493'
c Var 'sij_00004_00003' order represents '1' with '1'
c Var 'sij_00004_00003' order represents '0' with '-493'
c Encoding variable: sij_00004_00004 with domain: bool (representing constraint )
c Var 'sij_00004_00004' direct represents '0' with '-494'
c Var 'sij_00004_00004' direct represents '1' with '494'
c Var 'sij_00004_00004' order represents '1' with '1'
c Var 'sij_00004_00004' order represents '0' with '-494'
c Encoding variable: sij_00004_00005 with domain: bool (representing constraint )
c Var 'sij_00004_00005' direct represents '0' with '-495'
c Var 'sij_00004_00005' direct represents '1' with '495'
c Var 'sij_00004_00005' order represents '1' with '1'
c Var 'sij_00004_00005' order represents '0' with '-495'
c Encoding variable: sij_00004_00006 with domain: bool (representing constraint )
c Var 'sij_00004_00006' direct represents '0' with '-496'
c Var 'sij_00004_00006' direct represents '1' with '496'
c Var 'sij_00004_00006' order represents '1' with '1'
c Var 'sij_00004_00006' order represents '0' with '-496'
c Encoding variable: sij_00004_00007 with domain: bool (representing constraint )
c Var 'sij_00004_00007' direct represents '0' with '-497'
c Var 'sij_00004_00007' direct represents '1' with '497'
c Var 'sij_00004_00007' order represents '1' with '1'
c Var 'sij_00004_00007' order represents '0' with '-497'
c Encoding variable: sij_00004_00008 with domain: bool (representing constraint )
c Var 'sij_00004_00008' direct represents '0' with '-498'
c Var 'sij_00004_00008' direct represents '1' with '498'
c Var 'sij_00004_00008' order represents '1' with '1'
c Var 'sij_00004_00008' order represents '0' with '-498'
c Encoding variable: sij_00004_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00004_00009' direct represents '0' with '499'
499 0
c Encoding variable: sij_00005_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00005_00000' direct represents '0' with '500'
500 0
c Encoding variable: sij_00005_00001 with domain: bool (representing constraint )
c Var 'sij_00005_00001' direct represents '0' with '-501'
c Var 'sij_00005_00001' direct represents '1' with '501'
c Var 'sij_00005_00001' order represents '1' with '1'
c Var 'sij_00005_00001' order represents '0' with '-501'
c Encoding variable: sij_00005_00002 with domain: bool (representing constraint )
c Var 'sij_00005_00002' direct represents '0' with '-502'
c Var 'sij_00005_00002' direct represents '1' with '502'
c Var 'sij_00005_00002' order represents '1' with '1'
c Var 'sij_00005_00002' order represents '0' with '-502'
c Encoding variable: sij_00005_00003 with domain: bool (representing constraint )
c Var 'sij_00005_00003' direct represents '0' with '-503'
c Var 'sij_00005_00003' direct represents '1' with '503'
c Var 'sij_00005_00003' order represents '1' with '1'
c Var 'sij_00005_00003' order represents '0' with '-503'
c Encoding variable: sij_00005_00004 with domain: bool (representing constraint )
c Var 'sij_00005_00004' direct represents '0' with '-504'
c Var 'sij_00005_00004' direct represents '1' with '504'
c Var 'sij_00005_00004' order represents '1' with '1'
c Var 'sij_00005_00004' order represents '0' with '-504'
c Encoding variable: sij_00005_00005 with domain: bool (representing constraint )
c Var 'sij_00005_00005' direct represents '0' with '-505'
c Var 'sij_00005_00005' direct represents '1' with '505'
c Var 'sij_00005_00005' order represents '1' with '1'
c Var 'sij_00005_00005' order represents '0' with '-505'
c Encoding variable: sij_00005_00006 with domain: bool (representing constraint )
c Var 'sij_00005_00006' direct represents '0' with '-506'
c Var 'sij_00005_00006' direct represents '1' with '506'
c Var 'sij_00005_00006' order represents '1' with '1'
c Var 'sij_00005_00006' order represents '0' with '-506'
c Encoding variable: sij_00005_00007 with domain: bool (representing constraint )
c Var 'sij_00005_00007' direct represents '0' with '-507'
c Var 'sij_00005_00007' direct represents '1' with '507'
c Var 'sij_00005_00007' order represents '1' with '1'
c Var 'sij_00005_00007' order represents '0' with '-507'
c Encoding variable: sij_00005_00008 with domain: bool (representing constraint )
c Var 'sij_00005_00008' direct represents '0' with '-508'
c Var 'sij_00005_00008' direct represents '1' with '508'
c Var 'sij_00005_00008' order represents '1' with '1'
c Var 'sij_00005_00008' order represents '0' with '-508'
c Encoding variable: sij_00005_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00005_00009' direct represents '0' with '509'
509 0
c Encoding variable: sij_00006_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00006_00000' direct represents '0' with '510'
510 0
c Encoding variable: sij_00006_00001 with domain: bool (representing constraint )
c Var 'sij_00006_00001' direct represents '0' with '-511'
c Var 'sij_00006_00001' direct represents '1' with '511'
c Var 'sij_00006_00001' order represents '1' with '1'
c Var 'sij_00006_00001' order represents '0' with '-511'
c Encoding variable: sij_00006_00002 with domain: bool (representing constraint )
c Var 'sij_00006_00002' direct represents '0' with '-512'
c Var 'sij_00006_00002' direct represents '1' with '512'
c Var 'sij_00006_00002' order represents '1' with '1'
c Var 'sij_00006_00002' order represents '0' with '-512'
c Encoding variable: sij_00006_00003 with domain: bool (representing constraint )
c Var 'sij_00006_00003' direct represents '0' with '-513'
c Var 'sij_00006_00003' direct represents '1' with '513'
c Var 'sij_00006_00003' order represents '1' with '1'
c Var 'sij_00006_00003' order represents '0' with '-513'
c Encoding variable: sij_00006_00004 with domain: bool (representing constraint )
c Var 'sij_00006_00004' direct represents '0' with '-514'
c Var 'sij_00006_00004' direct represents '1' with '514'
c Var 'sij_00006_00004' order represents '1' with '1'
c Var 'sij_00006_00004' order represents '0' with '-514'
c Encoding variable: sij_00006_00005 with domain: bool (representing constraint )
c Var 'sij_00006_00005' direct represents '0' with '-515'
c Var 'sij_00006_00005' direct represents '1' with '515'
c Var 'sij_00006_00005' order represents '1' with '1'
c Var 'sij_00006_00005' order represents '0' with '-515'
c Encoding variable: sij_00006_00006 with domain: bool (representing constraint )
c Var 'sij_00006_00006' direct represents '0' with '-516'
c Var 'sij_00006_00006' direct represents '1' with '516'
c Var 'sij_00006_00006' order represents '1' with '1'
c Var 'sij_00006_00006' order represents '0' with '-516'
c Encoding variable: sij_00006_00007 with domain: bool (representing constraint )
c Var 'sij_00006_00007' direct represents '0' with '-517'
c Var 'sij_00006_00007' direct represents '1' with '517'
c Var 'sij_00006_00007' order represents '1' with '1'
c Var 'sij_00006_00007' order represents '0' with '-517'
c Encoding variable: sij_00006_00008 with domain: bool (representing constraint )
c Var 'sij_00006_00008' direct represents '0' with '-518'
c Var 'sij_00006_00008' direct represents '1' with '518'
c Var 'sij_00006_00008' order represents '1' with '1'
c Var 'sij_00006_00008' order represents '0' with '-518'
c Encoding variable: sij_00006_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00006_00009' direct represents '0' with '519'
519 0
c Encoding variable: sij_00007_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00000' direct represents '0' with '520'
520 0
c Encoding variable: sij_00007_00001 with domain: bool (representing constraint )
c Var 'sij_00007_00001' direct represents '0' with '-521'
c Var 'sij_00007_00001' direct represents '1' with '521'
c Var 'sij_00007_00001' order represents '1' with '1'
c Var 'sij_00007_00001' order represents '0' with '-521'
c Encoding variable: sij_00007_00002 with domain: bool (representing constraint )
c Var 'sij_00007_00002' direct represents '0' with '-522'
c Var 'sij_00007_00002' direct represents '1' with '522'
c Var 'sij_00007_00002' order represents '1' with '1'
c Var 'sij_00007_00002' order represents '0' with '-522'
c Encoding variable: sij_00007_00003 with domain: bool (representing constraint )
c Var 'sij_00007_00003' direct represents '0' with '-523'
c Var 'sij_00007_00003' direct represents '1' with '523'
c Var 'sij_00007_00003' order represents '1' with '1'
c Var 'sij_00007_00003' order represents '0' with '-523'
c Encoding variable: sij_00007_00004 with domain: bool (representing constraint )
c Var 'sij_00007_00004' direct represents '0' with '-524'
c Var 'sij_00007_00004' direct represents '1' with '524'
c Var 'sij_00007_00004' order represents '1' with '1'
c Var 'sij_00007_00004' order represents '0' with '-524'
c Encoding variable: sij_00007_00005 with domain: bool (representing constraint )
c Var 'sij_00007_00005' direct represents '0' with '-525'
c Var 'sij_00007_00005' direct represents '1' with '525'
c Var 'sij_00007_00005' order represents '1' with '1'
c Var 'sij_00007_00005' order represents '0' with '-525'
c Encoding variable: sij_00007_00006 with domain: bool (representing constraint )
c Var 'sij_00007_00006' direct represents '0' with '-526'
c Var 'sij_00007_00006' direct represents '1' with '526'
c Var 'sij_00007_00006' order represents '1' with '1'
c Var 'sij_00007_00006' order represents '0' with '-526'
c Encoding variable: sij_00007_00007 with domain: bool (representing constraint )
c Var 'sij_00007_00007' direct represents '0' with '-527'
c Var 'sij_00007_00007' direct represents '1' with '527'
c Var 'sij_00007_00007' order represents '1' with '1'
c Var 'sij_00007_00007' order represents '0' with '-527'
c Encoding variable: sij_00007_00008 with domain: bool (representing constraint )
c Var 'sij_00007_00008' direct represents '0' with '-528'
c Var 'sij_00007_00008' direct represents '1' with '528'
c Var 'sij_00007_00008' order represents '1' with '1'
c Var 'sij_00007_00008' order represents '0' with '-528'
c Encoding variable: sij_00007_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00007_00009' direct represents '0' with '529'
529 0
c Encoding variable: sij_00008_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00008_00000' direct represents '0' with '530'
530 0
c Encoding variable: sij_00008_00001 with domain: bool (representing constraint )
c Var 'sij_00008_00001' direct represents '0' with '-531'
c Var 'sij_00008_00001' direct represents '1' with '531'
c Var 'sij_00008_00001' order represents '1' with '1'
c Var 'sij_00008_00001' order represents '0' with '-531'
c Encoding variable: sij_00008_00002 with domain: bool (representing constraint )
c Var 'sij_00008_00002' direct represents '0' with '-532'
c Var 'sij_00008_00002' direct represents '1' with '532'
c Var 'sij_00008_00002' order represents '1' with '1'
c Var 'sij_00008_00002' order represents '0' with '-532'
c Encoding variable: sij_00008_00003 with domain: bool (representing constraint )
c Var 'sij_00008_00003' direct represents '0' with '-533'
c Var 'sij_00008_00003' direct represents '1' with '533'
c Var 'sij_00008_00003' order represents '1' with '1'
c Var 'sij_00008_00003' order represents '0' with '-533'
c Encoding variable: sij_00008_00004 with domain: bool (representing constraint )
c Var 'sij_00008_00004' direct represents '0' with '-534'
c Var 'sij_00008_00004' direct represents '1' with '534'
c Var 'sij_00008_00004' order represents '1' with '1'
c Var 'sij_00008_00004' order represents '0' with '-534'
c Encoding variable: sij_00008_00005 with domain: bool (representing constraint )
c Var 'sij_00008_00005' direct represents '0' with '-535'
c Var 'sij_00008_00005' direct represents '1' with '535'
c Var 'sij_00008_00005' order represents '1' with '1'
c Var 'sij_00008_00005' order represents '0' with '-535'
c Encoding variable: sij_00008_00006 with domain: bool (representing constraint )
c Var 'sij_00008_00006' direct represents '0' with '-536'
c Var 'sij_00008_00006' direct represents '1' with '536'
c Var 'sij_00008_00006' order represents '1' with '1'
c Var 'sij_00008_00006' order represents '0' with '-536'
c Encoding variable: sij_00008_00007 with domain: bool (representing constraint )
c Var 'sij_00008_00007' direct represents '0' with '-537'
c Var 'sij_00008_00007' direct represents '1' with '537'
c Var 'sij_00008_00007' order represents '1' with '1'
c Var 'sij_00008_00007' order represents '0' with '-537'
c Encoding variable: sij_00008_00008 with domain: bool (representing constraint )
c Var 'sij_00008_00008' direct represents '0' with '-538'
c Var 'sij_00008_00008' direct represents '1' with '538'
c Var 'sij_00008_00008' order represents '1' with '1'
c Var 'sij_00008_00008' order represents '0' with '-538'
c Encoding variable: sij_00008_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00008_00009' direct represents '0' with '539'
539 0
c Encoding variable: sij_00009_00000 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00000' direct represents '0' with '540'
540 0
c Encoding variable: sij_00009_00001 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00001' direct represents '0' with '541'
541 0
c Encoding variable: sij_00009_00002 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00002' direct represents '0' with '542'
542 0
c Encoding variable: sij_00009_00003 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00003' direct represents '0' with '543'
543 0
c Encoding variable: sij_00009_00004 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00004' direct represents '0' with '544'
544 0
c Encoding variable: sij_00009_00005 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00005' direct represents '0' with '545'
545 0
c Encoding variable: sij_00009_00006 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00006' direct represents '0' with '546'
546 0
c Encoding variable: sij_00009_00007 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00007' direct represents '0' with '547'
547 0
c Encoding variable: sij_00009_00008 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00008' direct represents '0' with '548'
548 0
c Encoding variable: sij_00009_00009 with domain: bool(false) (representing constraint )
c Var 'sij_00009_00009' direct represents '0' with '549'
549 0
c Encoding variable: rijk_00001_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00001_00001' direct represents '0' with '-550'
c Var 'rijk_00001_00001_00001' direct represents '1' with '550'
c Var 'rijk_00001_00001_00001' order represents '1' with '1'
c Var 'rijk_00001_00001_00001' order represents '0' with '-550'
c Encoding variable: rijk_00001_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00001_00002' direct represents '0' with '-551'
c Var 'rijk_00001_00001_00002' direct represents '1' with '551'
c Var 'rijk_00001_00001_00002' order represents '1' with '1'
c Var 'rijk_00001_00001_00002' order represents '0' with '-551'
c Encoding variable: rijk_00001_00001_00003 with domain: bool (representing constraint )
c Var 'rijk_00001_00001_00003' direct represents '0' with '-552'
c Var 'rijk_00001_00001_00003' direct represents '1' with '552'
c Var 'rijk_00001_00001_00003' order represents '1' with '1'
c Var 'rijk_00001_00001_00003' order represents '0' with '-552'
c Encoding variable: rijk_00001_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00002_00001' direct represents '0' with '-553'
c Var 'rijk_00001_00002_00001' direct represents '1' with '553'
c Var 'rijk_00001_00002_00001' order represents '1' with '1'
c Var 'rijk_00001_00002_00001' order represents '0' with '-553'
c Encoding variable: rijk_00001_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00002_00002' direct represents '0' with '-554'
c Var 'rijk_00001_00002_00002' direct represents '1' with '554'
c Var 'rijk_00001_00002_00002' order represents '1' with '1'
c Var 'rijk_00001_00002_00002' order represents '0' with '-554'
c Encoding variable: rijk_00001_00002_00003 with domain: bool (representing constraint )
c Var 'rijk_00001_00002_00003' direct represents '0' with '-555'
c Var 'rijk_00001_00002_00003' direct represents '1' with '555'
c Var 'rijk_00001_00002_00003' order represents '1' with '1'
c Var 'rijk_00001_00002_00003' order represents '0' with '-555'
c Encoding variable: rijk_00001_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00003_00001' direct represents '0' with '-556'
c Var 'rijk_00001_00003_00001' direct represents '1' with '556'
c Var 'rijk_00001_00003_00001' order represents '1' with '1'
c Var 'rijk_00001_00003_00001' order represents '0' with '-556'
c Encoding variable: rijk_00001_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00003_00002' direct represents '0' with '-557'
c Var 'rijk_00001_00003_00002' direct represents '1' with '557'
c Var 'rijk_00001_00003_00002' order represents '1' with '1'
c Var 'rijk_00001_00003_00002' order represents '0' with '-557'
c Encoding variable: rijk_00001_00003_00003 with domain: bool (representing constraint )
c Var 'rijk_00001_00003_00003' direct represents '0' with '-558'
c Var 'rijk_00001_00003_00003' direct represents '1' with '558'
c Var 'rijk_00001_00003_00003' order represents '1' with '1'
c Var 'rijk_00001_00003_00003' order represents '0' with '-558'
c Encoding variable: rijk_00001_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00004_00001' direct represents '0' with '-559'
c Var 'rijk_00001_00004_00001' direct represents '1' with '559'
c Var 'rijk_00001_00004_00001' order represents '1' with '1'
c Var 'rijk_00001_00004_00001' order represents '0' with '-559'
c Encoding variable: rijk_00001_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00004_00002' direct represents '0' with '-560'
c Var 'rijk_00001_00004_00002' direct represents '1' with '560'
c Var 'rijk_00001_00004_00002' order represents '1' with '1'
c Var 'rijk_00001_00004_00002' order represents '0' with '-560'
c Encoding variable: rijk_00001_00004_00003 with domain: bool (representing constraint )
c Var 'rijk_00001_00004_00003' direct represents '0' with '-561'
c Var 'rijk_00001_00004_00003' direct represents '1' with '561'
c Var 'rijk_00001_00004_00003' order represents '1' with '1'
c Var 'rijk_00001_00004_00003' order represents '0' with '-561'
c Encoding variable: rijk_00001_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00005_00001' direct represents '0' with '-562'
c Var 'rijk_00001_00005_00001' direct represents '1' with '562'
c Var 'rijk_00001_00005_00001' order represents '1' with '1'
c Var 'rijk_00001_00005_00001' order represents '0' with '-562'
c Encoding variable: rijk_00001_00005_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00005_00002' direct represents '0' with '-563'
c Var 'rijk_00001_00005_00002' direct represents '1' with '563'
c Var 'rijk_00001_00005_00002' order represents '1' with '1'
c Var 'rijk_00001_00005_00002' order represents '0' with '-563'
c Encoding variable: rijk_00001_00005_00003 with domain: bool (representing constraint )
c Var 'rijk_00001_00005_00003' direct represents '0' with '-564'
c Var 'rijk_00001_00005_00003' direct represents '1' with '564'
c Var 'rijk_00001_00005_00003' order represents '1' with '1'
c Var 'rijk_00001_00005_00003' order represents '0' with '-564'
c Encoding variable: rijk_00001_00006_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00006_00001' direct represents '0' with '-565'
c Var 'rijk_00001_00006_00001' direct represents '1' with '565'
c Var 'rijk_00001_00006_00001' order represents '1' with '1'
c Var 'rijk_00001_00006_00001' order represents '0' with '-565'
c Encoding variable: rijk_00001_00006_00002 with domain: bool (representing constraint )
c Var 'rijk_00001_00006_00002' direct represents '0' with '-566'
c Var 'rijk_00001_00006_00002' direct represents '1' with '566'
c Var 'rijk_00001_00006_00002' order represents '1' with '1'
c Var 'rijk_00001_00006_00002' order represents '0' with '-566'
c Encoding variable: rijk_00001_00006_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00006_00003' direct represents '0' with '567'
567 0
c Encoding variable: rijk_00001_00007_00001 with domain: bool (representing constraint )
c Var 'rijk_00001_00007_00001' direct represents '0' with '-568'
c Var 'rijk_00001_00007_00001' direct represents '1' with '568'
c Var 'rijk_00001_00007_00001' order represents '1' with '1'
c Var 'rijk_00001_00007_00001' order represents '0' with '-568'
c Encoding variable: rijk_00001_00007_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00007_00002' direct represents '0' with '569'
569 0
c Encoding variable: rijk_00001_00007_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00007_00003' direct represents '0' with '570'
570 0
c Encoding variable: rijk_00001_00008_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00008_00001' direct represents '0' with '571'
571 0
c Encoding variable: rijk_00001_00008_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00008_00002' direct represents '0' with '572'
572 0
c Encoding variable: rijk_00001_00008_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00001_00008_00003' direct represents '0' with '573'
573 0
c Encoding variable: rijk_00002_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00001_00001' direct represents '0' with '-574'
c Var 'rijk_00002_00001_00001' direct represents '1' with '574'
c Var 'rijk_00002_00001_00001' order represents '1' with '1'
c Var 'rijk_00002_00001_00001' order represents '0' with '-574'
c Encoding variable: rijk_00002_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00001_00002' direct represents '0' with '-575'
c Var 'rijk_00002_00001_00002' direct represents '1' with '575'
c Var 'rijk_00002_00001_00002' order represents '1' with '1'
c Var 'rijk_00002_00001_00002' order represents '0' with '-575'
c Encoding variable: rijk_00002_00001_00003 with domain: bool (representing constraint )
c Var 'rijk_00002_00001_00003' direct represents '0' with '-576'
c Var 'rijk_00002_00001_00003' direct represents '1' with '576'
c Var 'rijk_00002_00001_00003' order represents '1' with '1'
c Var 'rijk_00002_00001_00003' order represents '0' with '-576'
c Encoding variable: rijk_00002_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00002_00001' direct represents '0' with '-577'
c Var 'rijk_00002_00002_00001' direct represents '1' with '577'
c Var 'rijk_00002_00002_00001' order represents '1' with '1'
c Var 'rijk_00002_00002_00001' order represents '0' with '-577'
c Encoding variable: rijk_00002_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00002_00002' direct represents '0' with '-578'
c Var 'rijk_00002_00002_00002' direct represents '1' with '578'
c Var 'rijk_00002_00002_00002' order represents '1' with '1'
c Var 'rijk_00002_00002_00002' order represents '0' with '-578'
c Encoding variable: rijk_00002_00002_00003 with domain: bool (representing constraint )
c Var 'rijk_00002_00002_00003' direct represents '0' with '-579'
c Var 'rijk_00002_00002_00003' direct represents '1' with '579'
c Var 'rijk_00002_00002_00003' order represents '1' with '1'
c Var 'rijk_00002_00002_00003' order represents '0' with '-579'
c Encoding variable: rijk_00002_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00003_00001' direct represents '0' with '-580'
c Var 'rijk_00002_00003_00001' direct represents '1' with '580'
c Var 'rijk_00002_00003_00001' order represents '1' with '1'
c Var 'rijk_00002_00003_00001' order represents '0' with '-580'
c Encoding variable: rijk_00002_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00003_00002' direct represents '0' with '-581'
c Var 'rijk_00002_00003_00002' direct represents '1' with '581'
c Var 'rijk_00002_00003_00002' order represents '1' with '1'
c Var 'rijk_00002_00003_00002' order represents '0' with '-581'
c Encoding variable: rijk_00002_00003_00003 with domain: bool (representing constraint )
c Var 'rijk_00002_00003_00003' direct represents '0' with '-582'
c Var 'rijk_00002_00003_00003' direct represents '1' with '582'
c Var 'rijk_00002_00003_00003' order represents '1' with '1'
c Var 'rijk_00002_00003_00003' order represents '0' with '-582'
c Encoding variable: rijk_00002_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00004_00001' direct represents '0' with '-583'
c Var 'rijk_00002_00004_00001' direct represents '1' with '583'
c Var 'rijk_00002_00004_00001' order represents '1' with '1'
c Var 'rijk_00002_00004_00001' order represents '0' with '-583'
c Encoding variable: rijk_00002_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00004_00002' direct represents '0' with '-584'
c Var 'rijk_00002_00004_00002' direct represents '1' with '584'
c Var 'rijk_00002_00004_00002' order represents '1' with '1'
c Var 'rijk_00002_00004_00002' order represents '0' with '-584'
c Encoding variable: rijk_00002_00004_00003 with domain: bool (representing constraint )
c Var 'rijk_00002_00004_00003' direct represents '0' with '-585'
c Var 'rijk_00002_00004_00003' direct represents '1' with '585'
c Var 'rijk_00002_00004_00003' order represents '1' with '1'
c Var 'rijk_00002_00004_00003' order represents '0' with '-585'
c Encoding variable: rijk_00002_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00005_00001' direct represents '0' with '-586'
c Var 'rijk_00002_00005_00001' direct represents '1' with '586'
c Var 'rijk_00002_00005_00001' order represents '1' with '1'
c Var 'rijk_00002_00005_00001' order represents '0' with '-586'
c Encoding variable: rijk_00002_00005_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00005_00002' direct represents '0' with '-587'
c Var 'rijk_00002_00005_00002' direct represents '1' with '587'
c Var 'rijk_00002_00005_00002' order represents '1' with '1'
c Var 'rijk_00002_00005_00002' order represents '0' with '-587'
c Encoding variable: rijk_00002_00005_00003 with domain: bool (representing constraint )
c Var 'rijk_00002_00005_00003' direct represents '0' with '-588'
c Var 'rijk_00002_00005_00003' direct represents '1' with '588'
c Var 'rijk_00002_00005_00003' order represents '1' with '1'
c Var 'rijk_00002_00005_00003' order represents '0' with '-588'
c Encoding variable: rijk_00002_00006_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00006_00001' direct represents '0' with '-589'
c Var 'rijk_00002_00006_00001' direct represents '1' with '589'
c Var 'rijk_00002_00006_00001' order represents '1' with '1'
c Var 'rijk_00002_00006_00001' order represents '0' with '-589'
c Encoding variable: rijk_00002_00006_00002 with domain: bool (representing constraint )
c Var 'rijk_00002_00006_00002' direct represents '0' with '-590'
c Var 'rijk_00002_00006_00002' direct represents '1' with '590'
c Var 'rijk_00002_00006_00002' order represents '1' with '1'
c Var 'rijk_00002_00006_00002' order represents '0' with '-590'
c Encoding variable: rijk_00002_00006_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00006_00003' direct represents '0' with '591'
591 0
c Encoding variable: rijk_00002_00007_00001 with domain: bool (representing constraint )
c Var 'rijk_00002_00007_00001' direct represents '0' with '-592'
c Var 'rijk_00002_00007_00001' direct represents '1' with '592'
c Var 'rijk_00002_00007_00001' order represents '1' with '1'
c Var 'rijk_00002_00007_00001' order represents '0' with '-592'
c Encoding variable: rijk_00002_00007_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00007_00002' direct represents '0' with '593'
593 0
c Encoding variable: rijk_00002_00007_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00007_00003' direct represents '0' with '594'
594 0
c Encoding variable: rijk_00002_00008_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00008_00001' direct represents '0' with '595'
595 0
c Encoding variable: rijk_00002_00008_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00008_00002' direct represents '0' with '596'
596 0
c Encoding variable: rijk_00002_00008_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00002_00008_00003' direct represents '0' with '597'
597 0
c Encoding variable: rijk_00003_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00001_00001' direct represents '0' with '-598'
c Var 'rijk_00003_00001_00001' direct represents '1' with '598'
c Var 'rijk_00003_00001_00001' order represents '1' with '1'
c Var 'rijk_00003_00001_00001' order represents '0' with '-598'
c Encoding variable: rijk_00003_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00001_00002' direct represents '0' with '-599'
c Var 'rijk_00003_00001_00002' direct represents '1' with '599'
c Var 'rijk_00003_00001_00002' order represents '1' with '1'
c Var 'rijk_00003_00001_00002' order represents '0' with '-599'
c Encoding variable: rijk_00003_00001_00003 with domain: bool (representing constraint )
c Var 'rijk_00003_00001_00003' direct represents '0' with '-600'
c Var 'rijk_00003_00001_00003' direct represents '1' with '600'
c Var 'rijk_00003_00001_00003' order represents '1' with '1'
c Var 'rijk_00003_00001_00003' order represents '0' with '-600'
c Encoding variable: rijk_00003_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00002_00001' direct represents '0' with '-601'
c Var 'rijk_00003_00002_00001' direct represents '1' with '601'
c Var 'rijk_00003_00002_00001' order represents '1' with '1'
c Var 'rijk_00003_00002_00001' order represents '0' with '-601'
c Encoding variable: rijk_00003_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00002_00002' direct represents '0' with '-602'
c Var 'rijk_00003_00002_00002' direct represents '1' with '602'
c Var 'rijk_00003_00002_00002' order represents '1' with '1'
c Var 'rijk_00003_00002_00002' order represents '0' with '-602'
c Encoding variable: rijk_00003_00002_00003 with domain: bool (representing constraint )
c Var 'rijk_00003_00002_00003' direct represents '0' with '-603'
c Var 'rijk_00003_00002_00003' direct represents '1' with '603'
c Var 'rijk_00003_00002_00003' order represents '1' with '1'
c Var 'rijk_00003_00002_00003' order represents '0' with '-603'
c Encoding variable: rijk_00003_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00003_00001' direct represents '0' with '-604'
c Var 'rijk_00003_00003_00001' direct represents '1' with '604'
c Var 'rijk_00003_00003_00001' order represents '1' with '1'
c Var 'rijk_00003_00003_00001' order represents '0' with '-604'
c Encoding variable: rijk_00003_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00003_00002' direct represents '0' with '-605'
c Var 'rijk_00003_00003_00002' direct represents '1' with '605'
c Var 'rijk_00003_00003_00002' order represents '1' with '1'
c Var 'rijk_00003_00003_00002' order represents '0' with '-605'
c Encoding variable: rijk_00003_00003_00003 with domain: bool (representing constraint )
c Var 'rijk_00003_00003_00003' direct represents '0' with '-606'
c Var 'rijk_00003_00003_00003' direct represents '1' with '606'
c Var 'rijk_00003_00003_00003' order represents '1' with '1'
c Var 'rijk_00003_00003_00003' order represents '0' with '-606'
c Encoding variable: rijk_00003_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00004_00001' direct represents '0' with '-607'
c Var 'rijk_00003_00004_00001' direct represents '1' with '607'
c Var 'rijk_00003_00004_00001' order represents '1' with '1'
c Var 'rijk_00003_00004_00001' order represents '0' with '-607'
c Encoding variable: rijk_00003_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00004_00002' direct represents '0' with '-608'
c Var 'rijk_00003_00004_00002' direct represents '1' with '608'
c Var 'rijk_00003_00004_00002' order represents '1' with '1'
c Var 'rijk_00003_00004_00002' order represents '0' with '-608'
c Encoding variable: rijk_00003_00004_00003 with domain: bool (representing constraint )
c Var 'rijk_00003_00004_00003' direct represents '0' with '-609'
c Var 'rijk_00003_00004_00003' direct represents '1' with '609'
c Var 'rijk_00003_00004_00003' order represents '1' with '1'
c Var 'rijk_00003_00004_00003' order represents '0' with '-609'
c Encoding variable: rijk_00003_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00005_00001' direct represents '0' with '-610'
c Var 'rijk_00003_00005_00001' direct represents '1' with '610'
c Var 'rijk_00003_00005_00001' order represents '1' with '1'
c Var 'rijk_00003_00005_00001' order represents '0' with '-610'
c Encoding variable: rijk_00003_00005_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00005_00002' direct represents '0' with '-611'
c Var 'rijk_00003_00005_00002' direct represents '1' with '611'
c Var 'rijk_00003_00005_00002' order represents '1' with '1'
c Var 'rijk_00003_00005_00002' order represents '0' with '-611'
c Encoding variable: rijk_00003_00005_00003 with domain: bool (representing constraint )
c Var 'rijk_00003_00005_00003' direct represents '0' with '-612'
c Var 'rijk_00003_00005_00003' direct represents '1' with '612'
c Var 'rijk_00003_00005_00003' order represents '1' with '1'
c Var 'rijk_00003_00005_00003' order represents '0' with '-612'
c Encoding variable: rijk_00003_00006_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00006_00001' direct represents '0' with '-613'
c Var 'rijk_00003_00006_00001' direct represents '1' with '613'
c Var 'rijk_00003_00006_00001' order represents '1' with '1'
c Var 'rijk_00003_00006_00001' order represents '0' with '-613'
c Encoding variable: rijk_00003_00006_00002 with domain: bool (representing constraint )
c Var 'rijk_00003_00006_00002' direct represents '0' with '-614'
c Var 'rijk_00003_00006_00002' direct represents '1' with '614'
c Var 'rijk_00003_00006_00002' order represents '1' with '1'
c Var 'rijk_00003_00006_00002' order represents '0' with '-614'
c Encoding variable: rijk_00003_00006_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00006_00003' direct represents '0' with '615'
615 0
c Encoding variable: rijk_00003_00007_00001 with domain: bool (representing constraint )
c Var 'rijk_00003_00007_00001' direct represents '0' with '-616'
c Var 'rijk_00003_00007_00001' direct represents '1' with '616'
c Var 'rijk_00003_00007_00001' order represents '1' with '1'
c Var 'rijk_00003_00007_00001' order represents '0' with '-616'
c Encoding variable: rijk_00003_00007_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00007_00002' direct represents '0' with '617'
617 0
c Encoding variable: rijk_00003_00007_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00007_00003' direct represents '0' with '618'
618 0
c Encoding variable: rijk_00003_00008_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00008_00001' direct represents '0' with '619'
619 0
c Encoding variable: rijk_00003_00008_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00008_00002' direct represents '0' with '620'
620 0
c Encoding variable: rijk_00003_00008_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00003_00008_00003' direct represents '0' with '621'
621 0
c Encoding variable: rijk_00004_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00001_00001' direct represents '0' with '-622'
c Var 'rijk_00004_00001_00001' direct represents '1' with '622'
c Var 'rijk_00004_00001_00001' order represents '1' with '1'
c Var 'rijk_00004_00001_00001' order represents '0' with '-622'
c Encoding variable: rijk_00004_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00001_00002' direct represents '0' with '-623'
c Var 'rijk_00004_00001_00002' direct represents '1' with '623'
c Var 'rijk_00004_00001_00002' order represents '1' with '1'
c Var 'rijk_00004_00001_00002' order represents '0' with '-623'
c Encoding variable: rijk_00004_00001_00003 with domain: bool (representing constraint )
c Var 'rijk_00004_00001_00003' direct represents '0' with '-624'
c Var 'rijk_00004_00001_00003' direct represents '1' with '624'
c Var 'rijk_00004_00001_00003' order represents '1' with '1'
c Var 'rijk_00004_00001_00003' order represents '0' with '-624'
c Encoding variable: rijk_00004_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00002_00001' direct represents '0' with '-625'
c Var 'rijk_00004_00002_00001' direct represents '1' with '625'
c Var 'rijk_00004_00002_00001' order represents '1' with '1'
c Var 'rijk_00004_00002_00001' order represents '0' with '-625'
c Encoding variable: rijk_00004_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00002_00002' direct represents '0' with '-626'
c Var 'rijk_00004_00002_00002' direct represents '1' with '626'
c Var 'rijk_00004_00002_00002' order represents '1' with '1'
c Var 'rijk_00004_00002_00002' order represents '0' with '-626'
c Encoding variable: rijk_00004_00002_00003 with domain: bool (representing constraint )
c Var 'rijk_00004_00002_00003' direct represents '0' with '-627'
c Var 'rijk_00004_00002_00003' direct represents '1' with '627'
c Var 'rijk_00004_00002_00003' order represents '1' with '1'
c Var 'rijk_00004_00002_00003' order represents '0' with '-627'
c Encoding variable: rijk_00004_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00003_00001' direct represents '0' with '-628'
c Var 'rijk_00004_00003_00001' direct represents '1' with '628'
c Var 'rijk_00004_00003_00001' order represents '1' with '1'
c Var 'rijk_00004_00003_00001' order represents '0' with '-628'
c Encoding variable: rijk_00004_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00003_00002' direct represents '0' with '-629'
c Var 'rijk_00004_00003_00002' direct represents '1' with '629'
c Var 'rijk_00004_00003_00002' order represents '1' with '1'
c Var 'rijk_00004_00003_00002' order represents '0' with '-629'
c Encoding variable: rijk_00004_00003_00003 with domain: bool (representing constraint )
c Var 'rijk_00004_00003_00003' direct represents '0' with '-630'
c Var 'rijk_00004_00003_00003' direct represents '1' with '630'
c Var 'rijk_00004_00003_00003' order represents '1' with '1'
c Var 'rijk_00004_00003_00003' order represents '0' with '-630'
c Encoding variable: rijk_00004_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00004_00001' direct represents '0' with '-631'
c Var 'rijk_00004_00004_00001' direct represents '1' with '631'
c Var 'rijk_00004_00004_00001' order represents '1' with '1'
c Var 'rijk_00004_00004_00001' order represents '0' with '-631'
c Encoding variable: rijk_00004_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00004_00002' direct represents '0' with '-632'
c Var 'rijk_00004_00004_00002' direct represents '1' with '632'
c Var 'rijk_00004_00004_00002' order represents '1' with '1'
c Var 'rijk_00004_00004_00002' order represents '0' with '-632'
c Encoding variable: rijk_00004_00004_00003 with domain: bool (representing constraint )
c Var 'rijk_00004_00004_00003' direct represents '0' with '-633'
c Var 'rijk_00004_00004_00003' direct represents '1' with '633'
c Var 'rijk_00004_00004_00003' order represents '1' with '1'
c Var 'rijk_00004_00004_00003' order represents '0' with '-633'
c Encoding variable: rijk_00004_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00005_00001' direct represents '0' with '-634'
c Var 'rijk_00004_00005_00001' direct represents '1' with '634'
c Var 'rijk_00004_00005_00001' order represents '1' with '1'
c Var 'rijk_00004_00005_00001' order represents '0' with '-634'
c Encoding variable: rijk_00004_00005_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00005_00002' direct represents '0' with '-635'
c Var 'rijk_00004_00005_00002' direct represents '1' with '635'
c Var 'rijk_00004_00005_00002' order represents '1' with '1'
c Var 'rijk_00004_00005_00002' order represents '0' with '-635'
c Encoding variable: rijk_00004_00005_00003 with domain: bool (representing constraint )
c Var 'rijk_00004_00005_00003' direct represents '0' with '-636'
c Var 'rijk_00004_00005_00003' direct represents '1' with '636'
c Var 'rijk_00004_00005_00003' order represents '1' with '1'
c Var 'rijk_00004_00005_00003' order represents '0' with '-636'
c Encoding variable: rijk_00004_00006_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00006_00001' direct represents '0' with '-637'
c Var 'rijk_00004_00006_00001' direct represents '1' with '637'
c Var 'rijk_00004_00006_00001' order represents '1' with '1'
c Var 'rijk_00004_00006_00001' order represents '0' with '-637'
c Encoding variable: rijk_00004_00006_00002 with domain: bool (representing constraint )
c Var 'rijk_00004_00006_00002' direct represents '0' with '-638'
c Var 'rijk_00004_00006_00002' direct represents '1' with '638'
c Var 'rijk_00004_00006_00002' order represents '1' with '1'
c Var 'rijk_00004_00006_00002' order represents '0' with '-638'
c Encoding variable: rijk_00004_00006_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00006_00003' direct represents '0' with '639'
639 0
c Encoding variable: rijk_00004_00007_00001 with domain: bool (representing constraint )
c Var 'rijk_00004_00007_00001' direct represents '0' with '-640'
c Var 'rijk_00004_00007_00001' direct represents '1' with '640'
c Var 'rijk_00004_00007_00001' order represents '1' with '1'
c Var 'rijk_00004_00007_00001' order represents '0' with '-640'
c Encoding variable: rijk_00004_00007_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00007_00002' direct represents '0' with '641'
641 0
c Encoding variable: rijk_00004_00007_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00007_00003' direct represents '0' with '642'
642 0
c Encoding variable: rijk_00004_00008_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00008_00001' direct represents '0' with '643'
643 0
c Encoding variable: rijk_00004_00008_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00008_00002' direct represents '0' with '644'
644 0
c Encoding variable: rijk_00004_00008_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00004_00008_00003' direct represents '0' with '645'
645 0
c Encoding variable: rijk_00005_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00001_00001' direct represents '0' with '-646'
c Var 'rijk_00005_00001_00001' direct represents '1' with '646'
c Var 'rijk_00005_00001_00001' order represents '1' with '1'
c Var 'rijk_00005_00001_00001' order represents '0' with '-646'
c Encoding variable: rijk_00005_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00001_00002' direct represents '0' with '-647'
c Var 'rijk_00005_00001_00002' direct represents '1' with '647'
c Var 'rijk_00005_00001_00002' order represents '1' with '1'
c Var 'rijk_00005_00001_00002' order represents '0' with '-647'
c Encoding variable: rijk_00005_00001_00003 with domain: bool (representing constraint )
c Var 'rijk_00005_00001_00003' direct represents '0' with '-648'
c Var 'rijk_00005_00001_00003' direct represents '1' with '648'
c Var 'rijk_00005_00001_00003' order represents '1' with '1'
c Var 'rijk_00005_00001_00003' order represents '0' with '-648'
c Encoding variable: rijk_00005_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00002_00001' direct represents '0' with '-649'
c Var 'rijk_00005_00002_00001' direct represents '1' with '649'
c Var 'rijk_00005_00002_00001' order represents '1' with '1'
c Var 'rijk_00005_00002_00001' order represents '0' with '-649'
c Encoding variable: rijk_00005_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00002_00002' direct represents '0' with '-650'
c Var 'rijk_00005_00002_00002' direct represents '1' with '650'
c Var 'rijk_00005_00002_00002' order represents '1' with '1'
c Var 'rijk_00005_00002_00002' order represents '0' with '-650'
c Encoding variable: rijk_00005_00002_00003 with domain: bool (representing constraint )
c Var 'rijk_00005_00002_00003' direct represents '0' with '-651'
c Var 'rijk_00005_00002_00003' direct represents '1' with '651'
c Var 'rijk_00005_00002_00003' order represents '1' with '1'
c Var 'rijk_00005_00002_00003' order represents '0' with '-651'
c Encoding variable: rijk_00005_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00003_00001' direct represents '0' with '-652'
c Var 'rijk_00005_00003_00001' direct represents '1' with '652'
c Var 'rijk_00005_00003_00001' order represents '1' with '1'
c Var 'rijk_00005_00003_00001' order represents '0' with '-652'
c Encoding variable: rijk_00005_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00003_00002' direct represents '0' with '-653'
c Var 'rijk_00005_00003_00002' direct represents '1' with '653'
c Var 'rijk_00005_00003_00002' order represents '1' with '1'
c Var 'rijk_00005_00003_00002' order represents '0' with '-653'
c Encoding variable: rijk_00005_00003_00003 with domain: bool (representing constraint )
c Var 'rijk_00005_00003_00003' direct represents '0' with '-654'
c Var 'rijk_00005_00003_00003' direct represents '1' with '654'
c Var 'rijk_00005_00003_00003' order represents '1' with '1'
c Var 'rijk_00005_00003_00003' order represents '0' with '-654'
c Encoding variable: rijk_00005_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00004_00001' direct represents '0' with '-655'
c Var 'rijk_00005_00004_00001' direct represents '1' with '655'
c Var 'rijk_00005_00004_00001' order represents '1' with '1'
c Var 'rijk_00005_00004_00001' order represents '0' with '-655'
c Encoding variable: rijk_00005_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00004_00002' direct represents '0' with '-656'
c Var 'rijk_00005_00004_00002' direct represents '1' with '656'
c Var 'rijk_00005_00004_00002' order represents '1' with '1'
c Var 'rijk_00005_00004_00002' order represents '0' with '-656'
c Encoding variable: rijk_00005_00004_00003 with domain: bool (representing constraint )
c Var 'rijk_00005_00004_00003' direct represents '0' with '-657'
c Var 'rijk_00005_00004_00003' direct represents '1' with '657'
c Var 'rijk_00005_00004_00003' order represents '1' with '1'
c Var 'rijk_00005_00004_00003' order represents '0' with '-657'
c Encoding variable: rijk_00005_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00005_00001' direct represents '0' with '-658'
c Var 'rijk_00005_00005_00001' direct represents '1' with '658'
c Var 'rijk_00005_00005_00001' order represents '1' with '1'
c Var 'rijk_00005_00005_00001' order represents '0' with '-658'
c Encoding variable: rijk_00005_00005_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00005_00002' direct represents '0' with '-659'
c Var 'rijk_00005_00005_00002' direct represents '1' with '659'
c Var 'rijk_00005_00005_00002' order represents '1' with '1'
c Var 'rijk_00005_00005_00002' order represents '0' with '-659'
c Encoding variable: rijk_00005_00005_00003 with domain: bool (representing constraint )
c Var 'rijk_00005_00005_00003' direct represents '0' with '-660'
c Var 'rijk_00005_00005_00003' direct represents '1' with '660'
c Var 'rijk_00005_00005_00003' order represents '1' with '1'
c Var 'rijk_00005_00005_00003' order represents '0' with '-660'
c Encoding variable: rijk_00005_00006_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00006_00001' direct represents '0' with '-661'
c Var 'rijk_00005_00006_00001' direct represents '1' with '661'
c Var 'rijk_00005_00006_00001' order represents '1' with '1'
c Var 'rijk_00005_00006_00001' order represents '0' with '-661'
c Encoding variable: rijk_00005_00006_00002 with domain: bool (representing constraint )
c Var 'rijk_00005_00006_00002' direct represents '0' with '-662'
c Var 'rijk_00005_00006_00002' direct represents '1' with '662'
c Var 'rijk_00005_00006_00002' order represents '1' with '1'
c Var 'rijk_00005_00006_00002' order represents '0' with '-662'
c Encoding variable: rijk_00005_00006_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00006_00003' direct represents '0' with '663'
663 0
c Encoding variable: rijk_00005_00007_00001 with domain: bool (representing constraint )
c Var 'rijk_00005_00007_00001' direct represents '0' with '-664'
c Var 'rijk_00005_00007_00001' direct represents '1' with '664'
c Var 'rijk_00005_00007_00001' order represents '1' with '1'
c Var 'rijk_00005_00007_00001' order represents '0' with '-664'
c Encoding variable: rijk_00005_00007_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00007_00002' direct represents '0' with '665'
665 0
c Encoding variable: rijk_00005_00007_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00007_00003' direct represents '0' with '666'
666 0
c Encoding variable: rijk_00005_00008_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00008_00001' direct represents '0' with '667'
667 0
c Encoding variable: rijk_00005_00008_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00008_00002' direct represents '0' with '668'
668 0
c Encoding variable: rijk_00005_00008_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00005_00008_00003' direct represents '0' with '669'
669 0
c Encoding variable: rijk_00006_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00001_00001' direct represents '0' with '-670'
c Var 'rijk_00006_00001_00001' direct represents '1' with '670'
c Var 'rijk_00006_00001_00001' order represents '1' with '1'
c Var 'rijk_00006_00001_00001' order represents '0' with '-670'
c Encoding variable: rijk_00006_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00001_00002' direct represents '0' with '-671'
c Var 'rijk_00006_00001_00002' direct represents '1' with '671'
c Var 'rijk_00006_00001_00002' order represents '1' with '1'
c Var 'rijk_00006_00001_00002' order represents '0' with '-671'
c Encoding variable: rijk_00006_00001_00003 with domain: bool (representing constraint )
c Var 'rijk_00006_00001_00003' direct represents '0' with '-672'
c Var 'rijk_00006_00001_00003' direct represents '1' with '672'
c Var 'rijk_00006_00001_00003' order represents '1' with '1'
c Var 'rijk_00006_00001_00003' order represents '0' with '-672'
c Encoding variable: rijk_00006_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00002_00001' direct represents '0' with '-673'
c Var 'rijk_00006_00002_00001' direct represents '1' with '673'
c Var 'rijk_00006_00002_00001' order represents '1' with '1'
c Var 'rijk_00006_00002_00001' order represents '0' with '-673'
c Encoding variable: rijk_00006_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00002_00002' direct represents '0' with '-674'
c Var 'rijk_00006_00002_00002' direct represents '1' with '674'
c Var 'rijk_00006_00002_00002' order represents '1' with '1'
c Var 'rijk_00006_00002_00002' order represents '0' with '-674'
c Encoding variable: rijk_00006_00002_00003 with domain: bool (representing constraint )
c Var 'rijk_00006_00002_00003' direct represents '0' with '-675'
c Var 'rijk_00006_00002_00003' direct represents '1' with '675'
c Var 'rijk_00006_00002_00003' order represents '1' with '1'
c Var 'rijk_00006_00002_00003' order represents '0' with '-675'
c Encoding variable: rijk_00006_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00003_00001' direct represents '0' with '-676'
c Var 'rijk_00006_00003_00001' direct represents '1' with '676'
c Var 'rijk_00006_00003_00001' order represents '1' with '1'
c Var 'rijk_00006_00003_00001' order represents '0' with '-676'
c Encoding variable: rijk_00006_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00003_00002' direct represents '0' with '-677'
c Var 'rijk_00006_00003_00002' direct represents '1' with '677'
c Var 'rijk_00006_00003_00002' order represents '1' with '1'
c Var 'rijk_00006_00003_00002' order represents '0' with '-677'
c Encoding variable: rijk_00006_00003_00003 with domain: bool (representing constraint )
c Var 'rijk_00006_00003_00003' direct represents '0' with '-678'
c Var 'rijk_00006_00003_00003' direct represents '1' with '678'
c Var 'rijk_00006_00003_00003' order represents '1' with '1'
c Var 'rijk_00006_00003_00003' order represents '0' with '-678'
c Encoding variable: rijk_00006_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00004_00001' direct represents '0' with '-679'
c Var 'rijk_00006_00004_00001' direct represents '1' with '679'
c Var 'rijk_00006_00004_00001' order represents '1' with '1'
c Var 'rijk_00006_00004_00001' order represents '0' with '-679'
c Encoding variable: rijk_00006_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00004_00002' direct represents '0' with '-680'
c Var 'rijk_00006_00004_00002' direct represents '1' with '680'
c Var 'rijk_00006_00004_00002' order represents '1' with '1'
c Var 'rijk_00006_00004_00002' order represents '0' with '-680'
c Encoding variable: rijk_00006_00004_00003 with domain: bool (representing constraint )
c Var 'rijk_00006_00004_00003' direct represents '0' with '-681'
c Var 'rijk_00006_00004_00003' direct represents '1' with '681'
c Var 'rijk_00006_00004_00003' order represents '1' with '1'
c Var 'rijk_00006_00004_00003' order represents '0' with '-681'
c Encoding variable: rijk_00006_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00005_00001' direct represents '0' with '-682'
c Var 'rijk_00006_00005_00001' direct represents '1' with '682'
c Var 'rijk_00006_00005_00001' order represents '1' with '1'
c Var 'rijk_00006_00005_00001' order represents '0' with '-682'
c Encoding variable: rijk_00006_00005_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00005_00002' direct represents '0' with '-683'
c Var 'rijk_00006_00005_00002' direct represents '1' with '683'
c Var 'rijk_00006_00005_00002' order represents '1' with '1'
c Var 'rijk_00006_00005_00002' order represents '0' with '-683'
c Encoding variable: rijk_00006_00005_00003 with domain: bool (representing constraint )
c Var 'rijk_00006_00005_00003' direct represents '0' with '-684'
c Var 'rijk_00006_00005_00003' direct represents '1' with '684'
c Var 'rijk_00006_00005_00003' order represents '1' with '1'
c Var 'rijk_00006_00005_00003' order represents '0' with '-684'
c Encoding variable: rijk_00006_00006_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00006_00001' direct represents '0' with '-685'
c Var 'rijk_00006_00006_00001' direct represents '1' with '685'
c Var 'rijk_00006_00006_00001' order represents '1' with '1'
c Var 'rijk_00006_00006_00001' order represents '0' with '-685'
c Encoding variable: rijk_00006_00006_00002 with domain: bool (representing constraint )
c Var 'rijk_00006_00006_00002' direct represents '0' with '-686'
c Var 'rijk_00006_00006_00002' direct represents '1' with '686'
c Var 'rijk_00006_00006_00002' order represents '1' with '1'
c Var 'rijk_00006_00006_00002' order represents '0' with '-686'
c Encoding variable: rijk_00006_00006_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00006_00003' direct represents '0' with '687'
687 0
c Encoding variable: rijk_00006_00007_00001 with domain: bool (representing constraint )
c Var 'rijk_00006_00007_00001' direct represents '0' with '-688'
c Var 'rijk_00006_00007_00001' direct represents '1' with '688'
c Var 'rijk_00006_00007_00001' order represents '1' with '1'
c Var 'rijk_00006_00007_00001' order represents '0' with '-688'
c Encoding variable: rijk_00006_00007_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00007_00002' direct represents '0' with '689'
689 0
c Encoding variable: rijk_00006_00007_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00007_00003' direct represents '0' with '690'
690 0
c Encoding variable: rijk_00006_00008_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00008_00001' direct represents '0' with '691'
691 0
c Encoding variable: rijk_00006_00008_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00008_00002' direct represents '0' with '692'
692 0
c Encoding variable: rijk_00006_00008_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00006_00008_00003' direct represents '0' with '693'
693 0
c Encoding variable: rijk_00007_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00007_00001_00001' direct represents '0' with '-694'
c Var 'rijk_00007_00001_00001' direct represents '1' with '694'
c Var 'rijk_00007_00001_00001' order represents '1' with '1'
c Var 'rijk_00007_00001_00001' order represents '0' with '-694'
c Encoding variable: rijk_00007_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00007_00001_00002' direct represents '0' with '-695'
c Var 'rijk_00007_00001_00002' direct represents '1' with '695'
c Var 'rijk_00007_00001_00002' order represents '1' with '1'
c Var 'rijk_00007_00001_00002' order represents '0' with '-695'
c Encoding variable: rijk_00007_00001_00003 with domain: bool (representing constraint )
c Var 'rijk_00007_00001_00003' direct represents '0' with '-696'
c Var 'rijk_00007_00001_00003' direct represents '1' with '696'
c Var 'rijk_00007_00001_00003' order represents '1' with '1'
c Var 'rijk_00007_00001_00003' order represents '0' with '-696'
c Encoding variable: rijk_00007_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00007_00002_00001' direct represents '0' with '-697'
c Var 'rijk_00007_00002_00001' direct represents '1' with '697'
c Var 'rijk_00007_00002_00001' order represents '1' with '1'
c Var 'rijk_00007_00002_00001' order represents '0' with '-697'
c Encoding variable: rijk_00007_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00007_00002_00002' direct represents '0' with '-698'
c Var 'rijk_00007_00002_00002' direct represents '1' with '698'
c Var 'rijk_00007_00002_00002' order represents '1' with '1'
c Var 'rijk_00007_00002_00002' order represents '0' with '-698'
c Encoding variable: rijk_00007_00002_00003 with domain: bool (representing constraint )
c Var 'rijk_00007_00002_00003' direct represents '0' with '-699'
c Var 'rijk_00007_00002_00003' direct represents '1' with '699'
c Var 'rijk_00007_00002_00003' order represents '1' with '1'
c Var 'rijk_00007_00002_00003' order represents '0' with '-699'
c Encoding variable: rijk_00007_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00007_00003_00001' direct represents '0' with '-700'
c Var 'rijk_00007_00003_00001' direct represents '1' with '700'
c Var 'rijk_00007_00003_00001' order represents '1' with '1'
c Var 'rijk_00007_00003_00001' order represents '0' with '-700'
c Encoding variable: rijk_00007_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00007_00003_00002' direct represents '0' with '-701'
c Var 'rijk_00007_00003_00002' direct represents '1' with '701'
c Var 'rijk_00007_00003_00002' order represents '1' with '1'
c Var 'rijk_00007_00003_00002' order represents '0' with '-701'
c Encoding variable: rijk_00007_00003_00003 with domain: bool (representing constraint )
c Var 'rijk_00007_00003_00003' direct represents '0' with '-702'
c Var 'rijk_00007_00003_00003' direct represents '1' with '702'
c Var 'rijk_00007_00003_00003' order represents '1' with '1'
c Var 'rijk_00007_00003_00003' order represents '0' with '-702'
c Encoding variable: rijk_00007_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00007_00004_00001' direct represents '0' with '-703'
c Var 'rijk_00007_00004_00001' direct represents '1' with '703'
c Var 'rijk_00007_00004_00001' order represents '1' with '1'
c Var 'rijk_00007_00004_00001' order represents '0' with '-703'
c Encoding variable: rijk_00007_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00007_00004_00002' direct represents '0' with '-704'
c Var 'rijk_00007_00004_00002' direct represents '1' with '704'
c Var 'rijk_00007_00004_00002' order represents '1' with '1'
c Var 'rijk_00007_00004_00002' order represents '0' with '-704'
c Encoding variable: rijk_00007_00004_00003 with domain: bool (representing constraint )
c Var 'rijk_00007_00004_00003' direct represents '0' with '-705'
c Var 'rijk_00007_00004_00003' direct represents '1' with '705'
c Var 'rijk_00007_00004_00003' order represents '1' with '1'
c Var 'rijk_00007_00004_00003' order represents '0' with '-705'
c Encoding variable: rijk_00007_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00007_00005_00001' direct represents '0' with '-706'
c Var 'rijk_00007_00005_00001' direct represents '1' with '706'
c Var 'rijk_00007_00005_00001' order represents '1' with '1'
c Var 'rijk_00007_00005_00001' order represents '0' with '-706'
c Encoding variable: rijk_00007_00005_00002 with domain: bool (representing constraint )
c Var 'rijk_00007_00005_00002' direct represents '0' with '-707'
c Var 'rijk_00007_00005_00002' direct represents '1' with '707'
c Var 'rijk_00007_00005_00002' order represents '1' with '1'
c Var 'rijk_00007_00005_00002' order represents '0' with '-707'
c Encoding variable: rijk_00007_00005_00003 with domain: bool (representing constraint )
c Var 'rijk_00007_00005_00003' direct represents '0' with '-708'
c Var 'rijk_00007_00005_00003' direct represents '1' with '708'
c Var 'rijk_00007_00005_00003' order represents '1' with '1'
c Var 'rijk_00007_00005_00003' order represents '0' with '-708'
c Encoding variable: rijk_00007_00006_00001 with domain: bool (representing constraint )
c Var 'rijk_00007_00006_00001' direct represents '0' with '-709'
c Var 'rijk_00007_00006_00001' direct represents '1' with '709'
c Var 'rijk_00007_00006_00001' order represents '1' with '1'
c Var 'rijk_00007_00006_00001' order represents '0' with '-709'
c Encoding variable: rijk_00007_00006_00002 with domain: bool (representing constraint )
c Var 'rijk_00007_00006_00002' direct represents '0' with '-710'
c Var 'rijk_00007_00006_00002' direct represents '1' with '710'
c Var 'rijk_00007_00006_00002' order represents '1' with '1'
c Var 'rijk_00007_00006_00002' order represents '0' with '-710'
c Encoding variable: rijk_00007_00006_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00007_00006_00003' direct represents '0' with '711'
711 0
c Encoding variable: rijk_00007_00007_00001 with domain: bool (representing constraint )
c Var 'rijk_00007_00007_00001' direct represents '0' with '-712'
c Var 'rijk_00007_00007_00001' direct represents '1' with '712'
c Var 'rijk_00007_00007_00001' order represents '1' with '1'
c Var 'rijk_00007_00007_00001' order represents '0' with '-712'
c Encoding variable: rijk_00007_00007_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00007_00007_00002' direct represents '0' with '713'
713 0
c Encoding variable: rijk_00007_00007_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00007_00007_00003' direct represents '0' with '714'
714 0
c Encoding variable: rijk_00007_00008_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00007_00008_00001' direct represents '0' with '715'
715 0
c Encoding variable: rijk_00007_00008_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00007_00008_00002' direct represents '0' with '716'
716 0
c Encoding variable: rijk_00007_00008_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00007_00008_00003' direct represents '0' with '717'
717 0
c Encoding variable: rijk_00008_00001_00001 with domain: bool (representing constraint )
c Var 'rijk_00008_00001_00001' direct represents '0' with '-718'
c Var 'rijk_00008_00001_00001' direct represents '1' with '718'
c Var 'rijk_00008_00001_00001' order represents '1' with '1'
c Var 'rijk_00008_00001_00001' order represents '0' with '-718'
c Encoding variable: rijk_00008_00001_00002 with domain: bool (representing constraint )
c Var 'rijk_00008_00001_00002' direct represents '0' with '-719'
c Var 'rijk_00008_00001_00002' direct represents '1' with '719'
c Var 'rijk_00008_00001_00002' order represents '1' with '1'
c Var 'rijk_00008_00001_00002' order represents '0' with '-719'
c Encoding variable: rijk_00008_00001_00003 with domain: bool (representing constraint )
c Var 'rijk_00008_00001_00003' direct represents '0' with '-720'
c Var 'rijk_00008_00001_00003' direct represents '1' with '720'
c Var 'rijk_00008_00001_00003' order represents '1' with '1'
c Var 'rijk_00008_00001_00003' order represents '0' with '-720'
c Encoding variable: rijk_00008_00002_00001 with domain: bool (representing constraint )
c Var 'rijk_00008_00002_00001' direct represents '0' with '-721'
c Var 'rijk_00008_00002_00001' direct represents '1' with '721'
c Var 'rijk_00008_00002_00001' order represents '1' with '1'
c Var 'rijk_00008_00002_00001' order represents '0' with '-721'
c Encoding variable: rijk_00008_00002_00002 with domain: bool (representing constraint )
c Var 'rijk_00008_00002_00002' direct represents '0' with '-722'
c Var 'rijk_00008_00002_00002' direct represents '1' with '722'
c Var 'rijk_00008_00002_00002' order represents '1' with '1'
c Var 'rijk_00008_00002_00002' order represents '0' with '-722'
c Encoding variable: rijk_00008_00002_00003 with domain: bool (representing constraint )
c Var 'rijk_00008_00002_00003' direct represents '0' with '-723'
c Var 'rijk_00008_00002_00003' direct represents '1' with '723'
c Var 'rijk_00008_00002_00003' order represents '1' with '1'
c Var 'rijk_00008_00002_00003' order represents '0' with '-723'
c Encoding variable: rijk_00008_00003_00001 with domain: bool (representing constraint )
c Var 'rijk_00008_00003_00001' direct represents '0' with '-724'
c Var 'rijk_00008_00003_00001' direct represents '1' with '724'
c Var 'rijk_00008_00003_00001' order represents '1' with '1'
c Var 'rijk_00008_00003_00001' order represents '0' with '-724'
c Encoding variable: rijk_00008_00003_00002 with domain: bool (representing constraint )
c Var 'rijk_00008_00003_00002' direct represents '0' with '-725'
c Var 'rijk_00008_00003_00002' direct represents '1' with '725'
c Var 'rijk_00008_00003_00002' order represents '1' with '1'
c Var 'rijk_00008_00003_00002' order represents '0' with '-725'
c Encoding variable: rijk_00008_00003_00003 with domain: bool (representing constraint )
c Var 'rijk_00008_00003_00003' direct represents '0' with '-726'
c Var 'rijk_00008_00003_00003' direct represents '1' with '726'
c Var 'rijk_00008_00003_00003' order represents '1' with '1'
c Var 'rijk_00008_00003_00003' order represents '0' with '-726'
c Encoding variable: rijk_00008_00004_00001 with domain: bool (representing constraint )
c Var 'rijk_00008_00004_00001' direct represents '0' with '-727'
c Var 'rijk_00008_00004_00001' direct represents '1' with '727'
c Var 'rijk_00008_00004_00001' order represents '1' with '1'
c Var 'rijk_00008_00004_00001' order represents '0' with '-727'
c Encoding variable: rijk_00008_00004_00002 with domain: bool (representing constraint )
c Var 'rijk_00008_00004_00002' direct represents '0' with '-728'
c Var 'rijk_00008_00004_00002' direct represents '1' with '728'
c Var 'rijk_00008_00004_00002' order represents '1' with '1'
c Var 'rijk_00008_00004_00002' order represents '0' with '-728'
c Encoding variable: rijk_00008_00004_00003 with domain: bool (representing constraint )
c Var 'rijk_00008_00004_00003' direct represents '0' with '-729'
c Var 'rijk_00008_00004_00003' direct represents '1' with '729'
c Var 'rijk_00008_00004_00003' order represents '1' with '1'
c Var 'rijk_00008_00004_00003' order represents '0' with '-729'
c Encoding variable: rijk_00008_00005_00001 with domain: bool (representing constraint )
c Var 'rijk_00008_00005_00001' direct represents '0' with '-730'
c Var 'rijk_00008_00005_00001' direct represents '1' with '730'
c Var 'rijk_00008_00005_00001' order represents '1' with '1'
c Var 'rijk_00008_00005_00001' order represents '0' with '-730'
c Encoding variable: rijk_00008_00005_00002 with domain: bool (representing constraint )
c Var 'rijk_00008_00005_00002' direct represents '0' with '-731'
c Var 'rijk_00008_00005_00002' direct represents '1' with '731'
c Var 'rijk_00008_00005_00002' order represents '1' with '1'
c Var 'rijk_00008_00005_00002' order represents '0' with '-731'
c Encoding variable: rijk_00008_00005_00003 with domain: bool (representing constraint )
c Var 'rijk_00008_00005_00003' direct represents '0' with '-732'
c Var 'rijk_00008_00005_00003' direct represents '1' with '732'
c Var 'rijk_00008_00005_00003' order represents '1' with '1'
c Var 'rijk_00008_00005_00003' order represents '0' with '-732'
c Encoding variable: rijk_00008_00006_00001 with domain: bool (representing constraint )
c Var 'rijk_00008_00006_00001' direct represents '0' with '-733'
c Var 'rijk_00008_00006_00001' direct represents '1' with '733'
c Var 'rijk_00008_00006_00001' order represents '1' with '1'
c Var 'rijk_00008_00006_00001' order represents '0' with '-733'
c Encoding variable: rijk_00008_00006_00002 with domain: bool (representing constraint )
c Var 'rijk_00008_00006_00002' direct represents '0' with '-734'
c Var 'rijk_00008_00006_00002' direct represents '1' with '734'
c Var 'rijk_00008_00006_00002' order represents '1' with '1'
c Var 'rijk_00008_00006_00002' order represents '0' with '-734'
c Encoding variable: rijk_00008_00006_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00008_00006_00003' direct represents '0' with '735'
735 0
c Encoding variable: rijk_00008_00007_00001 with domain: bool (representing constraint )
c Var 'rijk_00008_00007_00001' direct represents '0' with '-736'
c Var 'rijk_00008_00007_00001' direct represents '1' with '736'
c Var 'rijk_00008_00007_00001' order represents '1' with '1'
c Var 'rijk_00008_00007_00001' order represents '0' with '-736'
c Encoding variable: rijk_00008_00007_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00008_00007_00002' direct represents '0' with '737'
737 0
c Encoding variable: rijk_00008_00007_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00008_00007_00003' direct represents '0' with '738'
738 0
c Encoding variable: rijk_00008_00008_00001 with domain: bool(false) (representing constraint )
c Var 'rijk_00008_00008_00001' direct represents '0' with '739'
739 0
c Encoding variable: rijk_00008_00008_00002 with domain: bool(false) (representing constraint )
c Var 'rijk_00008_00008_00002' direct represents '0' with '740'
740 0
c Encoding variable: rijk_00008_00008_00003 with domain: bool(false) (representing constraint )
c Var 'rijk_00008_00008_00003' direct represents '0' with '741'
741 0
c Encoding variable: dijk_00001_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00001_00001' direct represents '0' with '-742'
c Var 'dijk_00001_00001_00001' direct represents '1' with '742'
c Var 'dijk_00001_00001_00001' order represents '1' with '1'
c Var 'dijk_00001_00001_00001' order represents '0' with '-742'
c Encoding variable: dijk_00001_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00001_00002' direct represents '0' with '-743'
c Var 'dijk_00001_00001_00002' direct represents '1' with '743'
c Var 'dijk_00001_00001_00002' order represents '1' with '1'
c Var 'dijk_00001_00001_00002' order represents '0' with '-743'
c Encoding variable: dijk_00001_00001_00003 with domain: bool (representing constraint )
c Var 'dijk_00001_00001_00003' direct represents '0' with '-744'
c Var 'dijk_00001_00001_00003' direct represents '1' with '744'
c Var 'dijk_00001_00001_00003' order represents '1' with '1'
c Var 'dijk_00001_00001_00003' order represents '0' with '-744'
c Encoding variable: dijk_00001_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00002_00001' direct represents '0' with '-745'
c Var 'dijk_00001_00002_00001' direct represents '1' with '745'
c Var 'dijk_00001_00002_00001' order represents '1' with '1'
c Var 'dijk_00001_00002_00001' order represents '0' with '-745'
c Encoding variable: dijk_00001_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00002_00002' direct represents '0' with '-746'
c Var 'dijk_00001_00002_00002' direct represents '1' with '746'
c Var 'dijk_00001_00002_00002' order represents '1' with '1'
c Var 'dijk_00001_00002_00002' order represents '0' with '-746'
c Encoding variable: dijk_00001_00002_00003 with domain: bool (representing constraint )
c Var 'dijk_00001_00002_00003' direct represents '0' with '-747'
c Var 'dijk_00001_00002_00003' direct represents '1' with '747'
c Var 'dijk_00001_00002_00003' order represents '1' with '1'
c Var 'dijk_00001_00002_00003' order represents '0' with '-747'
c Encoding variable: dijk_00001_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00003_00001' direct represents '0' with '-748'
c Var 'dijk_00001_00003_00001' direct represents '1' with '748'
c Var 'dijk_00001_00003_00001' order represents '1' with '1'
c Var 'dijk_00001_00003_00001' order represents '0' with '-748'
c Encoding variable: dijk_00001_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00003_00002' direct represents '0' with '-749'
c Var 'dijk_00001_00003_00002' direct represents '1' with '749'
c Var 'dijk_00001_00003_00002' order represents '1' with '1'
c Var 'dijk_00001_00003_00002' order represents '0' with '-749'
c Encoding variable: dijk_00001_00003_00003 with domain: bool (representing constraint )
c Var 'dijk_00001_00003_00003' direct represents '0' with '-750'
c Var 'dijk_00001_00003_00003' direct represents '1' with '750'
c Var 'dijk_00001_00003_00003' order represents '1' with '1'
c Var 'dijk_00001_00003_00003' order represents '0' with '-750'
c Encoding variable: dijk_00001_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00004_00001' direct represents '0' with '-751'
c Var 'dijk_00001_00004_00001' direct represents '1' with '751'
c Var 'dijk_00001_00004_00001' order represents '1' with '1'
c Var 'dijk_00001_00004_00001' order represents '0' with '-751'
c Encoding variable: dijk_00001_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00004_00002' direct represents '0' with '-752'
c Var 'dijk_00001_00004_00002' direct represents '1' with '752'
c Var 'dijk_00001_00004_00002' order represents '1' with '1'
c Var 'dijk_00001_00004_00002' order represents '0' with '-752'
c Encoding variable: dijk_00001_00004_00003 with domain: bool (representing constraint )
c Var 'dijk_00001_00004_00003' direct represents '0' with '-753'
c Var 'dijk_00001_00004_00003' direct represents '1' with '753'
c Var 'dijk_00001_00004_00003' order represents '1' with '1'
c Var 'dijk_00001_00004_00003' order represents '0' with '-753'
c Encoding variable: dijk_00001_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00005_00001' direct represents '0' with '-754'
c Var 'dijk_00001_00005_00001' direct represents '1' with '754'
c Var 'dijk_00001_00005_00001' order represents '1' with '1'
c Var 'dijk_00001_00005_00001' order represents '0' with '-754'
c Encoding variable: dijk_00001_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00005_00002' direct represents '0' with '-755'
c Var 'dijk_00001_00005_00002' direct represents '1' with '755'
c Var 'dijk_00001_00005_00002' order represents '1' with '1'
c Var 'dijk_00001_00005_00002' order represents '0' with '-755'
c Encoding variable: dijk_00001_00005_00003 with domain: bool (representing constraint )
c Var 'dijk_00001_00005_00003' direct represents '0' with '-756'
c Var 'dijk_00001_00005_00003' direct represents '1' with '756'
c Var 'dijk_00001_00005_00003' order represents '1' with '1'
c Var 'dijk_00001_00005_00003' order represents '0' with '-756'
c Encoding variable: dijk_00001_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00006_00001' direct represents '0' with '-757'
c Var 'dijk_00001_00006_00001' direct represents '1' with '757'
c Var 'dijk_00001_00006_00001' order represents '1' with '1'
c Var 'dijk_00001_00006_00001' order represents '0' with '-757'
c Encoding variable: dijk_00001_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00006_00002' direct represents '0' with '-758'
c Var 'dijk_00001_00006_00002' direct represents '1' with '758'
c Var 'dijk_00001_00006_00002' order represents '1' with '1'
c Var 'dijk_00001_00006_00002' order represents '0' with '-758'
c Encoding variable: dijk_00001_00006_00003 with domain: bool (representing constraint )
c Var 'dijk_00001_00006_00003' direct represents '0' with '-759'
c Var 'dijk_00001_00006_00003' direct represents '1' with '759'
c Var 'dijk_00001_00006_00003' order represents '1' with '1'
c Var 'dijk_00001_00006_00003' order represents '0' with '-759'
c Encoding variable: dijk_00001_00007_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00007_00001' direct represents '0' with '-760'
c Var 'dijk_00001_00007_00001' direct represents '1' with '760'
c Var 'dijk_00001_00007_00001' order represents '1' with '1'
c Var 'dijk_00001_00007_00001' order represents '0' with '-760'
c Encoding variable: dijk_00001_00007_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00007_00002' direct represents '0' with '-761'
c Var 'dijk_00001_00007_00002' direct represents '1' with '761'
c Var 'dijk_00001_00007_00002' order represents '1' with '1'
c Var 'dijk_00001_00007_00002' order represents '0' with '-761'
c Encoding variable: dijk_00001_00007_00003 with domain: bool (representing constraint )
c Var 'dijk_00001_00007_00003' direct represents '0' with '-762'
c Var 'dijk_00001_00007_00003' direct represents '1' with '762'
c Var 'dijk_00001_00007_00003' order represents '1' with '1'
c Var 'dijk_00001_00007_00003' order represents '0' with '-762'
c Encoding variable: dijk_00001_00008_00001 with domain: bool (representing constraint )
c Var 'dijk_00001_00008_00001' direct represents '0' with '-763'
c Var 'dijk_00001_00008_00001' direct represents '1' with '763'
c Var 'dijk_00001_00008_00001' order represents '1' with '1'
c Var 'dijk_00001_00008_00001' order represents '0' with '-763'
c Encoding variable: dijk_00001_00008_00002 with domain: bool (representing constraint )
c Var 'dijk_00001_00008_00002' direct represents '0' with '-764'
c Var 'dijk_00001_00008_00002' direct represents '1' with '764'
c Var 'dijk_00001_00008_00002' order represents '1' with '1'
c Var 'dijk_00001_00008_00002' order represents '0' with '-764'
c Encoding variable: dijk_00001_00008_00003 with domain: bool (representing constraint )
c Var 'dijk_00001_00008_00003' direct represents '0' with '-765'
c Var 'dijk_00001_00008_00003' direct represents '1' with '765'
c Var 'dijk_00001_00008_00003' order represents '1' with '1'
c Var 'dijk_00001_00008_00003' order represents '0' with '-765'
c Encoding variable: dijk_00002_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00001_00001' direct represents '0' with '-766'
c Var 'dijk_00002_00001_00001' direct represents '1' with '766'
c Var 'dijk_00002_00001_00001' order represents '1' with '1'
c Var 'dijk_00002_00001_00001' order represents '0' with '-766'
c Encoding variable: dijk_00002_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00001_00002' direct represents '0' with '-767'
c Var 'dijk_00002_00001_00002' direct represents '1' with '767'
c Var 'dijk_00002_00001_00002' order represents '1' with '1'
c Var 'dijk_00002_00001_00002' order represents '0' with '-767'
c Encoding variable: dijk_00002_00001_00003 with domain: bool (representing constraint )
c Var 'dijk_00002_00001_00003' direct represents '0' with '-768'
c Var 'dijk_00002_00001_00003' direct represents '1' with '768'
c Var 'dijk_00002_00001_00003' order represents '1' with '1'
c Var 'dijk_00002_00001_00003' order represents '0' with '-768'
c Encoding variable: dijk_00002_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00002_00001' direct represents '0' with '-769'
c Var 'dijk_00002_00002_00001' direct represents '1' with '769'
c Var 'dijk_00002_00002_00001' order represents '1' with '1'
c Var 'dijk_00002_00002_00001' order represents '0' with '-769'
c Encoding variable: dijk_00002_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00002_00002' direct represents '0' with '-770'
c Var 'dijk_00002_00002_00002' direct represents '1' with '770'
c Var 'dijk_00002_00002_00002' order represents '1' with '1'
c Var 'dijk_00002_00002_00002' order represents '0' with '-770'
c Encoding variable: dijk_00002_00002_00003 with domain: bool (representing constraint )
c Var 'dijk_00002_00002_00003' direct represents '0' with '-771'
c Var 'dijk_00002_00002_00003' direct represents '1' with '771'
c Var 'dijk_00002_00002_00003' order represents '1' with '1'
c Var 'dijk_00002_00002_00003' order represents '0' with '-771'
c Encoding variable: dijk_00002_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00003_00001' direct represents '0' with '-772'
c Var 'dijk_00002_00003_00001' direct represents '1' with '772'
c Var 'dijk_00002_00003_00001' order represents '1' with '1'
c Var 'dijk_00002_00003_00001' order represents '0' with '-772'
c Encoding variable: dijk_00002_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00003_00002' direct represents '0' with '-773'
c Var 'dijk_00002_00003_00002' direct represents '1' with '773'
c Var 'dijk_00002_00003_00002' order represents '1' with '1'
c Var 'dijk_00002_00003_00002' order represents '0' with '-773'
c Encoding variable: dijk_00002_00003_00003 with domain: bool (representing constraint )
c Var 'dijk_00002_00003_00003' direct represents '0' with '-774'
c Var 'dijk_00002_00003_00003' direct represents '1' with '774'
c Var 'dijk_00002_00003_00003' order represents '1' with '1'
c Var 'dijk_00002_00003_00003' order represents '0' with '-774'
c Encoding variable: dijk_00002_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00004_00001' direct represents '0' with '-775'
c Var 'dijk_00002_00004_00001' direct represents '1' with '775'
c Var 'dijk_00002_00004_00001' order represents '1' with '1'
c Var 'dijk_00002_00004_00001' order represents '0' with '-775'
c Encoding variable: dijk_00002_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00004_00002' direct represents '0' with '-776'
c Var 'dijk_00002_00004_00002' direct represents '1' with '776'
c Var 'dijk_00002_00004_00002' order represents '1' with '1'
c Var 'dijk_00002_00004_00002' order represents '0' with '-776'
c Encoding variable: dijk_00002_00004_00003 with domain: bool (representing constraint )
c Var 'dijk_00002_00004_00003' direct represents '0' with '-777'
c Var 'dijk_00002_00004_00003' direct represents '1' with '777'
c Var 'dijk_00002_00004_00003' order represents '1' with '1'
c Var 'dijk_00002_00004_00003' order represents '0' with '-777'
c Encoding variable: dijk_00002_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00005_00001' direct represents '0' with '-778'
c Var 'dijk_00002_00005_00001' direct represents '1' with '778'
c Var 'dijk_00002_00005_00001' order represents '1' with '1'
c Var 'dijk_00002_00005_00001' order represents '0' with '-778'
c Encoding variable: dijk_00002_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00005_00002' direct represents '0' with '-779'
c Var 'dijk_00002_00005_00002' direct represents '1' with '779'
c Var 'dijk_00002_00005_00002' order represents '1' with '1'
c Var 'dijk_00002_00005_00002' order represents '0' with '-779'
c Encoding variable: dijk_00002_00005_00003 with domain: bool (representing constraint )
c Var 'dijk_00002_00005_00003' direct represents '0' with '-780'
c Var 'dijk_00002_00005_00003' direct represents '1' with '780'
c Var 'dijk_00002_00005_00003' order represents '1' with '1'
c Var 'dijk_00002_00005_00003' order represents '0' with '-780'
c Encoding variable: dijk_00002_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00006_00001' direct represents '0' with '-781'
c Var 'dijk_00002_00006_00001' direct represents '1' with '781'
c Var 'dijk_00002_00006_00001' order represents '1' with '1'
c Var 'dijk_00002_00006_00001' order represents '0' with '-781'
c Encoding variable: dijk_00002_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00006_00002' direct represents '0' with '-782'
c Var 'dijk_00002_00006_00002' direct represents '1' with '782'
c Var 'dijk_00002_00006_00002' order represents '1' with '1'
c Var 'dijk_00002_00006_00002' order represents '0' with '-782'
c Encoding variable: dijk_00002_00006_00003 with domain: bool (representing constraint )
c Var 'dijk_00002_00006_00003' direct represents '0' with '-783'
c Var 'dijk_00002_00006_00003' direct represents '1' with '783'
c Var 'dijk_00002_00006_00003' order represents '1' with '1'
c Var 'dijk_00002_00006_00003' order represents '0' with '-783'
c Encoding variable: dijk_00002_00007_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00007_00001' direct represents '0' with '-784'
c Var 'dijk_00002_00007_00001' direct represents '1' with '784'
c Var 'dijk_00002_00007_00001' order represents '1' with '1'
c Var 'dijk_00002_00007_00001' order represents '0' with '-784'
c Encoding variable: dijk_00002_00007_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00007_00002' direct represents '0' with '-785'
c Var 'dijk_00002_00007_00002' direct represents '1' with '785'
c Var 'dijk_00002_00007_00002' order represents '1' with '1'
c Var 'dijk_00002_00007_00002' order represents '0' with '-785'
c Encoding variable: dijk_00002_00007_00003 with domain: bool (representing constraint )
c Var 'dijk_00002_00007_00003' direct represents '0' with '-786'
c Var 'dijk_00002_00007_00003' direct represents '1' with '786'
c Var 'dijk_00002_00007_00003' order represents '1' with '1'
c Var 'dijk_00002_00007_00003' order represents '0' with '-786'
c Encoding variable: dijk_00002_00008_00001 with domain: bool (representing constraint )
c Var 'dijk_00002_00008_00001' direct represents '0' with '-787'
c Var 'dijk_00002_00008_00001' direct represents '1' with '787'
c Var 'dijk_00002_00008_00001' order represents '1' with '1'
c Var 'dijk_00002_00008_00001' order represents '0' with '-787'
c Encoding variable: dijk_00002_00008_00002 with domain: bool (representing constraint )
c Var 'dijk_00002_00008_00002' direct represents '0' with '-788'
c Var 'dijk_00002_00008_00002' direct represents '1' with '788'
c Var 'dijk_00002_00008_00002' order represents '1' with '1'
c Var 'dijk_00002_00008_00002' order represents '0' with '-788'
c Encoding variable: dijk_00002_00008_00003 with domain: bool (representing constraint )
c Var 'dijk_00002_00008_00003' direct represents '0' with '-789'
c Var 'dijk_00002_00008_00003' direct represents '1' with '789'
c Var 'dijk_00002_00008_00003' order represents '1' with '1'
c Var 'dijk_00002_00008_00003' order represents '0' with '-789'
c Encoding variable: dijk_00003_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00001_00001' direct represents '0' with '-790'
c Var 'dijk_00003_00001_00001' direct represents '1' with '790'
c Var 'dijk_00003_00001_00001' order represents '1' with '1'
c Var 'dijk_00003_00001_00001' order represents '0' with '-790'
c Encoding variable: dijk_00003_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00001_00002' direct represents '0' with '-791'
c Var 'dijk_00003_00001_00002' direct represents '1' with '791'
c Var 'dijk_00003_00001_00002' order represents '1' with '1'
c Var 'dijk_00003_00001_00002' order represents '0' with '-791'
c Encoding variable: dijk_00003_00001_00003 with domain: bool (representing constraint )
c Var 'dijk_00003_00001_00003' direct represents '0' with '-792'
c Var 'dijk_00003_00001_00003' direct represents '1' with '792'
c Var 'dijk_00003_00001_00003' order represents '1' with '1'
c Var 'dijk_00003_00001_00003' order represents '0' with '-792'
c Encoding variable: dijk_00003_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00002_00001' direct represents '0' with '-793'
c Var 'dijk_00003_00002_00001' direct represents '1' with '793'
c Var 'dijk_00003_00002_00001' order represents '1' with '1'
c Var 'dijk_00003_00002_00001' order represents '0' with '-793'
c Encoding variable: dijk_00003_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00002_00002' direct represents '0' with '-794'
c Var 'dijk_00003_00002_00002' direct represents '1' with '794'
c Var 'dijk_00003_00002_00002' order represents '1' with '1'
c Var 'dijk_00003_00002_00002' order represents '0' with '-794'
c Encoding variable: dijk_00003_00002_00003 with domain: bool (representing constraint )
c Var 'dijk_00003_00002_00003' direct represents '0' with '-795'
c Var 'dijk_00003_00002_00003' direct represents '1' with '795'
c Var 'dijk_00003_00002_00003' order represents '1' with '1'
c Var 'dijk_00003_00002_00003' order represents '0' with '-795'
c Encoding variable: dijk_00003_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00003_00001' direct represents '0' with '-796'
c Var 'dijk_00003_00003_00001' direct represents '1' with '796'
c Var 'dijk_00003_00003_00001' order represents '1' with '1'
c Var 'dijk_00003_00003_00001' order represents '0' with '-796'
c Encoding variable: dijk_00003_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00003_00002' direct represents '0' with '-797'
c Var 'dijk_00003_00003_00002' direct represents '1' with '797'
c Var 'dijk_00003_00003_00002' order represents '1' with '1'
c Var 'dijk_00003_00003_00002' order represents '0' with '-797'
c Encoding variable: dijk_00003_00003_00003 with domain: bool (representing constraint )
c Var 'dijk_00003_00003_00003' direct represents '0' with '-798'
c Var 'dijk_00003_00003_00003' direct represents '1' with '798'
c Var 'dijk_00003_00003_00003' order represents '1' with '1'
c Var 'dijk_00003_00003_00003' order represents '0' with '-798'
c Encoding variable: dijk_00003_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00004_00001' direct represents '0' with '-799'
c Var 'dijk_00003_00004_00001' direct represents '1' with '799'
c Var 'dijk_00003_00004_00001' order represents '1' with '1'
c Var 'dijk_00003_00004_00001' order represents '0' with '-799'
c Encoding variable: dijk_00003_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00004_00002' direct represents '0' with '-800'
c Var 'dijk_00003_00004_00002' direct represents '1' with '800'
c Var 'dijk_00003_00004_00002' order represents '1' with '1'
c Var 'dijk_00003_00004_00002' order represents '0' with '-800'
c Encoding variable: dijk_00003_00004_00003 with domain: bool (representing constraint )
c Var 'dijk_00003_00004_00003' direct represents '0' with '-801'
c Var 'dijk_00003_00004_00003' direct represents '1' with '801'
c Var 'dijk_00003_00004_00003' order represents '1' with '1'
c Var 'dijk_00003_00004_00003' order represents '0' with '-801'
c Encoding variable: dijk_00003_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00005_00001' direct represents '0' with '-802'
c Var 'dijk_00003_00005_00001' direct represents '1' with '802'
c Var 'dijk_00003_00005_00001' order represents '1' with '1'
c Var 'dijk_00003_00005_00001' order represents '0' with '-802'
c Encoding variable: dijk_00003_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00005_00002' direct represents '0' with '-803'
c Var 'dijk_00003_00005_00002' direct represents '1' with '803'
c Var 'dijk_00003_00005_00002' order represents '1' with '1'
c Var 'dijk_00003_00005_00002' order represents '0' with '-803'
c Encoding variable: dijk_00003_00005_00003 with domain: bool (representing constraint )
c Var 'dijk_00003_00005_00003' direct represents '0' with '-804'
c Var 'dijk_00003_00005_00003' direct represents '1' with '804'
c Var 'dijk_00003_00005_00003' order represents '1' with '1'
c Var 'dijk_00003_00005_00003' order represents '0' with '-804'
c Encoding variable: dijk_00003_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00006_00001' direct represents '0' with '-805'
c Var 'dijk_00003_00006_00001' direct represents '1' with '805'
c Var 'dijk_00003_00006_00001' order represents '1' with '1'
c Var 'dijk_00003_00006_00001' order represents '0' with '-805'
c Encoding variable: dijk_00003_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00006_00002' direct represents '0' with '-806'
c Var 'dijk_00003_00006_00002' direct represents '1' with '806'
c Var 'dijk_00003_00006_00002' order represents '1' with '1'
c Var 'dijk_00003_00006_00002' order represents '0' with '-806'
c Encoding variable: dijk_00003_00006_00003 with domain: bool (representing constraint )
c Var 'dijk_00003_00006_00003' direct represents '0' with '-807'
c Var 'dijk_00003_00006_00003' direct represents '1' with '807'
c Var 'dijk_00003_00006_00003' order represents '1' with '1'
c Var 'dijk_00003_00006_00003' order represents '0' with '-807'
c Encoding variable: dijk_00003_00007_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00007_00001' direct represents '0' with '-808'
c Var 'dijk_00003_00007_00001' direct represents '1' with '808'
c Var 'dijk_00003_00007_00001' order represents '1' with '1'
c Var 'dijk_00003_00007_00001' order represents '0' with '-808'
c Encoding variable: dijk_00003_00007_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00007_00002' direct represents '0' with '-809'
c Var 'dijk_00003_00007_00002' direct represents '1' with '809'
c Var 'dijk_00003_00007_00002' order represents '1' with '1'
c Var 'dijk_00003_00007_00002' order represents '0' with '-809'
c Encoding variable: dijk_00003_00007_00003 with domain: bool (representing constraint )
c Var 'dijk_00003_00007_00003' direct represents '0' with '-810'
c Var 'dijk_00003_00007_00003' direct represents '1' with '810'
c Var 'dijk_00003_00007_00003' order represents '1' with '1'
c Var 'dijk_00003_00007_00003' order represents '0' with '-810'
c Encoding variable: dijk_00003_00008_00001 with domain: bool (representing constraint )
c Var 'dijk_00003_00008_00001' direct represents '0' with '-811'
c Var 'dijk_00003_00008_00001' direct represents '1' with '811'
c Var 'dijk_00003_00008_00001' order represents '1' with '1'
c Var 'dijk_00003_00008_00001' order represents '0' with '-811'
c Encoding variable: dijk_00003_00008_00002 with domain: bool (representing constraint )
c Var 'dijk_00003_00008_00002' direct represents '0' with '-812'
c Var 'dijk_00003_00008_00002' direct represents '1' with '812'
c Var 'dijk_00003_00008_00002' order represents '1' with '1'
c Var 'dijk_00003_00008_00002' order represents '0' with '-812'
c Encoding variable: dijk_00003_00008_00003 with domain: bool (representing constraint )
c Var 'dijk_00003_00008_00003' direct represents '0' with '-813'
c Var 'dijk_00003_00008_00003' direct represents '1' with '813'
c Var 'dijk_00003_00008_00003' order represents '1' with '1'
c Var 'dijk_00003_00008_00003' order represents '0' with '-813'
c Encoding variable: dijk_00004_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00001_00001' direct represents '0' with '-814'
c Var 'dijk_00004_00001_00001' direct represents '1' with '814'
c Var 'dijk_00004_00001_00001' order represents '1' with '1'
c Var 'dijk_00004_00001_00001' order represents '0' with '-814'
c Encoding variable: dijk_00004_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00001_00002' direct represents '0' with '-815'
c Var 'dijk_00004_00001_00002' direct represents '1' with '815'
c Var 'dijk_00004_00001_00002' order represents '1' with '1'
c Var 'dijk_00004_00001_00002' order represents '0' with '-815'
c Encoding variable: dijk_00004_00001_00003 with domain: bool (representing constraint )
c Var 'dijk_00004_00001_00003' direct represents '0' with '-816'
c Var 'dijk_00004_00001_00003' direct represents '1' with '816'
c Var 'dijk_00004_00001_00003' order represents '1' with '1'
c Var 'dijk_00004_00001_00003' order represents '0' with '-816'
c Encoding variable: dijk_00004_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00002_00001' direct represents '0' with '-817'
c Var 'dijk_00004_00002_00001' direct represents '1' with '817'
c Var 'dijk_00004_00002_00001' order represents '1' with '1'
c Var 'dijk_00004_00002_00001' order represents '0' with '-817'
c Encoding variable: dijk_00004_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00002_00002' direct represents '0' with '-818'
c Var 'dijk_00004_00002_00002' direct represents '1' with '818'
c Var 'dijk_00004_00002_00002' order represents '1' with '1'
c Var 'dijk_00004_00002_00002' order represents '0' with '-818'
c Encoding variable: dijk_00004_00002_00003 with domain: bool (representing constraint )
c Var 'dijk_00004_00002_00003' direct represents '0' with '-819'
c Var 'dijk_00004_00002_00003' direct represents '1' with '819'
c Var 'dijk_00004_00002_00003' order represents '1' with '1'
c Var 'dijk_00004_00002_00003' order represents '0' with '-819'
c Encoding variable: dijk_00004_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00003_00001' direct represents '0' with '-820'
c Var 'dijk_00004_00003_00001' direct represents '1' with '820'
c Var 'dijk_00004_00003_00001' order represents '1' with '1'
c Var 'dijk_00004_00003_00001' order represents '0' with '-820'
c Encoding variable: dijk_00004_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00003_00002' direct represents '0' with '-821'
c Var 'dijk_00004_00003_00002' direct represents '1' with '821'
c Var 'dijk_00004_00003_00002' order represents '1' with '1'
c Var 'dijk_00004_00003_00002' order represents '0' with '-821'
c Encoding variable: dijk_00004_00003_00003 with domain: bool (representing constraint )
c Var 'dijk_00004_00003_00003' direct represents '0' with '-822'
c Var 'dijk_00004_00003_00003' direct represents '1' with '822'
c Var 'dijk_00004_00003_00003' order represents '1' with '1'
c Var 'dijk_00004_00003_00003' order represents '0' with '-822'
c Encoding variable: dijk_00004_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00004_00001' direct represents '0' with '-823'
c Var 'dijk_00004_00004_00001' direct represents '1' with '823'
c Var 'dijk_00004_00004_00001' order represents '1' with '1'
c Var 'dijk_00004_00004_00001' order represents '0' with '-823'
c Encoding variable: dijk_00004_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00004_00002' direct represents '0' with '-824'
c Var 'dijk_00004_00004_00002' direct represents '1' with '824'
c Var 'dijk_00004_00004_00002' order represents '1' with '1'
c Var 'dijk_00004_00004_00002' order represents '0' with '-824'
c Encoding variable: dijk_00004_00004_00003 with domain: bool (representing constraint )
c Var 'dijk_00004_00004_00003' direct represents '0' with '-825'
c Var 'dijk_00004_00004_00003' direct represents '1' with '825'
c Var 'dijk_00004_00004_00003' order represents '1' with '1'
c Var 'dijk_00004_00004_00003' order represents '0' with '-825'
c Encoding variable: dijk_00004_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00005_00001' direct represents '0' with '-826'
c Var 'dijk_00004_00005_00001' direct represents '1' with '826'
c Var 'dijk_00004_00005_00001' order represents '1' with '1'
c Var 'dijk_00004_00005_00001' order represents '0' with '-826'
c Encoding variable: dijk_00004_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00005_00002' direct represents '0' with '-827'
c Var 'dijk_00004_00005_00002' direct represents '1' with '827'
c Var 'dijk_00004_00005_00002' order represents '1' with '1'
c Var 'dijk_00004_00005_00002' order represents '0' with '-827'
c Encoding variable: dijk_00004_00005_00003 with domain: bool (representing constraint )
c Var 'dijk_00004_00005_00003' direct represents '0' with '-828'
c Var 'dijk_00004_00005_00003' direct represents '1' with '828'
c Var 'dijk_00004_00005_00003' order represents '1' with '1'
c Var 'dijk_00004_00005_00003' order represents '0' with '-828'
c Encoding variable: dijk_00004_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00006_00001' direct represents '0' with '-829'
c Var 'dijk_00004_00006_00001' direct represents '1' with '829'
c Var 'dijk_00004_00006_00001' order represents '1' with '1'
c Var 'dijk_00004_00006_00001' order represents '0' with '-829'
c Encoding variable: dijk_00004_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00006_00002' direct represents '0' with '-830'
c Var 'dijk_00004_00006_00002' direct represents '1' with '830'
c Var 'dijk_00004_00006_00002' order represents '1' with '1'
c Var 'dijk_00004_00006_00002' order represents '0' with '-830'
c Encoding variable: dijk_00004_00006_00003 with domain: bool (representing constraint )
c Var 'dijk_00004_00006_00003' direct represents '0' with '-831'
c Var 'dijk_00004_00006_00003' direct represents '1' with '831'
c Var 'dijk_00004_00006_00003' order represents '1' with '1'
c Var 'dijk_00004_00006_00003' order represents '0' with '-831'
c Encoding variable: dijk_00004_00007_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00007_00001' direct represents '0' with '-832'
c Var 'dijk_00004_00007_00001' direct represents '1' with '832'
c Var 'dijk_00004_00007_00001' order represents '1' with '1'
c Var 'dijk_00004_00007_00001' order represents '0' with '-832'
c Encoding variable: dijk_00004_00007_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00007_00002' direct represents '0' with '-833'
c Var 'dijk_00004_00007_00002' direct represents '1' with '833'
c Var 'dijk_00004_00007_00002' order represents '1' with '1'
c Var 'dijk_00004_00007_00002' order represents '0' with '-833'
c Encoding variable: dijk_00004_00007_00003 with domain: bool (representing constraint )
c Var 'dijk_00004_00007_00003' direct represents '0' with '-834'
c Var 'dijk_00004_00007_00003' direct represents '1' with '834'
c Var 'dijk_00004_00007_00003' order represents '1' with '1'
c Var 'dijk_00004_00007_00003' order represents '0' with '-834'
c Encoding variable: dijk_00004_00008_00001 with domain: bool (representing constraint )
c Var 'dijk_00004_00008_00001' direct represents '0' with '-835'
c Var 'dijk_00004_00008_00001' direct represents '1' with '835'
c Var 'dijk_00004_00008_00001' order represents '1' with '1'
c Var 'dijk_00004_00008_00001' order represents '0' with '-835'
c Encoding variable: dijk_00004_00008_00002 with domain: bool (representing constraint )
c Var 'dijk_00004_00008_00002' direct represents '0' with '-836'
c Var 'dijk_00004_00008_00002' direct represents '1' with '836'
c Var 'dijk_00004_00008_00002' order represents '1' with '1'
c Var 'dijk_00004_00008_00002' order represents '0' with '-836'
c Encoding variable: dijk_00004_00008_00003 with domain: bool (representing constraint )
c Var 'dijk_00004_00008_00003' direct represents '0' with '-837'
c Var 'dijk_00004_00008_00003' direct represents '1' with '837'
c Var 'dijk_00004_00008_00003' order represents '1' with '1'
c Var 'dijk_00004_00008_00003' order represents '0' with '-837'
c Encoding variable: dijk_00005_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00001_00001' direct represents '0' with '-838'
c Var 'dijk_00005_00001_00001' direct represents '1' with '838'
c Var 'dijk_00005_00001_00001' order represents '1' with '1'
c Var 'dijk_00005_00001_00001' order represents '0' with '-838'
c Encoding variable: dijk_00005_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00005_00001_00002' direct represents '0' with '-839'
c Var 'dijk_00005_00001_00002' direct represents '1' with '839'
c Var 'dijk_00005_00001_00002' order represents '1' with '1'
c Var 'dijk_00005_00001_00002' order represents '0' with '-839'
c Encoding variable: dijk_00005_00001_00003 with domain: bool (representing constraint )
c Var 'dijk_00005_00001_00003' direct represents '0' with '-840'
c Var 'dijk_00005_00001_00003' direct represents '1' with '840'
c Var 'dijk_00005_00001_00003' order represents '1' with '1'
c Var 'dijk_00005_00001_00003' order represents '0' with '-840'
c Encoding variable: dijk_00005_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00002_00001' direct represents '0' with '-841'
c Var 'dijk_00005_00002_00001' direct represents '1' with '841'
c Var 'dijk_00005_00002_00001' order represents '1' with '1'
c Var 'dijk_00005_00002_00001' order represents '0' with '-841'
c Encoding variable: dijk_00005_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00005_00002_00002' direct represents '0' with '-842'
c Var 'dijk_00005_00002_00002' direct represents '1' with '842'
c Var 'dijk_00005_00002_00002' order represents '1' with '1'
c Var 'dijk_00005_00002_00002' order represents '0' with '-842'
c Encoding variable: dijk_00005_00002_00003 with domain: bool (representing constraint )
c Var 'dijk_00005_00002_00003' direct represents '0' with '-843'
c Var 'dijk_00005_00002_00003' direct represents '1' with '843'
c Var 'dijk_00005_00002_00003' order represents '1' with '1'
c Var 'dijk_00005_00002_00003' order represents '0' with '-843'
c Encoding variable: dijk_00005_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00003_00001' direct represents '0' with '-844'
c Var 'dijk_00005_00003_00001' direct represents '1' with '844'
c Var 'dijk_00005_00003_00001' order represents '1' with '1'
c Var 'dijk_00005_00003_00001' order represents '0' with '-844'
c Encoding variable: dijk_00005_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00005_00003_00002' direct represents '0' with '-845'
c Var 'dijk_00005_00003_00002' direct represents '1' with '845'
c Var 'dijk_00005_00003_00002' order represents '1' with '1'
c Var 'dijk_00005_00003_00002' order represents '0' with '-845'
c Encoding variable: dijk_00005_00003_00003 with domain: bool (representing constraint )
c Var 'dijk_00005_00003_00003' direct represents '0' with '-846'
c Var 'dijk_00005_00003_00003' direct represents '1' with '846'
c Var 'dijk_00005_00003_00003' order represents '1' with '1'
c Var 'dijk_00005_00003_00003' order represents '0' with '-846'
c Encoding variable: dijk_00005_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00004_00001' direct represents '0' with '-847'
c Var 'dijk_00005_00004_00001' direct represents '1' with '847'
c Var 'dijk_00005_00004_00001' order represents '1' with '1'
c Var 'dijk_00005_00004_00001' order represents '0' with '-847'
c Encoding variable: dijk_00005_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00005_00004_00002' direct represents '0' with '-848'
c Var 'dijk_00005_00004_00002' direct represents '1' with '848'
c Var 'dijk_00005_00004_00002' order represents '1' with '1'
c Var 'dijk_00005_00004_00002' order represents '0' with '-848'
c Encoding variable: dijk_00005_00004_00003 with domain: bool (representing constraint )
c Var 'dijk_00005_00004_00003' direct represents '0' with '-849'
c Var 'dijk_00005_00004_00003' direct represents '1' with '849'
c Var 'dijk_00005_00004_00003' order represents '1' with '1'
c Var 'dijk_00005_00004_00003' order represents '0' with '-849'
c Encoding variable: dijk_00005_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00005_00001' direct represents '0' with '-850'
c Var 'dijk_00005_00005_00001' direct represents '1' with '850'
c Var 'dijk_00005_00005_00001' order represents '1' with '1'
c Var 'dijk_00005_00005_00001' order represents '0' with '-850'
c Encoding variable: dijk_00005_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00005_00005_00002' direct represents '0' with '-851'
c Var 'dijk_00005_00005_00002' direct represents '1' with '851'
c Var 'dijk_00005_00005_00002' order represents '1' with '1'
c Var 'dijk_00005_00005_00002' order represents '0' with '-851'
c Encoding variable: dijk_00005_00005_00003 with domain: bool (representing constraint )
c Var 'dijk_00005_00005_00003' direct represents '0' with '-852'
c Var 'dijk_00005_00005_00003' direct represents '1' with '852'
c Var 'dijk_00005_00005_00003' order represents '1' with '1'
c Var 'dijk_00005_00005_00003' order represents '0' with '-852'
c Encoding variable: dijk_00005_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00006_00001' direct represents '0' with '-853'
c Var 'dijk_00005_00006_00001' direct represents '1' with '853'
c Var 'dijk_00005_00006_00001' order represents '1' with '1'
c Var 'dijk_00005_00006_00001' order represents '0' with '-853'
c Encoding variable: dijk_00005_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00005_00006_00002' direct represents '0' with '-854'
c Var 'dijk_00005_00006_00002' direct represents '1' with '854'
c Var 'dijk_00005_00006_00002' order represents '1' with '1'
c Var 'dijk_00005_00006_00002' order represents '0' with '-854'
c Encoding variable: dijk_00005_00006_00003 with domain: bool (representing constraint )
c Var 'dijk_00005_00006_00003' direct represents '0' with '-855'
c Var 'dijk_00005_00006_00003' direct represents '1' with '855'
c Var 'dijk_00005_00006_00003' order represents '1' with '1'
c Var 'dijk_00005_00006_00003' order represents '0' with '-855'
c Encoding variable: dijk_00005_00007_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00007_00001' direct represents '0' with '-856'
c Var 'dijk_00005_00007_00001' direct represents '1' with '856'
c Var 'dijk_00005_00007_00001' order represents '1' with '1'
c Var 'dijk_00005_00007_00001' order represents '0' with '-856'
c Encoding variable: dijk_00005_00007_00002 with domain: bool (representing constraint )
c Var 'dijk_00005_00007_00002' direct represents '0' with '-857'
c Var 'dijk_00005_00007_00002' direct represents '1' with '857'
c Var 'dijk_00005_00007_00002' order represents '1' with '1'
c Var 'dijk_00005_00007_00002' order represents '0' with '-857'
c Encoding variable: dijk_00005_00007_00003 with domain: bool (representing constraint )
c Var 'dijk_00005_00007_00003' direct represents '0' with '-858'
c Var 'dijk_00005_00007_00003' direct represents '1' with '858'
c Var 'dijk_00005_00007_00003' order represents '1' with '1'
c Var 'dijk_00005_00007_00003' order represents '0' with '-858'
c Encoding variable: dijk_00005_00008_00001 with domain: bool (representing constraint )
c Var 'dijk_00005_00008_00001' direct represents '0' with '-859'
c Var 'dijk_00005_00008_00001' direct represents '1' with '859'
c Var 'dijk_00005_00008_00001' order represents '1' with '1'
c Var 'dijk_00005_00008_00001' order represents '0' with '-859'
c Encoding variable: dijk_00005_00008_00002 with domain: bool (representing constraint )
c Var 'dijk_00005_00008_00002' direct represents '0' with '-860'
c Var 'dijk_00005_00008_00002' direct represents '1' with '860'
c Var 'dijk_00005_00008_00002' order represents '1' with '1'
c Var 'dijk_00005_00008_00002' order represents '0' with '-860'
c Encoding variable: dijk_00005_00008_00003 with domain: bool (representing constraint )
c Var 'dijk_00005_00008_00003' direct represents '0' with '-861'
c Var 'dijk_00005_00008_00003' direct represents '1' with '861'
c Var 'dijk_00005_00008_00003' order represents '1' with '1'
c Var 'dijk_00005_00008_00003' order represents '0' with '-861'
c Encoding variable: dijk_00006_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00006_00001_00001' direct represents '0' with '-862'
c Var 'dijk_00006_00001_00001' direct represents '1' with '862'
c Var 'dijk_00006_00001_00001' order represents '1' with '1'
c Var 'dijk_00006_00001_00001' order represents '0' with '-862'
c Encoding variable: dijk_00006_00001_00002 with domain: bool (representing constraint )
c Var 'dijk_00006_00001_00002' direct represents '0' with '-863'
c Var 'dijk_00006_00001_00002' direct represents '1' with '863'
c Var 'dijk_00006_00001_00002' order represents '1' with '1'
c Var 'dijk_00006_00001_00002' order represents '0' with '-863'
c Encoding variable: dijk_00006_00001_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00001_00003' direct represents '0' with '864'
864 0
c Encoding variable: dijk_00006_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00006_00002_00001' direct represents '0' with '-865'
c Var 'dijk_00006_00002_00001' direct represents '1' with '865'
c Var 'dijk_00006_00002_00001' order represents '1' with '1'
c Var 'dijk_00006_00002_00001' order represents '0' with '-865'
c Encoding variable: dijk_00006_00002_00002 with domain: bool (representing constraint )
c Var 'dijk_00006_00002_00002' direct represents '0' with '-866'
c Var 'dijk_00006_00002_00002' direct represents '1' with '866'
c Var 'dijk_00006_00002_00002' order represents '1' with '1'
c Var 'dijk_00006_00002_00002' order represents '0' with '-866'
c Encoding variable: dijk_00006_00002_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00002_00003' direct represents '0' with '867'
867 0
c Encoding variable: dijk_00006_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00006_00003_00001' direct represents '0' with '-868'
c Var 'dijk_00006_00003_00001' direct represents '1' with '868'
c Var 'dijk_00006_00003_00001' order represents '1' with '1'
c Var 'dijk_00006_00003_00001' order represents '0' with '-868'
c Encoding variable: dijk_00006_00003_00002 with domain: bool (representing constraint )
c Var 'dijk_00006_00003_00002' direct represents '0' with '-869'
c Var 'dijk_00006_00003_00002' direct represents '1' with '869'
c Var 'dijk_00006_00003_00002' order represents '1' with '1'
c Var 'dijk_00006_00003_00002' order represents '0' with '-869'
c Encoding variable: dijk_00006_00003_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00003_00003' direct represents '0' with '870'
870 0
c Encoding variable: dijk_00006_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00006_00004_00001' direct represents '0' with '-871'
c Var 'dijk_00006_00004_00001' direct represents '1' with '871'
c Var 'dijk_00006_00004_00001' order represents '1' with '1'
c Var 'dijk_00006_00004_00001' order represents '0' with '-871'
c Encoding variable: dijk_00006_00004_00002 with domain: bool (representing constraint )
c Var 'dijk_00006_00004_00002' direct represents '0' with '-872'
c Var 'dijk_00006_00004_00002' direct represents '1' with '872'
c Var 'dijk_00006_00004_00002' order represents '1' with '1'
c Var 'dijk_00006_00004_00002' order represents '0' with '-872'
c Encoding variable: dijk_00006_00004_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00004_00003' direct represents '0' with '873'
873 0
c Encoding variable: dijk_00006_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00006_00005_00001' direct represents '0' with '-874'
c Var 'dijk_00006_00005_00001' direct represents '1' with '874'
c Var 'dijk_00006_00005_00001' order represents '1' with '1'
c Var 'dijk_00006_00005_00001' order represents '0' with '-874'
c Encoding variable: dijk_00006_00005_00002 with domain: bool (representing constraint )
c Var 'dijk_00006_00005_00002' direct represents '0' with '-875'
c Var 'dijk_00006_00005_00002' direct represents '1' with '875'
c Var 'dijk_00006_00005_00002' order represents '1' with '1'
c Var 'dijk_00006_00005_00002' order represents '0' with '-875'
c Encoding variable: dijk_00006_00005_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00005_00003' direct represents '0' with '876'
876 0
c Encoding variable: dijk_00006_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00006_00006_00001' direct represents '0' with '-877'
c Var 'dijk_00006_00006_00001' direct represents '1' with '877'
c Var 'dijk_00006_00006_00001' order represents '1' with '1'
c Var 'dijk_00006_00006_00001' order represents '0' with '-877'
c Encoding variable: dijk_00006_00006_00002 with domain: bool (representing constraint )
c Var 'dijk_00006_00006_00002' direct represents '0' with '-878'
c Var 'dijk_00006_00006_00002' direct represents '1' with '878'
c Var 'dijk_00006_00006_00002' order represents '1' with '1'
c Var 'dijk_00006_00006_00002' order represents '0' with '-878'
c Encoding variable: dijk_00006_00006_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00006_00003' direct represents '0' with '879'
879 0
c Encoding variable: dijk_00006_00007_00001 with domain: bool (representing constraint )
c Var 'dijk_00006_00007_00001' direct represents '0' with '-880'
c Var 'dijk_00006_00007_00001' direct represents '1' with '880'
c Var 'dijk_00006_00007_00001' order represents '1' with '1'
c Var 'dijk_00006_00007_00001' order represents '0' with '-880'
c Encoding variable: dijk_00006_00007_00002 with domain: bool (representing constraint )
c Var 'dijk_00006_00007_00002' direct represents '0' with '-881'
c Var 'dijk_00006_00007_00002' direct represents '1' with '881'
c Var 'dijk_00006_00007_00002' order represents '1' with '1'
c Var 'dijk_00006_00007_00002' order represents '0' with '-881'
c Encoding variable: dijk_00006_00007_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00007_00003' direct represents '0' with '882'
882 0
c Encoding variable: dijk_00006_00008_00001 with domain: bool (representing constraint )
c Var 'dijk_00006_00008_00001' direct represents '0' with '-883'
c Var 'dijk_00006_00008_00001' direct represents '1' with '883'
c Var 'dijk_00006_00008_00001' order represents '1' with '1'
c Var 'dijk_00006_00008_00001' order represents '0' with '-883'
c Encoding variable: dijk_00006_00008_00002 with domain: bool (representing constraint )
c Var 'dijk_00006_00008_00002' direct represents '0' with '-884'
c Var 'dijk_00006_00008_00002' direct represents '1' with '884'
c Var 'dijk_00006_00008_00002' order represents '1' with '1'
c Var 'dijk_00006_00008_00002' order represents '0' with '-884'
c Encoding variable: dijk_00006_00008_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00006_00008_00003' direct represents '0' with '885'
885 0
c Encoding variable: dijk_00007_00001_00001 with domain: bool (representing constraint )
c Var 'dijk_00007_00001_00001' direct represents '0' with '-886'
c Var 'dijk_00007_00001_00001' direct represents '1' with '886'
c Var 'dijk_00007_00001_00001' order represents '1' with '1'
c Var 'dijk_00007_00001_00001' order represents '0' with '-886'
c Encoding variable: dijk_00007_00001_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00001_00002' direct represents '0' with '887'
887 0
c Encoding variable: dijk_00007_00001_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00001_00003' direct represents '0' with '888'
888 0
c Encoding variable: dijk_00007_00002_00001 with domain: bool (representing constraint )
c Var 'dijk_00007_00002_00001' direct represents '0' with '-889'
c Var 'dijk_00007_00002_00001' direct represents '1' with '889'
c Var 'dijk_00007_00002_00001' order represents '1' with '1'
c Var 'dijk_00007_00002_00001' order represents '0' with '-889'
c Encoding variable: dijk_00007_00002_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00002_00002' direct represents '0' with '890'
890 0
c Encoding variable: dijk_00007_00002_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00002_00003' direct represents '0' with '891'
891 0
c Encoding variable: dijk_00007_00003_00001 with domain: bool (representing constraint )
c Var 'dijk_00007_00003_00001' direct represents '0' with '-892'
c Var 'dijk_00007_00003_00001' direct represents '1' with '892'
c Var 'dijk_00007_00003_00001' order represents '1' with '1'
c Var 'dijk_00007_00003_00001' order represents '0' with '-892'
c Encoding variable: dijk_00007_00003_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00003_00002' direct represents '0' with '893'
893 0
c Encoding variable: dijk_00007_00003_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00003_00003' direct represents '0' with '894'
894 0
c Encoding variable: dijk_00007_00004_00001 with domain: bool (representing constraint )
c Var 'dijk_00007_00004_00001' direct represents '0' with '-895'
c Var 'dijk_00007_00004_00001' direct represents '1' with '895'
c Var 'dijk_00007_00004_00001' order represents '1' with '1'
c Var 'dijk_00007_00004_00001' order represents '0' with '-895'
c Encoding variable: dijk_00007_00004_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00004_00002' direct represents '0' with '896'
896 0
c Encoding variable: dijk_00007_00004_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00004_00003' direct represents '0' with '897'
897 0
c Encoding variable: dijk_00007_00005_00001 with domain: bool (representing constraint )
c Var 'dijk_00007_00005_00001' direct represents '0' with '-898'
c Var 'dijk_00007_00005_00001' direct represents '1' with '898'
c Var 'dijk_00007_00005_00001' order represents '1' with '1'
c Var 'dijk_00007_00005_00001' order represents '0' with '-898'
c Encoding variable: dijk_00007_00005_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00005_00002' direct represents '0' with '899'
899 0
c Encoding variable: dijk_00007_00005_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00005_00003' direct represents '0' with '900'
900 0
c Encoding variable: dijk_00007_00006_00001 with domain: bool (representing constraint )
c Var 'dijk_00007_00006_00001' direct represents '0' with '-901'
c Var 'dijk_00007_00006_00001' direct represents '1' with '901'
c Var 'dijk_00007_00006_00001' order represents '1' with '1'
c Var 'dijk_00007_00006_00001' order represents '0' with '-901'
c Encoding variable: dijk_00007_00006_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00006_00002' direct represents '0' with '902'
902 0
c Encoding variable: dijk_00007_00006_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00006_00003' direct represents '0' with '903'
903 0
c Encoding variable: dijk_00007_00007_00001 with domain: bool (representing constraint )
c Var 'dijk_00007_00007_00001' direct represents '0' with '-904'
c Var 'dijk_00007_00007_00001' direct represents '1' with '904'
c Var 'dijk_00007_00007_00001' order represents '1' with '1'
c Var 'dijk_00007_00007_00001' order represents '0' with '-904'
c Encoding variable: dijk_00007_00007_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00007_00002' direct represents '0' with '905'
905 0
c Encoding variable: dijk_00007_00007_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00007_00003' direct represents '0' with '906'
906 0
c Encoding variable: dijk_00007_00008_00001 with domain: bool (representing constraint )
c Var 'dijk_00007_00008_00001' direct represents '0' with '-907'
c Var 'dijk_00007_00008_00001' direct represents '1' with '907'
c Var 'dijk_00007_00008_00001' order represents '1' with '1'
c Var 'dijk_00007_00008_00001' order represents '0' with '-907'
c Encoding variable: dijk_00007_00008_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00008_00002' direct represents '0' with '908'
908 0
c Encoding variable: dijk_00007_00008_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00007_00008_00003' direct represents '0' with '909'
909 0
c Encoding variable: dijk_00008_00001_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00001_00001' direct represents '0' with '910'
910 0
c Encoding variable: dijk_00008_00001_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00001_00002' direct represents '0' with '911'
911 0
c Encoding variable: dijk_00008_00001_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00001_00003' direct represents '0' with '912'
912 0
c Encoding variable: dijk_00008_00002_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00002_00001' direct represents '0' with '913'
913 0
c Encoding variable: dijk_00008_00002_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00002_00002' direct represents '0' with '914'
914 0
c Encoding variable: dijk_00008_00002_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00002_00003' direct represents '0' with '915'
915 0
c Encoding variable: dijk_00008_00003_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00003_00001' direct represents '0' with '916'
916 0
c Encoding variable: dijk_00008_00003_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00003_00002' direct represents '0' with '917'
917 0
c Encoding variable: dijk_00008_00003_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00003_00003' direct represents '0' with '918'
918 0
c Encoding variable: dijk_00008_00004_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00004_00001' direct represents '0' with '919'
919 0
c Encoding variable: dijk_00008_00004_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00004_00002' direct represents '0' with '920'
920 0
c Encoding variable: dijk_00008_00004_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00004_00003' direct represents '0' with '921'
921 0
c Encoding variable: dijk_00008_00005_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00005_00001' direct represents '0' with '922'
922 0
c Encoding variable: dijk_00008_00005_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00005_00002' direct represents '0' with '923'
923 0
c Encoding variable: dijk_00008_00005_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00005_00003' direct represents '0' with '924'
924 0
c Encoding variable: dijk_00008_00006_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00006_00001' direct represents '0' with '925'
925 0
c Encoding variable: dijk_00008_00006_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00006_00002' direct represents '0' with '926'
926 0
c Encoding variable: dijk_00008_00006_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00006_00003' direct represents '0' with '927'
927 0
c Encoding variable: dijk_00008_00007_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00007_00001' direct represents '0' with '928'
928 0
c Encoding variable: dijk_00008_00007_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00007_00002' direct represents '0' with '929'
929 0
c Encoding variable: dijk_00008_00007_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00007_00003' direct represents '0' with '930'
930 0
c Encoding variable: dijk_00008_00008_00001 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00008_00001' direct represents '0' with '931'
931 0
c Encoding variable: dijk_00008_00008_00002 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00008_00002' direct represents '0' with '932'
932 0
c Encoding variable: dijk_00008_00008_00003 with domain: bool(false) (representing constraint )
c Var 'dijk_00008_00008_00003' direct represents '0' with '933'
933 0
c Encoding variable: lijk_00001_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00001_00001' direct represents '0' with '934'
934 0
c Encoding variable: lijk_00001_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00001_00002' direct represents '0' with '935'
935 0
c Encoding variable: lijk_00001_00001_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00001_00003' direct represents '0' with '936'
936 0
c Encoding variable: lijk_00001_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00002_00001' direct represents '0' with '-937'
c Var 'lijk_00001_00002_00001' direct represents '1' with '937'
c Var 'lijk_00001_00002_00001' order represents '1' with '1'
c Var 'lijk_00001_00002_00001' order represents '0' with '-937'
c Encoding variable: lijk_00001_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00002_00002' direct represents '0' with '938'
938 0
c Encoding variable: lijk_00001_00002_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00002_00003' direct represents '0' with '939'
939 0
c Encoding variable: lijk_00001_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00003_00001' direct represents '0' with '-940'
c Var 'lijk_00001_00003_00001' direct represents '1' with '940'
c Var 'lijk_00001_00003_00001' order represents '1' with '1'
c Var 'lijk_00001_00003_00001' order represents '0' with '-940'
c Encoding variable: lijk_00001_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00003_00002' direct represents '0' with '-941'
c Var 'lijk_00001_00003_00002' direct represents '1' with '941'
c Var 'lijk_00001_00003_00002' order represents '1' with '1'
c Var 'lijk_00001_00003_00002' order represents '0' with '-941'
c Encoding variable: lijk_00001_00003_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00001_00003_00003' direct represents '0' with '942'
942 0
c Encoding variable: lijk_00001_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00004_00001' direct represents '0' with '-943'
c Var 'lijk_00001_00004_00001' direct represents '1' with '943'
c Var 'lijk_00001_00004_00001' order represents '1' with '1'
c Var 'lijk_00001_00004_00001' order represents '0' with '-943'
c Encoding variable: lijk_00001_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00004_00002' direct represents '0' with '-944'
c Var 'lijk_00001_00004_00002' direct represents '1' with '944'
c Var 'lijk_00001_00004_00002' order represents '1' with '1'
c Var 'lijk_00001_00004_00002' order represents '0' with '-944'
c Encoding variable: lijk_00001_00004_00003 with domain: bool (representing constraint )
c Var 'lijk_00001_00004_00003' direct represents '0' with '-945'
c Var 'lijk_00001_00004_00003' direct represents '1' with '945'
c Var 'lijk_00001_00004_00003' order represents '1' with '1'
c Var 'lijk_00001_00004_00003' order represents '0' with '-945'
c Encoding variable: lijk_00001_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00005_00001' direct represents '0' with '-946'
c Var 'lijk_00001_00005_00001' direct represents '1' with '946'
c Var 'lijk_00001_00005_00001' order represents '1' with '1'
c Var 'lijk_00001_00005_00001' order represents '0' with '-946'
c Encoding variable: lijk_00001_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00005_00002' direct represents '0' with '-947'
c Var 'lijk_00001_00005_00002' direct represents '1' with '947'
c Var 'lijk_00001_00005_00002' order represents '1' with '1'
c Var 'lijk_00001_00005_00002' order represents '0' with '-947'
c Encoding variable: lijk_00001_00005_00003 with domain: bool (representing constraint )
c Var 'lijk_00001_00005_00003' direct represents '0' with '-948'
c Var 'lijk_00001_00005_00003' direct represents '1' with '948'
c Var 'lijk_00001_00005_00003' order represents '1' with '1'
c Var 'lijk_00001_00005_00003' order represents '0' with '-948'
c Encoding variable: lijk_00001_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00006_00001' direct represents '0' with '-949'
c Var 'lijk_00001_00006_00001' direct represents '1' with '949'
c Var 'lijk_00001_00006_00001' order represents '1' with '1'
c Var 'lijk_00001_00006_00001' order represents '0' with '-949'
c Encoding variable: lijk_00001_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00006_00002' direct represents '0' with '-950'
c Var 'lijk_00001_00006_00002' direct represents '1' with '950'
c Var 'lijk_00001_00006_00002' order represents '1' with '1'
c Var 'lijk_00001_00006_00002' order represents '0' with '-950'
c Encoding variable: lijk_00001_00006_00003 with domain: bool (representing constraint )
c Var 'lijk_00001_00006_00003' direct represents '0' with '-951'
c Var 'lijk_00001_00006_00003' direct represents '1' with '951'
c Var 'lijk_00001_00006_00003' order represents '1' with '1'
c Var 'lijk_00001_00006_00003' order represents '0' with '-951'
c Encoding variable: lijk_00001_00007_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00007_00001' direct represents '0' with '-952'
c Var 'lijk_00001_00007_00001' direct represents '1' with '952'
c Var 'lijk_00001_00007_00001' order represents '1' with '1'
c Var 'lijk_00001_00007_00001' order represents '0' with '-952'
c Encoding variable: lijk_00001_00007_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00007_00002' direct represents '0' with '-953'
c Var 'lijk_00001_00007_00002' direct represents '1' with '953'
c Var 'lijk_00001_00007_00002' order represents '1' with '1'
c Var 'lijk_00001_00007_00002' order represents '0' with '-953'
c Encoding variable: lijk_00001_00007_00003 with domain: bool (representing constraint )
c Var 'lijk_00001_00007_00003' direct represents '0' with '-954'
c Var 'lijk_00001_00007_00003' direct represents '1' with '954'
c Var 'lijk_00001_00007_00003' order represents '1' with '1'
c Var 'lijk_00001_00007_00003' order represents '0' with '-954'
c Encoding variable: lijk_00001_00008_00001 with domain: bool (representing constraint )
c Var 'lijk_00001_00008_00001' direct represents '0' with '-955'
c Var 'lijk_00001_00008_00001' direct represents '1' with '955'
c Var 'lijk_00001_00008_00001' order represents '1' with '1'
c Var 'lijk_00001_00008_00001' order represents '0' with '-955'
c Encoding variable: lijk_00001_00008_00002 with domain: bool (representing constraint )
c Var 'lijk_00001_00008_00002' direct represents '0' with '-956'
c Var 'lijk_00001_00008_00002' direct represents '1' with '956'
c Var 'lijk_00001_00008_00002' order represents '1' with '1'
c Var 'lijk_00001_00008_00002' order represents '0' with '-956'
c Encoding variable: lijk_00001_00008_00003 with domain: bool (representing constraint )
c Var 'lijk_00001_00008_00003' direct represents '0' with '-957'
c Var 'lijk_00001_00008_00003' direct represents '1' with '957'
c Var 'lijk_00001_00008_00003' order represents '1' with '1'
c Var 'lijk_00001_00008_00003' order represents '0' with '-957'
c Encoding variable: lijk_00002_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00001_00001' direct represents '0' with '958'
958 0
c Encoding variable: lijk_00002_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00001_00002' direct represents '0' with '959'
959 0
c Encoding variable: lijk_00002_00001_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00001_00003' direct represents '0' with '960'
960 0
c Encoding variable: lijk_00002_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00002_00001' direct represents '0' with '-961'
c Var 'lijk_00002_00002_00001' direct represents '1' with '961'
c Var 'lijk_00002_00002_00001' order represents '1' with '1'
c Var 'lijk_00002_00002_00001' order represents '0' with '-961'
c Encoding variable: lijk_00002_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00002_00002' direct represents '0' with '962'
962 0
c Encoding variable: lijk_00002_00002_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00002_00003' direct represents '0' with '963'
963 0
c Encoding variable: lijk_00002_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00003_00001' direct represents '0' with '-964'
c Var 'lijk_00002_00003_00001' direct represents '1' with '964'
c Var 'lijk_00002_00003_00001' order represents '1' with '1'
c Var 'lijk_00002_00003_00001' order represents '0' with '-964'
c Encoding variable: lijk_00002_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00003_00002' direct represents '0' with '-965'
c Var 'lijk_00002_00003_00002' direct represents '1' with '965'
c Var 'lijk_00002_00003_00002' order represents '1' with '1'
c Var 'lijk_00002_00003_00002' order represents '0' with '-965'
c Encoding variable: lijk_00002_00003_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00002_00003_00003' direct represents '0' with '966'
966 0
c Encoding variable: lijk_00002_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00004_00001' direct represents '0' with '-967'
c Var 'lijk_00002_00004_00001' direct represents '1' with '967'
c Var 'lijk_00002_00004_00001' order represents '1' with '1'
c Var 'lijk_00002_00004_00001' order represents '0' with '-967'
c Encoding variable: lijk_00002_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00004_00002' direct represents '0' with '-968'
c Var 'lijk_00002_00004_00002' direct represents '1' with '968'
c Var 'lijk_00002_00004_00002' order represents '1' with '1'
c Var 'lijk_00002_00004_00002' order represents '0' with '-968'
c Encoding variable: lijk_00002_00004_00003 with domain: bool (representing constraint )
c Var 'lijk_00002_00004_00003' direct represents '0' with '-969'
c Var 'lijk_00002_00004_00003' direct represents '1' with '969'
c Var 'lijk_00002_00004_00003' order represents '1' with '1'
c Var 'lijk_00002_00004_00003' order represents '0' with '-969'
c Encoding variable: lijk_00002_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00005_00001' direct represents '0' with '-970'
c Var 'lijk_00002_00005_00001' direct represents '1' with '970'
c Var 'lijk_00002_00005_00001' order represents '1' with '1'
c Var 'lijk_00002_00005_00001' order represents '0' with '-970'
c Encoding variable: lijk_00002_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00005_00002' direct represents '0' with '-971'
c Var 'lijk_00002_00005_00002' direct represents '1' with '971'
c Var 'lijk_00002_00005_00002' order represents '1' with '1'
c Var 'lijk_00002_00005_00002' order represents '0' with '-971'
c Encoding variable: lijk_00002_00005_00003 with domain: bool (representing constraint )
c Var 'lijk_00002_00005_00003' direct represents '0' with '-972'
c Var 'lijk_00002_00005_00003' direct represents '1' with '972'
c Var 'lijk_00002_00005_00003' order represents '1' with '1'
c Var 'lijk_00002_00005_00003' order represents '0' with '-972'
c Encoding variable: lijk_00002_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00006_00001' direct represents '0' with '-973'
c Var 'lijk_00002_00006_00001' direct represents '1' with '973'
c Var 'lijk_00002_00006_00001' order represents '1' with '1'
c Var 'lijk_00002_00006_00001' order represents '0' with '-973'
c Encoding variable: lijk_00002_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00006_00002' direct represents '0' with '-974'
c Var 'lijk_00002_00006_00002' direct represents '1' with '974'
c Var 'lijk_00002_00006_00002' order represents '1' with '1'
c Var 'lijk_00002_00006_00002' order represents '0' with '-974'
c Encoding variable: lijk_00002_00006_00003 with domain: bool (representing constraint )
c Var 'lijk_00002_00006_00003' direct represents '0' with '-975'
c Var 'lijk_00002_00006_00003' direct represents '1' with '975'
c Var 'lijk_00002_00006_00003' order represents '1' with '1'
c Var 'lijk_00002_00006_00003' order represents '0' with '-975'
c Encoding variable: lijk_00002_00007_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00007_00001' direct represents '0' with '-976'
c Var 'lijk_00002_00007_00001' direct represents '1' with '976'
c Var 'lijk_00002_00007_00001' order represents '1' with '1'
c Var 'lijk_00002_00007_00001' order represents '0' with '-976'
c Encoding variable: lijk_00002_00007_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00007_00002' direct represents '0' with '-977'
c Var 'lijk_00002_00007_00002' direct represents '1' with '977'
c Var 'lijk_00002_00007_00002' order represents '1' with '1'
c Var 'lijk_00002_00007_00002' order represents '0' with '-977'
c Encoding variable: lijk_00002_00007_00003 with domain: bool (representing constraint )
c Var 'lijk_00002_00007_00003' direct represents '0' with '-978'
c Var 'lijk_00002_00007_00003' direct represents '1' with '978'
c Var 'lijk_00002_00007_00003' order represents '1' with '1'
c Var 'lijk_00002_00007_00003' order represents '0' with '-978'
c Encoding variable: lijk_00002_00008_00001 with domain: bool (representing constraint )
c Var 'lijk_00002_00008_00001' direct represents '0' with '-979'
c Var 'lijk_00002_00008_00001' direct represents '1' with '979'
c Var 'lijk_00002_00008_00001' order represents '1' with '1'
c Var 'lijk_00002_00008_00001' order represents '0' with '-979'
c Encoding variable: lijk_00002_00008_00002 with domain: bool (representing constraint )
c Var 'lijk_00002_00008_00002' direct represents '0' with '-980'
c Var 'lijk_00002_00008_00002' direct represents '1' with '980'
c Var 'lijk_00002_00008_00002' order represents '1' with '1'
c Var 'lijk_00002_00008_00002' order represents '0' with '-980'
c Encoding variable: lijk_00002_00008_00003 with domain: bool (representing constraint )
c Var 'lijk_00002_00008_00003' direct represents '0' with '-981'
c Var 'lijk_00002_00008_00003' direct represents '1' with '981'
c Var 'lijk_00002_00008_00003' order represents '1' with '1'
c Var 'lijk_00002_00008_00003' order represents '0' with '-981'
c Encoding variable: lijk_00003_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00001_00001' direct represents '0' with '982'
982 0
c Encoding variable: lijk_00003_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00001_00002' direct represents '0' with '983'
983 0
c Encoding variable: lijk_00003_00001_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00001_00003' direct represents '0' with '984'
984 0
c Encoding variable: lijk_00003_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00002_00001' direct represents '0' with '-985'
c Var 'lijk_00003_00002_00001' direct represents '1' with '985'
c Var 'lijk_00003_00002_00001' order represents '1' with '1'
c Var 'lijk_00003_00002_00001' order represents '0' with '-985'
c Encoding variable: lijk_00003_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00002_00002' direct represents '0' with '986'
986 0
c Encoding variable: lijk_00003_00002_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00002_00003' direct represents '0' with '987'
987 0
c Encoding variable: lijk_00003_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00003_00001' direct represents '0' with '-988'
c Var 'lijk_00003_00003_00001' direct represents '1' with '988'
c Var 'lijk_00003_00003_00001' order represents '1' with '1'
c Var 'lijk_00003_00003_00001' order represents '0' with '-988'
c Encoding variable: lijk_00003_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00003_00002' direct represents '0' with '-989'
c Var 'lijk_00003_00003_00002' direct represents '1' with '989'
c Var 'lijk_00003_00003_00002' order represents '1' with '1'
c Var 'lijk_00003_00003_00002' order represents '0' with '-989'
c Encoding variable: lijk_00003_00003_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00003_00003_00003' direct represents '0' with '990'
990 0
c Encoding variable: lijk_00003_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00004_00001' direct represents '0' with '-991'
c Var 'lijk_00003_00004_00001' direct represents '1' with '991'
c Var 'lijk_00003_00004_00001' order represents '1' with '1'
c Var 'lijk_00003_00004_00001' order represents '0' with '-991'
c Encoding variable: lijk_00003_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00004_00002' direct represents '0' with '-992'
c Var 'lijk_00003_00004_00002' direct represents '1' with '992'
c Var 'lijk_00003_00004_00002' order represents '1' with '1'
c Var 'lijk_00003_00004_00002' order represents '0' with '-992'
c Encoding variable: lijk_00003_00004_00003 with domain: bool (representing constraint )
c Var 'lijk_00003_00004_00003' direct represents '0' with '-993'
c Var 'lijk_00003_00004_00003' direct represents '1' with '993'
c Var 'lijk_00003_00004_00003' order represents '1' with '1'
c Var 'lijk_00003_00004_00003' order represents '0' with '-993'
c Encoding variable: lijk_00003_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00005_00001' direct represents '0' with '-994'
c Var 'lijk_00003_00005_00001' direct represents '1' with '994'
c Var 'lijk_00003_00005_00001' order represents '1' with '1'
c Var 'lijk_00003_00005_00001' order represents '0' with '-994'
c Encoding variable: lijk_00003_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00005_00002' direct represents '0' with '-995'
c Var 'lijk_00003_00005_00002' direct represents '1' with '995'
c Var 'lijk_00003_00005_00002' order represents '1' with '1'
c Var 'lijk_00003_00005_00002' order represents '0' with '-995'
c Encoding variable: lijk_00003_00005_00003 with domain: bool (representing constraint )
c Var 'lijk_00003_00005_00003' direct represents '0' with '-996'
c Var 'lijk_00003_00005_00003' direct represents '1' with '996'
c Var 'lijk_00003_00005_00003' order represents '1' with '1'
c Var 'lijk_00003_00005_00003' order represents '0' with '-996'
c Encoding variable: lijk_00003_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00006_00001' direct represents '0' with '-997'
c Var 'lijk_00003_00006_00001' direct represents '1' with '997'
c Var 'lijk_00003_00006_00001' order represents '1' with '1'
c Var 'lijk_00003_00006_00001' order represents '0' with '-997'
c Encoding variable: lijk_00003_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00006_00002' direct represents '0' with '-998'
c Var 'lijk_00003_00006_00002' direct represents '1' with '998'
c Var 'lijk_00003_00006_00002' order represents '1' with '1'
c Var 'lijk_00003_00006_00002' order represents '0' with '-998'
c Encoding variable: lijk_00003_00006_00003 with domain: bool (representing constraint )
c Var 'lijk_00003_00006_00003' direct represents '0' with '-999'
c Var 'lijk_00003_00006_00003' direct represents '1' with '999'
c Var 'lijk_00003_00006_00003' order represents '1' with '1'
c Var 'lijk_00003_00006_00003' order represents '0' with '-999'
c Encoding variable: lijk_00003_00007_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00007_00001' direct represents '0' with '-1000'
c Var 'lijk_00003_00007_00001' direct represents '1' with '1000'
c Var 'lijk_00003_00007_00001' order represents '1' with '1'
c Var 'lijk_00003_00007_00001' order represents '0' with '-1000'
c Encoding variable: lijk_00003_00007_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00007_00002' direct represents '0' with '-1001'
c Var 'lijk_00003_00007_00002' direct represents '1' with '1001'
c Var 'lijk_00003_00007_00002' order represents '1' with '1'
c Var 'lijk_00003_00007_00002' order represents '0' with '-1001'
c Encoding variable: lijk_00003_00007_00003 with domain: bool (representing constraint )
c Var 'lijk_00003_00007_00003' direct represents '0' with '-1002'
c Var 'lijk_00003_00007_00003' direct represents '1' with '1002'
c Var 'lijk_00003_00007_00003' order represents '1' with '1'
c Var 'lijk_00003_00007_00003' order represents '0' with '-1002'
c Encoding variable: lijk_00003_00008_00001 with domain: bool (representing constraint )
c Var 'lijk_00003_00008_00001' direct represents '0' with '-1003'
c Var 'lijk_00003_00008_00001' direct represents '1' with '1003'
c Var 'lijk_00003_00008_00001' order represents '1' with '1'
c Var 'lijk_00003_00008_00001' order represents '0' with '-1003'
c Encoding variable: lijk_00003_00008_00002 with domain: bool (representing constraint )
c Var 'lijk_00003_00008_00002' direct represents '0' with '-1004'
c Var 'lijk_00003_00008_00002' direct represents '1' with '1004'
c Var 'lijk_00003_00008_00002' order represents '1' with '1'
c Var 'lijk_00003_00008_00002' order represents '0' with '-1004'
c Encoding variable: lijk_00003_00008_00003 with domain: bool (representing constraint )
c Var 'lijk_00003_00008_00003' direct represents '0' with '-1005'
c Var 'lijk_00003_00008_00003' direct represents '1' with '1005'
c Var 'lijk_00003_00008_00003' order represents '1' with '1'
c Var 'lijk_00003_00008_00003' order represents '0' with '-1005'
c Encoding variable: lijk_00004_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00001_00001' direct represents '0' with '1006'
1006 0
c Encoding variable: lijk_00004_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00001_00002' direct represents '0' with '1007'
1007 0
c Encoding variable: lijk_00004_00001_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00001_00003' direct represents '0' with '1008'
1008 0
c Encoding variable: lijk_00004_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00002_00001' direct represents '0' with '-1009'
c Var 'lijk_00004_00002_00001' direct represents '1' with '1009'
c Var 'lijk_00004_00002_00001' order represents '1' with '1'
c Var 'lijk_00004_00002_00001' order represents '0' with '-1009'
c Encoding variable: lijk_00004_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00002_00002' direct represents '0' with '1010'
1010 0
c Encoding variable: lijk_00004_00002_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00002_00003' direct represents '0' with '1011'
1011 0
c Encoding variable: lijk_00004_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00003_00001' direct represents '0' with '-1012'
c Var 'lijk_00004_00003_00001' direct represents '1' with '1012'
c Var 'lijk_00004_00003_00001' order represents '1' with '1'
c Var 'lijk_00004_00003_00001' order represents '0' with '-1012'
c Encoding variable: lijk_00004_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00003_00002' direct represents '0' with '-1013'
c Var 'lijk_00004_00003_00002' direct represents '1' with '1013'
c Var 'lijk_00004_00003_00002' order represents '1' with '1'
c Var 'lijk_00004_00003_00002' order represents '0' with '-1013'
c Encoding variable: lijk_00004_00003_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00004_00003_00003' direct represents '0' with '1014'
1014 0
c Encoding variable: lijk_00004_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00004_00001' direct represents '0' with '-1015'
c Var 'lijk_00004_00004_00001' direct represents '1' with '1015'
c Var 'lijk_00004_00004_00001' order represents '1' with '1'
c Var 'lijk_00004_00004_00001' order represents '0' with '-1015'
c Encoding variable: lijk_00004_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00004_00002' direct represents '0' with '-1016'
c Var 'lijk_00004_00004_00002' direct represents '1' with '1016'
c Var 'lijk_00004_00004_00002' order represents '1' with '1'
c Var 'lijk_00004_00004_00002' order represents '0' with '-1016'
c Encoding variable: lijk_00004_00004_00003 with domain: bool (representing constraint )
c Var 'lijk_00004_00004_00003' direct represents '0' with '-1017'
c Var 'lijk_00004_00004_00003' direct represents '1' with '1017'
c Var 'lijk_00004_00004_00003' order represents '1' with '1'
c Var 'lijk_00004_00004_00003' order represents '0' with '-1017'
c Encoding variable: lijk_00004_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00005_00001' direct represents '0' with '-1018'
c Var 'lijk_00004_00005_00001' direct represents '1' with '1018'
c Var 'lijk_00004_00005_00001' order represents '1' with '1'
c Var 'lijk_00004_00005_00001' order represents '0' with '-1018'
c Encoding variable: lijk_00004_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00005_00002' direct represents '0' with '-1019'
c Var 'lijk_00004_00005_00002' direct represents '1' with '1019'
c Var 'lijk_00004_00005_00002' order represents '1' with '1'
c Var 'lijk_00004_00005_00002' order represents '0' with '-1019'
c Encoding variable: lijk_00004_00005_00003 with domain: bool (representing constraint )
c Var 'lijk_00004_00005_00003' direct represents '0' with '-1020'
c Var 'lijk_00004_00005_00003' direct represents '1' with '1020'
c Var 'lijk_00004_00005_00003' order represents '1' with '1'
c Var 'lijk_00004_00005_00003' order represents '0' with '-1020'
c Encoding variable: lijk_00004_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00006_00001' direct represents '0' with '-1021'
c Var 'lijk_00004_00006_00001' direct represents '1' with '1021'
c Var 'lijk_00004_00006_00001' order represents '1' with '1'
c Var 'lijk_00004_00006_00001' order represents '0' with '-1021'
c Encoding variable: lijk_00004_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00006_00002' direct represents '0' with '-1022'
c Var 'lijk_00004_00006_00002' direct represents '1' with '1022'
c Var 'lijk_00004_00006_00002' order represents '1' with '1'
c Var 'lijk_00004_00006_00002' order represents '0' with '-1022'
c Encoding variable: lijk_00004_00006_00003 with domain: bool (representing constraint )
c Var 'lijk_00004_00006_00003' direct represents '0' with '-1023'
c Var 'lijk_00004_00006_00003' direct represents '1' with '1023'
c Var 'lijk_00004_00006_00003' order represents '1' with '1'
c Var 'lijk_00004_00006_00003' order represents '0' with '-1023'
c Encoding variable: lijk_00004_00007_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00007_00001' direct represents '0' with '-1024'
c Var 'lijk_00004_00007_00001' direct represents '1' with '1024'
c Var 'lijk_00004_00007_00001' order represents '1' with '1'
c Var 'lijk_00004_00007_00001' order represents '0' with '-1024'
c Encoding variable: lijk_00004_00007_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00007_00002' direct represents '0' with '-1025'
c Var 'lijk_00004_00007_00002' direct represents '1' with '1025'
c Var 'lijk_00004_00007_00002' order represents '1' with '1'
c Var 'lijk_00004_00007_00002' order represents '0' with '-1025'
c Encoding variable: lijk_00004_00007_00003 with domain: bool (representing constraint )
c Var 'lijk_00004_00007_00003' direct represents '0' with '-1026'
c Var 'lijk_00004_00007_00003' direct represents '1' with '1026'
c Var 'lijk_00004_00007_00003' order represents '1' with '1'
c Var 'lijk_00004_00007_00003' order represents '0' with '-1026'
c Encoding variable: lijk_00004_00008_00001 with domain: bool (representing constraint )
c Var 'lijk_00004_00008_00001' direct represents '0' with '-1027'
c Var 'lijk_00004_00008_00001' direct represents '1' with '1027'
c Var 'lijk_00004_00008_00001' order represents '1' with '1'
c Var 'lijk_00004_00008_00001' order represents '0' with '-1027'
c Encoding variable: lijk_00004_00008_00002 with domain: bool (representing constraint )
c Var 'lijk_00004_00008_00002' direct represents '0' with '-1028'
c Var 'lijk_00004_00008_00002' direct represents '1' with '1028'
c Var 'lijk_00004_00008_00002' order represents '1' with '1'
c Var 'lijk_00004_00008_00002' order represents '0' with '-1028'
c Encoding variable: lijk_00004_00008_00003 with domain: bool (representing constraint )
c Var 'lijk_00004_00008_00003' direct represents '0' with '-1029'
c Var 'lijk_00004_00008_00003' direct represents '1' with '1029'
c Var 'lijk_00004_00008_00003' order represents '1' with '1'
c Var 'lijk_00004_00008_00003' order represents '0' with '-1029'
c Encoding variable: lijk_00005_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00001_00001' direct represents '0' with '1030'
1030 0
c Encoding variable: lijk_00005_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00001_00002' direct represents '0' with '1031'
1031 0
c Encoding variable: lijk_00005_00001_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00001_00003' direct represents '0' with '1032'
1032 0
c Encoding variable: lijk_00005_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00002_00001' direct represents '0' with '-1033'
c Var 'lijk_00005_00002_00001' direct represents '1' with '1033'
c Var 'lijk_00005_00002_00001' order represents '1' with '1'
c Var 'lijk_00005_00002_00001' order represents '0' with '-1033'
c Encoding variable: lijk_00005_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00002_00002' direct represents '0' with '1034'
1034 0
c Encoding variable: lijk_00005_00002_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00002_00003' direct represents '0' with '1035'
1035 0
c Encoding variable: lijk_00005_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00003_00001' direct represents '0' with '-1036'
c Var 'lijk_00005_00003_00001' direct represents '1' with '1036'
c Var 'lijk_00005_00003_00001' order represents '1' with '1'
c Var 'lijk_00005_00003_00001' order represents '0' with '-1036'
c Encoding variable: lijk_00005_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00003_00002' direct represents '0' with '-1037'
c Var 'lijk_00005_00003_00002' direct represents '1' with '1037'
c Var 'lijk_00005_00003_00002' order represents '1' with '1'
c Var 'lijk_00005_00003_00002' order represents '0' with '-1037'
c Encoding variable: lijk_00005_00003_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00005_00003_00003' direct represents '0' with '1038'
1038 0
c Encoding variable: lijk_00005_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00004_00001' direct represents '0' with '-1039'
c Var 'lijk_00005_00004_00001' direct represents '1' with '1039'
c Var 'lijk_00005_00004_00001' order represents '1' with '1'
c Var 'lijk_00005_00004_00001' order represents '0' with '-1039'
c Encoding variable: lijk_00005_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00004_00002' direct represents '0' with '-1040'
c Var 'lijk_00005_00004_00002' direct represents '1' with '1040'
c Var 'lijk_00005_00004_00002' order represents '1' with '1'
c Var 'lijk_00005_00004_00002' order represents '0' with '-1040'
c Encoding variable: lijk_00005_00004_00003 with domain: bool (representing constraint )
c Var 'lijk_00005_00004_00003' direct represents '0' with '-1041'
c Var 'lijk_00005_00004_00003' direct represents '1' with '1041'
c Var 'lijk_00005_00004_00003' order represents '1' with '1'
c Var 'lijk_00005_00004_00003' order represents '0' with '-1041'
c Encoding variable: lijk_00005_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00005_00001' direct represents '0' with '-1042'
c Var 'lijk_00005_00005_00001' direct represents '1' with '1042'
c Var 'lijk_00005_00005_00001' order represents '1' with '1'
c Var 'lijk_00005_00005_00001' order represents '0' with '-1042'
c Encoding variable: lijk_00005_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00005_00002' direct represents '0' with '-1043'
c Var 'lijk_00005_00005_00002' direct represents '1' with '1043'
c Var 'lijk_00005_00005_00002' order represents '1' with '1'
c Var 'lijk_00005_00005_00002' order represents '0' with '-1043'
c Encoding variable: lijk_00005_00005_00003 with domain: bool (representing constraint )
c Var 'lijk_00005_00005_00003' direct represents '0' with '-1044'
c Var 'lijk_00005_00005_00003' direct represents '1' with '1044'
c Var 'lijk_00005_00005_00003' order represents '1' with '1'
c Var 'lijk_00005_00005_00003' order represents '0' with '-1044'
c Encoding variable: lijk_00005_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00006_00001' direct represents '0' with '-1045'
c Var 'lijk_00005_00006_00001' direct represents '1' with '1045'
c Var 'lijk_00005_00006_00001' order represents '1' with '1'
c Var 'lijk_00005_00006_00001' order represents '0' with '-1045'
c Encoding variable: lijk_00005_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00006_00002' direct represents '0' with '-1046'
c Var 'lijk_00005_00006_00002' direct represents '1' with '1046'
c Var 'lijk_00005_00006_00002' order represents '1' with '1'
c Var 'lijk_00005_00006_00002' order represents '0' with '-1046'
c Encoding variable: lijk_00005_00006_00003 with domain: bool (representing constraint )
c Var 'lijk_00005_00006_00003' direct represents '0' with '-1047'
c Var 'lijk_00005_00006_00003' direct represents '1' with '1047'
c Var 'lijk_00005_00006_00003' order represents '1' with '1'
c Var 'lijk_00005_00006_00003' order represents '0' with '-1047'
c Encoding variable: lijk_00005_00007_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00007_00001' direct represents '0' with '-1048'
c Var 'lijk_00005_00007_00001' direct represents '1' with '1048'
c Var 'lijk_00005_00007_00001' order represents '1' with '1'
c Var 'lijk_00005_00007_00001' order represents '0' with '-1048'
c Encoding variable: lijk_00005_00007_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00007_00002' direct represents '0' with '-1049'
c Var 'lijk_00005_00007_00002' direct represents '1' with '1049'
c Var 'lijk_00005_00007_00002' order represents '1' with '1'
c Var 'lijk_00005_00007_00002' order represents '0' with '-1049'
c Encoding variable: lijk_00005_00007_00003 with domain: bool (representing constraint )
c Var 'lijk_00005_00007_00003' direct represents '0' with '-1050'
c Var 'lijk_00005_00007_00003' direct represents '1' with '1050'
c Var 'lijk_00005_00007_00003' order represents '1' with '1'
c Var 'lijk_00005_00007_00003' order represents '0' with '-1050'
c Encoding variable: lijk_00005_00008_00001 with domain: bool (representing constraint )
c Var 'lijk_00005_00008_00001' direct represents '0' with '-1051'
c Var 'lijk_00005_00008_00001' direct represents '1' with '1051'
c Var 'lijk_00005_00008_00001' order represents '1' with '1'
c Var 'lijk_00005_00008_00001' order represents '0' with '-1051'
c Encoding variable: lijk_00005_00008_00002 with domain: bool (representing constraint )
c Var 'lijk_00005_00008_00002' direct represents '0' with '-1052'
c Var 'lijk_00005_00008_00002' direct represents '1' with '1052'
c Var 'lijk_00005_00008_00002' order represents '1' with '1'
c Var 'lijk_00005_00008_00002' order represents '0' with '-1052'
c Encoding variable: lijk_00005_00008_00003 with domain: bool (representing constraint )
c Var 'lijk_00005_00008_00003' direct represents '0' with '-1053'
c Var 'lijk_00005_00008_00003' direct represents '1' with '1053'
c Var 'lijk_00005_00008_00003' order represents '1' with '1'
c Var 'lijk_00005_00008_00003' order represents '0' with '-1053'
c Encoding variable: lijk_00006_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00001_00001' direct represents '0' with '1054'
1054 0
c Encoding variable: lijk_00006_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00001_00002' direct represents '0' with '1055'
1055 0
c Encoding variable: lijk_00006_00001_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00001_00003' direct represents '0' with '1056'
1056 0
c Encoding variable: lijk_00006_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00002_00001' direct represents '0' with '-1057'
c Var 'lijk_00006_00002_00001' direct represents '1' with '1057'
c Var 'lijk_00006_00002_00001' order represents '1' with '1'
c Var 'lijk_00006_00002_00001' order represents '0' with '-1057'
c Encoding variable: lijk_00006_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00002_00002' direct represents '0' with '1058'
1058 0
c Encoding variable: lijk_00006_00002_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00002_00003' direct represents '0' with '1059'
1059 0
c Encoding variable: lijk_00006_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00003_00001' direct represents '0' with '-1060'
c Var 'lijk_00006_00003_00001' direct represents '1' with '1060'
c Var 'lijk_00006_00003_00001' order represents '1' with '1'
c Var 'lijk_00006_00003_00001' order represents '0' with '-1060'
c Encoding variable: lijk_00006_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00003_00002' direct represents '0' with '-1061'
c Var 'lijk_00006_00003_00002' direct represents '1' with '1061'
c Var 'lijk_00006_00003_00002' order represents '1' with '1'
c Var 'lijk_00006_00003_00002' order represents '0' with '-1061'
c Encoding variable: lijk_00006_00003_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00006_00003_00003' direct represents '0' with '1062'
1062 0
c Encoding variable: lijk_00006_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00004_00001' direct represents '0' with '-1063'
c Var 'lijk_00006_00004_00001' direct represents '1' with '1063'
c Var 'lijk_00006_00004_00001' order represents '1' with '1'
c Var 'lijk_00006_00004_00001' order represents '0' with '-1063'
c Encoding variable: lijk_00006_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00004_00002' direct represents '0' with '-1064'
c Var 'lijk_00006_00004_00002' direct represents '1' with '1064'
c Var 'lijk_00006_00004_00002' order represents '1' with '1'
c Var 'lijk_00006_00004_00002' order represents '0' with '-1064'
c Encoding variable: lijk_00006_00004_00003 with domain: bool (representing constraint )
c Var 'lijk_00006_00004_00003' direct represents '0' with '-1065'
c Var 'lijk_00006_00004_00003' direct represents '1' with '1065'
c Var 'lijk_00006_00004_00003' order represents '1' with '1'
c Var 'lijk_00006_00004_00003' order represents '0' with '-1065'
c Encoding variable: lijk_00006_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00005_00001' direct represents '0' with '-1066'
c Var 'lijk_00006_00005_00001' direct represents '1' with '1066'
c Var 'lijk_00006_00005_00001' order represents '1' with '1'
c Var 'lijk_00006_00005_00001' order represents '0' with '-1066'
c Encoding variable: lijk_00006_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00005_00002' direct represents '0' with '-1067'
c Var 'lijk_00006_00005_00002' direct represents '1' with '1067'
c Var 'lijk_00006_00005_00002' order represents '1' with '1'
c Var 'lijk_00006_00005_00002' order represents '0' with '-1067'
c Encoding variable: lijk_00006_00005_00003 with domain: bool (representing constraint )
c Var 'lijk_00006_00005_00003' direct represents '0' with '-1068'
c Var 'lijk_00006_00005_00003' direct represents '1' with '1068'
c Var 'lijk_00006_00005_00003' order represents '1' with '1'
c Var 'lijk_00006_00005_00003' order represents '0' with '-1068'
c Encoding variable: lijk_00006_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00006_00001' direct represents '0' with '-1069'
c Var 'lijk_00006_00006_00001' direct represents '1' with '1069'
c Var 'lijk_00006_00006_00001' order represents '1' with '1'
c Var 'lijk_00006_00006_00001' order represents '0' with '-1069'
c Encoding variable: lijk_00006_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00006_00002' direct represents '0' with '-1070'
c Var 'lijk_00006_00006_00002' direct represents '1' with '1070'
c Var 'lijk_00006_00006_00002' order represents '1' with '1'
c Var 'lijk_00006_00006_00002' order represents '0' with '-1070'
c Encoding variable: lijk_00006_00006_00003 with domain: bool (representing constraint )
c Var 'lijk_00006_00006_00003' direct represents '0' with '-1071'
c Var 'lijk_00006_00006_00003' direct represents '1' with '1071'
c Var 'lijk_00006_00006_00003' order represents '1' with '1'
c Var 'lijk_00006_00006_00003' order represents '0' with '-1071'
c Encoding variable: lijk_00006_00007_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00007_00001' direct represents '0' with '-1072'
c Var 'lijk_00006_00007_00001' direct represents '1' with '1072'
c Var 'lijk_00006_00007_00001' order represents '1' with '1'
c Var 'lijk_00006_00007_00001' order represents '0' with '-1072'
c Encoding variable: lijk_00006_00007_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00007_00002' direct represents '0' with '-1073'
c Var 'lijk_00006_00007_00002' direct represents '1' with '1073'
c Var 'lijk_00006_00007_00002' order represents '1' with '1'
c Var 'lijk_00006_00007_00002' order represents '0' with '-1073'
c Encoding variable: lijk_00006_00007_00003 with domain: bool (representing constraint )
c Var 'lijk_00006_00007_00003' direct represents '0' with '-1074'
c Var 'lijk_00006_00007_00003' direct represents '1' with '1074'
c Var 'lijk_00006_00007_00003' order represents '1' with '1'
c Var 'lijk_00006_00007_00003' order represents '0' with '-1074'
c Encoding variable: lijk_00006_00008_00001 with domain: bool (representing constraint )
c Var 'lijk_00006_00008_00001' direct represents '0' with '-1075'
c Var 'lijk_00006_00008_00001' direct represents '1' with '1075'
c Var 'lijk_00006_00008_00001' order represents '1' with '1'
c Var 'lijk_00006_00008_00001' order represents '0' with '-1075'
c Encoding variable: lijk_00006_00008_00002 with domain: bool (representing constraint )
c Var 'lijk_00006_00008_00002' direct represents '0' with '-1076'
c Var 'lijk_00006_00008_00002' direct represents '1' with '1076'
c Var 'lijk_00006_00008_00002' order represents '1' with '1'
c Var 'lijk_00006_00008_00002' order represents '0' with '-1076'
c Encoding variable: lijk_00006_00008_00003 with domain: bool (representing constraint )
c Var 'lijk_00006_00008_00003' direct represents '0' with '-1077'
c Var 'lijk_00006_00008_00003' direct represents '1' with '1077'
c Var 'lijk_00006_00008_00003' order represents '1' with '1'
c Var 'lijk_00006_00008_00003' order represents '0' with '-1077'
c Encoding variable: lijk_00007_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00007_00001_00001' direct represents '0' with '1078'
1078 0
c Encoding variable: lijk_00007_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00007_00001_00002' direct represents '0' with '1079'
1079 0
c Encoding variable: lijk_00007_00001_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00007_00001_00003' direct represents '0' with '1080'
1080 0
c Encoding variable: lijk_00007_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00007_00002_00001' direct represents '0' with '-1081'
c Var 'lijk_00007_00002_00001' direct represents '1' with '1081'
c Var 'lijk_00007_00002_00001' order represents '1' with '1'
c Var 'lijk_00007_00002_00001' order represents '0' with '-1081'
c Encoding variable: lijk_00007_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00007_00002_00002' direct represents '0' with '1082'
1082 0
c Encoding variable: lijk_00007_00002_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00007_00002_00003' direct represents '0' with '1083'
1083 0
c Encoding variable: lijk_00007_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00007_00003_00001' direct represents '0' with '-1084'
c Var 'lijk_00007_00003_00001' direct represents '1' with '1084'
c Var 'lijk_00007_00003_00001' order represents '1' with '1'
c Var 'lijk_00007_00003_00001' order represents '0' with '-1084'
c Encoding variable: lijk_00007_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00007_00003_00002' direct represents '0' with '-1085'
c Var 'lijk_00007_00003_00002' direct represents '1' with '1085'
c Var 'lijk_00007_00003_00002' order represents '1' with '1'
c Var 'lijk_00007_00003_00002' order represents '0' with '-1085'
c Encoding variable: lijk_00007_00003_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00007_00003_00003' direct represents '0' with '1086'
1086 0
c Encoding variable: lijk_00007_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00007_00004_00001' direct represents '0' with '-1087'
c Var 'lijk_00007_00004_00001' direct represents '1' with '1087'
c Var 'lijk_00007_00004_00001' order represents '1' with '1'
c Var 'lijk_00007_00004_00001' order represents '0' with '-1087'
c Encoding variable: lijk_00007_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00007_00004_00002' direct represents '0' with '-1088'
c Var 'lijk_00007_00004_00002' direct represents '1' with '1088'
c Var 'lijk_00007_00004_00002' order represents '1' with '1'
c Var 'lijk_00007_00004_00002' order represents '0' with '-1088'
c Encoding variable: lijk_00007_00004_00003 with domain: bool (representing constraint )
c Var 'lijk_00007_00004_00003' direct represents '0' with '-1089'
c Var 'lijk_00007_00004_00003' direct represents '1' with '1089'
c Var 'lijk_00007_00004_00003' order represents '1' with '1'
c Var 'lijk_00007_00004_00003' order represents '0' with '-1089'
c Encoding variable: lijk_00007_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00007_00005_00001' direct represents '0' with '-1090'
c Var 'lijk_00007_00005_00001' direct represents '1' with '1090'
c Var 'lijk_00007_00005_00001' order represents '1' with '1'
c Var 'lijk_00007_00005_00001' order represents '0' with '-1090'
c Encoding variable: lijk_00007_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00007_00005_00002' direct represents '0' with '-1091'
c Var 'lijk_00007_00005_00002' direct represents '1' with '1091'
c Var 'lijk_00007_00005_00002' order represents '1' with '1'
c Var 'lijk_00007_00005_00002' order represents '0' with '-1091'
c Encoding variable: lijk_00007_00005_00003 with domain: bool (representing constraint )
c Var 'lijk_00007_00005_00003' direct represents '0' with '-1092'
c Var 'lijk_00007_00005_00003' direct represents '1' with '1092'
c Var 'lijk_00007_00005_00003' order represents '1' with '1'
c Var 'lijk_00007_00005_00003' order represents '0' with '-1092'
c Encoding variable: lijk_00007_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00007_00006_00001' direct represents '0' with '-1093'
c Var 'lijk_00007_00006_00001' direct represents '1' with '1093'
c Var 'lijk_00007_00006_00001' order represents '1' with '1'
c Var 'lijk_00007_00006_00001' order represents '0' with '-1093'
c Encoding variable: lijk_00007_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00007_00006_00002' direct represents '0' with '-1094'
c Var 'lijk_00007_00006_00002' direct represents '1' with '1094'
c Var 'lijk_00007_00006_00002' order represents '1' with '1'
c Var 'lijk_00007_00006_00002' order represents '0' with '-1094'
c Encoding variable: lijk_00007_00006_00003 with domain: bool (representing constraint )
c Var 'lijk_00007_00006_00003' direct represents '0' with '-1095'
c Var 'lijk_00007_00006_00003' direct represents '1' with '1095'
c Var 'lijk_00007_00006_00003' order represents '1' with '1'
c Var 'lijk_00007_00006_00003' order represents '0' with '-1095'
c Encoding variable: lijk_00007_00007_00001 with domain: bool (representing constraint )
c Var 'lijk_00007_00007_00001' direct represents '0' with '-1096'
c Var 'lijk_00007_00007_00001' direct represents '1' with '1096'
c Var 'lijk_00007_00007_00001' order represents '1' with '1'
c Var 'lijk_00007_00007_00001' order represents '0' with '-1096'
c Encoding variable: lijk_00007_00007_00002 with domain: bool (representing constraint )
c Var 'lijk_00007_00007_00002' direct represents '0' with '-1097'
c Var 'lijk_00007_00007_00002' direct represents '1' with '1097'
c Var 'lijk_00007_00007_00002' order represents '1' with '1'
c Var 'lijk_00007_00007_00002' order represents '0' with '-1097'
c Encoding variable: lijk_00007_00007_00003 with domain: bool (representing constraint )
c Var 'lijk_00007_00007_00003' direct represents '0' with '-1098'
c Var 'lijk_00007_00007_00003' direct represents '1' with '1098'
c Var 'lijk_00007_00007_00003' order represents '1' with '1'
c Var 'lijk_00007_00007_00003' order represents '0' with '-1098'
c Encoding variable: lijk_00007_00008_00001 with domain: bool (representing constraint )
c Var 'lijk_00007_00008_00001' direct represents '0' with '-1099'
c Var 'lijk_00007_00008_00001' direct represents '1' with '1099'
c Var 'lijk_00007_00008_00001' order represents '1' with '1'
c Var 'lijk_00007_00008_00001' order represents '0' with '-1099'
c Encoding variable: lijk_00007_00008_00002 with domain: bool (representing constraint )
c Var 'lijk_00007_00008_00002' direct represents '0' with '-1100'
c Var 'lijk_00007_00008_00002' direct represents '1' with '1100'
c Var 'lijk_00007_00008_00002' order represents '1' with '1'
c Var 'lijk_00007_00008_00002' order represents '0' with '-1100'
c Encoding variable: lijk_00007_00008_00003 with domain: bool (representing constraint )
c Var 'lijk_00007_00008_00003' direct represents '0' with '-1101'
c Var 'lijk_00007_00008_00003' direct represents '1' with '1101'
c Var 'lijk_00007_00008_00003' order represents '1' with '1'
c Var 'lijk_00007_00008_00003' order represents '0' with '-1101'
c Encoding variable: lijk_00008_00001_00001 with domain: bool(false) (representing constraint )
c Var 'lijk_00008_00001_00001' direct represents '0' with '1102'
1102 0
c Encoding variable: lijk_00008_00001_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00008_00001_00002' direct represents '0' with '1103'
1103 0
c Encoding variable: lijk_00008_00001_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00008_00001_00003' direct represents '0' with '1104'
1104 0
c Encoding variable: lijk_00008_00002_00001 with domain: bool (representing constraint )
c Var 'lijk_00008_00002_00001' direct represents '0' with '-1105'
c Var 'lijk_00008_00002_00001' direct represents '1' with '1105'
c Var 'lijk_00008_00002_00001' order represents '1' with '1'
c Var 'lijk_00008_00002_00001' order represents '0' with '-1105'
c Encoding variable: lijk_00008_00002_00002 with domain: bool(false) (representing constraint )
c Var 'lijk_00008_00002_00002' direct represents '0' with '1106'
1106 0
c Encoding variable: lijk_00008_00002_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00008_00002_00003' direct represents '0' with '1107'
1107 0
c Encoding variable: lijk_00008_00003_00001 with domain: bool (representing constraint )
c Var 'lijk_00008_00003_00001' direct represents '0' with '-1108'
c Var 'lijk_00008_00003_00001' direct represents '1' with '1108'
c Var 'lijk_00008_00003_00001' order represents '1' with '1'
c Var 'lijk_00008_00003_00001' order represents '0' with '-1108'
c Encoding variable: lijk_00008_00003_00002 with domain: bool (representing constraint )
c Var 'lijk_00008_00003_00002' direct represents '0' with '-1109'
c Var 'lijk_00008_00003_00002' direct represents '1' with '1109'
c Var 'lijk_00008_00003_00002' order represents '1' with '1'
c Var 'lijk_00008_00003_00002' order represents '0' with '-1109'
c Encoding variable: lijk_00008_00003_00003 with domain: bool(false) (representing constraint )
c Var 'lijk_00008_00003_00003' direct represents '0' with '1110'
1110 0
c Encoding variable: lijk_00008_00004_00001 with domain: bool (representing constraint )
c Var 'lijk_00008_00004_00001' direct represents '0' with '-1111'
c Var 'lijk_00008_00004_00001' direct represents '1' with '1111'
c Var 'lijk_00008_00004_00001' order represents '1' with '1'
c Var 'lijk_00008_00004_00001' order represents '0' with '-1111'
c Encoding variable: lijk_00008_00004_00002 with domain: bool (representing constraint )
c Var 'lijk_00008_00004_00002' direct represents '0' with '-1112'
c Var 'lijk_00008_00004_00002' direct represents '1' with '1112'
c Var 'lijk_00008_00004_00002' order represents '1' with '1'
c Var 'lijk_00008_00004_00002' order represents '0' with '-1112'
c Encoding variable: lijk_00008_00004_00003 with domain: bool (representing constraint )
c Var 'lijk_00008_00004_00003' direct represents '0' with '-1113'
c Var 'lijk_00008_00004_00003' direct represents '1' with '1113'
c Var 'lijk_00008_00004_00003' order represents '1' with '1'
c Var 'lijk_00008_00004_00003' order represents '0' with '-1113'
c Encoding variable: lijk_00008_00005_00001 with domain: bool (representing constraint )
c Var 'lijk_00008_00005_00001' direct represents '0' with '-1114'
c Var 'lijk_00008_00005_00001' direct represents '1' with '1114'
c Var 'lijk_00008_00005_00001' order represents '1' with '1'
c Var 'lijk_00008_00005_00001' order represents '0' with '-1114'
c Encoding variable: lijk_00008_00005_00002 with domain: bool (representing constraint )
c Var 'lijk_00008_00005_00002' direct represents '0' with '-1115'
c Var 'lijk_00008_00005_00002' direct represents '1' with '1115'
c Var 'lijk_00008_00005_00002' order represents '1' with '1'
c Var 'lijk_00008_00005_00002' order represents '0' with '-1115'
c Encoding variable: lijk_00008_00005_00003 with domain: bool (representing constraint )
c Var 'lijk_00008_00005_00003' direct represents '0' with '-1116'
c Var 'lijk_00008_00005_00003' direct represents '1' with '1116'
c Var 'lijk_00008_00005_00003' order represents '1' with '1'
c Var 'lijk_00008_00005_00003' order represents '0' with '-1116'
c Encoding variable: lijk_00008_00006_00001 with domain: bool (representing constraint )
c Var 'lijk_00008_00006_00001' direct represents '0' with '-1117'
c Var 'lijk_00008_00006_00001' direct represents '1' with '1117'
c Var 'lijk_00008_00006_00001' order represents '1' with '1'
c Var 'lijk_00008_00006_00001' order represents '0' with '-1117'
c Encoding variable: lijk_00008_00006_00002 with domain: bool (representing constraint )
c Var 'lijk_00008_00006_00002' direct represents '0' with '-1118'
c Var 'lijk_00008_00006_00002' direct represents '1' with '1118'
c Var 'lijk_00008_00006_00002' order represents '1' with '1'
c Var 'lijk_00008_00006_00002' order represents '0' with '-1118'
c Encoding variable: lijk_00008_00006_00003 with domain: bool (representing constraint )
c Var 'lijk_00008_00006_00003' direct represents '0' with '-1119'
c Var 'lijk_00008_00006_00003' direct represents '1' with '1119'
c Var 'lijk_00008_00006_00003' order represents '1' with '1'
c Var 'lijk_00008_00006_00003' order represents '0' with '-1119'
c Encoding variable: lijk_00008_00007_00001 with domain: bool (representing constraint )
c Var 'lijk_00008_00007_00001' direct represents '0' with '-1120'
c Var 'lijk_00008_00007_00001' direct represents '1' with '1120'
c Var 'lijk_00008_00007_00001' order represents '1' with '1'
c Var 'lijk_00008_00007_00001' order represents '0' with '-1120'
c Encoding variable: lijk_00008_00007_00002 with domain: bool (representing constraint )
c Var 'lijk_00008_00007_00002' direct represents '0' with '-1121'
c Var 'lijk_00008_00007_00002' direct represents '1' with '1121'
c Var 'lijk_00008_00007_00002' order represents '1' with '1'
c Var 'lijk_00008_00007_00002' order represents '0' with '-1121'
c Encoding variable: lijk_00008_00007_00003 with domain: bool (representing constraint )
c Var 'lijk_00008_00007_00003' direct represents '0' with '-1122'
c Var 'lijk_00008_00007_00003' direct represents '1' with '1122'
c Var 'lijk_00008_00007_00003' order represents '1' with '1'
c Var 'lijk_00008_00007_00003' order represents '0' with '-1122'
c Encoding variable: lijk_00008_00008_00001 with domain: bool (representing constraint )
c Var 'lijk_00008_00008_00001' direct represents '0' with '-1123'
c Var 'lijk_00008_00008_00001' direct represents '1' with '1123'
c Var 'lijk_00008_00008_00001' order represents '1' with '1'
c Var 'lijk_00008_00008_00001' order represents '0' with '-1123'
c Encoding variable: lijk_00008_00008_00002 with domain: bool (representing constraint )
c Var 'lijk_00008_00008_00002' direct represents '0' with '-1124'
c Var 'lijk_00008_00008_00002' direct represents '1' with '1124'
c Var 'lijk_00008_00008_00002' order represents '1' with '1'
c Var 'lijk_00008_00008_00002' order represents '0' with '-1124'
c Encoding variable: lijk_00008_00008_00003 with domain: bool (representing constraint )
c Var 'lijk_00008_00008_00003' direct represents '0' with '-1125'
c Var 'lijk_00008_00008_00003' direct represents '1' with '1125'
c Var 'lijk_00008_00008_00003' order represents '1' with '1'
c Var 'lijk_00008_00008_00003' order represents '0' with '-1125'
c Encoding variable: uijk_00001_00001_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00001_00001' direct represents '0' with '1126'
1126 0
c Encoding variable: uijk_00001_00001_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00001_00002' direct represents '0' with '1127'
1127 0
c Encoding variable: uijk_00001_00001_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00001_00003' direct represents '0' with '1128'
1128 0
c Encoding variable: uijk_00001_00002_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00002_00001' direct represents '0' with '1129'
1129 0
c Encoding variable: uijk_00001_00002_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00002_00002' direct represents '0' with '1130'
1130 0
c Encoding variable: uijk_00001_00002_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00002_00003' direct represents '0' with '1131'
1131 0
c Encoding variable: uijk_00001_00003_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00003_00001' direct represents '0' with '1132'
1132 0
c Encoding variable: uijk_00001_00003_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00003_00002' direct represents '0' with '1133'
1133 0
c Encoding variable: uijk_00001_00003_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00003_00003' direct represents '0' with '1134'
1134 0
c Encoding variable: uijk_00001_00004_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00004_00001' direct represents '0' with '1135'
1135 0
c Encoding variable: uijk_00001_00004_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00004_00002' direct represents '0' with '1136'
1136 0
c Encoding variable: uijk_00001_00004_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00004_00003' direct represents '0' with '1137'
1137 0
c Encoding variable: uijk_00001_00005_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00005_00001' direct represents '0' with '1138'
1138 0
c Encoding variable: uijk_00001_00005_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00005_00002' direct represents '0' with '1139'
1139 0
c Encoding variable: uijk_00001_00005_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00005_00003' direct represents '0' with '1140'
1140 0
c Encoding variable: uijk_00001_00006_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00006_00001' direct represents '0' with '1141'
1141 0
c Encoding variable: uijk_00001_00006_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00006_00002' direct represents '0' with '1142'
1142 0
c Encoding variable: uijk_00001_00006_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00006_00003' direct represents '0' with '1143'
1143 0
c Encoding variable: uijk_00001_00007_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00007_00001' direct represents '0' with '1144'
1144 0
c Encoding variable: uijk_00001_00007_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00007_00002' direct represents '0' with '1145'
1145 0
c Encoding variable: uijk_00001_00007_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00007_00003' direct represents '0' with '1146'
1146 0
c Encoding variable: uijk_00001_00008_00001 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00008_00001' direct represents '0' with '1147'
1147 0
c Encoding variable: uijk_00001_00008_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00008_00002' direct represents '0' with '1148'
1148 0
c Encoding variable: uijk_00001_00008_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00001_00008_00003' direct represents '0' with '1149'
1149 0
c Encoding variable: uijk_00002_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00001_00001' direct represents '0' with '-1150'
c Var 'uijk_00002_00001_00001' direct represents '1' with '1150'
c Var 'uijk_00002_00001_00001' order represents '1' with '1'
c Var 'uijk_00002_00001_00001' order represents '0' with '-1150'
c Encoding variable: uijk_00002_00001_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00001_00002' direct represents '0' with '1151'
1151 0
c Encoding variable: uijk_00002_00001_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00001_00003' direct represents '0' with '1152'
1152 0
c Encoding variable: uijk_00002_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00002_00001' direct represents '0' with '-1153'
c Var 'uijk_00002_00002_00001' direct represents '1' with '1153'
c Var 'uijk_00002_00002_00001' order represents '1' with '1'
c Var 'uijk_00002_00002_00001' order represents '0' with '-1153'
c Encoding variable: uijk_00002_00002_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00002_00002' direct represents '0' with '1154'
1154 0
c Encoding variable: uijk_00002_00002_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00002_00003' direct represents '0' with '1155'
1155 0
c Encoding variable: uijk_00002_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00003_00001' direct represents '0' with '-1156'
c Var 'uijk_00002_00003_00001' direct represents '1' with '1156'
c Var 'uijk_00002_00003_00001' order represents '1' with '1'
c Var 'uijk_00002_00003_00001' order represents '0' with '-1156'
c Encoding variable: uijk_00002_00003_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00003_00002' direct represents '0' with '1157'
1157 0
c Encoding variable: uijk_00002_00003_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00003_00003' direct represents '0' with '1158'
1158 0
c Encoding variable: uijk_00002_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00004_00001' direct represents '0' with '-1159'
c Var 'uijk_00002_00004_00001' direct represents '1' with '1159'
c Var 'uijk_00002_00004_00001' order represents '1' with '1'
c Var 'uijk_00002_00004_00001' order represents '0' with '-1159'
c Encoding variable: uijk_00002_00004_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00004_00002' direct represents '0' with '1160'
1160 0
c Encoding variable: uijk_00002_00004_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00004_00003' direct represents '0' with '1161'
1161 0
c Encoding variable: uijk_00002_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00005_00001' direct represents '0' with '-1162'
c Var 'uijk_00002_00005_00001' direct represents '1' with '1162'
c Var 'uijk_00002_00005_00001' order represents '1' with '1'
c Var 'uijk_00002_00005_00001' order represents '0' with '-1162'
c Encoding variable: uijk_00002_00005_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00005_00002' direct represents '0' with '1163'
1163 0
c Encoding variable: uijk_00002_00005_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00005_00003' direct represents '0' with '1164'
1164 0
c Encoding variable: uijk_00002_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00006_00001' direct represents '0' with '-1165'
c Var 'uijk_00002_00006_00001' direct represents '1' with '1165'
c Var 'uijk_00002_00006_00001' order represents '1' with '1'
c Var 'uijk_00002_00006_00001' order represents '0' with '-1165'
c Encoding variable: uijk_00002_00006_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00006_00002' direct represents '0' with '1166'
1166 0
c Encoding variable: uijk_00002_00006_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00006_00003' direct represents '0' with '1167'
1167 0
c Encoding variable: uijk_00002_00007_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00007_00001' direct represents '0' with '-1168'
c Var 'uijk_00002_00007_00001' direct represents '1' with '1168'
c Var 'uijk_00002_00007_00001' order represents '1' with '1'
c Var 'uijk_00002_00007_00001' order represents '0' with '-1168'
c Encoding variable: uijk_00002_00007_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00007_00002' direct represents '0' with '1169'
1169 0
c Encoding variable: uijk_00002_00007_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00007_00003' direct represents '0' with '1170'
1170 0
c Encoding variable: uijk_00002_00008_00001 with domain: bool (representing constraint )
c Var 'uijk_00002_00008_00001' direct represents '0' with '-1171'
c Var 'uijk_00002_00008_00001' direct represents '1' with '1171'
c Var 'uijk_00002_00008_00001' order represents '1' with '1'
c Var 'uijk_00002_00008_00001' order represents '0' with '-1171'
c Encoding variable: uijk_00002_00008_00002 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00008_00002' direct represents '0' with '1172'
1172 0
c Encoding variable: uijk_00002_00008_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00002_00008_00003' direct represents '0' with '1173'
1173 0
c Encoding variable: uijk_00003_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00001_00001' direct represents '0' with '-1174'
c Var 'uijk_00003_00001_00001' direct represents '1' with '1174'
c Var 'uijk_00003_00001_00001' order represents '1' with '1'
c Var 'uijk_00003_00001_00001' order represents '0' with '-1174'
c Encoding variable: uijk_00003_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00001_00002' direct represents '0' with '-1175'
c Var 'uijk_00003_00001_00002' direct represents '1' with '1175'
c Var 'uijk_00003_00001_00002' order represents '1' with '1'
c Var 'uijk_00003_00001_00002' order represents '0' with '-1175'
c Encoding variable: uijk_00003_00001_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00003_00001_00003' direct represents '0' with '1176'
1176 0
c Encoding variable: uijk_00003_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00002_00001' direct represents '0' with '-1177'
c Var 'uijk_00003_00002_00001' direct represents '1' with '1177'
c Var 'uijk_00003_00002_00001' order represents '1' with '1'
c Var 'uijk_00003_00002_00001' order represents '0' with '-1177'
c Encoding variable: uijk_00003_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00002_00002' direct represents '0' with '-1178'
c Var 'uijk_00003_00002_00002' direct represents '1' with '1178'
c Var 'uijk_00003_00002_00002' order represents '1' with '1'
c Var 'uijk_00003_00002_00002' order represents '0' with '-1178'
c Encoding variable: uijk_00003_00002_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00003_00002_00003' direct represents '0' with '1179'
1179 0
c Encoding variable: uijk_00003_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00003_00001' direct represents '0' with '-1180'
c Var 'uijk_00003_00003_00001' direct represents '1' with '1180'
c Var 'uijk_00003_00003_00001' order represents '1' with '1'
c Var 'uijk_00003_00003_00001' order represents '0' with '-1180'
c Encoding variable: uijk_00003_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00003_00002' direct represents '0' with '-1181'
c Var 'uijk_00003_00003_00002' direct represents '1' with '1181'
c Var 'uijk_00003_00003_00002' order represents '1' with '1'
c Var 'uijk_00003_00003_00002' order represents '0' with '-1181'
c Encoding variable: uijk_00003_00003_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00003_00003_00003' direct represents '0' with '1182'
1182 0
c Encoding variable: uijk_00003_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00004_00001' direct represents '0' with '-1183'
c Var 'uijk_00003_00004_00001' direct represents '1' with '1183'
c Var 'uijk_00003_00004_00001' order represents '1' with '1'
c Var 'uijk_00003_00004_00001' order represents '0' with '-1183'
c Encoding variable: uijk_00003_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00004_00002' direct represents '0' with '-1184'
c Var 'uijk_00003_00004_00002' direct represents '1' with '1184'
c Var 'uijk_00003_00004_00002' order represents '1' with '1'
c Var 'uijk_00003_00004_00002' order represents '0' with '-1184'
c Encoding variable: uijk_00003_00004_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00003_00004_00003' direct represents '0' with '1185'
1185 0
c Encoding variable: uijk_00003_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00005_00001' direct represents '0' with '-1186'
c Var 'uijk_00003_00005_00001' direct represents '1' with '1186'
c Var 'uijk_00003_00005_00001' order represents '1' with '1'
c Var 'uijk_00003_00005_00001' order represents '0' with '-1186'
c Encoding variable: uijk_00003_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00005_00002' direct represents '0' with '-1187'
c Var 'uijk_00003_00005_00002' direct represents '1' with '1187'
c Var 'uijk_00003_00005_00002' order represents '1' with '1'
c Var 'uijk_00003_00005_00002' order represents '0' with '-1187'
c Encoding variable: uijk_00003_00005_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00003_00005_00003' direct represents '0' with '1188'
1188 0
c Encoding variable: uijk_00003_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00006_00001' direct represents '0' with '-1189'
c Var 'uijk_00003_00006_00001' direct represents '1' with '1189'
c Var 'uijk_00003_00006_00001' order represents '1' with '1'
c Var 'uijk_00003_00006_00001' order represents '0' with '-1189'
c Encoding variable: uijk_00003_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00006_00002' direct represents '0' with '-1190'
c Var 'uijk_00003_00006_00002' direct represents '1' with '1190'
c Var 'uijk_00003_00006_00002' order represents '1' with '1'
c Var 'uijk_00003_00006_00002' order represents '0' with '-1190'
c Encoding variable: uijk_00003_00006_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00003_00006_00003' direct represents '0' with '1191'
1191 0
c Encoding variable: uijk_00003_00007_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00007_00001' direct represents '0' with '-1192'
c Var 'uijk_00003_00007_00001' direct represents '1' with '1192'
c Var 'uijk_00003_00007_00001' order represents '1' with '1'
c Var 'uijk_00003_00007_00001' order represents '0' with '-1192'
c Encoding variable: uijk_00003_00007_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00007_00002' direct represents '0' with '-1193'
c Var 'uijk_00003_00007_00002' direct represents '1' with '1193'
c Var 'uijk_00003_00007_00002' order represents '1' with '1'
c Var 'uijk_00003_00007_00002' order represents '0' with '-1193'
c Encoding variable: uijk_00003_00007_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00003_00007_00003' direct represents '0' with '1194'
1194 0
c Encoding variable: uijk_00003_00008_00001 with domain: bool (representing constraint )
c Var 'uijk_00003_00008_00001' direct represents '0' with '-1195'
c Var 'uijk_00003_00008_00001' direct represents '1' with '1195'
c Var 'uijk_00003_00008_00001' order represents '1' with '1'
c Var 'uijk_00003_00008_00001' order represents '0' with '-1195'
c Encoding variable: uijk_00003_00008_00002 with domain: bool (representing constraint )
c Var 'uijk_00003_00008_00002' direct represents '0' with '-1196'
c Var 'uijk_00003_00008_00002' direct represents '1' with '1196'
c Var 'uijk_00003_00008_00002' order represents '1' with '1'
c Var 'uijk_00003_00008_00002' order represents '0' with '-1196'
c Encoding variable: uijk_00003_00008_00003 with domain: bool(false) (representing constraint )
c Var 'uijk_00003_00008_00003' direct represents '0' with '1197'
1197 0
c Encoding variable: uijk_00004_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00001_00001' direct represents '0' with '-1198'
c Var 'uijk_00004_00001_00001' direct represents '1' with '1198'
c Var 'uijk_00004_00001_00001' order represents '1' with '1'
c Var 'uijk_00004_00001_00001' order represents '0' with '-1198'
c Encoding variable: uijk_00004_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00001_00002' direct represents '0' with '-1199'
c Var 'uijk_00004_00001_00002' direct represents '1' with '1199'
c Var 'uijk_00004_00001_00002' order represents '1' with '1'
c Var 'uijk_00004_00001_00002' order represents '0' with '-1199'
c Encoding variable: uijk_00004_00001_00003 with domain: bool (representing constraint )
c Var 'uijk_00004_00001_00003' direct represents '0' with '-1200'
c Var 'uijk_00004_00001_00003' direct represents '1' with '1200'
c Var 'uijk_00004_00001_00003' order represents '1' with '1'
c Var 'uijk_00004_00001_00003' order represents '0' with '-1200'
c Encoding variable: uijk_00004_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00002_00001' direct represents '0' with '-1201'
c Var 'uijk_00004_00002_00001' direct represents '1' with '1201'
c Var 'uijk_00004_00002_00001' order represents '1' with '1'
c Var 'uijk_00004_00002_00001' order represents '0' with '-1201'
c Encoding variable: uijk_00004_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00002_00002' direct represents '0' with '-1202'
c Var 'uijk_00004_00002_00002' direct represents '1' with '1202'
c Var 'uijk_00004_00002_00002' order represents '1' with '1'
c Var 'uijk_00004_00002_00002' order represents '0' with '-1202'
c Encoding variable: uijk_00004_00002_00003 with domain: bool (representing constraint )
c Var 'uijk_00004_00002_00003' direct represents '0' with '-1203'
c Var 'uijk_00004_00002_00003' direct represents '1' with '1203'
c Var 'uijk_00004_00002_00003' order represents '1' with '1'
c Var 'uijk_00004_00002_00003' order represents '0' with '-1203'
c Encoding variable: uijk_00004_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00003_00001' direct represents '0' with '-1204'
c Var 'uijk_00004_00003_00001' direct represents '1' with '1204'
c Var 'uijk_00004_00003_00001' order represents '1' with '1'
c Var 'uijk_00004_00003_00001' order represents '0' with '-1204'
c Encoding variable: uijk_00004_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00003_00002' direct represents '0' with '-1205'
c Var 'uijk_00004_00003_00002' direct represents '1' with '1205'
c Var 'uijk_00004_00003_00002' order represents '1' with '1'
c Var 'uijk_00004_00003_00002' order represents '0' with '-1205'
c Encoding variable: uijk_00004_00003_00003 with domain: bool (representing constraint )
c Var 'uijk_00004_00003_00003' direct represents '0' with '-1206'
c Var 'uijk_00004_00003_00003' direct represents '1' with '1206'
c Var 'uijk_00004_00003_00003' order represents '1' with '1'
c Var 'uijk_00004_00003_00003' order represents '0' with '-1206'
c Encoding variable: uijk_00004_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00004_00001' direct represents '0' with '-1207'
c Var 'uijk_00004_00004_00001' direct represents '1' with '1207'
c Var 'uijk_00004_00004_00001' order represents '1' with '1'
c Var 'uijk_00004_00004_00001' order represents '0' with '-1207'
c Encoding variable: uijk_00004_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00004_00002' direct represents '0' with '-1208'
c Var 'uijk_00004_00004_00002' direct represents '1' with '1208'
c Var 'uijk_00004_00004_00002' order represents '1' with '1'
c Var 'uijk_00004_00004_00002' order represents '0' with '-1208'
c Encoding variable: uijk_00004_00004_00003 with domain: bool (representing constraint )
c Var 'uijk_00004_00004_00003' direct represents '0' with '-1209'
c Var 'uijk_00004_00004_00003' direct represents '1' with '1209'
c Var 'uijk_00004_00004_00003' order represents '1' with '1'
c Var 'uijk_00004_00004_00003' order represents '0' with '-1209'
c Encoding variable: uijk_00004_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00005_00001' direct represents '0' with '-1210'
c Var 'uijk_00004_00005_00001' direct represents '1' with '1210'
c Var 'uijk_00004_00005_00001' order represents '1' with '1'
c Var 'uijk_00004_00005_00001' order represents '0' with '-1210'
c Encoding variable: uijk_00004_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00005_00002' direct represents '0' with '-1211'
c Var 'uijk_00004_00005_00002' direct represents '1' with '1211'
c Var 'uijk_00004_00005_00002' order represents '1' with '1'
c Var 'uijk_00004_00005_00002' order represents '0' with '-1211'
c Encoding variable: uijk_00004_00005_00003 with domain: bool (representing constraint )
c Var 'uijk_00004_00005_00003' direct represents '0' with '-1212'
c Var 'uijk_00004_00005_00003' direct represents '1' with '1212'
c Var 'uijk_00004_00005_00003' order represents '1' with '1'
c Var 'uijk_00004_00005_00003' order represents '0' with '-1212'
c Encoding variable: uijk_00004_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00006_00001' direct represents '0' with '-1213'
c Var 'uijk_00004_00006_00001' direct represents '1' with '1213'
c Var 'uijk_00004_00006_00001' order represents '1' with '1'
c Var 'uijk_00004_00006_00001' order represents '0' with '-1213'
c Encoding variable: uijk_00004_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00006_00002' direct represents '0' with '-1214'
c Var 'uijk_00004_00006_00002' direct represents '1' with '1214'
c Var 'uijk_00004_00006_00002' order represents '1' with '1'
c Var 'uijk_00004_00006_00002' order represents '0' with '-1214'
c Encoding variable: uijk_00004_00006_00003 with domain: bool (representing constraint )
c Var 'uijk_00004_00006_00003' direct represents '0' with '-1215'
c Var 'uijk_00004_00006_00003' direct represents '1' with '1215'
c Var 'uijk_00004_00006_00003' order represents '1' with '1'
c Var 'uijk_00004_00006_00003' order represents '0' with '-1215'
c Encoding variable: uijk_00004_00007_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00007_00001' direct represents '0' with '-1216'
c Var 'uijk_00004_00007_00001' direct represents '1' with '1216'
c Var 'uijk_00004_00007_00001' order represents '1' with '1'
c Var 'uijk_00004_00007_00001' order represents '0' with '-1216'
c Encoding variable: uijk_00004_00007_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00007_00002' direct represents '0' with '-1217'
c Var 'uijk_00004_00007_00002' direct represents '1' with '1217'
c Var 'uijk_00004_00007_00002' order represents '1' with '1'
c Var 'uijk_00004_00007_00002' order represents '0' with '-1217'
c Encoding variable: uijk_00004_00007_00003 with domain: bool (representing constraint )
c Var 'uijk_00004_00007_00003' direct represents '0' with '-1218'
c Var 'uijk_00004_00007_00003' direct represents '1' with '1218'
c Var 'uijk_00004_00007_00003' order represents '1' with '1'
c Var 'uijk_00004_00007_00003' order represents '0' with '-1218'
c Encoding variable: uijk_00004_00008_00001 with domain: bool (representing constraint )
c Var 'uijk_00004_00008_00001' direct represents '0' with '-1219'
c Var 'uijk_00004_00008_00001' direct represents '1' with '1219'
c Var 'uijk_00004_00008_00001' order represents '1' with '1'
c Var 'uijk_00004_00008_00001' order represents '0' with '-1219'
c Encoding variable: uijk_00004_00008_00002 with domain: bool (representing constraint )
c Var 'uijk_00004_00008_00002' direct represents '0' with '-1220'
c Var 'uijk_00004_00008_00002' direct represents '1' with '1220'
c Var 'uijk_00004_00008_00002' order represents '1' with '1'
c Var 'uijk_00004_00008_00002' order represents '0' with '-1220'
c Encoding variable: uijk_00004_00008_00003 with domain: bool (representing constraint )
c Var 'uijk_00004_00008_00003' direct represents '0' with '-1221'
c Var 'uijk_00004_00008_00003' direct represents '1' with '1221'
c Var 'uijk_00004_00008_00003' order represents '1' with '1'
c Var 'uijk_00004_00008_00003' order represents '0' with '-1221'
c Encoding variable: uijk_00005_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00001_00001' direct represents '0' with '-1222'
c Var 'uijk_00005_00001_00001' direct represents '1' with '1222'
c Var 'uijk_00005_00001_00001' order represents '1' with '1'
c Var 'uijk_00005_00001_00001' order represents '0' with '-1222'
c Encoding variable: uijk_00005_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00001_00002' direct represents '0' with '-1223'
c Var 'uijk_00005_00001_00002' direct represents '1' with '1223'
c Var 'uijk_00005_00001_00002' order represents '1' with '1'
c Var 'uijk_00005_00001_00002' order represents '0' with '-1223'
c Encoding variable: uijk_00005_00001_00003 with domain: bool (representing constraint )
c Var 'uijk_00005_00001_00003' direct represents '0' with '-1224'
c Var 'uijk_00005_00001_00003' direct represents '1' with '1224'
c Var 'uijk_00005_00001_00003' order represents '1' with '1'
c Var 'uijk_00005_00001_00003' order represents '0' with '-1224'
c Encoding variable: uijk_00005_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00002_00001' direct represents '0' with '-1225'
c Var 'uijk_00005_00002_00001' direct represents '1' with '1225'
c Var 'uijk_00005_00002_00001' order represents '1' with '1'
c Var 'uijk_00005_00002_00001' order represents '0' with '-1225'
c Encoding variable: uijk_00005_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00002_00002' direct represents '0' with '-1226'
c Var 'uijk_00005_00002_00002' direct represents '1' with '1226'
c Var 'uijk_00005_00002_00002' order represents '1' with '1'
c Var 'uijk_00005_00002_00002' order represents '0' with '-1226'
c Encoding variable: uijk_00005_00002_00003 with domain: bool (representing constraint )
c Var 'uijk_00005_00002_00003' direct represents '0' with '-1227'
c Var 'uijk_00005_00002_00003' direct represents '1' with '1227'
c Var 'uijk_00005_00002_00003' order represents '1' with '1'
c Var 'uijk_00005_00002_00003' order represents '0' with '-1227'
c Encoding variable: uijk_00005_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00003_00001' direct represents '0' with '-1228'
c Var 'uijk_00005_00003_00001' direct represents '1' with '1228'
c Var 'uijk_00005_00003_00001' order represents '1' with '1'
c Var 'uijk_00005_00003_00001' order represents '0' with '-1228'
c Encoding variable: uijk_00005_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00003_00002' direct represents '0' with '-1229'
c Var 'uijk_00005_00003_00002' direct represents '1' with '1229'
c Var 'uijk_00005_00003_00002' order represents '1' with '1'
c Var 'uijk_00005_00003_00002' order represents '0' with '-1229'
c Encoding variable: uijk_00005_00003_00003 with domain: bool (representing constraint )
c Var 'uijk_00005_00003_00003' direct represents '0' with '-1230'
c Var 'uijk_00005_00003_00003' direct represents '1' with '1230'
c Var 'uijk_00005_00003_00003' order represents '1' with '1'
c Var 'uijk_00005_00003_00003' order represents '0' with '-1230'
c Encoding variable: uijk_00005_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00004_00001' direct represents '0' with '-1231'
c Var 'uijk_00005_00004_00001' direct represents '1' with '1231'
c Var 'uijk_00005_00004_00001' order represents '1' with '1'
c Var 'uijk_00005_00004_00001' order represents '0' with '-1231'
c Encoding variable: uijk_00005_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00004_00002' direct represents '0' with '-1232'
c Var 'uijk_00005_00004_00002' direct represents '1' with '1232'
c Var 'uijk_00005_00004_00002' order represents '1' with '1'
c Var 'uijk_00005_00004_00002' order represents '0' with '-1232'
c Encoding variable: uijk_00005_00004_00003 with domain: bool (representing constraint )
c Var 'uijk_00005_00004_00003' direct represents '0' with '-1233'
c Var 'uijk_00005_00004_00003' direct represents '1' with '1233'
c Var 'uijk_00005_00004_00003' order represents '1' with '1'
c Var 'uijk_00005_00004_00003' order represents '0' with '-1233'
c Encoding variable: uijk_00005_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00005_00001' direct represents '0' with '-1234'
c Var 'uijk_00005_00005_00001' direct represents '1' with '1234'
c Var 'uijk_00005_00005_00001' order represents '1' with '1'
c Var 'uijk_00005_00005_00001' order represents '0' with '-1234'
c Encoding variable: uijk_00005_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00005_00002' direct represents '0' with '-1235'
c Var 'uijk_00005_00005_00002' direct represents '1' with '1235'
c Var 'uijk_00005_00005_00002' order represents '1' with '1'
c Var 'uijk_00005_00005_00002' order represents '0' with '-1235'
c Encoding variable: uijk_00005_00005_00003 with domain: bool (representing constraint )
c Var 'uijk_00005_00005_00003' direct represents '0' with '-1236'
c Var 'uijk_00005_00005_00003' direct represents '1' with '1236'
c Var 'uijk_00005_00005_00003' order represents '1' with '1'
c Var 'uijk_00005_00005_00003' order represents '0' with '-1236'
c Encoding variable: uijk_00005_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00006_00001' direct represents '0' with '-1237'
c Var 'uijk_00005_00006_00001' direct represents '1' with '1237'
c Var 'uijk_00005_00006_00001' order represents '1' with '1'
c Var 'uijk_00005_00006_00001' order represents '0' with '-1237'
c Encoding variable: uijk_00005_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00006_00002' direct represents '0' with '-1238'
c Var 'uijk_00005_00006_00002' direct represents '1' with '1238'
c Var 'uijk_00005_00006_00002' order represents '1' with '1'
c Var 'uijk_00005_00006_00002' order represents '0' with '-1238'
c Encoding variable: uijk_00005_00006_00003 with domain: bool (representing constraint )
c Var 'uijk_00005_00006_00003' direct represents '0' with '-1239'
c Var 'uijk_00005_00006_00003' direct represents '1' with '1239'
c Var 'uijk_00005_00006_00003' order represents '1' with '1'
c Var 'uijk_00005_00006_00003' order represents '0' with '-1239'
c Encoding variable: uijk_00005_00007_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00007_00001' direct represents '0' with '-1240'
c Var 'uijk_00005_00007_00001' direct represents '1' with '1240'
c Var 'uijk_00005_00007_00001' order represents '1' with '1'
c Var 'uijk_00005_00007_00001' order represents '0' with '-1240'
c Encoding variable: uijk_00005_00007_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00007_00002' direct represents '0' with '-1241'
c Var 'uijk_00005_00007_00002' direct represents '1' with '1241'
c Var 'uijk_00005_00007_00002' order represents '1' with '1'
c Var 'uijk_00005_00007_00002' order represents '0' with '-1241'
c Encoding variable: uijk_00005_00007_00003 with domain: bool (representing constraint )
c Var 'uijk_00005_00007_00003' direct represents '0' with '-1242'
c Var 'uijk_00005_00007_00003' direct represents '1' with '1242'
c Var 'uijk_00005_00007_00003' order represents '1' with '1'
c Var 'uijk_00005_00007_00003' order represents '0' with '-1242'
c Encoding variable: uijk_00005_00008_00001 with domain: bool (representing constraint )
c Var 'uijk_00005_00008_00001' direct represents '0' with '-1243'
c Var 'uijk_00005_00008_00001' direct represents '1' with '1243'
c Var 'uijk_00005_00008_00001' order represents '1' with '1'
c Var 'uijk_00005_00008_00001' order represents '0' with '-1243'
c Encoding variable: uijk_00005_00008_00002 with domain: bool (representing constraint )
c Var 'uijk_00005_00008_00002' direct represents '0' with '-1244'
c Var 'uijk_00005_00008_00002' direct represents '1' with '1244'
c Var 'uijk_00005_00008_00002' order represents '1' with '1'
c Var 'uijk_00005_00008_00002' order represents '0' with '-1244'
c Encoding variable: uijk_00005_00008_00003 with domain: bool (representing constraint )
c Var 'uijk_00005_00008_00003' direct represents '0' with '-1245'
c Var 'uijk_00005_00008_00003' direct represents '1' with '1245'
c Var 'uijk_00005_00008_00003' order represents '1' with '1'
c Var 'uijk_00005_00008_00003' order represents '0' with '-1245'
c Encoding variable: uijk_00006_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00001_00001' direct represents '0' with '-1246'
c Var 'uijk_00006_00001_00001' direct represents '1' with '1246'
c Var 'uijk_00006_00001_00001' order represents '1' with '1'
c Var 'uijk_00006_00001_00001' order represents '0' with '-1246'
c Encoding variable: uijk_00006_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00001_00002' direct represents '0' with '-1247'
c Var 'uijk_00006_00001_00002' direct represents '1' with '1247'
c Var 'uijk_00006_00001_00002' order represents '1' with '1'
c Var 'uijk_00006_00001_00002' order represents '0' with '-1247'
c Encoding variable: uijk_00006_00001_00003 with domain: bool (representing constraint )
c Var 'uijk_00006_00001_00003' direct represents '0' with '-1248'
c Var 'uijk_00006_00001_00003' direct represents '1' with '1248'
c Var 'uijk_00006_00001_00003' order represents '1' with '1'
c Var 'uijk_00006_00001_00003' order represents '0' with '-1248'
c Encoding variable: uijk_00006_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00002_00001' direct represents '0' with '-1249'
c Var 'uijk_00006_00002_00001' direct represents '1' with '1249'
c Var 'uijk_00006_00002_00001' order represents '1' with '1'
c Var 'uijk_00006_00002_00001' order represents '0' with '-1249'
c Encoding variable: uijk_00006_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00002_00002' direct represents '0' with '-1250'
c Var 'uijk_00006_00002_00002' direct represents '1' with '1250'
c Var 'uijk_00006_00002_00002' order represents '1' with '1'
c Var 'uijk_00006_00002_00002' order represents '0' with '-1250'
c Encoding variable: uijk_00006_00002_00003 with domain: bool (representing constraint )
c Var 'uijk_00006_00002_00003' direct represents '0' with '-1251'
c Var 'uijk_00006_00002_00003' direct represents '1' with '1251'
c Var 'uijk_00006_00002_00003' order represents '1' with '1'
c Var 'uijk_00006_00002_00003' order represents '0' with '-1251'
c Encoding variable: uijk_00006_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00003_00001' direct represents '0' with '-1252'
c Var 'uijk_00006_00003_00001' direct represents '1' with '1252'
c Var 'uijk_00006_00003_00001' order represents '1' with '1'
c Var 'uijk_00006_00003_00001' order represents '0' with '-1252'
c Encoding variable: uijk_00006_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00003_00002' direct represents '0' with '-1253'
c Var 'uijk_00006_00003_00002' direct represents '1' with '1253'
c Var 'uijk_00006_00003_00002' order represents '1' with '1'
c Var 'uijk_00006_00003_00002' order represents '0' with '-1253'
c Encoding variable: uijk_00006_00003_00003 with domain: bool (representing constraint )
c Var 'uijk_00006_00003_00003' direct represents '0' with '-1254'
c Var 'uijk_00006_00003_00003' direct represents '1' with '1254'
c Var 'uijk_00006_00003_00003' order represents '1' with '1'
c Var 'uijk_00006_00003_00003' order represents '0' with '-1254'
c Encoding variable: uijk_00006_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00004_00001' direct represents '0' with '-1255'
c Var 'uijk_00006_00004_00001' direct represents '1' with '1255'
c Var 'uijk_00006_00004_00001' order represents '1' with '1'
c Var 'uijk_00006_00004_00001' order represents '0' with '-1255'
c Encoding variable: uijk_00006_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00004_00002' direct represents '0' with '-1256'
c Var 'uijk_00006_00004_00002' direct represents '1' with '1256'
c Var 'uijk_00006_00004_00002' order represents '1' with '1'
c Var 'uijk_00006_00004_00002' order represents '0' with '-1256'
c Encoding variable: uijk_00006_00004_00003 with domain: bool (representing constraint )
c Var 'uijk_00006_00004_00003' direct represents '0' with '-1257'
c Var 'uijk_00006_00004_00003' direct represents '1' with '1257'
c Var 'uijk_00006_00004_00003' order represents '1' with '1'
c Var 'uijk_00006_00004_00003' order represents '0' with '-1257'
c Encoding variable: uijk_00006_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00005_00001' direct represents '0' with '-1258'
c Var 'uijk_00006_00005_00001' direct represents '1' with '1258'
c Var 'uijk_00006_00005_00001' order represents '1' with '1'
c Var 'uijk_00006_00005_00001' order represents '0' with '-1258'
c Encoding variable: uijk_00006_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00005_00002' direct represents '0' with '-1259'
c Var 'uijk_00006_00005_00002' direct represents '1' with '1259'
c Var 'uijk_00006_00005_00002' order represents '1' with '1'
c Var 'uijk_00006_00005_00002' order represents '0' with '-1259'
c Encoding variable: uijk_00006_00005_00003 with domain: bool (representing constraint )
c Var 'uijk_00006_00005_00003' direct represents '0' with '-1260'
c Var 'uijk_00006_00005_00003' direct represents '1' with '1260'
c Var 'uijk_00006_00005_00003' order represents '1' with '1'
c Var 'uijk_00006_00005_00003' order represents '0' with '-1260'
c Encoding variable: uijk_00006_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00006_00001' direct represents '0' with '-1261'
c Var 'uijk_00006_00006_00001' direct represents '1' with '1261'
c Var 'uijk_00006_00006_00001' order represents '1' with '1'
c Var 'uijk_00006_00006_00001' order represents '0' with '-1261'
c Encoding variable: uijk_00006_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00006_00002' direct represents '0' with '-1262'
c Var 'uijk_00006_00006_00002' direct represents '1' with '1262'
c Var 'uijk_00006_00006_00002' order represents '1' with '1'
c Var 'uijk_00006_00006_00002' order represents '0' with '-1262'
c Encoding variable: uijk_00006_00006_00003 with domain: bool (representing constraint )
c Var 'uijk_00006_00006_00003' direct represents '0' with '-1263'
c Var 'uijk_00006_00006_00003' direct represents '1' with '1263'
c Var 'uijk_00006_00006_00003' order represents '1' with '1'
c Var 'uijk_00006_00006_00003' order represents '0' with '-1263'
c Encoding variable: uijk_00006_00007_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00007_00001' direct represents '0' with '-1264'
c Var 'uijk_00006_00007_00001' direct represents '1' with '1264'
c Var 'uijk_00006_00007_00001' order represents '1' with '1'
c Var 'uijk_00006_00007_00001' order represents '0' with '-1264'
c Encoding variable: uijk_00006_00007_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00007_00002' direct represents '0' with '-1265'
c Var 'uijk_00006_00007_00002' direct represents '1' with '1265'
c Var 'uijk_00006_00007_00002' order represents '1' with '1'
c Var 'uijk_00006_00007_00002' order represents '0' with '-1265'
c Encoding variable: uijk_00006_00007_00003 with domain: bool (representing constraint )
c Var 'uijk_00006_00007_00003' direct represents '0' with '-1266'
c Var 'uijk_00006_00007_00003' direct represents '1' with '1266'
c Var 'uijk_00006_00007_00003' order represents '1' with '1'
c Var 'uijk_00006_00007_00003' order represents '0' with '-1266'
c Encoding variable: uijk_00006_00008_00001 with domain: bool (representing constraint )
c Var 'uijk_00006_00008_00001' direct represents '0' with '-1267'
c Var 'uijk_00006_00008_00001' direct represents '1' with '1267'
c Var 'uijk_00006_00008_00001' order represents '1' with '1'
c Var 'uijk_00006_00008_00001' order represents '0' with '-1267'
c Encoding variable: uijk_00006_00008_00002 with domain: bool (representing constraint )
c Var 'uijk_00006_00008_00002' direct represents '0' with '-1268'
c Var 'uijk_00006_00008_00002' direct represents '1' with '1268'
c Var 'uijk_00006_00008_00002' order represents '1' with '1'
c Var 'uijk_00006_00008_00002' order represents '0' with '-1268'
c Encoding variable: uijk_00006_00008_00003 with domain: bool (representing constraint )
c Var 'uijk_00006_00008_00003' direct represents '0' with '-1269'
c Var 'uijk_00006_00008_00003' direct represents '1' with '1269'
c Var 'uijk_00006_00008_00003' order represents '1' with '1'
c Var 'uijk_00006_00008_00003' order represents '0' with '-1269'
c Encoding variable: uijk_00007_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00007_00001_00001' direct represents '0' with '-1270'
c Var 'uijk_00007_00001_00001' direct represents '1' with '1270'
c Var 'uijk_00007_00001_00001' order represents '1' with '1'
c Var 'uijk_00007_00001_00001' order represents '0' with '-1270'
c Encoding variable: uijk_00007_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00007_00001_00002' direct represents '0' with '-1271'
c Var 'uijk_00007_00001_00002' direct represents '1' with '1271'
c Var 'uijk_00007_00001_00002' order represents '1' with '1'
c Var 'uijk_00007_00001_00002' order represents '0' with '-1271'
c Encoding variable: uijk_00007_00001_00003 with domain: bool (representing constraint )
c Var 'uijk_00007_00001_00003' direct represents '0' with '-1272'
c Var 'uijk_00007_00001_00003' direct represents '1' with '1272'
c Var 'uijk_00007_00001_00003' order represents '1' with '1'
c Var 'uijk_00007_00001_00003' order represents '0' with '-1272'
c Encoding variable: uijk_00007_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00007_00002_00001' direct represents '0' with '-1273'
c Var 'uijk_00007_00002_00001' direct represents '1' with '1273'
c Var 'uijk_00007_00002_00001' order represents '1' with '1'
c Var 'uijk_00007_00002_00001' order represents '0' with '-1273'
c Encoding variable: uijk_00007_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00007_00002_00002' direct represents '0' with '-1274'
c Var 'uijk_00007_00002_00002' direct represents '1' with '1274'
c Var 'uijk_00007_00002_00002' order represents '1' with '1'
c Var 'uijk_00007_00002_00002' order represents '0' with '-1274'
c Encoding variable: uijk_00007_00002_00003 with domain: bool (representing constraint )
c Var 'uijk_00007_00002_00003' direct represents '0' with '-1275'
c Var 'uijk_00007_00002_00003' direct represents '1' with '1275'
c Var 'uijk_00007_00002_00003' order represents '1' with '1'
c Var 'uijk_00007_00002_00003' order represents '0' with '-1275'
c Encoding variable: uijk_00007_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00007_00003_00001' direct represents '0' with '-1276'
c Var 'uijk_00007_00003_00001' direct represents '1' with '1276'
c Var 'uijk_00007_00003_00001' order represents '1' with '1'
c Var 'uijk_00007_00003_00001' order represents '0' with '-1276'
c Encoding variable: uijk_00007_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00007_00003_00002' direct represents '0' with '-1277'
c Var 'uijk_00007_00003_00002' direct represents '1' with '1277'
c Var 'uijk_00007_00003_00002' order represents '1' with '1'
c Var 'uijk_00007_00003_00002' order represents '0' with '-1277'
c Encoding variable: uijk_00007_00003_00003 with domain: bool (representing constraint )
c Var 'uijk_00007_00003_00003' direct represents '0' with '-1278'
c Var 'uijk_00007_00003_00003' direct represents '1' with '1278'
c Var 'uijk_00007_00003_00003' order represents '1' with '1'
c Var 'uijk_00007_00003_00003' order represents '0' with '-1278'
c Encoding variable: uijk_00007_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00007_00004_00001' direct represents '0' with '-1279'
c Var 'uijk_00007_00004_00001' direct represents '1' with '1279'
c Var 'uijk_00007_00004_00001' order represents '1' with '1'
c Var 'uijk_00007_00004_00001' order represents '0' with '-1279'
c Encoding variable: uijk_00007_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00007_00004_00002' direct represents '0' with '-1280'
c Var 'uijk_00007_00004_00002' direct represents '1' with '1280'
c Var 'uijk_00007_00004_00002' order represents '1' with '1'
c Var 'uijk_00007_00004_00002' order represents '0' with '-1280'
c Encoding variable: uijk_00007_00004_00003 with domain: bool (representing constraint )
c Var 'uijk_00007_00004_00003' direct represents '0' with '-1281'
c Var 'uijk_00007_00004_00003' direct represents '1' with '1281'
c Var 'uijk_00007_00004_00003' order represents '1' with '1'
c Var 'uijk_00007_00004_00003' order represents '0' with '-1281'
c Encoding variable: uijk_00007_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00007_00005_00001' direct represents '0' with '-1282'
c Var 'uijk_00007_00005_00001' direct represents '1' with '1282'
c Var 'uijk_00007_00005_00001' order represents '1' with '1'
c Var 'uijk_00007_00005_00001' order represents '0' with '-1282'
c Encoding variable: uijk_00007_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00007_00005_00002' direct represents '0' with '-1283'
c Var 'uijk_00007_00005_00002' direct represents '1' with '1283'
c Var 'uijk_00007_00005_00002' order represents '1' with '1'
c Var 'uijk_00007_00005_00002' order represents '0' with '-1283'
c Encoding variable: uijk_00007_00005_00003 with domain: bool (representing constraint )
c Var 'uijk_00007_00005_00003' direct represents '0' with '-1284'
c Var 'uijk_00007_00005_00003' direct represents '1' with '1284'
c Var 'uijk_00007_00005_00003' order represents '1' with '1'
c Var 'uijk_00007_00005_00003' order represents '0' with '-1284'
c Encoding variable: uijk_00007_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00007_00006_00001' direct represents '0' with '-1285'
c Var 'uijk_00007_00006_00001' direct represents '1' with '1285'
c Var 'uijk_00007_00006_00001' order represents '1' with '1'
c Var 'uijk_00007_00006_00001' order represents '0' with '-1285'
c Encoding variable: uijk_00007_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00007_00006_00002' direct represents '0' with '-1286'
c Var 'uijk_00007_00006_00002' direct represents '1' with '1286'
c Var 'uijk_00007_00006_00002' order represents '1' with '1'
c Var 'uijk_00007_00006_00002' order represents '0' with '-1286'
c Encoding variable: uijk_00007_00006_00003 with domain: bool (representing constraint )
c Var 'uijk_00007_00006_00003' direct represents '0' with '-1287'
c Var 'uijk_00007_00006_00003' direct represents '1' with '1287'
c Var 'uijk_00007_00006_00003' order represents '1' with '1'
c Var 'uijk_00007_00006_00003' order represents '0' with '-1287'
c Encoding variable: uijk_00007_00007_00001 with domain: bool (representing constraint )
c Var 'uijk_00007_00007_00001' direct represents '0' with '-1288'
c Var 'uijk_00007_00007_00001' direct represents '1' with '1288'
c Var 'uijk_00007_00007_00001' order represents '1' with '1'
c Var 'uijk_00007_00007_00001' order represents '0' with '-1288'
c Encoding variable: uijk_00007_00007_00002 with domain: bool (representing constraint )
c Var 'uijk_00007_00007_00002' direct represents '0' with '-1289'
c Var 'uijk_00007_00007_00002' direct represents '1' with '1289'
c Var 'uijk_00007_00007_00002' order represents '1' with '1'
c Var 'uijk_00007_00007_00002' order represents '0' with '-1289'
c Encoding variable: uijk_00007_00007_00003 with domain: bool (representing constraint )
c Var 'uijk_00007_00007_00003' direct represents '0' with '-1290'
c Var 'uijk_00007_00007_00003' direct represents '1' with '1290'
c Var 'uijk_00007_00007_00003' order represents '1' with '1'
c Var 'uijk_00007_00007_00003' order represents '0' with '-1290'
c Encoding variable: uijk_00007_00008_00001 with domain: bool (representing constraint )
c Var 'uijk_00007_00008_00001' direct represents '0' with '-1291'
c Var 'uijk_00007_00008_00001' direct represents '1' with '1291'
c Var 'uijk_00007_00008_00001' order represents '1' with '1'
c Var 'uijk_00007_00008_00001' order represents '0' with '-1291'
c Encoding variable: uijk_00007_00008_00002 with domain: bool (representing constraint )
c Var 'uijk_00007_00008_00002' direct represents '0' with '-1292'
c Var 'uijk_00007_00008_00002' direct represents '1' with '1292'
c Var 'uijk_00007_00008_00002' order represents '1' with '1'
c Var 'uijk_00007_00008_00002' order represents '0' with '-1292'
c Encoding variable: uijk_00007_00008_00003 with domain: bool (representing constraint )
c Var 'uijk_00007_00008_00003' direct represents '0' with '-1293'
c Var 'uijk_00007_00008_00003' direct represents '1' with '1293'
c Var 'uijk_00007_00008_00003' order represents '1' with '1'
c Var 'uijk_00007_00008_00003' order represents '0' with '-1293'
c Encoding variable: uijk_00008_00001_00001 with domain: bool (representing constraint )
c Var 'uijk_00008_00001_00001' direct represents '0' with '-1294'
c Var 'uijk_00008_00001_00001' direct represents '1' with '1294'
c Var 'uijk_00008_00001_00001' order represents '1' with '1'
c Var 'uijk_00008_00001_00001' order represents '0' with '-1294'
c Encoding variable: uijk_00008_00001_00002 with domain: bool (representing constraint )
c Var 'uijk_00008_00001_00002' direct represents '0' with '-1295'
c Var 'uijk_00008_00001_00002' direct represents '1' with '1295'
c Var 'uijk_00008_00001_00002' order represents '1' with '1'
c Var 'uijk_00008_00001_00002' order represents '0' with '-1295'
c Encoding variable: uijk_00008_00001_00003 with domain: bool (representing constraint )
c Var 'uijk_00008_00001_00003' direct represents '0' with '-1296'
c Var 'uijk_00008_00001_00003' direct represents '1' with '1296'
c Var 'uijk_00008_00001_00003' order represents '1' with '1'
c Var 'uijk_00008_00001_00003' order represents '0' with '-1296'
c Encoding variable: uijk_00008_00002_00001 with domain: bool (representing constraint )
c Var 'uijk_00008_00002_00001' direct represents '0' with '-1297'
c Var 'uijk_00008_00002_00001' direct represents '1' with '1297'
c Var 'uijk_00008_00002_00001' order represents '1' with '1'
c Var 'uijk_00008_00002_00001' order represents '0' with '-1297'
c Encoding variable: uijk_00008_00002_00002 with domain: bool (representing constraint )
c Var 'uijk_00008_00002_00002' direct represents '0' with '-1298'
c Var 'uijk_00008_00002_00002' direct represents '1' with '1298'
c Var 'uijk_00008_00002_00002' order represents '1' with '1'
c Var 'uijk_00008_00002_00002' order represents '0' with '-1298'
c Encoding variable: uijk_00008_00002_00003 with domain: bool (representing constraint )
c Var 'uijk_00008_00002_00003' direct represents '0' with '-1299'
c Var 'uijk_00008_00002_00003' direct represents '1' with '1299'
c Var 'uijk_00008_00002_00003' order represents '1' with '1'
c Var 'uijk_00008_00002_00003' order represents '0' with '-1299'
c Encoding variable: uijk_00008_00003_00001 with domain: bool (representing constraint )
c Var 'uijk_00008_00003_00001' direct represents '0' with '-1300'
c Var 'uijk_00008_00003_00001' direct represents '1' with '1300'
c Var 'uijk_00008_00003_00001' order represents '1' with '1'
c Var 'uijk_00008_00003_00001' order represents '0' with '-1300'
c Encoding variable: uijk_00008_00003_00002 with domain: bool (representing constraint )
c Var 'uijk_00008_00003_00002' direct represents '0' with '-1301'
c Var 'uijk_00008_00003_00002' direct represents '1' with '1301'
c Var 'uijk_00008_00003_00002' order represents '1' with '1'
c Var 'uijk_00008_00003_00002' order represents '0' with '-1301'
c Encoding variable: uijk_00008_00003_00003 with domain: bool (representing constraint )
c Var 'uijk_00008_00003_00003' direct represents '0' with '-1302'
c Var 'uijk_00008_00003_00003' direct represents '1' with '1302'
c Var 'uijk_00008_00003_00003' order represents '1' with '1'
c Var 'uijk_00008_00003_00003' order represents '0' with '-1302'
c Encoding variable: uijk_00008_00004_00001 with domain: bool (representing constraint )
c Var 'uijk_00008_00004_00001' direct represents '0' with '-1303'
c Var 'uijk_00008_00004_00001' direct represents '1' with '1303'
c Var 'uijk_00008_00004_00001' order represents '1' with '1'
c Var 'uijk_00008_00004_00001' order represents '0' with '-1303'
c Encoding variable: uijk_00008_00004_00002 with domain: bool (representing constraint )
c Var 'uijk_00008_00004_00002' direct represents '0' with '-1304'
c Var 'uijk_00008_00004_00002' direct represents '1' with '1304'
c Var 'uijk_00008_00004_00002' order represents '1' with '1'
c Var 'uijk_00008_00004_00002' order represents '0' with '-1304'
c Encoding variable: uijk_00008_00004_00003 with domain: bool (representing constraint )
c Var 'uijk_00008_00004_00003' direct represents '0' with '-1305'
c Var 'uijk_00008_00004_00003' direct represents '1' with '1305'
c Var 'uijk_00008_00004_00003' order represents '1' with '1'
c Var 'uijk_00008_00004_00003' order represents '0' with '-1305'
c Encoding variable: uijk_00008_00005_00001 with domain: bool (representing constraint )
c Var 'uijk_00008_00005_00001' direct represents '0' with '-1306'
c Var 'uijk_00008_00005_00001' direct represents '1' with '1306'
c Var 'uijk_00008_00005_00001' order represents '1' with '1'
c Var 'uijk_00008_00005_00001' order represents '0' with '-1306'
c Encoding variable: uijk_00008_00005_00002 with domain: bool (representing constraint )
c Var 'uijk_00008_00005_00002' direct represents '0' with '-1307'
c Var 'uijk_00008_00005_00002' direct represents '1' with '1307'
c Var 'uijk_00008_00005_00002' order represents '1' with '1'
c Var 'uijk_00008_00005_00002' order represents '0' with '-1307'
c Encoding variable: uijk_00008_00005_00003 with domain: bool (representing constraint )
c Var 'uijk_00008_00005_00003' direct represents '0' with '-1308'
c Var 'uijk_00008_00005_00003' direct represents '1' with '1308'
c Var 'uijk_00008_00005_00003' order represents '1' with '1'
c Var 'uijk_00008_00005_00003' order represents '0' with '-1308'
c Encoding variable: uijk_00008_00006_00001 with domain: bool (representing constraint )
c Var 'uijk_00008_00006_00001' direct represents '0' with '-1309'
c Var 'uijk_00008_00006_00001' direct represents '1' with '1309'
c Var 'uijk_00008_00006_00001' order represents '1' with '1'
c Var 'uijk_00008_00006_00001' order represents '0' with '-1309'
c Encoding variable: uijk_00008_00006_00002 with domain: bool (representing constraint )
c Var 'uijk_00008_00006_00002' direct represents '0' with '-1310'
c Var 'uijk_00008_00006_00002' direct represents '1' with '1310'
c Var 'uijk_00008_00006_00002' order represents '1' with '1'
c Var 'uijk_00008_00006_00002' order represents '0' with '-1310'
c Encoding variable: uijk_00008_00006_00003 with domain: bool (representing constraint )
c Var 'uijk_00008_00006_00003' direct represents '0' with '-1311'
c Var 'uijk_00008_00006_00003' direct represents '1' with '1311'
c Var 'uijk_00008_00006_00003' order represents '1' with '1'
c Var 'uijk_00008_00006_00003' order represents '0' with '-1311'
c Encoding variable: uijk_00008_00007_00001 with domain: bool (representing constraint )
c Var 'uijk_00008_00007_00001' direct represents '0' with '-1312'
c Var 'uijk_00008_00007_00001' direct represents '1' with '1312'
c Var 'uijk_00008_00007_00001' order represents '1' with '1'
c Var 'uijk_00008_00007_00001' order represents '0' with '-1312'
c Encoding variable: uijk_00008_00007_00002 with domain: bool (representing constraint )
c Var 'uijk_00008_00007_00002' direct represents '0' with '-1313'
c Var 'uijk_00008_00007_00002' direct represents '1' with '1313'
c Var 'uijk_00008_00007_00002' order represents '1' with '1'
c Var 'uijk_00008_00007_00002' order represents '0' with '-1313'
c Encoding variable: uijk_00008_00007_00003 with domain: bool (representing constraint )
c Var 'uijk_00008_00007_00003' direct represents '0' with '-1314'
c Var 'uijk_00008_00007_00003' direct represents '1' with '1314'
c Var 'uijk_00008_00007_00003' order represents '1' with '1'
c Var 'uijk_00008_00007_00003' order represents '0' with '-1314'
c Encoding variable: uijk_00008_00008_00001 with domain: bool (representing constraint )
c Var 'uijk_00008_00008_00001' direct represents '0' with '-1315'
c Var 'uijk_00008_00008_00001' direct represents '1' with '1315'
c Var 'uijk_00008_00008_00001' order represents '1' with '1'
c Var 'uijk_00008_00008_00001' order represents '0' with '-1315'
c Encoding variable: uijk_00008_00008_00002 with domain: bool (representing constraint )
c Var 'uijk_00008_00008_00002' direct represents '0' with '-1316'
c Var 'uijk_00008_00008_00002' direct represents '1' with '1316'
c Var 'uijk_00008_00008_00002' order represents '1' with '1'
c Var 'uijk_00008_00008_00002' order represents '0' with '-1316'
c Encoding variable: uijk_00008_00008_00003 with domain: bool (representing constraint )
c Var 'uijk_00008_00008_00003' direct represents '0' with '-1317'
c Var 'uijk_00008_00008_00003' direct represents '1' with '1317'
c Var 'uijk_00008_00008_00003' order represents '1' with '1'
c Var 'uijk_00008_00008_00003' order represents '0' with '-1317'
c Encoding variable: num_occupied_by_types_00000 with domain: int(0..64) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00000' order represents '0' with '1318'
c Var 'num_occupied_by_types_00000' direct represents '0' with '1318'
c Var 'num_occupied_by_types_00000' order represents '1' with '1319'
-1318 1319 0
c Var 'num_occupied_by_types_00000' direct represents '1' with '1320'
1318 -1319 1320 0
-1320 1319 0
-1320 -1318 0
c Var 'num_occupied_by_types_00000' order represents '2' with '1321'
-1319 1321 0
c Var 'num_occupied_by_types_00000' direct represents '2' with '1322'
1319 -1321 1322 0
-1322 1321 0
-1322 -1319 0
c Var 'num_occupied_by_types_00000' order represents '3' with '1323'
-1321 1323 0
c Var 'num_occupied_by_types_00000' direct represents '3' with '1324'
1321 -1323 1324 0
-1324 1323 0
-1324 -1321 0
c Var 'num_occupied_by_types_00000' order represents '4' with '1325'
-1323 1325 0
c Var 'num_occupied_by_types_00000' direct represents '4' with '1326'
1323 -1325 1326 0
-1326 1325 0
-1326 -1323 0
c Var 'num_occupied_by_types_00000' order represents '5' with '1327'
-1325 1327 0
c Var 'num_occupied_by_types_00000' direct represents '5' with '1328'
1325 -1327 1328 0
-1328 1327 0
-1328 -1325 0
c Var 'num_occupied_by_types_00000' order represents '6' with '1329'
-1327 1329 0
c Var 'num_occupied_by_types_00000' direct represents '6' with '1330'
1327 -1329 1330 0
-1330 1329 0
-1330 -1327 0
c Var 'num_occupied_by_types_00000' order represents '7' with '1331'
-1329 1331 0
c Var 'num_occupied_by_types_00000' direct represents '7' with '1332'
1329 -1331 1332 0
-1332 1331 0
-1332 -1329 0
c Var 'num_occupied_by_types_00000' order represents '8' with '1333'
-1331 1333 0
c Var 'num_occupied_by_types_00000' direct represents '8' with '1334'
1331 -1333 1334 0
-1334 1333 0
-1334 -1331 0
c Var 'num_occupied_by_types_00000' order represents '9' with '1335'
-1333 1335 0
c Var 'num_occupied_by_types_00000' direct represents '9' with '1336'
1333 -1335 1336 0
-1336 1335 0
-1336 -1333 0
c Var 'num_occupied_by_types_00000' order represents '10' with '1337'
-1335 1337 0
c Var 'num_occupied_by_types_00000' direct represents '10' with '1338'
1335 -1337 1338 0
-1338 1337 0
-1338 -1335 0
c Var 'num_occupied_by_types_00000' order represents '11' with '1339'
-1337 1339 0
c Var 'num_occupied_by_types_00000' direct represents '11' with '1340'
1337 -1339 1340 0
-1340 1339 0
-1340 -1337 0
c Var 'num_occupied_by_types_00000' order represents '12' with '1341'
-1339 1341 0
c Var 'num_occupied_by_types_00000' direct represents '12' with '1342'
1339 -1341 1342 0
-1342 1341 0
-1342 -1339 0
c Var 'num_occupied_by_types_00000' order represents '13' with '1343'
-1341 1343 0
c Var 'num_occupied_by_types_00000' direct represents '13' with '1344'
1341 -1343 1344 0
-1344 1343 0
-1344 -1341 0
c Var 'num_occupied_by_types_00000' order represents '14' with '1345'
-1343 1345 0
c Var 'num_occupied_by_types_00000' direct represents '14' with '1346'
1343 -1345 1346 0
-1346 1345 0
-1346 -1343 0
c Var 'num_occupied_by_types_00000' order represents '15' with '1347'
-1345 1347 0
c Var 'num_occupied_by_types_00000' direct represents '15' with '1348'
1345 -1347 1348 0
-1348 1347 0
-1348 -1345 0
c Var 'num_occupied_by_types_00000' order represents '16' with '1349'
-1347 1349 0
c Var 'num_occupied_by_types_00000' direct represents '16' with '1350'
1347 -1349 1350 0
-1350 1349 0
-1350 -1347 0
c Var 'num_occupied_by_types_00000' order represents '17' with '1351'
-1349 1351 0
c Var 'num_occupied_by_types_00000' direct represents '17' with '1352'
1349 -1351 1352 0
-1352 1351 0
-1352 -1349 0
c Var 'num_occupied_by_types_00000' order represents '18' with '1353'
-1351 1353 0
c Var 'num_occupied_by_types_00000' direct represents '18' with '1354'
1351 -1353 1354 0
-1354 1353 0
-1354 -1351 0
c Var 'num_occupied_by_types_00000' order represents '19' with '1355'
-1353 1355 0
c Var 'num_occupied_by_types_00000' direct represents '19' with '1356'
1353 -1355 1356 0
-1356 1355 0
-1356 -1353 0
c Var 'num_occupied_by_types_00000' order represents '20' with '1357'
-1355 1357 0
c Var 'num_occupied_by_types_00000' direct represents '20' with '1358'
1355 -1357 1358 0
-1358 1357 0
-1358 -1355 0
c Var 'num_occupied_by_types_00000' order represents '21' with '1359'
-1357 1359 0
c Var 'num_occupied_by_types_00000' direct represents '21' with '1360'
1357 -1359 1360 0
-1360 1359 0
-1360 -1357 0
c Var 'num_occupied_by_types_00000' order represents '22' with '1361'
-1359 1361 0
c Var 'num_occupied_by_types_00000' direct represents '22' with '1362'
1359 -1361 1362 0
-1362 1361 0
-1362 -1359 0
c Var 'num_occupied_by_types_00000' order represents '23' with '1363'
-1361 1363 0
c Var 'num_occupied_by_types_00000' direct represents '23' with '1364'
1361 -1363 1364 0
-1364 1363 0
-1364 -1361 0
c Var 'num_occupied_by_types_00000' order represents '24' with '1365'
-1363 1365 0
c Var 'num_occupied_by_types_00000' direct represents '24' with '1366'
1363 -1365 1366 0
-1366 1365 0
-1366 -1363 0
c Var 'num_occupied_by_types_00000' order represents '25' with '1367'
-1365 1367 0
c Var 'num_occupied_by_types_00000' direct represents '25' with '1368'
1365 -1367 1368 0
-1368 1367 0
-1368 -1365 0
c Var 'num_occupied_by_types_00000' order represents '26' with '1369'
-1367 1369 0
c Var 'num_occupied_by_types_00000' direct represents '26' with '1370'
1367 -1369 1370 0
-1370 1369 0
-1370 -1367 0
c Var 'num_occupied_by_types_00000' order represents '27' with '1371'
-1369 1371 0
c Var 'num_occupied_by_types_00000' direct represents '27' with '1372'
1369 -1371 1372 0
-1372 1371 0
-1372 -1369 0
c Var 'num_occupied_by_types_00000' order represents '28' with '1373'
-1371 1373 0
c Var 'num_occupied_by_types_00000' direct represents '28' with '1374'
1371 -1373 1374 0
-1374 1373 0
-1374 -1371 0
c Var 'num_occupied_by_types_00000' order represents '29' with '1375'
-1373 1375 0
c Var 'num_occupied_by_types_00000' direct represents '29' with '1376'
1373 -1375 1376 0
-1376 1375 0
-1376 -1373 0
c Var 'num_occupied_by_types_00000' order represents '30' with '1377'
-1375 1377 0
c Var 'num_occupied_by_types_00000' direct represents '30' with '1378'
1375 -1377 1378 0
-1378 1377 0
-1378 -1375 0
c Var 'num_occupied_by_types_00000' order represents '31' with '1379'
-1377 1379 0
c Var 'num_occupied_by_types_00000' direct represents '31' with '1380'
1377 -1379 1380 0
-1380 1379 0
-1380 -1377 0
c Var 'num_occupied_by_types_00000' order represents '32' with '1381'
-1379 1381 0
c Var 'num_occupied_by_types_00000' direct represents '32' with '1382'
1379 -1381 1382 0
-1382 1381 0
-1382 -1379 0
c Var 'num_occupied_by_types_00000' order represents '33' with '1383'
-1381 1383 0
c Var 'num_occupied_by_types_00000' direct represents '33' with '1384'
1381 -1383 1384 0
-1384 1383 0
-1384 -1381 0
c Var 'num_occupied_by_types_00000' order represents '34' with '1385'
-1383 1385 0
c Var 'num_occupied_by_types_00000' direct represents '34' with '1386'
1383 -1385 1386 0
-1386 1385 0
-1386 -1383 0
c Var 'num_occupied_by_types_00000' order represents '35' with '1387'
-1385 1387 0
c Var 'num_occupied_by_types_00000' direct represents '35' with '1388'
1385 -1387 1388 0
-1388 1387 0
-1388 -1385 0
c Var 'num_occupied_by_types_00000' order represents '36' with '1389'
-1387 1389 0
c Var 'num_occupied_by_types_00000' direct represents '36' with '1390'
1387 -1389 1390 0
-1390 1389 0
-1390 -1387 0
c Var 'num_occupied_by_types_00000' order represents '37' with '1391'
-1389 1391 0
c Var 'num_occupied_by_types_00000' direct represents '37' with '1392'
1389 -1391 1392 0
-1392 1391 0
-1392 -1389 0
c Var 'num_occupied_by_types_00000' order represents '38' with '1393'
-1391 1393 0
c Var 'num_occupied_by_types_00000' direct represents '38' with '1394'
1391 -1393 1394 0
-1394 1393 0
-1394 -1391 0
c Var 'num_occupied_by_types_00000' order represents '39' with '1395'
-1393 1395 0
c Var 'num_occupied_by_types_00000' direct represents '39' with '1396'
1393 -1395 1396 0
-1396 1395 0
-1396 -1393 0
c Var 'num_occupied_by_types_00000' order represents '40' with '1397'
-1395 1397 0
c Var 'num_occupied_by_types_00000' direct represents '40' with '1398'
1395 -1397 1398 0
-1398 1397 0
-1398 -1395 0
c Var 'num_occupied_by_types_00000' order represents '41' with '1399'
-1397 1399 0
c Var 'num_occupied_by_types_00000' direct represents '41' with '1400'
1397 -1399 1400 0
-1400 1399 0
-1400 -1397 0
c Var 'num_occupied_by_types_00000' order represents '42' with '1401'
-1399 1401 0
c Var 'num_occupied_by_types_00000' direct represents '42' with '1402'
1399 -1401 1402 0
-1402 1401 0
-1402 -1399 0
c Var 'num_occupied_by_types_00000' order represents '43' with '1403'
-1401 1403 0
c Var 'num_occupied_by_types_00000' direct represents '43' with '1404'
1401 -1403 1404 0
-1404 1403 0
-1404 -1401 0
c Var 'num_occupied_by_types_00000' order represents '44' with '1405'
-1403 1405 0
c Var 'num_occupied_by_types_00000' direct represents '44' with '1406'
1403 -1405 1406 0
-1406 1405 0
-1406 -1403 0
c Var 'num_occupied_by_types_00000' order represents '45' with '1407'
-1405 1407 0
c Var 'num_occupied_by_types_00000' direct represents '45' with '1408'
1405 -1407 1408 0
-1408 1407 0
-1408 -1405 0
c Var 'num_occupied_by_types_00000' order represents '46' with '1409'
-1407 1409 0
c Var 'num_occupied_by_types_00000' direct represents '46' with '1410'
1407 -1409 1410 0
-1410 1409 0
-1410 -1407 0
c Var 'num_occupied_by_types_00000' order represents '47' with '1411'
-1409 1411 0
c Var 'num_occupied_by_types_00000' direct represents '47' with '1412'
1409 -1411 1412 0
-1412 1411 0
-1412 -1409 0
c Var 'num_occupied_by_types_00000' order represents '48' with '1413'
-1411 1413 0
c Var 'num_occupied_by_types_00000' direct represents '48' with '1414'
1411 -1413 1414 0
-1414 1413 0
-1414 -1411 0
c Var 'num_occupied_by_types_00000' order represents '49' with '1415'
-1413 1415 0
c Var 'num_occupied_by_types_00000' direct represents '49' with '1416'
1413 -1415 1416 0
-1416 1415 0
-1416 -1413 0
c Var 'num_occupied_by_types_00000' order represents '50' with '1417'
-1415 1417 0
c Var 'num_occupied_by_types_00000' direct represents '50' with '1418'
1415 -1417 1418 0
-1418 1417 0
-1418 -1415 0
c Var 'num_occupied_by_types_00000' order represents '51' with '1419'
-1417 1419 0
c Var 'num_occupied_by_types_00000' direct represents '51' with '1420'
1417 -1419 1420 0
-1420 1419 0
-1420 -1417 0
c Var 'num_occupied_by_types_00000' order represents '52' with '1421'
-1419 1421 0
c Var 'num_occupied_by_types_00000' direct represents '52' with '1422'
1419 -1421 1422 0
-1422 1421 0
-1422 -1419 0
c Var 'num_occupied_by_types_00000' order represents '53' with '1423'
-1421 1423 0
c Var 'num_occupied_by_types_00000' direct represents '53' with '1424'
1421 -1423 1424 0
-1424 1423 0
-1424 -1421 0
c Var 'num_occupied_by_types_00000' order represents '54' with '1425'
-1423 1425 0
c Var 'num_occupied_by_types_00000' direct represents '54' with '1426'
1423 -1425 1426 0
-1426 1425 0
-1426 -1423 0
c Var 'num_occupied_by_types_00000' order represents '55' with '1427'
-1425 1427 0
c Var 'num_occupied_by_types_00000' direct represents '55' with '1428'
1425 -1427 1428 0
-1428 1427 0
-1428 -1425 0
c Var 'num_occupied_by_types_00000' order represents '56' with '1429'
-1427 1429 0
c Var 'num_occupied_by_types_00000' direct represents '56' with '1430'
1427 -1429 1430 0
-1430 1429 0
-1430 -1427 0
c Var 'num_occupied_by_types_00000' order represents '57' with '1431'
-1429 1431 0
c Var 'num_occupied_by_types_00000' direct represents '57' with '1432'
1429 -1431 1432 0
-1432 1431 0
-1432 -1429 0
c Var 'num_occupied_by_types_00000' order represents '58' with '1433'
-1431 1433 0
c Var 'num_occupied_by_types_00000' direct represents '58' with '1434'
1431 -1433 1434 0
-1434 1433 0
-1434 -1431 0
c Var 'num_occupied_by_types_00000' order represents '59' with '1435'
-1433 1435 0
c Var 'num_occupied_by_types_00000' direct represents '59' with '1436'
1433 -1435 1436 0
-1436 1435 0
-1436 -1433 0
c Var 'num_occupied_by_types_00000' order represents '60' with '1437'
-1435 1437 0
c Var 'num_occupied_by_types_00000' direct represents '60' with '1438'
1435 -1437 1438 0
-1438 1437 0
-1438 -1435 0
c Var 'num_occupied_by_types_00000' order represents '61' with '1439'
-1437 1439 0
c Var 'num_occupied_by_types_00000' direct represents '61' with '1440'
1437 -1439 1440 0
-1440 1439 0
-1440 -1437 0
c Var 'num_occupied_by_types_00000' order represents '62' with '1441'
-1439 1441 0
c Var 'num_occupied_by_types_00000' direct represents '62' with '1442'
1439 -1441 1442 0
-1442 1441 0
-1442 -1439 0
c Var 'num_occupied_by_types_00000' order represents '63' with '1443'
-1441 1443 0
c Var 'num_occupied_by_types_00000' direct represents '63' with '1444'
1441 -1443 1444 0
-1444 1443 0
-1444 -1441 0
c Var 'num_occupied_by_types_00000' direct represents '64' with '-1443'
1318 1320 1322 1324 1326 1328 1330 1332 1334 1336 1338 1340 1342 1344 1346 1348 1350 1352 1354 1356 1358 1360 1362 1364 1366 1368 1370 1372 1374 1376 1378 1380 1382 1384 1386 1388 1390 1392 1394 1396 1398 1400 1402 1404 1406 1408 1410 1412 1414 1416 1418 1420 1422 1424 1426 1428 1430 1432 1434 1436 1438 1440 1442 1444 -1443 0
c Encoding variable: num_occupied_by_types_00001 with domain: int(0..64) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00001' order represents '0' with '1445'
c Var 'num_occupied_by_types_00001' direct represents '0' with '1445'
c Var 'num_occupied_by_types_00001' order represents '1' with '1446'
-1445 1446 0
c Var 'num_occupied_by_types_00001' direct represents '1' with '1447'
1445 -1446 1447 0
-1447 1446 0
-1447 -1445 0
c Var 'num_occupied_by_types_00001' order represents '2' with '1448'
-1446 1448 0
c Var 'num_occupied_by_types_00001' direct represents '2' with '1449'
1446 -1448 1449 0
-1449 1448 0
-1449 -1446 0
c Var 'num_occupied_by_types_00001' order represents '3' with '1450'
-1448 1450 0
c Var 'num_occupied_by_types_00001' direct represents '3' with '1451'
1448 -1450 1451 0
-1451 1450 0
-1451 -1448 0
c Var 'num_occupied_by_types_00001' order represents '4' with '1452'
-1450 1452 0
c Var 'num_occupied_by_types_00001' direct represents '4' with '1453'
1450 -1452 1453 0
-1453 1452 0
-1453 -1450 0
c Var 'num_occupied_by_types_00001' order represents '5' with '1454'
-1452 1454 0
c Var 'num_occupied_by_types_00001' direct represents '5' with '1455'
1452 -1454 1455 0
-1455 1454 0
-1455 -1452 0
c Var 'num_occupied_by_types_00001' order represents '6' with '1456'
-1454 1456 0
c Var 'num_occupied_by_types_00001' direct represents '6' with '1457'
1454 -1456 1457 0
-1457 1456 0
-1457 -1454 0
c Var 'num_occupied_by_types_00001' order represents '7' with '1458'
-1456 1458 0
c Var 'num_occupied_by_types_00001' direct represents '7' with '1459'
1456 -1458 1459 0
-1459 1458 0
-1459 -1456 0
c Var 'num_occupied_by_types_00001' order represents '8' with '1460'
-1458 1460 0
c Var 'num_occupied_by_types_00001' direct represents '8' with '1461'
1458 -1460 1461 0
-1461 1460 0
-1461 -1458 0
c Var 'num_occupied_by_types_00001' order represents '9' with '1462'
-1460 1462 0
c Var 'num_occupied_by_types_00001' direct represents '9' with '1463'
1460 -1462 1463 0
-1463 1462 0
-1463 -1460 0
c Var 'num_occupied_by_types_00001' order represents '10' with '1464'
-1462 1464 0
c Var 'num_occupied_by_types_00001' direct represents '10' with '1465'
1462 -1464 1465 0
-1465 1464 0
-1465 -1462 0
c Var 'num_occupied_by_types_00001' order represents '11' with '1466'
-1464 1466 0
c Var 'num_occupied_by_types_00001' direct represents '11' with '1467'
1464 -1466 1467 0
-1467 1466 0
-1467 -1464 0
c Var 'num_occupied_by_types_00001' order represents '12' with '1468'
-1466 1468 0
c Var 'num_occupied_by_types_00001' direct represents '12' with '1469'
1466 -1468 1469 0
-1469 1468 0
-1469 -1466 0
c Var 'num_occupied_by_types_00001' order represents '13' with '1470'
-1468 1470 0
c Var 'num_occupied_by_types_00001' direct represents '13' with '1471'
1468 -1470 1471 0
-1471 1470 0
-1471 -1468 0
c Var 'num_occupied_by_types_00001' order represents '14' with '1472'
-1470 1472 0
c Var 'num_occupied_by_types_00001' direct represents '14' with '1473'
1470 -1472 1473 0
-1473 1472 0
-1473 -1470 0
c Var 'num_occupied_by_types_00001' order represents '15' with '1474'
-1472 1474 0
c Var 'num_occupied_by_types_00001' direct represents '15' with '1475'
1472 -1474 1475 0
-1475 1474 0
-1475 -1472 0
c Var 'num_occupied_by_types_00001' order represents '16' with '1476'
-1474 1476 0
c Var 'num_occupied_by_types_00001' direct represents '16' with '1477'
1474 -1476 1477 0
-1477 1476 0
-1477 -1474 0
c Var 'num_occupied_by_types_00001' order represents '17' with '1478'
-1476 1478 0
c Var 'num_occupied_by_types_00001' direct represents '17' with '1479'
1476 -1478 1479 0
-1479 1478 0
-1479 -1476 0
c Var 'num_occupied_by_types_00001' order represents '18' with '1480'
-1478 1480 0
c Var 'num_occupied_by_types_00001' direct represents '18' with '1481'
1478 -1480 1481 0
-1481 1480 0
-1481 -1478 0
c Var 'num_occupied_by_types_00001' order represents '19' with '1482'
-1480 1482 0
c Var 'num_occupied_by_types_00001' direct represents '19' with '1483'
1480 -1482 1483 0
-1483 1482 0
-1483 -1480 0
c Var 'num_occupied_by_types_00001' order represents '20' with '1484'
-1482 1484 0
c Var 'num_occupied_by_types_00001' direct represents '20' with '1485'
1482 -1484 1485 0
-1485 1484 0
-1485 -1482 0
c Var 'num_occupied_by_types_00001' order represents '21' with '1486'
-1484 1486 0
c Var 'num_occupied_by_types_00001' direct represents '21' with '1487'
1484 -1486 1487 0
-1487 1486 0
-1487 -1484 0
c Var 'num_occupied_by_types_00001' order represents '22' with '1488'
-1486 1488 0
c Var 'num_occupied_by_types_00001' direct represents '22' with '1489'
1486 -1488 1489 0
-1489 1488 0
-1489 -1486 0
c Var 'num_occupied_by_types_00001' order represents '23' with '1490'
-1488 1490 0
c Var 'num_occupied_by_types_00001' direct represents '23' with '1491'
1488 -1490 1491 0
-1491 1490 0
-1491 -1488 0
c Var 'num_occupied_by_types_00001' order represents '24' with '1492'
-1490 1492 0
c Var 'num_occupied_by_types_00001' direct represents '24' with '1493'
1490 -1492 1493 0
-1493 1492 0
-1493 -1490 0
c Var 'num_occupied_by_types_00001' order represents '25' with '1494'
-1492 1494 0
c Var 'num_occupied_by_types_00001' direct represents '25' with '1495'
1492 -1494 1495 0
-1495 1494 0
-1495 -1492 0
c Var 'num_occupied_by_types_00001' order represents '26' with '1496'
-1494 1496 0
c Var 'num_occupied_by_types_00001' direct represents '26' with '1497'
1494 -1496 1497 0
-1497 1496 0
-1497 -1494 0
c Var 'num_occupied_by_types_00001' order represents '27' with '1498'
-1496 1498 0
c Var 'num_occupied_by_types_00001' direct represents '27' with '1499'
1496 -1498 1499 0
-1499 1498 0
-1499 -1496 0
c Var 'num_occupied_by_types_00001' order represents '28' with '1500'
-1498 1500 0
c Var 'num_occupied_by_types_00001' direct represents '28' with '1501'
1498 -1500 1501 0
-1501 1500 0
-1501 -1498 0
c Var 'num_occupied_by_types_00001' order represents '29' with '1502'
-1500 1502 0
c Var 'num_occupied_by_types_00001' direct represents '29' with '1503'
1500 -1502 1503 0
-1503 1502 0
-1503 -1500 0
c Var 'num_occupied_by_types_00001' order represents '30' with '1504'
-1502 1504 0
c Var 'num_occupied_by_types_00001' direct represents '30' with '1505'
1502 -1504 1505 0
-1505 1504 0
-1505 -1502 0
c Var 'num_occupied_by_types_00001' order represents '31' with '1506'
-1504 1506 0
c Var 'num_occupied_by_types_00001' direct represents '31' with '1507'
1504 -1506 1507 0
-1507 1506 0
-1507 -1504 0
c Var 'num_occupied_by_types_00001' order represents '32' with '1508'
-1506 1508 0
c Var 'num_occupied_by_types_00001' direct represents '32' with '1509'
1506 -1508 1509 0
-1509 1508 0
-1509 -1506 0
c Var 'num_occupied_by_types_00001' order represents '33' with '1510'
-1508 1510 0
c Var 'num_occupied_by_types_00001' direct represents '33' with '1511'
1508 -1510 1511 0
-1511 1510 0
-1511 -1508 0
c Var 'num_occupied_by_types_00001' order represents '34' with '1512'
-1510 1512 0
c Var 'num_occupied_by_types_00001' direct represents '34' with '1513'
1510 -1512 1513 0
-1513 1512 0
-1513 -1510 0
c Var 'num_occupied_by_types_00001' order represents '35' with '1514'
-1512 1514 0
c Var 'num_occupied_by_types_00001' direct represents '35' with '1515'
1512 -1514 1515 0
-1515 1514 0
-1515 -1512 0
c Var 'num_occupied_by_types_00001' order represents '36' with '1516'
-1514 1516 0
c Var 'num_occupied_by_types_00001' direct represents '36' with '1517'
1514 -1516 1517 0
-1517 1516 0
-1517 -1514 0
c Var 'num_occupied_by_types_00001' order represents '37' with '1518'
-1516 1518 0
c Var 'num_occupied_by_types_00001' direct represents '37' with '1519'
1516 -1518 1519 0
-1519 1518 0
-1519 -1516 0
c Var 'num_occupied_by_types_00001' order represents '38' with '1520'
-1518 1520 0
c Var 'num_occupied_by_types_00001' direct represents '38' with '1521'
1518 -1520 1521 0
-1521 1520 0
-1521 -1518 0
c Var 'num_occupied_by_types_00001' order represents '39' with '1522'
-1520 1522 0
c Var 'num_occupied_by_types_00001' direct represents '39' with '1523'
1520 -1522 1523 0
-1523 1522 0
-1523 -1520 0
c Var 'num_occupied_by_types_00001' order represents '40' with '1524'
-1522 1524 0
c Var 'num_occupied_by_types_00001' direct represents '40' with '1525'
1522 -1524 1525 0
-1525 1524 0
-1525 -1522 0
c Var 'num_occupied_by_types_00001' order represents '41' with '1526'
-1524 1526 0
c Var 'num_occupied_by_types_00001' direct represents '41' with '1527'
1524 -1526 1527 0
-1527 1526 0
-1527 -1524 0
c Var 'num_occupied_by_types_00001' order represents '42' with '1528'
-1526 1528 0
c Var 'num_occupied_by_types_00001' direct represents '42' with '1529'
1526 -1528 1529 0
-1529 1528 0
-1529 -1526 0
c Var 'num_occupied_by_types_00001' order represents '43' with '1530'
-1528 1530 0
c Var 'num_occupied_by_types_00001' direct represents '43' with '1531'
1528 -1530 1531 0
-1531 1530 0
-1531 -1528 0
c Var 'num_occupied_by_types_00001' order represents '44' with '1532'
-1530 1532 0
c Var 'num_occupied_by_types_00001' direct represents '44' with '1533'
1530 -1532 1533 0
-1533 1532 0
-1533 -1530 0
c Var 'num_occupied_by_types_00001' order represents '45' with '1534'
-1532 1534 0
c Var 'num_occupied_by_types_00001' direct represents '45' with '1535'
1532 -1534 1535 0
-1535 1534 0
-1535 -1532 0
c Var 'num_occupied_by_types_00001' order represents '46' with '1536'
-1534 1536 0
c Var 'num_occupied_by_types_00001' direct represents '46' with '1537'
1534 -1536 1537 0
-1537 1536 0
-1537 -1534 0
c Var 'num_occupied_by_types_00001' order represents '47' with '1538'
-1536 1538 0
c Var 'num_occupied_by_types_00001' direct represents '47' with '1539'
1536 -1538 1539 0
-1539 1538 0
-1539 -1536 0
c Var 'num_occupied_by_types_00001' order represents '48' with '1540'
-1538 1540 0
c Var 'num_occupied_by_types_00001' direct represents '48' with '1541'
1538 -1540 1541 0
-1541 1540 0
-1541 -1538 0
c Var 'num_occupied_by_types_00001' order represents '49' with '1542'
-1540 1542 0
c Var 'num_occupied_by_types_00001' direct represents '49' with '1543'
1540 -1542 1543 0
-1543 1542 0
-1543 -1540 0
c Var 'num_occupied_by_types_00001' order represents '50' with '1544'
-1542 1544 0
c Var 'num_occupied_by_types_00001' direct represents '50' with '1545'
1542 -1544 1545 0
-1545 1544 0
-1545 -1542 0
c Var 'num_occupied_by_types_00001' order represents '51' with '1546'
-1544 1546 0
c Var 'num_occupied_by_types_00001' direct represents '51' with '1547'
1544 -1546 1547 0
-1547 1546 0
-1547 -1544 0
c Var 'num_occupied_by_types_00001' order represents '52' with '1548'
-1546 1548 0
c Var 'num_occupied_by_types_00001' direct represents '52' with '1549'
1546 -1548 1549 0
-1549 1548 0
-1549 -1546 0
c Var 'num_occupied_by_types_00001' order represents '53' with '1550'
-1548 1550 0
c Var 'num_occupied_by_types_00001' direct represents '53' with '1551'
1548 -1550 1551 0
-1551 1550 0
-1551 -1548 0
c Var 'num_occupied_by_types_00001' order represents '54' with '1552'
-1550 1552 0
c Var 'num_occupied_by_types_00001' direct represents '54' with '1553'
1550 -1552 1553 0
-1553 1552 0
-1553 -1550 0
c Var 'num_occupied_by_types_00001' order represents '55' with '1554'
-1552 1554 0
c Var 'num_occupied_by_types_00001' direct represents '55' with '1555'
1552 -1554 1555 0
-1555 1554 0
-1555 -1552 0
c Var 'num_occupied_by_types_00001' order represents '56' with '1556'
-1554 1556 0
c Var 'num_occupied_by_types_00001' direct represents '56' with '1557'
1554 -1556 1557 0
-1557 1556 0
-1557 -1554 0
c Var 'num_occupied_by_types_00001' order represents '57' with '1558'
-1556 1558 0
c Var 'num_occupied_by_types_00001' direct represents '57' with '1559'
1556 -1558 1559 0
-1559 1558 0
-1559 -1556 0
c Var 'num_occupied_by_types_00001' order represents '58' with '1560'
-1558 1560 0
c Var 'num_occupied_by_types_00001' direct represents '58' with '1561'
1558 -1560 1561 0
-1561 1560 0
-1561 -1558 0
c Var 'num_occupied_by_types_00001' order represents '59' with '1562'
-1560 1562 0
c Var 'num_occupied_by_types_00001' direct represents '59' with '1563'
1560 -1562 1563 0
-1563 1562 0
-1563 -1560 0
c Var 'num_occupied_by_types_00001' order represents '60' with '1564'
-1562 1564 0
c Var 'num_occupied_by_types_00001' direct represents '60' with '1565'
1562 -1564 1565 0
-1565 1564 0
-1565 -1562 0
c Var 'num_occupied_by_types_00001' order represents '61' with '1566'
-1564 1566 0
c Var 'num_occupied_by_types_00001' direct represents '61' with '1567'
1564 -1566 1567 0
-1567 1566 0
-1567 -1564 0
c Var 'num_occupied_by_types_00001' order represents '62' with '1568'
-1566 1568 0
c Var 'num_occupied_by_types_00001' direct represents '62' with '1569'
1566 -1568 1569 0
-1569 1568 0
-1569 -1566 0
c Var 'num_occupied_by_types_00001' order represents '63' with '1570'
-1568 1570 0
c Var 'num_occupied_by_types_00001' direct represents '63' with '1571'
1568 -1570 1571 0
-1571 1570 0
-1571 -1568 0
c Var 'num_occupied_by_types_00001' direct represents '64' with '-1570'
1445 1447 1449 1451 1453 1455 1457 1459 1461 1463 1465 1467 1469 1471 1473 1475 1477 1479 1481 1483 1485 1487 1489 1491 1493 1495 1497 1499 1501 1503 1505 1507 1509 1511 1513 1515 1517 1519 1521 1523 1525 1527 1529 1531 1533 1535 1537 1539 1541 1543 1545 1547 1549 1551 1553 1555 1557 1559 1561 1563 1565 1567 1569 1571 -1570 0
c Encoding variable: num_occupied_by_types_00002 with domain: int(0..64) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00002' order represents '0' with '1572'
c Var 'num_occupied_by_types_00002' direct represents '0' with '1572'
c Var 'num_occupied_by_types_00002' order represents '1' with '1573'
-1572 1573 0
c Var 'num_occupied_by_types_00002' direct represents '1' with '1574'
1572 -1573 1574 0
-1574 1573 0
-1574 -1572 0
c Var 'num_occupied_by_types_00002' order represents '2' with '1575'
-1573 1575 0
c Var 'num_occupied_by_types_00002' direct represents '2' with '1576'
1573 -1575 1576 0
-1576 1575 0
-1576 -1573 0
c Var 'num_occupied_by_types_00002' order represents '3' with '1577'
-1575 1577 0
c Var 'num_occupied_by_types_00002' direct represents '3' with '1578'
1575 -1577 1578 0
-1578 1577 0
-1578 -1575 0
c Var 'num_occupied_by_types_00002' order represents '4' with '1579'
-1577 1579 0
c Var 'num_occupied_by_types_00002' direct represents '4' with '1580'
1577 -1579 1580 0
-1580 1579 0
-1580 -1577 0
c Var 'num_occupied_by_types_00002' order represents '5' with '1581'
-1579 1581 0
c Var 'num_occupied_by_types_00002' direct represents '5' with '1582'
1579 -1581 1582 0
-1582 1581 0
-1582 -1579 0
c Var 'num_occupied_by_types_00002' order represents '6' with '1583'
-1581 1583 0
c Var 'num_occupied_by_types_00002' direct represents '6' with '1584'
1581 -1583 1584 0
-1584 1583 0
-1584 -1581 0
c Var 'num_occupied_by_types_00002' order represents '7' with '1585'
-1583 1585 0
c Var 'num_occupied_by_types_00002' direct represents '7' with '1586'
1583 -1585 1586 0
-1586 1585 0
-1586 -1583 0
c Var 'num_occupied_by_types_00002' order represents '8' with '1587'
-1585 1587 0
c Var 'num_occupied_by_types_00002' direct represents '8' with '1588'
1585 -1587 1588 0
-1588 1587 0
-1588 -1585 0
c Var 'num_occupied_by_types_00002' order represents '9' with '1589'
-1587 1589 0
c Var 'num_occupied_by_types_00002' direct represents '9' with '1590'
1587 -1589 1590 0
-1590 1589 0
-1590 -1587 0
c Var 'num_occupied_by_types_00002' order represents '10' with '1591'
-1589 1591 0
c Var 'num_occupied_by_types_00002' direct represents '10' with '1592'
1589 -1591 1592 0
-1592 1591 0
-1592 -1589 0
c Var 'num_occupied_by_types_00002' order represents '11' with '1593'
-1591 1593 0
c Var 'num_occupied_by_types_00002' direct represents '11' with '1594'
1591 -1593 1594 0
-1594 1593 0
-1594 -1591 0
c Var 'num_occupied_by_types_00002' order represents '12' with '1595'
-1593 1595 0
c Var 'num_occupied_by_types_00002' direct represents '12' with '1596'
1593 -1595 1596 0
-1596 1595 0
-1596 -1593 0
c Var 'num_occupied_by_types_00002' order represents '13' with '1597'
-1595 1597 0
c Var 'num_occupied_by_types_00002' direct represents '13' with '1598'
1595 -1597 1598 0
-1598 1597 0
-1598 -1595 0
c Var 'num_occupied_by_types_00002' order represents '14' with '1599'
-1597 1599 0
c Var 'num_occupied_by_types_00002' direct represents '14' with '1600'
1597 -1599 1600 0
-1600 1599 0
-1600 -1597 0
c Var 'num_occupied_by_types_00002' order represents '15' with '1601'
-1599 1601 0
c Var 'num_occupied_by_types_00002' direct represents '15' with '1602'
1599 -1601 1602 0
-1602 1601 0
-1602 -1599 0
c Var 'num_occupied_by_types_00002' order represents '16' with '1603'
-1601 1603 0
c Var 'num_occupied_by_types_00002' direct represents '16' with '1604'
1601 -1603 1604 0
-1604 1603 0
-1604 -1601 0
c Var 'num_occupied_by_types_00002' order represents '17' with '1605'
-1603 1605 0
c Var 'num_occupied_by_types_00002' direct represents '17' with '1606'
1603 -1605 1606 0
-1606 1605 0
-1606 -1603 0
c Var 'num_occupied_by_types_00002' order represents '18' with '1607'
-1605 1607 0
c Var 'num_occupied_by_types_00002' direct represents '18' with '1608'
1605 -1607 1608 0
-1608 1607 0
-1608 -1605 0
c Var 'num_occupied_by_types_00002' order represents '19' with '1609'
-1607 1609 0
c Var 'num_occupied_by_types_00002' direct represents '19' with '1610'
1607 -1609 1610 0
-1610 1609 0
-1610 -1607 0
c Var 'num_occupied_by_types_00002' order represents '20' with '1611'
-1609 1611 0
c Var 'num_occupied_by_types_00002' direct represents '20' with '1612'
1609 -1611 1612 0
-1612 1611 0
-1612 -1609 0
c Var 'num_occupied_by_types_00002' order represents '21' with '1613'
-1611 1613 0
c Var 'num_occupied_by_types_00002' direct represents '21' with '1614'
1611 -1613 1614 0
-1614 1613 0
-1614 -1611 0
c Var 'num_occupied_by_types_00002' order represents '22' with '1615'
-1613 1615 0
c Var 'num_occupied_by_types_00002' direct represents '22' with '1616'
1613 -1615 1616 0
-1616 1615 0
-1616 -1613 0
c Var 'num_occupied_by_types_00002' order represents '23' with '1617'
-1615 1617 0
c Var 'num_occupied_by_types_00002' direct represents '23' with '1618'
1615 -1617 1618 0
-1618 1617 0
-1618 -1615 0
c Var 'num_occupied_by_types_00002' order represents '24' with '1619'
-1617 1619 0
c Var 'num_occupied_by_types_00002' direct represents '24' with '1620'
1617 -1619 1620 0
-1620 1619 0
-1620 -1617 0
c Var 'num_occupied_by_types_00002' order represents '25' with '1621'
-1619 1621 0
c Var 'num_occupied_by_types_00002' direct represents '25' with '1622'
1619 -1621 1622 0
-1622 1621 0
-1622 -1619 0
c Var 'num_occupied_by_types_00002' order represents '26' with '1623'
-1621 1623 0
c Var 'num_occupied_by_types_00002' direct represents '26' with '1624'
1621 -1623 1624 0
-1624 1623 0
-1624 -1621 0
c Var 'num_occupied_by_types_00002' order represents '27' with '1625'
-1623 1625 0
c Var 'num_occupied_by_types_00002' direct represents '27' with '1626'
1623 -1625 1626 0
-1626 1625 0
-1626 -1623 0
c Var 'num_occupied_by_types_00002' order represents '28' with '1627'
-1625 1627 0
c Var 'num_occupied_by_types_00002' direct represents '28' with '1628'
1625 -1627 1628 0
-1628 1627 0
-1628 -1625 0
c Var 'num_occupied_by_types_00002' order represents '29' with '1629'
-1627 1629 0
c Var 'num_occupied_by_types_00002' direct represents '29' with '1630'
1627 -1629 1630 0
-1630 1629 0
-1630 -1627 0
c Var 'num_occupied_by_types_00002' order represents '30' with '1631'
-1629 1631 0
c Var 'num_occupied_by_types_00002' direct represents '30' with '1632'
1629 -1631 1632 0
-1632 1631 0
-1632 -1629 0
c Var 'num_occupied_by_types_00002' order represents '31' with '1633'
-1631 1633 0
c Var 'num_occupied_by_types_00002' direct represents '31' with '1634'
1631 -1633 1634 0
-1634 1633 0
-1634 -1631 0
c Var 'num_occupied_by_types_00002' order represents '32' with '1635'
-1633 1635 0
c Var 'num_occupied_by_types_00002' direct represents '32' with '1636'
1633 -1635 1636 0
-1636 1635 0
-1636 -1633 0
c Var 'num_occupied_by_types_00002' order represents '33' with '1637'
-1635 1637 0
c Var 'num_occupied_by_types_00002' direct represents '33' with '1638'
1635 -1637 1638 0
-1638 1637 0
-1638 -1635 0
c Var 'num_occupied_by_types_00002' order represents '34' with '1639'
-1637 1639 0
c Var 'num_occupied_by_types_00002' direct represents '34' with '1640'
1637 -1639 1640 0
-1640 1639 0
-1640 -1637 0
c Var 'num_occupied_by_types_00002' order represents '35' with '1641'
-1639 1641 0
c Var 'num_occupied_by_types_00002' direct represents '35' with '1642'
1639 -1641 1642 0
-1642 1641 0
-1642 -1639 0
c Var 'num_occupied_by_types_00002' order represents '36' with '1643'
-1641 1643 0
c Var 'num_occupied_by_types_00002' direct represents '36' with '1644'
1641 -1643 1644 0
-1644 1643 0
-1644 -1641 0
c Var 'num_occupied_by_types_00002' order represents '37' with '1645'
-1643 1645 0
c Var 'num_occupied_by_types_00002' direct represents '37' with '1646'
1643 -1645 1646 0
-1646 1645 0
-1646 -1643 0
c Var 'num_occupied_by_types_00002' order represents '38' with '1647'
-1645 1647 0
c Var 'num_occupied_by_types_00002' direct represents '38' with '1648'
1645 -1647 1648 0
-1648 1647 0
-1648 -1645 0
c Var 'num_occupied_by_types_00002' order represents '39' with '1649'
-1647 1649 0
c Var 'num_occupied_by_types_00002' direct represents '39' with '1650'
1647 -1649 1650 0
-1650 1649 0
-1650 -1647 0
c Var 'num_occupied_by_types_00002' order represents '40' with '1651'
-1649 1651 0
c Var 'num_occupied_by_types_00002' direct represents '40' with '1652'
1649 -1651 1652 0
-1652 1651 0
-1652 -1649 0
c Var 'num_occupied_by_types_00002' order represents '41' with '1653'
-1651 1653 0
c Var 'num_occupied_by_types_00002' direct represents '41' with '1654'
1651 -1653 1654 0
-1654 1653 0
-1654 -1651 0
c Var 'num_occupied_by_types_00002' order represents '42' with '1655'
-1653 1655 0
c Var 'num_occupied_by_types_00002' direct represents '42' with '1656'
1653 -1655 1656 0
-1656 1655 0
-1656 -1653 0
c Var 'num_occupied_by_types_00002' order represents '43' with '1657'
-1655 1657 0
c Var 'num_occupied_by_types_00002' direct represents '43' with '1658'
1655 -1657 1658 0
-1658 1657 0
-1658 -1655 0
c Var 'num_occupied_by_types_00002' order represents '44' with '1659'
-1657 1659 0
c Var 'num_occupied_by_types_00002' direct represents '44' with '1660'
1657 -1659 1660 0
-1660 1659 0
-1660 -1657 0
c Var 'num_occupied_by_types_00002' order represents '45' with '1661'
-1659 1661 0
c Var 'num_occupied_by_types_00002' direct represents '45' with '1662'
1659 -1661 1662 0
-1662 1661 0
-1662 -1659 0
c Var 'num_occupied_by_types_00002' order represents '46' with '1663'
-1661 1663 0
c Var 'num_occupied_by_types_00002' direct represents '46' with '1664'
1661 -1663 1664 0
-1664 1663 0
-1664 -1661 0
c Var 'num_occupied_by_types_00002' order represents '47' with '1665'
-1663 1665 0
c Var 'num_occupied_by_types_00002' direct represents '47' with '1666'
1663 -1665 1666 0
-1666 1665 0
-1666 -1663 0
c Var 'num_occupied_by_types_00002' order represents '48' with '1667'
-1665 1667 0
c Var 'num_occupied_by_types_00002' direct represents '48' with '1668'
1665 -1667 1668 0
-1668 1667 0
-1668 -1665 0
c Var 'num_occupied_by_types_00002' order represents '49' with '1669'
-1667 1669 0
c Var 'num_occupied_by_types_00002' direct represents '49' with '1670'
1667 -1669 1670 0
-1670 1669 0
-1670 -1667 0
c Var 'num_occupied_by_types_00002' order represents '50' with '1671'
-1669 1671 0
c Var 'num_occupied_by_types_00002' direct represents '50' with '1672'
1669 -1671 1672 0
-1672 1671 0
-1672 -1669 0
c Var 'num_occupied_by_types_00002' order represents '51' with '1673'
-1671 1673 0
c Var 'num_occupied_by_types_00002' direct represents '51' with '1674'
1671 -1673 1674 0
-1674 1673 0
-1674 -1671 0
c Var 'num_occupied_by_types_00002' order represents '52' with '1675'
-1673 1675 0
c Var 'num_occupied_by_types_00002' direct represents '52' with '1676'
1673 -1675 1676 0
-1676 1675 0
-1676 -1673 0
c Var 'num_occupied_by_types_00002' order represents '53' with '1677'
-1675 1677 0
c Var 'num_occupied_by_types_00002' direct represents '53' with '1678'
1675 -1677 1678 0
-1678 1677 0
-1678 -1675 0
c Var 'num_occupied_by_types_00002' order represents '54' with '1679'
-1677 1679 0
c Var 'num_occupied_by_types_00002' direct represents '54' with '1680'
1677 -1679 1680 0
-1680 1679 0
-1680 -1677 0
c Var 'num_occupied_by_types_00002' order represents '55' with '1681'
-1679 1681 0
c Var 'num_occupied_by_types_00002' direct represents '55' with '1682'
1679 -1681 1682 0
-1682 1681 0
-1682 -1679 0
c Var 'num_occupied_by_types_00002' order represents '56' with '1683'
-1681 1683 0
c Var 'num_occupied_by_types_00002' direct represents '56' with '1684'
1681 -1683 1684 0
-1684 1683 0
-1684 -1681 0
c Var 'num_occupied_by_types_00002' order represents '57' with '1685'
-1683 1685 0
c Var 'num_occupied_by_types_00002' direct represents '57' with '1686'
1683 -1685 1686 0
-1686 1685 0
-1686 -1683 0
c Var 'num_occupied_by_types_00002' order represents '58' with '1687'
-1685 1687 0
c Var 'num_occupied_by_types_00002' direct represents '58' with '1688'
1685 -1687 1688 0
-1688 1687 0
-1688 -1685 0
c Var 'num_occupied_by_types_00002' order represents '59' with '1689'
-1687 1689 0
c Var 'num_occupied_by_types_00002' direct represents '59' with '1690'
1687 -1689 1690 0
-1690 1689 0
-1690 -1687 0
c Var 'num_occupied_by_types_00002' order represents '60' with '1691'
-1689 1691 0
c Var 'num_occupied_by_types_00002' direct represents '60' with '1692'
1689 -1691 1692 0
-1692 1691 0
-1692 -1689 0
c Var 'num_occupied_by_types_00002' order represents '61' with '1693'
-1691 1693 0
c Var 'num_occupied_by_types_00002' direct represents '61' with '1694'
1691 -1693 1694 0
-1694 1693 0
-1694 -1691 0
c Var 'num_occupied_by_types_00002' order represents '62' with '1695'
-1693 1695 0
c Var 'num_occupied_by_types_00002' direct represents '62' with '1696'
1693 -1695 1696 0
-1696 1695 0
-1696 -1693 0
c Var 'num_occupied_by_types_00002' order represents '63' with '1697'
-1695 1697 0
c Var 'num_occupied_by_types_00002' direct represents '63' with '1698'
1695 -1697 1698 0
-1698 1697 0
-1698 -1695 0
c Var 'num_occupied_by_types_00002' direct represents '64' with '-1697'
1572 1574 1576 1578 1580 1582 1584 1586 1588 1590 1592 1594 1596 1598 1600 1602 1604 1606 1608 1610 1612 1614 1616 1618 1620 1622 1624 1626 1628 1630 1632 1634 1636 1638 1640 1642 1644 1646 1648 1650 1652 1654 1656 1658 1660 1662 1664 1666 1668 1670 1672 1674 1676 1678 1680 1682 1684 1686 1688 1690 1692 1694 1696 1698 -1697 0
c Encoding variable: num_occupied_by_types_00003 with domain: int(0..64) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00003' order represents '0' with '1699'
c Var 'num_occupied_by_types_00003' direct represents '0' with '1699'
c Var 'num_occupied_by_types_00003' order represents '1' with '1700'
-1699 1700 0
c Var 'num_occupied_by_types_00003' direct represents '1' with '1701'
1699 -1700 1701 0
-1701 1700 0
-1701 -1699 0
c Var 'num_occupied_by_types_00003' order represents '2' with '1702'
-1700 1702 0
c Var 'num_occupied_by_types_00003' direct represents '2' with '1703'
1700 -1702 1703 0
-1703 1702 0
-1703 -1700 0
c Var 'num_occupied_by_types_00003' order represents '3' with '1704'
-1702 1704 0
c Var 'num_occupied_by_types_00003' direct represents '3' with '1705'
1702 -1704 1705 0
-1705 1704 0
-1705 -1702 0
c Var 'num_occupied_by_types_00003' order represents '4' with '1706'
-1704 1706 0
c Var 'num_occupied_by_types_00003' direct represents '4' with '1707'
1704 -1706 1707 0
-1707 1706 0
-1707 -1704 0
c Var 'num_occupied_by_types_00003' order represents '5' with '1708'
-1706 1708 0
c Var 'num_occupied_by_types_00003' direct represents '5' with '1709'
1706 -1708 1709 0
-1709 1708 0
-1709 -1706 0
c Var 'num_occupied_by_types_00003' order represents '6' with '1710'
-1708 1710 0
c Var 'num_occupied_by_types_00003' direct represents '6' with '1711'
1708 -1710 1711 0
-1711 1710 0
-1711 -1708 0
c Var 'num_occupied_by_types_00003' order represents '7' with '1712'
-1710 1712 0
c Var 'num_occupied_by_types_00003' direct represents '7' with '1713'
1710 -1712 1713 0
-1713 1712 0
-1713 -1710 0
c Var 'num_occupied_by_types_00003' order represents '8' with '1714'
-1712 1714 0
c Var 'num_occupied_by_types_00003' direct represents '8' with '1715'
1712 -1714 1715 0
-1715 1714 0
-1715 -1712 0
c Var 'num_occupied_by_types_00003' order represents '9' with '1716'
-1714 1716 0
c Var 'num_occupied_by_types_00003' direct represents '9' with '1717'
1714 -1716 1717 0
-1717 1716 0
-1717 -1714 0
c Var 'num_occupied_by_types_00003' order represents '10' with '1718'
-1716 1718 0
c Var 'num_occupied_by_types_00003' direct represents '10' with '1719'
1716 -1718 1719 0
-1719 1718 0
-1719 -1716 0
c Var 'num_occupied_by_types_00003' order represents '11' with '1720'
-1718 1720 0
c Var 'num_occupied_by_types_00003' direct represents '11' with '1721'
1718 -1720 1721 0
-1721 1720 0
-1721 -1718 0
c Var 'num_occupied_by_types_00003' order represents '12' with '1722'
-1720 1722 0
c Var 'num_occupied_by_types_00003' direct represents '12' with '1723'
1720 -1722 1723 0
-1723 1722 0
-1723 -1720 0
c Var 'num_occupied_by_types_00003' order represents '13' with '1724'
-1722 1724 0
c Var 'num_occupied_by_types_00003' direct represents '13' with '1725'
1722 -1724 1725 0
-1725 1724 0
-1725 -1722 0
c Var 'num_occupied_by_types_00003' order represents '14' with '1726'
-1724 1726 0
c Var 'num_occupied_by_types_00003' direct represents '14' with '1727'
1724 -1726 1727 0
-1727 1726 0
-1727 -1724 0
c Var 'num_occupied_by_types_00003' order represents '15' with '1728'
-1726 1728 0
c Var 'num_occupied_by_types_00003' direct represents '15' with '1729'
1726 -1728 1729 0
-1729 1728 0
-1729 -1726 0
c Var 'num_occupied_by_types_00003' order represents '16' with '1730'
-1728 1730 0
c Var 'num_occupied_by_types_00003' direct represents '16' with '1731'
1728 -1730 1731 0
-1731 1730 0
-1731 -1728 0
c Var 'num_occupied_by_types_00003' order represents '17' with '1732'
-1730 1732 0
c Var 'num_occupied_by_types_00003' direct represents '17' with '1733'
1730 -1732 1733 0
-1733 1732 0
-1733 -1730 0
c Var 'num_occupied_by_types_00003' order represents '18' with '1734'
-1732 1734 0
c Var 'num_occupied_by_types_00003' direct represents '18' with '1735'
1732 -1734 1735 0
-1735 1734 0
-1735 -1732 0
c Var 'num_occupied_by_types_00003' order represents '19' with '1736'
-1734 1736 0
c Var 'num_occupied_by_types_00003' direct represents '19' with '1737'
1734 -1736 1737 0
-1737 1736 0
-1737 -1734 0
c Var 'num_occupied_by_types_00003' order represents '20' with '1738'
-1736 1738 0
c Var 'num_occupied_by_types_00003' direct represents '20' with '1739'
1736 -1738 1739 0
-1739 1738 0
-1739 -1736 0
c Var 'num_occupied_by_types_00003' order represents '21' with '1740'
-1738 1740 0
c Var 'num_occupied_by_types_00003' direct represents '21' with '1741'
1738 -1740 1741 0
-1741 1740 0
-1741 -1738 0
c Var 'num_occupied_by_types_00003' order represents '22' with '1742'
-1740 1742 0
c Var 'num_occupied_by_types_00003' direct represents '22' with '1743'
1740 -1742 1743 0
-1743 1742 0
-1743 -1740 0
c Var 'num_occupied_by_types_00003' order represents '23' with '1744'
-1742 1744 0
c Var 'num_occupied_by_types_00003' direct represents '23' with '1745'
1742 -1744 1745 0
-1745 1744 0
-1745 -1742 0
c Var 'num_occupied_by_types_00003' order represents '24' with '1746'
-1744 1746 0
c Var 'num_occupied_by_types_00003' direct represents '24' with '1747'
1744 -1746 1747 0
-1747 1746 0
-1747 -1744 0
c Var 'num_occupied_by_types_00003' order represents '25' with '1748'
-1746 1748 0
c Var 'num_occupied_by_types_00003' direct represents '25' with '1749'
1746 -1748 1749 0
-1749 1748 0
-1749 -1746 0
c Var 'num_occupied_by_types_00003' order represents '26' with '1750'
-1748 1750 0
c Var 'num_occupied_by_types_00003' direct represents '26' with '1751'
1748 -1750 1751 0
-1751 1750 0
-1751 -1748 0
c Var 'num_occupied_by_types_00003' order represents '27' with '1752'
-1750 1752 0
c Var 'num_occupied_by_types_00003' direct represents '27' with '1753'
1750 -1752 1753 0
-1753 1752 0
-1753 -1750 0
c Var 'num_occupied_by_types_00003' order represents '28' with '1754'
-1752 1754 0
c Var 'num_occupied_by_types_00003' direct represents '28' with '1755'
1752 -1754 1755 0
-1755 1754 0
-1755 -1752 0
c Var 'num_occupied_by_types_00003' order represents '29' with '1756'
-1754 1756 0
c Var 'num_occupied_by_types_00003' direct represents '29' with '1757'
1754 -1756 1757 0
-1757 1756 0
-1757 -1754 0
c Var 'num_occupied_by_types_00003' order represents '30' with '1758'
-1756 1758 0
c Var 'num_occupied_by_types_00003' direct represents '30' with '1759'
1756 -1758 1759 0
-1759 1758 0
-1759 -1756 0
c Var 'num_occupied_by_types_00003' order represents '31' with '1760'
-1758 1760 0
c Var 'num_occupied_by_types_00003' direct represents '31' with '1761'
1758 -1760 1761 0
-1761 1760 0
-1761 -1758 0
c Var 'num_occupied_by_types_00003' order represents '32' with '1762'
-1760 1762 0
c Var 'num_occupied_by_types_00003' direct represents '32' with '1763'
1760 -1762 1763 0
-1763 1762 0
-1763 -1760 0
c Var 'num_occupied_by_types_00003' order represents '33' with '1764'
-1762 1764 0
c Var 'num_occupied_by_types_00003' direct represents '33' with '1765'
1762 -1764 1765 0
-1765 1764 0
-1765 -1762 0
c Var 'num_occupied_by_types_00003' order represents '34' with '1766'
-1764 1766 0
c Var 'num_occupied_by_types_00003' direct represents '34' with '1767'
1764 -1766 1767 0
-1767 1766 0
-1767 -1764 0
c Var 'num_occupied_by_types_00003' order represents '35' with '1768'
-1766 1768 0
c Var 'num_occupied_by_types_00003' direct represents '35' with '1769'
1766 -1768 1769 0
-1769 1768 0
-1769 -1766 0
c Var 'num_occupied_by_types_00003' order represents '36' with '1770'
-1768 1770 0
c Var 'num_occupied_by_types_00003' direct represents '36' with '1771'
1768 -1770 1771 0
-1771 1770 0
-1771 -1768 0
c Var 'num_occupied_by_types_00003' order represents '37' with '1772'
-1770 1772 0
c Var 'num_occupied_by_types_00003' direct represents '37' with '1773'
1770 -1772 1773 0
-1773 1772 0
-1773 -1770 0
c Var 'num_occupied_by_types_00003' order represents '38' with '1774'
-1772 1774 0
c Var 'num_occupied_by_types_00003' direct represents '38' with '1775'
1772 -1774 1775 0
-1775 1774 0
-1775 -1772 0
c Var 'num_occupied_by_types_00003' order represents '39' with '1776'
-1774 1776 0
c Var 'num_occupied_by_types_00003' direct represents '39' with '1777'
1774 -1776 1777 0
-1777 1776 0
-1777 -1774 0
c Var 'num_occupied_by_types_00003' order represents '40' with '1778'
-1776 1778 0
c Var 'num_occupied_by_types_00003' direct represents '40' with '1779'
1776 -1778 1779 0
-1779 1778 0
-1779 -1776 0
c Var 'num_occupied_by_types_00003' order represents '41' with '1780'
-1778 1780 0
c Var 'num_occupied_by_types_00003' direct represents '41' with '1781'
1778 -1780 1781 0
-1781 1780 0
-1781 -1778 0
c Var 'num_occupied_by_types_00003' order represents '42' with '1782'
-1780 1782 0
c Var 'num_occupied_by_types_00003' direct represents '42' with '1783'
1780 -1782 1783 0
-1783 1782 0
-1783 -1780 0
c Var 'num_occupied_by_types_00003' order represents '43' with '1784'
-1782 1784 0
c Var 'num_occupied_by_types_00003' direct represents '43' with '1785'
1782 -1784 1785 0
-1785 1784 0
-1785 -1782 0
c Var 'num_occupied_by_types_00003' order represents '44' with '1786'
-1784 1786 0
c Var 'num_occupied_by_types_00003' direct represents '44' with '1787'
1784 -1786 1787 0
-1787 1786 0
-1787 -1784 0
c Var 'num_occupied_by_types_00003' order represents '45' with '1788'
-1786 1788 0
c Var 'num_occupied_by_types_00003' direct represents '45' with '1789'
1786 -1788 1789 0
-1789 1788 0
-1789 -1786 0
c Var 'num_occupied_by_types_00003' order represents '46' with '1790'
-1788 1790 0
c Var 'num_occupied_by_types_00003' direct represents '46' with '1791'
1788 -1790 1791 0
-1791 1790 0
-1791 -1788 0
c Var 'num_occupied_by_types_00003' order represents '47' with '1792'
-1790 1792 0
c Var 'num_occupied_by_types_00003' direct represents '47' with '1793'
1790 -1792 1793 0
-1793 1792 0
-1793 -1790 0
c Var 'num_occupied_by_types_00003' order represents '48' with '1794'
-1792 1794 0
c Var 'num_occupied_by_types_00003' direct represents '48' with '1795'
1792 -1794 1795 0
-1795 1794 0
-1795 -1792 0
c Var 'num_occupied_by_types_00003' order represents '49' with '1796'
-1794 1796 0
c Var 'num_occupied_by_types_00003' direct represents '49' with '1797'
1794 -1796 1797 0
-1797 1796 0
-1797 -1794 0
c Var 'num_occupied_by_types_00003' order represents '50' with '1798'
-1796 1798 0
c Var 'num_occupied_by_types_00003' direct represents '50' with '1799'
1796 -1798 1799 0
-1799 1798 0
-1799 -1796 0
c Var 'num_occupied_by_types_00003' order represents '51' with '1800'
-1798 1800 0
c Var 'num_occupied_by_types_00003' direct represents '51' with '1801'
1798 -1800 1801 0
-1801 1800 0
-1801 -1798 0
c Var 'num_occupied_by_types_00003' order represents '52' with '1802'
-1800 1802 0
c Var 'num_occupied_by_types_00003' direct represents '52' with '1803'
1800 -1802 1803 0
-1803 1802 0
-1803 -1800 0
c Var 'num_occupied_by_types_00003' order represents '53' with '1804'
-1802 1804 0
c Var 'num_occupied_by_types_00003' direct represents '53' with '1805'
1802 -1804 1805 0
-1805 1804 0
-1805 -1802 0
c Var 'num_occupied_by_types_00003' order represents '54' with '1806'
-1804 1806 0
c Var 'num_occupied_by_types_00003' direct represents '54' with '1807'
1804 -1806 1807 0
-1807 1806 0
-1807 -1804 0
c Var 'num_occupied_by_types_00003' order represents '55' with '1808'
-1806 1808 0
c Var 'num_occupied_by_types_00003' direct represents '55' with '1809'
1806 -1808 1809 0
-1809 1808 0
-1809 -1806 0
c Var 'num_occupied_by_types_00003' order represents '56' with '1810'
-1808 1810 0
c Var 'num_occupied_by_types_00003' direct represents '56' with '1811'
1808 -1810 1811 0
-1811 1810 0
-1811 -1808 0
c Var 'num_occupied_by_types_00003' order represents '57' with '1812'
-1810 1812 0
c Var 'num_occupied_by_types_00003' direct represents '57' with '1813'
1810 -1812 1813 0
-1813 1812 0
-1813 -1810 0
c Var 'num_occupied_by_types_00003' order represents '58' with '1814'
-1812 1814 0
c Var 'num_occupied_by_types_00003' direct represents '58' with '1815'
1812 -1814 1815 0
-1815 1814 0
-1815 -1812 0
c Var 'num_occupied_by_types_00003' order represents '59' with '1816'
-1814 1816 0
c Var 'num_occupied_by_types_00003' direct represents '59' with '1817'
1814 -1816 1817 0
-1817 1816 0
-1817 -1814 0
c Var 'num_occupied_by_types_00003' order represents '60' with '1818'
-1816 1818 0
c Var 'num_occupied_by_types_00003' direct represents '60' with '1819'
1816 -1818 1819 0
-1819 1818 0
-1819 -1816 0
c Var 'num_occupied_by_types_00003' order represents '61' with '1820'
-1818 1820 0
c Var 'num_occupied_by_types_00003' direct represents '61' with '1821'
1818 -1820 1821 0
-1821 1820 0
-1821 -1818 0
c Var 'num_occupied_by_types_00003' order represents '62' with '1822'
-1820 1822 0
c Var 'num_occupied_by_types_00003' direct represents '62' with '1823'
1820 -1822 1823 0
-1823 1822 0
-1823 -1820 0
c Var 'num_occupied_by_types_00003' order represents '63' with '1824'
-1822 1824 0
c Var 'num_occupied_by_types_00003' direct represents '63' with '1825'
1822 -1824 1825 0
-1825 1824 0
-1825 -1822 0
c Var 'num_occupied_by_types_00003' direct represents '64' with '-1824'
1699 1701 1703 1705 1707 1709 1711 1713 1715 1717 1719 1721 1723 1725 1727 1729 1731 1733 1735 1737 1739 1741 1743 1745 1747 1749 1751 1753 1755 1757 1759 1761 1763 1765 1767 1769 1771 1773 1775 1777 1779 1781 1783 1785 1787 1789 1791 1793 1795 1797 1799 1801 1803 1805 1807 1809 1811 1813 1815 1817 1819 1821 1823 1825 -1824 0
c Encoding variable: num_occupied_by_types_00004 with domain: int(0..64) (representing constraint )
c Both direct and order encoding.
c Var 'num_occupied_by_types_00004' order represents '0' with '1826'
c Var 'num_occupied_by_types_00004' direct represents '0' with '1826'
c Var 'num_occupied_by_types_00004' order represents '1' with '1827'
-1826 1827 0
c Var 'num_occupied_by_types_00004' direct represents '1' with '1828'
1826 -1827 1828 0
-1828 1827 0
-1828 -1826 0
c Var 'num_occupied_by_types_00004' order represents '2' with '1829'
-1827 1829 0
c Var 'num_occupied_by_types_00004' direct represents '2' with '1830'
1827 -1829 1830 0
-1830 1829 0
-1830 -1827 0
c Var 'num_occupied_by_types_00004' order represents '3' with '1831'
-1829 1831 0
c Var 'num_occupied_by_types_00004' direct represents '3' with '1832'
1829 -1831 1832 0
-1832 1831 0
-1832 -1829 0
c Var 'num_occupied_by_types_00004' order represents '4' with '1833'
-1831 1833 0
c Var 'num_occupied_by_types_00004' direct represents '4' with '1834'
1831 -1833 1834 0
-1834 1833 0
-1834 -1831 0
c Var 'num_occupied_by_types_00004' order represents '5' with '1835'
-1833 1835 0
c Var 'num_occupied_by_types_00004' direct represents '5' with '1836'
1833 -1835 1836 0
-1836 1835 0
-1836 -1833 0
c Var 'num_occupied_by_types_00004' order represents '6' with '1837'
-1835 1837 0
c Var 'num_occupied_by_types_00004' direct represents '6' with '1838'
1835 -1837 1838 0
-1838 1837 0
-1838 -1835 0
c Var 'num_occupied_by_types_00004' order represents '7' with '1839'
-1837 1839 0
c Var 'num_occupied_by_types_00004' direct represents '7' with '1840'
1837 -1839 1840 0
-1840 1839 0
-1840 -1837 0
c Var 'num_occupied_by_types_00004' order represents '8' with '1841'
-1839 1841 0
c Var 'num_occupied_by_types_00004' direct represents '8' with '1842'
1839 -1841 1842 0
-1842 1841 0
-1842 -1839 0
c Var 'num_occupied_by_types_00004' order represents '9' with '1843'
-1841 1843 0
c Var 'num_occupied_by_types_00004' direct represents '9' with '1844'
1841 -1843 1844 0
-1844 1843 0
-1844 -1841 0
c Var 'num_occupied_by_types_00004' order represents '10' with '1845'
-1843 1845 0
c Var 'num_occupied_by_types_00004' direct represents '10' with '1846'
1843 -1845 1846 0
-1846 1845 0
-1846 -1843 0
c Var 'num_occupied_by_types_00004' order represents '11' with '1847'
-1845 1847 0
c Var 'num_occupied_by_types_00004' direct represents '11' with '1848'
1845 -1847 1848 0
-1848 1847 0
-1848 -1845 0
c Var 'num_occupied_by_types_00004' order represents '12' with '1849'
-1847 1849 0
c Var 'num_occupied_by_types_00004' direct represents '12' with '1850'
1847 -1849 1850 0
-1850 1849 0
-1850 -1847 0
c Var 'num_occupied_by_types_00004' order represents '13' with '1851'
-1849 1851 0
c Var 'num_occupied_by_types_00004' direct represents '13' with '1852'
1849 -1851 1852 0
-1852 1851 0
-1852 -1849 0
c Var 'num_occupied_by_types_00004' order represents '14' with '1853'
-1851 1853 0
c Var 'num_occupied_by_types_00004' direct represents '14' with '1854'
1851 -1853 1854 0
-1854 1853 0
-1854 -1851 0
c Var 'num_occupied_by_types_00004' order represents '15' with '1855'
-1853 1855 0
c Var 'num_occupied_by_types_00004' direct represents '15' with '1856'
1853 -1855 1856 0
-1856 1855 0
-1856 -1853 0
c Var 'num_occupied_by_types_00004' order represents '16' with '1857'
-1855 1857 0
c Var 'num_occupied_by_types_00004' direct represents '16' with '1858'
1855 -1857 1858 0
-1858 1857 0
-1858 -1855 0
c Var 'num_occupied_by_types_00004' order represents '17' with '1859'
-1857 1859 0
c Var 'num_occupied_by_types_00004' direct represents '17' with '1860'
1857 -1859 1860 0
-1860 1859 0
-1860 -1857 0
c Var 'num_occupied_by_types_00004' order represents '18' with '1861'
-1859 1861 0
c Var 'num_occupied_by_types_00004' direct represents '18' with '1862'
1859 -1861 1862 0
-1862 1861 0
-1862 -1859 0
c Var 'num_occupied_by_types_00004' order represents '19' with '1863'
-1861 1863 0
c Var 'num_occupied_by_types_00004' direct represents '19' with '1864'
1861 -1863 1864 0
-1864 1863 0
-1864 -1861 0
c Var 'num_occupied_by_types_00004' order represents '20' with '1865'
-1863 1865 0
c Var 'num_occupied_by_types_00004' direct represents '20' with '1866'
1863 -1865 1866 0
-1866 1865 0
-1866 -1863 0
c Var 'num_occupied_by_types_00004' order represents '21' with '1867'
-1865 1867 0
c Var 'num_occupied_by_types_00004' direct represents '21' with '1868'
1865 -1867 1868 0
-1868 1867 0
-1868 -1865 0
c Var 'num_occupied_by_types_00004' order represents '22' with '1869'
-1867 1869 0
c Var 'num_occupied_by_types_00004' direct represents '22' with '1870'
1867 -1869 1870 0
-1870 1869 0
-1870 -1867 0
c Var 'num_occupied_by_types_00004' order represents '23' with '1871'
-1869 1871 0
c Var 'num_occupied_by_types_00004' direct represents '23' with '1872'
1869 -1871 1872 0
-1872 1871 0
-1872 -1869 0
c Var 'num_occupied_by_types_00004' order represents '24' with '1873'
-1871 1873 0
c Var 'num_occupied_by_types_00004' direct represents '24' with '1874'
1871 -1873 1874 0
-1874 1873 0
-1874 -1871 0
c Var 'num_occupied_by_types_00004' order represents '25' with '1875'
-1873 1875 0
c Var 'num_occupied_by_types_00004' direct represents '25' with '1876'
1873 -1875 1876 0
-1876 1875 0
-1876 -1873 0
c Var 'num_occupied_by_types_00004' order represents '26' with '1877'
-1875 1877 0
c Var 'num_occupied_by_types_00004' direct represents '26' with '1878'
1875 -1877 1878 0
-1878 1877 0
-1878 -1875 0
c Var 'num_occupied_by_types_00004' order represents '27' with '1879'
-1877 1879 0
c Var 'num_occupied_by_types_00004' direct represents '27' with '1880'
1877 -1879 1880 0
-1880 1879 0
-1880 -1877 0
c Var 'num_occupied_by_types_00004' order represents '28' with '1881'
-1879 1881 0
c Var 'num_occupied_by_types_00004' direct represents '28' with '1882'
1879 -1881 1882 0
-1882 1881 0
-1882 -1879 0
c Var 'num_occupied_by_types_00004' order represents '29' with '1883'
-1881 1883 0
c Var 'num_occupied_by_types_00004' direct represents '29' with '1884'
1881 -1883 1884 0
-1884 1883 0
-1884 -1881 0
c Var 'num_occupied_by_types_00004' order represents '30' with '1885'
-1883 1885 0
c Var 'num_occupied_by_types_00004' direct represents '30' with '1886'
1883 -1885 1886 0
-1886 1885 0
-1886 -1883 0
c Var 'num_occupied_by_types_00004' order represents '31' with '1887'
-1885 1887 0
c Var 'num_occupied_by_types_00004' direct represents '31' with '1888'
1885 -1887 1888 0
-1888 1887 0
-1888 -1885 0
c Var 'num_occupied_by_types_00004' order represents '32' with '1889'
-1887 1889 0
c Var 'num_occupied_by_types_00004' direct represents '32' with '1890'
1887 -1889 1890 0
-1890 1889 0
-1890 -1887 0
c Var 'num_occupied_by_types_00004' order represents '33' with '1891'
-1889 1891 0
c Var 'num_occupied_by_types_00004' direct represents '33' with '1892'
1889 -1891 1892 0
-1892 1891 0
-1892 -1889 0
c Var 'num_occupied_by_types_00004' order represents '34' with '1893'
-1891 1893 0
c Var 'num_occupied_by_types_00004' direct represents '34' with '1894'
1891 -1893 1894 0
-1894 1893 0
-1894 -1891 0
c Var 'num_occupied_by_types_00004' order represents '35' with '1895'
-1893 1895 0
c Var 'num_occupied_by_types_00004' direct represents '35' with '1896'
1893 -1895 1896 0
-1896 1895 0
-1896 -1893 0
c Var 'num_occupied_by_types_00004' order represents '36' with '1897'
-1895 1897 0
c Var 'num_occupied_by_types_00004' direct represents '36' with '1898'
1895 -1897 1898 0
-1898 1897 0
-1898 -1895 0
c Var 'num_occupied_by_types_00004' order represents '37' with '1899'
-1897 1899 0
c Var 'num_occupied_by_types_00004' direct represents '37' with '1900'
1897 -1899 1900 0
-1900 1899 0
-1900 -1897 0
c Var 'num_occupied_by_types_00004' order represents '38' with '1901'
-1899 1901 0
c Var 'num_occupied_by_types_00004' direct represents '38' with '1902'
1899 -1901 1902 0
-1902 1901 0
-1902 -1899 0
c Var 'num_occupied_by_types_00004' order represents '39' with '1903'
-1901 1903 0
c Var 'num_occupied_by_types_00004' direct represents '39' with '1904'
1901 -1903 1904 0
-1904 1903 0
-1904 -1901 0
c Var 'num_occupied_by_types_00004' order represents '40' with '1905'
-1903 1905 0
c Var 'num_occupied_by_types_00004' direct represents '40' with '1906'
1903 -1905 1906 0
-1906 1905 0
-1906 -1903 0
c Var 'num_occupied_by_types_00004' order represents '41' with '1907'
-1905 1907 0
c Var 'num_occupied_by_types_00004' direct represents '41' with '1908'
1905 -1907 1908 0
-1908 1907 0
-1908 -1905 0
c Var 'num_occupied_by_types_00004' order represents '42' with '1909'
-1907 1909 0
c Var 'num_occupied_by_types_00004' direct represents '42' with '1910'
1907 -1909 1910 0
-1910 1909 0
-1910 -1907 0
c Var 'num_occupied_by_types_00004' order represents '43' with '1911'
-1909 1911 0
c Var 'num_occupied_by_types_00004' direct represents '43' with '1912'
1909 -1911 1912 0
-1912 1911 0
-1912 -1909 0
c Var 'num_occupied_by_types_00004' order represents '44' with '1913'
-1911 1913 0
c Var 'num_occupied_by_types_00004' direct represents '44' with '1914'
1911 -1913 1914 0
-1914 1913 0
-1914 -1911 0
c Var 'num_occupied_by_types_00004' order represents '45' with '1915'
-1913 1915 0
c Var 'num_occupied_by_types_00004' direct represents '45' with '1916'
1913 -1915 1916 0
-1916 1915 0
-1916 -1913 0
c Var 'num_occupied_by_types_00004' order represents '46' with '1917'
-1915 1917 0
c Var 'num_occupied_by_types_00004' direct represents '46' with '1918'
1915 -1917 1918 0
-1918 1917 0
-1918 -1915 0
c Var 'num_occupied_by_types_00004' order represents '47' with '1919'
-1917 1919 0
c Var 'num_occupied_by_types_00004' direct represents '47' with '1920'
1917 -1919 1920 0
-1920 1919 0
-1920 -1917 0
c Var 'num_occupied_by_types_00004' order represents '48' with '1921'
-1919 1921 0
c Var 'num_occupied_by_types_00004' direct represents '48' with '1922'
1919 -1921 1922 0
-1922 1921 0
-1922 -1919 0
c Var 'num_occupied_by_types_00004' order represents '49' with '1923'
-1921 1923 0
c Var 'num_occupied_by_types_00004' direct represents '49' with '1924'
1921 -1923 1924 0
-1924 1923 0
-1924 -1921 0
c Var 'num_occupied_by_types_00004' order represents '50' with '1925'
-1923 1925 0
c Var 'num_occupied_by_types_00004' direct represents '50' with '1926'
1923 -1925 1926 0
-1926 1925 0
-1926 -1923 0
c Var 'num_occupied_by_types_00004' order represents '51' with '1927'
-1925 1927 0
c Var 'num_occupied_by_types_00004' direct represents '51' with '1928'
1925 -1927 1928 0
-1928 1927 0
-1928 -1925 0
c Var 'num_occupied_by_types_00004' order represents '52' with '1929'
-1927 1929 0
c Var 'num_occupied_by_types_00004' direct represents '52' with '1930'
1927 -1929 1930 0
-1930 1929 0
-1930 -1927 0
c Var 'num_occupied_by_types_00004' order represents '53' with '1931'
-1929 1931 0
c Var 'num_occupied_by_types_00004' direct represents '53' with '1932'
1929 -1931 1932 0
-1932 1931 0
-1932 -1929 0
c Var 'num_occupied_by_types_00004' order represents '54' with '1933'
-1931 1933 0
c Var 'num_occupied_by_types_00004' direct represents '54' with '1934'
1931 -1933 1934 0
-1934 1933 0
-1934 -1931 0
c Var 'num_occupied_by_types_00004' order represents '55' with '1935'
-1933 1935 0
c Var 'num_occupied_by_types_00004' direct represents '55' with '1936'
1933 -1935 1936 0
-1936 1935 0
-1936 -1933 0
c Var 'num_occupied_by_types_00004' order represents '56' with '1937'
-1935 1937 0
c Var 'num_occupied_by_types_00004' direct represents '56' with '1938'
1935 -1937 1938 0
-1938 1937 0
-1938 -1935 0
c Var 'num_occupied_by_types_00004' order represents '57' with '1939'
-1937 1939 0
c Var 'num_occupied_by_types_00004' direct represents '57' with '1940'
1937 -1939 1940 0
-1940 1939 0
-1940 -1937 0
c Var 'num_occupied_by_types_00004' order represents '58' with '1941'
-1939 1941 0
c Var 'num_occupied_by_types_00004' direct represents '58' with '1942'
1939 -1941 1942 0
-1942 1941 0
-1942 -1939 0
c Var 'num_occupied_by_types_00004' order represents '59' with '1943'
-1941 1943 0
c Var 'num_occupied_by_types_00004' direct represents '59' with '1944'
1941 -1943 1944 0
-1944 1943 0
-1944 -1941 0
c Var 'num_occupied_by_types_00004' order represents '60' with '1945'
-1943 1945 0
c Var 'num_occupied_by_types_00004' direct represents '60' with '1946'
1943 -1945 1946 0
-1946 1945 0
-1946 -1943 0
c Var 'num_occupied_by_types_00004' order represents '61' with '1947'
-1945 1947 0
c Var 'num_occupied_by_types_00004' direct represents '61' with '1948'
1945 -1947 1948 0
-1948 1947 0
-1948 -1945 0
c Var 'num_occupied_by_types_00004' order represents '62' with '1949'
-1947 1949 0
c Var 'num_occupied_by_types_00004' direct represents '62' with '1950'
1947 -1949 1950 0
-1950 1949 0
-1950 -1947 0
c Var 'num_occupied_by_types_00004' order represents '63' with '1951'
-1949 1951 0
c Var 'num_occupied_by_types_00004' direct represents '63' with '1952'
1949 -1951 1952 0
-1952 1951 0
-1952 -1949 0
c Var 'num_occupied_by_types_00004' direct represents '64' with '-1951'
1826 1828 1830 1832 1834 1836 1838 1840 1842 1844 1846 1848 1850 1852 1854 1856 1858 1860 1862 1864 1866 1868 1870 1872 1874 1876 1878 1880 1882 1884 1886 1888 1890 1892 1894 1896 1898 1900 1902 1904 1906 1908 1910 1912 1914 1916 1918 1920 1922 1924 1926 1928 1930 1932 1934 1936 1938 1940 1942 1944 1946 1948 1950 1952 -1951 0
c Encoding variable: r_column_tallies_00001 with domain: bool (representing constraint )
c Var 'r_column_tallies_00001' direct represents '0' with '-1953'
c Var 'r_column_tallies_00001' direct represents '1' with '1953'
c Var 'r_column_tallies_00001' order represents '1' with '1'
c Var 'r_column_tallies_00001' order represents '0' with '-1953'
c Encoding variable: r_column_tallies_00002 with domain: bool (representing constraint )
c Var 'r_column_tallies_00002' direct represents '0' with '-1954'
c Var 'r_column_tallies_00002' direct represents '1' with '1954'
c Var 'r_column_tallies_00002' order represents '1' with '1'
c Var 'r_column_tallies_00002' order represents '0' with '-1954'
c Encoding variable: r_column_tallies_00003 with domain: bool (representing constraint )
c Var 'r_column_tallies_00003' direct represents '0' with '-1955'
c Var 'r_column_tallies_00003' direct represents '1' with '1955'
c Var 'r_column_tallies_00003' order represents '1' with '1'
c Var 'r_column_tallies_00003' order represents '0' with '-1955'
c Encoding variable: r_column_tallies_00004 with domain: bool (representing constraint )
c Var 'r_column_tallies_00004' direct represents '0' with '-1956'
c Var 'r_column_tallies_00004' direct represents '1' with '1956'
c Var 'r_column_tallies_00004' order represents '1' with '1'
c Var 'r_column_tallies_00004' order represents '0' with '-1956'
c Encoding variable: r_column_tallies_00005 with domain: bool (representing constraint )
c Var 'r_column_tallies_00005' direct represents '0' with '-1957'
c Var 'r_column_tallies_00005' direct represents '1' with '1957'
c Var 'r_column_tallies_00005' order represents '1' with '1'
c Var 'r_column_tallies_00005' order represents '0' with '-1957'
c Encoding variable: r_column_tallies_00006 with domain: bool (representing constraint )
c Var 'r_column_tallies_00006' direct represents '0' with '-1958'
c Var 'r_column_tallies_00006' direct represents '1' with '1958'
c Var 'r_column_tallies_00006' order represents '1' with '1'
c Var 'r_column_tallies_00006' order represents '0' with '-1958'
c Encoding variable: r_column_tallies_00007 with domain: bool (representing constraint )
c Var 'r_column_tallies_00007' direct represents '0' with '-1959'
c Var 'r_column_tallies_00007' direct represents '1' with '1959'
c Var 'r_column_tallies_00007' order represents '1' with '1'
c Var 'r_column_tallies_00007' order represents '0' with '-1959'
c Encoding variable: r_column_tallies_00008 with domain: bool (representing constraint )
c Var 'r_column_tallies_00008' direct represents '0' with '-1960'
c Var 'r_column_tallies_00008' direct represents '1' with '1960'
c Var 'r_column_tallies_00008' order represents '1' with '1'
c Var 'r_column_tallies_00008' order represents '0' with '-1960'
c Encoding variable: r_row_tallies_00001 with domain: bool (representing constraint )
c Var 'r_row_tallies_00001' direct represents '0' with '-1961'
c Var 'r_row_tallies_00001' direct represents '1' with '1961'
c Var 'r_row_tallies_00001' order represents '1' with '1'
c Var 'r_row_tallies_00001' order represents '0' with '-1961'
c Encoding variable: r_row_tallies_00002 with domain: bool (representing constraint )
c Var 'r_row_tallies_00002' direct represents '0' with '-1962'
c Var 'r_row_tallies_00002' direct represents '1' with '1962'
c Var 'r_row_tallies_00002' order represents '1' with '1'
c Var 'r_row_tallies_00002' order represents '0' with '-1962'
c Encoding variable: r_row_tallies_00003 with domain: bool (representing constraint )
c Var 'r_row_tallies_00003' direct represents '0' with '-1963'
c Var 'r_row_tallies_00003' direct represents '1' with '1963'
c Var 'r_row_tallies_00003' order represents '1' with '1'
c Var 'r_row_tallies_00003' order represents '0' with '-1963'
c Encoding variable: r_row_tallies_00004 with domain: bool (representing constraint )
c Var 'r_row_tallies_00004' direct represents '0' with '-1964'
c Var 'r_row_tallies_00004' direct represents '1' with '1964'
c Var 'r_row_tallies_00004' order represents '1' with '1'
c Var 'r_row_tallies_00004' order represents '0' with '-1964'
c Encoding variable: r_row_tallies_00005 with domain: bool (representing constraint )
c Var 'r_row_tallies_00005' direct represents '0' with '-1965'
c Var 'r_row_tallies_00005' direct represents '1' with '1965'
c Var 'r_row_tallies_00005' order represents '1' with '1'
c Var 'r_row_tallies_00005' order represents '0' with '-1965'
c Encoding variable: r_row_tallies_00006 with domain: bool (representing constraint )
c Var 'r_row_tallies_00006' direct represents '0' with '-1966'
c Var 'r_row_tallies_00006' direct represents '1' with '1966'
c Var 'r_row_tallies_00006' order represents '1' with '1'
c Var 'r_row_tallies_00006' order represents '0' with '-1966'
c Encoding variable: r_row_tallies_00007 with domain: bool (representing constraint )
c Var 'r_row_tallies_00007' direct represents '0' with '-1967'
c Var 'r_row_tallies_00007' direct represents '1' with '1967'
c Var 'r_row_tallies_00007' order represents '1' with '1'
c Var 'r_row_tallies_00007' order represents '0' with '-1967'
c Encoding variable: r_row_tallies_00008 with domain: bool (representing constraint )
c Var 'r_row_tallies_00008' direct represents '0' with '-1968'
c Var 'r_row_tallies_00008' direct represents '1' with '1968'
c Var 'r_row_tallies_00008' order represents '1' with '1'
c Var 'r_row_tallies_00008' order represents '0' with '-1968'
c Encoding variable: r_num_occupied_by_types_00001 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_types_00001' direct represents '0' with '-1969'
c Var 'r_num_occupied_by_types_00001' direct represents '1' with '1969'
c Var 'r_num_occupied_by_types_00001' order represents '1' with '1'
c Var 'r_num_occupied_by_types_00001' order represents '0' with '-1969'
c Encoding variable: r_num_occupied_by_types_00002 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_types_00002' direct represents '0' with '-1970'
c Var 'r_num_occupied_by_types_00002' direct represents '1' with '1970'
c Var 'r_num_occupied_by_types_00002' order represents '1' with '1'
c Var 'r_num_occupied_by_types_00002' order represents '0' with '-1970'
c Encoding variable: r_num_occupied_by_types_00003 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_types_00003' direct represents '0' with '-1971'
c Var 'r_num_occupied_by_types_00003' direct represents '1' with '1971'
c Var 'r_num_occupied_by_types_00003' order represents '1' with '1'
c Var 'r_num_occupied_by_types_00003' order represents '0' with '-1971'
c Encoding variable: r_num_occupied_by_types_00004 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_types_00004' direct represents '0' with '-1972'
c Var 'r_num_occupied_by_types_00004' direct represents '1' with '1972'
c Var 'r_num_occupied_by_types_00004' order represents '1' with '1'
c Var 'r_num_occupied_by_types_00004' order represents '0' with '-1972'
c Encoding variable: r_num_occupied_by_water_00000 with domain: bool (representing constraint )
c Var 'r_num_occupied_by_water_00000' direct represents '0' with '-1973'
c Var 'r_num_occupied_by_water_00000' direct represents '1' with '1973'
c Var 'r_num_occupied_by_water_00000' order represents '1' with '1'
c Var 'r_num_occupied_by_water_00000' order represents '0' with '-1973'
c Encoding variable: r_sij_diagonals_00001_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00001' direct represents '0' with '-1974'
c Var 'r_sij_diagonals_00001_00001' direct represents '1' with '1974'
c Var 'r_sij_diagonals_00001_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00001' order represents '0' with '-1974'
c Encoding variable: r_sij_diagonals_00001_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00002' direct represents '0' with '-1975'
c Var 'r_sij_diagonals_00001_00002' direct represents '1' with '1975'
c Var 'r_sij_diagonals_00001_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00002' order represents '0' with '-1975'
c Encoding variable: r_sij_diagonals_00001_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00003' direct represents '0' with '-1976'
c Var 'r_sij_diagonals_00001_00003' direct represents '1' with '1976'
c Var 'r_sij_diagonals_00001_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00003' order represents '0' with '-1976'
c Encoding variable: r_sij_diagonals_00001_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00004' direct represents '0' with '-1977'
c Var 'r_sij_diagonals_00001_00004' direct represents '1' with '1977'
c Var 'r_sij_diagonals_00001_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00004' order represents '0' with '-1977'
c Encoding variable: r_sij_diagonals_00001_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00005' direct represents '0' with '-1978'
c Var 'r_sij_diagonals_00001_00005' direct represents '1' with '1978'
c Var 'r_sij_diagonals_00001_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00005' order represents '0' with '-1978'
c Encoding variable: r_sij_diagonals_00001_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00006' direct represents '0' with '-1979'
c Var 'r_sij_diagonals_00001_00006' direct represents '1' with '1979'
c Var 'r_sij_diagonals_00001_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00006' order represents '0' with '-1979'
c Encoding variable: r_sij_diagonals_00001_00007 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00007' direct represents '0' with '-1980'
c Var 'r_sij_diagonals_00001_00007' direct represents '1' with '1980'
c Var 'r_sij_diagonals_00001_00007' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00007' order represents '0' with '-1980'
c Encoding variable: r_sij_diagonals_00001_00008 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00001_00008' direct represents '0' with '-1981'
c Var 'r_sij_diagonals_00001_00008' direct represents '1' with '1981'
c Var 'r_sij_diagonals_00001_00008' order represents '1' with '1'
c Var 'r_sij_diagonals_00001_00008' order represents '0' with '-1981'
c Encoding variable: r_sij_diagonals_00002_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00001' direct represents '0' with '-1982'
c Var 'r_sij_diagonals_00002_00001' direct represents '1' with '1982'
c Var 'r_sij_diagonals_00002_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00001' order represents '0' with '-1982'
c Encoding variable: r_sij_diagonals_00002_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00002' direct represents '0' with '-1983'
c Var 'r_sij_diagonals_00002_00002' direct represents '1' with '1983'
c Var 'r_sij_diagonals_00002_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00002' order represents '0' with '-1983'
c Encoding variable: r_sij_diagonals_00002_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00003' direct represents '0' with '-1984'
c Var 'r_sij_diagonals_00002_00003' direct represents '1' with '1984'
c Var 'r_sij_diagonals_00002_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00003' order represents '0' with '-1984'
c Encoding variable: r_sij_diagonals_00002_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00004' direct represents '0' with '-1985'
c Var 'r_sij_diagonals_00002_00004' direct represents '1' with '1985'
c Var 'r_sij_diagonals_00002_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00004' order represents '0' with '-1985'
c Encoding variable: r_sij_diagonals_00002_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00005' direct represents '0' with '-1986'
c Var 'r_sij_diagonals_00002_00005' direct represents '1' with '1986'
c Var 'r_sij_diagonals_00002_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00005' order represents '0' with '-1986'
c Encoding variable: r_sij_diagonals_00002_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00006' direct represents '0' with '-1987'
c Var 'r_sij_diagonals_00002_00006' direct represents '1' with '1987'
c Var 'r_sij_diagonals_00002_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00006' order represents '0' with '-1987'
c Encoding variable: r_sij_diagonals_00002_00007 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00007' direct represents '0' with '-1988'
c Var 'r_sij_diagonals_00002_00007' direct represents '1' with '1988'
c Var 'r_sij_diagonals_00002_00007' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00007' order represents '0' with '-1988'
c Encoding variable: r_sij_diagonals_00002_00008 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00002_00008' direct represents '0' with '-1989'
c Var 'r_sij_diagonals_00002_00008' direct represents '1' with '1989'
c Var 'r_sij_diagonals_00002_00008' order represents '1' with '1'
c Var 'r_sij_diagonals_00002_00008' order represents '0' with '-1989'
c Encoding variable: r_sij_diagonals_00003_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00001' direct represents '0' with '-1990'
c Var 'r_sij_diagonals_00003_00001' direct represents '1' with '1990'
c Var 'r_sij_diagonals_00003_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00001' order represents '0' with '-1990'
c Encoding variable: r_sij_diagonals_00003_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00002' direct represents '0' with '-1991'
c Var 'r_sij_diagonals_00003_00002' direct represents '1' with '1991'
c Var 'r_sij_diagonals_00003_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00002' order represents '0' with '-1991'
c Encoding variable: r_sij_diagonals_00003_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00003' direct represents '0' with '-1992'
c Var 'r_sij_diagonals_00003_00003' direct represents '1' with '1992'
c Var 'r_sij_diagonals_00003_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00003' order represents '0' with '-1992'
c Encoding variable: r_sij_diagonals_00003_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00004' direct represents '0' with '-1993'
c Var 'r_sij_diagonals_00003_00004' direct represents '1' with '1993'
c Var 'r_sij_diagonals_00003_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00004' order represents '0' with '-1993'
c Encoding variable: r_sij_diagonals_00003_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00005' direct represents '0' with '-1994'
c Var 'r_sij_diagonals_00003_00005' direct represents '1' with '1994'
c Var 'r_sij_diagonals_00003_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00005' order represents '0' with '-1994'
c Encoding variable: r_sij_diagonals_00003_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00006' direct represents '0' with '-1995'
c Var 'r_sij_diagonals_00003_00006' direct represents '1' with '1995'
c Var 'r_sij_diagonals_00003_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00006' order represents '0' with '-1995'
c Encoding variable: r_sij_diagonals_00003_00007 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00007' direct represents '0' with '-1996'
c Var 'r_sij_diagonals_00003_00007' direct represents '1' with '1996'
c Var 'r_sij_diagonals_00003_00007' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00007' order represents '0' with '-1996'
c Encoding variable: r_sij_diagonals_00003_00008 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00003_00008' direct represents '0' with '-1997'
c Var 'r_sij_diagonals_00003_00008' direct represents '1' with '1997'
c Var 'r_sij_diagonals_00003_00008' order represents '1' with '1'
c Var 'r_sij_diagonals_00003_00008' order represents '0' with '-1997'
c Encoding variable: r_sij_diagonals_00004_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00001' direct represents '0' with '-1998'
c Var 'r_sij_diagonals_00004_00001' direct represents '1' with '1998'
c Var 'r_sij_diagonals_00004_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00001' order represents '0' with '-1998'
c Encoding variable: r_sij_diagonals_00004_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00002' direct represents '0' with '-1999'
c Var 'r_sij_diagonals_00004_00002' direct represents '1' with '1999'
c Var 'r_sij_diagonals_00004_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00002' order represents '0' with '-1999'
c Encoding variable: r_sij_diagonals_00004_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00003' direct represents '0' with '-2000'
c Var 'r_sij_diagonals_00004_00003' direct represents '1' with '2000'
c Var 'r_sij_diagonals_00004_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00003' order represents '0' with '-2000'
c Encoding variable: r_sij_diagonals_00004_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00004' direct represents '0' with '-2001'
c Var 'r_sij_diagonals_00004_00004' direct represents '1' with '2001'
c Var 'r_sij_diagonals_00004_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00004' order represents '0' with '-2001'
c Encoding variable: r_sij_diagonals_00004_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00005' direct represents '0' with '-2002'
c Var 'r_sij_diagonals_00004_00005' direct represents '1' with '2002'
c Var 'r_sij_diagonals_00004_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00005' order represents '0' with '-2002'
c Encoding variable: r_sij_diagonals_00004_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00006' direct represents '0' with '-2003'
c Var 'r_sij_diagonals_00004_00006' direct represents '1' with '2003'
c Var 'r_sij_diagonals_00004_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00006' order represents '0' with '-2003'
c Encoding variable: r_sij_diagonals_00004_00007 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00007' direct represents '0' with '-2004'
c Var 'r_sij_diagonals_00004_00007' direct represents '1' with '2004'
c Var 'r_sij_diagonals_00004_00007' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00007' order represents '0' with '-2004'
c Encoding variable: r_sij_diagonals_00004_00008 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00004_00008' direct represents '0' with '-2005'
c Var 'r_sij_diagonals_00004_00008' direct represents '1' with '2005'
c Var 'r_sij_diagonals_00004_00008' order represents '1' with '1'
c Var 'r_sij_diagonals_00004_00008' order represents '0' with '-2005'
c Encoding variable: r_sij_diagonals_00005_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00001' direct represents '0' with '-2006'
c Var 'r_sij_diagonals_00005_00001' direct represents '1' with '2006'
c Var 'r_sij_diagonals_00005_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00001' order represents '0' with '-2006'
c Encoding variable: r_sij_diagonals_00005_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00002' direct represents '0' with '-2007'
c Var 'r_sij_diagonals_00005_00002' direct represents '1' with '2007'
c Var 'r_sij_diagonals_00005_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00002' order represents '0' with '-2007'
c Encoding variable: r_sij_diagonals_00005_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00003' direct represents '0' with '-2008'
c Var 'r_sij_diagonals_00005_00003' direct represents '1' with '2008'
c Var 'r_sij_diagonals_00005_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00003' order represents '0' with '-2008'
c Encoding variable: r_sij_diagonals_00005_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00004' direct represents '0' with '-2009'
c Var 'r_sij_diagonals_00005_00004' direct represents '1' with '2009'
c Var 'r_sij_diagonals_00005_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00004' order represents '0' with '-2009'
c Encoding variable: r_sij_diagonals_00005_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00005' direct represents '0' with '-2010'
c Var 'r_sij_diagonals_00005_00005' direct represents '1' with '2010'
c Var 'r_sij_diagonals_00005_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00005' order represents '0' with '-2010'
c Encoding variable: r_sij_diagonals_00005_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00006' direct represents '0' with '-2011'
c Var 'r_sij_diagonals_00005_00006' direct represents '1' with '2011'
c Var 'r_sij_diagonals_00005_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00006' order represents '0' with '-2011'
c Encoding variable: r_sij_diagonals_00005_00007 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00007' direct represents '0' with '-2012'
c Var 'r_sij_diagonals_00005_00007' direct represents '1' with '2012'
c Var 'r_sij_diagonals_00005_00007' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00007' order represents '0' with '-2012'
c Encoding variable: r_sij_diagonals_00005_00008 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00005_00008' direct represents '0' with '-2013'
c Var 'r_sij_diagonals_00005_00008' direct represents '1' with '2013'
c Var 'r_sij_diagonals_00005_00008' order represents '1' with '1'
c Var 'r_sij_diagonals_00005_00008' order represents '0' with '-2013'
c Encoding variable: r_sij_diagonals_00006_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00001' direct represents '0' with '-2014'
c Var 'r_sij_diagonals_00006_00001' direct represents '1' with '2014'
c Var 'r_sij_diagonals_00006_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00001' order represents '0' with '-2014'
c Encoding variable: r_sij_diagonals_00006_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00002' direct represents '0' with '-2015'
c Var 'r_sij_diagonals_00006_00002' direct represents '1' with '2015'
c Var 'r_sij_diagonals_00006_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00002' order represents '0' with '-2015'
c Encoding variable: r_sij_diagonals_00006_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00003' direct represents '0' with '-2016'
c Var 'r_sij_diagonals_00006_00003' direct represents '1' with '2016'
c Var 'r_sij_diagonals_00006_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00003' order represents '0' with '-2016'
c Encoding variable: r_sij_diagonals_00006_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00004' direct represents '0' with '-2017'
c Var 'r_sij_diagonals_00006_00004' direct represents '1' with '2017'
c Var 'r_sij_diagonals_00006_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00004' order represents '0' with '-2017'
c Encoding variable: r_sij_diagonals_00006_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00005' direct represents '0' with '-2018'
c Var 'r_sij_diagonals_00006_00005' direct represents '1' with '2018'
c Var 'r_sij_diagonals_00006_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00005' order represents '0' with '-2018'
c Encoding variable: r_sij_diagonals_00006_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00006' direct represents '0' with '-2019'
c Var 'r_sij_diagonals_00006_00006' direct represents '1' with '2019'
c Var 'r_sij_diagonals_00006_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00006' order represents '0' with '-2019'
c Encoding variable: r_sij_diagonals_00006_00007 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00007' direct represents '0' with '-2020'
c Var 'r_sij_diagonals_00006_00007' direct represents '1' with '2020'
c Var 'r_sij_diagonals_00006_00007' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00007' order represents '0' with '-2020'
c Encoding variable: r_sij_diagonals_00006_00008 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00006_00008' direct represents '0' with '-2021'
c Var 'r_sij_diagonals_00006_00008' direct represents '1' with '2021'
c Var 'r_sij_diagonals_00006_00008' order represents '1' with '1'
c Var 'r_sij_diagonals_00006_00008' order represents '0' with '-2021'
c Encoding variable: r_sij_diagonals_00007_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00007_00001' direct represents '0' with '-2022'
c Var 'r_sij_diagonals_00007_00001' direct represents '1' with '2022'
c Var 'r_sij_diagonals_00007_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00007_00001' order represents '0' with '-2022'
c Encoding variable: r_sij_diagonals_00007_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00007_00002' direct represents '0' with '-2023'
c Var 'r_sij_diagonals_00007_00002' direct represents '1' with '2023'
c Var 'r_sij_diagonals_00007_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00007_00002' order represents '0' with '-2023'
c Encoding variable: r_sij_diagonals_00007_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00007_00003' direct represents '0' with '-2024'
c Var 'r_sij_diagonals_00007_00003' direct represents '1' with '2024'
c Var 'r_sij_diagonals_00007_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00007_00003' order represents '0' with '-2024'
c Encoding variable: r_sij_diagonals_00007_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00007_00004' direct represents '0' with '-2025'
c Var 'r_sij_diagonals_00007_00004' direct represents '1' with '2025'
c Var 'r_sij_diagonals_00007_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00007_00004' order represents '0' with '-2025'
c Encoding variable: r_sij_diagonals_00007_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00007_00005' direct represents '0' with '-2026'
c Var 'r_sij_diagonals_00007_00005' direct represents '1' with '2026'
c Var 'r_sij_diagonals_00007_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00007_00005' order represents '0' with '-2026'
c Encoding variable: r_sij_diagonals_00007_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00007_00006' direct represents '0' with '-2027'
c Var 'r_sij_diagonals_00007_00006' direct represents '1' with '2027'
c Var 'r_sij_diagonals_00007_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00007_00006' order represents '0' with '-2027'
c Encoding variable: r_sij_diagonals_00007_00007 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00007_00007' direct represents '0' with '-2028'
c Var 'r_sij_diagonals_00007_00007' direct represents '1' with '2028'
c Var 'r_sij_diagonals_00007_00007' order represents '1' with '1'
c Var 'r_sij_diagonals_00007_00007' order represents '0' with '-2028'
c Encoding variable: r_sij_diagonals_00007_00008 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00007_00008' direct represents '0' with '-2029'
c Var 'r_sij_diagonals_00007_00008' direct represents '1' with '2029'
c Var 'r_sij_diagonals_00007_00008' order represents '1' with '1'
c Var 'r_sij_diagonals_00007_00008' order represents '0' with '-2029'
c Encoding variable: r_sij_diagonals_00008_00001 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00008_00001' direct represents '0' with '-2030'
c Var 'r_sij_diagonals_00008_00001' direct represents '1' with '2030'
c Var 'r_sij_diagonals_00008_00001' order represents '1' with '1'
c Var 'r_sij_diagonals_00008_00001' order represents '0' with '-2030'
c Encoding variable: r_sij_diagonals_00008_00002 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00008_00002' direct represents '0' with '-2031'
c Var 'r_sij_diagonals_00008_00002' direct represents '1' with '2031'
c Var 'r_sij_diagonals_00008_00002' order represents '1' with '1'
c Var 'r_sij_diagonals_00008_00002' order represents '0' with '-2031'
c Encoding variable: r_sij_diagonals_00008_00003 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00008_00003' direct represents '0' with '-2032'
c Var 'r_sij_diagonals_00008_00003' direct represents '1' with '2032'
c Var 'r_sij_diagonals_00008_00003' order represents '1' with '1'
c Var 'r_sij_diagonals_00008_00003' order represents '0' with '-2032'
c Encoding variable: r_sij_diagonals_00008_00004 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00008_00004' direct represents '0' with '-2033'
c Var 'r_sij_diagonals_00008_00004' direct represents '1' with '2033'
c Var 'r_sij_diagonals_00008_00004' order represents '1' with '1'
c Var 'r_sij_diagonals_00008_00004' order represents '0' with '-2033'
c Encoding variable: r_sij_diagonals_00008_00005 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00008_00005' direct represents '0' with '-2034'
c Var 'r_sij_diagonals_00008_00005' direct represents '1' with '2034'
c Var 'r_sij_diagonals_00008_00005' order represents '1' with '1'
c Var 'r_sij_diagonals_00008_00005' order represents '0' with '-2034'
c Encoding variable: r_sij_diagonals_00008_00006 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00008_00006' direct represents '0' with '-2035'
c Var 'r_sij_diagonals_00008_00006' direct represents '1' with '2035'
c Var 'r_sij_diagonals_00008_00006' order represents '1' with '1'
c Var 'r_sij_diagonals_00008_00006' order represents '0' with '-2035'
c Encoding variable: r_sij_diagonals_00008_00007 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00008_00007' direct represents '0' with '-2036'
c Var 'r_sij_diagonals_00008_00007' direct represents '1' with '2036'
c Var 'r_sij_diagonals_00008_00007' order represents '1' with '1'
c Var 'r_sij_diagonals_00008_00007' order represents '0' with '-2036'
c Encoding variable: r_sij_diagonals_00008_00008 with domain: bool (representing constraint )
c Var 'r_sij_diagonals_00008_00008' direct represents '0' with '-2037'
c Var 'r_sij_diagonals_00008_00008' direct represents '1' with '2037'
c Var 'r_sij_diagonals_00008_00008' order represents '1' with '1'
c Var 'r_sij_diagonals_00008_00008' order represents '0' with '-2037'
c Encoding variable: r_hints_00001_00001 with domain: bool (representing constraint )
c Var 'r_hints_00001_00001' direct represents '0' with '-2038'
c Var 'r_hints_00001_00001' direct represents '1' with '2038'
c Var 'r_hints_00001_00001' order represents '1' with '1'
c Var 'r_hints_00001_00001' order represents '0' with '-2038'
2038 -2038 0
c Encoding variable: r_hints_00001_00002 with domain: bool (representing constraint )
c Var 'r_hints_00001_00002' direct represents '0' with '-2039'
c Var 'r_hints_00001_00002' direct represents '1' with '2039'
c Var 'r_hints_00001_00002' order represents '1' with '1'
c Var 'r_hints_00001_00002' order represents '0' with '-2039'
2039 -2039 0
c Encoding variable: r_hints_00001_00003 with domain: bool (representing constraint )
c Var 'r_hints_00001_00003' direct represents '0' with '-2040'
c Var 'r_hints_00001_00003' direct represents '1' with '2040'
c Var 'r_hints_00001_00003' order represents '1' with '1'
c Var 'r_hints_00001_00003' order represents '0' with '-2040'
c Encoding variable: r_hints_00001_00004 with domain: bool (representing constraint )
c Var 'r_hints_00001_00004' direct represents '0' with '-2041'
c Var 'r_hints_00001_00004' direct represents '1' with '2041'
c Var 'r_hints_00001_00004' order represents '1' with '1'
c Var 'r_hints_00001_00004' order represents '0' with '-2041'
2041 -2041 0
c Encoding variable: r_hints_00001_00005 with domain: bool (representing constraint )
c Var 'r_hints_00001_00005' direct represents '0' with '-2042'
c Var 'r_hints_00001_00005' direct represents '1' with '2042'
c Var 'r_hints_00001_00005' order represents '1' with '1'
c Var 'r_hints_00001_00005' order represents '0' with '-2042'
2042 -2042 0
c Encoding variable: r_hints_00001_00006 with domain: bool (representing constraint )
c Var 'r_hints_00001_00006' direct represents '0' with '-2043'
c Var 'r_hints_00001_00006' direct represents '1' with '2043'
c Var 'r_hints_00001_00006' order represents '1' with '1'
c Var 'r_hints_00001_00006' order represents '0' with '-2043'
2043 -2043 0
c Encoding variable: r_hints_00001_00007 with domain: bool (representing constraint )
c Var 'r_hints_00001_00007' direct represents '0' with '-2044'
c Var 'r_hints_00001_00007' direct represents '1' with '2044'
c Var 'r_hints_00001_00007' order represents '1' with '1'
c Var 'r_hints_00001_00007' order represents '0' with '-2044'
2044 -2044 0
c Encoding variable: r_hints_00001_00008 with domain: bool (representing constraint )
c Var 'r_hints_00001_00008' direct represents '0' with '-2045'
c Var 'r_hints_00001_00008' direct represents '1' with '2045'
c Var 'r_hints_00001_00008' order represents '1' with '1'
c Var 'r_hints_00001_00008' order represents '0' with '-2045'
2045 -2045 0
c Encoding variable: r_hints_00002_00001 with domain: bool (representing constraint )
c Var 'r_hints_00002_00001' direct represents '0' with '-2046'
c Var 'r_hints_00002_00001' direct represents '1' with '2046'
c Var 'r_hints_00002_00001' order represents '1' with '1'
c Var 'r_hints_00002_00001' order represents '0' with '-2046'
2046 -2046 0
c Encoding variable: r_hints_00002_00002 with domain: bool (representing constraint )
c Var 'r_hints_00002_00002' direct represents '0' with '-2047'
c Var 'r_hints_00002_00002' direct represents '1' with '2047'
c Var 'r_hints_00002_00002' order represents '1' with '1'
c Var 'r_hints_00002_00002' order represents '0' with '-2047'
2047 -2047 0
c Encoding variable: r_hints_00002_00003 with domain: bool (representing constraint )
c Var 'r_hints_00002_00003' direct represents '0' with '-2048'
c Var 'r_hints_00002_00003' direct represents '1' with '2048'
c Var 'r_hints_00002_00003' order represents '1' with '1'
c Var 'r_hints_00002_00003' order represents '0' with '-2048'
2048 -2048 0
c Encoding variable: r_hints_00002_00004 with domain: bool (representing constraint )
c Var 'r_hints_00002_00004' direct represents '0' with '-2049'
c Var 'r_hints_00002_00004' direct represents '1' with '2049'
c Var 'r_hints_00002_00004' order represents '1' with '1'
c Var 'r_hints_00002_00004' order represents '0' with '-2049'
2049 -2049 0
c Encoding variable: r_hints_00002_00005 with domain: bool (representing constraint )
c Var 'r_hints_00002_00005' direct represents '0' with '-2050'
c Var 'r_hints_00002_00005' direct represents '1' with '2050'
c Var 'r_hints_00002_00005' order represents '1' with '1'
c Var 'r_hints_00002_00005' order represents '0' with '-2050'
2050 -2050 0
c Encoding variable: r_hints_00002_00006 with domain: bool (representing constraint )
c Var 'r_hints_00002_00006' direct represents '0' with '-2051'
c Var 'r_hints_00002_00006' direct represents '1' with '2051'
c Var 'r_hints_00002_00006' order represents '1' with '1'
c Var 'r_hints_00002_00006' order represents '0' with '-2051'
2051 -2051 0
c Encoding variable: r_hints_00002_00007 with domain: bool (representing constraint )
c Var 'r_hints_00002_00007' direct represents '0' with '-2052'
c Var 'r_hints_00002_00007' direct represents '1' with '2052'
c Var 'r_hints_00002_00007' order represents '1' with '1'
c Var 'r_hints_00002_00007' order represents '0' with '-2052'
2052 -2052 0
c Encoding variable: r_hints_00002_00008 with domain: bool (representing constraint )
c Var 'r_hints_00002_00008' direct represents '0' with '-2053'
c Var 'r_hints_00002_00008' direct represents '1' with '2053'
c Var 'r_hints_00002_00008' order represents '1' with '1'
c Var 'r_hints_00002_00008' order represents '0' with '-2053'
2053 -2053 0
c Encoding variable: r_hints_00003_00001 with domain: bool (representing constraint )
c Var 'r_hints_00003_00001' direct represents '0' with '-2054'
c Var 'r_hints_00003_00001' direct represents '1' with '2054'
c Var 'r_hints_00003_00001' order represents '1' with '1'
c Var 'r_hints_00003_00001' order represents '0' with '-2054'
2054 -2054 0
c Encoding variable: r_hints_00003_00002 with domain: bool (representing constraint )
c Var 'r_hints_00003_00002' direct represents '0' with '-2055'
c Var 'r_hints_00003_00002' direct represents '1' with '2055'
c Var 'r_hints_00003_00002' order represents '1' with '1'
c Var 'r_hints_00003_00002' order represents '0' with '-2055'
2055 -2055 0
c Encoding variable: r_hints_00003_00003 with domain: bool (representing constraint )
c Var 'r_hints_00003_00003' direct represents '0' with '-2056'
c Var 'r_hints_00003_00003' direct represents '1' with '2056'
c Var 'r_hints_00003_00003' order represents '1' with '1'
c Var 'r_hints_00003_00003' order represents '0' with '-2056'
2056 -2056 0
c Encoding variable: r_hints_00003_00004 with domain: bool (representing constraint )
c Var 'r_hints_00003_00004' direct represents '0' with '-2057'
c Var 'r_hints_00003_00004' direct represents '1' with '2057'
c Var 'r_hints_00003_00004' order represents '1' with '1'
c Var 'r_hints_00003_00004' order represents '0' with '-2057'
2057 -2057 0
c Encoding variable: r_hints_00003_00005 with domain: bool (representing constraint )
c Var 'r_hints_00003_00005' direct represents '0' with '-2058'
c Var 'r_hints_00003_00005' direct represents '1' with '2058'
c Var 'r_hints_00003_00005' order represents '1' with '1'
c Var 'r_hints_00003_00005' order represents '0' with '-2058'
2058 -2058 0
c Encoding variable: r_hints_00003_00006 with domain: bool (representing constraint )
c Var 'r_hints_00003_00006' direct represents '0' with '-2059'
c Var 'r_hints_00003_00006' direct represents '1' with '2059'
c Var 'r_hints_00003_00006' order represents '1' with '1'
c Var 'r_hints_00003_00006' order represents '0' with '-2059'
2059 -2059 0
c Encoding variable: r_hints_00003_00007 with domain: bool (representing constraint )
c Var 'r_hints_00003_00007' direct represents '0' with '-2060'
c Var 'r_hints_00003_00007' direct represents '1' with '2060'
c Var 'r_hints_00003_00007' order represents '1' with '1'
c Var 'r_hints_00003_00007' order represents '0' with '-2060'
2060 -2060 0
c Encoding variable: r_hints_00003_00008 with domain: bool (representing constraint )
c Var 'r_hints_00003_00008' direct represents '0' with '-2061'
c Var 'r_hints_00003_00008' direct represents '1' with '2061'
c Var 'r_hints_00003_00008' order represents '1' with '1'
c Var 'r_hints_00003_00008' order represents '0' with '-2061'
2061 -2061 0
c Encoding variable: r_hints_00004_00001 with domain: bool (representing constraint )
c Var 'r_hints_00004_00001' direct represents '0' with '-2062'
c Var 'r_hints_00004_00001' direct represents '1' with '2062'
c Var 'r_hints_00004_00001' order represents '1' with '1'
c Var 'r_hints_00004_00001' order represents '0' with '-2062'
2062 -2062 0
c Encoding variable: r_hints_00004_00002 with domain: bool (representing constraint )
c Var 'r_hints_00004_00002' direct represents '0' with '-2063'
c Var 'r_hints_00004_00002' direct represents '1' with '2063'
c Var 'r_hints_00004_00002' order represents '1' with '1'
c Var 'r_hints_00004_00002' order represents '0' with '-2063'
2063 -2063 0
c Encoding variable: r_hints_00004_00003 with domain: bool (representing constraint )
c Var 'r_hints_00004_00003' direct represents '0' with '-2064'
c Var 'r_hints_00004_00003' direct represents '1' with '2064'
c Var 'r_hints_00004_00003' order represents '1' with '1'
c Var 'r_hints_00004_00003' order represents '0' with '-2064'
2064 -2064 0
c Encoding variable: r_hints_00004_00004 with domain: bool (representing constraint )
c Var 'r_hints_00004_00004' direct represents '0' with '-2065'
c Var 'r_hints_00004_00004' direct represents '1' with '2065'
c Var 'r_hints_00004_00004' order represents '1' with '1'
c Var 'r_hints_00004_00004' order represents '0' with '-2065'
2065 -2065 0
c Encoding variable: r_hints_00004_00005 with domain: bool (representing constraint )
c Var 'r_hints_00004_00005' direct represents '0' with '-2066'
c Var 'r_hints_00004_00005' direct represents '1' with '2066'
c Var 'r_hints_00004_00005' order represents '1' with '1'
c Var 'r_hints_00004_00005' order represents '0' with '-2066'
2066 -2066 0
c Encoding variable: r_hints_00004_00006 with domain: bool (representing constraint )
c Var 'r_hints_00004_00006' direct represents '0' with '-2067'
c Var 'r_hints_00004_00006' direct represents '1' with '2067'
c Var 'r_hints_00004_00006' order represents '1' with '1'
c Var 'r_hints_00004_00006' order represents '0' with '-2067'
2067 -2067 0
c Encoding variable: r_hints_00004_00007 with domain: bool (representing constraint )
c Var 'r_hints_00004_00007' direct represents '0' with '-2068'
c Var 'r_hints_00004_00007' direct represents '1' with '2068'
c Var 'r_hints_00004_00007' order represents '1' with '1'
c Var 'r_hints_00004_00007' order represents '0' with '-2068'
2068 -2068 0
c Encoding variable: r_hints_00004_00008 with domain: bool (representing constraint )
c Var 'r_hints_00004_00008' direct represents '0' with '-2069'
c Var 'r_hints_00004_00008' direct represents '1' with '2069'
c Var 'r_hints_00004_00008' order represents '1' with '1'
c Var 'r_hints_00004_00008' order represents '0' with '-2069'
2069 -2069 0
c Encoding variable: r_hints_00005_00001 with domain: bool (representing constraint )
c Var 'r_hints_00005_00001' direct represents '0' with '-2070'
c Var 'r_hints_00005_00001' direct represents '1' with '2070'
c Var 'r_hints_00005_00001' order represents '1' with '1'
c Var 'r_hints_00005_00001' order represents '0' with '-2070'
2070 -2070 0
c Encoding variable: r_hints_00005_00002 with domain: bool (representing constraint )
c Var 'r_hints_00005_00002' direct represents '0' with '-2071'
c Var 'r_hints_00005_00002' direct represents '1' with '2071'
c Var 'r_hints_00005_00002' order represents '1' with '1'
c Var 'r_hints_00005_00002' order represents '0' with '-2071'
2071 -2071 0
c Encoding variable: r_hints_00005_00003 with domain: bool (representing constraint )
c Var 'r_hints_00005_00003' direct represents '0' with '-2072'
c Var 'r_hints_00005_00003' direct represents '1' with '2072'
c Var 'r_hints_00005_00003' order represents '1' with '1'
c Var 'r_hints_00005_00003' order represents '0' with '-2072'
2072 -2072 0
c Encoding variable: r_hints_00005_00004 with domain: bool (representing constraint )
c Var 'r_hints_00005_00004' direct represents '0' with '-2073'
c Var 'r_hints_00005_00004' direct represents '1' with '2073'
c Var 'r_hints_00005_00004' order represents '1' with '1'
c Var 'r_hints_00005_00004' order represents '0' with '-2073'
2073 -2073 0
c Encoding variable: r_hints_00005_00005 with domain: bool (representing constraint )
c Var 'r_hints_00005_00005' direct represents '0' with '-2074'
c Var 'r_hints_00005_00005' direct represents '1' with '2074'
c Var 'r_hints_00005_00005' order represents '1' with '1'
c Var 'r_hints_00005_00005' order represents '0' with '-2074'
2074 -2074 0
c Encoding variable: r_hints_00005_00006 with domain: bool (representing constraint )
c Var 'r_hints_00005_00006' direct represents '0' with '-2075'
c Var 'r_hints_00005_00006' direct represents '1' with '2075'
c Var 'r_hints_00005_00006' order represents '1' with '1'
c Var 'r_hints_00005_00006' order represents '0' with '-2075'
2075 -2075 0
c Encoding variable: r_hints_00005_00007 with domain: bool (representing constraint )
c Var 'r_hints_00005_00007' direct represents '0' with '-2076'
c Var 'r_hints_00005_00007' direct represents '1' with '2076'
c Var 'r_hints_00005_00007' order represents '1' with '1'
c Var 'r_hints_00005_00007' order represents '0' with '-2076'
c Encoding variable: r_hints_00005_00008 with domain: bool (representing constraint )
c Var 'r_hints_00005_00008' direct represents '0' with '-2077'
c Var 'r_hints_00005_00008' direct represents '1' with '2077'
c Var 'r_hints_00005_00008' order represents '1' with '1'
c Var 'r_hints_00005_00008' order represents '0' with '-2077'
2077 -2077 0
c Encoding variable: r_hints_00006_00001 with domain: bool (representing constraint )
c Var 'r_hints_00006_00001' direct represents '0' with '-2078'
c Var 'r_hints_00006_00001' direct represents '1' with '2078'
c Var 'r_hints_00006_00001' order represents '1' with '1'
c Var 'r_hints_00006_00001' order represents '0' with '-2078'
2078 -2078 0
c Encoding variable: r_hints_00006_00002 with domain: bool (representing constraint )
c Var 'r_hints_00006_00002' direct represents '0' with '-2079'
c Var 'r_hints_00006_00002' direct represents '1' with '2079'
c Var 'r_hints_00006_00002' order represents '1' with '1'
c Var 'r_hints_00006_00002' order represents '0' with '-2079'
2079 -2079 0
c Encoding variable: r_hints_00006_00003 with domain: bool (representing constraint )
c Var 'r_hints_00006_00003' direct represents '0' with '-2080'
c Var 'r_hints_00006_00003' direct represents '1' with '2080'
c Var 'r_hints_00006_00003' order represents '1' with '1'
c Var 'r_hints_00006_00003' order represents '0' with '-2080'
2080 -2080 0
c Encoding variable: r_hints_00006_00004 with domain: bool (representing constraint )
c Var 'r_hints_00006_00004' direct represents '0' with '-2081'
c Var 'r_hints_00006_00004' direct represents '1' with '2081'
c Var 'r_hints_00006_00004' order represents '1' with '1'
c Var 'r_hints_00006_00004' order represents '0' with '-2081'
2081 -2081 0
c Encoding variable: r_hints_00006_00005 with domain: bool (representing constraint )
c Var 'r_hints_00006_00005' direct represents '0' with '-2082'
c Var 'r_hints_00006_00005' direct represents '1' with '2082'
c Var 'r_hints_00006_00005' order represents '1' with '1'
c Var 'r_hints_00006_00005' order represents '0' with '-2082'
2082 -2082 0
c Encoding variable: r_hints_00006_00006 with domain: bool (representing constraint )
c Var 'r_hints_00006_00006' direct represents '0' with '-2083'
c Var 'r_hints_00006_00006' direct represents '1' with '2083'
c Var 'r_hints_00006_00006' order represents '1' with '1'
c Var 'r_hints_00006_00006' order represents '0' with '-2083'
2083 -2083 0
c Encoding variable: r_hints_00006_00007 with domain: bool (representing constraint )
c Var 'r_hints_00006_00007' direct represents '0' with '-2084'
c Var 'r_hints_00006_00007' direct represents '1' with '2084'
c Var 'r_hints_00006_00007' order represents '1' with '1'
c Var 'r_hints_00006_00007' order represents '0' with '-2084'
2084 -2084 0
c Encoding variable: r_hints_00006_00008 with domain: bool (representing constraint )
c Var 'r_hints_00006_00008' direct represents '0' with '-2085'
c Var 'r_hints_00006_00008' direct represents '1' with '2085'
c Var 'r_hints_00006_00008' order represents '1' with '1'
c Var 'r_hints_00006_00008' order represents '0' with '-2085'
2085 -2085 0
c Encoding variable: r_hints_00007_00001 with domain: bool (representing constraint )
c Var 'r_hints_00007_00001' direct represents '0' with '-2086'
c Var 'r_hints_00007_00001' direct represents '1' with '2086'
c Var 'r_hints_00007_00001' order represents '1' with '1'
c Var 'r_hints_00007_00001' order represents '0' with '-2086'
2086 -2086 0
c Encoding variable: r_hints_00007_00002 with domain: bool (representing constraint )
c Var 'r_hints_00007_00002' direct represents '0' with '-2087'
c Var 'r_hints_00007_00002' direct represents '1' with '2087'
c Var 'r_hints_00007_00002' order represents '1' with '1'
c Var 'r_hints_00007_00002' order represents '0' with '-2087'
2087 -2087 0
c Encoding variable: r_hints_00007_00003 with domain: bool (representing constraint )
c Var 'r_hints_00007_00003' direct represents '0' with '-2088'
c Var 'r_hints_00007_00003' direct represents '1' with '2088'
c Var 'r_hints_00007_00003' order represents '1' with '1'
c Var 'r_hints_00007_00003' order represents '0' with '-2088'
2088 -2088 0
c Encoding variable: r_hints_00007_00004 with domain: bool (representing constraint )
c Var 'r_hints_00007_00004' direct represents '0' with '-2089'
c Var 'r_hints_00007_00004' direct represents '1' with '2089'
c Var 'r_hints_00007_00004' order represents '1' with '1'
c Var 'r_hints_00007_00004' order represents '0' with '-2089'
2089 -2089 0
c Encoding variable: r_hints_00007_00005 with domain: bool (representing constraint )
c Var 'r_hints_00007_00005' direct represents '0' with '-2090'
c Var 'r_hints_00007_00005' direct represents '1' with '2090'
c Var 'r_hints_00007_00005' order represents '1' with '1'
c Var 'r_hints_00007_00005' order represents '0' with '-2090'
2090 -2090 0
c Encoding variable: r_hints_00007_00006 with domain: bool (representing constraint )
c Var 'r_hints_00007_00006' direct represents '0' with '-2091'
c Var 'r_hints_00007_00006' direct represents '1' with '2091'
c Var 'r_hints_00007_00006' order represents '1' with '1'
c Var 'r_hints_00007_00006' order represents '0' with '-2091'
2091 -2091 0
c Encoding variable: r_hints_00007_00007 with domain: bool (representing constraint )
c Var 'r_hints_00007_00007' direct represents '0' with '-2092'
c Var 'r_hints_00007_00007' direct represents '1' with '2092'
c Var 'r_hints_00007_00007' order represents '1' with '1'
c Var 'r_hints_00007_00007' order represents '0' with '-2092'
2092 -2092 0
c Encoding variable: r_hints_00007_00008 with domain: bool (representing constraint )
c Var 'r_hints_00007_00008' direct represents '0' with '-2093'
c Var 'r_hints_00007_00008' direct represents '1' with '2093'
c Var 'r_hints_00007_00008' order represents '1' with '1'
c Var 'r_hints_00007_00008' order represents '0' with '-2093'
2093 -2093 0
c Encoding variable: r_hints_00008_00001 with domain: bool (representing constraint )
c Var 'r_hints_00008_00001' direct represents '0' with '-2094'
c Var 'r_hints_00008_00001' direct represents '1' with '2094'
c Var 'r_hints_00008_00001' order represents '1' with '1'
c Var 'r_hints_00008_00001' order represents '0' with '-2094'
2094 -2094 0
c Encoding variable: r_hints_00008_00002 with domain: bool (representing constraint )
c Var 'r_hints_00008_00002' direct represents '0' with '-2095'
c Var 'r_hints_00008_00002' direct represents '1' with '2095'
c Var 'r_hints_00008_00002' order represents '1' with '1'
c Var 'r_hints_00008_00002' order represents '0' with '-2095'
2095 -2095 0
c Encoding variable: r_hints_00008_00003 with domain: bool (representing constraint )
c Var 'r_hints_00008_00003' direct represents '0' with '-2096'
c Var 'r_hints_00008_00003' direct represents '1' with '2096'
c Var 'r_hints_00008_00003' order represents '1' with '1'
c Var 'r_hints_00008_00003' order represents '0' with '-2096'
2096 -2096 0
c Encoding variable: r_hints_00008_00004 with domain: bool (representing constraint )
c Var 'r_hints_00008_00004' direct represents '0' with '-2097'
c Var 'r_hints_00008_00004' direct represents '1' with '2097'
c Var 'r_hints_00008_00004' order represents '1' with '1'
c Var 'r_hints_00008_00004' order represents '0' with '-2097'
2097 -2097 0
c Encoding variable: r_hints_00008_00005 with domain: bool (representing constraint )
c Var 'r_hints_00008_00005' direct represents '0' with '-2098'
c Var 'r_hints_00008_00005' direct represents '1' with '2098'
c Var 'r_hints_00008_00005' order represents '1' with '1'
c Var 'r_hints_00008_00005' order represents '0' with '-2098'
2098 -2098 0
c Encoding variable: r_hints_00008_00006 with domain: bool (representing constraint )
c Var 'r_hints_00008_00006' direct represents '0' with '-2099'
c Var 'r_hints_00008_00006' direct represents '1' with '2099'
c Var 'r_hints_00008_00006' order represents '1' with '1'
c Var 'r_hints_00008_00006' order represents '0' with '-2099'
2099 -2099 0
c Encoding variable: r_hints_00008_00007 with domain: bool (representing constraint )
c Var 'r_hints_00008_00007' direct represents '0' with '-2100'
c Var 'r_hints_00008_00007' direct represents '1' with '2100'
c Var 'r_hints_00008_00007' order represents '1' with '1'
c Var 'r_hints_00008_00007' order represents '0' with '-2100'
2100 -2100 0
c Encoding variable: r_hints_00008_00008 with domain: bool (representing constraint )
c Var 'r_hints_00008_00008' direct represents '0' with '-2101'
c Var 'r_hints_00008_00008' direct represents '1' with '2101'
c Var 'r_hints_00008_00008' order represents '1' with '1'
c Var 'r_hints_00008_00008' order represents '0' with '-2101'
2101 -2101 0
c Encoding variable: r_ship_sizes_00001_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00001' direct represents '0' with '-2102'
c Var 'r_ship_sizes_00001_00001' direct represents '1' with '2102'
c Var 'r_ship_sizes_00001_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00001' order represents '0' with '-2102'
c Encoding variable: r_ship_sizes_00001_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00002' direct represents '0' with '-2103'
c Var 'r_ship_sizes_00001_00002' direct represents '1' with '2103'
c Var 'r_ship_sizes_00001_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00002' order represents '0' with '-2103'
c Encoding variable: r_ship_sizes_00001_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00003' direct represents '0' with '-2104'
c Var 'r_ship_sizes_00001_00003' direct represents '1' with '2104'
c Var 'r_ship_sizes_00001_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00003' order represents '0' with '-2104'
c Encoding variable: r_ship_sizes_00001_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00004' direct represents '0' with '-2105'
c Var 'r_ship_sizes_00001_00004' direct represents '1' with '2105'
c Var 'r_ship_sizes_00001_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00004' order represents '0' with '-2105'
c Encoding variable: r_ship_sizes_00001_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00005' direct represents '0' with '-2106'
c Var 'r_ship_sizes_00001_00005' direct represents '1' with '2106'
c Var 'r_ship_sizes_00001_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00005' order represents '0' with '-2106'
c Encoding variable: r_ship_sizes_00001_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00006' direct represents '0' with '-2107'
c Var 'r_ship_sizes_00001_00006' direct represents '1' with '2107'
c Var 'r_ship_sizes_00001_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00006' order represents '0' with '-2107'
c Encoding variable: r_ship_sizes_00001_00007 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00007' direct represents '0' with '-2108'
c Var 'r_ship_sizes_00001_00007' direct represents '1' with '2108'
c Var 'r_ship_sizes_00001_00007' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00007' order represents '0' with '-2108'
c Encoding variable: r_ship_sizes_00001_00008 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00001_00008' direct represents '0' with '-2109'
c Var 'r_ship_sizes_00001_00008' direct represents '1' with '2109'
c Var 'r_ship_sizes_00001_00008' order represents '1' with '1'
c Var 'r_ship_sizes_00001_00008' order represents '0' with '-2109'
c Encoding variable: r_ship_sizes_00002_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00001' direct represents '0' with '-2110'
c Var 'r_ship_sizes_00002_00001' direct represents '1' with '2110'
c Var 'r_ship_sizes_00002_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00001' order represents '0' with '-2110'
c Encoding variable: r_ship_sizes_00002_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00002' direct represents '0' with '-2111'
c Var 'r_ship_sizes_00002_00002' direct represents '1' with '2111'
c Var 'r_ship_sizes_00002_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00002' order represents '0' with '-2111'
c Encoding variable: r_ship_sizes_00002_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00003' direct represents '0' with '-2112'
c Var 'r_ship_sizes_00002_00003' direct represents '1' with '2112'
c Var 'r_ship_sizes_00002_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00003' order represents '0' with '-2112'
c Encoding variable: r_ship_sizes_00002_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00004' direct represents '0' with '-2113'
c Var 'r_ship_sizes_00002_00004' direct represents '1' with '2113'
c Var 'r_ship_sizes_00002_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00004' order represents '0' with '-2113'
c Encoding variable: r_ship_sizes_00002_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00005' direct represents '0' with '-2114'
c Var 'r_ship_sizes_00002_00005' direct represents '1' with '2114'
c Var 'r_ship_sizes_00002_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00005' order represents '0' with '-2114'
c Encoding variable: r_ship_sizes_00002_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00006' direct represents '0' with '-2115'
c Var 'r_ship_sizes_00002_00006' direct represents '1' with '2115'
c Var 'r_ship_sizes_00002_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00006' order represents '0' with '-2115'
c Encoding variable: r_ship_sizes_00002_00007 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00007' direct represents '0' with '-2116'
c Var 'r_ship_sizes_00002_00007' direct represents '1' with '2116'
c Var 'r_ship_sizes_00002_00007' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00007' order represents '0' with '-2116'
c Encoding variable: r_ship_sizes_00002_00008 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00002_00008' direct represents '0' with '-2117'
c Var 'r_ship_sizes_00002_00008' direct represents '1' with '2117'
c Var 'r_ship_sizes_00002_00008' order represents '1' with '1'
c Var 'r_ship_sizes_00002_00008' order represents '0' with '-2117'
c Encoding variable: r_ship_sizes_00003_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00001' direct represents '0' with '-2118'
c Var 'r_ship_sizes_00003_00001' direct represents '1' with '2118'
c Var 'r_ship_sizes_00003_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00001' order represents '0' with '-2118'
c Encoding variable: r_ship_sizes_00003_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00002' direct represents '0' with '-2119'
c Var 'r_ship_sizes_00003_00002' direct represents '1' with '2119'
c Var 'r_ship_sizes_00003_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00002' order represents '0' with '-2119'
c Encoding variable: r_ship_sizes_00003_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00003' direct represents '0' with '-2120'
c Var 'r_ship_sizes_00003_00003' direct represents '1' with '2120'
c Var 'r_ship_sizes_00003_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00003' order represents '0' with '-2120'
c Encoding variable: r_ship_sizes_00003_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00004' direct represents '0' with '-2121'
c Var 'r_ship_sizes_00003_00004' direct represents '1' with '2121'
c Var 'r_ship_sizes_00003_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00004' order represents '0' with '-2121'
c Encoding variable: r_ship_sizes_00003_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00005' direct represents '0' with '-2122'
c Var 'r_ship_sizes_00003_00005' direct represents '1' with '2122'
c Var 'r_ship_sizes_00003_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00005' order represents '0' with '-2122'
c Encoding variable: r_ship_sizes_00003_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00006' direct represents '0' with '-2123'
c Var 'r_ship_sizes_00003_00006' direct represents '1' with '2123'
c Var 'r_ship_sizes_00003_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00006' order represents '0' with '-2123'
c Encoding variable: r_ship_sizes_00003_00007 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00007' direct represents '0' with '-2124'
c Var 'r_ship_sizes_00003_00007' direct represents '1' with '2124'
c Var 'r_ship_sizes_00003_00007' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00007' order represents '0' with '-2124'
c Encoding variable: r_ship_sizes_00003_00008 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00003_00008' direct represents '0' with '-2125'
c Var 'r_ship_sizes_00003_00008' direct represents '1' with '2125'
c Var 'r_ship_sizes_00003_00008' order represents '1' with '1'
c Var 'r_ship_sizes_00003_00008' order represents '0' with '-2125'
c Encoding variable: r_ship_sizes_00004_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00001' direct represents '0' with '-2126'
c Var 'r_ship_sizes_00004_00001' direct represents '1' with '2126'
c Var 'r_ship_sizes_00004_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00001' order represents '0' with '-2126'
c Encoding variable: r_ship_sizes_00004_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00002' direct represents '0' with '-2127'
c Var 'r_ship_sizes_00004_00002' direct represents '1' with '2127'
c Var 'r_ship_sizes_00004_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00002' order represents '0' with '-2127'
c Encoding variable: r_ship_sizes_00004_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00003' direct represents '0' with '-2128'
c Var 'r_ship_sizes_00004_00003' direct represents '1' with '2128'
c Var 'r_ship_sizes_00004_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00003' order represents '0' with '-2128'
c Encoding variable: r_ship_sizes_00004_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00004' direct represents '0' with '-2129'
c Var 'r_ship_sizes_00004_00004' direct represents '1' with '2129'
c Var 'r_ship_sizes_00004_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00004' order represents '0' with '-2129'
c Encoding variable: r_ship_sizes_00004_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00005' direct represents '0' with '-2130'
c Var 'r_ship_sizes_00004_00005' direct represents '1' with '2130'
c Var 'r_ship_sizes_00004_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00005' order represents '0' with '-2130'
c Encoding variable: r_ship_sizes_00004_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00006' direct represents '0' with '-2131'
c Var 'r_ship_sizes_00004_00006' direct represents '1' with '2131'
c Var 'r_ship_sizes_00004_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00006' order represents '0' with '-2131'
c Encoding variable: r_ship_sizes_00004_00007 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00007' direct represents '0' with '-2132'
c Var 'r_ship_sizes_00004_00007' direct represents '1' with '2132'
c Var 'r_ship_sizes_00004_00007' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00007' order represents '0' with '-2132'
c Encoding variable: r_ship_sizes_00004_00008 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00004_00008' direct represents '0' with '-2133'
c Var 'r_ship_sizes_00004_00008' direct represents '1' with '2133'
c Var 'r_ship_sizes_00004_00008' order represents '1' with '1'
c Var 'r_ship_sizes_00004_00008' order represents '0' with '-2133'
c Encoding variable: r_ship_sizes_00005_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00001' direct represents '0' with '-2134'
c Var 'r_ship_sizes_00005_00001' direct represents '1' with '2134'
c Var 'r_ship_sizes_00005_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00001' order represents '0' with '-2134'
c Encoding variable: r_ship_sizes_00005_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00002' direct represents '0' with '-2135'
c Var 'r_ship_sizes_00005_00002' direct represents '1' with '2135'
c Var 'r_ship_sizes_00005_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00002' order represents '0' with '-2135'
c Encoding variable: r_ship_sizes_00005_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00003' direct represents '0' with '-2136'
c Var 'r_ship_sizes_00005_00003' direct represents '1' with '2136'
c Var 'r_ship_sizes_00005_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00003' order represents '0' with '-2136'
c Encoding variable: r_ship_sizes_00005_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00004' direct represents '0' with '-2137'
c Var 'r_ship_sizes_00005_00004' direct represents '1' with '2137'
c Var 'r_ship_sizes_00005_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00004' order represents '0' with '-2137'
c Encoding variable: r_ship_sizes_00005_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00005' direct represents '0' with '-2138'
c Var 'r_ship_sizes_00005_00005' direct represents '1' with '2138'
c Var 'r_ship_sizes_00005_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00005' order represents '0' with '-2138'
c Encoding variable: r_ship_sizes_00005_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00006' direct represents '0' with '-2139'
c Var 'r_ship_sizes_00005_00006' direct represents '1' with '2139'
c Var 'r_ship_sizes_00005_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00006' order represents '0' with '-2139'
c Encoding variable: r_ship_sizes_00005_00007 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00007' direct represents '0' with '-2140'
c Var 'r_ship_sizes_00005_00007' direct represents '1' with '2140'
c Var 'r_ship_sizes_00005_00007' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00007' order represents '0' with '-2140'
c Encoding variable: r_ship_sizes_00005_00008 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00005_00008' direct represents '0' with '-2141'
c Var 'r_ship_sizes_00005_00008' direct represents '1' with '2141'
c Var 'r_ship_sizes_00005_00008' order represents '1' with '1'
c Var 'r_ship_sizes_00005_00008' order represents '0' with '-2141'
c Encoding variable: r_ship_sizes_00006_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00001' direct represents '0' with '-2142'
c Var 'r_ship_sizes_00006_00001' direct represents '1' with '2142'
c Var 'r_ship_sizes_00006_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00001' order represents '0' with '-2142'
c Encoding variable: r_ship_sizes_00006_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00002' direct represents '0' with '-2143'
c Var 'r_ship_sizes_00006_00002' direct represents '1' with '2143'
c Var 'r_ship_sizes_00006_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00002' order represents '0' with '-2143'
c Encoding variable: r_ship_sizes_00006_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00003' direct represents '0' with '-2144'
c Var 'r_ship_sizes_00006_00003' direct represents '1' with '2144'
c Var 'r_ship_sizes_00006_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00003' order represents '0' with '-2144'
c Encoding variable: r_ship_sizes_00006_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00004' direct represents '0' with '-2145'
c Var 'r_ship_sizes_00006_00004' direct represents '1' with '2145'
c Var 'r_ship_sizes_00006_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00004' order represents '0' with '-2145'
c Encoding variable: r_ship_sizes_00006_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00005' direct represents '0' with '-2146'
c Var 'r_ship_sizes_00006_00005' direct represents '1' with '2146'
c Var 'r_ship_sizes_00006_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00005' order represents '0' with '-2146'
c Encoding variable: r_ship_sizes_00006_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00006' direct represents '0' with '-2147'
c Var 'r_ship_sizes_00006_00006' direct represents '1' with '2147'
c Var 'r_ship_sizes_00006_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00006' order represents '0' with '-2147'
c Encoding variable: r_ship_sizes_00006_00007 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00007' direct represents '0' with '-2148'
c Var 'r_ship_sizes_00006_00007' direct represents '1' with '2148'
c Var 'r_ship_sizes_00006_00007' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00007' order represents '0' with '-2148'
c Encoding variable: r_ship_sizes_00006_00008 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00006_00008' direct represents '0' with '-2149'
c Var 'r_ship_sizes_00006_00008' direct represents '1' with '2149'
c Var 'r_ship_sizes_00006_00008' order represents '1' with '1'
c Var 'r_ship_sizes_00006_00008' order represents '0' with '-2149'
c Encoding variable: r_ship_sizes_00007_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00007_00001' direct represents '0' with '-2150'
c Var 'r_ship_sizes_00007_00001' direct represents '1' with '2150'
c Var 'r_ship_sizes_00007_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00007_00001' order represents '0' with '-2150'
c Encoding variable: r_ship_sizes_00007_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00007_00002' direct represents '0' with '-2151'
c Var 'r_ship_sizes_00007_00002' direct represents '1' with '2151'
c Var 'r_ship_sizes_00007_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00007_00002' order represents '0' with '-2151'
c Encoding variable: r_ship_sizes_00007_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00007_00003' direct represents '0' with '-2152'
c Var 'r_ship_sizes_00007_00003' direct represents '1' with '2152'
c Var 'r_ship_sizes_00007_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00007_00003' order represents '0' with '-2152'
c Encoding variable: r_ship_sizes_00007_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00007_00004' direct represents '0' with '-2153'
c Var 'r_ship_sizes_00007_00004' direct represents '1' with '2153'
c Var 'r_ship_sizes_00007_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00007_00004' order represents '0' with '-2153'
c Encoding variable: r_ship_sizes_00007_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00007_00005' direct represents '0' with '-2154'
c Var 'r_ship_sizes_00007_00005' direct represents '1' with '2154'
c Var 'r_ship_sizes_00007_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00007_00005' order represents '0' with '-2154'
c Encoding variable: r_ship_sizes_00007_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00007_00006' direct represents '0' with '-2155'
c Var 'r_ship_sizes_00007_00006' direct represents '1' with '2155'
c Var 'r_ship_sizes_00007_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00007_00006' order represents '0' with '-2155'
c Encoding variable: r_ship_sizes_00007_00007 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00007_00007' direct represents '0' with '-2156'
c Var 'r_ship_sizes_00007_00007' direct represents '1' with '2156'
c Var 'r_ship_sizes_00007_00007' order represents '1' with '1'
c Var 'r_ship_sizes_00007_00007' order represents '0' with '-2156'
c Encoding variable: r_ship_sizes_00007_00008 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00007_00008' direct represents '0' with '-2157'
c Var 'r_ship_sizes_00007_00008' direct represents '1' with '2157'
c Var 'r_ship_sizes_00007_00008' order represents '1' with '1'
c Var 'r_ship_sizes_00007_00008' order represents '0' with '-2157'
c Encoding variable: r_ship_sizes_00008_00001 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00008_00001' direct represents '0' with '-2158'
c Var 'r_ship_sizes_00008_00001' direct represents '1' with '2158'
c Var 'r_ship_sizes_00008_00001' order represents '1' with '1'
c Var 'r_ship_sizes_00008_00001' order represents '0' with '-2158'
c Encoding variable: r_ship_sizes_00008_00002 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00008_00002' direct represents '0' with '-2159'
c Var 'r_ship_sizes_00008_00002' direct represents '1' with '2159'
c Var 'r_ship_sizes_00008_00002' order represents '1' with '1'
c Var 'r_ship_sizes_00008_00002' order represents '0' with '-2159'
c Encoding variable: r_ship_sizes_00008_00003 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00008_00003' direct represents '0' with '-2160'
c Var 'r_ship_sizes_00008_00003' direct represents '1' with '2160'
c Var 'r_ship_sizes_00008_00003' order represents '1' with '1'
c Var 'r_ship_sizes_00008_00003' order represents '0' with '-2160'
c Encoding variable: r_ship_sizes_00008_00004 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00008_00004' direct represents '0' with '-2161'
c Var 'r_ship_sizes_00008_00004' direct represents '1' with '2161'
c Var 'r_ship_sizes_00008_00004' order represents '1' with '1'
c Var 'r_ship_sizes_00008_00004' order represents '0' with '-2161'
c Encoding variable: r_ship_sizes_00008_00005 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00008_00005' direct represents '0' with '-2162'
c Var 'r_ship_sizes_00008_00005' direct represents '1' with '2162'
c Var 'r_ship_sizes_00008_00005' order represents '1' with '1'
c Var 'r_ship_sizes_00008_00005' order represents '0' with '-2162'
c Encoding variable: r_ship_sizes_00008_00006 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00008_00006' direct represents '0' with '-2163'
c Var 'r_ship_sizes_00008_00006' direct represents '1' with '2163'
c Var 'r_ship_sizes_00008_00006' order represents '1' with '1'
c Var 'r_ship_sizes_00008_00006' order represents '0' with '-2163'
c Encoding variable: r_ship_sizes_00008_00007 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00008_00007' direct represents '0' with '-2164'
c Var 'r_ship_sizes_00008_00007' direct represents '1' with '2164'
c Var 'r_ship_sizes_00008_00007' order represents '1' with '1'
c Var 'r_ship_sizes_00008_00007' order represents '0' with '-2164'
c Encoding variable: r_ship_sizes_00008_00008 with domain: bool (representing constraint )
c Var 'r_ship_sizes_00008_00008' direct represents '0' with '-2165'
c Var 'r_ship_sizes_00008_00008' direct represents '1' with '2165'
c Var 'r_ship_sizes_00008_00008' order represents '1' with '1'
c Var 'r_ship_sizes_00008_00008' order represents '0' with '-2165'
c Encoding variable: aux1 with domain: bool (representing constraint ((64 - num_occupied_by_types_00001 - num_occupied_by_types_00002 - num_occupied_by_types_00003 - num_occupied_by_types_00004)=tv=num_occupied_by_types_00000))
c Var 'aux1' direct represents '0' with '-2166'
c Var 'aux1' direct represents '1' with '2166'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-2166'
c Encoding variable: aux2 with domain: bool (representing constraint ((2<=agrid_00005_00007) /\ (!sij_00004_00007) /\ sij_00006_00007 /\ (!sij_00005_00006) /\ (!sij_00005_00008)))
c Var 'aux2' direct represents '0' with '-2167'
c Var 'aux2' direct represents '1' with '2167'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-2167'
c Encoding variable: aux3 with domain: bool (representing constraint ((sij_00001_00001 + sij_00001_00002 + sij_00001_00003 + sij_00001_00004 + sij_00001_00005 + sij_00001_00006 + sij_00001_00007 + sij_00001_00008)=tv=2))
c Var 'aux3' direct represents '0' with '-2168'
c Var 'aux3' direct represents '1' with '2168'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-2168'
c Encoding variable: aux4 with domain: bool (representing constraint ((sij_00002_00001 + sij_00002_00002 + sij_00002_00003 + sij_00002_00004 + sij_00002_00005 + sij_00002_00006 + sij_00002_00007 + sij_00002_00008)=tv=4))
c Var 'aux4' direct represents '0' with '-2169'
c Var 'aux4' direct represents '1' with '2169'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-2169'
c Encoding variable: aux5 with domain: bool (representing constraint ((sij_00003_00001 + sij_00003_00002 + sij_00003_00003 + sij_00003_00004 + sij_00003_00005 + sij_00003_00006 + sij_00003_00007 + sij_00003_00008)=tv=2))
c Var 'aux5' direct represents '0' with '-2170'
c Var 'aux5' direct represents '1' with '2170'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-2170'
c Encoding variable: aux6 with domain: bool (representing constraint ((sij_00004_00001 + sij_00004_00002 + sij_00004_00003 + sij_00004_00004 + sij_00004_00005 + sij_00004_00006 + sij_00004_00007 + sij_00004_00008)=tv=3))
c Var 'aux6' direct represents '0' with '-2171'
c Var 'aux6' direct represents '1' with '2171'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-2171'
c Encoding variable: aux7 with domain: bool (representing constraint ((sij_00005_00001 + sij_00005_00002 + sij_00005_00003 + sij_00005_00004 + sij_00005_00005 + sij_00005_00006 + sij_00005_00007 + sij_00005_00008)=tv=2))
c Var 'aux7' direct represents '0' with '-2172'
c Var 'aux7' direct represents '1' with '2172'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-2172'
c Encoding variable: aux8 with domain: bool (representing constraint ((sij_00006_00001 + sij_00006_00002 + sij_00006_00003 + sij_00006_00004 + sij_00006_00005 + sij_00006_00006 + sij_00006_00007 + sij_00006_00008)=tv=1))
c Var 'aux8' direct represents '0' with '-2173'
c Var 'aux8' direct represents '1' with '2173'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-2173'
c Encoding variable: aux9 with domain: bool (representing constraint ((sij_00007_00001 + sij_00007_00002 + sij_00007_00003 + sij_00007_00004 + sij_00007_00005 + sij_00007_00006 + sij_00007_00007 + sij_00007_00008)=tv=4))
c Var 'aux9' direct represents '0' with '-2174'
c Var 'aux9' direct represents '1' with '2174'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-2174'
c Encoding variable: aux10 with domain: bool (representing constraint ((sij_00008_00001 + sij_00008_00002 + sij_00008_00003 + sij_00008_00004 + sij_00008_00005 + sij_00008_00006 + sij_00008_00007 + sij_00008_00008)=tv=2))
c Var 'aux10' direct represents '0' with '-2175'
c Var 'aux10' direct represents '1' with '2175'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-2175'
c Encoding variable: aux11 with domain: bool (representing constraint ((sij_00002_00001 + sij_00007_00001 + sij_00003_00001 + sij_00008_00001 + sij_00004_00001 + sij_00005_00001 + sij_00001_00001 + sij_00006_00001)=tv=5))
c Var 'aux11' direct represents '0' with '-2176'
c Var 'aux11' direct represents '1' with '2176'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-2176'
c Encoding variable: aux12 with domain: bool (representing constraint ((sij_00002_00002 + sij_00007_00002 + sij_00003_00002 + sij_00008_00002 + sij_00004_00002 + sij_00005_00002 + sij_00001_00002 + sij_00006_00002)=tv=0))
c Var 'aux12' direct represents '0' with '-2177'
c Var 'aux12' direct represents '1' with '2177'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-2177'
c Encoding variable: aux13 with domain: bool (representing constraint ((sij_00002_00003 + sij_00007_00003 + sij_00003_00003 + sij_00008_00003 + sij_00004_00003 + sij_00005_00003 + sij_00001_00003 + sij_00006_00003)=tv=5))
c Var 'aux13' direct represents '0' with '-2178'
c Var 'aux13' direct represents '1' with '2178'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-2178'
c Encoding variable: aux14 with domain: bool (representing constraint ((sij_00002_00004 + sij_00007_00004 + sij_00003_00004 + sij_00008_00004 + sij_00004_00004 + sij_00005_00004 + sij_00001_00004 + sij_00006_00004)=tv=1))
c Var 'aux14' direct represents '0' with '-2179'
c Var 'aux14' direct represents '1' with '2179'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-2179'
c Encoding variable: aux15 with domain: bool (representing constraint ((sij_00002_00005 + sij_00007_00005 + sij_00003_00005 + sij_00008_00005 + sij_00004_00005 + sij_00005_00005 + sij_00001_00005 + sij_00006_00005)=tv=2))
c Var 'aux15' direct represents '0' with '-2180'
c Var 'aux15' direct represents '1' with '2180'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-2180'
c Encoding variable: aux16 with domain: bool (representing constraint ((sij_00002_00006 + sij_00007_00006 + sij_00003_00006 + sij_00008_00006 + sij_00004_00006 + sij_00005_00006 + sij_00001_00006 + sij_00006_00006)=tv=1))
c Var 'aux16' direct represents '0' with '-2181'
c Var 'aux16' direct represents '1' with '2181'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-2181'
c Encoding variable: aux17 with domain: bool (representing constraint ((sij_00002_00007 + sij_00007_00007 + sij_00003_00007 + sij_00008_00007 + sij_00004_00007 + sij_00005_00007 + sij_00001_00007 + sij_00006_00007)=tv=2))
c Var 'aux17' direct represents '0' with '-2182'
c Var 'aux17' direct represents '1' with '2182'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-2182'
c Encoding variable: aux18 with domain: bool (representing constraint ((sij_00002_00008 + sij_00007_00008 + sij_00003_00008 + sij_00008_00008 + sij_00004_00008 + sij_00005_00008 + sij_00001_00008 + sij_00006_00008)=tv=4))
c Var 'aux18' direct represents '0' with '-2183'
c Var 'aux18' direct represents '1' with '2183'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-2183'
c Encoding variable: aux19 with domain: bool (representing constraint (sij_00001_00001 -> (!sij_00002_00002)))
c Var 'aux19' direct represents '0' with '-2184'
c Var 'aux19' direct represents '1' with '2184'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-2184'
c Encoding variable: aux20 with domain: bool (representing constraint (sij_00001_00001 -> (!sij_00002_00000)))
c Var 'aux20' direct represents '0' with '-2185'
c Var 'aux20' direct represents '1' with '2185'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-2185'
c Encoding variable: aux21 with domain: bool (representing constraint (sij_00001_00001 -> (!sij_00000_00000)))
c Var 'aux21' direct represents '0' with '-2186'
c Var 'aux21' direct represents '1' with '2186'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-2186'
c Encoding variable: aux22 with domain: bool (representing constraint (sij_00001_00001 -> (!sij_00000_00002)))
c Var 'aux22' direct represents '0' with '-2187'
c Var 'aux22' direct represents '1' with '2187'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-2187'
c Encoding variable: aux23 with domain: bool (representing constraint (sij_00002_00001 -> (!sij_00003_00002)))
c Var 'aux23' direct represents '0' with '-2188'
c Var 'aux23' direct represents '1' with '2188'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-2188'
c Encoding variable: aux24 with domain: bool (representing constraint (sij_00002_00001 -> (!sij_00003_00000)))
c Var 'aux24' direct represents '0' with '-2189'
c Var 'aux24' direct represents '1' with '2189'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-2189'
c Encoding variable: aux25 with domain: bool (representing constraint (sij_00002_00001 -> (!sij_00001_00000)))
c Var 'aux25' direct represents '0' with '-2190'
c Var 'aux25' direct represents '1' with '2190'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-2190'
c Encoding variable: aux26 with domain: bool (representing constraint (sij_00002_00001 -> (!sij_00001_00002)))
c Var 'aux26' direct represents '0' with '-2191'
c Var 'aux26' direct represents '1' with '2191'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-2191'
c Encoding variable: aux27 with domain: bool (representing constraint (sij_00003_00001 -> (!sij_00004_00002)))
c Var 'aux27' direct represents '0' with '-2192'
c Var 'aux27' direct represents '1' with '2192'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-2192'
c Encoding variable: aux28 with domain: bool (representing constraint (sij_00003_00001 -> (!sij_00004_00000)))
c Var 'aux28' direct represents '0' with '-2193'
c Var 'aux28' direct represents '1' with '2193'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-2193'
c Encoding variable: aux29 with domain: bool (representing constraint (sij_00003_00001 -> (!sij_00002_00000)))
c Var 'aux29' direct represents '0' with '-2194'
c Var 'aux29' direct represents '1' with '2194'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-2194'
c Encoding variable: aux30 with domain: bool (representing constraint (sij_00003_00001 -> (!sij_00002_00002)))
c Var 'aux30' direct represents '0' with '-2195'
c Var 'aux30' direct represents '1' with '2195'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-2195'
c Encoding variable: aux31 with domain: bool (representing constraint (sij_00004_00001 -> (!sij_00005_00002)))
c Var 'aux31' direct represents '0' with '-2196'
c Var 'aux31' direct represents '1' with '2196'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-2196'
c Encoding variable: aux32 with domain: bool (representing constraint (sij_00004_00001 -> (!sij_00005_00000)))
c Var 'aux32' direct represents '0' with '-2197'
c Var 'aux32' direct represents '1' with '2197'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-2197'
c Encoding variable: aux33 with domain: bool (representing constraint (sij_00004_00001 -> (!sij_00003_00000)))
c Var 'aux33' direct represents '0' with '-2198'
c Var 'aux33' direct represents '1' with '2198'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-2198'
c Encoding variable: aux34 with domain: bool (representing constraint (sij_00004_00001 -> (!sij_00003_00002)))
c Var 'aux34' direct represents '0' with '-2199'
c Var 'aux34' direct represents '1' with '2199'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-2199'
c Encoding variable: aux35 with domain: bool (representing constraint (sij_00005_00001 -> (!sij_00006_00002)))
c Var 'aux35' direct represents '0' with '-2200'
c Var 'aux35' direct represents '1' with '2200'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-2200'
c Encoding variable: aux36 with domain: bool (representing constraint (sij_00005_00001 -> (!sij_00006_00000)))
c Var 'aux36' direct represents '0' with '-2201'
c Var 'aux36' direct represents '1' with '2201'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-2201'
c Encoding variable: aux37 with domain: bool (representing constraint (sij_00005_00001 -> (!sij_00004_00000)))
c Var 'aux37' direct represents '0' with '-2202'
c Var 'aux37' direct represents '1' with '2202'
c Var 'aux37' order represents '1' with '1'
c Var 'aux37' order represents '0' with '-2202'
c Encoding variable: aux38 with domain: bool (representing constraint (sij_00005_00001 -> (!sij_00004_00002)))
c Var 'aux38' direct represents '0' with '-2203'
c Var 'aux38' direct represents '1' with '2203'
c Var 'aux38' order represents '1' with '1'
c Var 'aux38' order represents '0' with '-2203'
c Encoding variable: aux39 with domain: bool (representing constraint (sij_00006_00001 -> (!sij_00007_00002)))
c Var 'aux39' direct represents '0' with '-2204'
c Var 'aux39' direct represents '1' with '2204'
c Var 'aux39' order represents '1' with '1'
c Var 'aux39' order represents '0' with '-2204'
c Encoding variable: aux40 with domain: bool (representing constraint (sij_00006_00001 -> (!sij_00007_00000)))
c Var 'aux40' direct represents '0' with '-2205'
c Var 'aux40' direct represents '1' with '2205'
c Var 'aux40' order represents '1' with '1'
c Var 'aux40' order represents '0' with '-2205'
c Encoding variable: aux41 with domain: bool (representing constraint (sij_00006_00001 -> (!sij_00005_00000)))
c Var 'aux41' direct represents '0' with '-2206'
c Var 'aux41' direct represents '1' with '2206'
c Var 'aux41' order represents '1' with '1'
c Var 'aux41' order represents '0' with '-2206'
c Encoding variable: aux42 with domain: bool (representing constraint (sij_00006_00001 -> (!sij_00005_00002)))
c Var 'aux42' direct represents '0' with '-2207'
c Var 'aux42' direct represents '1' with '2207'
c Var 'aux42' order represents '1' with '1'
c Var 'aux42' order represents '0' with '-2207'
c Encoding variable: aux43 with domain: bool (representing constraint (sij_00007_00001 -> (!sij_00008_00002)))
c Var 'aux43' direct represents '0' with '-2208'
c Var 'aux43' direct represents '1' with '2208'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-2208'
c Encoding variable: aux44 with domain: bool (representing constraint (sij_00007_00001 -> (!sij_00008_00000)))
c Var 'aux44' direct represents '0' with '-2209'
c Var 'aux44' direct represents '1' with '2209'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-2209'
c Encoding variable: aux45 with domain: bool (representing constraint (sij_00007_00001 -> (!sij_00006_00000)))
c Var 'aux45' direct represents '0' with '-2210'
c Var 'aux45' direct represents '1' with '2210'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-2210'
c Encoding variable: aux46 with domain: bool (representing constraint (sij_00007_00001 -> (!sij_00006_00002)))
c Var 'aux46' direct represents '0' with '-2211'
c Var 'aux46' direct represents '1' with '2211'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-2211'
c Encoding variable: aux47 with domain: bool (representing constraint (sij_00008_00001 -> (!sij_00009_00002)))
c Var 'aux47' direct represents '0' with '-2212'
c Var 'aux47' direct represents '1' with '2212'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-2212'
c Encoding variable: aux48 with domain: bool (representing constraint (sij_00008_00001 -> (!sij_00009_00000)))
c Var 'aux48' direct represents '0' with '-2213'
c Var 'aux48' direct represents '1' with '2213'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-2213'
c Encoding variable: aux49 with domain: bool (representing constraint (sij_00008_00001 -> (!sij_00007_00000)))
c Var 'aux49' direct represents '0' with '-2214'
c Var 'aux49' direct represents '1' with '2214'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-2214'
c Encoding variable: aux50 with domain: bool (representing constraint (sij_00008_00001 -> (!sij_00007_00002)))
c Var 'aux50' direct represents '0' with '-2215'
c Var 'aux50' direct represents '1' with '2215'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-2215'
c Encoding variable: aux51 with domain: bool (representing constraint (sij_00001_00002 -> (!sij_00002_00003)))
c Var 'aux51' direct represents '0' with '-2216'
c Var 'aux51' direct represents '1' with '2216'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-2216'
c Encoding variable: aux52 with domain: bool (representing constraint (sij_00001_00002 -> (!sij_00002_00001)))
c Var 'aux52' direct represents '0' with '-2217'
c Var 'aux52' direct represents '1' with '2217'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-2217'
c Encoding variable: aux53 with domain: bool (representing constraint (sij_00001_00002 -> (!sij_00000_00001)))
c Var 'aux53' direct represents '0' with '-2218'
c Var 'aux53' direct represents '1' with '2218'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-2218'
c Encoding variable: aux54 with domain: bool (representing constraint (sij_00001_00002 -> (!sij_00000_00003)))
c Var 'aux54' direct represents '0' with '-2219'
c Var 'aux54' direct represents '1' with '2219'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-2219'
c Encoding variable: aux55 with domain: bool (representing constraint (sij_00002_00002 -> (!sij_00003_00003)))
c Var 'aux55' direct represents '0' with '-2220'
c Var 'aux55' direct represents '1' with '2220'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-2220'
c Encoding variable: aux56 with domain: bool (representing constraint (sij_00002_00002 -> (!sij_00003_00001)))
c Var 'aux56' direct represents '0' with '-2221'
c Var 'aux56' direct represents '1' with '2221'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-2221'
c Encoding variable: aux57 with domain: bool (representing constraint (sij_00002_00002 -> (!sij_00001_00001)))
c Var 'aux57' direct represents '0' with '-2222'
c Var 'aux57' direct represents '1' with '2222'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-2222'
c Encoding variable: aux58 with domain: bool (representing constraint (sij_00002_00002 -> (!sij_00001_00003)))
c Var 'aux58' direct represents '0' with '-2223'
c Var 'aux58' direct represents '1' with '2223'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-2223'
c Encoding variable: aux59 with domain: bool (representing constraint (sij_00003_00002 -> (!sij_00004_00003)))
c Var 'aux59' direct represents '0' with '-2224'
c Var 'aux59' direct represents '1' with '2224'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-2224'
c Encoding variable: aux60 with domain: bool (representing constraint (sij_00003_00002 -> (!sij_00004_00001)))
c Var 'aux60' direct represents '0' with '-2225'
c Var 'aux60' direct represents '1' with '2225'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-2225'
c Encoding variable: aux61 with domain: bool (representing constraint (sij_00003_00002 -> (!sij_00002_00001)))
c Var 'aux61' direct represents '0' with '-2226'
c Var 'aux61' direct represents '1' with '2226'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-2226'
c Encoding variable: aux62 with domain: bool (representing constraint (sij_00003_00002 -> (!sij_00002_00003)))
c Var 'aux62' direct represents '0' with '-2227'
c Var 'aux62' direct represents '1' with '2227'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-2227'
c Encoding variable: aux63 with domain: bool (representing constraint (sij_00004_00002 -> (!sij_00005_00003)))
c Var 'aux63' direct represents '0' with '-2228'
c Var 'aux63' direct represents '1' with '2228'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-2228'
c Encoding variable: aux64 with domain: bool (representing constraint (sij_00004_00002 -> (!sij_00005_00001)))
c Var 'aux64' direct represents '0' with '-2229'
c Var 'aux64' direct represents '1' with '2229'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-2229'
c Encoding variable: aux65 with domain: bool (representing constraint (sij_00004_00002 -> (!sij_00003_00001)))
c Var 'aux65' direct represents '0' with '-2230'
c Var 'aux65' direct represents '1' with '2230'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-2230'
c Encoding variable: aux66 with domain: bool (representing constraint (sij_00004_00002 -> (!sij_00003_00003)))
c Var 'aux66' direct represents '0' with '-2231'
c Var 'aux66' direct represents '1' with '2231'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-2231'
c Encoding variable: aux67 with domain: bool (representing constraint (sij_00005_00002 -> (!sij_00006_00003)))
c Var 'aux67' direct represents '0' with '-2232'
c Var 'aux67' direct represents '1' with '2232'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-2232'
c Encoding variable: aux68 with domain: bool (representing constraint (sij_00005_00002 -> (!sij_00006_00001)))
c Var 'aux68' direct represents '0' with '-2233'
c Var 'aux68' direct represents '1' with '2233'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-2233'
c Encoding variable: aux69 with domain: bool (representing constraint (sij_00005_00002 -> (!sij_00004_00001)))
c Var 'aux69' direct represents '0' with '-2234'
c Var 'aux69' direct represents '1' with '2234'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-2234'
c Encoding variable: aux70 with domain: bool (representing constraint (sij_00005_00002 -> (!sij_00004_00003)))
c Var 'aux70' direct represents '0' with '-2235'
c Var 'aux70' direct represents '1' with '2235'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-2235'
c Encoding variable: aux71 with domain: bool (representing constraint (sij_00006_00002 -> (!sij_00007_00003)))
c Var 'aux71' direct represents '0' with '-2236'
c Var 'aux71' direct represents '1' with '2236'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-2236'
c Encoding variable: aux72 with domain: bool (representing constraint (sij_00006_00002 -> (!sij_00007_00001)))
c Var 'aux72' direct represents '0' with '-2237'
c Var 'aux72' direct represents '1' with '2237'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-2237'
c Encoding variable: aux73 with domain: bool (representing constraint (sij_00006_00002 -> (!sij_00005_00001)))
c Var 'aux73' direct represents '0' with '-2238'
c Var 'aux73' direct represents '1' with '2238'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-2238'
c Encoding variable: aux74 with domain: bool (representing constraint (sij_00006_00002 -> (!sij_00005_00003)))
c Var 'aux74' direct represents '0' with '-2239'
c Var 'aux74' direct represents '1' with '2239'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-2239'
c Encoding variable: aux75 with domain: bool (representing constraint (sij_00007_00002 -> (!sij_00008_00003)))
c Var 'aux75' direct represents '0' with '-2240'
c Var 'aux75' direct represents '1' with '2240'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-2240'
c Encoding variable: aux76 with domain: bool (representing constraint (sij_00007_00002 -> (!sij_00008_00001)))
c Var 'aux76' direct represents '0' with '-2241'
c Var 'aux76' direct represents '1' with '2241'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-2241'
c Encoding variable: aux77 with domain: bool (representing constraint (sij_00007_00002 -> (!sij_00006_00001)))
c Var 'aux77' direct represents '0' with '-2242'
c Var 'aux77' direct represents '1' with '2242'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-2242'
c Encoding variable: aux78 with domain: bool (representing constraint (sij_00007_00002 -> (!sij_00006_00003)))
c Var 'aux78' direct represents '0' with '-2243'
c Var 'aux78' direct represents '1' with '2243'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-2243'
c Encoding variable: aux79 with domain: bool (representing constraint (sij_00008_00002 -> (!sij_00009_00003)))
c Var 'aux79' direct represents '0' with '-2244'
c Var 'aux79' direct represents '1' with '2244'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-2244'
c Encoding variable: aux80 with domain: bool (representing constraint (sij_00008_00002 -> (!sij_00009_00001)))
c Var 'aux80' direct represents '0' with '-2245'
c Var 'aux80' direct represents '1' with '2245'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-2245'
c Encoding variable: aux81 with domain: bool (representing constraint (sij_00008_00002 -> (!sij_00007_00001)))
c Var 'aux81' direct represents '0' with '-2246'
c Var 'aux81' direct represents '1' with '2246'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-2246'
c Encoding variable: aux82 with domain: bool (representing constraint (sij_00008_00002 -> (!sij_00007_00003)))
c Var 'aux82' direct represents '0' with '-2247'
c Var 'aux82' direct represents '1' with '2247'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-2247'
c Encoding variable: aux83 with domain: bool (representing constraint (sij_00001_00003 -> (!sij_00002_00004)))
c Var 'aux83' direct represents '0' with '-2248'
c Var 'aux83' direct represents '1' with '2248'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-2248'
c Encoding variable: aux84 with domain: bool (representing constraint (sij_00001_00003 -> (!sij_00002_00002)))
c Var 'aux84' direct represents '0' with '-2249'
c Var 'aux84' direct represents '1' with '2249'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-2249'
c Encoding variable: aux85 with domain: bool (representing constraint (sij_00001_00003 -> (!sij_00000_00002)))
c Var 'aux85' direct represents '0' with '-2250'
c Var 'aux85' direct represents '1' with '2250'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-2250'
c Encoding variable: aux86 with domain: bool (representing constraint (sij_00001_00003 -> (!sij_00000_00004)))
c Var 'aux86' direct represents '0' with '-2251'
c Var 'aux86' direct represents '1' with '2251'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-2251'
c Encoding variable: aux87 with domain: bool (representing constraint (sij_00002_00003 -> (!sij_00003_00004)))
c Var 'aux87' direct represents '0' with '-2252'
c Var 'aux87' direct represents '1' with '2252'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-2252'
c Encoding variable: aux88 with domain: bool (representing constraint (sij_00002_00003 -> (!sij_00003_00002)))
c Var 'aux88' direct represents '0' with '-2253'
c Var 'aux88' direct represents '1' with '2253'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-2253'
c Encoding variable: aux89 with domain: bool (representing constraint (sij_00002_00003 -> (!sij_00001_00002)))
c Var 'aux89' direct represents '0' with '-2254'
c Var 'aux89' direct represents '1' with '2254'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-2254'
c Encoding variable: aux90 with domain: bool (representing constraint (sij_00002_00003 -> (!sij_00001_00004)))
c Var 'aux90' direct represents '0' with '-2255'
c Var 'aux90' direct represents '1' with '2255'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-2255'
c Encoding variable: aux91 with domain: bool (representing constraint (sij_00003_00003 -> (!sij_00004_00004)))
c Var 'aux91' direct represents '0' with '-2256'
c Var 'aux91' direct represents '1' with '2256'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-2256'
c Encoding variable: aux92 with domain: bool (representing constraint (sij_00003_00003 -> (!sij_00004_00002)))
c Var 'aux92' direct represents '0' with '-2257'
c Var 'aux92' direct represents '1' with '2257'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-2257'
c Encoding variable: aux93 with domain: bool (representing constraint (sij_00003_00003 -> (!sij_00002_00002)))
c Var 'aux93' direct represents '0' with '-2258'
c Var 'aux93' direct represents '1' with '2258'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-2258'
c Encoding variable: aux94 with domain: bool (representing constraint (sij_00003_00003 -> (!sij_00002_00004)))
c Var 'aux94' direct represents '0' with '-2259'
c Var 'aux94' direct represents '1' with '2259'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-2259'
c Encoding variable: aux95 with domain: bool (representing constraint (sij_00004_00003 -> (!sij_00005_00004)))
c Var 'aux95' direct represents '0' with '-2260'
c Var 'aux95' direct represents '1' with '2260'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-2260'
c Encoding variable: aux96 with domain: bool (representing constraint (sij_00004_00003 -> (!sij_00005_00002)))
c Var 'aux96' direct represents '0' with '-2261'
c Var 'aux96' direct represents '1' with '2261'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-2261'
c Encoding variable: aux97 with domain: bool (representing constraint (sij_00004_00003 -> (!sij_00003_00002)))
c Var 'aux97' direct represents '0' with '-2262'
c Var 'aux97' direct represents '1' with '2262'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-2262'
c Encoding variable: aux98 with domain: bool (representing constraint (sij_00004_00003 -> (!sij_00003_00004)))
c Var 'aux98' direct represents '0' with '-2263'
c Var 'aux98' direct represents '1' with '2263'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-2263'
c Encoding variable: aux99 with domain: bool (representing constraint (sij_00005_00003 -> (!sij_00006_00004)))
c Var 'aux99' direct represents '0' with '-2264'
c Var 'aux99' direct represents '1' with '2264'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-2264'
c Encoding variable: aux100 with domain: bool (representing constraint (sij_00005_00003 -> (!sij_00006_00002)))
c Var 'aux100' direct represents '0' with '-2265'
c Var 'aux100' direct represents '1' with '2265'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-2265'
c Encoding variable: aux101 with domain: bool (representing constraint (sij_00005_00003 -> (!sij_00004_00002)))
c Var 'aux101' direct represents '0' with '-2266'
c Var 'aux101' direct represents '1' with '2266'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-2266'
c Encoding variable: aux102 with domain: bool (representing constraint (sij_00005_00003 -> (!sij_00004_00004)))
c Var 'aux102' direct represents '0' with '-2267'
c Var 'aux102' direct represents '1' with '2267'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-2267'
c Encoding variable: aux103 with domain: bool (representing constraint (sij_00006_00003 -> (!sij_00007_00004)))
c Var 'aux103' direct represents '0' with '-2268'
c Var 'aux103' direct represents '1' with '2268'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-2268'
c Encoding variable: aux104 with domain: bool (representing constraint (sij_00006_00003 -> (!sij_00007_00002)))
c Var 'aux104' direct represents '0' with '-2269'
c Var 'aux104' direct represents '1' with '2269'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-2269'
c Encoding variable: aux105 with domain: bool (representing constraint (sij_00006_00003 -> (!sij_00005_00002)))
c Var 'aux105' direct represents '0' with '-2270'
c Var 'aux105' direct represents '1' with '2270'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-2270'
c Encoding variable: aux106 with domain: bool (representing constraint (sij_00006_00003 -> (!sij_00005_00004)))
c Var 'aux106' direct represents '0' with '-2271'
c Var 'aux106' direct represents '1' with '2271'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-2271'
c Encoding variable: aux107 with domain: bool (representing constraint (sij_00007_00003 -> (!sij_00008_00004)))
c Var 'aux107' direct represents '0' with '-2272'
c Var 'aux107' direct represents '1' with '2272'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-2272'
c Encoding variable: aux108 with domain: bool (representing constraint (sij_00007_00003 -> (!sij_00008_00002)))
c Var 'aux108' direct represents '0' with '-2273'
c Var 'aux108' direct represents '1' with '2273'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-2273'
c Encoding variable: aux109 with domain: bool (representing constraint (sij_00007_00003 -> (!sij_00006_00002)))
c Var 'aux109' direct represents '0' with '-2274'
c Var 'aux109' direct represents '1' with '2274'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-2274'
c Encoding variable: aux110 with domain: bool (representing constraint (sij_00007_00003 -> (!sij_00006_00004)))
c Var 'aux110' direct represents '0' with '-2275'
c Var 'aux110' direct represents '1' with '2275'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-2275'
c Encoding variable: aux111 with domain: bool (representing constraint (sij_00008_00003 -> (!sij_00009_00004)))
c Var 'aux111' direct represents '0' with '-2276'
c Var 'aux111' direct represents '1' with '2276'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-2276'
c Encoding variable: aux112 with domain: bool (representing constraint (sij_00008_00003 -> (!sij_00009_00002)))
c Var 'aux112' direct represents '0' with '-2277'
c Var 'aux112' direct represents '1' with '2277'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-2277'
c Encoding variable: aux113 with domain: bool (representing constraint (sij_00008_00003 -> (!sij_00007_00002)))
c Var 'aux113' direct represents '0' with '-2278'
c Var 'aux113' direct represents '1' with '2278'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-2278'
c Encoding variable: aux114 with domain: bool (representing constraint (sij_00008_00003 -> (!sij_00007_00004)))
c Var 'aux114' direct represents '0' with '-2279'
c Var 'aux114' direct represents '1' with '2279'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-2279'
c Encoding variable: aux115 with domain: bool (representing constraint (sij_00001_00004 -> (!sij_00002_00005)))
c Var 'aux115' direct represents '0' with '-2280'
c Var 'aux115' direct represents '1' with '2280'
c Var 'aux115' order represents '1' with '1'
c Var 'aux115' order represents '0' with '-2280'
c Encoding variable: aux116 with domain: bool (representing constraint (sij_00001_00004 -> (!sij_00002_00003)))
c Var 'aux116' direct represents '0' with '-2281'
c Var 'aux116' direct represents '1' with '2281'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-2281'
c Encoding variable: aux117 with domain: bool (representing constraint (sij_00001_00004 -> (!sij_00000_00003)))
c Var 'aux117' direct represents '0' with '-2282'
c Var 'aux117' direct represents '1' with '2282'
c Var 'aux117' order represents '1' with '1'
c Var 'aux117' order represents '0' with '-2282'
c Encoding variable: aux118 with domain: bool (representing constraint (sij_00001_00004 -> (!sij_00000_00005)))
c Var 'aux118' direct represents '0' with '-2283'
c Var 'aux118' direct represents '1' with '2283'
c Var 'aux118' order represents '1' with '1'
c Var 'aux118' order represents '0' with '-2283'
c Encoding variable: aux119 with domain: bool (representing constraint (sij_00002_00004 -> (!sij_00003_00005)))
c Var 'aux119' direct represents '0' with '-2284'
c Var 'aux119' direct represents '1' with '2284'
c Var 'aux119' order represents '1' with '1'
c Var 'aux119' order represents '0' with '-2284'
c Encoding variable: aux120 with domain: bool (representing constraint (sij_00002_00004 -> (!sij_00003_00003)))
c Var 'aux120' direct represents '0' with '-2285'
c Var 'aux120' direct represents '1' with '2285'
c Var 'aux120' order represents '1' with '1'
c Var 'aux120' order represents '0' with '-2285'
c Encoding variable: aux121 with domain: bool (representing constraint (sij_00002_00004 -> (!sij_00001_00003)))
c Var 'aux121' direct represents '0' with '-2286'
c Var 'aux121' direct represents '1' with '2286'
c Var 'aux121' order represents '1' with '1'
c Var 'aux121' order represents '0' with '-2286'
c Encoding variable: aux122 with domain: bool (representing constraint (sij_00002_00004 -> (!sij_00001_00005)))
c Var 'aux122' direct represents '0' with '-2287'
c Var 'aux122' direct represents '1' with '2287'
c Var 'aux122' order represents '1' with '1'
c Var 'aux122' order represents '0' with '-2287'
c Encoding variable: aux123 with domain: bool (representing constraint (sij_00003_00004 -> (!sij_00004_00005)))
c Var 'aux123' direct represents '0' with '-2288'
c Var 'aux123' direct represents '1' with '2288'
c Var 'aux123' order represents '1' with '1'
c Var 'aux123' order represents '0' with '-2288'
c Encoding variable: aux124 with domain: bool (representing constraint (sij_00003_00004 -> (!sij_00004_00003)))
c Var 'aux124' direct represents '0' with '-2289'
c Var 'aux124' direct represents '1' with '2289'
c Var 'aux124' order represents '1' with '1'
c Var 'aux124' order represents '0' with '-2289'
c Encoding variable: aux125 with domain: bool (representing constraint (sij_00003_00004 -> (!sij_00002_00003)))
c Var 'aux125' direct represents '0' with '-2290'
c Var 'aux125' direct represents '1' with '2290'
c Var 'aux125' order represents '1' with '1'
c Var 'aux125' order represents '0' with '-2290'
c Encoding variable: aux126 with domain: bool (representing constraint (sij_00003_00004 -> (!sij_00002_00005)))
c Var 'aux126' direct represents '0' with '-2291'
c Var 'aux126' direct represents '1' with '2291'
c Var 'aux126' order represents '1' with '1'
c Var 'aux126' order represents '0' with '-2291'
c Encoding variable: aux127 with domain: bool (representing constraint (sij_00004_00004 -> (!sij_00005_00005)))
c Var 'aux127' direct represents '0' with '-2292'
c Var 'aux127' direct represents '1' with '2292'
c Var 'aux127' order represents '1' with '1'
c Var 'aux127' order represents '0' with '-2292'
c Encoding variable: aux128 with domain: bool (representing constraint (sij_00004_00004 -> (!sij_00005_00003)))
c Var 'aux128' direct represents '0' with '-2293'
c Var 'aux128' direct represents '1' with '2293'
c Var 'aux128' order represents '1' with '1'
c Var 'aux128' order represents '0' with '-2293'
c Encoding variable: aux129 with domain: bool (representing constraint (sij_00004_00004 -> (!sij_00003_00003)))
c Var 'aux129' direct represents '0' with '-2294'
c Var 'aux129' direct represents '1' with '2294'
c Var 'aux129' order represents '1' with '1'
c Var 'aux129' order represents '0' with '-2294'
c Encoding variable: aux130 with domain: bool (representing constraint (sij_00004_00004 -> (!sij_00003_00005)))
c Var 'aux130' direct represents '0' with '-2295'
c Var 'aux130' direct represents '1' with '2295'
c Var 'aux130' order represents '1' with '1'
c Var 'aux130' order represents '0' with '-2295'
c Encoding variable: aux131 with domain: bool (representing constraint (sij_00005_00004 -> (!sij_00006_00005)))
c Var 'aux131' direct represents '0' with '-2296'
c Var 'aux131' direct represents '1' with '2296'
c Var 'aux131' order represents '1' with '1'
c Var 'aux131' order represents '0' with '-2296'
c Encoding variable: aux132 with domain: bool (representing constraint (sij_00005_00004 -> (!sij_00006_00003)))
c Var 'aux132' direct represents '0' with '-2297'
c Var 'aux132' direct represents '1' with '2297'
c Var 'aux132' order represents '1' with '1'
c Var 'aux132' order represents '0' with '-2297'
c Encoding variable: aux133 with domain: bool (representing constraint (sij_00005_00004 -> (!sij_00004_00003)))
c Var 'aux133' direct represents '0' with '-2298'
c Var 'aux133' direct represents '1' with '2298'
c Var 'aux133' order represents '1' with '1'
c Var 'aux133' order represents '0' with '-2298'
c Encoding variable: aux134 with domain: bool (representing constraint (sij_00005_00004 -> (!sij_00004_00005)))
c Var 'aux134' direct represents '0' with '-2299'
c Var 'aux134' direct represents '1' with '2299'
c Var 'aux134' order represents '1' with '1'
c Var 'aux134' order represents '0' with '-2299'
c Encoding variable: aux135 with domain: bool (representing constraint (sij_00006_00004 -> (!sij_00007_00005)))
c Var 'aux135' direct represents '0' with '-2300'
c Var 'aux135' direct represents '1' with '2300'
c Var 'aux135' order represents '1' with '1'
c Var 'aux135' order represents '0' with '-2300'
c Encoding variable: aux136 with domain: bool (representing constraint (sij_00006_00004 -> (!sij_00007_00003)))
c Var 'aux136' direct represents '0' with '-2301'
c Var 'aux136' direct represents '1' with '2301'
c Var 'aux136' order represents '1' with '1'
c Var 'aux136' order represents '0' with '-2301'
c Encoding variable: aux137 with domain: bool (representing constraint (sij_00006_00004 -> (!sij_00005_00003)))
c Var 'aux137' direct represents '0' with '-2302'
c Var 'aux137' direct represents '1' with '2302'
c Var 'aux137' order represents '1' with '1'
c Var 'aux137' order represents '0' with '-2302'
c Encoding variable: aux138 with domain: bool (representing constraint (sij_00006_00004 -> (!sij_00005_00005)))
c Var 'aux138' direct represents '0' with '-2303'
c Var 'aux138' direct represents '1' with '2303'
c Var 'aux138' order represents '1' with '1'
c Var 'aux138' order represents '0' with '-2303'
c Encoding variable: aux139 with domain: bool (representing constraint (sij_00007_00004 -> (!sij_00008_00005)))
c Var 'aux139' direct represents '0' with '-2304'
c Var 'aux139' direct represents '1' with '2304'
c Var 'aux139' order represents '1' with '1'
c Var 'aux139' order represents '0' with '-2304'
c Encoding variable: aux140 with domain: bool (representing constraint (sij_00007_00004 -> (!sij_00008_00003)))
c Var 'aux140' direct represents '0' with '-2305'
c Var 'aux140' direct represents '1' with '2305'
c Var 'aux140' order represents '1' with '1'
c Var 'aux140' order represents '0' with '-2305'
c Encoding variable: aux141 with domain: bool (representing constraint (sij_00007_00004 -> (!sij_00006_00003)))
c Var 'aux141' direct represents '0' with '-2306'
c Var 'aux141' direct represents '1' with '2306'
c Var 'aux141' order represents '1' with '1'
c Var 'aux141' order represents '0' with '-2306'
c Encoding variable: aux142 with domain: bool (representing constraint (sij_00007_00004 -> (!sij_00006_00005)))
c Var 'aux142' direct represents '0' with '-2307'
c Var 'aux142' direct represents '1' with '2307'
c Var 'aux142' order represents '1' with '1'
c Var 'aux142' order represents '0' with '-2307'
c Encoding variable: aux143 with domain: bool (representing constraint (sij_00008_00004 -> (!sij_00009_00005)))
c Var 'aux143' direct represents '0' with '-2308'
c Var 'aux143' direct represents '1' with '2308'
c Var 'aux143' order represents '1' with '1'
c Var 'aux143' order represents '0' with '-2308'
c Encoding variable: aux144 with domain: bool (representing constraint (sij_00008_00004 -> (!sij_00009_00003)))
c Var 'aux144' direct represents '0' with '-2309'
c Var 'aux144' direct represents '1' with '2309'
c Var 'aux144' order represents '1' with '1'
c Var 'aux144' order represents '0' with '-2309'
c Encoding variable: aux145 with domain: bool (representing constraint (sij_00008_00004 -> (!sij_00007_00003)))
c Var 'aux145' direct represents '0' with '-2310'
c Var 'aux145' direct represents '1' with '2310'
c Var 'aux145' order represents '1' with '1'
c Var 'aux145' order represents '0' with '-2310'
c Encoding variable: aux146 with domain: bool (representing constraint (sij_00008_00004 -> (!sij_00007_00005)))
c Var 'aux146' direct represents '0' with '-2311'
c Var 'aux146' direct represents '1' with '2311'
c Var 'aux146' order represents '1' with '1'
c Var 'aux146' order represents '0' with '-2311'
c Encoding variable: aux147 with domain: bool (representing constraint (sij_00001_00005 -> (!sij_00002_00006)))
c Var 'aux147' direct represents '0' with '-2312'
c Var 'aux147' direct represents '1' with '2312'
c Var 'aux147' order represents '1' with '1'
c Var 'aux147' order represents '0' with '-2312'
c Encoding variable: aux148 with domain: bool (representing constraint (sij_00001_00005 -> (!sij_00002_00004)))
c Var 'aux148' direct represents '0' with '-2313'
c Var 'aux148' direct represents '1' with '2313'
c Var 'aux148' order represents '1' with '1'
c Var 'aux148' order represents '0' with '-2313'
c Encoding variable: aux149 with domain: bool (representing constraint (sij_00001_00005 -> (!sij_00000_00004)))
c Var 'aux149' direct represents '0' with '-2314'
c Var 'aux149' direct represents '1' with '2314'
c Var 'aux149' order represents '1' with '1'
c Var 'aux149' order represents '0' with '-2314'
c Encoding variable: aux150 with domain: bool (representing constraint (sij_00001_00005 -> (!sij_00000_00006)))
c Var 'aux150' direct represents '0' with '-2315'
c Var 'aux150' direct represents '1' with '2315'
c Var 'aux150' order represents '1' with '1'
c Var 'aux150' order represents '0' with '-2315'
c Encoding variable: aux151 with domain: bool (representing constraint (sij_00002_00005 -> (!sij_00003_00006)))
c Var 'aux151' direct represents '0' with '-2316'
c Var 'aux151' direct represents '1' with '2316'
c Var 'aux151' order represents '1' with '1'
c Var 'aux151' order represents '0' with '-2316'
c Encoding variable: aux152 with domain: bool (representing constraint (sij_00002_00005 -> (!sij_00003_00004)))
c Var 'aux152' direct represents '0' with '-2317'
c Var 'aux152' direct represents '1' with '2317'
c Var 'aux152' order represents '1' with '1'
c Var 'aux152' order represents '0' with '-2317'
c Encoding variable: aux153 with domain: bool (representing constraint (sij_00002_00005 -> (!sij_00001_00004)))
c Var 'aux153' direct represents '0' with '-2318'
c Var 'aux153' direct represents '1' with '2318'
c Var 'aux153' order represents '1' with '1'
c Var 'aux153' order represents '0' with '-2318'
c Encoding variable: aux154 with domain: bool (representing constraint (sij_00002_00005 -> (!sij_00001_00006)))
c Var 'aux154' direct represents '0' with '-2319'
c Var 'aux154' direct represents '1' with '2319'
c Var 'aux154' order represents '1' with '1'
c Var 'aux154' order represents '0' with '-2319'
c Encoding variable: aux155 with domain: bool (representing constraint (sij_00003_00005 -> (!sij_00004_00006)))
c Var 'aux155' direct represents '0' with '-2320'
c Var 'aux155' direct represents '1' with '2320'
c Var 'aux155' order represents '1' with '1'
c Var 'aux155' order represents '0' with '-2320'
c Encoding variable: aux156 with domain: bool (representing constraint (sij_00003_00005 -> (!sij_00004_00004)))
c Var 'aux156' direct represents '0' with '-2321'
c Var 'aux156' direct represents '1' with '2321'
c Var 'aux156' order represents '1' with '1'
c Var 'aux156' order represents '0' with '-2321'
c Encoding variable: aux157 with domain: bool (representing constraint (sij_00003_00005 -> (!sij_00002_00004)))
c Var 'aux157' direct represents '0' with '-2322'
c Var 'aux157' direct represents '1' with '2322'
c Var 'aux157' order represents '1' with '1'
c Var 'aux157' order represents '0' with '-2322'
c Encoding variable: aux158 with domain: bool (representing constraint (sij_00003_00005 -> (!sij_00002_00006)))
c Var 'aux158' direct represents '0' with '-2323'
c Var 'aux158' direct represents '1' with '2323'
c Var 'aux158' order represents '1' with '1'
c Var 'aux158' order represents '0' with '-2323'
c Encoding variable: aux159 with domain: bool (representing constraint (sij_00004_00005 -> (!sij_00005_00006)))
c Var 'aux159' direct represents '0' with '-2324'
c Var 'aux159' direct represents '1' with '2324'
c Var 'aux159' order represents '1' with '1'
c Var 'aux159' order represents '0' with '-2324'
c Encoding variable: aux160 with domain: bool (representing constraint (sij_00004_00005 -> (!sij_00005_00004)))
c Var 'aux160' direct represents '0' with '-2325'
c Var 'aux160' direct represents '1' with '2325'
c Var 'aux160' order represents '1' with '1'
c Var 'aux160' order represents '0' with '-2325'
c Encoding variable: aux161 with domain: bool (representing constraint (sij_00004_00005 -> (!sij_00003_00004)))
c Var 'aux161' direct represents '0' with '-2326'
c Var 'aux161' direct represents '1' with '2326'
c Var 'aux161' order represents '1' with '1'
c Var 'aux161' order represents '0' with '-2326'
c Encoding variable: aux162 with domain: bool (representing constraint (sij_00004_00005 -> (!sij_00003_00006)))
c Var 'aux162' direct represents '0' with '-2327'
c Var 'aux162' direct represents '1' with '2327'
c Var 'aux162' order represents '1' with '1'
c Var 'aux162' order represents '0' with '-2327'
c Encoding variable: aux163 with domain: bool (representing constraint (sij_00005_00005 -> (!sij_00006_00006)))
c Var 'aux163' direct represents '0' with '-2328'
c Var 'aux163' direct represents '1' with '2328'
c Var 'aux163' order represents '1' with '1'
c Var 'aux163' order represents '0' with '-2328'
c Encoding variable: aux164 with domain: bool (representing constraint (sij_00005_00005 -> (!sij_00006_00004)))
c Var 'aux164' direct represents '0' with '-2329'
c Var 'aux164' direct represents '1' with '2329'
c Var 'aux164' order represents '1' with '1'
c Var 'aux164' order represents '0' with '-2329'
c Encoding variable: aux165 with domain: bool (representing constraint (sij_00005_00005 -> (!sij_00004_00004)))
c Var 'aux165' direct represents '0' with '-2330'
c Var 'aux165' direct represents '1' with '2330'
c Var 'aux165' order represents '1' with '1'
c Var 'aux165' order represents '0' with '-2330'
c Encoding variable: aux166 with domain: bool (representing constraint (sij_00005_00005 -> (!sij_00004_00006)))
c Var 'aux166' direct represents '0' with '-2331'
c Var 'aux166' direct represents '1' with '2331'
c Var 'aux166' order represents '1' with '1'
c Var 'aux166' order represents '0' with '-2331'
c Encoding variable: aux167 with domain: bool (representing constraint (sij_00006_00005 -> (!sij_00007_00006)))
c Var 'aux167' direct represents '0' with '-2332'
c Var 'aux167' direct represents '1' with '2332'
c Var 'aux167' order represents '1' with '1'
c Var 'aux167' order represents '0' with '-2332'
c Encoding variable: aux168 with domain: bool (representing constraint (sij_00006_00005 -> (!sij_00007_00004)))
c Var 'aux168' direct represents '0' with '-2333'
c Var 'aux168' direct represents '1' with '2333'
c Var 'aux168' order represents '1' with '1'
c Var 'aux168' order represents '0' with '-2333'
c Encoding variable: aux169 with domain: bool (representing constraint (sij_00006_00005 -> (!sij_00005_00004)))
c Var 'aux169' direct represents '0' with '-2334'
c Var 'aux169' direct represents '1' with '2334'
c Var 'aux169' order represents '1' with '1'
c Var 'aux169' order represents '0' with '-2334'
c Encoding variable: aux170 with domain: bool (representing constraint (sij_00006_00005 -> (!sij_00005_00006)))
c Var 'aux170' direct represents '0' with '-2335'
c Var 'aux170' direct represents '1' with '2335'
c Var 'aux170' order represents '1' with '1'
c Var 'aux170' order represents '0' with '-2335'
c Encoding variable: aux171 with domain: bool (representing constraint (sij_00007_00005 -> (!sij_00008_00006)))
c Var 'aux171' direct represents '0' with '-2336'
c Var 'aux171' direct represents '1' with '2336'
c Var 'aux171' order represents '1' with '1'
c Var 'aux171' order represents '0' with '-2336'
c Encoding variable: aux172 with domain: bool (representing constraint (sij_00007_00005 -> (!sij_00008_00004)))
c Var 'aux172' direct represents '0' with '-2337'
c Var 'aux172' direct represents '1' with '2337'
c Var 'aux172' order represents '1' with '1'
c Var 'aux172' order represents '0' with '-2337'
c Encoding variable: aux173 with domain: bool (representing constraint (sij_00007_00005 -> (!sij_00006_00004)))
c Var 'aux173' direct represents '0' with '-2338'
c Var 'aux173' direct represents '1' with '2338'
c Var 'aux173' order represents '1' with '1'
c Var 'aux173' order represents '0' with '-2338'
c Encoding variable: aux174 with domain: bool (representing constraint (sij_00007_00005 -> (!sij_00006_00006)))
c Var 'aux174' direct represents '0' with '-2339'
c Var 'aux174' direct represents '1' with '2339'
c Var 'aux174' order represents '1' with '1'
c Var 'aux174' order represents '0' with '-2339'
c Encoding variable: aux175 with domain: bool (representing constraint (sij_00008_00005 -> (!sij_00009_00006)))
c Var 'aux175' direct represents '0' with '-2340'
c Var 'aux175' direct represents '1' with '2340'
c Var 'aux175' order represents '1' with '1'
c Var 'aux175' order represents '0' with '-2340'
c Encoding variable: aux176 with domain: bool (representing constraint (sij_00008_00005 -> (!sij_00009_00004)))
c Var 'aux176' direct represents '0' with '-2341'
c Var 'aux176' direct represents '1' with '2341'
c Var 'aux176' order represents '1' with '1'
c Var 'aux176' order represents '0' with '-2341'
c Encoding variable: aux177 with domain: bool (representing constraint (sij_00008_00005 -> (!sij_00007_00004)))
c Var 'aux177' direct represents '0' with '-2342'
c Var 'aux177' direct represents '1' with '2342'
c Var 'aux177' order represents '1' with '1'
c Var 'aux177' order represents '0' with '-2342'
c Encoding variable: aux178 with domain: bool (representing constraint (sij_00008_00005 -> (!sij_00007_00006)))
c Var 'aux178' direct represents '0' with '-2343'
c Var 'aux178' direct represents '1' with '2343'
c Var 'aux178' order represents '1' with '1'
c Var 'aux178' order represents '0' with '-2343'
c Encoding variable: aux179 with domain: bool (representing constraint (sij_00001_00006 -> (!sij_00002_00007)))
c Var 'aux179' direct represents '0' with '-2344'
c Var 'aux179' direct represents '1' with '2344'
c Var 'aux179' order represents '1' with '1'
c Var 'aux179' order represents '0' with '-2344'
c Encoding variable: aux180 with domain: bool (representing constraint (sij_00001_00006 -> (!sij_00002_00005)))
c Var 'aux180' direct represents '0' with '-2345'
c Var 'aux180' direct represents '1' with '2345'
c Var 'aux180' order represents '1' with '1'
c Var 'aux180' order represents '0' with '-2345'
c Encoding variable: aux181 with domain: bool (representing constraint (sij_00001_00006 -> (!sij_00000_00005)))
c Var 'aux181' direct represents '0' with '-2346'
c Var 'aux181' direct represents '1' with '2346'
c Var 'aux181' order represents '1' with '1'
c Var 'aux181' order represents '0' with '-2346'
c Encoding variable: aux182 with domain: bool (representing constraint (sij_00001_00006 -> (!sij_00000_00007)))
c Var 'aux182' direct represents '0' with '-2347'
c Var 'aux182' direct represents '1' with '2347'
c Var 'aux182' order represents '1' with '1'
c Var 'aux182' order represents '0' with '-2347'
c Encoding variable: aux183 with domain: bool (representing constraint (sij_00002_00006 -> (!sij_00003_00007)))
c Var 'aux183' direct represents '0' with '-2348'
c Var 'aux183' direct represents '1' with '2348'
c Var 'aux183' order represents '1' with '1'
c Var 'aux183' order represents '0' with '-2348'
c Encoding variable: aux184 with domain: bool (representing constraint (sij_00002_00006 -> (!sij_00003_00005)))
c Var 'aux184' direct represents '0' with '-2349'
c Var 'aux184' direct represents '1' with '2349'
c Var 'aux184' order represents '1' with '1'
c Var 'aux184' order represents '0' with '-2349'
c Encoding variable: aux185 with domain: bool (representing constraint (sij_00002_00006 -> (!sij_00001_00005)))
c Var 'aux185' direct represents '0' with '-2350'
c Var 'aux185' direct represents '1' with '2350'
c Var 'aux185' order represents '1' with '1'
c Var 'aux185' order represents '0' with '-2350'
c Encoding variable: aux186 with domain: bool (representing constraint (sij_00002_00006 -> (!sij_00001_00007)))
c Var 'aux186' direct represents '0' with '-2351'
c Var 'aux186' direct represents '1' with '2351'
c Var 'aux186' order represents '1' with '1'
c Var 'aux186' order represents '0' with '-2351'
c Encoding variable: aux187 with domain: bool (representing constraint (sij_00003_00006 -> (!sij_00004_00007)))
c Var 'aux187' direct represents '0' with '-2352'
c Var 'aux187' direct represents '1' with '2352'
c Var 'aux187' order represents '1' with '1'
c Var 'aux187' order represents '0' with '-2352'
c Encoding variable: aux188 with domain: bool (representing constraint (sij_00003_00006 -> (!sij_00004_00005)))
c Var 'aux188' direct represents '0' with '-2353'
c Var 'aux188' direct represents '1' with '2353'
c Var 'aux188' order represents '1' with '1'
c Var 'aux188' order represents '0' with '-2353'
c Encoding variable: aux189 with domain: bool (representing constraint (sij_00003_00006 -> (!sij_00002_00005)))
c Var 'aux189' direct represents '0' with '-2354'
c Var 'aux189' direct represents '1' with '2354'
c Var 'aux189' order represents '1' with '1'
c Var 'aux189' order represents '0' with '-2354'
c Encoding variable: aux190 with domain: bool (representing constraint (sij_00003_00006 -> (!sij_00002_00007)))
c Var 'aux190' direct represents '0' with '-2355'
c Var 'aux190' direct represents '1' with '2355'
c Var 'aux190' order represents '1' with '1'
c Var 'aux190' order represents '0' with '-2355'
c Encoding variable: aux191 with domain: bool (representing constraint (sij_00004_00006 -> (!sij_00005_00007)))
c Var 'aux191' direct represents '0' with '-2356'
c Var 'aux191' direct represents '1' with '2356'
c Var 'aux191' order represents '1' with '1'
c Var 'aux191' order represents '0' with '-2356'
c Encoding variable: aux192 with domain: bool (representing constraint (sij_00004_00006 -> (!sij_00005_00005)))
c Var 'aux192' direct represents '0' with '-2357'
c Var 'aux192' direct represents '1' with '2357'
c Var 'aux192' order represents '1' with '1'
c Var 'aux192' order represents '0' with '-2357'
c Encoding variable: aux193 with domain: bool (representing constraint (sij_00004_00006 -> (!sij_00003_00005)))
c Var 'aux193' direct represents '0' with '-2358'
c Var 'aux193' direct represents '1' with '2358'
c Var 'aux193' order represents '1' with '1'
c Var 'aux193' order represents '0' with '-2358'
c Encoding variable: aux194 with domain: bool (representing constraint (sij_00004_00006 -> (!sij_00003_00007)))
c Var 'aux194' direct represents '0' with '-2359'
c Var 'aux194' direct represents '1' with '2359'
c Var 'aux194' order represents '1' with '1'
c Var 'aux194' order represents '0' with '-2359'
c Encoding variable: aux195 with domain: bool (representing constraint (sij_00005_00006 -> (!sij_00006_00007)))
c Var 'aux195' direct represents '0' with '-2360'
c Var 'aux195' direct represents '1' with '2360'
c Var 'aux195' order represents '1' with '1'
c Var 'aux195' order represents '0' with '-2360'
c Encoding variable: aux196 with domain: bool (representing constraint (sij_00005_00006 -> (!sij_00006_00005)))
c Var 'aux196' direct represents '0' with '-2361'
c Var 'aux196' direct represents '1' with '2361'
c Var 'aux196' order represents '1' with '1'
c Var 'aux196' order represents '0' with '-2361'
c Encoding variable: aux197 with domain: bool (representing constraint (sij_00005_00006 -> (!sij_00004_00005)))
c Var 'aux197' direct represents '0' with '-2362'
c Var 'aux197' direct represents '1' with '2362'
c Var 'aux197' order represents '1' with '1'
c Var 'aux197' order represents '0' with '-2362'
c Encoding variable: aux198 with domain: bool (representing constraint (sij_00005_00006 -> (!sij_00004_00007)))
c Var 'aux198' direct represents '0' with '-2363'
c Var 'aux198' direct represents '1' with '2363'
c Var 'aux198' order represents '1' with '1'
c Var 'aux198' order represents '0' with '-2363'
c Encoding variable: aux199 with domain: bool (representing constraint (sij_00006_00006 -> (!sij_00007_00007)))
c Var 'aux199' direct represents '0' with '-2364'
c Var 'aux199' direct represents '1' with '2364'
c Var 'aux199' order represents '1' with '1'
c Var 'aux199' order represents '0' with '-2364'
c Encoding variable: aux200 with domain: bool (representing constraint (sij_00006_00006 -> (!sij_00007_00005)))
c Var 'aux200' direct represents '0' with '-2365'
c Var 'aux200' direct represents '1' with '2365'
c Var 'aux200' order represents '1' with '1'
c Var 'aux200' order represents '0' with '-2365'
c Encoding variable: aux201 with domain: bool (representing constraint (sij_00006_00006 -> (!sij_00005_00005)))
c Var 'aux201' direct represents '0' with '-2366'
c Var 'aux201' direct represents '1' with '2366'
c Var 'aux201' order represents '1' with '1'
c Var 'aux201' order represents '0' with '-2366'
c Encoding variable: aux202 with domain: bool (representing constraint (sij_00006_00006 -> (!sij_00005_00007)))
c Var 'aux202' direct represents '0' with '-2367'
c Var 'aux202' direct represents '1' with '2367'
c Var 'aux202' order represents '1' with '1'
c Var 'aux202' order represents '0' with '-2367'
c Encoding variable: aux203 with domain: bool (representing constraint (sij_00007_00006 -> (!sij_00008_00007)))
c Var 'aux203' direct represents '0' with '-2368'
c Var 'aux203' direct represents '1' with '2368'
c Var 'aux203' order represents '1' with '1'
c Var 'aux203' order represents '0' with '-2368'
c Encoding variable: aux204 with domain: bool (representing constraint (sij_00007_00006 -> (!sij_00008_00005)))
c Var 'aux204' direct represents '0' with '-2369'
c Var 'aux204' direct represents '1' with '2369'
c Var 'aux204' order represents '1' with '1'
c Var 'aux204' order represents '0' with '-2369'
c Encoding variable: aux205 with domain: bool (representing constraint (sij_00007_00006 -> (!sij_00006_00005)))
c Var 'aux205' direct represents '0' with '-2370'
c Var 'aux205' direct represents '1' with '2370'
c Var 'aux205' order represents '1' with '1'
c Var 'aux205' order represents '0' with '-2370'
c Encoding variable: aux206 with domain: bool (representing constraint (sij_00007_00006 -> (!sij_00006_00007)))
c Var 'aux206' direct represents '0' with '-2371'
c Var 'aux206' direct represents '1' with '2371'
c Var 'aux206' order represents '1' with '1'
c Var 'aux206' order represents '0' with '-2371'
c Encoding variable: aux207 with domain: bool (representing constraint (sij_00008_00006 -> (!sij_00009_00007)))
c Var 'aux207' direct represents '0' with '-2372'
c Var 'aux207' direct represents '1' with '2372'
c Var 'aux207' order represents '1' with '1'
c Var 'aux207' order represents '0' with '-2372'
c Encoding variable: aux208 with domain: bool (representing constraint (sij_00008_00006 -> (!sij_00009_00005)))
c Var 'aux208' direct represents '0' with '-2373'
c Var 'aux208' direct represents '1' with '2373'
c Var 'aux208' order represents '1' with '1'
c Var 'aux208' order represents '0' with '-2373'
c Encoding variable: aux209 with domain: bool (representing constraint (sij_00008_00006 -> (!sij_00007_00005)))
c Var 'aux209' direct represents '0' with '-2374'
c Var 'aux209' direct represents '1' with '2374'
c Var 'aux209' order represents '1' with '1'
c Var 'aux209' order represents '0' with '-2374'
c Encoding variable: aux210 with domain: bool (representing constraint (sij_00008_00006 -> (!sij_00007_00007)))
c Var 'aux210' direct represents '0' with '-2375'
c Var 'aux210' direct represents '1' with '2375'
c Var 'aux210' order represents '1' with '1'
c Var 'aux210' order represents '0' with '-2375'
c Encoding variable: aux211 with domain: bool (representing constraint (sij_00001_00007 -> (!sij_00002_00008)))
c Var 'aux211' direct represents '0' with '-2376'
c Var 'aux211' direct represents '1' with '2376'
c Var 'aux211' order represents '1' with '1'
c Var 'aux211' order represents '0' with '-2376'
c Encoding variable: aux212 with domain: bool (representing constraint (sij_00001_00007 -> (!sij_00002_00006)))
c Var 'aux212' direct represents '0' with '-2377'
c Var 'aux212' direct represents '1' with '2377'
c Var 'aux212' order represents '1' with '1'
c Var 'aux212' order represents '0' with '-2377'
c Encoding variable: aux213 with domain: bool (representing constraint (sij_00001_00007 -> (!sij_00000_00006)))
c Var 'aux213' direct represents '0' with '-2378'
c Var 'aux213' direct represents '1' with '2378'
c Var 'aux213' order represents '1' with '1'
c Var 'aux213' order represents '0' with '-2378'
c Encoding variable: aux214 with domain: bool (representing constraint (sij_00001_00007 -> (!sij_00000_00008)))
c Var 'aux214' direct represents '0' with '-2379'
c Var 'aux214' direct represents '1' with '2379'
c Var 'aux214' order represents '1' with '1'
c Var 'aux214' order represents '0' with '-2379'
c Encoding variable: aux215 with domain: bool (representing constraint (sij_00002_00007 -> (!sij_00003_00008)))
c Var 'aux215' direct represents '0' with '-2380'
c Var 'aux215' direct represents '1' with '2380'
c Var 'aux215' order represents '1' with '1'
c Var 'aux215' order represents '0' with '-2380'
c Encoding variable: aux216 with domain: bool (representing constraint (sij_00002_00007 -> (!sij_00003_00006)))
c Var 'aux216' direct represents '0' with '-2381'
c Var 'aux216' direct represents '1' with '2381'
c Var 'aux216' order represents '1' with '1'
c Var 'aux216' order represents '0' with '-2381'
c Encoding variable: aux217 with domain: bool (representing constraint (sij_00002_00007 -> (!sij_00001_00006)))
c Var 'aux217' direct represents '0' with '-2382'
c Var 'aux217' direct represents '1' with '2382'
c Var 'aux217' order represents '1' with '1'
c Var 'aux217' order represents '0' with '-2382'
c Encoding variable: aux218 with domain: bool (representing constraint (sij_00002_00007 -> (!sij_00001_00008)))
c Var 'aux218' direct represents '0' with '-2383'
c Var 'aux218' direct represents '1' with '2383'
c Var 'aux218' order represents '1' with '1'
c Var 'aux218' order represents '0' with '-2383'
c Encoding variable: aux219 with domain: bool (representing constraint (sij_00003_00007 -> (!sij_00004_00008)))
c Var 'aux219' direct represents '0' with '-2384'
c Var 'aux219' direct represents '1' with '2384'
c Var 'aux219' order represents '1' with '1'
c Var 'aux219' order represents '0' with '-2384'
c Encoding variable: aux220 with domain: bool (representing constraint (sij_00003_00007 -> (!sij_00004_00006)))
c Var 'aux220' direct represents '0' with '-2385'
c Var 'aux220' direct represents '1' with '2385'
c Var 'aux220' order represents '1' with '1'
c Var 'aux220' order represents '0' with '-2385'
c Encoding variable: aux221 with domain: bool (representing constraint (sij_00003_00007 -> (!sij_00002_00006)))
c Var 'aux221' direct represents '0' with '-2386'
c Var 'aux221' direct represents '1' with '2386'
c Var 'aux221' order represents '1' with '1'
c Var 'aux221' order represents '0' with '-2386'
c Encoding variable: aux222 with domain: bool (representing constraint (sij_00003_00007 -> (!sij_00002_00008)))
c Var 'aux222' direct represents '0' with '-2387'
c Var 'aux222' direct represents '1' with '2387'
c Var 'aux222' order represents '1' with '1'
c Var 'aux222' order represents '0' with '-2387'
c Encoding variable: aux223 with domain: bool (representing constraint (sij_00004_00007 -> (!sij_00005_00008)))
c Var 'aux223' direct represents '0' with '-2388'
c Var 'aux223' direct represents '1' with '2388'
c Var 'aux223' order represents '1' with '1'
c Var 'aux223' order represents '0' with '-2388'
c Encoding variable: aux224 with domain: bool (representing constraint (sij_00004_00007 -> (!sij_00005_00006)))
c Var 'aux224' direct represents '0' with '-2389'
c Var 'aux224' direct represents '1' with '2389'
c Var 'aux224' order represents '1' with '1'
c Var 'aux224' order represents '0' with '-2389'
c Encoding variable: aux225 with domain: bool (representing constraint (sij_00004_00007 -> (!sij_00003_00006)))
c Var 'aux225' direct represents '0' with '-2390'
c Var 'aux225' direct represents '1' with '2390'
c Var 'aux225' order represents '1' with '1'
c Var 'aux225' order represents '0' with '-2390'
c Encoding variable: aux226 with domain: bool (representing constraint (sij_00004_00007 -> (!sij_00003_00008)))
c Var 'aux226' direct represents '0' with '-2391'
c Var 'aux226' direct represents '1' with '2391'
c Var 'aux226' order represents '1' with '1'
c Var 'aux226' order represents '0' with '-2391'
c Encoding variable: aux227 with domain: bool (representing constraint (sij_00005_00007 -> (!sij_00006_00008)))
c Var 'aux227' direct represents '0' with '-2392'
c Var 'aux227' direct represents '1' with '2392'
c Var 'aux227' order represents '1' with '1'
c Var 'aux227' order represents '0' with '-2392'
c Encoding variable: aux228 with domain: bool (representing constraint (sij_00005_00007 -> (!sij_00006_00006)))
c Var 'aux228' direct represents '0' with '-2393'
c Var 'aux228' direct represents '1' with '2393'
c Var 'aux228' order represents '1' with '1'
c Var 'aux228' order represents '0' with '-2393'
c Encoding variable: aux229 with domain: bool (representing constraint (sij_00005_00007 -> (!sij_00004_00006)))
c Var 'aux229' direct represents '0' with '-2394'
c Var 'aux229' direct represents '1' with '2394'
c Var 'aux229' order represents '1' with '1'
c Var 'aux229' order represents '0' with '-2394'
c Encoding variable: aux230 with domain: bool (representing constraint (sij_00005_00007 -> (!sij_00004_00008)))
c Var 'aux230' direct represents '0' with '-2395'
c Var 'aux230' direct represents '1' with '2395'
c Var 'aux230' order represents '1' with '1'
c Var 'aux230' order represents '0' with '-2395'
c Encoding variable: aux231 with domain: bool (representing constraint (sij_00006_00007 -> (!sij_00007_00008)))
c Var 'aux231' direct represents '0' with '-2396'
c Var 'aux231' direct represents '1' with '2396'
c Var 'aux231' order represents '1' with '1'
c Var 'aux231' order represents '0' with '-2396'
c Encoding variable: aux232 with domain: bool (representing constraint (sij_00006_00007 -> (!sij_00007_00006)))
c Var 'aux232' direct represents '0' with '-2397'
c Var 'aux232' direct represents '1' with '2397'
c Var 'aux232' order represents '1' with '1'
c Var 'aux232' order represents '0' with '-2397'
c Encoding variable: aux233 with domain: bool (representing constraint (sij_00006_00007 -> (!sij_00005_00006)))
c Var 'aux233' direct represents '0' with '-2398'
c Var 'aux233' direct represents '1' with '2398'
c Var 'aux233' order represents '1' with '1'
c Var 'aux233' order represents '0' with '-2398'
c Encoding variable: aux234 with domain: bool (representing constraint (sij_00006_00007 -> (!sij_00005_00008)))
c Var 'aux234' direct represents '0' with '-2399'
c Var 'aux234' direct represents '1' with '2399'
c Var 'aux234' order represents '1' with '1'
c Var 'aux234' order represents '0' with '-2399'
c Encoding variable: aux235 with domain: bool (representing constraint (sij_00007_00007 -> (!sij_00008_00008)))
c Var 'aux235' direct represents '0' with '-2400'
c Var 'aux235' direct represents '1' with '2400'
c Var 'aux235' order represents '1' with '1'
c Var 'aux235' order represents '0' with '-2400'
c Encoding variable: aux236 with domain: bool (representing constraint (sij_00007_00007 -> (!sij_00008_00006)))
c Var 'aux236' direct represents '0' with '-2401'
c Var 'aux236' direct represents '1' with '2401'
c Var 'aux236' order represents '1' with '1'
c Var 'aux236' order represents '0' with '-2401'
c Encoding variable: aux237 with domain: bool (representing constraint (sij_00007_00007 -> (!sij_00006_00006)))
c Var 'aux237' direct represents '0' with '-2402'
c Var 'aux237' direct represents '1' with '2402'
c Var 'aux237' order represents '1' with '1'
c Var 'aux237' order represents '0' with '-2402'
c Encoding variable: aux238 with domain: bool (representing constraint (sij_00007_00007 -> (!sij_00006_00008)))
c Var 'aux238' direct represents '0' with '-2403'
c Var 'aux238' direct represents '1' with '2403'
c Var 'aux238' order represents '1' with '1'
c Var 'aux238' order represents '0' with '-2403'
c Encoding variable: aux239 with domain: bool (representing constraint (sij_00008_00007 -> (!sij_00009_00008)))
c Var 'aux239' direct represents '0' with '-2404'
c Var 'aux239' direct represents '1' with '2404'
c Var 'aux239' order represents '1' with '1'
c Var 'aux239' order represents '0' with '-2404'
c Encoding variable: aux240 with domain: bool (representing constraint (sij_00008_00007 -> (!sij_00009_00006)))
c Var 'aux240' direct represents '0' with '-2405'
c Var 'aux240' direct represents '1' with '2405'
c Var 'aux240' order represents '1' with '1'
c Var 'aux240' order represents '0' with '-2405'
c Encoding variable: aux241 with domain: bool (representing constraint (sij_00008_00007 -> (!sij_00007_00006)))
c Var 'aux241' direct represents '0' with '-2406'
c Var 'aux241' direct represents '1' with '2406'
c Var 'aux241' order represents '1' with '1'
c Var 'aux241' order represents '0' with '-2406'
c Encoding variable: aux242 with domain: bool (representing constraint (sij_00008_00007 -> (!sij_00007_00008)))
c Var 'aux242' direct represents '0' with '-2407'
c Var 'aux242' direct represents '1' with '2407'
c Var 'aux242' order represents '1' with '1'
c Var 'aux242' order represents '0' with '-2407'
c Encoding variable: aux243 with domain: bool (representing constraint (sij_00001_00008 -> (!sij_00002_00009)))
c Var 'aux243' direct represents '0' with '-2408'
c Var 'aux243' direct represents '1' with '2408'
c Var 'aux243' order represents '1' with '1'
c Var 'aux243' order represents '0' with '-2408'
c Encoding variable: aux244 with domain: bool (representing constraint (sij_00001_00008 -> (!sij_00002_00007)))
c Var 'aux244' direct represents '0' with '-2409'
c Var 'aux244' direct represents '1' with '2409'
c Var 'aux244' order represents '1' with '1'
c Var 'aux244' order represents '0' with '-2409'
c Encoding variable: aux245 with domain: bool (representing constraint (sij_00001_00008 -> (!sij_00000_00007)))
c Var 'aux245' direct represents '0' with '-2410'
c Var 'aux245' direct represents '1' with '2410'
c Var 'aux245' order represents '1' with '1'
c Var 'aux245' order represents '0' with '-2410'
c Encoding variable: aux246 with domain: bool (representing constraint (sij_00001_00008 -> (!sij_00000_00009)))
c Var 'aux246' direct represents '0' with '-2411'
c Var 'aux246' direct represents '1' with '2411'
c Var 'aux246' order represents '1' with '1'
c Var 'aux246' order represents '0' with '-2411'
c Encoding variable: aux247 with domain: bool (representing constraint (sij_00002_00008 -> (!sij_00003_00009)))
c Var 'aux247' direct represents '0' with '-2412'
c Var 'aux247' direct represents '1' with '2412'
c Var 'aux247' order represents '1' with '1'
c Var 'aux247' order represents '0' with '-2412'
c Encoding variable: aux248 with domain: bool (representing constraint (sij_00002_00008 -> (!sij_00003_00007)))
c Var 'aux248' direct represents '0' with '-2413'
c Var 'aux248' direct represents '1' with '2413'
c Var 'aux248' order represents '1' with '1'
c Var 'aux248' order represents '0' with '-2413'
c Encoding variable: aux249 with domain: bool (representing constraint (sij_00002_00008 -> (!sij_00001_00007)))
c Var 'aux249' direct represents '0' with '-2414'
c Var 'aux249' direct represents '1' with '2414'
c Var 'aux249' order represents '1' with '1'
c Var 'aux249' order represents '0' with '-2414'
c Encoding variable: aux250 with domain: bool (representing constraint (sij_00002_00008 -> (!sij_00001_00009)))
c Var 'aux250' direct represents '0' with '-2415'
c Var 'aux250' direct represents '1' with '2415'
c Var 'aux250' order represents '1' with '1'
c Var 'aux250' order represents '0' with '-2415'
c Encoding variable: aux251 with domain: bool (representing constraint (sij_00003_00008 -> (!sij_00004_00009)))
c Var 'aux251' direct represents '0' with '-2416'
c Var 'aux251' direct represents '1' with '2416'
c Var 'aux251' order represents '1' with '1'
c Var 'aux251' order represents '0' with '-2416'
c Encoding variable: aux252 with domain: bool (representing constraint (sij_00003_00008 -> (!sij_00004_00007)))
c Var 'aux252' direct represents '0' with '-2417'
c Var 'aux252' direct represents '1' with '2417'
c Var 'aux252' order represents '1' with '1'
c Var 'aux252' order represents '0' with '-2417'
c Encoding variable: aux253 with domain: bool (representing constraint (sij_00003_00008 -> (!sij_00002_00007)))
c Var 'aux253' direct represents '0' with '-2418'
c Var 'aux253' direct represents '1' with '2418'
c Var 'aux253' order represents '1' with '1'
c Var 'aux253' order represents '0' with '-2418'
c Encoding variable: aux254 with domain: bool (representing constraint (sij_00003_00008 -> (!sij_00002_00009)))
c Var 'aux254' direct represents '0' with '-2419'
c Var 'aux254' direct represents '1' with '2419'
c Var 'aux254' order represents '1' with '1'
c Var 'aux254' order represents '0' with '-2419'
c Encoding variable: aux255 with domain: bool (representing constraint (sij_00004_00008 -> (!sij_00005_00009)))
c Var 'aux255' direct represents '0' with '-2420'
c Var 'aux255' direct represents '1' with '2420'
c Var 'aux255' order represents '1' with '1'
c Var 'aux255' order represents '0' with '-2420'
c Encoding variable: aux256 with domain: bool (representing constraint (sij_00004_00008 -> (!sij_00005_00007)))
c Var 'aux256' direct represents '0' with '-2421'
c Var 'aux256' direct represents '1' with '2421'
c Var 'aux256' order represents '1' with '1'
c Var 'aux256' order represents '0' with '-2421'
c Encoding variable: aux257 with domain: bool (representing constraint (sij_00004_00008 -> (!sij_00003_00007)))
c Var 'aux257' direct represents '0' with '-2422'
c Var 'aux257' direct represents '1' with '2422'
c Var 'aux257' order represents '1' with '1'
c Var 'aux257' order represents '0' with '-2422'
c Encoding variable: aux258 with domain: bool (representing constraint (sij_00004_00008 -> (!sij_00003_00009)))
c Var 'aux258' direct represents '0' with '-2423'
c Var 'aux258' direct represents '1' with '2423'
c Var 'aux258' order represents '1' with '1'
c Var 'aux258' order represents '0' with '-2423'
c Encoding variable: aux259 with domain: bool (representing constraint (sij_00005_00008 -> (!sij_00006_00009)))
c Var 'aux259' direct represents '0' with '-2424'
c Var 'aux259' direct represents '1' with '2424'
c Var 'aux259' order represents '1' with '1'
c Var 'aux259' order represents '0' with '-2424'
c Encoding variable: aux260 with domain: bool (representing constraint (sij_00005_00008 -> (!sij_00006_00007)))
c Var 'aux260' direct represents '0' with '-2425'
c Var 'aux260' direct represents '1' with '2425'
c Var 'aux260' order represents '1' with '1'
c Var 'aux260' order represents '0' with '-2425'
c Encoding variable: aux261 with domain: bool (representing constraint (sij_00005_00008 -> (!sij_00004_00007)))
c Var 'aux261' direct represents '0' with '-2426'
c Var 'aux261' direct represents '1' with '2426'
c Var 'aux261' order represents '1' with '1'
c Var 'aux261' order represents '0' with '-2426'
c Encoding variable: aux262 with domain: bool (representing constraint (sij_00005_00008 -> (!sij_00004_00009)))
c Var 'aux262' direct represents '0' with '-2427'
c Var 'aux262' direct represents '1' with '2427'
c Var 'aux262' order represents '1' with '1'
c Var 'aux262' order represents '0' with '-2427'
c Encoding variable: aux263 with domain: bool (representing constraint (sij_00006_00008 -> (!sij_00007_00009)))
c Var 'aux263' direct represents '0' with '-2428'
c Var 'aux263' direct represents '1' with '2428'
c Var 'aux263' order represents '1' with '1'
c Var 'aux263' order represents '0' with '-2428'
c Encoding variable: aux264 with domain: bool (representing constraint (sij_00006_00008 -> (!sij_00007_00007)))
c Var 'aux264' direct represents '0' with '-2429'
c Var 'aux264' direct represents '1' with '2429'
c Var 'aux264' order represents '1' with '1'
c Var 'aux264' order represents '0' with '-2429'
c Encoding variable: aux265 with domain: bool (representing constraint (sij_00006_00008 -> (!sij_00005_00007)))
c Var 'aux265' direct represents '0' with '-2430'
c Var 'aux265' direct represents '1' with '2430'
c Var 'aux265' order represents '1' with '1'
c Var 'aux265' order represents '0' with '-2430'
c Encoding variable: aux266 with domain: bool (representing constraint (sij_00006_00008 -> (!sij_00005_00009)))
c Var 'aux266' direct represents '0' with '-2431'
c Var 'aux266' direct represents '1' with '2431'
c Var 'aux266' order represents '1' with '1'
c Var 'aux266' order represents '0' with '-2431'
c Encoding variable: aux267 with domain: bool (representing constraint (sij_00007_00008 -> (!sij_00008_00009)))
c Var 'aux267' direct represents '0' with '-2432'
c Var 'aux267' direct represents '1' with '2432'
c Var 'aux267' order represents '1' with '1'
c Var 'aux267' order represents '0' with '-2432'
c Encoding variable: aux268 with domain: bool (representing constraint (sij_00007_00008 -> (!sij_00008_00007)))
c Var 'aux268' direct represents '0' with '-2433'
c Var 'aux268' direct represents '1' with '2433'
c Var 'aux268' order represents '1' with '1'
c Var 'aux268' order represents '0' with '-2433'
c Encoding variable: aux269 with domain: bool (representing constraint (sij_00007_00008 -> (!sij_00006_00007)))
c Var 'aux269' direct represents '0' with '-2434'
c Var 'aux269' direct represents '1' with '2434'
c Var 'aux269' order represents '1' with '1'
c Var 'aux269' order represents '0' with '-2434'
c Encoding variable: aux270 with domain: bool (representing constraint (sij_00007_00008 -> (!sij_00006_00009)))
c Var 'aux270' direct represents '0' with '-2435'
c Var 'aux270' direct represents '1' with '2435'
c Var 'aux270' order represents '1' with '1'
c Var 'aux270' order represents '0' with '-2435'
c Encoding variable: aux271 with domain: bool (representing constraint (sij_00008_00008 -> (!sij_00009_00009)))
c Var 'aux271' direct represents '0' with '-2436'
c Var 'aux271' direct represents '1' with '2436'
c Var 'aux271' order represents '1' with '1'
c Var 'aux271' order represents '0' with '-2436'
c Encoding variable: aux272 with domain: bool (representing constraint (sij_00008_00008 -> (!sij_00009_00007)))
c Var 'aux272' direct represents '0' with '-2437'
c Var 'aux272' direct represents '1' with '2437'
c Var 'aux272' order represents '1' with '1'
c Var 'aux272' order represents '0' with '-2437'
c Encoding variable: aux273 with domain: bool (representing constraint (sij_00008_00008 -> (!sij_00007_00007)))
c Var 'aux273' direct represents '0' with '-2438'
c Var 'aux273' direct represents '1' with '2438'
c Var 'aux273' order represents '1' with '1'
c Var 'aux273' order represents '0' with '-2438'
c Encoding variable: aux274 with domain: bool (representing constraint (sij_00008_00008 -> (!sij_00007_00009)))
c Var 'aux274' direct represents '0' with '-2439'
c Var 'aux274' direct represents '1' with '2439'
c Var 'aux274' order represents '1' with '1'
c Var 'aux274' order represents '0' with '-2439'
c Encoding variable: aux275 with domain: bool (representing constraint ((lijk_00001_00001_00001 + lijk_00001_00001_00002 + lijk_00001_00001_00003 + rijk_00001_00001_00001 + rijk_00001_00001_00002 + rijk_00001_00001_00003 + 1 + uijk_00001_00001_00001 + uijk_00001_00001_00002 + uijk_00001_00001_00003 + dijk_00001_00001_00001 + dijk_00001_00001_00002 + dijk_00001_00001_00003)=tv=agrid_00001_00001))
c Var 'aux275' direct represents '0' with '-2440'
c Var 'aux275' direct represents '1' with '2440'
c Var 'aux275' order represents '1' with '1'
c Var 'aux275' order represents '0' with '-2440'
c Encoding variable: aux276 with domain: bool (representing constraint (sij_00001_00001 -> aux275))
c Var 'aux276' direct represents '0' with '-2441'
c Var 'aux276' direct represents '1' with '2441'
c Var 'aux276' order represents '1' with '1'
c Var 'aux276' order represents '0' with '-2441'
c Encoding variable: aux277 with domain: bool (representing constraint ((lijk_00002_00001_00001 + lijk_00002_00001_00002 + lijk_00002_00001_00003 + rijk_00002_00001_00001 + rijk_00002_00001_00002 + rijk_00002_00001_00003 + 1 + uijk_00002_00001_00001 + uijk_00002_00001_00002 + uijk_00002_00001_00003 + dijk_00002_00001_00001 + dijk_00002_00001_00002 + dijk_00002_00001_00003)=tv=agrid_00002_00001))
c Var 'aux277' direct represents '0' with '-2442'
c Var 'aux277' direct represents '1' with '2442'
c Var 'aux277' order represents '1' with '1'
c Var 'aux277' order represents '0' with '-2442'
c Encoding variable: aux278 with domain: bool (representing constraint (sij_00002_00001 -> aux277))
c Var 'aux278' direct represents '0' with '-2443'
c Var 'aux278' direct represents '1' with '2443'
c Var 'aux278' order represents '1' with '1'
c Var 'aux278' order represents '0' with '-2443'
c Encoding variable: aux279 with domain: bool (representing constraint ((rijk_00003_00001_00001 + rijk_00003_00001_00002 + rijk_00003_00001_00003 + 1 + uijk_00003_00001_00001 + uijk_00003_00001_00002 + uijk_00003_00001_00003 + dijk_00003_00001_00001 + dijk_00003_00001_00002 + dijk_00003_00001_00003 + lijk_00003_00001_00001 + lijk_00003_00001_00002 + lijk_00003_00001_00003)=tv=agrid_00003_00001))
c Var 'aux279' direct represents '0' with '-2444'
c Var 'aux279' direct represents '1' with '2444'
c Var 'aux279' order represents '1' with '1'
c Var 'aux279' order represents '0' with '-2444'
c Encoding variable: aux280 with domain: bool (representing constraint (sij_00003_00001 -> aux279))
c Var 'aux280' direct represents '0' with '-2445'
c Var 'aux280' direct represents '1' with '2445'
c Var 'aux280' order represents '1' with '1'
c Var 'aux280' order represents '0' with '-2445'
c Encoding variable: aux281 with domain: bool (representing constraint ((rijk_00004_00001_00001 + rijk_00004_00001_00002 + rijk_00004_00001_00003 + 1 + uijk_00004_00001_00001 + uijk_00004_00001_00002 + uijk_00004_00001_00003 + dijk_00004_00001_00001 + dijk_00004_00001_00002 + dijk_00004_00001_00003 + lijk_00004_00001_00001 + lijk_00004_00001_00002 + lijk_00004_00001_00003)=tv=agrid_00004_00001))
c Var 'aux281' direct represents '0' with '-2446'
c Var 'aux281' direct represents '1' with '2446'
c Var 'aux281' order represents '1' with '1'
c Var 'aux281' order represents '0' with '-2446'
c Encoding variable: aux282 with domain: bool (representing constraint (sij_00004_00001 -> aux281))
c Var 'aux282' direct represents '0' with '-2447'
c Var 'aux282' direct represents '1' with '2447'
c Var 'aux282' order represents '1' with '1'
c Var 'aux282' order represents '0' with '-2447'
c Encoding variable: aux283 with domain: bool (representing constraint ((rijk_00005_00001_00001 + rijk_00005_00001_00002 + rijk_00005_00001_00003 + 1 + uijk_00005_00001_00001 + uijk_00005_00001_00002 + uijk_00005_00001_00003 + dijk_00005_00001_00001 + dijk_00005_00001_00002 + dijk_00005_00001_00003 + lijk_00005_00001_00001 + lijk_00005_00001_00002 + lijk_00005_00001_00003)=tv=agrid_00005_00001))
c Var 'aux283' direct represents '0' with '-2448'
c Var 'aux283' direct represents '1' with '2448'
c Var 'aux283' order represents '1' with '1'
c Var 'aux283' order represents '0' with '-2448'
c Encoding variable: aux284 with domain: bool (representing constraint (sij_00005_00001 -> aux283))
c Var 'aux284' direct represents '0' with '-2449'
c Var 'aux284' direct represents '1' with '2449'
c Var 'aux284' order represents '1' with '1'
c Var 'aux284' order represents '0' with '-2449'
c Encoding variable: aux285 with domain: bool (representing constraint ((1 + uijk_00006_00001_00001 + uijk_00006_00001_00002 + uijk_00006_00001_00003 + dijk_00006_00001_00001 + dijk_00006_00001_00002 + dijk_00006_00001_00003 + lijk_00006_00001_00001 + lijk_00006_00001_00002 + lijk_00006_00001_00003 + rijk_00006_00001_00001 + rijk_00006_00001_00002 + rijk_00006_00001_00003)=tv=agrid_00006_00001))
c Var 'aux285' direct represents '0' with '-2450'
c Var 'aux285' direct represents '1' with '2450'
c Var 'aux285' order represents '1' with '1'
c Var 'aux285' order represents '0' with '-2450'
c Encoding variable: aux286 with domain: bool (representing constraint (sij_00006_00001 -> aux285))
c Var 'aux286' direct represents '0' with '-2451'
c Var 'aux286' direct represents '1' with '2451'
c Var 'aux286' order represents '1' with '1'
c Var 'aux286' order represents '0' with '-2451'
c Encoding variable: aux287 with domain: bool (representing constraint ((uijk_00007_00001_00001 + uijk_00007_00001_00002 + uijk_00007_00001_00003 + 1 + dijk_00007_00001_00001 + dijk_00007_00001_00002 + dijk_00007_00001_00003 + lijk_00007_00001_00001 + lijk_00007_00001_00002 + lijk_00007_00001_00003 + rijk_00007_00001_00001 + rijk_00007_00001_00002 + rijk_00007_00001_00003)=tv=agrid_00007_00001))
c Var 'aux287' direct represents '0' with '-2452'
c Var 'aux287' direct represents '1' with '2452'
c Var 'aux287' order represents '1' with '1'
c Var 'aux287' order represents '0' with '-2452'
c Encoding variable: aux288 with domain: bool (representing constraint (sij_00007_00001 -> aux287))
c Var 'aux288' direct represents '0' with '-2453'
c Var 'aux288' direct represents '1' with '2453'
c Var 'aux288' order represents '1' with '1'
c Var 'aux288' order represents '0' with '-2453'
c Encoding variable: aux289 with domain: bool (representing constraint ((uijk_00008_00001_00001 + uijk_00008_00001_00002 + uijk_00008_00001_00003 + dijk_00008_00001_00001 + dijk_00008_00001_00002 + dijk_00008_00001_00003 + 1 + lijk_00008_00001_00001 + lijk_00008_00001_00002 + lijk_00008_00001_00003 + rijk_00008_00001_00001 + rijk_00008_00001_00002 + rijk_00008_00001_00003)=tv=agrid_00008_00001))
c Var 'aux289' direct represents '0' with '-2454'
c Var 'aux289' direct represents '1' with '2454'
c Var 'aux289' order represents '1' with '1'
c Var 'aux289' order represents '0' with '-2454'
c Encoding variable: aux290 with domain: bool (representing constraint (sij_00008_00001 -> aux289))
c Var 'aux290' direct represents '0' with '-2455'
c Var 'aux290' direct represents '1' with '2455'
c Var 'aux290' order represents '1' with '1'
c Var 'aux290' order represents '0' with '-2455'
c Encoding variable: aux291 with domain: bool (representing constraint ((uijk_00001_00002_00001 + uijk_00001_00002_00002 + uijk_00001_00002_00003 + dijk_00001_00002_00001 + dijk_00001_00002_00002 + dijk_00001_00002_00003 + lijk_00001_00002_00001 + lijk_00001_00002_00002 + lijk_00001_00002_00003 + rijk_00001_00002_00001 + rijk_00001_00002_00002 + rijk_00001_00002_00003 + 1)=tv=agrid_00001_00002))
c Var 'aux291' direct represents '0' with '-2456'
c Var 'aux291' direct represents '1' with '2456'
c Var 'aux291' order represents '1' with '1'
c Var 'aux291' order represents '0' with '-2456'
c Encoding variable: aux292 with domain: bool (representing constraint (sij_00001_00002 -> aux291))
c Var 'aux292' direct represents '0' with '-2457'
c Var 'aux292' direct represents '1' with '2457'
c Var 'aux292' order represents '1' with '1'
c Var 'aux292' order represents '0' with '-2457'
c Encoding variable: aux293 with domain: bool (representing constraint ((dijk_00002_00002_00001 + dijk_00002_00002_00002 + dijk_00002_00002_00003 + lijk_00002_00002_00001 + lijk_00002_00002_00002 + lijk_00002_00002_00003 + rijk_00002_00002_00001 + rijk_00002_00002_00002 + rijk_00002_00002_00003 + 1 + uijk_00002_00002_00001 + uijk_00002_00002_00002 + uijk_00002_00002_00003)=tv=agrid_00002_00002))
c Var 'aux293' direct represents '0' with '-2458'
c Var 'aux293' direct represents '1' with '2458'
c Var 'aux293' order represents '1' with '1'
c Var 'aux293' order represents '0' with '-2458'
c Encoding variable: aux294 with domain: bool (representing constraint (sij_00002_00002 -> aux293))
c Var 'aux294' direct represents '0' with '-2459'
c Var 'aux294' direct represents '1' with '2459'
c Var 'aux294' order represents '1' with '1'
c Var 'aux294' order represents '0' with '-2459'
c Encoding variable: aux295 with domain: bool (representing constraint ((lijk_00003_00002_00001 + lijk_00003_00002_00002 + lijk_00003_00002_00003 + rijk_00003_00002_00001 + rijk_00003_00002_00002 + rijk_00003_00002_00003 + 1 + uijk_00003_00002_00001 + uijk_00003_00002_00002 + uijk_00003_00002_00003 + dijk_00003_00002_00001 + dijk_00003_00002_00002 + dijk_00003_00002_00003)=tv=agrid_00003_00002))
c Var 'aux295' direct represents '0' with '-2460'
c Var 'aux295' direct represents '1' with '2460'
c Var 'aux295' order represents '1' with '1'
c Var 'aux295' order represents '0' with '-2460'
c Encoding variable: aux296 with domain: bool (representing constraint (sij_00003_00002 -> aux295))
c Var 'aux296' direct represents '0' with '-2461'
c Var 'aux296' direct represents '1' with '2461'
c Var 'aux296' order represents '1' with '1'
c Var 'aux296' order represents '0' with '-2461'
c Encoding variable: aux297 with domain: bool (representing constraint ((lijk_00004_00002_00001 + lijk_00004_00002_00002 + lijk_00004_00002_00003 + rijk_00004_00002_00001 + rijk_00004_00002_00002 + rijk_00004_00002_00003 + 1 + uijk_00004_00002_00001 + uijk_00004_00002_00002 + uijk_00004_00002_00003 + dijk_00004_00002_00001 + dijk_00004_00002_00002 + dijk_00004_00002_00003)=tv=agrid_00004_00002))
c Var 'aux297' direct represents '0' with '-2462'
c Var 'aux297' direct represents '1' with '2462'
c Var 'aux297' order represents '1' with '1'
c Var 'aux297' order represents '0' with '-2462'
c Encoding variable: aux298 with domain: bool (representing constraint (sij_00004_00002 -> aux297))
c Var 'aux298' direct represents '0' with '-2463'
c Var 'aux298' direct represents '1' with '2463'
c Var 'aux298' order represents '1' with '1'
c Var 'aux298' order represents '0' with '-2463'
c Encoding variable: aux299 with domain: bool (representing constraint ((lijk_00005_00002_00001 + lijk_00005_00002_00002 + lijk_00005_00002_00003 + rijk_00005_00002_00001 + rijk_00005_00002_00002 + rijk_00005_00002_00003 + 1 + uijk_00005_00002_00001 + uijk_00005_00002_00002 + uijk_00005_00002_00003 + dijk_00005_00002_00001 + dijk_00005_00002_00002 + dijk_00005_00002_00003)=tv=agrid_00005_00002))
c Var 'aux299' direct represents '0' with '-2464'
c Var 'aux299' direct represents '1' with '2464'
c Var 'aux299' order represents '1' with '1'
c Var 'aux299' order represents '0' with '-2464'
c Encoding variable: aux300 with domain: bool (representing constraint (sij_00005_00002 -> aux299))
c Var 'aux300' direct represents '0' with '-2465'
c Var 'aux300' direct represents '1' with '2465'
c Var 'aux300' order represents '1' with '1'
c Var 'aux300' order represents '0' with '-2465'
c Encoding variable: aux301 with domain: bool (representing constraint ((rijk_00006_00002_00001 + rijk_00006_00002_00002 + rijk_00006_00002_00003 + 1 + uijk_00006_00002_00001 + uijk_00006_00002_00002 + uijk_00006_00002_00003 + dijk_00006_00002_00001 + dijk_00006_00002_00002 + dijk_00006_00002_00003 + lijk_00006_00002_00001 + lijk_00006_00002_00002 + lijk_00006_00002_00003)=tv=agrid_00006_00002))
c Var 'aux301' direct represents '0' with '-2466'
c Var 'aux301' direct represents '1' with '2466'
c Var 'aux301' order represents '1' with '1'
c Var 'aux301' order represents '0' with '-2466'
c Encoding variable: aux302 with domain: bool (representing constraint (sij_00006_00002 -> aux301))
c Var 'aux302' direct represents '0' with '-2467'
c Var 'aux302' direct represents '1' with '2467'
c Var 'aux302' order represents '1' with '1'
c Var 'aux302' order represents '0' with '-2467'
c Encoding variable: aux303 with domain: bool (representing constraint ((rijk_00007_00002_00001 + rijk_00007_00002_00002 + rijk_00007_00002_00003 + 1 + uijk_00007_00002_00001 + uijk_00007_00002_00002 + uijk_00007_00002_00003 + dijk_00007_00002_00001 + dijk_00007_00002_00002 + dijk_00007_00002_00003 + lijk_00007_00002_00001 + lijk_00007_00002_00002 + lijk_00007_00002_00003)=tv=agrid_00007_00002))
c Var 'aux303' direct represents '0' with '-2468'
c Var 'aux303' direct represents '1' with '2468'
c Var 'aux303' order represents '1' with '1'
c Var 'aux303' order represents '0' with '-2468'
c Encoding variable: aux304 with domain: bool (representing constraint (sij_00007_00002 -> aux303))
c Var 'aux304' direct represents '0' with '-2469'
c Var 'aux304' direct represents '1' with '2469'
c Var 'aux304' order represents '1' with '1'
c Var 'aux304' order represents '0' with '-2469'
c Encoding variable: aux305 with domain: bool (representing constraint ((rijk_00008_00002_00001 + rijk_00008_00002_00002 + rijk_00008_00002_00003 + 1 + uijk_00008_00002_00001 + uijk_00008_00002_00002 + uijk_00008_00002_00003 + dijk_00008_00002_00001 + dijk_00008_00002_00002 + dijk_00008_00002_00003 + lijk_00008_00002_00001 + lijk_00008_00002_00002 + lijk_00008_00002_00003)=tv=agrid_00008_00002))
c Var 'aux305' direct represents '0' with '-2470'
c Var 'aux305' direct represents '1' with '2470'
c Var 'aux305' order represents '1' with '1'
c Var 'aux305' order represents '0' with '-2470'
c Encoding variable: aux306 with domain: bool (representing constraint (sij_00008_00002 -> aux305))
c Var 'aux306' direct represents '0' with '-2471'
c Var 'aux306' direct represents '1' with '2471'
c Var 'aux306' order represents '1' with '1'
c Var 'aux306' order represents '0' with '-2471'
c Encoding variable: aux307 with domain: bool (representing constraint ((uijk_00001_00003_00001 + uijk_00001_00003_00002 + uijk_00001_00003_00003 + dijk_00001_00003_00001 + dijk_00001_00003_00002 + dijk_00001_00003_00003 + 1 + lijk_00001_00003_00001 + lijk_00001_00003_00002 + lijk_00001_00003_00003 + rijk_00001_00003_00001 + rijk_00001_00003_00002 + rijk_00001_00003_00003)=tv=agrid_00001_00003))
c Var 'aux307' direct represents '0' with '-2472'
c Var 'aux307' direct represents '1' with '2472'
c Var 'aux307' order represents '1' with '1'
c Var 'aux307' order represents '0' with '-2472'
c Encoding variable: aux308 with domain: bool (representing constraint (sij_00001_00003 -> aux307))
c Var 'aux308' direct represents '0' with '-2473'
c Var 'aux308' direct represents '1' with '2473'
c Var 'aux308' order represents '1' with '1'
c Var 'aux308' order represents '0' with '-2473'
c Encoding variable: aux309 with domain: bool (representing constraint ((uijk_00002_00003_00001 + uijk_00002_00003_00002 + uijk_00002_00003_00003 + dijk_00002_00003_00001 + dijk_00002_00003_00002 + dijk_00002_00003_00003 + lijk_00002_00003_00001 + lijk_00002_00003_00002 + lijk_00002_00003_00003 + 1 + rijk_00002_00003_00001 + rijk_00002_00003_00002 + rijk_00002_00003_00003)=tv=agrid_00002_00003))
c Var 'aux309' direct represents '0' with '-2474'
c Var 'aux309' direct represents '1' with '2474'
c Var 'aux309' order represents '1' with '1'
c Var 'aux309' order represents '0' with '-2474'
c Encoding variable: aux310 with domain: bool (representing constraint (sij_00002_00003 -> aux309))
c Var 'aux310' direct represents '0' with '-2475'
c Var 'aux310' direct represents '1' with '2475'
c Var 'aux310' order represents '1' with '1'
c Var 'aux310' order represents '0' with '-2475'
c Encoding variable: aux311 with domain: bool (representing constraint ((uijk_00003_00003_00001 + uijk_00003_00003_00002 + uijk_00003_00003_00003 + dijk_00003_00003_00001 + dijk_00003_00003_00002 + dijk_00003_00003_00003 + lijk_00003_00003_00001 + lijk_00003_00003_00002 + lijk_00003_00003_00003 + 1 + rijk_00003_00003_00001 + rijk_00003_00003_00002 + rijk_00003_00003_00003)=tv=agrid_00003_00003))
c Var 'aux311' direct represents '0' with '-2476'
c Var 'aux311' direct represents '1' with '2476'
c Var 'aux311' order represents '1' with '1'
c Var 'aux311' order represents '0' with '-2476'
c Encoding variable: aux312 with domain: bool (representing constraint (sij_00003_00003 -> aux311))
c Var 'aux312' direct represents '0' with '-2477'
c Var 'aux312' direct represents '1' with '2477'
c Var 'aux312' order represents '1' with '1'
c Var 'aux312' order represents '0' with '-2477'
c Encoding variable: aux313 with domain: bool (representing constraint ((uijk_00004_00003_00001 + uijk_00004_00003_00002 + uijk_00004_00003_00003 + dijk_00004_00003_00001 + dijk_00004_00003_00002 + dijk_00004_00003_00003 + lijk_00004_00003_00001 + lijk_00004_00003_00002 + lijk_00004_00003_00003 + rijk_00004_00003_00001 + rijk_00004_00003_00002 + rijk_00004_00003_00003 + 1)=tv=agrid_00004_00003))
c Var 'aux313' direct represents '0' with '-2478'
c Var 'aux313' direct represents '1' with '2478'
c Var 'aux313' order represents '1' with '1'
c Var 'aux313' order represents '0' with '-2478'
c Encoding variable: aux314 with domain: bool (representing constraint (sij_00004_00003 -> aux313))
c Var 'aux314' direct represents '0' with '-2479'
c Var 'aux314' direct represents '1' with '2479'
c Var 'aux314' order represents '1' with '1'
c Var 'aux314' order represents '0' with '-2479'
c Encoding variable: aux315 with domain: bool (representing constraint ((dijk_00005_00003_00001 + dijk_00005_00003_00002 + dijk_00005_00003_00003 + lijk_00005_00003_00001 + lijk_00005_00003_00002 + lijk_00005_00003_00003 + rijk_00005_00003_00001 + rijk_00005_00003_00002 + rijk_00005_00003_00003 + 1 + uijk_00005_00003_00001 + uijk_00005_00003_00002 + uijk_00005_00003_00003)=tv=agrid_00005_00003))
c Var 'aux315' direct represents '0' with '-2480'
c Var 'aux315' direct represents '1' with '2480'
c Var 'aux315' order represents '1' with '1'
c Var 'aux315' order represents '0' with '-2480'
c Encoding variable: aux316 with domain: bool (representing constraint (sij_00005_00003 -> aux315))
c Var 'aux316' direct represents '0' with '-2481'
c Var 'aux316' direct represents '1' with '2481'
c Var 'aux316' order represents '1' with '1'
c Var 'aux316' order represents '0' with '-2481'
c Encoding variable: aux317 with domain: bool (representing constraint ((lijk_00006_00003_00001 + lijk_00006_00003_00002 + lijk_00006_00003_00003 + rijk_00006_00003_00001 + rijk_00006_00003_00002 + rijk_00006_00003_00003 + 1 + uijk_00006_00003_00001 + uijk_00006_00003_00002 + uijk_00006_00003_00003 + dijk_00006_00003_00001 + dijk_00006_00003_00002 + dijk_00006_00003_00003)=tv=agrid_00006_00003))
c Var 'aux317' direct represents '0' with '-2482'
c Var 'aux317' direct represents '1' with '2482'
c Var 'aux317' order represents '1' with '1'
c Var 'aux317' order represents '0' with '-2482'
c Encoding variable: aux318 with domain: bool (representing constraint (sij_00006_00003 -> aux317))
c Var 'aux318' direct represents '0' with '-2483'
c Var 'aux318' direct represents '1' with '2483'
c Var 'aux318' order represents '1' with '1'
c Var 'aux318' order represents '0' with '-2483'
c Encoding variable: aux319 with domain: bool (representing constraint ((lijk_00007_00003_00001 + lijk_00007_00003_00002 + lijk_00007_00003_00003 + rijk_00007_00003_00001 + rijk_00007_00003_00002 + rijk_00007_00003_00003 + 1 + uijk_00007_00003_00001 + uijk_00007_00003_00002 + uijk_00007_00003_00003 + dijk_00007_00003_00001 + dijk_00007_00003_00002 + dijk_00007_00003_00003)=tv=agrid_00007_00003))
c Var 'aux319' direct represents '0' with '-2484'
c Var 'aux319' direct represents '1' with '2484'
c Var 'aux319' order represents '1' with '1'
c Var 'aux319' order represents '0' with '-2484'
c Encoding variable: aux320 with domain: bool (representing constraint (sij_00007_00003 -> aux319))
c Var 'aux320' direct represents '0' with '-2485'
c Var 'aux320' direct represents '1' with '2485'
c Var 'aux320' order represents '1' with '1'
c Var 'aux320' order represents '0' with '-2485'
c Encoding variable: aux321 with domain: bool (representing constraint ((lijk_00008_00003_00001 + lijk_00008_00003_00002 + lijk_00008_00003_00003 + rijk_00008_00003_00001 + rijk_00008_00003_00002 + rijk_00008_00003_00003 + 1 + uijk_00008_00003_00001 + uijk_00008_00003_00002 + uijk_00008_00003_00003 + dijk_00008_00003_00001 + dijk_00008_00003_00002 + dijk_00008_00003_00003)=tv=agrid_00008_00003))
c Var 'aux321' direct represents '0' with '-2486'
c Var 'aux321' direct represents '1' with '2486'
c Var 'aux321' order represents '1' with '1'
c Var 'aux321' order represents '0' with '-2486'
c Encoding variable: aux322 with domain: bool (representing constraint (sij_00008_00003 -> aux321))
c Var 'aux322' direct represents '0' with '-2487'
c Var 'aux322' direct represents '1' with '2487'
c Var 'aux322' order represents '1' with '1'
c Var 'aux322' order represents '0' with '-2487'
c Encoding variable: aux323 with domain: bool (representing constraint ((uijk_00001_00004_00001 + uijk_00001_00004_00002 + uijk_00001_00004_00003 + 1 + dijk_00001_00004_00001 + dijk_00001_00004_00002 + dijk_00001_00004_00003 + lijk_00001_00004_00001 + lijk_00001_00004_00002 + lijk_00001_00004_00003 + rijk_00001_00004_00001 + rijk_00001_00004_00002 + rijk_00001_00004_00003)=tv=agrid_00001_00004))
c Var 'aux323' direct represents '0' with '-2488'
c Var 'aux323' direct represents '1' with '2488'
c Var 'aux323' order represents '1' with '1'
c Var 'aux323' order represents '0' with '-2488'
c Encoding variable: aux324 with domain: bool (representing constraint (sij_00001_00004 -> aux323))
c Var 'aux324' direct represents '0' with '-2489'
c Var 'aux324' direct represents '1' with '2489'
c Var 'aux324' order represents '1' with '1'
c Var 'aux324' order represents '0' with '-2489'
c Encoding variable: aux325 with domain: bool (representing constraint ((uijk_00002_00004_00001 + uijk_00002_00004_00002 + uijk_00002_00004_00003 + dijk_00002_00004_00001 + dijk_00002_00004_00002 + dijk_00002_00004_00003 + 1 + lijk_00002_00004_00001 + lijk_00002_00004_00002 + lijk_00002_00004_00003 + rijk_00002_00004_00001 + rijk_00002_00004_00002 + rijk_00002_00004_00003)=tv=agrid_00002_00004))
c Var 'aux325' direct represents '0' with '-2490'
c Var 'aux325' direct represents '1' with '2490'
c Var 'aux325' order represents '1' with '1'
c Var 'aux325' order represents '0' with '-2490'
c Encoding variable: aux326 with domain: bool (representing constraint (sij_00002_00004 -> aux325))
c Var 'aux326' direct represents '0' with '-2491'
c Var 'aux326' direct represents '1' with '2491'
c Var 'aux326' order represents '1' with '1'
c Var 'aux326' order represents '0' with '-2491'
c Encoding variable: aux327 with domain: bool (representing constraint ((uijk_00003_00004_00001 + uijk_00003_00004_00002 + uijk_00003_00004_00003 + dijk_00003_00004_00001 + dijk_00003_00004_00002 + dijk_00003_00004_00003 + 1 + lijk_00003_00004_00001 + lijk_00003_00004_00002 + lijk_00003_00004_00003 + rijk_00003_00004_00001 + rijk_00003_00004_00002 + rijk_00003_00004_00003)=tv=agrid_00003_00004))
c Var 'aux327' direct represents '0' with '-2492'
c Var 'aux327' direct represents '1' with '2492'
c Var 'aux327' order represents '1' with '1'
c Var 'aux327' order represents '0' with '-2492'
c Encoding variable: aux328 with domain: bool (representing constraint (sij_00003_00004 -> aux327))
c Var 'aux328' direct represents '0' with '-2493'
c Var 'aux328' direct represents '1' with '2493'
c Var 'aux328' order represents '1' with '1'
c Var 'aux328' order represents '0' with '-2493'
c Encoding variable: aux329 with domain: bool (representing constraint ((uijk_00004_00004_00001 + uijk_00004_00004_00002 + uijk_00004_00004_00003 + dijk_00004_00004_00001 + dijk_00004_00004_00002 + dijk_00004_00004_00003 + 1 + lijk_00004_00004_00001 + lijk_00004_00004_00002 + lijk_00004_00004_00003 + rijk_00004_00004_00001 + rijk_00004_00004_00002 + rijk_00004_00004_00003)=tv=agrid_00004_00004))
c Var 'aux329' direct represents '0' with '-2494'
c Var 'aux329' direct represents '1' with '2494'
c Var 'aux329' order represents '1' with '1'
c Var 'aux329' order represents '0' with '-2494'
c Encoding variable: aux330 with domain: bool (representing constraint (sij_00004_00004 -> aux329))
c Var 'aux330' direct represents '0' with '-2495'
c Var 'aux330' direct represents '1' with '2495'
c Var 'aux330' order represents '1' with '1'
c Var 'aux330' order represents '0' with '-2495'
c Encoding variable: aux331 with domain: bool (representing constraint ((uijk_00005_00004_00001 + uijk_00005_00004_00002 + uijk_00005_00004_00003 + dijk_00005_00004_00001 + dijk_00005_00004_00002 + dijk_00005_00004_00003 + lijk_00005_00004_00001 + lijk_00005_00004_00002 + lijk_00005_00004_00003 + 1 + rijk_00005_00004_00001 + rijk_00005_00004_00002 + rijk_00005_00004_00003)=tv=agrid_00005_00004))
c Var 'aux331' direct represents '0' with '-2496'
c Var 'aux331' direct represents '1' with '2496'
c Var 'aux331' order represents '1' with '1'
c Var 'aux331' order represents '0' with '-2496'
c Encoding variable: aux332 with domain: bool (representing constraint (sij_00005_00004 -> aux331))
c Var 'aux332' direct represents '0' with '-2497'
c Var 'aux332' direct represents '1' with '2497'
c Var 'aux332' order represents '1' with '1'
c Var 'aux332' order represents '0' with '-2497'
c Encoding variable: aux333 with domain: bool (representing constraint ((uijk_00006_00004_00001 + uijk_00006_00004_00002 + uijk_00006_00004_00003 + dijk_00006_00004_00001 + dijk_00006_00004_00002 + dijk_00006_00004_00003 + lijk_00006_00004_00001 + lijk_00006_00004_00002 + lijk_00006_00004_00003 + 1 + rijk_00006_00004_00001 + rijk_00006_00004_00002 + rijk_00006_00004_00003)=tv=agrid_00006_00004))
c Var 'aux333' direct represents '0' with '-2498'
c Var 'aux333' direct represents '1' with '2498'
c Var 'aux333' order represents '1' with '1'
c Var 'aux333' order represents '0' with '-2498'
c Encoding variable: aux334 with domain: bool (representing constraint (sij_00006_00004 -> aux333))
c Var 'aux334' direct represents '0' with '-2499'
c Var 'aux334' direct represents '1' with '2499'
c Var 'aux334' order represents '1' with '1'
c Var 'aux334' order represents '0' with '-2499'
c Encoding variable: aux335 with domain: bool (representing constraint ((uijk_00007_00004_00001 + uijk_00007_00004_00002 + uijk_00007_00004_00003 + dijk_00007_00004_00001 + dijk_00007_00004_00002 + dijk_00007_00004_00003 + lijk_00007_00004_00001 + lijk_00007_00004_00002 + lijk_00007_00004_00003 + rijk_00007_00004_00001 + rijk_00007_00004_00002 + rijk_00007_00004_00003 + 1)=tv=agrid_00007_00004))
c Var 'aux335' direct represents '0' with '-2500'
c Var 'aux335' direct represents '1' with '2500'
c Var 'aux335' order represents '1' with '1'
c Var 'aux335' order represents '0' with '-2500'
c Encoding variable: aux336 with domain: bool (representing constraint (sij_00007_00004 -> aux335))
c Var 'aux336' direct represents '0' with '-2501'
c Var 'aux336' direct represents '1' with '2501'
c Var 'aux336' order represents '1' with '1'
c Var 'aux336' order represents '0' with '-2501'
c Encoding variable: aux337 with domain: bool (representing constraint ((uijk_00008_00004_00001 + uijk_00008_00004_00002 + uijk_00008_00004_00003 + dijk_00008_00004_00001 + dijk_00008_00004_00002 + dijk_00008_00004_00003 + lijk_00008_00004_00001 + lijk_00008_00004_00002 + lijk_00008_00004_00003 + rijk_00008_00004_00001 + rijk_00008_00004_00002 + rijk_00008_00004_00003 + 1)=tv=agrid_00008_00004))
c Var 'aux337' direct represents '0' with '-2502'
c Var 'aux337' direct represents '1' with '2502'
c Var 'aux337' order represents '1' with '1'
c Var 'aux337' order represents '0' with '-2502'
c Encoding variable: aux338 with domain: bool (representing constraint (sij_00008_00004 -> aux337))
c Var 'aux338' direct represents '0' with '-2503'
c Var 'aux338' direct represents '1' with '2503'
c Var 'aux338' order represents '1' with '1'
c Var 'aux338' order represents '0' with '-2503'
c Encoding variable: aux339 with domain: bool (representing constraint ((rijk_00001_00005_00001 + rijk_00001_00005_00002 + rijk_00001_00005_00003 + 1 + uijk_00001_00005_00001 + uijk_00001_00005_00002 + uijk_00001_00005_00003 + dijk_00001_00005_00001 + dijk_00001_00005_00002 + dijk_00001_00005_00003 + lijk_00001_00005_00001 + lijk_00001_00005_00002 + lijk_00001_00005_00003)=tv=agrid_00001_00005))
c Var 'aux339' direct represents '0' with '-2504'
c Var 'aux339' direct represents '1' with '2504'
c Var 'aux339' order represents '1' with '1'
c Var 'aux339' order represents '0' with '-2504'
c Encoding variable: aux340 with domain: bool (representing constraint (sij_00001_00005 -> aux339))
c Var 'aux340' direct represents '0' with '-2505'
c Var 'aux340' direct represents '1' with '2505'
c Var 'aux340' order represents '1' with '1'
c Var 'aux340' order represents '0' with '-2505'
c Encoding variable: aux341 with domain: bool (representing constraint ((rijk_00002_00005_00001 + rijk_00002_00005_00002 + rijk_00002_00005_00003 + 1 + uijk_00002_00005_00001 + uijk_00002_00005_00002 + uijk_00002_00005_00003 + dijk_00002_00005_00001 + dijk_00002_00005_00002 + dijk_00002_00005_00003 + lijk_00002_00005_00001 + lijk_00002_00005_00002 + lijk_00002_00005_00003)=tv=agrid_00002_00005))
c Var 'aux341' direct represents '0' with '-2506'
c Var 'aux341' direct represents '1' with '2506'
c Var 'aux341' order represents '1' with '1'
c Var 'aux341' order represents '0' with '-2506'
c Encoding variable: aux342 with domain: bool (representing constraint (sij_00002_00005 -> aux341))
c Var 'aux342' direct represents '0' with '-2507'
c Var 'aux342' direct represents '1' with '2507'
c Var 'aux342' order represents '1' with '1'
c Var 'aux342' order represents '0' with '-2507'
c Encoding variable: aux343 with domain: bool (representing constraint ((1 + uijk_00003_00005_00001 + uijk_00003_00005_00002 + uijk_00003_00005_00003 + dijk_00003_00005_00001 + dijk_00003_00005_00002 + dijk_00003_00005_00003 + lijk_00003_00005_00001 + lijk_00003_00005_00002 + lijk_00003_00005_00003 + rijk_00003_00005_00001 + rijk_00003_00005_00002 + rijk_00003_00005_00003)=tv=agrid_00003_00005))
c Var 'aux343' direct represents '0' with '-2508'
c Var 'aux343' direct represents '1' with '2508'
c Var 'aux343' order represents '1' with '1'
c Var 'aux343' order represents '0' with '-2508'
c Encoding variable: aux344 with domain: bool (representing constraint (sij_00003_00005 -> aux343))
c Var 'aux344' direct represents '0' with '-2509'
c Var 'aux344' direct represents '1' with '2509'
c Var 'aux344' order represents '1' with '1'
c Var 'aux344' order represents '0' with '-2509'
c Encoding variable: aux345 with domain: bool (representing constraint ((uijk_00004_00005_00001 + uijk_00004_00005_00002 + uijk_00004_00005_00003 + 1 + dijk_00004_00005_00001 + dijk_00004_00005_00002 + dijk_00004_00005_00003 + lijk_00004_00005_00001 + lijk_00004_00005_00002 + lijk_00004_00005_00003 + rijk_00004_00005_00001 + rijk_00004_00005_00002 + rijk_00004_00005_00003)=tv=agrid_00004_00005))
c Var 'aux345' direct represents '0' with '-2510'
c Var 'aux345' direct represents '1' with '2510'
c Var 'aux345' order represents '1' with '1'
c Var 'aux345' order represents '0' with '-2510'
c Encoding variable: aux346 with domain: bool (representing constraint (sij_00004_00005 -> aux345))
c Var 'aux346' direct represents '0' with '-2511'
c Var 'aux346' direct represents '1' with '2511'
c Var 'aux346' order represents '1' with '1'
c Var 'aux346' order represents '0' with '-2511'
c Encoding variable: aux347 with domain: bool (representing constraint ((uijk_00005_00005_00001 + uijk_00005_00005_00002 + uijk_00005_00005_00003 + dijk_00005_00005_00001 + dijk_00005_00005_00002 + dijk_00005_00005_00003 + 1 + lijk_00005_00005_00001 + lijk_00005_00005_00002 + lijk_00005_00005_00003 + rijk_00005_00005_00001 + rijk_00005_00005_00002 + rijk_00005_00005_00003)=tv=agrid_00005_00005))
c Var 'aux347' direct represents '0' with '-2512'
c Var 'aux347' direct represents '1' with '2512'
c Var 'aux347' order represents '1' with '1'
c Var 'aux347' order represents '0' with '-2512'
c Encoding variable: aux348 with domain: bool (representing constraint (sij_00005_00005 -> aux347))
c Var 'aux348' direct represents '0' with '-2513'
c Var 'aux348' direct represents '1' with '2513'
c Var 'aux348' order represents '1' with '1'
c Var 'aux348' order represents '0' with '-2513'
c Encoding variable: aux349 with domain: bool (representing constraint ((uijk_00006_00005_00001 + uijk_00006_00005_00002 + uijk_00006_00005_00003 + dijk_00006_00005_00001 + dijk_00006_00005_00002 + dijk_00006_00005_00003 + 1 + lijk_00006_00005_00001 + lijk_00006_00005_00002 + lijk_00006_00005_00003 + rijk_00006_00005_00001 + rijk_00006_00005_00002 + rijk_00006_00005_00003)=tv=agrid_00006_00005))
c Var 'aux349' direct represents '0' with '-2514'
c Var 'aux349' direct represents '1' with '2514'
c Var 'aux349' order represents '1' with '1'
c Var 'aux349' order represents '0' with '-2514'
c Encoding variable: aux350 with domain: bool (representing constraint (sij_00006_00005 -> aux349))
c Var 'aux350' direct represents '0' with '-2515'
c Var 'aux350' direct represents '1' with '2515'
c Var 'aux350' order represents '1' with '1'
c Var 'aux350' order represents '0' with '-2515'
c Encoding variable: aux351 with domain: bool (representing constraint ((uijk_00007_00005_00001 + uijk_00007_00005_00002 + uijk_00007_00005_00003 + dijk_00007_00005_00001 + dijk_00007_00005_00002 + dijk_00007_00005_00003 + 1 + lijk_00007_00005_00001 + lijk_00007_00005_00002 + lijk_00007_00005_00003 + rijk_00007_00005_00001 + rijk_00007_00005_00002 + rijk_00007_00005_00003)=tv=agrid_00007_00005))
c Var 'aux351' direct represents '0' with '-2516'
c Var 'aux351' direct represents '1' with '2516'
c Var 'aux351' order represents '1' with '1'
c Var 'aux351' order represents '0' with '-2516'
c Encoding variable: aux352 with domain: bool (representing constraint (sij_00007_00005 -> aux351))
c Var 'aux352' direct represents '0' with '-2517'
c Var 'aux352' direct represents '1' with '2517'
c Var 'aux352' order represents '1' with '1'
c Var 'aux352' order represents '0' with '-2517'
c Encoding variable: aux353 with domain: bool (representing constraint ((uijk_00008_00005_00001 + uijk_00008_00005_00002 + uijk_00008_00005_00003 + dijk_00008_00005_00001 + dijk_00008_00005_00002 + dijk_00008_00005_00003 + lijk_00008_00005_00001 + lijk_00008_00005_00002 + lijk_00008_00005_00003 + 1 + rijk_00008_00005_00001 + rijk_00008_00005_00002 + rijk_00008_00005_00003)=tv=agrid_00008_00005))
c Var 'aux353' direct represents '0' with '-2518'
c Var 'aux353' direct represents '1' with '2518'
c Var 'aux353' order represents '1' with '1'
c Var 'aux353' order represents '0' with '-2518'
c Encoding variable: aux354 with domain: bool (representing constraint (sij_00008_00005 -> aux353))
c Var 'aux354' direct represents '0' with '-2519'
c Var 'aux354' direct represents '1' with '2519'
c Var 'aux354' order represents '1' with '1'
c Var 'aux354' order represents '0' with '-2519'
c Encoding variable: aux355 with domain: bool (representing constraint ((lijk_00001_00006_00001 + lijk_00001_00006_00002 + lijk_00001_00006_00003 + rijk_00001_00006_00001 + rijk_00001_00006_00002 + rijk_00001_00006_00003 + 1 + uijk_00001_00006_00001 + uijk_00001_00006_00002 + uijk_00001_00006_00003 + dijk_00001_00006_00001 + dijk_00001_00006_00002 + dijk_00001_00006_00003)=tv=agrid_00001_00006))
c Var 'aux355' direct represents '0' with '-2520'
c Var 'aux355' direct represents '1' with '2520'
c Var 'aux355' order represents '1' with '1'
c Var 'aux355' order represents '0' with '-2520'
c Encoding variable: aux356 with domain: bool (representing constraint (sij_00001_00006 -> aux355))
c Var 'aux356' direct represents '0' with '-2521'
c Var 'aux356' direct represents '1' with '2521'
c Var 'aux356' order represents '1' with '1'
c Var 'aux356' order represents '0' with '-2521'
c Encoding variable: aux357 with domain: bool (representing constraint ((lijk_00002_00006_00001 + lijk_00002_00006_00002 + lijk_00002_00006_00003 + rijk_00002_00006_00001 + rijk_00002_00006_00002 + rijk_00002_00006_00003 + 1 + uijk_00002_00006_00001 + uijk_00002_00006_00002 + uijk_00002_00006_00003 + dijk_00002_00006_00001 + dijk_00002_00006_00002 + dijk_00002_00006_00003)=tv=agrid_00002_00006))
c Var 'aux357' direct represents '0' with '-2522'
c Var 'aux357' direct represents '1' with '2522'
c Var 'aux357' order represents '1' with '1'
c Var 'aux357' order represents '0' with '-2522'
c Encoding variable: aux358 with domain: bool (representing constraint (sij_00002_00006 -> aux357))
c Var 'aux358' direct represents '0' with '-2523'
c Var 'aux358' direct represents '1' with '2523'
c Var 'aux358' order represents '1' with '1'
c Var 'aux358' order represents '0' with '-2523'
c Encoding variable: aux359 with domain: bool (representing constraint ((lijk_00003_00006_00001 + lijk_00003_00006_00002 + lijk_00003_00006_00003 + rijk_00003_00006_00001 + rijk_00003_00006_00002 + rijk_00003_00006_00003 + 1 + uijk_00003_00006_00001 + uijk_00003_00006_00002 + uijk_00003_00006_00003 + dijk_00003_00006_00001 + dijk_00003_00006_00002 + dijk_00003_00006_00003)=tv=agrid_00003_00006))
c Var 'aux359' direct represents '0' with '-2524'
c Var 'aux359' direct represents '1' with '2524'
c Var 'aux359' order represents '1' with '1'
c Var 'aux359' order represents '0' with '-2524'
c Encoding variable: aux360 with domain: bool (representing constraint (sij_00003_00006 -> aux359))
c Var 'aux360' direct represents '0' with '-2525'
c Var 'aux360' direct represents '1' with '2525'
c Var 'aux360' order represents '1' with '1'
c Var 'aux360' order represents '0' with '-2525'
c Encoding variable: aux361 with domain: bool (representing constraint ((rijk_00004_00006_00001 + rijk_00004_00006_00002 + rijk_00004_00006_00003 + 1 + uijk_00004_00006_00001 + uijk_00004_00006_00002 + uijk_00004_00006_00003 + dijk_00004_00006_00001 + dijk_00004_00006_00002 + dijk_00004_00006_00003 + lijk_00004_00006_00001 + lijk_00004_00006_00002 + lijk_00004_00006_00003)=tv=agrid_00004_00006))
c Var 'aux361' direct represents '0' with '-2526'
c Var 'aux361' direct represents '1' with '2526'
c Var 'aux361' order represents '1' with '1'
c Var 'aux361' order represents '0' with '-2526'
c Encoding variable: aux362 with domain: bool (representing constraint (sij_00004_00006 -> aux361))
c Var 'aux362' direct represents '0' with '-2527'
c Var 'aux362' direct represents '1' with '2527'
c Var 'aux362' order represents '1' with '1'
c Var 'aux362' order represents '0' with '-2527'
c Encoding variable: aux363 with domain: bool (representing constraint ((rijk_00005_00006_00001 + rijk_00005_00006_00002 + rijk_00005_00006_00003 + 1 + uijk_00005_00006_00001 + uijk_00005_00006_00002 + uijk_00005_00006_00003 + dijk_00005_00006_00001 + dijk_00005_00006_00002 + dijk_00005_00006_00003 + lijk_00005_00006_00001 + lijk_00005_00006_00002 + lijk_00005_00006_00003)=tv=agrid_00005_00006))
c Var 'aux363' direct represents '0' with '-2528'
c Var 'aux363' direct represents '1' with '2528'
c Var 'aux363' order represents '1' with '1'
c Var 'aux363' order represents '0' with '-2528'
c Encoding variable: aux364 with domain: bool (representing constraint (sij_00005_00006 -> aux363))
c Var 'aux364' direct represents '0' with '-2529'
c Var 'aux364' direct represents '1' with '2529'
c Var 'aux364' order represents '1' with '1'
c Var 'aux364' order represents '0' with '-2529'
c Encoding variable: aux365 with domain: bool (representing constraint ((1 + uijk_00006_00006_00001 + uijk_00006_00006_00002 + uijk_00006_00006_00003 + dijk_00006_00006_00001 + dijk_00006_00006_00002 + dijk_00006_00006_00003 + lijk_00006_00006_00001 + lijk_00006_00006_00002 + lijk_00006_00006_00003 + rijk_00006_00006_00001 + rijk_00006_00006_00002 + rijk_00006_00006_00003)=tv=agrid_00006_00006))
c Var 'aux365' direct represents '0' with '-2530'
c Var 'aux365' direct represents '1' with '2530'
c Var 'aux365' order represents '1' with '1'
c Var 'aux365' order represents '0' with '-2530'
c Encoding variable: aux366 with domain: bool (representing constraint (sij_00006_00006 -> aux365))
c Var 'aux366' direct represents '0' with '-2531'
c Var 'aux366' direct represents '1' with '2531'
c Var 'aux366' order represents '1' with '1'
c Var 'aux366' order represents '0' with '-2531'
c Encoding variable: aux367 with domain: bool (representing constraint ((uijk_00007_00006_00001 + uijk_00007_00006_00002 + uijk_00007_00006_00003 + 1 + dijk_00007_00006_00001 + dijk_00007_00006_00002 + dijk_00007_00006_00003 + lijk_00007_00006_00001 + lijk_00007_00006_00002 + lijk_00007_00006_00003 + rijk_00007_00006_00001 + rijk_00007_00006_00002 + rijk_00007_00006_00003)=tv=agrid_00007_00006))
c Var 'aux367' direct represents '0' with '-2532'
c Var 'aux367' direct represents '1' with '2532'
c Var 'aux367' order represents '1' with '1'
c Var 'aux367' order represents '0' with '-2532'
c Encoding variable: aux368 with domain: bool (representing constraint (sij_00007_00006 -> aux367))
c Var 'aux368' direct represents '0' with '-2533'
c Var 'aux368' direct represents '1' with '2533'
c Var 'aux368' order represents '1' with '1'
c Var 'aux368' order represents '0' with '-2533'
c Encoding variable: aux369 with domain: bool (representing constraint ((uijk_00008_00006_00001 + uijk_00008_00006_00002 + uijk_00008_00006_00003 + dijk_00008_00006_00001 + dijk_00008_00006_00002 + dijk_00008_00006_00003 + 1 + lijk_00008_00006_00001 + lijk_00008_00006_00002 + lijk_00008_00006_00003 + rijk_00008_00006_00001 + rijk_00008_00006_00002 + rijk_00008_00006_00003)=tv=agrid_00008_00006))
c Var 'aux369' direct represents '0' with '-2534'
c Var 'aux369' direct represents '1' with '2534'
c Var 'aux369' order represents '1' with '1'
c Var 'aux369' order represents '0' with '-2534'
c Encoding variable: aux370 with domain: bool (representing constraint (sij_00008_00006 -> aux369))
c Var 'aux370' direct represents '0' with '-2535'
c Var 'aux370' direct represents '1' with '2535'
c Var 'aux370' order represents '1' with '1'
c Var 'aux370' order represents '0' with '-2535'
c Encoding variable: aux371 with domain: bool (representing constraint ((uijk_00001_00007_00001 + uijk_00001_00007_00002 + uijk_00001_00007_00003 + dijk_00001_00007_00001 + dijk_00001_00007_00002 + dijk_00001_00007_00003 + lijk_00001_00007_00001 + lijk_00001_00007_00002 + lijk_00001_00007_00003 + 1 + rijk_00001_00007_00001 + rijk_00001_00007_00002 + rijk_00001_00007_00003)=tv=agrid_00001_00007))
c Var 'aux371' direct represents '0' with '-2536'
c Var 'aux371' direct represents '1' with '2536'
c Var 'aux371' order represents '1' with '1'
c Var 'aux371' order represents '0' with '-2536'
c Encoding variable: aux372 with domain: bool (representing constraint (sij_00001_00007 -> aux371))
c Var 'aux372' direct represents '0' with '-2537'
c Var 'aux372' direct represents '1' with '2537'
c Var 'aux372' order represents '1' with '1'
c Var 'aux372' order represents '0' with '-2537'
c Encoding variable: aux373 with domain: bool (representing constraint ((uijk_00002_00007_00001 + uijk_00002_00007_00002 + uijk_00002_00007_00003 + dijk_00002_00007_00001 + dijk_00002_00007_00002 + dijk_00002_00007_00003 + lijk_00002_00007_00001 + lijk_00002_00007_00002 + lijk_00002_00007_00003 + rijk_00002_00007_00001 + rijk_00002_00007_00002 + rijk_00002_00007_00003 + 1)=tv=agrid_00002_00007))
c Var 'aux373' direct represents '0' with '-2538'
c Var 'aux373' direct represents '1' with '2538'
c Var 'aux373' order represents '1' with '1'
c Var 'aux373' order represents '0' with '-2538'
c Encoding variable: aux374 with domain: bool (representing constraint (sij_00002_00007 -> aux373))
c Var 'aux374' direct represents '0' with '-2539'
c Var 'aux374' direct represents '1' with '2539'
c Var 'aux374' order represents '1' with '1'
c Var 'aux374' order represents '0' with '-2539'
c Encoding variable: aux375 with domain: bool (representing constraint ((dijk_00003_00007_00001 + dijk_00003_00007_00002 + dijk_00003_00007_00003 + lijk_00003_00007_00001 + lijk_00003_00007_00002 + lijk_00003_00007_00003 + rijk_00003_00007_00001 + rijk_00003_00007_00002 + rijk_00003_00007_00003 + 1 + uijk_00003_00007_00001 + uijk_00003_00007_00002 + uijk_00003_00007_00003)=tv=agrid_00003_00007))
c Var 'aux375' direct represents '0' with '-2540'
c Var 'aux375' direct represents '1' with '2540'
c Var 'aux375' order represents '1' with '1'
c Var 'aux375' order represents '0' with '-2540'
c Encoding variable: aux376 with domain: bool (representing constraint (sij_00003_00007 -> aux375))
c Var 'aux376' direct represents '0' with '-2541'
c Var 'aux376' direct represents '1' with '2541'
c Var 'aux376' order represents '1' with '1'
c Var 'aux376' order represents '0' with '-2541'
c Encoding variable: aux377 with domain: bool (representing constraint ((lijk_00004_00007_00001 + lijk_00004_00007_00002 + lijk_00004_00007_00003 + rijk_00004_00007_00001 + rijk_00004_00007_00002 + rijk_00004_00007_00003 + 1 + uijk_00004_00007_00001 + uijk_00004_00007_00002 + uijk_00004_00007_00003 + dijk_00004_00007_00001 + dijk_00004_00007_00002 + dijk_00004_00007_00003)=tv=agrid_00004_00007))
c Var 'aux377' direct represents '0' with '-2542'
c Var 'aux377' direct represents '1' with '2542'
c Var 'aux377' order represents '1' with '1'
c Var 'aux377' order represents '0' with '-2542'
c Encoding variable: aux378 with domain: bool (representing constraint (sij_00004_00007 -> aux377))
c Var 'aux378' direct represents '0' with '-2543'
c Var 'aux378' direct represents '1' with '2543'
c Var 'aux378' order represents '1' with '1'
c Var 'aux378' order represents '0' with '-2543'
c Encoding variable: aux379 with domain: bool (representing constraint ((lijk_00005_00007_00001 + lijk_00005_00007_00002 + lijk_00005_00007_00003 + rijk_00005_00007_00001 + rijk_00005_00007_00002 + rijk_00005_00007_00003 + 1 + uijk_00005_00007_00001 + uijk_00005_00007_00002 + uijk_00005_00007_00003 + dijk_00005_00007_00001 + dijk_00005_00007_00002 + dijk_00005_00007_00003)=tv=agrid_00005_00007))
c Var 'aux379' direct represents '0' with '-2544'
c Var 'aux379' direct represents '1' with '2544'
c Var 'aux379' order represents '1' with '1'
c Var 'aux379' order represents '0' with '-2544'
c Encoding variable: aux380 with domain: bool (representing constraint (sij_00005_00007 -> aux379))
c Var 'aux380' direct represents '0' with '-2545'
c Var 'aux380' direct represents '1' with '2545'
c Var 'aux380' order represents '1' with '1'
c Var 'aux380' order represents '0' with '-2545'
c Encoding variable: aux381 with domain: bool (representing constraint ((lijk_00006_00007_00001 + lijk_00006_00007_00002 + lijk_00006_00007_00003 + rijk_00006_00007_00001 + rijk_00006_00007_00002 + rijk_00006_00007_00003 + 1 + uijk_00006_00007_00001 + uijk_00006_00007_00002 + uijk_00006_00007_00003 + dijk_00006_00007_00001 + dijk_00006_00007_00002 + dijk_00006_00007_00003)=tv=agrid_00006_00007))
c Var 'aux381' direct represents '0' with '-2546'
c Var 'aux381' direct represents '1' with '2546'
c Var 'aux381' order represents '1' with '1'
c Var 'aux381' order represents '0' with '-2546'
c Encoding variable: aux382 with domain: bool (representing constraint (sij_00006_00007 -> aux381))
c Var 'aux382' direct represents '0' with '-2547'
c Var 'aux382' direct represents '1' with '2547'
c Var 'aux382' order represents '1' with '1'
c Var 'aux382' order represents '0' with '-2547'
c Encoding variable: aux383 with domain: bool (representing constraint ((rijk_00007_00007_00001 + rijk_00007_00007_00002 + rijk_00007_00007_00003 + 1 + uijk_00007_00007_00001 + uijk_00007_00007_00002 + uijk_00007_00007_00003 + dijk_00007_00007_00001 + dijk_00007_00007_00002 + dijk_00007_00007_00003 + lijk_00007_00007_00001 + lijk_00007_00007_00002 + lijk_00007_00007_00003)=tv=agrid_00007_00007))
c Var 'aux383' direct represents '0' with '-2548'
c Var 'aux383' direct represents '1' with '2548'
c Var 'aux383' order represents '1' with '1'
c Var 'aux383' order represents '0' with '-2548'
c Encoding variable: aux384 with domain: bool (representing constraint (sij_00007_00007 -> aux383))
c Var 'aux384' direct represents '0' with '-2549'
c Var 'aux384' direct represents '1' with '2549'
c Var 'aux384' order represents '1' with '1'
c Var 'aux384' order represents '0' with '-2549'
c Encoding variable: aux385 with domain: bool (representing constraint ((rijk_00008_00007_00001 + rijk_00008_00007_00002 + rijk_00008_00007_00003 + 1 + uijk_00008_00007_00001 + uijk_00008_00007_00002 + uijk_00008_00007_00003 + dijk_00008_00007_00001 + dijk_00008_00007_00002 + dijk_00008_00007_00003 + lijk_00008_00007_00001 + lijk_00008_00007_00002 + lijk_00008_00007_00003)=tv=agrid_00008_00007))
c Var 'aux385' direct represents '0' with '-2550'
c Var 'aux385' direct represents '1' with '2550'
c Var 'aux385' order represents '1' with '1'
c Var 'aux385' order represents '0' with '-2550'
c Encoding variable: aux386 with domain: bool (representing constraint (sij_00008_00007 -> aux385))
c Var 'aux386' direct represents '0' with '-2551'
c Var 'aux386' direct represents '1' with '2551'
c Var 'aux386' order represents '1' with '1'
c Var 'aux386' order represents '0' with '-2551'
c Encoding variable: aux387 with domain: bool (representing constraint ((uijk_00001_00008_00001 + uijk_00001_00008_00002 + uijk_00001_00008_00003 + dijk_00001_00008_00001 + dijk_00001_00008_00002 + dijk_00001_00008_00003 + 1 + lijk_00001_00008_00001 + lijk_00001_00008_00002 + lijk_00001_00008_00003 + rijk_00001_00008_00001 + rijk_00001_00008_00002 + rijk_00001_00008_00003)=tv=agrid_00001_00008))
c Var 'aux387' direct represents '0' with '-2552'
c Var 'aux387' direct represents '1' with '2552'
c Var 'aux387' order represents '1' with '1'
c Var 'aux387' order represents '0' with '-2552'
c Encoding variable: aux388 with domain: bool (representing constraint (sij_00001_00008 -> aux387))
c Var 'aux388' direct represents '0' with '-2553'
c Var 'aux388' direct represents '1' with '2553'
c Var 'aux388' order represents '1' with '1'
c Var 'aux388' order represents '0' with '-2553'
c Encoding variable: aux389 with domain: bool (representing constraint ((uijk_00002_00008_00001 + uijk_00002_00008_00002 + uijk_00002_00008_00003 + dijk_00002_00008_00001 + dijk_00002_00008_00002 + dijk_00002_00008_00003 + 1 + lijk_00002_00008_00001 + lijk_00002_00008_00002 + lijk_00002_00008_00003 + rijk_00002_00008_00001 + rijk_00002_00008_00002 + rijk_00002_00008_00003)=tv=agrid_00002_00008))
c Var 'aux389' direct represents '0' with '-2554'
c Var 'aux389' direct represents '1' with '2554'
c Var 'aux389' order represents '1' with '1'
c Var 'aux389' order represents '0' with '-2554'
c Encoding variable: aux390 with domain: bool (representing constraint (sij_00002_00008 -> aux389))
c Var 'aux390' direct represents '0' with '-2555'
c Var 'aux390' direct represents '1' with '2555'
c Var 'aux390' order represents '1' with '1'
c Var 'aux390' order represents '0' with '-2555'
c Encoding variable: aux391 with domain: bool (representing constraint ((uijk_00003_00008_00001 + uijk_00003_00008_00002 + uijk_00003_00008_00003 + dijk_00003_00008_00001 + dijk_00003_00008_00002 + dijk_00003_00008_00003 + lijk_00003_00008_00001 + lijk_00003_00008_00002 + lijk_00003_00008_00003 + 1 + rijk_00003_00008_00001 + rijk_00003_00008_00002 + rijk_00003_00008_00003)=tv=agrid_00003_00008))
c Var 'aux391' direct represents '0' with '-2556'
c Var 'aux391' direct represents '1' with '2556'
c Var 'aux391' order represents '1' with '1'
c Var 'aux391' order represents '0' with '-2556'
c Encoding variable: aux392 with domain: bool (representing constraint (sij_00003_00008 -> aux391))
c Var 'aux392' direct represents '0' with '-2557'
c Var 'aux392' direct represents '1' with '2557'
c Var 'aux392' order represents '1' with '1'
c Var 'aux392' order represents '0' with '-2557'
c Encoding variable: aux393 with domain: bool (representing constraint ((uijk_00004_00008_00001 + uijk_00004_00008_00002 + uijk_00004_00008_00003 + dijk_00004_00008_00001 + dijk_00004_00008_00002 + dijk_00004_00008_00003 + lijk_00004_00008_00001 + lijk_00004_00008_00002 + lijk_00004_00008_00003 + 1 + rijk_00004_00008_00001 + rijk_00004_00008_00002 + rijk_00004_00008_00003)=tv=agrid_00004_00008))
c Var 'aux393' direct represents '0' with '-2558'
c Var 'aux393' direct represents '1' with '2558'
c Var 'aux393' order represents '1' with '1'
c Var 'aux393' order represents '0' with '-2558'
c Encoding variable: aux394 with domain: bool (representing constraint (sij_00004_00008 -> aux393))
c Var 'aux394' direct represents '0' with '-2559'
c Var 'aux394' direct represents '1' with '2559'
c Var 'aux394' order represents '1' with '1'
c Var 'aux394' order represents '0' with '-2559'
c Encoding variable: aux395 with domain: bool (representing constraint ((uijk_00005_00008_00001 + uijk_00005_00008_00002 + uijk_00005_00008_00003 + dijk_00005_00008_00001 + dijk_00005_00008_00002 + dijk_00005_00008_00003 + lijk_00005_00008_00001 + lijk_00005_00008_00002 + lijk_00005_00008_00003 + rijk_00005_00008_00001 + rijk_00005_00008_00002 + rijk_00005_00008_00003 + 1)=tv=agrid_00005_00008))
c Var 'aux395' direct represents '0' with '-2560'
c Var 'aux395' direct represents '1' with '2560'
c Var 'aux395' order represents '1' with '1'
c Var 'aux395' order represents '0' with '-2560'
c Encoding variable: aux396 with domain: bool (representing constraint (sij_00005_00008 -> aux395))
c Var 'aux396' direct represents '0' with '-2561'
c Var 'aux396' direct represents '1' with '2561'
c Var 'aux396' order represents '1' with '1'
c Var 'aux396' order represents '0' with '-2561'
c Encoding variable: aux397 with domain: bool (representing constraint ((dijk_00006_00008_00001 + dijk_00006_00008_00002 + dijk_00006_00008_00003 + lijk_00006_00008_00001 + lijk_00006_00008_00002 + lijk_00006_00008_00003 + rijk_00006_00008_00001 + rijk_00006_00008_00002 + rijk_00006_00008_00003 + 1 + uijk_00006_00008_00001 + uijk_00006_00008_00002 + uijk_00006_00008_00003)=tv=agrid_00006_00008))
c Var 'aux397' direct represents '0' with '-2562'
c Var 'aux397' direct represents '1' with '2562'
c Var 'aux397' order represents '1' with '1'
c Var 'aux397' order represents '0' with '-2562'
c Encoding variable: aux398 with domain: bool (representing constraint (sij_00006_00008 -> aux397))
c Var 'aux398' direct represents '0' with '-2563'
c Var 'aux398' direct represents '1' with '2563'
c Var 'aux398' order represents '1' with '1'
c Var 'aux398' order represents '0' with '-2563'
c Encoding variable: aux399 with domain: bool (representing constraint ((lijk_00007_00008_00001 + lijk_00007_00008_00002 + lijk_00007_00008_00003 + rijk_00007_00008_00001 + rijk_00007_00008_00002 + rijk_00007_00008_00003 + 1 + uijk_00007_00008_00001 + uijk_00007_00008_00002 + uijk_00007_00008_00003 + dijk_00007_00008_00001 + dijk_00007_00008_00002 + dijk_00007_00008_00003)=tv=agrid_00007_00008))
c Var 'aux399' direct represents '0' with '-2564'
c Var 'aux399' direct represents '1' with '2564'
c Var 'aux399' order represents '1' with '1'
c Var 'aux399' order represents '0' with '-2564'
c Encoding variable: aux400 with domain: bool (representing constraint (sij_00007_00008 -> aux399))
c Var 'aux400' direct represents '0' with '-2565'
c Var 'aux400' direct represents '1' with '2565'
c Var 'aux400' order represents '1' with '1'
c Var 'aux400' order represents '0' with '-2565'
c Encoding variable: aux401 with domain: bool (representing constraint ((lijk_00008_00008_00001 + lijk_00008_00008_00002 + lijk_00008_00008_00003 + rijk_00008_00008_00001 + rijk_00008_00008_00002 + rijk_00008_00008_00003 + 1 + uijk_00008_00008_00001 + uijk_00008_00008_00002 + uijk_00008_00008_00003 + dijk_00008_00008_00001 + dijk_00008_00008_00002 + dijk_00008_00008_00003)=tv=agrid_00008_00008))
c Var 'aux401' direct represents '0' with '-2566'
c Var 'aux401' direct represents '1' with '2566'
c Var 'aux401' order represents '1' with '1'
c Var 'aux401' order represents '0' with '-2566'
c Encoding variable: aux402 with domain: bool (representing constraint (sij_00008_00008 -> aux401))
c Var 'aux402' direct represents '0' with '-2567'
c Var 'aux402' direct represents '1' with '2567'
c Var 'aux402' order represents '1' with '1'
c Var 'aux402' order represents '0' with '-2567'
c Encoding variable: aux403 with domain: int(0..64) (representing constraint (shift(64, -64) - shift(num_occupied_by_types_00004, -64)))
c Both direct and order encoding.
c Var 'aux403' order represents '0' with '2568'
c Var 'aux403' direct represents '0' with '2568'
c Var 'aux403' order represents '1' with '2569'
-2568 2569 0
c Var 'aux403' direct represents '1' with '2570'
2568 -2569 2570 0
-2570 2569 0
-2570 -2568 0
c Var 'aux403' order represents '2' with '2571'
-2569 2571 0
c Var 'aux403' direct represents '2' with '2572'
2569 -2571 2572 0
-2572 2571 0
-2572 -2569 0
c Var 'aux403' order represents '3' with '2573'
-2571 2573 0
c Var 'aux403' direct represents '3' with '2574'
2571 -2573 2574 0
-2574 2573 0
-2574 -2571 0
c Var 'aux403' order represents '4' with '2575'
-2573 2575 0
c Var 'aux403' direct represents '4' with '2576'
2573 -2575 2576 0
-2576 2575 0
-2576 -2573 0
c Var 'aux403' order represents '5' with '2577'
-2575 2577 0
c Var 'aux403' direct represents '5' with '2578'
2575 -2577 2578 0
-2578 2577 0
-2578 -2575 0
c Var 'aux403' order represents '6' with '2579'
-2577 2579 0
c Var 'aux403' direct represents '6' with '2580'
2577 -2579 2580 0
-2580 2579 0
-2580 -2577 0
c Var 'aux403' order represents '7' with '2581'
-2579 2581 0
c Var 'aux403' direct represents '7' with '2582'
2579 -2581 2582 0
-2582 2581 0
-2582 -2579 0
c Var 'aux403' order represents '8' with '2583'
-2581 2583 0
c Var 'aux403' direct represents '8' with '2584'
2581 -2583 2584 0
-2584 2583 0
-2584 -2581 0
c Var 'aux403' order represents '9' with '2585'
-2583 2585 0
c Var 'aux403' direct represents '9' with '2586'
2583 -2585 2586 0
-2586 2585 0
-2586 -2583 0
c Var 'aux403' order represents '10' with '2587'
-2585 2587 0
c Var 'aux403' direct represents '10' with '2588'
2585 -2587 2588 0
-2588 2587 0
-2588 -2585 0
c Var 'aux403' order represents '11' with '2589'
-2587 2589 0
c Var 'aux403' direct represents '11' with '2590'
2587 -2589 2590 0
-2590 2589 0
-2590 -2587 0
c Var 'aux403' order represents '12' with '2591'
-2589 2591 0
c Var 'aux403' direct represents '12' with '2592'
2589 -2591 2592 0
-2592 2591 0
-2592 -2589 0
c Var 'aux403' order represents '13' with '2593'
-2591 2593 0
c Var 'aux403' direct represents '13' with '2594'
2591 -2593 2594 0
-2594 2593 0
-2594 -2591 0
c Var 'aux403' order represents '14' with '2595'
-2593 2595 0
c Var 'aux403' direct represents '14' with '2596'
2593 -2595 2596 0
-2596 2595 0
-2596 -2593 0
c Var 'aux403' order represents '15' with '2597'
-2595 2597 0
c Var 'aux403' direct represents '15' with '2598'
2595 -2597 2598 0
-2598 2597 0
-2598 -2595 0
c Var 'aux403' order represents '16' with '2599'
-2597 2599 0
c Var 'aux403' direct represents '16' with '2600'
2597 -2599 2600 0
-2600 2599 0
-2600 -2597 0
c Var 'aux403' order represents '17' with '2601'
-2599 2601 0
c Var 'aux403' direct represents '17' with '2602'
2599 -2601 2602 0
-2602 2601 0
-2602 -2599 0
c Var 'aux403' order represents '18' with '2603'
-2601 2603 0
c Var 'aux403' direct represents '18' with '2604'
2601 -2603 2604 0
-2604 2603 0
-2604 -2601 0
c Var 'aux403' order represents '19' with '2605'
-2603 2605 0
c Var 'aux403' direct represents '19' with '2606'
2603 -2605 2606 0
-2606 2605 0
-2606 -2603 0
c Var 'aux403' order represents '20' with '2607'
-2605 2607 0
c Var 'aux403' direct represents '20' with '2608'
2605 -2607 2608 0
-2608 2607 0
-2608 -2605 0
c Var 'aux403' order represents '21' with '2609'
-2607 2609 0
c Var 'aux403' direct represents '21' with '2610'
2607 -2609 2610 0
-2610 2609 0
-2610 -2607 0
c Var 'aux403' order represents '22' with '2611'
-2609 2611 0
c Var 'aux403' direct represents '22' with '2612'
2609 -2611 2612 0
-2612 2611 0
-2612 -2609 0
c Var 'aux403' order represents '23' with '2613'
-2611 2613 0
c Var 'aux403' direct represents '23' with '2614'
2611 -2613 2614 0
-2614 2613 0
-2614 -2611 0
c Var 'aux403' order represents '24' with '2615'
-2613 2615 0
c Var 'aux403' direct represents '24' with '2616'
2613 -2615 2616 0
-2616 2615 0
-2616 -2613 0
c Var 'aux403' order represents '25' with '2617'
-2615 2617 0
c Var 'aux403' direct represents '25' with '2618'
2615 -2617 2618 0
-2618 2617 0
-2618 -2615 0
c Var 'aux403' order represents '26' with '2619'
-2617 2619 0
c Var 'aux403' direct represents '26' with '2620'
2617 -2619 2620 0
-2620 2619 0
-2620 -2617 0
c Var 'aux403' order represents '27' with '2621'
-2619 2621 0
c Var 'aux403' direct represents '27' with '2622'
2619 -2621 2622 0
-2622 2621 0
-2622 -2619 0
c Var 'aux403' order represents '28' with '2623'
-2621 2623 0
c Var 'aux403' direct represents '28' with '2624'
2621 -2623 2624 0
-2624 2623 0
-2624 -2621 0
c Var 'aux403' order represents '29' with '2625'
-2623 2625 0
c Var 'aux403' direct represents '29' with '2626'
2623 -2625 2626 0
-2626 2625 0
-2626 -2623 0
c Var 'aux403' order represents '30' with '2627'
-2625 2627 0
c Var 'aux403' direct represents '30' with '2628'
2625 -2627 2628 0
-2628 2627 0
-2628 -2625 0
c Var 'aux403' order represents '31' with '2629'
-2627 2629 0
c Var 'aux403' direct represents '31' with '2630'
2627 -2629 2630 0
-2630 2629 0
-2630 -2627 0
c Var 'aux403' order represents '32' with '2631'
-2629 2631 0
c Var 'aux403' direct represents '32' with '2632'
2629 -2631 2632 0
-2632 2631 0
-2632 -2629 0
c Var 'aux403' order represents '33' with '2633'
-2631 2633 0
c Var 'aux403' direct represents '33' with '2634'
2631 -2633 2634 0
-2634 2633 0
-2634 -2631 0
c Var 'aux403' order represents '34' with '2635'
-2633 2635 0
c Var 'aux403' direct represents '34' with '2636'
2633 -2635 2636 0
-2636 2635 0
-2636 -2633 0
c Var 'aux403' order represents '35' with '2637'
-2635 2637 0
c Var 'aux403' direct represents '35' with '2638'
2635 -2637 2638 0
-2638 2637 0
-2638 -2635 0
c Var 'aux403' order represents '36' with '2639'
-2637 2639 0
c Var 'aux403' direct represents '36' with '2640'
2637 -2639 2640 0
-2640 2639 0
-2640 -2637 0
c Var 'aux403' order represents '37' with '2641'
-2639 2641 0
c Var 'aux403' direct represents '37' with '2642'
2639 -2641 2642 0
-2642 2641 0
-2642 -2639 0
c Var 'aux403' order represents '38' with '2643'
-2641 2643 0
c Var 'aux403' direct represents '38' with '2644'
2641 -2643 2644 0
-2644 2643 0
-2644 -2641 0
c Var 'aux403' order represents '39' with '2645'
-2643 2645 0
c Var 'aux403' direct represents '39' with '2646'
2643 -2645 2646 0
-2646 2645 0
-2646 -2643 0
c Var 'aux403' order represents '40' with '2647'
-2645 2647 0
c Var 'aux403' direct represents '40' with '2648'
2645 -2647 2648 0
-2648 2647 0
-2648 -2645 0
c Var 'aux403' order represents '41' with '2649'
-2647 2649 0
c Var 'aux403' direct represents '41' with '2650'
2647 -2649 2650 0
-2650 2649 0
-2650 -2647 0
c Var 'aux403' order represents '42' with '2651'
-2649 2651 0
c Var 'aux403' direct represents '42' with '2652'
2649 -2651 2652 0
-2652 2651 0
-2652 -2649 0
c Var 'aux403' order represents '43' with '2653'
-2651 2653 0
c Var 'aux403' direct represents '43' with '2654'
2651 -2653 2654 0
-2654 2653 0
-2654 -2651 0
c Var 'aux403' order represents '44' with '2655'
-2653 2655 0
c Var 'aux403' direct represents '44' with '2656'
2653 -2655 2656 0
-2656 2655 0
-2656 -2653 0
c Var 'aux403' order represents '45' with '2657'
-2655 2657 0
c Var 'aux403' direct represents '45' with '2658'
2655 -2657 2658 0
-2658 2657 0
-2658 -2655 0
c Var 'aux403' order represents '46' with '2659'
-2657 2659 0
c Var 'aux403' direct represents '46' with '2660'
2657 -2659 2660 0
-2660 2659 0
-2660 -2657 0
c Var 'aux403' order represents '47' with '2661'
-2659 2661 0
c Var 'aux403' direct represents '47' with '2662'
2659 -2661 2662 0
-2662 2661 0
-2662 -2659 0
c Var 'aux403' order represents '48' with '2663'
-2661 2663 0
c Var 'aux403' direct represents '48' with '2664'
2661 -2663 2664 0
-2664 2663 0
-2664 -2661 0
c Var 'aux403' order represents '49' with '2665'
-2663 2665 0
c Var 'aux403' direct represents '49' with '2666'
2663 -2665 2666 0
-2666 2665 0
-2666 -2663 0
c Var 'aux403' order represents '50' with '2667'
-2665 2667 0
c Var 'aux403' direct represents '50' with '2668'
2665 -2667 2668 0
-2668 2667 0
-2668 -2665 0
c Var 'aux403' order represents '51' with '2669'
-2667 2669 0
c Var 'aux403' direct represents '51' with '2670'
2667 -2669 2670 0
-2670 2669 0
-2670 -2667 0
c Var 'aux403' order represents '52' with '2671'
-2669 2671 0
c Var 'aux403' direct represents '52' with '2672'
2669 -2671 2672 0
-2672 2671 0
-2672 -2669 0
c Var 'aux403' order represents '53' with '2673'
-2671 2673 0
c Var 'aux403' direct represents '53' with '2674'
2671 -2673 2674 0
-2674 2673 0
-2674 -2671 0
c Var 'aux403' order represents '54' with '2675'
-2673 2675 0
c Var 'aux403' direct represents '54' with '2676'
2673 -2675 2676 0
-2676 2675 0
-2676 -2673 0
c Var 'aux403' order represents '55' with '2677'
-2675 2677 0
c Var 'aux403' direct represents '55' with '2678'
2675 -2677 2678 0
-2678 2677 0
-2678 -2675 0
c Var 'aux403' order represents '56' with '2679'
-2677 2679 0
c Var 'aux403' direct represents '56' with '2680'
2677 -2679 2680 0
-2680 2679 0
-2680 -2677 0
c Var 'aux403' order represents '57' with '2681'
-2679 2681 0
c Var 'aux403' direct represents '57' with '2682'
2679 -2681 2682 0
-2682 2681 0
-2682 -2679 0
c Var 'aux403' order represents '58' with '2683'
-2681 2683 0
c Var 'aux403' direct represents '58' with '2684'
2681 -2683 2684 0
-2684 2683 0
-2684 -2681 0
c Var 'aux403' order represents '59' with '2685'
-2683 2685 0
c Var 'aux403' direct represents '59' with '2686'
2683 -2685 2686 0
-2686 2685 0
-2686 -2683 0
c Var 'aux403' order represents '60' with '2687'
-2685 2687 0
c Var 'aux403' direct represents '60' with '2688'
2685 -2687 2688 0
-2688 2687 0
-2688 -2685 0
c Var 'aux403' order represents '61' with '2689'
-2687 2689 0
c Var 'aux403' direct represents '61' with '2690'
2687 -2689 2690 0
-2690 2689 0
-2690 -2687 0
c Var 'aux403' order represents '62' with '2691'
-2689 2691 0
c Var 'aux403' direct represents '62' with '2692'
2689 -2691 2692 0
-2692 2691 0
-2692 -2689 0
c Var 'aux403' order represents '63' with '2693'
-2691 2693 0
c Var 'aux403' direct represents '63' with '2694'
2691 -2693 2694 0
-2694 2693 0
-2694 -2691 0
c Var 'aux403' direct represents '64' with '-2693'
2568 2570 2572 2574 2576 2578 2580 2582 2584 2586 2588 2590 2592 2594 2596 2598 2600 2602 2604 2606 2608 2610 2612 2614 2616 2618 2620 2622 2624 2626 2628 2630 2632 2634 2636 2638 2640 2642 2644 2646 2648 2650 2652 2654 2656 2658 2660 2662 2664 2666 2668 2670 2672 2674 2676 2678 2680 2682 2684 2686 2688 2690 2692 2694 -2693 0
c Encoding variable: aux404 with domain: int(0..128) (representing constraint ( - shift(num_occupied_by_types_00003, -64) + aux403))
c Both direct and order encoding.
c Var 'aux404' order represents '0' with '2695'
c Var 'aux404' direct represents '0' with '2695'
c Var 'aux404' order represents '1' with '2696'
-2695 2696 0
c Var 'aux404' direct represents '1' with '2697'
2695 -2696 2697 0
-2697 2696 0
-2697 -2695 0
c Var 'aux404' order represents '2' with '2698'
-2696 2698 0
c Var 'aux404' direct represents '2' with '2699'
2696 -2698 2699 0
-2699 2698 0
-2699 -2696 0
c Var 'aux404' order represents '3' with '2700'
-2698 2700 0
c Var 'aux404' direct represents '3' with '2701'
2698 -2700 2701 0
-2701 2700 0
-2701 -2698 0
c Var 'aux404' order represents '4' with '2702'
-2700 2702 0
c Var 'aux404' direct represents '4' with '2703'
2700 -2702 2703 0
-2703 2702 0
-2703 -2700 0
c Var 'aux404' order represents '5' with '2704'
-2702 2704 0
c Var 'aux404' direct represents '5' with '2705'
2702 -2704 2705 0
-2705 2704 0
-2705 -2702 0
c Var 'aux404' order represents '6' with '2706'
-2704 2706 0
c Var 'aux404' direct represents '6' with '2707'
2704 -2706 2707 0
-2707 2706 0
-2707 -2704 0
c Var 'aux404' order represents '7' with '2708'
-2706 2708 0
c Var 'aux404' direct represents '7' with '2709'
2706 -2708 2709 0
-2709 2708 0
-2709 -2706 0
c Var 'aux404' order represents '8' with '2710'
-2708 2710 0
c Var 'aux404' direct represents '8' with '2711'
2708 -2710 2711 0
-2711 2710 0
-2711 -2708 0
c Var 'aux404' order represents '9' with '2712'
-2710 2712 0
c Var 'aux404' direct represents '9' with '2713'
2710 -2712 2713 0
-2713 2712 0
-2713 -2710 0
c Var 'aux404' order represents '10' with '2714'
-2712 2714 0
c Var 'aux404' direct represents '10' with '2715'
2712 -2714 2715 0
-2715 2714 0
-2715 -2712 0
c Var 'aux404' order represents '11' with '2716'
-2714 2716 0
c Var 'aux404' direct represents '11' with '2717'
2714 -2716 2717 0
-2717 2716 0
-2717 -2714 0
c Var 'aux404' order represents '12' with '2718'
-2716 2718 0
c Var 'aux404' direct represents '12' with '2719'
2716 -2718 2719 0
-2719 2718 0
-2719 -2716 0
c Var 'aux404' order represents '13' with '2720'
-2718 2720 0
c Var 'aux404' direct represents '13' with '2721'
2718 -2720 2721 0
-2721 2720 0
-2721 -2718 0
c Var 'aux404' order represents '14' with '2722'
-2720 2722 0
c Var 'aux404' direct represents '14' with '2723'
2720 -2722 2723 0
-2723 2722 0
-2723 -2720 0
c Var 'aux404' order represents '15' with '2724'
-2722 2724 0
c Var 'aux404' direct represents '15' with '2725'
2722 -2724 2725 0
-2725 2724 0
-2725 -2722 0
c Var 'aux404' order represents '16' with '2726'
-2724 2726 0
c Var 'aux404' direct represents '16' with '2727'
2724 -2726 2727 0
-2727 2726 0
-2727 -2724 0
c Var 'aux404' order represents '17' with '2728'
-2726 2728 0
c Var 'aux404' direct represents '17' with '2729'
2726 -2728 2729 0
-2729 2728 0
-2729 -2726 0
c Var 'aux404' order represents '18' with '2730'
-2728 2730 0
c Var 'aux404' direct represents '18' with '2731'
2728 -2730 2731 0
-2731 2730 0
-2731 -2728 0
c Var 'aux404' order represents '19' with '2732'
-2730 2732 0
c Var 'aux404' direct represents '19' with '2733'
2730 -2732 2733 0
-2733 2732 0
-2733 -2730 0
c Var 'aux404' order represents '20' with '2734'
-2732 2734 0
c Var 'aux404' direct represents '20' with '2735'
2732 -2734 2735 0
-2735 2734 0
-2735 -2732 0
c Var 'aux404' order represents '21' with '2736'
-2734 2736 0
c Var 'aux404' direct represents '21' with '2737'
2734 -2736 2737 0
-2737 2736 0
-2737 -2734 0
c Var 'aux404' order represents '22' with '2738'
-2736 2738 0
c Var 'aux404' direct represents '22' with '2739'
2736 -2738 2739 0
-2739 2738 0
-2739 -2736 0
c Var 'aux404' order represents '23' with '2740'
-2738 2740 0
c Var 'aux404' direct represents '23' with '2741'
2738 -2740 2741 0
-2741 2740 0
-2741 -2738 0
c Var 'aux404' order represents '24' with '2742'
-2740 2742 0
c Var 'aux404' direct represents '24' with '2743'
2740 -2742 2743 0
-2743 2742 0
-2743 -2740 0
c Var 'aux404' order represents '25' with '2744'
-2742 2744 0
c Var 'aux404' direct represents '25' with '2745'
2742 -2744 2745 0
-2745 2744 0
-2745 -2742 0
c Var 'aux404' order represents '26' with '2746'
-2744 2746 0
c Var 'aux404' direct represents '26' with '2747'
2744 -2746 2747 0
-2747 2746 0
-2747 -2744 0
c Var 'aux404' order represents '27' with '2748'
-2746 2748 0
c Var 'aux404' direct represents '27' with '2749'
2746 -2748 2749 0
-2749 2748 0
-2749 -2746 0
c Var 'aux404' order represents '28' with '2750'
-2748 2750 0
c Var 'aux404' direct represents '28' with '2751'
2748 -2750 2751 0
-2751 2750 0
-2751 -2748 0
c Var 'aux404' order represents '29' with '2752'
-2750 2752 0
c Var 'aux404' direct represents '29' with '2753'
2750 -2752 2753 0
-2753 2752 0
-2753 -2750 0
c Var 'aux404' order represents '30' with '2754'
-2752 2754 0
c Var 'aux404' direct represents '30' with '2755'
2752 -2754 2755 0
-2755 2754 0
-2755 -2752 0
c Var 'aux404' order represents '31' with '2756'
-2754 2756 0
c Var 'aux404' direct represents '31' with '2757'
2754 -2756 2757 0
-2757 2756 0
-2757 -2754 0
c Var 'aux404' order represents '32' with '2758'
-2756 2758 0
c Var 'aux404' direct represents '32' with '2759'
2756 -2758 2759 0
-2759 2758 0
-2759 -2756 0
c Var 'aux404' order represents '33' with '2760'
-2758 2760 0
c Var 'aux404' direct represents '33' with '2761'
2758 -2760 2761 0
-2761 2760 0
-2761 -2758 0
c Var 'aux404' order represents '34' with '2762'
-2760 2762 0
c Var 'aux404' direct represents '34' with '2763'
2760 -2762 2763 0
-2763 2762 0
-2763 -2760 0
c Var 'aux404' order represents '35' with '2764'
-2762 2764 0
c Var 'aux404' direct represents '35' with '2765'
2762 -2764 2765 0
-2765 2764 0
-2765 -2762 0
c Var 'aux404' order represents '36' with '2766'
-2764 2766 0
c Var 'aux404' direct represents '36' with '2767'
2764 -2766 2767 0
-2767 2766 0
-2767 -2764 0
c Var 'aux404' order represents '37' with '2768'
-2766 2768 0
c Var 'aux404' direct represents '37' with '2769'
2766 -2768 2769 0
-2769 2768 0
-2769 -2766 0
c Var 'aux404' order represents '38' with '2770'
-2768 2770 0
c Var 'aux404' direct represents '38' with '2771'
2768 -2770 2771 0
-2771 2770 0
-2771 -2768 0
c Var 'aux404' order represents '39' with '2772'
-2770 2772 0
c Var 'aux404' direct represents '39' with '2773'
2770 -2772 2773 0
-2773 2772 0
-2773 -2770 0
c Var 'aux404' order represents '40' with '2774'
-2772 2774 0
c Var 'aux404' direct represents '40' with '2775'
2772 -2774 2775 0
-2775 2774 0
-2775 -2772 0
c Var 'aux404' order represents '41' with '2776'
-2774 2776 0
c Var 'aux404' direct represents '41' with '2777'
2774 -2776 2777 0
-2777 2776 0
-2777 -2774 0
c Var 'aux404' order represents '42' with '2778'
-2776 2778 0
c Var 'aux404' direct represents '42' with '2779'
2776 -2778 2779 0
-2779 2778 0
-2779 -2776 0
c Var 'aux404' order represents '43' with '2780'
-2778 2780 0
c Var 'aux404' direct represents '43' with '2781'
2778 -2780 2781 0
-2781 2780 0
-2781 -2778 0
c Var 'aux404' order represents '44' with '2782'
-2780 2782 0
c Var 'aux404' direct represents '44' with '2783'
2780 -2782 2783 0
-2783 2782 0
-2783 -2780 0
c Var 'aux404' order represents '45' with '2784'
-2782 2784 0
c Var 'aux404' direct represents '45' with '2785'
2782 -2784 2785 0
-2785 2784 0
-2785 -2782 0
c Var 'aux404' order represents '46' with '2786'
-2784 2786 0
c Var 'aux404' direct represents '46' with '2787'
2784 -2786 2787 0
-2787 2786 0
-2787 -2784 0
c Var 'aux404' order represents '47' with '2788'
-2786 2788 0
c Var 'aux404' direct represents '47' with '2789'
2786 -2788 2789 0
-2789 2788 0
-2789 -2786 0
c Var 'aux404' order represents '48' with '2790'
-2788 2790 0
c Var 'aux404' direct represents '48' with '2791'
2788 -2790 2791 0
-2791 2790 0
-2791 -2788 0
c Var 'aux404' order represents '49' with '2792'
-2790 2792 0
c Var 'aux404' direct represents '49' with '2793'
2790 -2792 2793 0
-2793 2792 0
-2793 -2790 0
c Var 'aux404' order represents '50' with '2794'
-2792 2794 0
c Var 'aux404' direct represents '50' with '2795'
2792 -2794 2795 0
-2795 2794 0
-2795 -2792 0
c Var 'aux404' order represents '51' with '2796'
-2794 2796 0
c Var 'aux404' direct represents '51' with '2797'
2794 -2796 2797 0
-2797 2796 0
-2797 -2794 0
c Var 'aux404' order represents '52' with '2798'
-2796 2798 0
c Var 'aux404' direct represents '52' with '2799'
2796 -2798 2799 0
-2799 2798 0
-2799 -2796 0
c Var 'aux404' order represents '53' with '2800'
-2798 2800 0
c Var 'aux404' direct represents '53' with '2801'
2798 -2800 2801 0
-2801 2800 0
-2801 -2798 0
c Var 'aux404' order represents '54' with '2802'
-2800 2802 0
c Var 'aux404' direct represents '54' with '2803'
2800 -2802 2803 0
-2803 2802 0
-2803 -2800 0
c Var 'aux404' order represents '55' with '2804'
-2802 2804 0
c Var 'aux404' direct represents '55' with '2805'
2802 -2804 2805 0
-2805 2804 0
-2805 -2802 0
c Var 'aux404' order represents '56' with '2806'
-2804 2806 0
c Var 'aux404' direct represents '56' with '2807'
2804 -2806 2807 0
-2807 2806 0
-2807 -2804 0
c Var 'aux404' order represents '57' with '2808'
-2806 2808 0
c Var 'aux404' direct represents '57' with '2809'
2806 -2808 2809 0
-2809 2808 0
-2809 -2806 0
c Var 'aux404' order represents '58' with '2810'
-2808 2810 0
c Var 'aux404' direct represents '58' with '2811'
2808 -2810 2811 0
-2811 2810 0
-2811 -2808 0
c Var 'aux404' order represents '59' with '2812'
-2810 2812 0
c Var 'aux404' direct represents '59' with '2813'
2810 -2812 2813 0
-2813 2812 0
-2813 -2810 0
c Var 'aux404' order represents '60' with '2814'
-2812 2814 0
c Var 'aux404' direct represents '60' with '2815'
2812 -2814 2815 0
-2815 2814 0
-2815 -2812 0
c Var 'aux404' order represents '61' with '2816'
-2814 2816 0
c Var 'aux404' direct represents '61' with '2817'
2814 -2816 2817 0
-2817 2816 0
-2817 -2814 0
c Var 'aux404' order represents '62' with '2818'
-2816 2818 0
c Var 'aux404' direct represents '62' with '2819'
2816 -2818 2819 0
-2819 2818 0
-2819 -2816 0
c Var 'aux404' order represents '63' with '2820'
-2818 2820 0
c Var 'aux404' direct represents '63' with '2821'
2818 -2820 2821 0
-2821 2820 0
-2821 -2818 0
c Var 'aux404' order represents '64' with '2822'
-2820 2822 0
c Var 'aux404' direct represents '64' with '2823'
2820 -2822 2823 0
-2823 2822 0
-2823 -2820 0
c Var 'aux404' order represents '65' with '2824'
-2822 2824 0
c Var 'aux404' direct represents '65' with '2825'
2822 -2824 2825 0
-2825 2824 0
-2825 -2822 0
c Var 'aux404' order represents '66' with '2826'
-2824 2826 0
c Var 'aux404' direct represents '66' with '2827'
2824 -2826 2827 0
-2827 2826 0
-2827 -2824 0
c Var 'aux404' order represents '67' with '2828'
-2826 2828 0
c Var 'aux404' direct represents '67' with '2829'
2826 -2828 2829 0
-2829 2828 0
-2829 -2826 0
c Var 'aux404' order represents '68' with '2830'
-2828 2830 0
c Var 'aux404' direct represents '68' with '2831'
2828 -2830 2831 0
-2831 2830 0
-2831 -2828 0
c Var 'aux404' order represents '69' with '2832'
-2830 2832 0
c Var 'aux404' direct represents '69' with '2833'
2830 -2832 2833 0
-2833 2832 0
-2833 -2830 0
c Var 'aux404' order represents '70' with '2834'
-2832 2834 0
c Var 'aux404' direct represents '70' with '2835'
2832 -2834 2835 0
-2835 2834 0
-2835 -2832 0
c Var 'aux404' order represents '71' with '2836'
-2834 2836 0
c Var 'aux404' direct represents '71' with '2837'
2834 -2836 2837 0
-2837 2836 0
-2837 -2834 0
c Var 'aux404' order represents '72' with '2838'
-2836 2838 0
c Var 'aux404' direct represents '72' with '2839'
2836 -2838 2839 0
-2839 2838 0
-2839 -2836 0
c Var 'aux404' order represents '73' with '2840'
-2838 2840 0
c Var 'aux404' direct represents '73' with '2841'
2838 -2840 2841 0
-2841 2840 0
-2841 -2838 0
c Var 'aux404' order represents '74' with '2842'
-2840 2842 0
c Var 'aux404' direct represents '74' with '2843'
2840 -2842 2843 0
-2843 2842 0
-2843 -2840 0
c Var 'aux404' order represents '75' with '2844'
-2842 2844 0
c Var 'aux404' direct represents '75' with '2845'
2842 -2844 2845 0
-2845 2844 0
-2845 -2842 0
c Var 'aux404' order represents '76' with '2846'
-2844 2846 0
c Var 'aux404' direct represents '76' with '2847'
2844 -2846 2847 0
-2847 2846 0
-2847 -2844 0
c Var 'aux404' order represents '77' with '2848'
-2846 2848 0
c Var 'aux404' direct represents '77' with '2849'
2846 -2848 2849 0
-2849 2848 0
-2849 -2846 0
c Var 'aux404' order represents '78' with '2850'
-2848 2850 0
c Var 'aux404' direct represents '78' with '2851'
2848 -2850 2851 0
-2851 2850 0
-2851 -2848 0
c Var 'aux404' order represents '79' with '2852'
-2850 2852 0
c Var 'aux404' direct represents '79' with '2853'
2850 -2852 2853 0
-2853 2852 0
-2853 -2850 0
c Var 'aux404' order represents '80' with '2854'
-2852 2854 0
c Var 'aux404' direct represents '80' with '2855'
2852 -2854 2855 0
-2855 2854 0
-2855 -2852 0
c Var 'aux404' order represents '81' with '2856'
-2854 2856 0
c Var 'aux404' direct represents '81' with '2857'
2854 -2856 2857 0
-2857 2856 0
-2857 -2854 0
c Var 'aux404' order represents '82' with '2858'
-2856 2858 0
c Var 'aux404' direct represents '82' with '2859'
2856 -2858 2859 0
-2859 2858 0
-2859 -2856 0
c Var 'aux404' order represents '83' with '2860'
-2858 2860 0
c Var 'aux404' direct represents '83' with '2861'
2858 -2860 2861 0
-2861 2860 0
-2861 -2858 0
c Var 'aux404' order represents '84' with '2862'
-2860 2862 0
c Var 'aux404' direct represents '84' with '2863'
2860 -2862 2863 0
-2863 2862 0
-2863 -2860 0
c Var 'aux404' order represents '85' with '2864'
-2862 2864 0
c Var 'aux404' direct represents '85' with '2865'
2862 -2864 2865 0
-2865 2864 0
-2865 -2862 0
c Var 'aux404' order represents '86' with '2866'
-2864 2866 0
c Var 'aux404' direct represents '86' with '2867'
2864 -2866 2867 0
-2867 2866 0
-2867 -2864 0
c Var 'aux404' order represents '87' with '2868'
-2866 2868 0
c Var 'aux404' direct represents '87' with '2869'
2866 -2868 2869 0
-2869 2868 0
-2869 -2866 0
c Var 'aux404' order represents '88' with '2870'
-2868 2870 0
c Var 'aux404' direct represents '88' with '2871'
2868 -2870 2871 0
-2871 2870 0
-2871 -2868 0
c Var 'aux404' order represents '89' with '2872'
-2870 2872 0
c Var 'aux404' direct represents '89' with '2873'
2870 -2872 2873 0
-2873 2872 0
-2873 -2870 0
c Var 'aux404' order represents '90' with '2874'
-2872 2874 0
c Var 'aux404' direct represents '90' with '2875'
2872 -2874 2875 0
-2875 2874 0
-2875 -2872 0
c Var 'aux404' order represents '91' with '2876'
-2874 2876 0
c Var 'aux404' direct represents '91' with '2877'
2874 -2876 2877 0
-2877 2876 0
-2877 -2874 0
c Var 'aux404' order represents '92' with '2878'
-2876 2878 0
c Var 'aux404' direct represents '92' with '2879'
2876 -2878 2879 0
-2879 2878 0
-2879 -2876 0
c Var 'aux404' order represents '93' with '2880'
-2878 2880 0
c Var 'aux404' direct represents '93' with '2881'
2878 -2880 2881 0
-2881 2880 0
-2881 -2878 0
c Var 'aux404' order represents '94' with '2882'
-2880 2882 0
c Var 'aux404' direct represents '94' with '2883'
2880 -2882 2883 0
-2883 2882 0
-2883 -2880 0
c Var 'aux404' order represents '95' with '2884'
-2882 2884 0
c Var 'aux404' direct represents '95' with '2885'
2882 -2884 2885 0
-2885 2884 0
-2885 -2882 0
c Var 'aux404' order represents '96' with '2886'
-2884 2886 0
c Var 'aux404' direct represents '96' with '2887'
2884 -2886 2887 0
-2887 2886 0
-2887 -2884 0
c Var 'aux404' order represents '97' with '2888'
-2886 2888 0
c Var 'aux404' direct represents '97' with '2889'
2886 -2888 2889 0
-2889 2888 0
-2889 -2886 0
c Var 'aux404' order represents '98' with '2890'
-2888 2890 0
c Var 'aux404' direct represents '98' with '2891'
2888 -2890 2891 0
-2891 2890 0
-2891 -2888 0
c Var 'aux404' order represents '99' with '2892'
-2890 2892 0
c Var 'aux404' direct represents '99' with '2893'
2890 -2892 2893 0
-2893 2892 0
-2893 -2890 0
c Var 'aux404' order represents '100' with '2894'
-2892 2894 0
c Var 'aux404' direct represents '100' with '2895'
2892 -2894 2895 0
-2895 2894 0
-2895 -2892 0
c Var 'aux404' order represents '101' with '2896'
-2894 2896 0
c Var 'aux404' direct represents '101' with '2897'
2894 -2896 2897 0
-2897 2896 0
-2897 -2894 0
c Var 'aux404' order represents '102' with '2898'
-2896 2898 0
c Var 'aux404' direct represents '102' with '2899'
2896 -2898 2899 0
-2899 2898 0
-2899 -2896 0
c Var 'aux404' order represents '103' with '2900'
-2898 2900 0
c Var 'aux404' direct represents '103' with '2901'
2898 -2900 2901 0
-2901 2900 0
-2901 -2898 0
c Var 'aux404' order represents '104' with '2902'
-2900 2902 0
c Var 'aux404' direct represents '104' with '2903'
2900 -2902 2903 0
-2903 2902 0
-2903 -2900 0
c Var 'aux404' order represents '105' with '2904'
-2902 2904 0
c Var 'aux404' direct represents '105' with '2905'
2902 -2904 2905 0
-2905 2904 0
-2905 -2902 0
c Var 'aux404' order represents '106' with '2906'
-2904 2906 0
c Var 'aux404' direct represents '106' with '2907'
2904 -2906 2907 0
-2907 2906 0
-2907 -2904 0
c Var 'aux404' order represents '107' with '2908'
-2906 2908 0
c Var 'aux404' direct represents '107' with '2909'
2906 -2908 2909 0
-2909 2908 0
-2909 -2906 0
c Var 'aux404' order represents '108' with '2910'
-2908 2910 0
c Var 'aux404' direct represents '108' with '2911'
2908 -2910 2911 0
-2911 2910 0
-2911 -2908 0
c Var 'aux404' order represents '109' with '2912'
-2910 2912 0
c Var 'aux404' direct represents '109' with '2913'
2910 -2912 2913 0
-2913 2912 0
-2913 -2910 0
c Var 'aux404' order represents '110' with '2914'
-2912 2914 0
c Var 'aux404' direct represents '110' with '2915'
2912 -2914 2915 0
-2915 2914 0
-2915 -2912 0
c Var 'aux404' order represents '111' with '2916'
-2914 2916 0
c Var 'aux404' direct represents '111' with '2917'
2914 -2916 2917 0
-2917 2916 0
-2917 -2914 0
c Var 'aux404' order represents '112' with '2918'
-2916 2918 0
c Var 'aux404' direct represents '112' with '2919'
2916 -2918 2919 0
-2919 2918 0
-2919 -2916 0
c Var 'aux404' order represents '113' with '2920'
-2918 2920 0
c Var 'aux404' direct represents '113' with '2921'
2918 -2920 2921 0
-2921 2920 0
-2921 -2918 0
c Var 'aux404' order represents '114' with '2922'
-2920 2922 0
c Var 'aux404' direct represents '114' with '2923'
2920 -2922 2923 0
-2923 2922 0
-2923 -2920 0
c Var 'aux404' order represents '115' with '2924'
-2922 2924 0
c Var 'aux404' direct represents '115' with '2925'
2922 -2924 2925 0
-2925 2924 0
-2925 -2922 0
c Var 'aux404' order represents '116' with '2926'
-2924 2926 0
c Var 'aux404' direct represents '116' with '2927'
2924 -2926 2927 0
-2927 2926 0
-2927 -2924 0
c Var 'aux404' order represents '117' with '2928'
-2926 2928 0
c Var 'aux404' direct represents '117' with '2929'
2926 -2928 2929 0
-2929 2928 0
-2929 -2926 0
c Var 'aux404' order represents '118' with '2930'
-2928 2930 0
c Var 'aux404' direct represents '118' with '2931'
2928 -2930 2931 0
-2931 2930 0
-2931 -2928 0
c Var 'aux404' order represents '119' with '2932'
-2930 2932 0
c Var 'aux404' direct represents '119' with '2933'
2930 -2932 2933 0
-2933 2932 0
-2933 -2930 0
c Var 'aux404' order represents '120' with '2934'
-2932 2934 0
c Var 'aux404' direct represents '120' with '2935'
2932 -2934 2935 0
-2935 2934 0
-2935 -2932 0
c Var 'aux404' order represents '121' with '2936'
-2934 2936 0
c Var 'aux404' direct represents '121' with '2937'
2934 -2936 2937 0
-2937 2936 0
-2937 -2934 0
c Var 'aux404' order represents '122' with '2938'
-2936 2938 0
c Var 'aux404' direct represents '122' with '2939'
2936 -2938 2939 0
-2939 2938 0
-2939 -2936 0
c Var 'aux404' order represents '123' with '2940'
-2938 2940 0
c Var 'aux404' direct represents '123' with '2941'
2938 -2940 2941 0
-2941 2940 0
-2941 -2938 0
c Var 'aux404' order represents '124' with '2942'
-2940 2942 0
c Var 'aux404' direct represents '124' with '2943'
2940 -2942 2943 0
-2943 2942 0
-2943 -2940 0
c Var 'aux404' order represents '125' with '2944'
-2942 2944 0
c Var 'aux404' direct represents '125' with '2945'
2942 -2944 2945 0
-2945 2944 0
-2945 -2942 0
c Var 'aux404' order represents '126' with '2946'
-2944 2946 0
c Var 'aux404' direct represents '126' with '2947'
2944 -2946 2947 0
-2947 2946 0
-2947 -2944 0
c Var 'aux404' order represents '127' with '2948'
-2946 2948 0
c Var 'aux404' direct represents '127' with '2949'
2946 -2948 2949 0
-2949 2948 0
-2949 -2946 0
c Var 'aux404' direct represents '128' with '-2948'
2695 2697 2699 2701 2703 2705 2707 2709 2711 2713 2715 2717 2719 2721 2723 2725 2727 2729 2731 2733 2735 2737 2739 2741 2743 2745 2747 2749 2751 2753 2755 2757 2759 2761 2763 2765 2767 2769 2771 2773 2775 2777 2779 2781 2783 2785 2787 2789 2791 2793 2795 2797 2799 2801 2803 2805 2807 2809 2811 2813 2815 2817 2819 2821 2823 2825 2827 2829 2831 2833 2835 2837 2839 2841 2843 2845 2847 2849 2851 2853 2855 2857 2859 2861 2863 2865 2867 2869 2871 2873 2875 2877 2879 2881 2883 2885 2887 2889 2891 2893 2895 2897 2899 2901 2903 2905 2907 2909 2911 2913 2915 2917 2919 2921 2923 2925 2927 2929 2931 2933 2935 2937 2939 2941 2943 2945 2947 2949 -2948 0
c Encoding variable: aux405 with domain: int(0..128) (representing constraint ( - shift(num_occupied_by_types_00002, -64) - shift(num_occupied_by_types_00000, -64)))
c Both direct and order encoding.
c Var 'aux405' order represents '0' with '2950'
c Var 'aux405' direct represents '0' with '2950'
c Var 'aux405' order represents '1' with '2951'
-2950 2951 0
c Var 'aux405' direct represents '1' with '2952'
2950 -2951 2952 0
-2952 2951 0
-2952 -2950 0
c Var 'aux405' order represents '2' with '2953'
-2951 2953 0
c Var 'aux405' direct represents '2' with '2954'
2951 -2953 2954 0
-2954 2953 0
-2954 -2951 0
c Var 'aux405' order represents '3' with '2955'
-2953 2955 0
c Var 'aux405' direct represents '3' with '2956'
2953 -2955 2956 0
-2956 2955 0
-2956 -2953 0
c Var 'aux405' order represents '4' with '2957'
-2955 2957 0
c Var 'aux405' direct represents '4' with '2958'
2955 -2957 2958 0
-2958 2957 0
-2958 -2955 0
c Var 'aux405' order represents '5' with '2959'
-2957 2959 0
c Var 'aux405' direct represents '5' with '2960'
2957 -2959 2960 0
-2960 2959 0
-2960 -2957 0
c Var 'aux405' order represents '6' with '2961'
-2959 2961 0
c Var 'aux405' direct represents '6' with '2962'
2959 -2961 2962 0
-2962 2961 0
-2962 -2959 0
c Var 'aux405' order represents '7' with '2963'
-2961 2963 0
c Var 'aux405' direct represents '7' with '2964'
2961 -2963 2964 0
-2964 2963 0
-2964 -2961 0
c Var 'aux405' order represents '8' with '2965'
-2963 2965 0
c Var 'aux405' direct represents '8' with '2966'
2963 -2965 2966 0
-2966 2965 0
-2966 -2963 0
c Var 'aux405' order represents '9' with '2967'
-2965 2967 0
c Var 'aux405' direct represents '9' with '2968'
2965 -2967 2968 0
-2968 2967 0
-2968 -2965 0
c Var 'aux405' order represents '10' with '2969'
-2967 2969 0
c Var 'aux405' direct represents '10' with '2970'
2967 -2969 2970 0
-2970 2969 0
-2970 -2967 0
c Var 'aux405' order represents '11' with '2971'
-2969 2971 0
c Var 'aux405' direct represents '11' with '2972'
2969 -2971 2972 0
-2972 2971 0
-2972 -2969 0
c Var 'aux405' order represents '12' with '2973'
-2971 2973 0
c Var 'aux405' direct represents '12' with '2974'
2971 -2973 2974 0
-2974 2973 0
-2974 -2971 0
c Var 'aux405' order represents '13' with '2975'
-2973 2975 0
c Var 'aux405' direct represents '13' with '2976'
2973 -2975 2976 0
-2976 2975 0
-2976 -2973 0
c Var 'aux405' order represents '14' with '2977'
-2975 2977 0
c Var 'aux405' direct represents '14' with '2978'
2975 -2977 2978 0
-2978 2977 0
-2978 -2975 0
c Var 'aux405' order represents '15' with '2979'
-2977 2979 0
c Var 'aux405' direct represents '15' with '2980'
2977 -2979 2980 0
-2980 2979 0
-2980 -2977 0
c Var 'aux405' order represents '16' with '2981'
-2979 2981 0
c Var 'aux405' direct represents '16' with '2982'
2979 -2981 2982 0
-2982 2981 0
-2982 -2979 0
c Var 'aux405' order represents '17' with '2983'
-2981 2983 0
c Var 'aux405' direct represents '17' with '2984'
2981 -2983 2984 0
-2984 2983 0
-2984 -2981 0
c Var 'aux405' order represents '18' with '2985'
-2983 2985 0
c Var 'aux405' direct represents '18' with '2986'
2983 -2985 2986 0
-2986 2985 0
-2986 -2983 0
c Var 'aux405' order represents '19' with '2987'
-2985 2987 0
c Var 'aux405' direct represents '19' with '2988'
2985 -2987 2988 0
-2988 2987 0
-2988 -2985 0
c Var 'aux405' order represents '20' with '2989'
-2987 2989 0
c Var 'aux405' direct represents '20' with '2990'
2987 -2989 2990 0
-2990 2989 0
-2990 -2987 0
c Var 'aux405' order represents '21' with '2991'
-2989 2991 0
c Var 'aux405' direct represents '21' with '2992'
2989 -2991 2992 0
-2992 2991 0
-2992 -2989 0
c Var 'aux405' order represents '22' with '2993'
-2991 2993 0
c Var 'aux405' direct represents '22' with '2994'
2991 -2993 2994 0
-2994 2993 0
-2994 -2991 0
c Var 'aux405' order represents '23' with '2995'
-2993 2995 0
c Var 'aux405' direct represents '23' with '2996'
2993 -2995 2996 0
-2996 2995 0
-2996 -2993 0
c Var 'aux405' order represents '24' with '2997'
-2995 2997 0
c Var 'aux405' direct represents '24' with '2998'
2995 -2997 2998 0
-2998 2997 0
-2998 -2995 0
c Var 'aux405' order represents '25' with '2999'
-2997 2999 0
c Var 'aux405' direct represents '25' with '3000'
2997 -2999 3000 0
-3000 2999 0
-3000 -2997 0
c Var 'aux405' order represents '26' with '3001'
-2999 3001 0
c Var 'aux405' direct represents '26' with '3002'
2999 -3001 3002 0
-3002 3001 0
-3002 -2999 0
c Var 'aux405' order represents '27' with '3003'
-3001 3003 0
c Var 'aux405' direct represents '27' with '3004'
3001 -3003 3004 0
-3004 3003 0
-3004 -3001 0
c Var 'aux405' order represents '28' with '3005'
-3003 3005 0
c Var 'aux405' direct represents '28' with '3006'
3003 -3005 3006 0
-3006 3005 0
-3006 -3003 0
c Var 'aux405' order represents '29' with '3007'
-3005 3007 0
c Var 'aux405' direct represents '29' with '3008'
3005 -3007 3008 0
-3008 3007 0
-3008 -3005 0
c Var 'aux405' order represents '30' with '3009'
-3007 3009 0
c Var 'aux405' direct represents '30' with '3010'
3007 -3009 3010 0
-3010 3009 0
-3010 -3007 0
c Var 'aux405' order represents '31' with '3011'
-3009 3011 0
c Var 'aux405' direct represents '31' with '3012'
3009 -3011 3012 0
-3012 3011 0
-3012 -3009 0
c Var 'aux405' order represents '32' with '3013'
-3011 3013 0
c Var 'aux405' direct represents '32' with '3014'
3011 -3013 3014 0
-3014 3013 0
-3014 -3011 0
c Var 'aux405' order represents '33' with '3015'
-3013 3015 0
c Var 'aux405' direct represents '33' with '3016'
3013 -3015 3016 0
-3016 3015 0
-3016 -3013 0
c Var 'aux405' order represents '34' with '3017'
-3015 3017 0
c Var 'aux405' direct represents '34' with '3018'
3015 -3017 3018 0
-3018 3017 0
-3018 -3015 0
c Var 'aux405' order represents '35' with '3019'
-3017 3019 0
c Var 'aux405' direct represents '35' with '3020'
3017 -3019 3020 0
-3020 3019 0
-3020 -3017 0
c Var 'aux405' order represents '36' with '3021'
-3019 3021 0
c Var 'aux405' direct represents '36' with '3022'
3019 -3021 3022 0
-3022 3021 0
-3022 -3019 0
c Var 'aux405' order represents '37' with '3023'
-3021 3023 0
c Var 'aux405' direct represents '37' with '3024'
3021 -3023 3024 0
-3024 3023 0
-3024 -3021 0
c Var 'aux405' order represents '38' with '3025'
-3023 3025 0
c Var 'aux405' direct represents '38' with '3026'
3023 -3025 3026 0
-3026 3025 0
-3026 -3023 0
c Var 'aux405' order represents '39' with '3027'
-3025 3027 0
c Var 'aux405' direct represents '39' with '3028'
3025 -3027 3028 0
-3028 3027 0
-3028 -3025 0
c Var 'aux405' order represents '40' with '3029'
-3027 3029 0
c Var 'aux405' direct represents '40' with '3030'
3027 -3029 3030 0
-3030 3029 0
-3030 -3027 0
c Var 'aux405' order represents '41' with '3031'
-3029 3031 0
c Var 'aux405' direct represents '41' with '3032'
3029 -3031 3032 0
-3032 3031 0
-3032 -3029 0
c Var 'aux405' order represents '42' with '3033'
-3031 3033 0
c Var 'aux405' direct represents '42' with '3034'
3031 -3033 3034 0
-3034 3033 0
-3034 -3031 0
c Var 'aux405' order represents '43' with '3035'
-3033 3035 0
c Var 'aux405' direct represents '43' with '3036'
3033 -3035 3036 0
-3036 3035 0
-3036 -3033 0
c Var 'aux405' order represents '44' with '3037'
-3035 3037 0
c Var 'aux405' direct represents '44' with '3038'
3035 -3037 3038 0
-3038 3037 0
-3038 -3035 0
c Var 'aux405' order represents '45' with '3039'
-3037 3039 0
c Var 'aux405' direct represents '45' with '3040'
3037 -3039 3040 0
-3040 3039 0
-3040 -3037 0
c Var 'aux405' order represents '46' with '3041'
-3039 3041 0
c Var 'aux405' direct represents '46' with '3042'
3039 -3041 3042 0
-3042 3041 0
-3042 -3039 0
c Var 'aux405' order represents '47' with '3043'
-3041 3043 0
c Var 'aux405' direct represents '47' with '3044'
3041 -3043 3044 0
-3044 3043 0
-3044 -3041 0
c Var 'aux405' order represents '48' with '3045'
-3043 3045 0
c Var 'aux405' direct represents '48' with '3046'
3043 -3045 3046 0
-3046 3045 0
-3046 -3043 0
c Var 'aux405' order represents '49' with '3047'
-3045 3047 0
c Var 'aux405' direct represents '49' with '3048'
3045 -3047 3048 0
-3048 3047 0
-3048 -3045 0
c Var 'aux405' order represents '50' with '3049'
-3047 3049 0
c Var 'aux405' direct represents '50' with '3050'
3047 -3049 3050 0
-3050 3049 0
-3050 -3047 0
c Var 'aux405' order represents '51' with '3051'
-3049 3051 0
c Var 'aux405' direct represents '51' with '3052'
3049 -3051 3052 0
-3052 3051 0
-3052 -3049 0
c Var 'aux405' order represents '52' with '3053'
-3051 3053 0
c Var 'aux405' direct represents '52' with '3054'
3051 -3053 3054 0
-3054 3053 0
-3054 -3051 0
c Var 'aux405' order represents '53' with '3055'
-3053 3055 0
c Var 'aux405' direct represents '53' with '3056'
3053 -3055 3056 0
-3056 3055 0
-3056 -3053 0
c Var 'aux405' order represents '54' with '3057'
-3055 3057 0
c Var 'aux405' direct represents '54' with '3058'
3055 -3057 3058 0
-3058 3057 0
-3058 -3055 0
c Var 'aux405' order represents '55' with '3059'
-3057 3059 0
c Var 'aux405' direct represents '55' with '3060'
3057 -3059 3060 0
-3060 3059 0
-3060 -3057 0
c Var 'aux405' order represents '56' with '3061'
-3059 3061 0
c Var 'aux405' direct represents '56' with '3062'
3059 -3061 3062 0
-3062 3061 0
-3062 -3059 0
c Var 'aux405' order represents '57' with '3063'
-3061 3063 0
c Var 'aux405' direct represents '57' with '3064'
3061 -3063 3064 0
-3064 3063 0
-3064 -3061 0
c Var 'aux405' order represents '58' with '3065'
-3063 3065 0
c Var 'aux405' direct represents '58' with '3066'
3063 -3065 3066 0
-3066 3065 0
-3066 -3063 0
c Var 'aux405' order represents '59' with '3067'
-3065 3067 0
c Var 'aux405' direct represents '59' with '3068'
3065 -3067 3068 0
-3068 3067 0
-3068 -3065 0
c Var 'aux405' order represents '60' with '3069'
-3067 3069 0
c Var 'aux405' direct represents '60' with '3070'
3067 -3069 3070 0
-3070 3069 0
-3070 -3067 0
c Var 'aux405' order represents '61' with '3071'
-3069 3071 0
c Var 'aux405' direct represents '61' with '3072'
3069 -3071 3072 0
-3072 3071 0
-3072 -3069 0
c Var 'aux405' order represents '62' with '3073'
-3071 3073 0
c Var 'aux405' direct represents '62' with '3074'
3071 -3073 3074 0
-3074 3073 0
-3074 -3071 0
c Var 'aux405' order represents '63' with '3075'
-3073 3075 0
c Var 'aux405' direct represents '63' with '3076'
3073 -3075 3076 0
-3076 3075 0
-3076 -3073 0
c Var 'aux405' order represents '64' with '3077'
-3075 3077 0
c Var 'aux405' direct represents '64' with '3078'
3075 -3077 3078 0
-3078 3077 0
-3078 -3075 0
c Var 'aux405' order represents '65' with '3079'
-3077 3079 0
c Var 'aux405' direct represents '65' with '3080'
3077 -3079 3080 0
-3080 3079 0
-3080 -3077 0
c Var 'aux405' order represents '66' with '3081'
-3079 3081 0
c Var 'aux405' direct represents '66' with '3082'
3079 -3081 3082 0
-3082 3081 0
-3082 -3079 0
c Var 'aux405' order represents '67' with '3083'
-3081 3083 0
c Var 'aux405' direct represents '67' with '3084'
3081 -3083 3084 0
-3084 3083 0
-3084 -3081 0
c Var 'aux405' order represents '68' with '3085'
-3083 3085 0
c Var 'aux405' direct represents '68' with '3086'
3083 -3085 3086 0
-3086 3085 0
-3086 -3083 0
c Var 'aux405' order represents '69' with '3087'
-3085 3087 0
c Var 'aux405' direct represents '69' with '3088'
3085 -3087 3088 0
-3088 3087 0
-3088 -3085 0
c Var 'aux405' order represents '70' with '3089'
-3087 3089 0
c Var 'aux405' direct represents '70' with '3090'
3087 -3089 3090 0
-3090 3089 0
-3090 -3087 0
c Var 'aux405' order represents '71' with '3091'
-3089 3091 0
c Var 'aux405' direct represents '71' with '3092'
3089 -3091 3092 0
-3092 3091 0
-3092 -3089 0
c Var 'aux405' order represents '72' with '3093'
-3091 3093 0
c Var 'aux405' direct represents '72' with '3094'
3091 -3093 3094 0
-3094 3093 0
-3094 -3091 0
c Var 'aux405' order represents '73' with '3095'
-3093 3095 0
c Var 'aux405' direct represents '73' with '3096'
3093 -3095 3096 0
-3096 3095 0
-3096 -3093 0
c Var 'aux405' order represents '74' with '3097'
-3095 3097 0
c Var 'aux405' direct represents '74' with '3098'
3095 -3097 3098 0
-3098 3097 0
-3098 -3095 0
c Var 'aux405' order represents '75' with '3099'
-3097 3099 0
c Var 'aux405' direct represents '75' with '3100'
3097 -3099 3100 0
-3100 3099 0
-3100 -3097 0
c Var 'aux405' order represents '76' with '3101'
-3099 3101 0
c Var 'aux405' direct represents '76' with '3102'
3099 -3101 3102 0
-3102 3101 0
-3102 -3099 0
c Var 'aux405' order represents '77' with '3103'
-3101 3103 0
c Var 'aux405' direct represents '77' with '3104'
3101 -3103 3104 0
-3104 3103 0
-3104 -3101 0
c Var 'aux405' order represents '78' with '3105'
-3103 3105 0
c Var 'aux405' direct represents '78' with '3106'
3103 -3105 3106 0
-3106 3105 0
-3106 -3103 0
c Var 'aux405' order represents '79' with '3107'
-3105 3107 0
c Var 'aux405' direct represents '79' with '3108'
3105 -3107 3108 0
-3108 3107 0
-3108 -3105 0
c Var 'aux405' order represents '80' with '3109'
-3107 3109 0
c Var 'aux405' direct represents '80' with '3110'
3107 -3109 3110 0
-3110 3109 0
-3110 -3107 0
c Var 'aux405' order represents '81' with '3111'
-3109 3111 0
c Var 'aux405' direct represents '81' with '3112'
3109 -3111 3112 0
-3112 3111 0
-3112 -3109 0
c Var 'aux405' order represents '82' with '3113'
-3111 3113 0
c Var 'aux405' direct represents '82' with '3114'
3111 -3113 3114 0
-3114 3113 0
-3114 -3111 0
c Var 'aux405' order represents '83' with '3115'
-3113 3115 0
c Var 'aux405' direct represents '83' with '3116'
3113 -3115 3116 0
-3116 3115 0
-3116 -3113 0
c Var 'aux405' order represents '84' with '3117'
-3115 3117 0
c Var 'aux405' direct represents '84' with '3118'
3115 -3117 3118 0
-3118 3117 0
-3118 -3115 0
c Var 'aux405' order represents '85' with '3119'
-3117 3119 0
c Var 'aux405' direct represents '85' with '3120'
3117 -3119 3120 0
-3120 3119 0
-3120 -3117 0
c Var 'aux405' order represents '86' with '3121'
-3119 3121 0
c Var 'aux405' direct represents '86' with '3122'
3119 -3121 3122 0
-3122 3121 0
-3122 -3119 0
c Var 'aux405' order represents '87' with '3123'
-3121 3123 0
c Var 'aux405' direct represents '87' with '3124'
3121 -3123 3124 0
-3124 3123 0
-3124 -3121 0
c Var 'aux405' order represents '88' with '3125'
-3123 3125 0
c Var 'aux405' direct represents '88' with '3126'
3123 -3125 3126 0
-3126 3125 0
-3126 -3123 0
c Var 'aux405' order represents '89' with '3127'
-3125 3127 0
c Var 'aux405' direct represents '89' with '3128'
3125 -3127 3128 0
-3128 3127 0
-3128 -3125 0
c Var 'aux405' order represents '90' with '3129'
-3127 3129 0
c Var 'aux405' direct represents '90' with '3130'
3127 -3129 3130 0
-3130 3129 0
-3130 -3127 0
c Var 'aux405' order represents '91' with '3131'
-3129 3131 0
c Var 'aux405' direct represents '91' with '3132'
3129 -3131 3132 0
-3132 3131 0
-3132 -3129 0
c Var 'aux405' order represents '92' with '3133'
-3131 3133 0
c Var 'aux405' direct represents '92' with '3134'
3131 -3133 3134 0
-3134 3133 0
-3134 -3131 0
c Var 'aux405' order represents '93' with '3135'
-3133 3135 0
c Var 'aux405' direct represents '93' with '3136'
3133 -3135 3136 0
-3136 3135 0
-3136 -3133 0
c Var 'aux405' order represents '94' with '3137'
-3135 3137 0
c Var 'aux405' direct represents '94' with '3138'
3135 -3137 3138 0
-3138 3137 0
-3138 -3135 0
c Var 'aux405' order represents '95' with '3139'
-3137 3139 0
c Var 'aux405' direct represents '95' with '3140'
3137 -3139 3140 0
-3140 3139 0
-3140 -3137 0
c Var 'aux405' order represents '96' with '3141'
-3139 3141 0
c Var 'aux405' direct represents '96' with '3142'
3139 -3141 3142 0
-3142 3141 0
-3142 -3139 0
c Var 'aux405' order represents '97' with '3143'
-3141 3143 0
c Var 'aux405' direct represents '97' with '3144'
3141 -3143 3144 0
-3144 3143 0
-3144 -3141 0
c Var 'aux405' order represents '98' with '3145'
-3143 3145 0
c Var 'aux405' direct represents '98' with '3146'
3143 -3145 3146 0
-3146 3145 0
-3146 -3143 0
c Var 'aux405' order represents '99' with '3147'
-3145 3147 0
c Var 'aux405' direct represents '99' with '3148'
3145 -3147 3148 0
-3148 3147 0
-3148 -3145 0
c Var 'aux405' order represents '100' with '3149'
-3147 3149 0
c Var 'aux405' direct represents '100' with '3150'
3147 -3149 3150 0
-3150 3149 0
-3150 -3147 0
c Var 'aux405' order represents '101' with '3151'
-3149 3151 0
c Var 'aux405' direct represents '101' with '3152'
3149 -3151 3152 0
-3152 3151 0
-3152 -3149 0
c Var 'aux405' order represents '102' with '3153'
-3151 3153 0
c Var 'aux405' direct represents '102' with '3154'
3151 -3153 3154 0
-3154 3153 0
-3154 -3151 0
c Var 'aux405' order represents '103' with '3155'
-3153 3155 0
c Var 'aux405' direct represents '103' with '3156'
3153 -3155 3156 0
-3156 3155 0
-3156 -3153 0
c Var 'aux405' order represents '104' with '3157'
-3155 3157 0
c Var 'aux405' direct represents '104' with '3158'
3155 -3157 3158 0
-3158 3157 0
-3158 -3155 0
c Var 'aux405' order represents '105' with '3159'
-3157 3159 0
c Var 'aux405' direct represents '105' with '3160'
3157 -3159 3160 0
-3160 3159 0
-3160 -3157 0
c Var 'aux405' order represents '106' with '3161'
-3159 3161 0
c Var 'aux405' direct represents '106' with '3162'
3159 -3161 3162 0
-3162 3161 0
-3162 -3159 0
c Var 'aux405' order represents '107' with '3163'
-3161 3163 0
c Var 'aux405' direct represents '107' with '3164'
3161 -3163 3164 0
-3164 3163 0
-3164 -3161 0
c Var 'aux405' order represents '108' with '3165'
-3163 3165 0
c Var 'aux405' direct represents '108' with '3166'
3163 -3165 3166 0
-3166 3165 0
-3166 -3163 0
c Var 'aux405' order represents '109' with '3167'
-3165 3167 0
c Var 'aux405' direct represents '109' with '3168'
3165 -3167 3168 0
-3168 3167 0
-3168 -3165 0
c Var 'aux405' order represents '110' with '3169'
-3167 3169 0
c Var 'aux405' direct represents '110' with '3170'
3167 -3169 3170 0
-3170 3169 0
-3170 -3167 0
c Var 'aux405' order represents '111' with '3171'
-3169 3171 0
c Var 'aux405' direct represents '111' with '3172'
3169 -3171 3172 0
-3172 3171 0
-3172 -3169 0
c Var 'aux405' order represents '112' with '3173'
-3171 3173 0
c Var 'aux405' direct represents '112' with '3174'
3171 -3173 3174 0
-3174 3173 0
-3174 -3171 0
c Var 'aux405' order represents '113' with '3175'
-3173 3175 0
c Var 'aux405' direct represents '113' with '3176'
3173 -3175 3176 0
-3176 3175 0
-3176 -3173 0
c Var 'aux405' order represents '114' with '3177'
-3175 3177 0
c Var 'aux405' direct represents '114' with '3178'
3175 -3177 3178 0
-3178 3177 0
-3178 -3175 0
c Var 'aux405' order represents '115' with '3179'
-3177 3179 0
c Var 'aux405' direct represents '115' with '3180'
3177 -3179 3180 0
-3180 3179 0
-3180 -3177 0
c Var 'aux405' order represents '116' with '3181'
-3179 3181 0
c Var 'aux405' direct represents '116' with '3182'
3179 -3181 3182 0
-3182 3181 0
-3182 -3179 0
c Var 'aux405' order represents '117' with '3183'
-3181 3183 0
c Var 'aux405' direct represents '117' with '3184'
3181 -3183 3184 0
-3184 3183 0
-3184 -3181 0
c Var 'aux405' order represents '118' with '3185'
-3183 3185 0
c Var 'aux405' direct represents '118' with '3186'
3183 -3185 3186 0
-3186 3185 0
-3186 -3183 0
c Var 'aux405' order represents '119' with '3187'
-3185 3187 0
c Var 'aux405' direct represents '119' with '3188'
3185 -3187 3188 0
-3188 3187 0
-3188 -3185 0
c Var 'aux405' order represents '120' with '3189'
-3187 3189 0
c Var 'aux405' direct represents '120' with '3190'
3187 -3189 3190 0
-3190 3189 0
-3190 -3187 0
c Var 'aux405' order represents '121' with '3191'
-3189 3191 0
c Var 'aux405' direct represents '121' with '3192'
3189 -3191 3192 0
-3192 3191 0
-3192 -3189 0
c Var 'aux405' order represents '122' with '3193'
-3191 3193 0
c Var 'aux405' direct represents '122' with '3194'
3191 -3193 3194 0
-3194 3193 0
-3194 -3191 0
c Var 'aux405' order represents '123' with '3195'
-3193 3195 0
c Var 'aux405' direct represents '123' with '3196'
3193 -3195 3196 0
-3196 3195 0
-3196 -3193 0
c Var 'aux405' order represents '124' with '3197'
-3195 3197 0
c Var 'aux405' direct represents '124' with '3198'
3195 -3197 3198 0
-3198 3197 0
-3198 -3195 0
c Var 'aux405' order represents '125' with '3199'
-3197 3199 0
c Var 'aux405' direct represents '125' with '3200'
3197 -3199 3200 0
-3200 3199 0
-3200 -3197 0
c Var 'aux405' order represents '126' with '3201'
-3199 3201 0
c Var 'aux405' direct represents '126' with '3202'
3199 -3201 3202 0
-3202 3201 0
-3202 -3199 0
c Var 'aux405' order represents '127' with '3203'
-3201 3203 0
c Var 'aux405' direct represents '127' with '3204'
3201 -3203 3204 0
-3204 3203 0
-3204 -3201 0
c Var 'aux405' direct represents '128' with '-3203'
2950 2952 2954 2956 2958 2960 2962 2964 2966 2968 2970 2972 2974 2976 2978 2980 2982 2984 2986 2988 2990 2992 2994 2996 2998 3000 3002 3004 3006 3008 3010 3012 3014 3016 3018 3020 3022 3024 3026 3028 3030 3032 3034 3036 3038 3040 3042 3044 3046 3048 3050 3052 3054 3056 3058 3060 3062 3064 3066 3068 3070 3072 3074 3076 3078 3080 3082 3084 3086 3088 3090 3092 3094 3096 3098 3100 3102 3104 3106 3108 3110 3112 3114 3116 3118 3120 3122 3124 3126 3128 3130 3132 3134 3136 3138 3140 3142 3144 3146 3148 3150 3152 3154 3156 3158 3160 3162 3164 3166 3168 3170 3172 3174 3176 3178 3180 3182 3184 3186 3188 3190 3192 3194 3196 3198 3200 3202 3204 -3203 0
c Encoding variable: aux406 with domain: int(0..2) (representing constraint (sij_00001_00001 + sij_00001_00008))
c Both direct and order encoding.
c Var 'aux406' order represents '0' with '3205'
c Var 'aux406' direct represents '0' with '3205'
c Var 'aux406' order represents '1' with '3206'
-3205 3206 0
c Var 'aux406' direct represents '1' with '3207'
3205 -3206 3207 0
-3207 3206 0
-3207 -3205 0
c Var 'aux406' direct represents '2' with '-3206'
3205 3207 -3206 0
c Encoding variable: aux407 with domain: int(0..2) (representing constraint (sij_00001_00007 + sij_00001_00002))
c Both direct and order encoding.
c Var 'aux407' order represents '0' with '3208'
c Var 'aux407' direct represents '0' with '3208'
c Var 'aux407' order represents '1' with '3209'
-3208 3209 0
c Var 'aux407' direct represents '1' with '3210'
3208 -3209 3210 0
-3210 3209 0
-3210 -3208 0
c Var 'aux407' direct represents '2' with '-3209'
3208 3210 -3209 0
c Encoding variable: aux408 with domain: int(0..2) (representing constraint (sij_00001_00006 + sij_00001_00004))
c Both direct and order encoding.
c Var 'aux408' order represents '0' with '3211'
c Var 'aux408' direct represents '0' with '3211'
c Var 'aux408' order represents '1' with '3212'
-3211 3212 0
c Var 'aux408' direct represents '1' with '3213'
3211 -3212 3213 0
-3213 3212 0
-3213 -3211 0
c Var 'aux408' direct represents '2' with '-3212'
3211 3213 -3212 0
c Encoding variable: aux409 with domain: int(0..2) (representing constraint (sij_00001_00005 + sij_00001_00003))
c Both direct and order encoding.
c Var 'aux409' order represents '0' with '3214'
c Var 'aux409' direct represents '0' with '3214'
c Var 'aux409' order represents '1' with '3215'
-3214 3215 0
c Var 'aux409' direct represents '1' with '3216'
3214 -3215 3216 0
-3216 3215 0
-3216 -3214 0
c Var 'aux409' direct represents '2' with '-3215'
3214 3216 -3215 0
c Encoding variable: aux410 with domain: int(0..4) (representing constraint (aux406 + aux409))
c Both direct and order encoding.
c Var 'aux410' order represents '0' with '3217'
c Var 'aux410' direct represents '0' with '3217'
c Var 'aux410' order represents '1' with '3218'
-3217 3218 0
c Var 'aux410' direct represents '1' with '3219'
3217 -3218 3219 0
-3219 3218 0
-3219 -3217 0
c Var 'aux410' order represents '2' with '3220'
-3218 3220 0
c Var 'aux410' direct represents '2' with '3221'
3218 -3220 3221 0
-3221 3220 0
-3221 -3218 0
c Var 'aux410' order represents '3' with '3222'
-3220 3222 0
c Var 'aux410' direct represents '3' with '3223'
3220 -3222 3223 0
-3223 3222 0
-3223 -3220 0
c Var 'aux410' direct represents '4' with '-3222'
3217 3219 3221 3223 -3222 0
c Encoding variable: aux411 with domain: int(0..2) (representing constraint (sij_00002_00001 + sij_00002_00008))
c Both direct and order encoding.
c Var 'aux411' order represents '0' with '3224'
c Var 'aux411' direct represents '0' with '3224'
c Var 'aux411' order represents '1' with '3225'
-3224 3225 0
c Var 'aux411' direct represents '1' with '3226'
3224 -3225 3226 0
-3226 3225 0
-3226 -3224 0
c Var 'aux411' direct represents '2' with '-3225'
3224 3226 -3225 0
c Encoding variable: aux412 with domain: int(0..2) (representing constraint (sij_00002_00007 + sij_00002_00002))
c Both direct and order encoding.
c Var 'aux412' order represents '0' with '3227'
c Var 'aux412' direct represents '0' with '3227'
c Var 'aux412' order represents '1' with '3228'
-3227 3228 0
c Var 'aux412' direct represents '1' with '3229'
3227 -3228 3229 0
-3229 3228 0
-3229 -3227 0
c Var 'aux412' direct represents '2' with '-3228'
3227 3229 -3228 0
c Encoding variable: aux413 with domain: int(0..2) (representing constraint (sij_00002_00006 + sij_00002_00004))
c Both direct and order encoding.
c Var 'aux413' order represents '0' with '3230'
c Var 'aux413' direct represents '0' with '3230'
c Var 'aux413' order represents '1' with '3231'
-3230 3231 0
c Var 'aux413' direct represents '1' with '3232'
3230 -3231 3232 0
-3232 3231 0
-3232 -3230 0
c Var 'aux413' direct represents '2' with '-3231'
3230 3232 -3231 0
c Encoding variable: aux414 with domain: int(0..2) (representing constraint (sij_00002_00005 + sij_00002_00003))
c Both direct and order encoding.
c Var 'aux414' order represents '0' with '3233'
c Var 'aux414' direct represents '0' with '3233'
c Var 'aux414' order represents '1' with '3234'
-3233 3234 0
c Var 'aux414' direct represents '1' with '3235'
3233 -3234 3235 0
-3235 3234 0
-3235 -3233 0
c Var 'aux414' direct represents '2' with '-3234'
3233 3235 -3234 0
c Encoding variable: aux415 with domain: int(0..4) (representing constraint (aux411 + aux414))
c Both direct and order encoding.
c Var 'aux415' order represents '0' with '3236'
c Var 'aux415' direct represents '0' with '3236'
c Var 'aux415' order represents '1' with '3237'
-3236 3237 0
c Var 'aux415' direct represents '1' with '3238'
3236 -3237 3238 0
-3238 3237 0
-3238 -3236 0
c Var 'aux415' order represents '2' with '3239'
-3237 3239 0
c Var 'aux415' direct represents '2' with '3240'
3237 -3239 3240 0
-3240 3239 0
-3240 -3237 0
c Var 'aux415' order represents '3' with '3241'
-3239 3241 0
c Var 'aux415' direct represents '3' with '3242'
3239 -3241 3242 0
-3242 3241 0
-3242 -3239 0
c Var 'aux415' direct represents '4' with '-3241'
3236 3238 3240 3242 -3241 0
c Encoding variable: aux416 with domain: int(0..2) (representing constraint (sij_00003_00001 + sij_00003_00008))
c Both direct and order encoding.
c Var 'aux416' order represents '0' with '3243'
c Var 'aux416' direct represents '0' with '3243'
c Var 'aux416' order represents '1' with '3244'
-3243 3244 0
c Var 'aux416' direct represents '1' with '3245'
3243 -3244 3245 0
-3245 3244 0
-3245 -3243 0
c Var 'aux416' direct represents '2' with '-3244'
3243 3245 -3244 0
c Encoding variable: aux417 with domain: int(0..2) (representing constraint (sij_00003_00007 + sij_00003_00002))
c Both direct and order encoding.
c Var 'aux417' order represents '0' with '3246'
c Var 'aux417' direct represents '0' with '3246'
c Var 'aux417' order represents '1' with '3247'
-3246 3247 0
c Var 'aux417' direct represents '1' with '3248'
3246 -3247 3248 0
-3248 3247 0
-3248 -3246 0
c Var 'aux417' direct represents '2' with '-3247'
3246 3248 -3247 0
c Encoding variable: aux418 with domain: int(0..2) (representing constraint (sij_00003_00006 + sij_00003_00004))
c Both direct and order encoding.
c Var 'aux418' order represents '0' with '3249'
c Var 'aux418' direct represents '0' with '3249'
c Var 'aux418' order represents '1' with '3250'
-3249 3250 0
c Var 'aux418' direct represents '1' with '3251'
3249 -3250 3251 0
-3251 3250 0
-3251 -3249 0
c Var 'aux418' direct represents '2' with '-3250'
3249 3251 -3250 0
c Encoding variable: aux419 with domain: int(0..2) (representing constraint (sij_00003_00005 + sij_00003_00003))
c Both direct and order encoding.
c Var 'aux419' order represents '0' with '3252'
c Var 'aux419' direct represents '0' with '3252'
c Var 'aux419' order represents '1' with '3253'
-3252 3253 0
c Var 'aux419' direct represents '1' with '3254'
3252 -3253 3254 0
-3254 3253 0
-3254 -3252 0
c Var 'aux419' direct represents '2' with '-3253'
3252 3254 -3253 0
c Encoding variable: aux420 with domain: int(0..4) (representing constraint (aux416 + aux419))
c Both direct and order encoding.
c Var 'aux420' order represents '0' with '3255'
c Var 'aux420' direct represents '0' with '3255'
c Var 'aux420' order represents '1' with '3256'
-3255 3256 0
c Var 'aux420' direct represents '1' with '3257'
3255 -3256 3257 0
-3257 3256 0
-3257 -3255 0
c Var 'aux420' order represents '2' with '3258'
-3256 3258 0
c Var 'aux420' direct represents '2' with '3259'
3256 -3258 3259 0
-3259 3258 0
-3259 -3256 0
c Var 'aux420' order represents '3' with '3260'
-3258 3260 0
c Var 'aux420' direct represents '3' with '3261'
3258 -3260 3261 0
-3261 3260 0
-3261 -3258 0
c Var 'aux420' direct represents '4' with '-3260'
3255 3257 3259 3261 -3260 0
c Encoding variable: aux421 with domain: int(0..2) (representing constraint (sij_00004_00001 + sij_00004_00008))
c Both direct and order encoding.
c Var 'aux421' order represents '0' with '3262'
c Var 'aux421' direct represents '0' with '3262'
c Var 'aux421' order represents '1' with '3263'
-3262 3263 0
c Var 'aux421' direct represents '1' with '3264'
3262 -3263 3264 0
-3264 3263 0
-3264 -3262 0
c Var 'aux421' direct represents '2' with '-3263'
3262 3264 -3263 0
c Encoding variable: aux422 with domain: int(0..2) (representing constraint (sij_00004_00007 + sij_00004_00002))
c Both direct and order encoding.
c Var 'aux422' order represents '0' with '3265'
c Var 'aux422' direct represents '0' with '3265'
c Var 'aux422' order represents '1' with '3266'
-3265 3266 0
c Var 'aux422' direct represents '1' with '3267'
3265 -3266 3267 0
-3267 3266 0
-3267 -3265 0
c Var 'aux422' direct represents '2' with '-3266'
3265 3267 -3266 0
c Encoding variable: aux423 with domain: int(0..2) (representing constraint (sij_00004_00006 + sij_00004_00004))
c Both direct and order encoding.
c Var 'aux423' order represents '0' with '3268'
c Var 'aux423' direct represents '0' with '3268'
c Var 'aux423' order represents '1' with '3269'
-3268 3269 0
c Var 'aux423' direct represents '1' with '3270'
3268 -3269 3270 0
-3270 3269 0
-3270 -3268 0
c Var 'aux423' direct represents '2' with '-3269'
3268 3270 -3269 0
c Encoding variable: aux424 with domain: int(0..2) (representing constraint (sij_00004_00005 + sij_00004_00003))
c Both direct and order encoding.
c Var 'aux424' order represents '0' with '3271'
c Var 'aux424' direct represents '0' with '3271'
c Var 'aux424' order represents '1' with '3272'
-3271 3272 0
c Var 'aux424' direct represents '1' with '3273'
3271 -3272 3273 0
-3273 3272 0
-3273 -3271 0
c Var 'aux424' direct represents '2' with '-3272'
3271 3273 -3272 0
c Encoding variable: aux425 with domain: int(0..4) (representing constraint (aux421 + aux424))
c Both direct and order encoding.
c Var 'aux425' order represents '0' with '3274'
c Var 'aux425' direct represents '0' with '3274'
c Var 'aux425' order represents '1' with '3275'
-3274 3275 0
c Var 'aux425' direct represents '1' with '3276'
3274 -3275 3276 0
-3276 3275 0
-3276 -3274 0
c Var 'aux425' order represents '2' with '3277'
-3275 3277 0
c Var 'aux425' direct represents '2' with '3278'
3275 -3277 3278 0
-3278 3277 0
-3278 -3275 0
c Var 'aux425' order represents '3' with '3279'
-3277 3279 0
c Var 'aux425' direct represents '3' with '3280'
3277 -3279 3280 0
-3280 3279 0
-3280 -3277 0
c Var 'aux425' direct represents '4' with '-3279'
3274 3276 3278 3280 -3279 0
c Encoding variable: aux426 with domain: int(0..2) (representing constraint (sij_00005_00001 + sij_00005_00008))
c Both direct and order encoding.
c Var 'aux426' order represents '0' with '3281'
c Var 'aux426' direct represents '0' with '3281'
c Var 'aux426' order represents '1' with '3282'
-3281 3282 0
c Var 'aux426' direct represents '1' with '3283'
3281 -3282 3283 0
-3283 3282 0
-3283 -3281 0
c Var 'aux426' direct represents '2' with '-3282'
3281 3283 -3282 0
c Encoding variable: aux427 with domain: int(0..2) (representing constraint (sij_00005_00007 + sij_00005_00002))
c Both direct and order encoding.
c Var 'aux427' order represents '0' with '3284'
c Var 'aux427' direct represents '0' with '3284'
c Var 'aux427' order represents '1' with '3285'
-3284 3285 0
c Var 'aux427' direct represents '1' with '3286'
3284 -3285 3286 0
-3286 3285 0
-3286 -3284 0
c Var 'aux427' direct represents '2' with '-3285'
3284 3286 -3285 0
c Encoding variable: aux428 with domain: int(0..2) (representing constraint (sij_00005_00006 + sij_00005_00004))
c Both direct and order encoding.
c Var 'aux428' order represents '0' with '3287'
c Var 'aux428' direct represents '0' with '3287'
c Var 'aux428' order represents '1' with '3288'
-3287 3288 0
c Var 'aux428' direct represents '1' with '3289'
3287 -3288 3289 0
-3289 3288 0
-3289 -3287 0
c Var 'aux428' direct represents '2' with '-3288'
3287 3289 -3288 0
c Encoding variable: aux429 with domain: int(0..2) (representing constraint (sij_00005_00005 + sij_00005_00003))
c Both direct and order encoding.
c Var 'aux429' order represents '0' with '3290'
c Var 'aux429' direct represents '0' with '3290'
c Var 'aux429' order represents '1' with '3291'
-3290 3291 0
c Var 'aux429' direct represents '1' with '3292'
3290 -3291 3292 0
-3292 3291 0
-3292 -3290 0
c Var 'aux429' direct represents '2' with '-3291'
3290 3292 -3291 0
c Encoding variable: aux430 with domain: int(0..4) (representing constraint (aux426 + aux429))
c Both direct and order encoding.
c Var 'aux430' order represents '0' with '3293'
c Var 'aux430' direct represents '0' with '3293'
c Var 'aux430' order represents '1' with '3294'
-3293 3294 0
c Var 'aux430' direct represents '1' with '3295'
3293 -3294 3295 0
-3295 3294 0
-3295 -3293 0
c Var 'aux430' order represents '2' with '3296'
-3294 3296 0
c Var 'aux430' direct represents '2' with '3297'
3294 -3296 3297 0
-3297 3296 0
-3297 -3294 0
c Var 'aux430' order represents '3' with '3298'
-3296 3298 0
c Var 'aux430' direct represents '3' with '3299'
3296 -3298 3299 0
-3299 3298 0
-3299 -3296 0
c Var 'aux430' direct represents '4' with '-3298'
3293 3295 3297 3299 -3298 0
c Encoding variable: aux431 with domain: int(0..2) (representing constraint (sij_00006_00001 + sij_00006_00008))
c Both direct and order encoding.
c Var 'aux431' order represents '0' with '3300'
c Var 'aux431' direct represents '0' with '3300'
c Var 'aux431' order represents '1' with '3301'
-3300 3301 0
c Var 'aux431' direct represents '1' with '3302'
3300 -3301 3302 0
-3302 3301 0
-3302 -3300 0
c Var 'aux431' direct represents '2' with '-3301'
3300 3302 -3301 0
c Encoding variable: aux432 with domain: int(0..2) (representing constraint (sij_00006_00007 + sij_00006_00002))
c Both direct and order encoding.
c Var 'aux432' order represents '0' with '3303'
c Var 'aux432' direct represents '0' with '3303'
c Var 'aux432' order represents '1' with '3304'
-3303 3304 0
c Var 'aux432' direct represents '1' with '3305'
3303 -3304 3305 0
-3305 3304 0
-3305 -3303 0
c Var 'aux432' direct represents '2' with '-3304'
3303 3305 -3304 0
c Encoding variable: aux433 with domain: int(0..2) (representing constraint (sij_00006_00006 + sij_00006_00004))
c Both direct and order encoding.
c Var 'aux433' order represents '0' with '3306'
c Var 'aux433' direct represents '0' with '3306'
c Var 'aux433' order represents '1' with '3307'
-3306 3307 0
c Var 'aux433' direct represents '1' with '3308'
3306 -3307 3308 0
-3308 3307 0
-3308 -3306 0
c Var 'aux433' direct represents '2' with '-3307'
3306 3308 -3307 0
c Encoding variable: aux434 with domain: int(0..2) (representing constraint (sij_00006_00005 + sij_00006_00003))
c Both direct and order encoding.
c Var 'aux434' order represents '0' with '3309'
c Var 'aux434' direct represents '0' with '3309'
c Var 'aux434' order represents '1' with '3310'
-3309 3310 0
c Var 'aux434' direct represents '1' with '3311'
3309 -3310 3311 0
-3311 3310 0
-3311 -3309 0
c Var 'aux434' direct represents '2' with '-3310'
3309 3311 -3310 0
c Encoding variable: aux435 with domain: int(0..4) (representing constraint (aux431 + aux434))
c Both direct and order encoding.
c Var 'aux435' order represents '0' with '3312'
c Var 'aux435' direct represents '0' with '3312'
c Var 'aux435' order represents '1' with '3313'
-3312 3313 0
c Var 'aux435' direct represents '1' with '3314'
3312 -3313 3314 0
-3314 3313 0
-3314 -3312 0
c Var 'aux435' order represents '2' with '3315'
-3313 3315 0
c Var 'aux435' direct represents '2' with '3316'
3313 -3315 3316 0
-3316 3315 0
-3316 -3313 0
c Var 'aux435' order represents '3' with '3317'
-3315 3317 0
c Var 'aux435' direct represents '3' with '3318'
3315 -3317 3318 0
-3318 3317 0
-3318 -3315 0
c Var 'aux435' direct represents '4' with '-3317'
3312 3314 3316 3318 -3317 0
c Encoding variable: aux436 with domain: int(0..2) (representing constraint (sij_00007_00001 + sij_00007_00008))
c Both direct and order encoding.
c Var 'aux436' order represents '0' with '3319'
c Var 'aux436' direct represents '0' with '3319'
c Var 'aux436' order represents '1' with '3320'
-3319 3320 0
c Var 'aux436' direct represents '1' with '3321'
3319 -3320 3321 0
-3321 3320 0
-3321 -3319 0
c Var 'aux436' direct represents '2' with '-3320'
3319 3321 -3320 0
c Encoding variable: aux437 with domain: int(0..2) (representing constraint (sij_00007_00007 + sij_00007_00002))
c Both direct and order encoding.
c Var 'aux437' order represents '0' with '3322'
c Var 'aux437' direct represents '0' with '3322'
c Var 'aux437' order represents '1' with '3323'
-3322 3323 0
c Var 'aux437' direct represents '1' with '3324'
3322 -3323 3324 0
-3324 3323 0
-3324 -3322 0
c Var 'aux437' direct represents '2' with '-3323'
3322 3324 -3323 0
c Encoding variable: aux438 with domain: int(0..2) (representing constraint (sij_00007_00006 + sij_00007_00004))
c Both direct and order encoding.
c Var 'aux438' order represents '0' with '3325'
c Var 'aux438' direct represents '0' with '3325'
c Var 'aux438' order represents '1' with '3326'
-3325 3326 0
c Var 'aux438' direct represents '1' with '3327'
3325 -3326 3327 0
-3327 3326 0
-3327 -3325 0
c Var 'aux438' direct represents '2' with '-3326'
3325 3327 -3326 0
c Encoding variable: aux439 with domain: int(0..2) (representing constraint (sij_00007_00005 + sij_00007_00003))
c Both direct and order encoding.
c Var 'aux439' order represents '0' with '3328'
c Var 'aux439' direct represents '0' with '3328'
c Var 'aux439' order represents '1' with '3329'
-3328 3329 0
c Var 'aux439' direct represents '1' with '3330'
3328 -3329 3330 0
-3330 3329 0
-3330 -3328 0
c Var 'aux439' direct represents '2' with '-3329'
3328 3330 -3329 0
c Encoding variable: aux440 with domain: int(0..4) (representing constraint (aux436 + aux439))
c Both direct and order encoding.
c Var 'aux440' order represents '0' with '3331'
c Var 'aux440' direct represents '0' with '3331'
c Var 'aux440' order represents '1' with '3332'
-3331 3332 0
c Var 'aux440' direct represents '1' with '3333'
3331 -3332 3333 0
-3333 3332 0
-3333 -3331 0
c Var 'aux440' order represents '2' with '3334'
-3332 3334 0
c Var 'aux440' direct represents '2' with '3335'
3332 -3334 3335 0
-3335 3334 0
-3335 -3332 0
c Var 'aux440' order represents '3' with '3336'
-3334 3336 0
c Var 'aux440' direct represents '3' with '3337'
3334 -3336 3337 0
-3337 3336 0
-3337 -3334 0
c Var 'aux440' direct represents '4' with '-3336'
3331 3333 3335 3337 -3336 0
c Encoding variable: aux441 with domain: int(0..2) (representing constraint (sij_00008_00001 + sij_00008_00008))
c Both direct and order encoding.
c Var 'aux441' order represents '0' with '3338'
c Var 'aux441' direct represents '0' with '3338'
c Var 'aux441' order represents '1' with '3339'
-3338 3339 0
c Var 'aux441' direct represents '1' with '3340'
3338 -3339 3340 0
-3340 3339 0
-3340 -3338 0
c Var 'aux441' direct represents '2' with '-3339'
3338 3340 -3339 0
c Encoding variable: aux442 with domain: int(0..2) (representing constraint (sij_00008_00007 + sij_00008_00002))
c Both direct and order encoding.
c Var 'aux442' order represents '0' with '3341'
c Var 'aux442' direct represents '0' with '3341'
c Var 'aux442' order represents '1' with '3342'
-3341 3342 0
c Var 'aux442' direct represents '1' with '3343'
3341 -3342 3343 0
-3343 3342 0
-3343 -3341 0
c Var 'aux442' direct represents '2' with '-3342'
3341 3343 -3342 0
c Encoding variable: aux443 with domain: int(0..2) (representing constraint (sij_00008_00006 + sij_00008_00004))
c Both direct and order encoding.
c Var 'aux443' order represents '0' with '3344'
c Var 'aux443' direct represents '0' with '3344'
c Var 'aux443' order represents '1' with '3345'
-3344 3345 0
c Var 'aux443' direct represents '1' with '3346'
3344 -3345 3346 0
-3346 3345 0
-3346 -3344 0
c Var 'aux443' direct represents '2' with '-3345'
3344 3346 -3345 0
c Encoding variable: aux444 with domain: int(0..2) (representing constraint (sij_00008_00005 + sij_00008_00003))
c Both direct and order encoding.
c Var 'aux444' order represents '0' with '3347'
c Var 'aux444' direct represents '0' with '3347'
c Var 'aux444' order represents '1' with '3348'
-3347 3348 0
c Var 'aux444' direct represents '1' with '3349'
3347 -3348 3349 0
-3349 3348 0
-3349 -3347 0
c Var 'aux444' direct represents '2' with '-3348'
3347 3349 -3348 0
c Encoding variable: aux445 with domain: int(0..4) (representing constraint (aux441 + aux444))
c Both direct and order encoding.
c Var 'aux445' order represents '0' with '3350'
c Var 'aux445' direct represents '0' with '3350'
c Var 'aux445' order represents '1' with '3351'
-3350 3351 0
c Var 'aux445' direct represents '1' with '3352'
3350 -3351 3352 0
-3352 3351 0
-3352 -3350 0
c Var 'aux445' order represents '2' with '3353'
-3351 3353 0
c Var 'aux445' direct represents '2' with '3354'
3351 -3353 3354 0
-3354 3353 0
-3354 -3351 0
c Var 'aux445' order represents '3' with '3355'
-3353 3355 0
c Var 'aux445' direct represents '3' with '3356'
3353 -3355 3356 0
-3356 3355 0
-3356 -3353 0
c Var 'aux445' direct represents '4' with '-3355'
3350 3352 3354 3356 -3355 0
c Encoding variable: aux446 with domain: int(0..2) (representing constraint (sij_00002_00001 + sij_00006_00001))
c Both direct and order encoding.
c Var 'aux446' order represents '0' with '3357'
c Var 'aux446' direct represents '0' with '3357'
c Var 'aux446' order represents '1' with '3358'
-3357 3358 0
c Var 'aux446' direct represents '1' with '3359'
3357 -3358 3359 0
-3359 3358 0
-3359 -3357 0
c Var 'aux446' direct represents '2' with '-3358'
3357 3359 -3358 0
c Encoding variable: aux447 with domain: int(0..2) (representing constraint (sij_00001_00001 + sij_00007_00001))
c Both direct and order encoding.
c Var 'aux447' order represents '0' with '3360'
c Var 'aux447' direct represents '0' with '3360'
c Var 'aux447' order represents '1' with '3361'
-3360 3361 0
c Var 'aux447' direct represents '1' with '3362'
3360 -3361 3362 0
-3362 3361 0
-3362 -3360 0
c Var 'aux447' direct represents '2' with '-3361'
3360 3362 -3361 0
c Encoding variable: aux448 with domain: int(0..2) (representing constraint (sij_00005_00001 + sij_00008_00001))
c Both direct and order encoding.
c Var 'aux448' order represents '0' with '3363'
c Var 'aux448' direct represents '0' with '3363'
c Var 'aux448' order represents '1' with '3364'
-3363 3364 0
c Var 'aux448' direct represents '1' with '3365'
3363 -3364 3365 0
-3365 3364 0
-3365 -3363 0
c Var 'aux448' direct represents '2' with '-3364'
3363 3365 -3364 0
c Encoding variable: aux449 with domain: int(0..2) (representing constraint (sij_00004_00001 + sij_00003_00001))
c Both direct and order encoding.
c Var 'aux449' order represents '0' with '3366'
c Var 'aux449' direct represents '0' with '3366'
c Var 'aux449' order represents '1' with '3367'
-3366 3367 0
c Var 'aux449' direct represents '1' with '3368'
3366 -3367 3368 0
-3368 3367 0
-3368 -3366 0
c Var 'aux449' direct represents '2' with '-3367'
3366 3368 -3367 0
c Encoding variable: aux450 with domain: int(0..4) (representing constraint (aux446 + aux449))
c Both direct and order encoding.
c Var 'aux450' order represents '0' with '3369'
c Var 'aux450' direct represents '0' with '3369'
c Var 'aux450' order represents '1' with '3370'
-3369 3370 0
c Var 'aux450' direct represents '1' with '3371'
3369 -3370 3371 0
-3371 3370 0
-3371 -3369 0
c Var 'aux450' order represents '2' with '3372'
-3370 3372 0
c Var 'aux450' direct represents '2' with '3373'
3370 -3372 3373 0
-3373 3372 0
-3373 -3370 0
c Var 'aux450' order represents '3' with '3374'
-3372 3374 0
c Var 'aux450' direct represents '3' with '3375'
3372 -3374 3375 0
-3375 3374 0
-3375 -3372 0
c Var 'aux450' direct represents '4' with '-3374'
3369 3371 3373 3375 -3374 0
c Encoding variable: aux451 with domain: int(0..2) (representing constraint (sij_00002_00002 + sij_00006_00002))
c Both direct and order encoding.
c Var 'aux451' order represents '0' with '3376'
c Var 'aux451' direct represents '0' with '3376'
c Var 'aux451' order represents '1' with '3377'
-3376 3377 0
c Var 'aux451' direct represents '1' with '3378'
3376 -3377 3378 0
-3378 3377 0
-3378 -3376 0
c Var 'aux451' direct represents '2' with '-3377'
3376 3378 -3377 0
c Encoding variable: aux452 with domain: int(0..2) (representing constraint (sij_00001_00002 + sij_00007_00002))
c Both direct and order encoding.
c Var 'aux452' order represents '0' with '3379'
c Var 'aux452' direct represents '0' with '3379'
c Var 'aux452' order represents '1' with '3380'
-3379 3380 0
c Var 'aux452' direct represents '1' with '3381'
3379 -3380 3381 0
-3381 3380 0
-3381 -3379 0
c Var 'aux452' direct represents '2' with '-3380'
3379 3381 -3380 0
c Encoding variable: aux453 with domain: int(0..2) (representing constraint (sij_00005_00002 + sij_00008_00002))
c Both direct and order encoding.
c Var 'aux453' order represents '0' with '3382'
c Var 'aux453' direct represents '0' with '3382'
c Var 'aux453' order represents '1' with '3383'
-3382 3383 0
c Var 'aux453' direct represents '1' with '3384'
3382 -3383 3384 0
-3384 3383 0
-3384 -3382 0
c Var 'aux453' direct represents '2' with '-3383'
3382 3384 -3383 0
c Encoding variable: aux454 with domain: int(0..2) (representing constraint (sij_00004_00002 + sij_00003_00002))
c Both direct and order encoding.
c Var 'aux454' order represents '0' with '3385'
c Var 'aux454' direct represents '0' with '3385'
c Var 'aux454' order represents '1' with '3386'
-3385 3386 0
c Var 'aux454' direct represents '1' with '3387'
3385 -3386 3387 0
-3387 3386 0
-3387 -3385 0
c Var 'aux454' direct represents '2' with '-3386'
3385 3387 -3386 0
c Encoding variable: aux455 with domain: int(0..4) (representing constraint (aux451 + aux454))
c Both direct and order encoding.
c Var 'aux455' order represents '0' with '3388'
c Var 'aux455' direct represents '0' with '3388'
c Var 'aux455' order represents '1' with '3389'
-3388 3389 0
c Var 'aux455' direct represents '1' with '3390'
3388 -3389 3390 0
-3390 3389 0
-3390 -3388 0
c Var 'aux455' order represents '2' with '3391'
-3389 3391 0
c Var 'aux455' direct represents '2' with '3392'
3389 -3391 3392 0
-3392 3391 0
-3392 -3389 0
c Var 'aux455' order represents '3' with '3393'
-3391 3393 0
c Var 'aux455' direct represents '3' with '3394'
3391 -3393 3394 0
-3394 3393 0
-3394 -3391 0
c Var 'aux455' direct represents '4' with '-3393'
3388 3390 3392 3394 -3393 0
c Encoding variable: aux456 with domain: int(0..2) (representing constraint (sij_00002_00003 + sij_00006_00003))
c Both direct and order encoding.
c Var 'aux456' order represents '0' with '3395'
c Var 'aux456' direct represents '0' with '3395'
c Var 'aux456' order represents '1' with '3396'
-3395 3396 0
c Var 'aux456' direct represents '1' with '3397'
3395 -3396 3397 0
-3397 3396 0
-3397 -3395 0
c Var 'aux456' direct represents '2' with '-3396'
3395 3397 -3396 0
c Encoding variable: aux457 with domain: int(0..2) (representing constraint (sij_00001_00003 + sij_00007_00003))
c Both direct and order encoding.
c Var 'aux457' order represents '0' with '3398'
c Var 'aux457' direct represents '0' with '3398'
c Var 'aux457' order represents '1' with '3399'
-3398 3399 0
c Var 'aux457' direct represents '1' with '3400'
3398 -3399 3400 0
-3400 3399 0
-3400 -3398 0
c Var 'aux457' direct represents '2' with '-3399'
3398 3400 -3399 0
c Encoding variable: aux458 with domain: int(0..2) (representing constraint (sij_00005_00003 + sij_00008_00003))
c Both direct and order encoding.
c Var 'aux458' order represents '0' with '3401'
c Var 'aux458' direct represents '0' with '3401'
c Var 'aux458' order represents '1' with '3402'
-3401 3402 0
c Var 'aux458' direct represents '1' with '3403'
3401 -3402 3403 0
-3403 3402 0
-3403 -3401 0
c Var 'aux458' direct represents '2' with '-3402'
3401 3403 -3402 0
c Encoding variable: aux459 with domain: int(0..2) (representing constraint (sij_00004_00003 + sij_00003_00003))
c Both direct and order encoding.
c Var 'aux459' order represents '0' with '3404'
c Var 'aux459' direct represents '0' with '3404'
c Var 'aux459' order represents '1' with '3405'
-3404 3405 0
c Var 'aux459' direct represents '1' with '3406'
3404 -3405 3406 0
-3406 3405 0
-3406 -3404 0
c Var 'aux459' direct represents '2' with '-3405'
3404 3406 -3405 0
c Encoding variable: aux460 with domain: int(0..4) (representing constraint (aux456 + aux459))
c Both direct and order encoding.
c Var 'aux460' order represents '0' with '3407'
c Var 'aux460' direct represents '0' with '3407'
c Var 'aux460' order represents '1' with '3408'
-3407 3408 0
c Var 'aux460' direct represents '1' with '3409'
3407 -3408 3409 0
-3409 3408 0
-3409 -3407 0
c Var 'aux460' order represents '2' with '3410'
-3408 3410 0
c Var 'aux460' direct represents '2' with '3411'
3408 -3410 3411 0
-3411 3410 0
-3411 -3408 0
c Var 'aux460' order represents '3' with '3412'
-3410 3412 0
c Var 'aux460' direct represents '3' with '3413'
3410 -3412 3413 0
-3413 3412 0
-3413 -3410 0
c Var 'aux460' direct represents '4' with '-3412'
3407 3409 3411 3413 -3412 0
c Encoding variable: aux461 with domain: int(0..2) (representing constraint (sij_00002_00004 + sij_00006_00004))
c Both direct and order encoding.
c Var 'aux461' order represents '0' with '3414'
c Var 'aux461' direct represents '0' with '3414'
c Var 'aux461' order represents '1' with '3415'
-3414 3415 0
c Var 'aux461' direct represents '1' with '3416'
3414 -3415 3416 0
-3416 3415 0
-3416 -3414 0
c Var 'aux461' direct represents '2' with '-3415'
3414 3416 -3415 0
c Encoding variable: aux462 with domain: int(0..2) (representing constraint (sij_00001_00004 + sij_00007_00004))
c Both direct and order encoding.
c Var 'aux462' order represents '0' with '3417'
c Var 'aux462' direct represents '0' with '3417'
c Var 'aux462' order represents '1' with '3418'
-3417 3418 0
c Var 'aux462' direct represents '1' with '3419'
3417 -3418 3419 0
-3419 3418 0
-3419 -3417 0
c Var 'aux462' direct represents '2' with '-3418'
3417 3419 -3418 0
c Encoding variable: aux463 with domain: int(0..2) (representing constraint (sij_00005_00004 + sij_00008_00004))
c Both direct and order encoding.
c Var 'aux463' order represents '0' with '3420'
c Var 'aux463' direct represents '0' with '3420'
c Var 'aux463' order represents '1' with '3421'
-3420 3421 0
c Var 'aux463' direct represents '1' with '3422'
3420 -3421 3422 0
-3422 3421 0
-3422 -3420 0
c Var 'aux463' direct represents '2' with '-3421'
3420 3422 -3421 0
c Encoding variable: aux464 with domain: int(0..2) (representing constraint (sij_00004_00004 + sij_00003_00004))
c Both direct and order encoding.
c Var 'aux464' order represents '0' with '3423'
c Var 'aux464' direct represents '0' with '3423'
c Var 'aux464' order represents '1' with '3424'
-3423 3424 0
c Var 'aux464' direct represents '1' with '3425'
3423 -3424 3425 0
-3425 3424 0
-3425 -3423 0
c Var 'aux464' direct represents '2' with '-3424'
3423 3425 -3424 0
c Encoding variable: aux465 with domain: int(0..4) (representing constraint (aux461 + aux464))
c Both direct and order encoding.
c Var 'aux465' order represents '0' with '3426'
c Var 'aux465' direct represents '0' with '3426'
c Var 'aux465' order represents '1' with '3427'
-3426 3427 0
c Var 'aux465' direct represents '1' with '3428'
3426 -3427 3428 0
-3428 3427 0
-3428 -3426 0
c Var 'aux465' order represents '2' with '3429'
-3427 3429 0
c Var 'aux465' direct represents '2' with '3430'
3427 -3429 3430 0
-3430 3429 0
-3430 -3427 0
c Var 'aux465' order represents '3' with '3431'
-3429 3431 0
c Var 'aux465' direct represents '3' with '3432'
3429 -3431 3432 0
-3432 3431 0
-3432 -3429 0
c Var 'aux465' direct represents '4' with '-3431'
3426 3428 3430 3432 -3431 0
c Encoding variable: aux466 with domain: int(0..2) (representing constraint (sij_00002_00005 + sij_00006_00005))
c Both direct and order encoding.
c Var 'aux466' order represents '0' with '3433'
c Var 'aux466' direct represents '0' with '3433'
c Var 'aux466' order represents '1' with '3434'
-3433 3434 0
c Var 'aux466' direct represents '1' with '3435'
3433 -3434 3435 0
-3435 3434 0
-3435 -3433 0
c Var 'aux466' direct represents '2' with '-3434'
3433 3435 -3434 0
c Encoding variable: aux467 with domain: int(0..2) (representing constraint (sij_00001_00005 + sij_00007_00005))
c Both direct and order encoding.
c Var 'aux467' order represents '0' with '3436'
c Var 'aux467' direct represents '0' with '3436'
c Var 'aux467' order represents '1' with '3437'
-3436 3437 0
c Var 'aux467' direct represents '1' with '3438'
3436 -3437 3438 0
-3438 3437 0
-3438 -3436 0
c Var 'aux467' direct represents '2' with '-3437'
3436 3438 -3437 0
c Encoding variable: aux468 with domain: int(0..2) (representing constraint (sij_00005_00005 + sij_00008_00005))
c Both direct and order encoding.
c Var 'aux468' order represents '0' with '3439'
c Var 'aux468' direct represents '0' with '3439'
c Var 'aux468' order represents '1' with '3440'
-3439 3440 0
c Var 'aux468' direct represents '1' with '3441'
3439 -3440 3441 0
-3441 3440 0
-3441 -3439 0
c Var 'aux468' direct represents '2' with '-3440'
3439 3441 -3440 0
c Encoding variable: aux469 with domain: int(0..2) (representing constraint (sij_00004_00005 + sij_00003_00005))
c Both direct and order encoding.
c Var 'aux469' order represents '0' with '3442'
c Var 'aux469' direct represents '0' with '3442'
c Var 'aux469' order represents '1' with '3443'
-3442 3443 0
c Var 'aux469' direct represents '1' with '3444'
3442 -3443 3444 0
-3444 3443 0
-3444 -3442 0
c Var 'aux469' direct represents '2' with '-3443'
3442 3444 -3443 0
c Encoding variable: aux470 with domain: int(0..4) (representing constraint (aux466 + aux469))
c Both direct and order encoding.
c Var 'aux470' order represents '0' with '3445'
c Var 'aux470' direct represents '0' with '3445'
c Var 'aux470' order represents '1' with '3446'
-3445 3446 0
c Var 'aux470' direct represents '1' with '3447'
3445 -3446 3447 0
-3447 3446 0
-3447 -3445 0
c Var 'aux470' order represents '2' with '3448'
-3446 3448 0
c Var 'aux470' direct represents '2' with '3449'
3446 -3448 3449 0
-3449 3448 0
-3449 -3446 0
c Var 'aux470' order represents '3' with '3450'
-3448 3450 0
c Var 'aux470' direct represents '3' with '3451'
3448 -3450 3451 0
-3451 3450 0
-3451 -3448 0
c Var 'aux470' direct represents '4' with '-3450'
3445 3447 3449 3451 -3450 0
c Encoding variable: aux471 with domain: int(0..2) (representing constraint (sij_00002_00006 + sij_00006_00006))
c Both direct and order encoding.
c Var 'aux471' order represents '0' with '3452'
c Var 'aux471' direct represents '0' with '3452'
c Var 'aux471' order represents '1' with '3453'
-3452 3453 0
c Var 'aux471' direct represents '1' with '3454'
3452 -3453 3454 0
-3454 3453 0
-3454 -3452 0
c Var 'aux471' direct represents '2' with '-3453'
3452 3454 -3453 0
c Encoding variable: aux472 with domain: int(0..2) (representing constraint (sij_00001_00006 + sij_00007_00006))
c Both direct and order encoding.
c Var 'aux472' order represents '0' with '3455'
c Var 'aux472' direct represents '0' with '3455'
c Var 'aux472' order represents '1' with '3456'
-3455 3456 0
c Var 'aux472' direct represents '1' with '3457'
3455 -3456 3457 0
-3457 3456 0
-3457 -3455 0
c Var 'aux472' direct represents '2' with '-3456'
3455 3457 -3456 0
c Encoding variable: aux473 with domain: int(0..2) (representing constraint (sij_00005_00006 + sij_00008_00006))
c Both direct and order encoding.
c Var 'aux473' order represents '0' with '3458'
c Var 'aux473' direct represents '0' with '3458'
c Var 'aux473' order represents '1' with '3459'
-3458 3459 0
c Var 'aux473' direct represents '1' with '3460'
3458 -3459 3460 0
-3460 3459 0
-3460 -3458 0
c Var 'aux473' direct represents '2' with '-3459'
3458 3460 -3459 0
c Encoding variable: aux474 with domain: int(0..2) (representing constraint (sij_00004_00006 + sij_00003_00006))
c Both direct and order encoding.
c Var 'aux474' order represents '0' with '3461'
c Var 'aux474' direct represents '0' with '3461'
c Var 'aux474' order represents '1' with '3462'
-3461 3462 0
c Var 'aux474' direct represents '1' with '3463'
3461 -3462 3463 0
-3463 3462 0
-3463 -3461 0
c Var 'aux474' direct represents '2' with '-3462'
3461 3463 -3462 0
c Encoding variable: aux475 with domain: int(0..4) (representing constraint (aux471 + aux474))
c Both direct and order encoding.
c Var 'aux475' order represents '0' with '3464'
c Var 'aux475' direct represents '0' with '3464'
c Var 'aux475' order represents '1' with '3465'
-3464 3465 0
c Var 'aux475' direct represents '1' with '3466'
3464 -3465 3466 0
-3466 3465 0
-3466 -3464 0
c Var 'aux475' order represents '2' with '3467'
-3465 3467 0
c Var 'aux475' direct represents '2' with '3468'
3465 -3467 3468 0
-3468 3467 0
-3468 -3465 0
c Var 'aux475' order represents '3' with '3469'
-3467 3469 0
c Var 'aux475' direct represents '3' with '3470'
3467 -3469 3470 0
-3470 3469 0
-3470 -3467 0
c Var 'aux475' direct represents '4' with '-3469'
3464 3466 3468 3470 -3469 0
c Encoding variable: aux476 with domain: int(0..2) (representing constraint (sij_00002_00007 + sij_00006_00007))
c Both direct and order encoding.
c Var 'aux476' order represents '0' with '3471'
c Var 'aux476' direct represents '0' with '3471'
c Var 'aux476' order represents '1' with '3472'
-3471 3472 0
c Var 'aux476' direct represents '1' with '3473'
3471 -3472 3473 0
-3473 3472 0
-3473 -3471 0
c Var 'aux476' direct represents '2' with '-3472'
3471 3473 -3472 0
c Encoding variable: aux477 with domain: int(0..2) (representing constraint (sij_00001_00007 + sij_00007_00007))
c Both direct and order encoding.
c Var 'aux477' order represents '0' with '3474'
c Var 'aux477' direct represents '0' with '3474'
c Var 'aux477' order represents '1' with '3475'
-3474 3475 0
c Var 'aux477' direct represents '1' with '3476'
3474 -3475 3476 0
-3476 3475 0
-3476 -3474 0
c Var 'aux477' direct represents '2' with '-3475'
3474 3476 -3475 0
c Encoding variable: aux478 with domain: int(0..2) (representing constraint (sij_00005_00007 + sij_00008_00007))
c Both direct and order encoding.
c Var 'aux478' order represents '0' with '3477'
c Var 'aux478' direct represents '0' with '3477'
c Var 'aux478' order represents '1' with '3478'
-3477 3478 0
c Var 'aux478' direct represents '1' with '3479'
3477 -3478 3479 0
-3479 3478 0
-3479 -3477 0
c Var 'aux478' direct represents '2' with '-3478'
3477 3479 -3478 0
c Encoding variable: aux479 with domain: int(0..2) (representing constraint (sij_00004_00007 + sij_00003_00007))
c Both direct and order encoding.
c Var 'aux479' order represents '0' with '3480'
c Var 'aux479' direct represents '0' with '3480'
c Var 'aux479' order represents '1' with '3481'
-3480 3481 0
c Var 'aux479' direct represents '1' with '3482'
3480 -3481 3482 0
-3482 3481 0
-3482 -3480 0
c Var 'aux479' direct represents '2' with '-3481'
3480 3482 -3481 0
c Encoding variable: aux480 with domain: int(0..4) (representing constraint (aux476 + aux479))
c Both direct and order encoding.
c Var 'aux480' order represents '0' with '3483'
c Var 'aux480' direct represents '0' with '3483'
c Var 'aux480' order represents '1' with '3484'
-3483 3484 0
c Var 'aux480' direct represents '1' with '3485'
3483 -3484 3485 0
-3485 3484 0
-3485 -3483 0
c Var 'aux480' order represents '2' with '3486'
-3484 3486 0
c Var 'aux480' direct represents '2' with '3487'
3484 -3486 3487 0
-3487 3486 0
-3487 -3484 0
c Var 'aux480' order represents '3' with '3488'
-3486 3488 0
c Var 'aux480' direct represents '3' with '3489'
3486 -3488 3489 0
-3489 3488 0
-3489 -3486 0
c Var 'aux480' direct represents '4' with '-3488'
3483 3485 3487 3489 -3488 0
c Encoding variable: aux481 with domain: int(0..2) (representing constraint (sij_00002_00008 + sij_00006_00008))
c Both direct and order encoding.
c Var 'aux481' order represents '0' with '3490'
c Var 'aux481' direct represents '0' with '3490'
c Var 'aux481' order represents '1' with '3491'
-3490 3491 0
c Var 'aux481' direct represents '1' with '3492'
3490 -3491 3492 0
-3492 3491 0
-3492 -3490 0
c Var 'aux481' direct represents '2' with '-3491'
3490 3492 -3491 0
c Encoding variable: aux482 with domain: int(0..2) (representing constraint (sij_00001_00008 + sij_00007_00008))
c Both direct and order encoding.
c Var 'aux482' order represents '0' with '3493'
c Var 'aux482' direct represents '0' with '3493'
c Var 'aux482' order represents '1' with '3494'
-3493 3494 0
c Var 'aux482' direct represents '1' with '3495'
3493 -3494 3495 0
-3495 3494 0
-3495 -3493 0
c Var 'aux482' direct represents '2' with '-3494'
3493 3495 -3494 0
c Encoding variable: aux483 with domain: int(0..2) (representing constraint (sij_00005_00008 + sij_00008_00008))
c Both direct and order encoding.
c Var 'aux483' order represents '0' with '3496'
c Var 'aux483' direct represents '0' with '3496'
c Var 'aux483' order represents '1' with '3497'
-3496 3497 0
c Var 'aux483' direct represents '1' with '3498'
3496 -3497 3498 0
-3498 3497 0
-3498 -3496 0
c Var 'aux483' direct represents '2' with '-3497'
3496 3498 -3497 0
c Encoding variable: aux484 with domain: int(0..2) (representing constraint (sij_00004_00008 + sij_00003_00008))
c Both direct and order encoding.
c Var 'aux484' order represents '0' with '3499'
c Var 'aux484' direct represents '0' with '3499'
c Var 'aux484' order represents '1' with '3500'
-3499 3500 0
c Var 'aux484' direct represents '1' with '3501'
3499 -3500 3501 0
-3501 3500 0
-3501 -3499 0
c Var 'aux484' direct represents '2' with '-3500'
3499 3501 -3500 0
c Encoding variable: aux485 with domain: int(0..4) (representing constraint (aux481 + aux484))
c Both direct and order encoding.
c Var 'aux485' order represents '0' with '3502'
c Var 'aux485' direct represents '0' with '3502'
c Var 'aux485' order represents '1' with '3503'
-3502 3503 0
c Var 'aux485' direct represents '1' with '3504'
3502 -3503 3504 0
-3504 3503 0
-3504 -3502 0
c Var 'aux485' order represents '2' with '3505'
-3503 3505 0
c Var 'aux485' direct represents '2' with '3506'
3503 -3505 3506 0
-3506 3505 0
-3506 -3503 0
c Var 'aux485' order represents '3' with '3507'
-3505 3507 0
c Var 'aux485' direct represents '3' with '3508'
3505 -3507 3508 0
-3508 3507 0
-3508 -3505 0
c Var 'aux485' direct represents '4' with '-3507'
3502 3504 3506 3508 -3507 0
c Encoding variable: aux486 with domain: int(0) (representing constraint (lijk_00001_00001_00001 + lijk_00001_00001_00002))
c Var 'aux486' direct represents '0' with '3509'
3509 0
c Encoding variable: aux487 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00001_00001_00001))
c Var 'aux487' direct represents '0' with '3510'
3510 0
c Encoding variable: aux488 with domain: int(0) (representing constraint (uijk_00001_00001_00002 + aux487))
c Var 'aux488' direct represents '0' with '3511'
3511 0
c Encoding variable: aux489 with domain: int(0) (representing constraint (uijk_00001_00001_00003 + aux488))
c Var 'aux489' direct represents '0' with '3512'
3512 0
c Encoding variable: aux490 with domain: int(0) (representing constraint (lijk_00001_00001_00003 + aux489))
c Var 'aux490' direct represents '0' with '3513'
3513 0
c Encoding variable: aux491 with domain: int(0) (representing constraint (aux486 + aux490))
c Var 'aux491' direct represents '0' with '3514'
3514 0
c Encoding variable: aux492 with domain: bool (representing constraint (aux491 + dijk_00001_00001_00002))
c Var 'aux492' direct represents '0' with '-3515'
c Var 'aux492' direct represents '1' with '3515'
c Var 'aux492' order represents '1' with '1'
c Var 'aux492' order represents '0' with '-3515'
c Encoding variable: aux493 with domain: int(0..2) (representing constraint (rijk_00001_00001_00003 + aux492))
c Both direct and order encoding.
c Var 'aux493' order represents '0' with '3516'
c Var 'aux493' direct represents '0' with '3516'
c Var 'aux493' order represents '1' with '3517'
-3516 3517 0
c Var 'aux493' direct represents '1' with '3518'
3516 -3517 3518 0
-3518 3517 0
-3518 -3516 0
c Var 'aux493' direct represents '2' with '-3517'
3516 3518 -3517 0
c Encoding variable: aux494 with domain: int(0..2) (representing constraint (rijk_00001_00001_00001 + rijk_00001_00001_00002))
c Both direct and order encoding.
c Var 'aux494' order represents '0' with '3519'
c Var 'aux494' direct represents '0' with '3519'
c Var 'aux494' order represents '1' with '3520'
-3519 3520 0
c Var 'aux494' direct represents '1' with '3521'
3519 -3520 3521 0
-3521 3520 0
-3521 -3519 0
c Var 'aux494' direct represents '2' with '-3520'
3519 3521 -3520 0
c Encoding variable: aux495 with domain: int(0..2) (representing constraint (dijk_00001_00001_00001 + dijk_00001_00001_00003))
c Both direct and order encoding.
c Var 'aux495' order represents '0' with '3522'
c Var 'aux495' direct represents '0' with '3522'
c Var 'aux495' order represents '1' with '3523'
-3522 3523 0
c Var 'aux495' direct represents '1' with '3524'
3522 -3523 3524 0
-3524 3523 0
-3524 -3522 0
c Var 'aux495' direct represents '2' with '-3523'
3522 3524 -3523 0
c Encoding variable: aux496 with domain: int(0..4) (representing constraint (aux493 + aux495))
c Both direct and order encoding.
c Var 'aux496' order represents '0' with '3525'
c Var 'aux496' direct represents '0' with '3525'
c Var 'aux496' order represents '1' with '3526'
-3525 3526 0
c Var 'aux496' direct represents '1' with '3527'
3525 -3526 3527 0
-3527 3526 0
-3527 -3525 0
c Var 'aux496' order represents '2' with '3528'
-3526 3528 0
c Var 'aux496' direct represents '2' with '3529'
3526 -3528 3529 0
-3529 3528 0
-3529 -3526 0
c Var 'aux496' order represents '3' with '3530'
-3528 3530 0
c Var 'aux496' direct represents '3' with '3531'
3528 -3530 3531 0
-3531 3530 0
-3531 -3528 0
c Var 'aux496' direct represents '4' with '-3530'
3525 3527 3529 3531 -3530 0
c Encoding variable: aux497 with domain: int(0) (representing constraint (lijk_00002_00001_00001 + lijk_00002_00001_00002))
c Var 'aux497' direct represents '0' with '3532'
3532 0
c Encoding variable: aux498 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00002_00001_00002))
c Var 'aux498' direct represents '0' with '3533'
3533 0
c Encoding variable: aux499 with domain: int(0) (representing constraint (uijk_00002_00001_00003 + aux498))
c Var 'aux499' direct represents '0' with '3534'
3534 0
c Encoding variable: aux500 with domain: int(0) (representing constraint (lijk_00002_00001_00003 + aux499))
c Var 'aux500' direct represents '0' with '3535'
3535 0
c Encoding variable: aux501 with domain: int(0) (representing constraint (aux497 + aux500))
c Var 'aux501' direct represents '0' with '3536'
3536 0
c Encoding variable: aux502 with domain: bool (representing constraint (aux501 + rijk_00002_00001_00001))
c Var 'aux502' direct represents '0' with '-3537'
c Var 'aux502' direct represents '1' with '3537'
c Var 'aux502' order represents '1' with '1'
c Var 'aux502' order represents '0' with '-3537'
c Encoding variable: aux503 with domain: int(0..2) (representing constraint (uijk_00002_00001_00001 + dijk_00002_00001_00001))
c Both direct and order encoding.
c Var 'aux503' order represents '0' with '3538'
c Var 'aux503' direct represents '0' with '3538'
c Var 'aux503' order represents '1' with '3539'
-3538 3539 0
c Var 'aux503' direct represents '1' with '3540'
3538 -3539 3540 0
-3540 3539 0
-3540 -3538 0
c Var 'aux503' direct represents '2' with '-3539'
3538 3540 -3539 0
c Encoding variable: aux504 with domain: int(0..2) (representing constraint (dijk_00002_00001_00003 + aux502))
c Both direct and order encoding.
c Var 'aux504' order represents '0' with '3541'
c Var 'aux504' direct represents '0' with '3541'
c Var 'aux504' order represents '1' with '3542'
-3541 3542 0
c Var 'aux504' direct represents '1' with '3543'
3541 -3542 3543 0
-3543 3542 0
-3543 -3541 0
c Var 'aux504' direct represents '2' with '-3542'
3541 3543 -3542 0
c Encoding variable: aux505 with domain: int(0..2) (representing constraint (dijk_00002_00001_00002 + rijk_00002_00001_00003))
c Both direct and order encoding.
c Var 'aux505' order represents '0' with '3544'
c Var 'aux505' direct represents '0' with '3544'
c Var 'aux505' order represents '1' with '3545'
-3544 3545 0
c Var 'aux505' direct represents '1' with '3546'
3544 -3545 3546 0
-3546 3545 0
-3546 -3544 0
c Var 'aux505' direct represents '2' with '-3545'
3544 3546 -3545 0
c Encoding variable: aux506 with domain: int(0..3) (representing constraint (rijk_00002_00001_00002 + aux505))
c Both direct and order encoding.
c Var 'aux506' order represents '0' with '3547'
c Var 'aux506' direct represents '0' with '3547'
c Var 'aux506' order represents '1' with '3548'
-3547 3548 0
c Var 'aux506' direct represents '1' with '3549'
3547 -3548 3549 0
-3549 3548 0
-3549 -3547 0
c Var 'aux506' order represents '2' with '3550'
-3548 3550 0
c Var 'aux506' direct represents '2' with '3551'
3548 -3550 3551 0
-3551 3550 0
-3551 -3548 0
c Var 'aux506' direct represents '3' with '-3550'
3547 3549 3551 -3550 0
c Encoding variable: aux507 with domain: int(0..4) (representing constraint (aux504 + aux503))
c Both direct and order encoding.
c Var 'aux507' order represents '0' with '3552'
c Var 'aux507' direct represents '0' with '3552'
c Var 'aux507' order represents '1' with '3553'
-3552 3553 0
c Var 'aux507' direct represents '1' with '3554'
3552 -3553 3554 0
-3554 3553 0
-3554 -3552 0
c Var 'aux507' order represents '2' with '3555'
-3553 3555 0
c Var 'aux507' direct represents '2' with '3556'
3553 -3555 3556 0
-3556 3555 0
-3556 -3553 0
c Var 'aux507' order represents '3' with '3557'
-3555 3557 0
c Var 'aux507' direct represents '3' with '3558'
3555 -3557 3558 0
-3558 3557 0
-3558 -3555 0
c Var 'aux507' direct represents '4' with '-3557'
3552 3554 3556 3558 -3557 0
c Encoding variable: aux508 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00003_00001_00003))
c Var 'aux508' direct represents '0' with '3559'
3559 0
c Encoding variable: aux509 with domain: int(0) (representing constraint (lijk_00003_00001_00001 + lijk_00003_00001_00002))
c Var 'aux509' direct represents '0' with '3560'
3560 0
c Encoding variable: aux510 with domain: int(0) (representing constraint (aux508 + lijk_00003_00001_00003))
c Var 'aux510' direct represents '0' with '3561'
3561 0
c Encoding variable: aux511 with domain: int(0) (representing constraint (aux509 + aux510))
c Var 'aux511' direct represents '0' with '3562'
3562 0
c Encoding variable: aux512 with domain: bool (representing constraint (aux511 + uijk_00003_00001_00002))
c Var 'aux512' direct represents '0' with '-3563'
c Var 'aux512' direct represents '1' with '3563'
c Var 'aux512' order represents '1' with '1'
c Var 'aux512' order represents '0' with '-3563'
c Encoding variable: aux513 with domain: int(0..2) (representing constraint (dijk_00003_00001_00001 + aux512))
c Both direct and order encoding.
c Var 'aux513' order represents '0' with '3564'
c Var 'aux513' direct represents '0' with '3564'
c Var 'aux513' order represents '1' with '3565'
-3564 3565 0
c Var 'aux513' direct represents '1' with '3566'
3564 -3565 3566 0
-3566 3565 0
-3566 -3564 0
c Var 'aux513' direct represents '2' with '-3565'
3564 3566 -3565 0
c Encoding variable: aux514 with domain: int(0..2) (representing constraint (dijk_00003_00001_00002 + rijk_00003_00001_00002))
c Both direct and order encoding.
c Var 'aux514' order represents '0' with '3567'
c Var 'aux514' direct represents '0' with '3567'
c Var 'aux514' order represents '1' with '3568'
-3567 3568 0
c Var 'aux514' direct represents '1' with '3569'
3567 -3568 3569 0
-3569 3568 0
-3569 -3567 0
c Var 'aux514' direct represents '2' with '-3568'
3567 3569 -3568 0
c Encoding variable: aux515 with domain: int(0..2) (representing constraint (uijk_00003_00001_00001 + rijk_00003_00001_00001))
c Both direct and order encoding.
c Var 'aux515' order represents '0' with '3570'
c Var 'aux515' direct represents '0' with '3570'
c Var 'aux515' order represents '1' with '3571'
-3570 3571 0
c Var 'aux515' direct represents '1' with '3572'
3570 -3571 3572 0
-3572 3571 0
-3572 -3570 0
c Var 'aux515' direct represents '2' with '-3571'
3570 3572 -3571 0
c Encoding variable: aux516 with domain: int(0..2) (representing constraint (rijk_00003_00001_00003 + dijk_00003_00001_00003))
c Both direct and order encoding.
c Var 'aux516' order represents '0' with '3573'
c Var 'aux516' direct represents '0' with '3573'
c Var 'aux516' order represents '1' with '3574'
-3573 3574 0
c Var 'aux516' direct represents '1' with '3575'
3573 -3574 3575 0
-3575 3574 0
-3575 -3573 0
c Var 'aux516' direct represents '2' with '-3574'
3573 3575 -3574 0
c Encoding variable: aux517 with domain: int(0..4) (representing constraint (aux514 + aux516))
c Both direct and order encoding.
c Var 'aux517' order represents '0' with '3576'
c Var 'aux517' direct represents '0' with '3576'
c Var 'aux517' order represents '1' with '3577'
-3576 3577 0
c Var 'aux517' direct represents '1' with '3578'
3576 -3577 3578 0
-3578 3577 0
-3578 -3576 0
c Var 'aux517' order represents '2' with '3579'
-3577 3579 0
c Var 'aux517' direct represents '2' with '3580'
3577 -3579 3580 0
-3580 3579 0
-3580 -3577 0
c Var 'aux517' order represents '3' with '3581'
-3579 3581 0
c Var 'aux517' direct represents '3' with '3582'
3579 -3581 3582 0
-3582 3581 0
-3582 -3579 0
c Var 'aux517' direct represents '4' with '-3581'
3576 3578 3580 3582 -3581 0
c Encoding variable: aux518 with domain: int(0..4) (representing constraint (aux513 + aux515))
c Both direct and order encoding.
c Var 'aux518' order represents '0' with '3583'
c Var 'aux518' direct represents '0' with '3583'
c Var 'aux518' order represents '1' with '3584'
-3583 3584 0
c Var 'aux518' direct represents '1' with '3585'
3583 -3584 3585 0
-3585 3584 0
-3585 -3583 0
c Var 'aux518' order represents '2' with '3586'
-3584 3586 0
c Var 'aux518' direct represents '2' with '3587'
3584 -3586 3587 0
-3587 3586 0
-3587 -3584 0
c Var 'aux518' order represents '3' with '3588'
-3586 3588 0
c Var 'aux518' direct represents '3' with '3589'
3586 -3588 3589 0
-3589 3588 0
-3589 -3586 0
c Var 'aux518' direct represents '4' with '-3588'
3583 3585 3587 3589 -3588 0
c Encoding variable: aux519 with domain: int(0) (representing constraint (shift(1, -1) + lijk_00004_00001_00001))
c Var 'aux519' direct represents '0' with '3590'
3590 0
c Encoding variable: aux520 with domain: int(0) (representing constraint (lijk_00004_00001_00002 + lijk_00004_00001_00003))
c Var 'aux520' direct represents '0' with '3591'
3591 0
c Encoding variable: aux521 with domain: int(0) (representing constraint (aux519 + aux520))
c Var 'aux521' direct represents '0' with '3592'
3592 0
c Encoding variable: aux522 with domain: bool (representing constraint (aux521 + uijk_00004_00001_00001))
c Var 'aux522' direct represents '0' with '-3593'
c Var 'aux522' direct represents '1' with '3593'
c Var 'aux522' order represents '1' with '1'
c Var 'aux522' order represents '0' with '-3593'
c Encoding variable: aux523 with domain: int(0..2) (representing constraint (dijk_00004_00001_00003 + aux522))
c Both direct and order encoding.
c Var 'aux523' order represents '0' with '3594'
c Var 'aux523' direct represents '0' with '3594'
c Var 'aux523' order represents '1' with '3595'
-3594 3595 0
c Var 'aux523' direct represents '1' with '3596'
3594 -3595 3596 0
-3596 3595 0
-3596 -3594 0
c Var 'aux523' direct represents '2' with '-3595'
3594 3596 -3595 0
c Encoding variable: aux524 with domain: int(0..2) (representing constraint (dijk_00004_00001_00002 + rijk_00004_00001_00001))
c Both direct and order encoding.
c Var 'aux524' order represents '0' with '3597'
c Var 'aux524' direct represents '0' with '3597'
c Var 'aux524' order represents '1' with '3598'
-3597 3598 0
c Var 'aux524' direct represents '1' with '3599'
3597 -3598 3599 0
-3599 3598 0
-3599 -3597 0
c Var 'aux524' direct represents '2' with '-3598'
3597 3599 -3598 0
c Encoding variable: aux525 with domain: int(0..2) (representing constraint (dijk_00004_00001_00001 + rijk_00004_00001_00002))
c Both direct and order encoding.
c Var 'aux525' order represents '0' with '3600'
c Var 'aux525' direct represents '0' with '3600'
c Var 'aux525' order represents '1' with '3601'
-3600 3601 0
c Var 'aux525' direct represents '1' with '3602'
3600 -3601 3602 0
-3602 3601 0
-3602 -3600 0
c Var 'aux525' direct represents '2' with '-3601'
3600 3602 -3601 0
c Encoding variable: aux526 with domain: int(0..2) (representing constraint (rijk_00004_00001_00003 + uijk_00004_00001_00003))
c Both direct and order encoding.
c Var 'aux526' order represents '0' with '3603'
c Var 'aux526' direct represents '0' with '3603'
c Var 'aux526' order represents '1' with '3604'
-3603 3604 0
c Var 'aux526' direct represents '1' with '3605'
3603 -3604 3605 0
-3605 3604 0
-3605 -3603 0
c Var 'aux526' direct represents '2' with '-3604'
3603 3605 -3604 0
c Encoding variable: aux527 with domain: int(0..3) (representing constraint (uijk_00004_00001_00002 + aux526))
c Both direct and order encoding.
c Var 'aux527' order represents '0' with '3606'
c Var 'aux527' direct represents '0' with '3606'
c Var 'aux527' order represents '1' with '3607'
-3606 3607 0
c Var 'aux527' direct represents '1' with '3608'
3606 -3607 3608 0
-3608 3607 0
-3608 -3606 0
c Var 'aux527' order represents '2' with '3609'
-3607 3609 0
c Var 'aux527' direct represents '2' with '3610'
3607 -3609 3610 0
-3610 3609 0
-3610 -3607 0
c Var 'aux527' direct represents '3' with '-3609'
3606 3608 3610 -3609 0
c Encoding variable: aux528 with domain: int(0..4) (representing constraint (aux524 + aux523))
c Both direct and order encoding.
c Var 'aux528' order represents '0' with '3611'
c Var 'aux528' direct represents '0' with '3611'
c Var 'aux528' order represents '1' with '3612'
-3611 3612 0
c Var 'aux528' direct represents '1' with '3613'
3611 -3612 3613 0
-3613 3612 0
-3613 -3611 0
c Var 'aux528' order represents '2' with '3614'
-3612 3614 0
c Var 'aux528' direct represents '2' with '3615'
3612 -3614 3615 0
-3615 3614 0
-3615 -3612 0
c Var 'aux528' order represents '3' with '3616'
-3614 3616 0
c Var 'aux528' direct represents '3' with '3617'
3614 -3616 3617 0
-3617 3616 0
-3617 -3614 0
c Var 'aux528' direct represents '4' with '-3616'
3611 3613 3615 3617 -3616 0
c Encoding variable: aux529 with domain: int(0..5) (representing constraint (aux525 + aux527))
c Both direct and order encoding.
c Var 'aux529' order represents '0' with '3618'
c Var 'aux529' direct represents '0' with '3618'
c Var 'aux529' order represents '1' with '3619'
-3618 3619 0
c Var 'aux529' direct represents '1' with '3620'
3618 -3619 3620 0
-3620 3619 0
-3620 -3618 0
c Var 'aux529' order represents '2' with '3621'
-3619 3621 0
c Var 'aux529' direct represents '2' with '3622'
3619 -3621 3622 0
-3622 3621 0
-3622 -3619 0
c Var 'aux529' order represents '3' with '3623'
-3621 3623 0
c Var 'aux529' direct represents '3' with '3624'
3621 -3623 3624 0
-3624 3623 0
-3624 -3621 0
c Var 'aux529' order represents '4' with '3625'
-3623 3625 0
c Var 'aux529' direct represents '4' with '3626'
3623 -3625 3626 0
-3626 3625 0
-3626 -3623 0
c Var 'aux529' direct represents '5' with '-3625'
3618 3620 3622 3624 3626 -3625 0
c Encoding variable: aux530 with domain: int(0) (representing constraint (shift(1, -1) + lijk_00005_00001_00001))
c Var 'aux530' direct represents '0' with '3627'
3627 0
c Encoding variable: aux531 with domain: int(0) (representing constraint (lijk_00005_00001_00002 + lijk_00005_00001_00003))
c Var 'aux531' direct represents '0' with '3628'
3628 0
c Encoding variable: aux532 with domain: int(0) (representing constraint (aux530 + aux531))
c Var 'aux532' direct represents '0' with '3629'
3629 0
c Encoding variable: aux533 with domain: bool (representing constraint (aux532 + rijk_00005_00001_00002))
c Var 'aux533' direct represents '0' with '-3630'
c Var 'aux533' direct represents '1' with '3630'
c Var 'aux533' order represents '1' with '1'
c Var 'aux533' order represents '0' with '-3630'
c Encoding variable: aux534 with domain: int(0..2) (representing constraint (dijk_00005_00001_00002 + aux533))
c Both direct and order encoding.
c Var 'aux534' order represents '0' with '3631'
c Var 'aux534' direct represents '0' with '3631'
c Var 'aux534' order represents '1' with '3632'
-3631 3632 0
c Var 'aux534' direct represents '1' with '3633'
3631 -3632 3633 0
-3633 3632 0
-3633 -3631 0
c Var 'aux534' direct represents '2' with '-3632'
3631 3633 -3632 0
c Encoding variable: aux535 with domain: int(0..2) (representing constraint (dijk_00005_00001_00001 + dijk_00005_00001_00003))
c Both direct and order encoding.
c Var 'aux535' order represents '0' with '3634'
c Var 'aux535' direct represents '0' with '3634'
c Var 'aux535' order represents '1' with '3635'
-3634 3635 0
c Var 'aux535' direct represents '1' with '3636'
3634 -3635 3636 0
-3636 3635 0
-3636 -3634 0
c Var 'aux535' direct represents '2' with '-3635'
3634 3636 -3635 0
c Encoding variable: aux536 with domain: int(0..2) (representing constraint (uijk_00005_00001_00003 + rijk_00005_00001_00001))
c Both direct and order encoding.
c Var 'aux536' order represents '0' with '3637'
c Var 'aux536' direct represents '0' with '3637'
c Var 'aux536' order represents '1' with '3638'
-3637 3638 0
c Var 'aux536' direct represents '1' with '3639'
3637 -3638 3639 0
-3639 3638 0
-3639 -3637 0
c Var 'aux536' direct represents '2' with '-3638'
3637 3639 -3638 0
c Encoding variable: aux537 with domain: int(0..2) (representing constraint (rijk_00005_00001_00003 + uijk_00005_00001_00002))
c Both direct and order encoding.
c Var 'aux537' order represents '0' with '3640'
c Var 'aux537' direct represents '0' with '3640'
c Var 'aux537' order represents '1' with '3641'
-3640 3641 0
c Var 'aux537' direct represents '1' with '3642'
3640 -3641 3642 0
-3642 3641 0
-3642 -3640 0
c Var 'aux537' direct represents '2' with '-3641'
3640 3642 -3641 0
c Encoding variable: aux538 with domain: int(0..3) (representing constraint (uijk_00005_00001_00001 + aux537))
c Both direct and order encoding.
c Var 'aux538' order represents '0' with '3643'
c Var 'aux538' direct represents '0' with '3643'
c Var 'aux538' order represents '1' with '3644'
-3643 3644 0
c Var 'aux538' direct represents '1' with '3645'
3643 -3644 3645 0
-3645 3644 0
-3645 -3643 0
c Var 'aux538' order represents '2' with '3646'
-3644 3646 0
c Var 'aux538' direct represents '2' with '3647'
3644 -3646 3647 0
-3647 3646 0
-3647 -3644 0
c Var 'aux538' direct represents '3' with '-3646'
3643 3645 3647 -3646 0
c Encoding variable: aux539 with domain: int(0..4) (representing constraint (aux535 + aux534))
c Both direct and order encoding.
c Var 'aux539' order represents '0' with '3648'
c Var 'aux539' direct represents '0' with '3648'
c Var 'aux539' order represents '1' with '3649'
-3648 3649 0
c Var 'aux539' direct represents '1' with '3650'
3648 -3649 3650 0
-3650 3649 0
-3650 -3648 0
c Var 'aux539' order represents '2' with '3651'
-3649 3651 0
c Var 'aux539' direct represents '2' with '3652'
3649 -3651 3652 0
-3652 3651 0
-3652 -3649 0
c Var 'aux539' order represents '3' with '3653'
-3651 3653 0
c Var 'aux539' direct represents '3' with '3654'
3651 -3653 3654 0
-3654 3653 0
-3654 -3651 0
c Var 'aux539' direct represents '4' with '-3653'
3648 3650 3652 3654 -3653 0
c Encoding variable: aux540 with domain: int(0..5) (representing constraint (aux536 + aux538))
c Both direct and order encoding.
c Var 'aux540' order represents '0' with '3655'
c Var 'aux540' direct represents '0' with '3655'
c Var 'aux540' order represents '1' with '3656'
-3655 3656 0
c Var 'aux540' direct represents '1' with '3657'
3655 -3656 3657 0
-3657 3656 0
-3657 -3655 0
c Var 'aux540' order represents '2' with '3658'
-3656 3658 0
c Var 'aux540' direct represents '2' with '3659'
3656 -3658 3659 0
-3659 3658 0
-3659 -3656 0
c Var 'aux540' order represents '3' with '3660'
-3658 3660 0
c Var 'aux540' direct represents '3' with '3661'
3658 -3660 3661 0
-3661 3660 0
-3661 -3658 0
c Var 'aux540' order represents '4' with '3662'
-3660 3662 0
c Var 'aux540' direct represents '4' with '3663'
3660 -3662 3663 0
-3663 3662 0
-3663 -3660 0
c Var 'aux540' direct represents '5' with '-3662'
3655 3657 3659 3661 3663 -3662 0
c Encoding variable: aux541 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00006_00001_00003))
c Var 'aux541' direct represents '0' with '3664'
3664 0
c Encoding variable: aux542 with domain: int(0) (representing constraint (lijk_00006_00001_00001 + lijk_00006_00001_00002))
c Var 'aux542' direct represents '0' with '3665'
3665 0
c Encoding variable: aux543 with domain: int(0) (representing constraint (lijk_00006_00001_00003 + aux541))
c Var 'aux543' direct represents '0' with '3666'
3666 0
c Encoding variable: aux544 with domain: int(0) (representing constraint (aux542 + aux543))
c Var 'aux544' direct represents '0' with '3667'
3667 0
c Encoding variable: aux545 with domain: bool (representing constraint (aux544 + rijk_00006_00001_00001))
c Var 'aux545' direct represents '0' with '-3668'
c Var 'aux545' direct represents '1' with '3668'
c Var 'aux545' order represents '1' with '1'
c Var 'aux545' order represents '0' with '-3668'
c Encoding variable: aux546 with domain: int(0..2) (representing constraint (uijk_00006_00001_00002 + aux545))
c Both direct and order encoding.
c Var 'aux546' order represents '0' with '3669'
c Var 'aux546' direct represents '0' with '3669'
c Var 'aux546' order represents '1' with '3670'
-3669 3670 0
c Var 'aux546' direct represents '1' with '3671'
3669 -3670 3671 0
-3671 3670 0
-3671 -3669 0
c Var 'aux546' direct represents '2' with '-3670'
3669 3671 -3670 0
c Encoding variable: aux547 with domain: int(0..2) (representing constraint (uijk_00006_00001_00003 + rijk_00006_00001_00003))
c Both direct and order encoding.
c Var 'aux547' order represents '0' with '3672'
c Var 'aux547' direct represents '0' with '3672'
c Var 'aux547' order represents '1' with '3673'
-3672 3673 0
c Var 'aux547' direct represents '1' with '3674'
3672 -3673 3674 0
-3674 3673 0
-3674 -3672 0
c Var 'aux547' direct represents '2' with '-3673'
3672 3674 -3673 0
c Encoding variable: aux548 with domain: int(0..2) (representing constraint (dijk_00006_00001_00002 + dijk_00006_00001_00001))
c Both direct and order encoding.
c Var 'aux548' order represents '0' with '3675'
c Var 'aux548' direct represents '0' with '3675'
c Var 'aux548' order represents '1' with '3676'
-3675 3676 0
c Var 'aux548' direct represents '1' with '3677'
3675 -3676 3677 0
-3677 3676 0
-3677 -3675 0
c Var 'aux548' direct represents '2' with '-3676'
3675 3677 -3676 0
c Encoding variable: aux549 with domain: int(0..2) (representing constraint (uijk_00006_00001_00001 + rijk_00006_00001_00002))
c Both direct and order encoding.
c Var 'aux549' order represents '0' with '3678'
c Var 'aux549' direct represents '0' with '3678'
c Var 'aux549' order represents '1' with '3679'
-3678 3679 0
c Var 'aux549' direct represents '1' with '3680'
3678 -3679 3680 0
-3680 3679 0
-3680 -3678 0
c Var 'aux549' direct represents '2' with '-3679'
3678 3680 -3679 0
c Encoding variable: aux550 with domain: int(0..4) (representing constraint (aux547 + aux549))
c Both direct and order encoding.
c Var 'aux550' order represents '0' with '3681'
c Var 'aux550' direct represents '0' with '3681'
c Var 'aux550' order represents '1' with '3682'
-3681 3682 0
c Var 'aux550' direct represents '1' with '3683'
3681 -3682 3683 0
-3683 3682 0
-3683 -3681 0
c Var 'aux550' order represents '2' with '3684'
-3682 3684 0
c Var 'aux550' direct represents '2' with '3685'
3682 -3684 3685 0
-3685 3684 0
-3685 -3682 0
c Var 'aux550' order represents '3' with '3686'
-3684 3686 0
c Var 'aux550' direct represents '3' with '3687'
3684 -3686 3687 0
-3687 3686 0
-3687 -3684 0
c Var 'aux550' direct represents '4' with '-3686'
3681 3683 3685 3687 -3686 0
c Encoding variable: aux551 with domain: int(0..4) (representing constraint (aux546 + aux548))
c Both direct and order encoding.
c Var 'aux551' order represents '0' with '3688'
c Var 'aux551' direct represents '0' with '3688'
c Var 'aux551' order represents '1' with '3689'
-3688 3689 0
c Var 'aux551' direct represents '1' with '3690'
3688 -3689 3690 0
-3690 3689 0
-3690 -3688 0
c Var 'aux551' order represents '2' with '3691'
-3689 3691 0
c Var 'aux551' direct represents '2' with '3692'
3689 -3691 3692 0
-3692 3691 0
-3692 -3689 0
c Var 'aux551' order represents '3' with '3693'
-3691 3693 0
c Var 'aux551' direct represents '3' with '3694'
3691 -3693 3694 0
-3694 3693 0
-3694 -3691 0
c Var 'aux551' direct represents '4' with '-3693'
3688 3690 3692 3694 -3693 0
c Encoding variable: aux552 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00007_00001_00003))
c Var 'aux552' direct represents '0' with '3695'
3695 0
c Encoding variable: aux553 with domain: int(0) (representing constraint (lijk_00007_00001_00001 + lijk_00007_00001_00002))
c Var 'aux553' direct represents '0' with '3696'
3696 0
c Encoding variable: aux554 with domain: int(0) (representing constraint (lijk_00007_00001_00003 + aux553))
c Var 'aux554' direct represents '0' with '3697'
3697 0
c Encoding variable: aux555 with domain: int(0) (representing constraint (dijk_00007_00001_00002 + aux554))
c Var 'aux555' direct represents '0' with '3698'
3698 0
c Encoding variable: aux556 with domain: int(0) (representing constraint (aux552 + aux555))
c Var 'aux556' direct represents '0' with '3699'
3699 0
c Encoding variable: aux557 with domain: bool (representing constraint (aux556 + rijk_00007_00001_00003))
c Var 'aux557' direct represents '0' with '-3700'
c Var 'aux557' direct represents '1' with '3700'
c Var 'aux557' order represents '1' with '1'
c Var 'aux557' order represents '0' with '-3700'
c Encoding variable: aux558 with domain: int(0..2) (representing constraint (uijk_00007_00001_00002 + aux557))
c Both direct and order encoding.
c Var 'aux558' order represents '0' with '3701'
c Var 'aux558' direct represents '0' with '3701'
c Var 'aux558' order represents '1' with '3702'
-3701 3702 0
c Var 'aux558' direct represents '1' with '3703'
3701 -3702 3703 0
-3703 3702 0
-3703 -3701 0
c Var 'aux558' direct represents '2' with '-3702'
3701 3703 -3702 0
c Encoding variable: aux559 with domain: int(0..2) (representing constraint (uijk_00007_00001_00003 + uijk_00007_00001_00001))
c Both direct and order encoding.
c Var 'aux559' order represents '0' with '3704'
c Var 'aux559' direct represents '0' with '3704'
c Var 'aux559' order represents '1' with '3705'
-3704 3705 0
c Var 'aux559' direct represents '1' with '3706'
3704 -3705 3706 0
-3706 3705 0
-3706 -3704 0
c Var 'aux559' direct represents '2' with '-3705'
3704 3706 -3705 0
c Encoding variable: aux560 with domain: int(0..2) (representing constraint (rijk_00007_00001_00001 + dijk_00007_00001_00001))
c Both direct and order encoding.
c Var 'aux560' order represents '0' with '3707'
c Var 'aux560' direct represents '0' with '3707'
c Var 'aux560' order represents '1' with '3708'
-3707 3708 0
c Var 'aux560' direct represents '1' with '3709'
3707 -3708 3709 0
-3709 3708 0
-3709 -3707 0
c Var 'aux560' direct represents '2' with '-3708'
3707 3709 -3708 0
c Encoding variable: aux561 with domain: int(0..3) (representing constraint (rijk_00007_00001_00002 + aux560))
c Both direct and order encoding.
c Var 'aux561' order represents '0' with '3710'
c Var 'aux561' direct represents '0' with '3710'
c Var 'aux561' order represents '1' with '3711'
-3710 3711 0
c Var 'aux561' direct represents '1' with '3712'
3710 -3711 3712 0
-3712 3711 0
-3712 -3710 0
c Var 'aux561' order represents '2' with '3713'
-3711 3713 0
c Var 'aux561' direct represents '2' with '3714'
3711 -3713 3714 0
-3714 3713 0
-3714 -3711 0
c Var 'aux561' direct represents '3' with '-3713'
3710 3712 3714 -3713 0
c Encoding variable: aux562 with domain: int(0..4) (representing constraint (aux558 + aux559))
c Both direct and order encoding.
c Var 'aux562' order represents '0' with '3715'
c Var 'aux562' direct represents '0' with '3715'
c Var 'aux562' order represents '1' with '3716'
-3715 3716 0
c Var 'aux562' direct represents '1' with '3717'
3715 -3716 3717 0
-3717 3716 0
-3717 -3715 0
c Var 'aux562' order represents '2' with '3718'
-3716 3718 0
c Var 'aux562' direct represents '2' with '3719'
3716 -3718 3719 0
-3719 3718 0
-3719 -3716 0
c Var 'aux562' order represents '3' with '3720'
-3718 3720 0
c Var 'aux562' direct represents '3' with '3721'
3718 -3720 3721 0
-3721 3720 0
-3721 -3718 0
c Var 'aux562' direct represents '4' with '-3720'
3715 3717 3719 3721 -3720 0
c Encoding variable: aux563 with domain: int(0) (representing constraint (dijk_00008_00001_00001 + dijk_00008_00001_00002))
c Var 'aux563' direct represents '0' with '3722'
3722 0
c Encoding variable: aux564 with domain: int(0) (representing constraint (lijk_00008_00001_00001 + lijk_00008_00001_00002))
c Var 'aux564' direct represents '0' with '3723'
3723 0
c Encoding variable: aux565 with domain: int(0) (representing constraint (lijk_00008_00001_00003 + aux564))
c Var 'aux565' direct represents '0' with '3724'
3724 0
c Encoding variable: aux566 with domain: int(0) (representing constraint (dijk_00008_00001_00003 + aux565))
c Var 'aux566' direct represents '0' with '3725'
3725 0
c Encoding variable: aux567 with domain: int(0) (representing constraint (aux563 + aux566))
c Var 'aux567' direct represents '0' with '3726'
3726 0
c Encoding variable: aux568 with domain: int(0) (representing constraint (shift(1, -1) + aux567))
c Var 'aux568' direct represents '0' with '3727'
3727 0
c Encoding variable: aux569 with domain: bool (representing constraint (aux568 + rijk_00008_00001_00001))
c Var 'aux569' direct represents '0' with '-3728'
c Var 'aux569' direct represents '1' with '3728'
c Var 'aux569' order represents '1' with '1'
c Var 'aux569' order represents '0' with '-3728'
c Encoding variable: aux570 with domain: int(0..2) (representing constraint (uijk_00008_00001_00001 + aux569))
c Both direct and order encoding.
c Var 'aux570' order represents '0' with '3729'
c Var 'aux570' direct represents '0' with '3729'
c Var 'aux570' order represents '1' with '3730'
-3729 3730 0
c Var 'aux570' direct represents '1' with '3731'
3729 -3730 3731 0
-3731 3730 0
-3731 -3729 0
c Var 'aux570' direct represents '2' with '-3730'
3729 3731 -3730 0
c Encoding variable: aux571 with domain: int(0..2) (representing constraint (uijk_00008_00001_00002 + rijk_00008_00001_00002))
c Both direct and order encoding.
c Var 'aux571' order represents '0' with '3732'
c Var 'aux571' direct represents '0' with '3732'
c Var 'aux571' order represents '1' with '3733'
-3732 3733 0
c Var 'aux571' direct represents '1' with '3734'
3732 -3733 3734 0
-3734 3733 0
-3734 -3732 0
c Var 'aux571' direct represents '2' with '-3733'
3732 3734 -3733 0
c Encoding variable: aux572 with domain: int(0..2) (representing constraint (uijk_00008_00001_00003 + rijk_00008_00001_00003))
c Both direct and order encoding.
c Var 'aux572' order represents '0' with '3735'
c Var 'aux572' direct represents '0' with '3735'
c Var 'aux572' order represents '1' with '3736'
-3735 3736 0
c Var 'aux572' direct represents '1' with '3737'
3735 -3736 3737 0
-3737 3736 0
-3737 -3735 0
c Var 'aux572' direct represents '2' with '-3736'
3735 3737 -3736 0
c Encoding variable: aux573 with domain: int(0..4) (representing constraint (aux570 + aux572))
c Both direct and order encoding.
c Var 'aux573' order represents '0' with '3738'
c Var 'aux573' direct represents '0' with '3738'
c Var 'aux573' order represents '1' with '3739'
-3738 3739 0
c Var 'aux573' direct represents '1' with '3740'
3738 -3739 3740 0
-3740 3739 0
-3740 -3738 0
c Var 'aux573' order represents '2' with '3741'
-3739 3741 0
c Var 'aux573' direct represents '2' with '3742'
3739 -3741 3742 0
-3742 3741 0
-3742 -3739 0
c Var 'aux573' order represents '3' with '3743'
-3741 3743 0
c Var 'aux573' direct represents '3' with '3744'
3741 -3743 3744 0
-3744 3743 0
-3744 -3741 0
c Var 'aux573' direct represents '4' with '-3743'
3738 3740 3742 3744 -3743 0
c Encoding variable: aux574 with domain: int(0) (representing constraint (uijk_00001_00002_00001 + uijk_00001_00002_00002))
c Var 'aux574' direct represents '0' with '3745'
3745 0
c Encoding variable: aux575 with domain: int(0) (representing constraint (lijk_00001_00002_00002 + lijk_00001_00002_00003))
c Var 'aux575' direct represents '0' with '3746'
3746 0
c Encoding variable: aux576 with domain: int(0) (representing constraint (uijk_00001_00002_00003 + aux574))
c Var 'aux576' direct represents '0' with '3747'
3747 0
c Encoding variable: aux577 with domain: int(0) (representing constraint (aux575 + aux576))
c Var 'aux577' direct represents '0' with '3748'
3748 0
c Encoding variable: aux578 with domain: int(0) (representing constraint (shift(1, -1) + aux577))
c Var 'aux578' direct represents '0' with '3749'
3749 0
c Encoding variable: aux579 with domain: bool (representing constraint (aux578 + lijk_00001_00002_00001))
c Var 'aux579' direct represents '0' with '-3750'
c Var 'aux579' direct represents '1' with '3750'
c Var 'aux579' order represents '1' with '1'
c Var 'aux579' order represents '0' with '-3750'
c Encoding variable: aux580 with domain: int(0..2) (representing constraint (dijk_00001_00002_00001 + dijk_00001_00002_00003))
c Both direct and order encoding.
c Var 'aux580' order represents '0' with '3751'
c Var 'aux580' direct represents '0' with '3751'
c Var 'aux580' order represents '1' with '3752'
-3751 3752 0
c Var 'aux580' direct represents '1' with '3753'
3751 -3752 3753 0
-3753 3752 0
-3753 -3751 0
c Var 'aux580' direct represents '2' with '-3752'
3751 3753 -3752 0
c Encoding variable: aux581 with domain: int(0..2) (representing constraint (rijk_00001_00002_00001 + aux579))
c Both direct and order encoding.
c Var 'aux581' order represents '0' with '3754'
c Var 'aux581' direct represents '0' with '3754'
c Var 'aux581' order represents '1' with '3755'
-3754 3755 0
c Var 'aux581' direct represents '1' with '3756'
3754 -3755 3756 0
-3756 3755 0
-3756 -3754 0
c Var 'aux581' direct represents '2' with '-3755'
3754 3756 -3755 0
c Encoding variable: aux582 with domain: int(0..2) (representing constraint (rijk_00001_00002_00002 + rijk_00001_00002_00003))
c Both direct and order encoding.
c Var 'aux582' order represents '0' with '3757'
c Var 'aux582' direct represents '0' with '3757'
c Var 'aux582' order represents '1' with '3758'
-3757 3758 0
c Var 'aux582' direct represents '1' with '3759'
3757 -3758 3759 0
-3759 3758 0
-3759 -3757 0
c Var 'aux582' direct represents '2' with '-3758'
3757 3759 -3758 0
c Encoding variable: aux583 with domain: int(0..3) (representing constraint (dijk_00001_00002_00002 + aux582))
c Both direct and order encoding.
c Var 'aux583' order represents '0' with '3760'
c Var 'aux583' direct represents '0' with '3760'
c Var 'aux583' order represents '1' with '3761'
-3760 3761 0
c Var 'aux583' direct represents '1' with '3762'
3760 -3761 3762 0
-3762 3761 0
-3762 -3760 0
c Var 'aux583' order represents '2' with '3763'
-3761 3763 0
c Var 'aux583' direct represents '2' with '3764'
3761 -3763 3764 0
-3764 3763 0
-3764 -3761 0
c Var 'aux583' direct represents '3' with '-3763'
3760 3762 3764 -3763 0
c Encoding variable: aux584 with domain: int(0..4) (representing constraint (aux581 + aux580))
c Both direct and order encoding.
c Var 'aux584' order represents '0' with '3765'
c Var 'aux584' direct represents '0' with '3765'
c Var 'aux584' order represents '1' with '3766'
-3765 3766 0
c Var 'aux584' direct represents '1' with '3767'
3765 -3766 3767 0
-3767 3766 0
-3767 -3765 0
c Var 'aux584' order represents '2' with '3768'
-3766 3768 0
c Var 'aux584' direct represents '2' with '3769'
3766 -3768 3769 0
-3769 3768 0
-3769 -3766 0
c Var 'aux584' order represents '3' with '3770'
-3768 3770 0
c Var 'aux584' direct represents '3' with '3771'
3768 -3770 3771 0
-3771 3770 0
-3771 -3768 0
c Var 'aux584' direct represents '4' with '-3770'
3765 3767 3769 3771 -3770 0
c Encoding variable: aux585 with domain: int(0) (representing constraint (lijk_00002_00002_00002 + shift(1, -1)))
c Var 'aux585' direct represents '0' with '3772'
3772 0
c Encoding variable: aux586 with domain: int(0) (representing constraint (lijk_00002_00002_00003 + uijk_00002_00002_00002))
c Var 'aux586' direct represents '0' with '3773'
3773 0
c Encoding variable: aux587 with domain: int(0) (representing constraint (aux585 + uijk_00002_00002_00003))
c Var 'aux587' direct represents '0' with '3774'
3774 0
c Encoding variable: aux588 with domain: int(0) (representing constraint (aux586 + aux587))
c Var 'aux588' direct represents '0' with '3775'
3775 0
c Encoding variable: aux589 with domain: bool (representing constraint (aux588 + rijk_00002_00002_00001))
c Var 'aux589' direct represents '0' with '-3776'
c Var 'aux589' direct represents '1' with '3776'
c Var 'aux589' order represents '1' with '1'
c Var 'aux589' order represents '0' with '-3776'
c Encoding variable: aux590 with domain: int(0..2) (representing constraint (rijk_00002_00002_00003 + aux589))
c Both direct and order encoding.
c Var 'aux590' order represents '0' with '3777'
c Var 'aux590' direct represents '0' with '3777'
c Var 'aux590' order represents '1' with '3778'
-3777 3778 0
c Var 'aux590' direct represents '1' with '3779'
3777 -3778 3779 0
-3779 3778 0
-3779 -3777 0
c Var 'aux590' direct represents '2' with '-3778'
3777 3779 -3778 0
c Encoding variable: aux591 with domain: int(0..2) (representing constraint (dijk_00002_00002_00001 + rijk_00002_00002_00002))
c Both direct and order encoding.
c Var 'aux591' order represents '0' with '3780'
c Var 'aux591' direct represents '0' with '3780'
c Var 'aux591' order represents '1' with '3781'
-3780 3781 0
c Var 'aux591' direct represents '1' with '3782'
3780 -3781 3782 0
-3782 3781 0
-3782 -3780 0
c Var 'aux591' direct represents '2' with '-3781'
3780 3782 -3781 0
c Encoding variable: aux592 with domain: int(0..2) (representing constraint (uijk_00002_00002_00001 + lijk_00002_00002_00001))
c Both direct and order encoding.
c Var 'aux592' order represents '0' with '3783'
c Var 'aux592' direct represents '0' with '3783'
c Var 'aux592' order represents '1' with '3784'
-3783 3784 0
c Var 'aux592' direct represents '1' with '3785'
3783 -3784 3785 0
-3785 3784 0
-3785 -3783 0
c Var 'aux592' direct represents '2' with '-3784'
3783 3785 -3784 0
c Encoding variable: aux593 with domain: int(0..2) (representing constraint (dijk_00002_00002_00003 + dijk_00002_00002_00002))
c Both direct and order encoding.
c Var 'aux593' order represents '0' with '3786'
c Var 'aux593' direct represents '0' with '3786'
c Var 'aux593' order represents '1' with '3787'
-3786 3787 0
c Var 'aux593' direct represents '1' with '3788'
3786 -3787 3788 0
-3788 3787 0
-3788 -3786 0
c Var 'aux593' direct represents '2' with '-3787'
3786 3788 -3787 0
c Encoding variable: aux594 with domain: int(0..4) (representing constraint (aux591 + aux593))
c Both direct and order encoding.
c Var 'aux594' order represents '0' with '3789'
c Var 'aux594' direct represents '0' with '3789'
c Var 'aux594' order represents '1' with '3790'
-3789 3790 0
c Var 'aux594' direct represents '1' with '3791'
3789 -3790 3791 0
-3791 3790 0
-3791 -3789 0
c Var 'aux594' order represents '2' with '3792'
-3790 3792 0
c Var 'aux594' direct represents '2' with '3793'
3790 -3792 3793 0
-3793 3792 0
-3793 -3790 0
c Var 'aux594' order represents '3' with '3794'
-3792 3794 0
c Var 'aux594' direct represents '3' with '3795'
3792 -3794 3795 0
-3795 3794 0
-3795 -3792 0
c Var 'aux594' direct represents '4' with '-3794'
3789 3791 3793 3795 -3794 0
c Encoding variable: aux595 with domain: int(0..4) (representing constraint (aux590 + aux592))
c Both direct and order encoding.
c Var 'aux595' order represents '0' with '3796'
c Var 'aux595' direct represents '0' with '3796'
c Var 'aux595' order represents '1' with '3797'
-3796 3797 0
c Var 'aux595' direct represents '1' with '3798'
3796 -3797 3798 0
-3798 3797 0
-3798 -3796 0
c Var 'aux595' order represents '2' with '3799'
-3797 3799 0
c Var 'aux595' direct represents '2' with '3800'
3797 -3799 3800 0
-3800 3799 0
-3800 -3797 0
c Var 'aux595' order represents '3' with '3801'
-3799 3801 0
c Var 'aux595' direct represents '3' with '3802'
3799 -3801 3802 0
-3802 3801 0
-3802 -3799 0
c Var 'aux595' direct represents '4' with '-3801'
3796 3798 3800 3802 -3801 0
c Encoding variable: aux596 with domain: int(0) (representing constraint (lijk_00003_00002_00002 + uijk_00003_00002_00003))
c Var 'aux596' direct represents '0' with '3803'
3803 0
c Encoding variable: aux597 with domain: int(0) (representing constraint (lijk_00003_00002_00003 + shift(1, -1)))
c Var 'aux597' direct represents '0' with '3804'
3804 0
c Encoding variable: aux598 with domain: int(0) (representing constraint (aux596 + aux597))
c Var 'aux598' direct represents '0' with '3805'
3805 0
c Encoding variable: aux599 with domain: bool (representing constraint (aux598 + lijk_00003_00002_00001))
c Var 'aux599' direct represents '0' with '-3806'
c Var 'aux599' direct represents '1' with '3806'
c Var 'aux599' order represents '1' with '1'
c Var 'aux599' order represents '0' with '-3806'
c Encoding variable: aux600 with domain: int(0..2) (representing constraint (uijk_00003_00002_00002 + aux599))
c Both direct and order encoding.
c Var 'aux600' order represents '0' with '3807'
c Var 'aux600' direct represents '0' with '3807'
c Var 'aux600' order represents '1' with '3808'
-3807 3808 0
c Var 'aux600' direct represents '1' with '3809'
3807 -3808 3809 0
-3809 3808 0
-3809 -3807 0
c Var 'aux600' direct represents '2' with '-3808'
3807 3809 -3808 0
c Encoding variable: aux601 with domain: int(0..2) (representing constraint (uijk_00003_00002_00001 + rijk_00003_00002_00002))
c Both direct and order encoding.
c Var 'aux601' order represents '0' with '3810'
c Var 'aux601' direct represents '0' with '3810'
c Var 'aux601' order represents '1' with '3811'
-3810 3811 0
c Var 'aux601' direct represents '1' with '3812'
3810 -3811 3812 0
-3812 3811 0
-3812 -3810 0
c Var 'aux601' direct represents '2' with '-3811'
3810 3812 -3811 0
c Encoding variable: aux602 with domain: int(0..2) (representing constraint (rijk_00003_00002_00001 + dijk_00003_00002_00003))
c Both direct and order encoding.
c Var 'aux602' order represents '0' with '3813'
c Var 'aux602' direct represents '0' with '3813'
c Var 'aux602' order represents '1' with '3814'
-3813 3814 0
c Var 'aux602' direct represents '1' with '3815'
3813 -3814 3815 0
-3815 3814 0
-3815 -3813 0
c Var 'aux602' direct represents '2' with '-3814'
3813 3815 -3814 0
c Encoding variable: aux603 with domain: int(0..2) (representing constraint (dijk_00003_00002_00002 + rijk_00003_00002_00003))
c Both direct and order encoding.
c Var 'aux603' order represents '0' with '3816'
c Var 'aux603' direct represents '0' with '3816'
c Var 'aux603' order represents '1' with '3817'
-3816 3817 0
c Var 'aux603' direct represents '1' with '3818'
3816 -3817 3818 0
-3818 3817 0
-3818 -3816 0
c Var 'aux603' direct represents '2' with '-3817'
3816 3818 -3817 0
c Encoding variable: aux604 with domain: int(0..3) (representing constraint (dijk_00003_00002_00001 + aux603))
c Both direct and order encoding.
c Var 'aux604' order represents '0' with '3819'
c Var 'aux604' direct represents '0' with '3819'
c Var 'aux604' order represents '1' with '3820'
-3819 3820 0
c Var 'aux604' direct represents '1' with '3821'
3819 -3820 3821 0
-3821 3820 0
-3821 -3819 0
c Var 'aux604' order represents '2' with '3822'
-3820 3822 0
c Var 'aux604' direct represents '2' with '3823'
3820 -3822 3823 0
-3823 3822 0
-3823 -3820 0
c Var 'aux604' direct represents '3' with '-3822'
3819 3821 3823 -3822 0
c Encoding variable: aux605 with domain: int(0..4) (representing constraint (aux601 + aux600))
c Both direct and order encoding.
c Var 'aux605' order represents '0' with '3824'
c Var 'aux605' direct represents '0' with '3824'
c Var 'aux605' order represents '1' with '3825'
-3824 3825 0
c Var 'aux605' direct represents '1' with '3826'
3824 -3825 3826 0
-3826 3825 0
-3826 -3824 0
c Var 'aux605' order represents '2' with '3827'
-3825 3827 0
c Var 'aux605' direct represents '2' with '3828'
3825 -3827 3828 0
-3828 3827 0
-3828 -3825 0
c Var 'aux605' order represents '3' with '3829'
-3827 3829 0
c Var 'aux605' direct represents '3' with '3830'
3827 -3829 3830 0
-3830 3829 0
-3830 -3827 0
c Var 'aux605' direct represents '4' with '-3829'
3824 3826 3828 3830 -3829 0
c Encoding variable: aux606 with domain: int(0..5) (representing constraint (aux602 + aux604))
c Both direct and order encoding.
c Var 'aux606' order represents '0' with '3831'
c Var 'aux606' direct represents '0' with '3831'
c Var 'aux606' order represents '1' with '3832'
-3831 3832 0
c Var 'aux606' direct represents '1' with '3833'
3831 -3832 3833 0
-3833 3832 0
-3833 -3831 0
c Var 'aux606' order represents '2' with '3834'
-3832 3834 0
c Var 'aux606' direct represents '2' with '3835'
3832 -3834 3835 0
-3835 3834 0
-3835 -3832 0
c Var 'aux606' order represents '3' with '3836'
-3834 3836 0
c Var 'aux606' direct represents '3' with '3837'
3834 -3836 3837 0
-3837 3836 0
-3837 -3834 0
c Var 'aux606' order represents '4' with '3838'
-3836 3838 0
c Var 'aux606' direct represents '4' with '3839'
3836 -3838 3839 0
-3839 3838 0
-3839 -3836 0
c Var 'aux606' direct represents '5' with '-3838'
3831 3833 3835 3837 3839 -3838 0
c Encoding variable: aux607 with domain: int(0) (representing constraint (lijk_00004_00002_00002 + lijk_00004_00002_00003))
c Var 'aux607' direct represents '0' with '3840'
3840 0
c Encoding variable: aux608 with domain: int(0) (representing constraint (shift(1, -1) + aux607))
c Var 'aux608' direct represents '0' with '3841'
3841 0
c Encoding variable: aux609 with domain: bool (representing constraint (aux608 + dijk_00004_00002_00002))
c Var 'aux609' direct represents '0' with '-3842'
c Var 'aux609' direct represents '1' with '3842'
c Var 'aux609' order represents '1' with '1'
c Var 'aux609' order represents '0' with '-3842'
c Encoding variable: aux610 with domain: int(0..2) (representing constraint (lijk_00004_00002_00001 + aux609))
c Both direct and order encoding.
c Var 'aux610' order represents '0' with '3843'
c Var 'aux610' direct represents '0' with '3843'
c Var 'aux610' order represents '1' with '3844'
-3843 3844 0
c Var 'aux610' direct represents '1' with '3845'
3843 -3844 3845 0
-3845 3844 0
-3845 -3843 0
c Var 'aux610' direct represents '2' with '-3844'
3843 3845 -3844 0
c Encoding variable: aux611 with domain: int(0..2) (representing constraint (uijk_00004_00002_00003 + rijk_00004_00002_00001))
c Both direct and order encoding.
c Var 'aux611' order represents '0' with '3846'
c Var 'aux611' direct represents '0' with '3846'
c Var 'aux611' order represents '1' with '3847'
-3846 3847 0
c Var 'aux611' direct represents '1' with '3848'
3846 -3847 3848 0
-3848 3847 0
-3848 -3846 0
c Var 'aux611' direct represents '2' with '-3847'
3846 3848 -3847 0
c Encoding variable: aux612 with domain: int(0..2) (representing constraint (uijk_00004_00002_00001 + uijk_00004_00002_00002))
c Both direct and order encoding.
c Var 'aux612' order represents '0' with '3849'
c Var 'aux612' direct represents '0' with '3849'
c Var 'aux612' order represents '1' with '3850'
-3849 3850 0
c Var 'aux612' direct represents '1' with '3851'
3849 -3850 3851 0
-3851 3850 0
-3851 -3849 0
c Var 'aux612' direct represents '2' with '-3850'
3849 3851 -3850 0
c Encoding variable: aux613 with domain: int(0..2) (representing constraint (rijk_00004_00002_00002 + dijk_00004_00002_00001))
c Both direct and order encoding.
c Var 'aux613' order represents '0' with '3852'
c Var 'aux613' direct represents '0' with '3852'
c Var 'aux613' order represents '1' with '3853'
-3852 3853 0
c Var 'aux613' direct represents '1' with '3854'
3852 -3853 3854 0
-3854 3853 0
-3854 -3852 0
c Var 'aux613' direct represents '2' with '-3853'
3852 3854 -3853 0
c Encoding variable: aux614 with domain: int(0..2) (representing constraint (dijk_00004_00002_00003 + rijk_00004_00002_00003))
c Both direct and order encoding.
c Var 'aux614' order represents '0' with '3855'
c Var 'aux614' direct represents '0' with '3855'
c Var 'aux614' order represents '1' with '3856'
-3855 3856 0
c Var 'aux614' direct represents '1' with '3857'
3855 -3856 3857 0
-3857 3856 0
-3857 -3855 0
c Var 'aux614' direct represents '2' with '-3856'
3855 3857 -3856 0
c Encoding variable: aux615 with domain: int(0..4) (representing constraint (aux610 + aux614))
c Both direct and order encoding.
c Var 'aux615' order represents '0' with '3858'
c Var 'aux615' direct represents '0' with '3858'
c Var 'aux615' order represents '1' with '3859'
-3858 3859 0
c Var 'aux615' direct represents '1' with '3860'
3858 -3859 3860 0
-3860 3859 0
-3860 -3858 0
c Var 'aux615' order represents '2' with '3861'
-3859 3861 0
c Var 'aux615' direct represents '2' with '3862'
3859 -3861 3862 0
-3862 3861 0
-3862 -3859 0
c Var 'aux615' order represents '3' with '3863'
-3861 3863 0
c Var 'aux615' direct represents '3' with '3864'
3861 -3863 3864 0
-3864 3863 0
-3864 -3861 0
c Var 'aux615' direct represents '4' with '-3863'
3858 3860 3862 3864 -3863 0
c Encoding variable: aux616 with domain: int(0..4) (representing constraint (aux611 + aux612))
c Both direct and order encoding.
c Var 'aux616' order represents '0' with '3865'
c Var 'aux616' direct represents '0' with '3865'
c Var 'aux616' order represents '1' with '3866'
-3865 3866 0
c Var 'aux616' direct represents '1' with '3867'
3865 -3866 3867 0
-3867 3866 0
-3867 -3865 0
c Var 'aux616' order represents '2' with '3868'
-3866 3868 0
c Var 'aux616' direct represents '2' with '3869'
3866 -3868 3869 0
-3869 3868 0
-3869 -3866 0
c Var 'aux616' order represents '3' with '3870'
-3868 3870 0
c Var 'aux616' direct represents '3' with '3871'
3868 -3870 3871 0
-3871 3870 0
-3871 -3868 0
c Var 'aux616' direct represents '4' with '-3870'
3865 3867 3869 3871 -3870 0
c Encoding variable: aux617 with domain: int(0..6) (representing constraint (aux613 + aux616))
c Both direct and order encoding.
c Var 'aux617' order represents '0' with '3872'
c Var 'aux617' direct represents '0' with '3872'
c Var 'aux617' order represents '1' with '3873'
-3872 3873 0
c Var 'aux617' direct represents '1' with '3874'
3872 -3873 3874 0
-3874 3873 0
-3874 -3872 0
c Var 'aux617' order represents '2' with '3875'
-3873 3875 0
c Var 'aux617' direct represents '2' with '3876'
3873 -3875 3876 0
-3876 3875 0
-3876 -3873 0
c Var 'aux617' order represents '3' with '3877'
-3875 3877 0
c Var 'aux617' direct represents '3' with '3878'
3875 -3877 3878 0
-3878 3877 0
-3878 -3875 0
c Var 'aux617' order represents '4' with '3879'
-3877 3879 0
c Var 'aux617' direct represents '4' with '3880'
3877 -3879 3880 0
-3880 3879 0
-3880 -3877 0
c Var 'aux617' order represents '5' with '3881'
-3879 3881 0
c Var 'aux617' direct represents '5' with '3882'
3879 -3881 3882 0
-3882 3881 0
-3882 -3879 0
c Var 'aux617' direct represents '6' with '-3881'
3872 3874 3876 3878 3880 3882 -3881 0
c Encoding variable: aux618 with domain: int(0) (representing constraint (lijk_00005_00002_00002 + shift(1, -1)))
c Var 'aux618' direct represents '0' with '3883'
3883 0
c Encoding variable: aux619 with domain: int(0) (representing constraint (lijk_00005_00002_00003 + aux618))
c Var 'aux619' direct represents '0' with '3884'
3884 0
c Encoding variable: aux620 with domain: bool (representing constraint (aux619 + dijk_00005_00002_00002))
c Var 'aux620' direct represents '0' with '-3885'
c Var 'aux620' direct represents '1' with '3885'
c Var 'aux620' order represents '1' with '1'
c Var 'aux620' order represents '0' with '-3885'
c Encoding variable: aux621 with domain: int(0..2) (representing constraint (uijk_00005_00002_00003 + aux620))
c Both direct and order encoding.
c Var 'aux621' order represents '0' with '3886'
c Var 'aux621' direct represents '0' with '3886'
c Var 'aux621' order represents '1' with '3887'
-3886 3887 0
c Var 'aux621' direct represents '1' with '3888'
3886 -3887 3888 0
-3888 3887 0
-3888 -3886 0
c Var 'aux621' direct represents '2' with '-3887'
3886 3888 -3887 0
c Encoding variable: aux622 with domain: int(0..2) (representing constraint (uijk_00005_00002_00002 + dijk_00005_00002_00003))
c Both direct and order encoding.
c Var 'aux622' order represents '0' with '3889'
c Var 'aux622' direct represents '0' with '3889'
c Var 'aux622' order represents '1' with '3890'
-3889 3890 0
c Var 'aux622' direct represents '1' with '3891'
3889 -3890 3891 0
-3891 3890 0
-3891 -3889 0
c Var 'aux622' direct represents '2' with '-3890'
3889 3891 -3890 0
c Encoding variable: aux623 with domain: int(0..2) (representing constraint (lijk_00005_00002_00001 + uijk_00005_00002_00001))
c Both direct and order encoding.
c Var 'aux623' order represents '0' with '3892'
c Var 'aux623' direct represents '0' with '3892'
c Var 'aux623' order represents '1' with '3893'
-3892 3893 0
c Var 'aux623' direct represents '1' with '3894'
3892 -3893 3894 0
-3894 3893 0
-3894 -3892 0
c Var 'aux623' direct represents '2' with '-3893'
3892 3894 -3893 0
c Encoding variable: aux624 with domain: int(0..2) (representing constraint (rijk_00005_00002_00001 + dijk_00005_00002_00001))
c Both direct and order encoding.
c Var 'aux624' order represents '0' with '3895'
c Var 'aux624' direct represents '0' with '3895'
c Var 'aux624' order represents '1' with '3896'
-3895 3896 0
c Var 'aux624' direct represents '1' with '3897'
3895 -3896 3897 0
-3897 3896 0
-3897 -3895 0
c Var 'aux624' direct represents '2' with '-3896'
3895 3897 -3896 0
c Encoding variable: aux625 with domain: int(0..2) (representing constraint (rijk_00005_00002_00003 + rijk_00005_00002_00002))
c Both direct and order encoding.
c Var 'aux625' order represents '0' with '3898'
c Var 'aux625' direct represents '0' with '3898'
c Var 'aux625' order represents '1' with '3899'
-3898 3899 0
c Var 'aux625' direct represents '1' with '3900'
3898 -3899 3900 0
-3900 3899 0
-3900 -3898 0
c Var 'aux625' direct represents '2' with '-3899'
3898 3900 -3899 0
c Encoding variable: aux626 with domain: int(0..4) (representing constraint (aux621 + aux625))
c Both direct and order encoding.
c Var 'aux626' order represents '0' with '3901'
c Var 'aux626' direct represents '0' with '3901'
c Var 'aux626' order represents '1' with '3902'
-3901 3902 0
c Var 'aux626' direct represents '1' with '3903'
3901 -3902 3903 0
-3903 3902 0
-3903 -3901 0
c Var 'aux626' order represents '2' with '3904'
-3902 3904 0
c Var 'aux626' direct represents '2' with '3905'
3902 -3904 3905 0
-3905 3904 0
-3905 -3902 0
c Var 'aux626' order represents '3' with '3906'
-3904 3906 0
c Var 'aux626' direct represents '3' with '3907'
3904 -3906 3907 0
-3907 3906 0
-3907 -3904 0
c Var 'aux626' direct represents '4' with '-3906'
3901 3903 3905 3907 -3906 0
c Encoding variable: aux627 with domain: int(0..4) (representing constraint (aux622 + aux623))
c Both direct and order encoding.
c Var 'aux627' order represents '0' with '3908'
c Var 'aux627' direct represents '0' with '3908'
c Var 'aux627' order represents '1' with '3909'
-3908 3909 0
c Var 'aux627' direct represents '1' with '3910'
3908 -3909 3910 0
-3910 3909 0
-3910 -3908 0
c Var 'aux627' order represents '2' with '3911'
-3909 3911 0
c Var 'aux627' direct represents '2' with '3912'
3909 -3911 3912 0
-3912 3911 0
-3912 -3909 0
c Var 'aux627' order represents '3' with '3913'
-3911 3913 0
c Var 'aux627' direct represents '3' with '3914'
3911 -3913 3914 0
-3914 3913 0
-3914 -3911 0
c Var 'aux627' direct represents '4' with '-3913'
3908 3910 3912 3914 -3913 0
c Encoding variable: aux628 with domain: int(0..6) (representing constraint (aux624 + aux627))
c Both direct and order encoding.
c Var 'aux628' order represents '0' with '3915'
c Var 'aux628' direct represents '0' with '3915'
c Var 'aux628' order represents '1' with '3916'
-3915 3916 0
c Var 'aux628' direct represents '1' with '3917'
3915 -3916 3917 0
-3917 3916 0
-3917 -3915 0
c Var 'aux628' order represents '2' with '3918'
-3916 3918 0
c Var 'aux628' direct represents '2' with '3919'
3916 -3918 3919 0
-3919 3918 0
-3919 -3916 0
c Var 'aux628' order represents '3' with '3920'
-3918 3920 0
c Var 'aux628' direct represents '3' with '3921'
3918 -3920 3921 0
-3921 3920 0
-3921 -3918 0
c Var 'aux628' order represents '4' with '3922'
-3920 3922 0
c Var 'aux628' direct represents '4' with '3923'
3920 -3922 3923 0
-3923 3922 0
-3923 -3920 0
c Var 'aux628' order represents '5' with '3924'
-3922 3924 0
c Var 'aux628' direct represents '5' with '3925'
3922 -3924 3925 0
-3925 3924 0
-3925 -3922 0
c Var 'aux628' direct represents '6' with '-3924'
3915 3917 3919 3921 3923 3925 -3924 0
c Encoding variable: aux629 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00006_00002_00003))
c Var 'aux629' direct represents '0' with '3926'
3926 0
c Encoding variable: aux630 with domain: int(0) (representing constraint (lijk_00006_00002_00002 + lijk_00006_00002_00003))
c Var 'aux630' direct represents '0' with '3927'
3927 0
c Encoding variable: aux631 with domain: int(0) (representing constraint (aux629 + aux630))
c Var 'aux631' direct represents '0' with '3928'
3928 0
c Encoding variable: aux632 with domain: bool (representing constraint (aux631 + rijk_00006_00002_00001))
c Var 'aux632' direct represents '0' with '-3929'
c Var 'aux632' direct represents '1' with '3929'
c Var 'aux632' order represents '1' with '1'
c Var 'aux632' order represents '0' with '-3929'
c Encoding variable: aux633 with domain: int(0..2) (representing constraint (dijk_00006_00002_00002 + aux632))
c Both direct and order encoding.
c Var 'aux633' order represents '0' with '3930'
c Var 'aux633' direct represents '0' with '3930'
c Var 'aux633' order represents '1' with '3931'
-3930 3931 0
c Var 'aux633' direct represents '1' with '3932'
3930 -3931 3932 0
-3932 3931 0
-3932 -3930 0
c Var 'aux633' direct represents '2' with '-3931'
3930 3932 -3931 0
c Encoding variable: aux634 with domain: int(0..2) (representing constraint (dijk_00006_00002_00001 + rijk_00006_00002_00002))
c Both direct and order encoding.
c Var 'aux634' order represents '0' with '3933'
c Var 'aux634' direct represents '0' with '3933'
c Var 'aux634' order represents '1' with '3934'
-3933 3934 0
c Var 'aux634' direct represents '1' with '3935'
3933 -3934 3935 0
-3935 3934 0
-3935 -3933 0
c Var 'aux634' direct represents '2' with '-3934'
3933 3935 -3934 0
c Encoding variable: aux635 with domain: int(0..2) (representing constraint (uijk_00006_00002_00003 + uijk_00006_00002_00002))
c Both direct and order encoding.
c Var 'aux635' order represents '0' with '3936'
c Var 'aux635' direct represents '0' with '3936'
c Var 'aux635' order represents '1' with '3937'
-3936 3937 0
c Var 'aux635' direct represents '1' with '3938'
3936 -3937 3938 0
-3938 3937 0
-3938 -3936 0
c Var 'aux635' direct represents '2' with '-3937'
3936 3938 -3937 0
c Encoding variable: aux636 with domain: int(0..2) (representing constraint (uijk_00006_00002_00001 + rijk_00006_00002_00003))
c Both direct and order encoding.
c Var 'aux636' order represents '0' with '3939'
c Var 'aux636' direct represents '0' with '3939'
c Var 'aux636' order represents '1' with '3940'
-3939 3940 0
c Var 'aux636' direct represents '1' with '3941'
3939 -3940 3941 0
-3941 3940 0
-3941 -3939 0
c Var 'aux636' direct represents '2' with '-3940'
3939 3941 -3940 0
c Encoding variable: aux637 with domain: int(0..3) (representing constraint (lijk_00006_00002_00001 + aux636))
c Both direct and order encoding.
c Var 'aux637' order represents '0' with '3942'
c Var 'aux637' direct represents '0' with '3942'
c Var 'aux637' order represents '1' with '3943'
-3942 3943 0
c Var 'aux637' direct represents '1' with '3944'
3942 -3943 3944 0
-3944 3943 0
-3944 -3942 0
c Var 'aux637' order represents '2' with '3945'
-3943 3945 0
c Var 'aux637' direct represents '2' with '3946'
3943 -3945 3946 0
-3946 3945 0
-3946 -3943 0
c Var 'aux637' direct represents '3' with '-3945'
3942 3944 3946 -3945 0
c Encoding variable: aux638 with domain: int(0..4) (representing constraint (aux634 + aux633))
c Both direct and order encoding.
c Var 'aux638' order represents '0' with '3947'
c Var 'aux638' direct represents '0' with '3947'
c Var 'aux638' order represents '1' with '3948'
-3947 3948 0
c Var 'aux638' direct represents '1' with '3949'
3947 -3948 3949 0
-3949 3948 0
-3949 -3947 0
c Var 'aux638' order represents '2' with '3950'
-3948 3950 0
c Var 'aux638' direct represents '2' with '3951'
3948 -3950 3951 0
-3951 3950 0
-3951 -3948 0
c Var 'aux638' order represents '3' with '3952'
-3950 3952 0
c Var 'aux638' direct represents '3' with '3953'
3950 -3952 3953 0
-3953 3952 0
-3953 -3950 0
c Var 'aux638' direct represents '4' with '-3952'
3947 3949 3951 3953 -3952 0
c Encoding variable: aux639 with domain: int(0..5) (representing constraint (aux635 + aux637))
c Both direct and order encoding.
c Var 'aux639' order represents '0' with '3954'
c Var 'aux639' direct represents '0' with '3954'
c Var 'aux639' order represents '1' with '3955'
-3954 3955 0
c Var 'aux639' direct represents '1' with '3956'
3954 -3955 3956 0
-3956 3955 0
-3956 -3954 0
c Var 'aux639' order represents '2' with '3957'
-3955 3957 0
c Var 'aux639' direct represents '2' with '3958'
3955 -3957 3958 0
-3958 3957 0
-3958 -3955 0
c Var 'aux639' order represents '3' with '3959'
-3957 3959 0
c Var 'aux639' direct represents '3' with '3960'
3957 -3959 3960 0
-3960 3959 0
-3960 -3957 0
c Var 'aux639' order represents '4' with '3961'
-3959 3961 0
c Var 'aux639' direct represents '4' with '3962'
3959 -3961 3962 0
-3962 3961 0
-3962 -3959 0
c Var 'aux639' direct represents '5' with '-3961'
3954 3956 3958 3960 3962 -3961 0
c Encoding variable: aux640 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00007_00002_00002))
c Var 'aux640' direct represents '0' with '3963'
3963 0
c Encoding variable: aux641 with domain: int(0) (representing constraint (dijk_00007_00002_00003 + lijk_00007_00002_00002))
c Var 'aux641' direct represents '0' with '3964'
3964 0
c Encoding variable: aux642 with domain: int(0) (representing constraint (aux640 + lijk_00007_00002_00003))
c Var 'aux642' direct represents '0' with '3965'
3965 0
c Encoding variable: aux643 with domain: int(0) (representing constraint (aux641 + aux642))
c Var 'aux643' direct represents '0' with '3966'
3966 0
c Encoding variable: aux644 with domain: bool (representing constraint (aux643 + uijk_00007_00002_00001))
c Var 'aux644' direct represents '0' with '-3967'
c Var 'aux644' direct represents '1' with '3967'
c Var 'aux644' order represents '1' with '1'
c Var 'aux644' order represents '0' with '-3967'
c Encoding variable: aux645 with domain: int(0..2) (representing constraint (dijk_00007_00002_00001 + aux644))
c Both direct and order encoding.
c Var 'aux645' order represents '0' with '3968'
c Var 'aux645' direct represents '0' with '3968'
c Var 'aux645' order represents '1' with '3969'
-3968 3969 0
c Var 'aux645' direct represents '1' with '3970'
3968 -3969 3970 0
-3970 3969 0
-3970 -3968 0
c Var 'aux645' direct represents '2' with '-3969'
3968 3970 -3969 0
c Encoding variable: aux646 with domain: int(0..2) (representing constraint (uijk_00007_00002_00002 + uijk_00007_00002_00003))
c Both direct and order encoding.
c Var 'aux646' order represents '0' with '3971'
c Var 'aux646' direct represents '0' with '3971'
c Var 'aux646' order represents '1' with '3972'
-3971 3972 0
c Var 'aux646' direct represents '1' with '3973'
3971 -3972 3973 0
-3973 3972 0
-3973 -3971 0
c Var 'aux646' direct represents '2' with '-3972'
3971 3973 -3972 0
c Encoding variable: aux647 with domain: int(0..2) (representing constraint (lijk_00007_00002_00001 + rijk_00007_00002_00002))
c Both direct and order encoding.
c Var 'aux647' order represents '0' with '3974'
c Var 'aux647' direct represents '0' with '3974'
c Var 'aux647' order represents '1' with '3975'
-3974 3975 0
c Var 'aux647' direct represents '1' with '3976'
3974 -3975 3976 0
-3976 3975 0
-3976 -3974 0
c Var 'aux647' direct represents '2' with '-3975'
3974 3976 -3975 0
c Encoding variable: aux648 with domain: int(0..2) (representing constraint (rijk_00007_00002_00003 + rijk_00007_00002_00001))
c Both direct and order encoding.
c Var 'aux648' order represents '0' with '3977'
c Var 'aux648' direct represents '0' with '3977'
c Var 'aux648' order represents '1' with '3978'
-3977 3978 0
c Var 'aux648' direct represents '1' with '3979'
3977 -3978 3979 0
-3979 3978 0
-3979 -3977 0
c Var 'aux648' direct represents '2' with '-3978'
3977 3979 -3978 0
c Encoding variable: aux649 with domain: int(0..4) (representing constraint (aux646 + aux648))
c Both direct and order encoding.
c Var 'aux649' order represents '0' with '3980'
c Var 'aux649' direct represents '0' with '3980'
c Var 'aux649' order represents '1' with '3981'
-3980 3981 0
c Var 'aux649' direct represents '1' with '3982'
3980 -3981 3982 0
-3982 3981 0
-3982 -3980 0
c Var 'aux649' order represents '2' with '3983'
-3981 3983 0
c Var 'aux649' direct represents '2' with '3984'
3981 -3983 3984 0
-3984 3983 0
-3984 -3981 0
c Var 'aux649' order represents '3' with '3985'
-3983 3985 0
c Var 'aux649' direct represents '3' with '3986'
3983 -3985 3986 0
-3986 3985 0
-3986 -3983 0
c Var 'aux649' direct represents '4' with '-3985'
3980 3982 3984 3986 -3985 0
c Encoding variable: aux650 with domain: int(0..4) (representing constraint (aux645 + aux647))
c Both direct and order encoding.
c Var 'aux650' order represents '0' with '3987'
c Var 'aux650' direct represents '0' with '3987'
c Var 'aux650' order represents '1' with '3988'
-3987 3988 0
c Var 'aux650' direct represents '1' with '3989'
3987 -3988 3989 0
-3989 3988 0
-3989 -3987 0
c Var 'aux650' order represents '2' with '3990'
-3988 3990 0
c Var 'aux650' direct represents '2' with '3991'
3988 -3990 3991 0
-3991 3990 0
-3991 -3988 0
c Var 'aux650' order represents '3' with '3992'
-3990 3992 0
c Var 'aux650' direct represents '3' with '3993'
3990 -3992 3993 0
-3993 3992 0
-3993 -3990 0
c Var 'aux650' direct represents '4' with '-3992'
3987 3989 3991 3993 -3992 0
c Encoding variable: aux651 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00008_00002_00001))
c Var 'aux651' direct represents '0' with '3994'
3994 0
c Encoding variable: aux652 with domain: int(0) (representing constraint (dijk_00008_00002_00002 + dijk_00008_00002_00003))
c Var 'aux652' direct represents '0' with '3995'
3995 0
c Encoding variable: aux653 with domain: int(0) (representing constraint (lijk_00008_00002_00002 + aux651))
c Var 'aux653' direct represents '0' with '3996'
3996 0
c Encoding variable: aux654 with domain: int(0) (representing constraint (aux652 + aux653))
c Var 'aux654' direct represents '0' with '3997'
3997 0
c Encoding variable: aux655 with domain: int(0) (representing constraint (lijk_00008_00002_00003 + aux654))
c Var 'aux655' direct represents '0' with '3998'
3998 0
c Encoding variable: aux656 with domain: bool (representing constraint (aux655 + uijk_00008_00002_00003))
c Var 'aux656' direct represents '0' with '-3999'
c Var 'aux656' direct represents '1' with '3999'
c Var 'aux656' order represents '1' with '1'
c Var 'aux656' order represents '0' with '-3999'
c Encoding variable: aux657 with domain: int(0..2) (representing constraint (rijk_00008_00002_00002 + aux656))
c Both direct and order encoding.
c Var 'aux657' order represents '0' with '4000'
c Var 'aux657' direct represents '0' with '4000'
c Var 'aux657' order represents '1' with '4001'
-4000 4001 0
c Var 'aux657' direct represents '1' with '4002'
4000 -4001 4002 0
-4002 4001 0
-4002 -4000 0
c Var 'aux657' direct represents '2' with '-4001'
4000 4002 -4001 0
c Encoding variable: aux658 with domain: int(0..2) (representing constraint (rijk_00008_00002_00001 + rijk_00008_00002_00003))
c Both direct and order encoding.
c Var 'aux658' order represents '0' with '4003'
c Var 'aux658' direct represents '0' with '4003'
c Var 'aux658' order represents '1' with '4004'
-4003 4004 0
c Var 'aux658' direct represents '1' with '4005'
4003 -4004 4005 0
-4005 4004 0
-4005 -4003 0
c Var 'aux658' direct represents '2' with '-4004'
4003 4005 -4004 0
c Encoding variable: aux659 with domain: int(0..2) (representing constraint (lijk_00008_00002_00001 + uijk_00008_00002_00002))
c Both direct and order encoding.
c Var 'aux659' order represents '0' with '4006'
c Var 'aux659' direct represents '0' with '4006'
c Var 'aux659' order represents '1' with '4007'
-4006 4007 0
c Var 'aux659' direct represents '1' with '4008'
4006 -4007 4008 0
-4008 4007 0
-4008 -4006 0
c Var 'aux659' direct represents '2' with '-4007'
4006 4008 -4007 0
c Encoding variable: aux660 with domain: int(0..3) (representing constraint (uijk_00008_00002_00001 + aux659))
c Both direct and order encoding.
c Var 'aux660' order represents '0' with '4009'
c Var 'aux660' direct represents '0' with '4009'
c Var 'aux660' order represents '1' with '4010'
-4009 4010 0
c Var 'aux660' direct represents '1' with '4011'
4009 -4010 4011 0
-4011 4010 0
-4011 -4009 0
c Var 'aux660' order represents '2' with '4012'
-4010 4012 0
c Var 'aux660' direct represents '2' with '4013'
4010 -4012 4013 0
-4013 4012 0
-4013 -4010 0
c Var 'aux660' direct represents '3' with '-4012'
4009 4011 4013 -4012 0
c Encoding variable: aux661 with domain: int(0..4) (representing constraint (aux658 + aux657))
c Both direct and order encoding.
c Var 'aux661' order represents '0' with '4014'
c Var 'aux661' direct represents '0' with '4014'
c Var 'aux661' order represents '1' with '4015'
-4014 4015 0
c Var 'aux661' direct represents '1' with '4016'
4014 -4015 4016 0
-4016 4015 0
-4016 -4014 0
c Var 'aux661' order represents '2' with '4017'
-4015 4017 0
c Var 'aux661' direct represents '2' with '4018'
4015 -4017 4018 0
-4018 4017 0
-4018 -4015 0
c Var 'aux661' order represents '3' with '4019'
-4017 4019 0
c Var 'aux661' direct represents '3' with '4020'
4017 -4019 4020 0
-4020 4019 0
-4020 -4017 0
c Var 'aux661' direct represents '4' with '-4019'
4014 4016 4018 4020 -4019 0
c Encoding variable: aux662 with domain: int(0) (representing constraint (uijk_00001_00003_00001 + uijk_00001_00003_00003))
c Var 'aux662' direct represents '0' with '4021'
4021 0
c Encoding variable: aux663 with domain: int(0) (representing constraint (shift(1, -1) + lijk_00001_00003_00003))
c Var 'aux663' direct represents '0' with '4022'
4022 0
c Encoding variable: aux664 with domain: int(0) (representing constraint (uijk_00001_00003_00002 + aux662))
c Var 'aux664' direct represents '0' with '4023'
4023 0
c Encoding variable: aux665 with domain: int(0) (representing constraint (aux663 + aux664))
c Var 'aux665' direct represents '0' with '4024'
4024 0
c Encoding variable: aux666 with domain: bool (representing constraint (aux665 + dijk_00001_00003_00002))
c Var 'aux666' direct represents '0' with '-4025'
c Var 'aux666' direct represents '1' with '4025'
c Var 'aux666' order represents '1' with '1'
c Var 'aux666' order represents '0' with '-4025'
c Encoding variable: aux667 with domain: int(0..2) (representing constraint (lijk_00001_00003_00001 + aux666))
c Both direct and order encoding.
c Var 'aux667' order represents '0' with '4026'
c Var 'aux667' direct represents '0' with '4026'
c Var 'aux667' order represents '1' with '4027'
-4026 4027 0
c Var 'aux667' direct represents '1' with '4028'
4026 -4027 4028 0
-4028 4027 0
-4028 -4026 0
c Var 'aux667' direct represents '2' with '-4027'
4026 4028 -4027 0
c Encoding variable: aux668 with domain: int(0..2) (representing constraint (lijk_00001_00003_00002 + rijk_00001_00003_00003))
c Both direct and order encoding.
c Var 'aux668' order represents '0' with '4029'
c Var 'aux668' direct represents '0' with '4029'
c Var 'aux668' order represents '1' with '4030'
-4029 4030 0
c Var 'aux668' direct represents '1' with '4031'
4029 -4030 4031 0
-4031 4030 0
-4031 -4029 0
c Var 'aux668' direct represents '2' with '-4030'
4029 4031 -4030 0
c Encoding variable: aux669 with domain: int(0..2) (representing constraint (dijk_00001_00003_00003 + rijk_00001_00003_00002))
c Both direct and order encoding.
c Var 'aux669' order represents '0' with '4032'
c Var 'aux669' direct represents '0' with '4032'
c Var 'aux669' order represents '1' with '4033'
-4032 4033 0
c Var 'aux669' direct represents '1' with '4034'
4032 -4033 4034 0
-4034 4033 0
-4034 -4032 0
c Var 'aux669' direct represents '2' with '-4033'
4032 4034 -4033 0
c Encoding variable: aux670 with domain: int(0..2) (representing constraint (rijk_00001_00003_00001 + dijk_00001_00003_00001))
c Both direct and order encoding.
c Var 'aux670' order represents '0' with '4035'
c Var 'aux670' direct represents '0' with '4035'
c Var 'aux670' order represents '1' with '4036'
-4035 4036 0
c Var 'aux670' direct represents '1' with '4037'
4035 -4036 4037 0
-4037 4036 0
-4037 -4035 0
c Var 'aux670' direct represents '2' with '-4036'
4035 4037 -4036 0
c Encoding variable: aux671 with domain: int(0..4) (representing constraint (aux668 + aux670))
c Both direct and order encoding.
c Var 'aux671' order represents '0' with '4038'
c Var 'aux671' direct represents '0' with '4038'
c Var 'aux671' order represents '1' with '4039'
-4038 4039 0
c Var 'aux671' direct represents '1' with '4040'
4038 -4039 4040 0
-4040 4039 0
-4040 -4038 0
c Var 'aux671' order represents '2' with '4041'
-4039 4041 0
c Var 'aux671' direct represents '2' with '4042'
4039 -4041 4042 0
-4042 4041 0
-4042 -4039 0
c Var 'aux671' order represents '3' with '4043'
-4041 4043 0
c Var 'aux671' direct represents '3' with '4044'
4041 -4043 4044 0
-4044 4043 0
-4044 -4041 0
c Var 'aux671' direct represents '4' with '-4043'
4038 4040 4042 4044 -4043 0
c Encoding variable: aux672 with domain: int(0..4) (representing constraint (aux667 + aux669))
c Both direct and order encoding.
c Var 'aux672' order represents '0' with '4045'
c Var 'aux672' direct represents '0' with '4045'
c Var 'aux672' order represents '1' with '4046'
-4045 4046 0
c Var 'aux672' direct represents '1' with '4047'
4045 -4046 4047 0
-4047 4046 0
-4047 -4045 0
c Var 'aux672' order represents '2' with '4048'
-4046 4048 0
c Var 'aux672' direct represents '2' with '4049'
4046 -4048 4049 0
-4049 4048 0
-4049 -4046 0
c Var 'aux672' order represents '3' with '4050'
-4048 4050 0
c Var 'aux672' direct represents '3' with '4051'
4048 -4050 4051 0
-4051 4050 0
-4051 -4048 0
c Var 'aux672' direct represents '4' with '-4050'
4045 4047 4049 4051 -4050 0
c Encoding variable: aux673 with domain: int(0) (representing constraint (uijk_00002_00003_00002 + lijk_00002_00003_00003))
c Var 'aux673' direct represents '0' with '4052'
4052 0
c Encoding variable: aux674 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00002_00003_00003))
c Var 'aux674' direct represents '0' with '4053'
4053 0
c Encoding variable: aux675 with domain: int(0) (representing constraint (aux673 + aux674))
c Var 'aux675' direct represents '0' with '4054'
4054 0
c Encoding variable: aux676 with domain: bool (representing constraint (aux675 + dijk_00002_00003_00002))
c Var 'aux676' direct represents '0' with '-4055'
c Var 'aux676' direct represents '1' with '4055'
c Var 'aux676' order represents '1' with '1'
c Var 'aux676' order represents '0' with '-4055'
c Encoding variable: aux677 with domain: int(0..2) (representing constraint (uijk_00002_00003_00001 + aux676))
c Both direct and order encoding.
c Var 'aux677' order represents '0' with '4056'
c Var 'aux677' direct represents '0' with '4056'
c Var 'aux677' order represents '1' with '4057'
-4056 4057 0
c Var 'aux677' direct represents '1' with '4058'
4056 -4057 4058 0
-4058 4057 0
-4058 -4056 0
c Var 'aux677' direct represents '2' with '-4057'
4056 4058 -4057 0
c Encoding variable: aux678 with domain: int(0..2) (representing constraint (lijk_00002_00003_00002 + dijk_00002_00003_00001))
c Both direct and order encoding.
c Var 'aux678' order represents '0' with '4059'
c Var 'aux678' direct represents '0' with '4059'
c Var 'aux678' order represents '1' with '4060'
-4059 4060 0
c Var 'aux678' direct represents '1' with '4061'
4059 -4060 4061 0
-4061 4060 0
-4061 -4059 0
c Var 'aux678' direct represents '2' with '-4060'
4059 4061 -4060 0
c Encoding variable: aux679 with domain: int(0..2) (representing constraint (lijk_00002_00003_00001 + rijk_00002_00003_00002))
c Both direct and order encoding.
c Var 'aux679' order represents '0' with '4062'
c Var 'aux679' direct represents '0' with '4062'
c Var 'aux679' order represents '1' with '4063'
-4062 4063 0
c Var 'aux679' direct represents '1' with '4064'
4062 -4063 4064 0
-4064 4063 0
-4064 -4062 0
c Var 'aux679' direct represents '2' with '-4063'
4062 4064 -4063 0
c Encoding variable: aux680 with domain: int(0..2) (representing constraint (rijk_00002_00003_00003 + dijk_00002_00003_00003))
c Both direct and order encoding.
c Var 'aux680' order represents '0' with '4065'
c Var 'aux680' direct represents '0' with '4065'
c Var 'aux680' order represents '1' with '4066'
-4065 4066 0
c Var 'aux680' direct represents '1' with '4067'
4065 -4066 4067 0
-4067 4066 0
-4067 -4065 0
c Var 'aux680' direct represents '2' with '-4066'
4065 4067 -4066 0
c Encoding variable: aux681 with domain: int(0..3) (representing constraint (rijk_00002_00003_00001 + aux680))
c Both direct and order encoding.
c Var 'aux681' order represents '0' with '4068'
c Var 'aux681' direct represents '0' with '4068'
c Var 'aux681' order represents '1' with '4069'
-4068 4069 0
c Var 'aux681' direct represents '1' with '4070'
4068 -4069 4070 0
-4070 4069 0
-4070 -4068 0
c Var 'aux681' order represents '2' with '4071'
-4069 4071 0
c Var 'aux681' direct represents '2' with '4072'
4069 -4071 4072 0
-4072 4071 0
-4072 -4069 0
c Var 'aux681' direct represents '3' with '-4071'
4068 4070 4072 -4071 0
c Encoding variable: aux682 with domain: int(0..4) (representing constraint (aux678 + aux677))
c Both direct and order encoding.
c Var 'aux682' order represents '0' with '4073'
c Var 'aux682' direct represents '0' with '4073'
c Var 'aux682' order represents '1' with '4074'
-4073 4074 0
c Var 'aux682' direct represents '1' with '4075'
4073 -4074 4075 0
-4075 4074 0
-4075 -4073 0
c Var 'aux682' order represents '2' with '4076'
-4074 4076 0
c Var 'aux682' direct represents '2' with '4077'
4074 -4076 4077 0
-4077 4076 0
-4077 -4074 0
c Var 'aux682' order represents '3' with '4078'
-4076 4078 0
c Var 'aux682' direct represents '3' with '4079'
4076 -4078 4079 0
-4079 4078 0
-4079 -4076 0
c Var 'aux682' direct represents '4' with '-4078'
4073 4075 4077 4079 -4078 0
c Encoding variable: aux683 with domain: int(0..5) (representing constraint (aux679 + aux681))
c Both direct and order encoding.
c Var 'aux683' order represents '0' with '4080'
c Var 'aux683' direct represents '0' with '4080'
c Var 'aux683' order represents '1' with '4081'
-4080 4081 0
c Var 'aux683' direct represents '1' with '4082'
4080 -4081 4082 0
-4082 4081 0
-4082 -4080 0
c Var 'aux683' order represents '2' with '4083'
-4081 4083 0
c Var 'aux683' direct represents '2' with '4084'
4081 -4083 4084 0
-4084 4083 0
-4084 -4081 0
c Var 'aux683' order represents '3' with '4085'
-4083 4085 0
c Var 'aux683' direct represents '3' with '4086'
4083 -4085 4086 0
-4086 4085 0
-4086 -4083 0
c Var 'aux683' order represents '4' with '4087'
-4085 4087 0
c Var 'aux683' direct represents '4' with '4088'
4085 -4087 4088 0
-4088 4087 0
-4088 -4085 0
c Var 'aux683' direct represents '5' with '-4087'
4080 4082 4084 4086 4088 -4087 0
c Encoding variable: aux684 with domain: int(0) (representing constraint (uijk_00003_00003_00003 + lijk_00003_00003_00003))
c Var 'aux684' direct represents '0' with '4089'
4089 0
c Encoding variable: aux685 with domain: int(0) (representing constraint (shift(1, -1) + aux684))
c Var 'aux685' direct represents '0' with '4090'
4090 0
c Encoding variable: aux686 with domain: bool (representing constraint (aux685 + uijk_00003_00003_00001))
c Var 'aux686' direct represents '0' with '-4091'
c Var 'aux686' direct represents '1' with '4091'
c Var 'aux686' order represents '1' with '1'
c Var 'aux686' order represents '0' with '-4091'
c Encoding variable: aux687 with domain: int(0..2) (representing constraint (rijk_00003_00003_00001 + aux686))
c Both direct and order encoding.
c Var 'aux687' order represents '0' with '4092'
c Var 'aux687' direct represents '0' with '4092'
c Var 'aux687' order represents '1' with '4093'
-4092 4093 0
c Var 'aux687' direct represents '1' with '4094'
4092 -4093 4094 0
-4094 4093 0
-4094 -4092 0
c Var 'aux687' direct represents '2' with '-4093'
4092 4094 -4093 0
c Encoding variable: aux688 with domain: int(0..2) (representing constraint (rijk_00003_00003_00003 + uijk_00003_00003_00002))
c Both direct and order encoding.
c Var 'aux688' order represents '0' with '4095'
c Var 'aux688' direct represents '0' with '4095'
c Var 'aux688' order represents '1' with '4096'
-4095 4096 0
c Var 'aux688' direct represents '1' with '4097'
4095 -4096 4097 0
-4097 4096 0
-4097 -4095 0
c Var 'aux688' direct represents '2' with '-4096'
4095 4097 -4096 0
c Encoding variable: aux689 with domain: int(0..2) (representing constraint (lijk_00003_00003_00002 + dijk_00003_00003_00001))
c Both direct and order encoding.
c Var 'aux689' order represents '0' with '4098'
c Var 'aux689' direct represents '0' with '4098'
c Var 'aux689' order represents '1' with '4099'
-4098 4099 0
c Var 'aux689' direct represents '1' with '4100'
4098 -4099 4100 0
-4100 4099 0
-4100 -4098 0
c Var 'aux689' direct represents '2' with '-4099'
4098 4100 -4099 0
c Encoding variable: aux690 with domain: int(0..2) (representing constraint (dijk_00003_00003_00002 + rijk_00003_00003_00002))
c Both direct and order encoding.
c Var 'aux690' order represents '0' with '4101'
c Var 'aux690' direct represents '0' with '4101'
c Var 'aux690' order represents '1' with '4102'
-4101 4102 0
c Var 'aux690' direct represents '1' with '4103'
4101 -4102 4103 0
-4103 4102 0
-4103 -4101 0
c Var 'aux690' direct represents '2' with '-4102'
4101 4103 -4102 0
c Encoding variable: aux691 with domain: int(0..2) (representing constraint (lijk_00003_00003_00001 + dijk_00003_00003_00003))
c Both direct and order encoding.
c Var 'aux691' order represents '0' with '4104'
c Var 'aux691' direct represents '0' with '4104'
c Var 'aux691' order represents '1' with '4105'
-4104 4105 0
c Var 'aux691' direct represents '1' with '4106'
4104 -4105 4106 0
-4106 4105 0
-4106 -4104 0
c Var 'aux691' direct represents '2' with '-4105'
4104 4106 -4105 0
c Encoding variable: aux692 with domain: int(0..4) (representing constraint (aux687 + aux691))
c Both direct and order encoding.
c Var 'aux692' order represents '0' with '4107'
c Var 'aux692' direct represents '0' with '4107'
c Var 'aux692' order represents '1' with '4108'
-4107 4108 0
c Var 'aux692' direct represents '1' with '4109'
4107 -4108 4109 0
-4109 4108 0
-4109 -4107 0
c Var 'aux692' order represents '2' with '4110'
-4108 4110 0
c Var 'aux692' direct represents '2' with '4111'
4108 -4110 4111 0
-4111 4110 0
-4111 -4108 0
c Var 'aux692' order represents '3' with '4112'
-4110 4112 0
c Var 'aux692' direct represents '3' with '4113'
4110 -4112 4113 0
-4113 4112 0
-4113 -4110 0
c Var 'aux692' direct represents '4' with '-4112'
4107 4109 4111 4113 -4112 0
c Encoding variable: aux693 with domain: int(0..4) (representing constraint (aux688 + aux689))
c Both direct and order encoding.
c Var 'aux693' order represents '0' with '4114'
c Var 'aux693' direct represents '0' with '4114'
c Var 'aux693' order represents '1' with '4115'
-4114 4115 0
c Var 'aux693' direct represents '1' with '4116'
4114 -4115 4116 0
-4116 4115 0
-4116 -4114 0
c Var 'aux693' order represents '2' with '4117'
-4115 4117 0
c Var 'aux693' direct represents '2' with '4118'
4115 -4117 4118 0
-4118 4117 0
-4118 -4115 0
c Var 'aux693' order represents '3' with '4119'
-4117 4119 0
c Var 'aux693' direct represents '3' with '4120'
4117 -4119 4120 0
-4120 4119 0
-4120 -4117 0
c Var 'aux693' direct represents '4' with '-4119'
4114 4116 4118 4120 -4119 0
c Encoding variable: aux694 with domain: int(0..6) (representing constraint (aux690 + aux693))
c Both direct and order encoding.
c Var 'aux694' order represents '0' with '4121'
c Var 'aux694' direct represents '0' with '4121'
c Var 'aux694' order represents '1' with '4122'
-4121 4122 0
c Var 'aux694' direct represents '1' with '4123'
4121 -4122 4123 0
-4123 4122 0
-4123 -4121 0
c Var 'aux694' order represents '2' with '4124'
-4122 4124 0
c Var 'aux694' direct represents '2' with '4125'
4122 -4124 4125 0
-4125 4124 0
-4125 -4122 0
c Var 'aux694' order represents '3' with '4126'
-4124 4126 0
c Var 'aux694' direct represents '3' with '4127'
4124 -4126 4127 0
-4127 4126 0
-4127 -4124 0
c Var 'aux694' order represents '4' with '4128'
-4126 4128 0
c Var 'aux694' direct represents '4' with '4129'
4126 -4128 4129 0
-4129 4128 0
-4129 -4126 0
c Var 'aux694' order represents '5' with '4130'
-4128 4130 0
c Var 'aux694' direct represents '5' with '4131'
4128 -4130 4131 0
-4131 4130 0
-4131 -4128 0
c Var 'aux694' direct represents '6' with '-4130'
4121 4123 4125 4127 4129 4131 -4130 0
c Encoding variable: aux695 with domain: int(0) (representing constraint (lijk_00004_00003_00003 + shift(1, -1)))
c Var 'aux695' direct represents '0' with '4132'
4132 0
c Encoding variable: aux696 with domain: bool (representing constraint (aux695 + rijk_00004_00003_00003))
c Var 'aux696' direct represents '0' with '-4133'
c Var 'aux696' direct represents '1' with '4133'
c Var 'aux696' order represents '1' with '1'
c Var 'aux696' order represents '0' with '-4133'
c Encoding variable: aux697 with domain: int(0..2) (representing constraint (uijk_00004_00003_00001 + aux696))
c Both direct and order encoding.
c Var 'aux697' order represents '0' with '4134'
c Var 'aux697' direct represents '0' with '4134'
c Var 'aux697' order represents '1' with '4135'
-4134 4135 0
c Var 'aux697' direct represents '1' with '4136'
4134 -4135 4136 0
-4136 4135 0
-4136 -4134 0
c Var 'aux697' direct represents '2' with '-4135'
4134 4136 -4135 0
c Encoding variable: aux698 with domain: int(0..2) (representing constraint (rijk_00004_00003_00002 + uijk_00004_00003_00002))
c Both direct and order encoding.
c Var 'aux698' order represents '0' with '4137'
c Var 'aux698' direct represents '0' with '4137'
c Var 'aux698' order represents '1' with '4138'
-4137 4138 0
c Var 'aux698' direct represents '1' with '4139'
4137 -4138 4139 0
-4139 4138 0
-4139 -4137 0
c Var 'aux698' direct represents '2' with '-4138'
4137 4139 -4138 0
c Encoding variable: aux699 with domain: int(0..2) (representing constraint (rijk_00004_00003_00001 + lijk_00004_00003_00002))
c Both direct and order encoding.
c Var 'aux699' order represents '0' with '4140'
c Var 'aux699' direct represents '0' with '4140'
c Var 'aux699' order represents '1' with '4141'
-4140 4141 0
c Var 'aux699' direct represents '1' with '4142'
4140 -4141 4142 0
-4142 4141 0
-4142 -4140 0
c Var 'aux699' direct represents '2' with '-4141'
4140 4142 -4141 0
c Encoding variable: aux700 with domain: int(0..2) (representing constraint (dijk_00004_00003_00001 + dijk_00004_00003_00002))
c Both direct and order encoding.
c Var 'aux700' order represents '0' with '4143'
c Var 'aux700' direct represents '0' with '4143'
c Var 'aux700' order represents '1' with '4144'
-4143 4144 0
c Var 'aux700' direct represents '1' with '4145'
4143 -4144 4145 0
-4145 4144 0
-4145 -4143 0
c Var 'aux700' direct represents '2' with '-4144'
4143 4145 -4144 0
c Encoding variable: aux701 with domain: int(0..2) (representing constraint (dijk_00004_00003_00003 + uijk_00004_00003_00003))
c Both direct and order encoding.
c Var 'aux701' order represents '0' with '4146'
c Var 'aux701' direct represents '0' with '4146'
c Var 'aux701' order represents '1' with '4147'
-4146 4147 0
c Var 'aux701' direct represents '1' with '4148'
4146 -4147 4148 0
-4148 4147 0
-4148 -4146 0
c Var 'aux701' direct represents '2' with '-4147'
4146 4148 -4147 0
c Encoding variable: aux702 with domain: int(0..3) (representing constraint (lijk_00004_00003_00001 + aux701))
c Both direct and order encoding.
c Var 'aux702' order represents '0' with '4149'
c Var 'aux702' direct represents '0' with '4149'
c Var 'aux702' order represents '1' with '4150'
-4149 4150 0
c Var 'aux702' direct represents '1' with '4151'
4149 -4150 4151 0
-4151 4150 0
-4151 -4149 0
c Var 'aux702' order represents '2' with '4152'
-4150 4152 0
c Var 'aux702' direct represents '2' with '4153'
4150 -4152 4153 0
-4153 4152 0
-4153 -4150 0
c Var 'aux702' direct represents '3' with '-4152'
4149 4151 4153 -4152 0
c Encoding variable: aux703 with domain: int(0..4) (representing constraint (aux699 + aux698))
c Both direct and order encoding.
c Var 'aux703' order represents '0' with '4154'
c Var 'aux703' direct represents '0' with '4154'
c Var 'aux703' order represents '1' with '4155'
-4154 4155 0
c Var 'aux703' direct represents '1' with '4156'
4154 -4155 4156 0
-4156 4155 0
-4156 -4154 0
c Var 'aux703' order represents '2' with '4157'
-4155 4157 0
c Var 'aux703' direct represents '2' with '4158'
4155 -4157 4158 0
-4158 4157 0
-4158 -4155 0
c Var 'aux703' order represents '3' with '4159'
-4157 4159 0
c Var 'aux703' direct represents '3' with '4160'
4157 -4159 4160 0
-4160 4159 0
-4160 -4157 0
c Var 'aux703' direct represents '4' with '-4159'
4154 4156 4158 4160 -4159 0
c Encoding variable: aux704 with domain: int(0..4) (representing constraint (aux697 + aux700))
c Both direct and order encoding.
c Var 'aux704' order represents '0' with '4161'
c Var 'aux704' direct represents '0' with '4161'
c Var 'aux704' order represents '1' with '4162'
-4161 4162 0
c Var 'aux704' direct represents '1' with '4163'
4161 -4162 4163 0
-4163 4162 0
-4163 -4161 0
c Var 'aux704' order represents '2' with '4164'
-4162 4164 0
c Var 'aux704' direct represents '2' with '4165'
4162 -4164 4165 0
-4165 4164 0
-4165 -4162 0
c Var 'aux704' order represents '3' with '4166'
-4164 4166 0
c Var 'aux704' direct represents '3' with '4167'
4164 -4166 4167 0
-4167 4166 0
-4167 -4164 0
c Var 'aux704' direct represents '4' with '-4166'
4161 4163 4165 4167 -4166 0
c Encoding variable: aux705 with domain: int(0..7) (representing constraint (aux702 + aux704))
c Both direct and order encoding.
c Var 'aux705' order represents '0' with '4168'
c Var 'aux705' direct represents '0' with '4168'
c Var 'aux705' order represents '1' with '4169'
-4168 4169 0
c Var 'aux705' direct represents '1' with '4170'
4168 -4169 4170 0
-4170 4169 0
-4170 -4168 0
c Var 'aux705' order represents '2' with '4171'
-4169 4171 0
c Var 'aux705' direct represents '2' with '4172'
4169 -4171 4172 0
-4172 4171 0
-4172 -4169 0
c Var 'aux705' order represents '3' with '4173'
-4171 4173 0
c Var 'aux705' direct represents '3' with '4174'
4171 -4173 4174 0
-4174 4173 0
-4174 -4171 0
c Var 'aux705' order represents '4' with '4175'
-4173 4175 0
c Var 'aux705' direct represents '4' with '4176'
4173 -4175 4176 0
-4176 4175 0
-4176 -4173 0
c Var 'aux705' order represents '5' with '4177'
-4175 4177 0
c Var 'aux705' direct represents '5' with '4178'
4175 -4177 4178 0
-4178 4177 0
-4178 -4175 0
c Var 'aux705' order represents '6' with '4179'
-4177 4179 0
c Var 'aux705' direct represents '6' with '4180'
4177 -4179 4180 0
-4180 4179 0
-4180 -4177 0
c Var 'aux705' direct represents '7' with '-4179'
4168 4170 4172 4174 4176 4178 4180 -4179 0
c Encoding variable: aux706 with domain: int(0) (representing constraint (lijk_00005_00003_00003 + shift(1, -1)))
c Var 'aux706' direct represents '0' with '4181'
4181 0
c Encoding variable: aux707 with domain: bool (representing constraint (aux706 + lijk_00005_00003_00002))
c Var 'aux707' direct represents '0' with '-4182'
c Var 'aux707' direct represents '1' with '4182'
c Var 'aux707' order represents '1' with '1'
c Var 'aux707' order represents '0' with '-4182'
c Encoding variable: aux708 with domain: int(0..2) (representing constraint (uijk_00005_00003_00001 + aux707))
c Both direct and order encoding.
c Var 'aux708' order represents '0' with '4183'
c Var 'aux708' direct represents '0' with '4183'
c Var 'aux708' order represents '1' with '4184'
-4183 4184 0
c Var 'aux708' direct represents '1' with '4185'
4183 -4184 4185 0
-4185 4184 0
-4185 -4183 0
c Var 'aux708' direct represents '2' with '-4184'
4183 4185 -4184 0
c Encoding variable: aux709 with domain: int(0..2) (representing constraint (lijk_00005_00003_00001 + uijk_00005_00003_00003))
c Both direct and order encoding.
c Var 'aux709' order represents '0' with '4186'
c Var 'aux709' direct represents '0' with '4186'
c Var 'aux709' order represents '1' with '4187'
-4186 4187 0
c Var 'aux709' direct represents '1' with '4188'
4186 -4187 4188 0
-4188 4187 0
-4188 -4186 0
c Var 'aux709' direct represents '2' with '-4187'
4186 4188 -4187 0
c Encoding variable: aux710 with domain: int(0..2) (representing constraint (rijk_00005_00003_00003 + rijk_00005_00003_00001))
c Both direct and order encoding.
c Var 'aux710' order represents '0' with '4189'
c Var 'aux710' direct represents '0' with '4189'
c Var 'aux710' order represents '1' with '4190'
-4189 4190 0
c Var 'aux710' direct represents '1' with '4191'
4189 -4190 4191 0
-4191 4190 0
-4191 -4189 0
c Var 'aux710' direct represents '2' with '-4190'
4189 4191 -4190 0
c Encoding variable: aux711 with domain: int(0..2) (representing constraint (rijk_00005_00003_00002 + dijk_00005_00003_00002))
c Both direct and order encoding.
c Var 'aux711' order represents '0' with '4192'
c Var 'aux711' direct represents '0' with '4192'
c Var 'aux711' order represents '1' with '4193'
-4192 4193 0
c Var 'aux711' direct represents '1' with '4194'
4192 -4193 4194 0
-4194 4193 0
-4194 -4192 0
c Var 'aux711' direct represents '2' with '-4193'
4192 4194 -4193 0
c Encoding variable: aux712 with domain: int(0..2) (representing constraint (uijk_00005_00003_00002 + dijk_00005_00003_00001))
c Both direct and order encoding.
c Var 'aux712' order represents '0' with '4195'
c Var 'aux712' direct represents '0' with '4195'
c Var 'aux712' order represents '1' with '4196'
-4195 4196 0
c Var 'aux712' direct represents '1' with '4197'
4195 -4196 4197 0
-4197 4196 0
-4197 -4195 0
c Var 'aux712' direct represents '2' with '-4196'
4195 4197 -4196 0
c Encoding variable: aux713 with domain: int(0..3) (representing constraint (dijk_00005_00003_00003 + aux712))
c Both direct and order encoding.
c Var 'aux713' order represents '0' with '4198'
c Var 'aux713' direct represents '0' with '4198'
c Var 'aux713' order represents '1' with '4199'
-4198 4199 0
c Var 'aux713' direct represents '1' with '4200'
4198 -4199 4200 0
-4200 4199 0
-4200 -4198 0
c Var 'aux713' order represents '2' with '4201'
-4199 4201 0
c Var 'aux713' direct represents '2' with '4202'
4199 -4201 4202 0
-4202 4201 0
-4202 -4199 0
c Var 'aux713' direct represents '3' with '-4201'
4198 4200 4202 -4201 0
c Encoding variable: aux714 with domain: int(0..4) (representing constraint (aux710 + aux709))
c Both direct and order encoding.
c Var 'aux714' order represents '0' with '4203'
c Var 'aux714' direct represents '0' with '4203'
c Var 'aux714' order represents '1' with '4204'
-4203 4204 0
c Var 'aux714' direct represents '1' with '4205'
4203 -4204 4205 0
-4205 4204 0
-4205 -4203 0
c Var 'aux714' order represents '2' with '4206'
-4204 4206 0
c Var 'aux714' direct represents '2' with '4207'
4204 -4206 4207 0
-4207 4206 0
-4207 -4204 0
c Var 'aux714' order represents '3' with '4208'
-4206 4208 0
c Var 'aux714' direct represents '3' with '4209'
4206 -4208 4209 0
-4209 4208 0
-4209 -4206 0
c Var 'aux714' direct represents '4' with '-4208'
4203 4205 4207 4209 -4208 0
c Encoding variable: aux715 with domain: int(0..4) (representing constraint (aux708 + aux711))
c Both direct and order encoding.
c Var 'aux715' order represents '0' with '4210'
c Var 'aux715' direct represents '0' with '4210'
c Var 'aux715' order represents '1' with '4211'
-4210 4211 0
c Var 'aux715' direct represents '1' with '4212'
4210 -4211 4212 0
-4212 4211 0
-4212 -4210 0
c Var 'aux715' order represents '2' with '4213'
-4211 4213 0
c Var 'aux715' direct represents '2' with '4214'
4211 -4213 4214 0
-4214 4213 0
-4214 -4211 0
c Var 'aux715' order represents '3' with '4215'
-4213 4215 0
c Var 'aux715' direct represents '3' with '4216'
4213 -4215 4216 0
-4216 4215 0
-4216 -4213 0
c Var 'aux715' direct represents '4' with '-4215'
4210 4212 4214 4216 -4215 0
c Encoding variable: aux716 with domain: int(0..7) (representing constraint (aux713 + aux715))
c Both direct and order encoding.
c Var 'aux716' order represents '0' with '4217'
c Var 'aux716' direct represents '0' with '4217'
c Var 'aux716' order represents '1' with '4218'
-4217 4218 0
c Var 'aux716' direct represents '1' with '4219'
4217 -4218 4219 0
-4219 4218 0
-4219 -4217 0
c Var 'aux716' order represents '2' with '4220'
-4218 4220 0
c Var 'aux716' direct represents '2' with '4221'
4218 -4220 4221 0
-4221 4220 0
-4221 -4218 0
c Var 'aux716' order represents '3' with '4222'
-4220 4222 0
c Var 'aux716' direct represents '3' with '4223'
4220 -4222 4223 0
-4223 4222 0
-4223 -4220 0
c Var 'aux716' order represents '4' with '4224'
-4222 4224 0
c Var 'aux716' direct represents '4' with '4225'
4222 -4224 4225 0
-4225 4224 0
-4225 -4222 0
c Var 'aux716' order represents '5' with '4226'
-4224 4226 0
c Var 'aux716' direct represents '5' with '4227'
4224 -4226 4227 0
-4227 4226 0
-4227 -4224 0
c Var 'aux716' order represents '6' with '4228'
-4226 4228 0
c Var 'aux716' direct represents '6' with '4229'
4226 -4228 4229 0
-4229 4228 0
-4229 -4226 0
c Var 'aux716' direct represents '7' with '-4228'
4217 4219 4221 4223 4225 4227 4229 -4228 0
c Encoding variable: aux717 with domain: int(0) (representing constraint (lijk_00006_00003_00003 + shift(1, -1)))
c Var 'aux717' direct represents '0' with '4230'
4230 0
c Encoding variable: aux718 with domain: int(0) (representing constraint (dijk_00006_00003_00003 + aux717))
c Var 'aux718' direct represents '0' with '4231'
4231 0
c Encoding variable: aux719 with domain: bool (representing constraint (aux718 + dijk_00006_00003_00002))
c Var 'aux719' direct represents '0' with '-4232'
c Var 'aux719' direct represents '1' with '4232'
c Var 'aux719' order represents '1' with '1'
c Var 'aux719' order represents '0' with '-4232'
c Encoding variable: aux720 with domain: int(0..2) (representing constraint (uijk_00006_00003_00003 + aux719))
c Both direct and order encoding.
c Var 'aux720' order represents '0' with '4233'
c Var 'aux720' direct represents '0' with '4233'
c Var 'aux720' order represents '1' with '4234'
-4233 4234 0
c Var 'aux720' direct represents '1' with '4235'
4233 -4234 4235 0
-4235 4234 0
-4235 -4233 0
c Var 'aux720' direct represents '2' with '-4234'
4233 4235 -4234 0
c Encoding variable: aux721 with domain: int(0..2) (representing constraint (uijk_00006_00003_00002 + rijk_00006_00003_00003))
c Both direct and order encoding.
c Var 'aux721' order represents '0' with '4236'
c Var 'aux721' direct represents '0' with '4236'
c Var 'aux721' order represents '1' with '4237'
-4236 4237 0
c Var 'aux721' direct represents '1' with '4238'
4236 -4237 4238 0
-4238 4237 0
-4238 -4236 0
c Var 'aux721' direct represents '2' with '-4237'
4236 4238 -4237 0
c Encoding variable: aux722 with domain: int(0..2) (representing constraint (lijk_00006_00003_00002 + uijk_00006_00003_00001))
c Both direct and order encoding.
c Var 'aux722' order represents '0' with '4239'
c Var 'aux722' direct represents '0' with '4239'
c Var 'aux722' order represents '1' with '4240'
-4239 4240 0
c Var 'aux722' direct represents '1' with '4241'
4239 -4240 4241 0
-4241 4240 0
-4241 -4239 0
c Var 'aux722' direct represents '2' with '-4240'
4239 4241 -4240 0
c Encoding variable: aux723 with domain: int(0..2) (representing constraint (rijk_00006_00003_00001 + dijk_00006_00003_00001))
c Both direct and order encoding.
c Var 'aux723' order represents '0' with '4242'
c Var 'aux723' direct represents '0' with '4242'
c Var 'aux723' order represents '1' with '4243'
-4242 4243 0
c Var 'aux723' direct represents '1' with '4244'
4242 -4243 4244 0
-4244 4243 0
-4244 -4242 0
c Var 'aux723' direct represents '2' with '-4243'
4242 4244 -4243 0
c Encoding variable: aux724 with domain: int(0..2) (representing constraint (lijk_00006_00003_00001 + rijk_00006_00003_00002))
c Both direct and order encoding.
c Var 'aux724' order represents '0' with '4245'
c Var 'aux724' direct represents '0' with '4245'
c Var 'aux724' order represents '1' with '4246'
-4245 4246 0
c Var 'aux724' direct represents '1' with '4247'
4245 -4246 4247 0
-4247 4246 0
-4247 -4245 0
c Var 'aux724' direct represents '2' with '-4246'
4245 4247 -4246 0
c Encoding variable: aux725 with domain: int(0..4) (representing constraint (aux720 + aux724))
c Both direct and order encoding.
c Var 'aux725' order represents '0' with '4248'
c Var 'aux725' direct represents '0' with '4248'
c Var 'aux725' order represents '1' with '4249'
-4248 4249 0
c Var 'aux725' direct represents '1' with '4250'
4248 -4249 4250 0
-4250 4249 0
-4250 -4248 0
c Var 'aux725' order represents '2' with '4251'
-4249 4251 0
c Var 'aux725' direct represents '2' with '4252'
4249 -4251 4252 0
-4252 4251 0
-4252 -4249 0
c Var 'aux725' order represents '3' with '4253'
-4251 4253 0
c Var 'aux725' direct represents '3' with '4254'
4251 -4253 4254 0
-4254 4253 0
-4254 -4251 0
c Var 'aux725' direct represents '4' with '-4253'
4248 4250 4252 4254 -4253 0
c Encoding variable: aux726 with domain: int(0..4) (representing constraint (aux721 + aux722))
c Both direct and order encoding.
c Var 'aux726' order represents '0' with '4255'
c Var 'aux726' direct represents '0' with '4255'
c Var 'aux726' order represents '1' with '4256'
-4255 4256 0
c Var 'aux726' direct represents '1' with '4257'
4255 -4256 4257 0
-4257 4256 0
-4257 -4255 0
c Var 'aux726' order represents '2' with '4258'
-4256 4258 0
c Var 'aux726' direct represents '2' with '4259'
4256 -4258 4259 0
-4259 4258 0
-4259 -4256 0
c Var 'aux726' order represents '3' with '4260'
-4258 4260 0
c Var 'aux726' direct represents '3' with '4261'
4258 -4260 4261 0
-4261 4260 0
-4261 -4258 0
c Var 'aux726' direct represents '4' with '-4260'
4255 4257 4259 4261 -4260 0
c Encoding variable: aux727 with domain: int(0..6) (representing constraint (aux723 + aux726))
c Both direct and order encoding.
c Var 'aux727' order represents '0' with '4262'
c Var 'aux727' direct represents '0' with '4262'
c Var 'aux727' order represents '1' with '4263'
-4262 4263 0
c Var 'aux727' direct represents '1' with '4264'
4262 -4263 4264 0
-4264 4263 0
-4264 -4262 0
c Var 'aux727' order represents '2' with '4265'
-4263 4265 0
c Var 'aux727' direct represents '2' with '4266'
4263 -4265 4266 0
-4266 4265 0
-4266 -4263 0
c Var 'aux727' order represents '3' with '4267'
-4265 4267 0
c Var 'aux727' direct represents '3' with '4268'
4265 -4267 4268 0
-4268 4267 0
-4268 -4265 0
c Var 'aux727' order represents '4' with '4269'
-4267 4269 0
c Var 'aux727' direct represents '4' with '4270'
4267 -4269 4270 0
-4270 4269 0
-4270 -4267 0
c Var 'aux727' order represents '5' with '4271'
-4269 4271 0
c Var 'aux727' direct represents '5' with '4272'
4269 -4271 4272 0
-4272 4271 0
-4272 -4269 0
c Var 'aux727' direct represents '6' with '-4271'
4262 4264 4266 4268 4270 4272 -4271 0
c Encoding variable: aux728 with domain: int(0) (representing constraint (lijk_00007_00003_00003 + shift(1, -1)))
c Var 'aux728' direct represents '0' with '4273'
4273 0
c Encoding variable: aux729 with domain: int(0) (representing constraint (dijk_00007_00003_00002 + dijk_00007_00003_00003))
c Var 'aux729' direct represents '0' with '4274'
4274 0
c Encoding variable: aux730 with domain: int(0) (representing constraint (aux728 + aux729))
c Var 'aux730' direct represents '0' with '4275'
4275 0
c Encoding variable: aux731 with domain: bool (representing constraint (aux730 + rijk_00007_00003_00002))
c Var 'aux731' direct represents '0' with '-4276'
c Var 'aux731' direct represents '1' with '4276'
c Var 'aux731' order represents '1' with '1'
c Var 'aux731' order represents '0' with '-4276'
c Encoding variable: aux732 with domain: int(0..2) (representing constraint (uijk_00007_00003_00002 + aux731))
c Both direct and order encoding.
c Var 'aux732' order represents '0' with '4277'
c Var 'aux732' direct represents '0' with '4277'
c Var 'aux732' order represents '1' with '4278'
-4277 4278 0
c Var 'aux732' direct represents '1' with '4279'
4277 -4278 4279 0
-4279 4278 0
-4279 -4277 0
c Var 'aux732' direct represents '2' with '-4278'
4277 4279 -4278 0
c Encoding variable: aux733 with domain: int(0..2) (representing constraint (uijk_00007_00003_00001 + uijk_00007_00003_00003))
c Both direct and order encoding.
c Var 'aux733' order represents '0' with '4280'
c Var 'aux733' direct represents '0' with '4280'
c Var 'aux733' order represents '1' with '4281'
-4280 4281 0
c Var 'aux733' direct represents '1' with '4282'
4280 -4281 4282 0
-4282 4281 0
-4282 -4280 0
c Var 'aux733' direct represents '2' with '-4281'
4280 4282 -4281 0
c Encoding variable: aux734 with domain: int(0..2) (representing constraint (rijk_00007_00003_00001 + lijk_00007_00003_00002))
c Both direct and order encoding.
c Var 'aux734' order represents '0' with '4283'
c Var 'aux734' direct represents '0' with '4283'
c Var 'aux734' order represents '1' with '4284'
-4283 4284 0
c Var 'aux734' direct represents '1' with '4285'
4283 -4284 4285 0
-4285 4284 0
-4285 -4283 0
c Var 'aux734' direct represents '2' with '-4284'
4283 4285 -4284 0
c Encoding variable: aux735 with domain: int(0..2) (representing constraint (rijk_00007_00003_00003 + lijk_00007_00003_00001))
c Both direct and order encoding.
c Var 'aux735' order represents '0' with '4286'
c Var 'aux735' direct represents '0' with '4286'
c Var 'aux735' order represents '1' with '4287'
-4286 4287 0
c Var 'aux735' direct represents '1' with '4288'
4286 -4287 4288 0
-4288 4287 0
-4288 -4286 0
c Var 'aux735' direct represents '2' with '-4287'
4286 4288 -4287 0
c Encoding variable: aux736 with domain: int(0..3) (representing constraint (dijk_00007_00003_00001 + aux735))
c Both direct and order encoding.
c Var 'aux736' order represents '0' with '4289'
c Var 'aux736' direct represents '0' with '4289'
c Var 'aux736' order represents '1' with '4290'
-4289 4290 0
c Var 'aux736' direct represents '1' with '4291'
4289 -4290 4291 0
-4291 4290 0
-4291 -4289 0
c Var 'aux736' order represents '2' with '4292'
-4290 4292 0
c Var 'aux736' direct represents '2' with '4293'
4290 -4292 4293 0
-4293 4292 0
-4293 -4290 0
c Var 'aux736' direct represents '3' with '-4292'
4289 4291 4293 -4292 0
c Encoding variable: aux737 with domain: int(0..4) (representing constraint (aux733 + aux732))
c Both direct and order encoding.
c Var 'aux737' order represents '0' with '4294'
c Var 'aux737' direct represents '0' with '4294'
c Var 'aux737' order represents '1' with '4295'
-4294 4295 0
c Var 'aux737' direct represents '1' with '4296'
4294 -4295 4296 0
-4296 4295 0
-4296 -4294 0
c Var 'aux737' order represents '2' with '4297'
-4295 4297 0
c Var 'aux737' direct represents '2' with '4298'
4295 -4297 4298 0
-4298 4297 0
-4298 -4295 0
c Var 'aux737' order represents '3' with '4299'
-4297 4299 0
c Var 'aux737' direct represents '3' with '4300'
4297 -4299 4300 0
-4300 4299 0
-4300 -4297 0
c Var 'aux737' direct represents '4' with '-4299'
4294 4296 4298 4300 -4299 0
c Encoding variable: aux738 with domain: int(0..5) (representing constraint (aux734 + aux736))
c Both direct and order encoding.
c Var 'aux738' order represents '0' with '4301'
c Var 'aux738' direct represents '0' with '4301'
c Var 'aux738' order represents '1' with '4302'
-4301 4302 0
c Var 'aux738' direct represents '1' with '4303'
4301 -4302 4303 0
-4303 4302 0
-4303 -4301 0
c Var 'aux738' order represents '2' with '4304'
-4302 4304 0
c Var 'aux738' direct represents '2' with '4305'
4302 -4304 4305 0
-4305 4304 0
-4305 -4302 0
c Var 'aux738' order represents '3' with '4306'
-4304 4306 0
c Var 'aux738' direct represents '3' with '4307'
4304 -4306 4307 0
-4307 4306 0
-4307 -4304 0
c Var 'aux738' order represents '4' with '4308'
-4306 4308 0
c Var 'aux738' direct represents '4' with '4309'
4306 -4308 4309 0
-4309 4308 0
-4309 -4306 0
c Var 'aux738' direct represents '5' with '-4308'
4301 4303 4305 4307 4309 -4308 0
c Encoding variable: aux739 with domain: int(0) (representing constraint (lijk_00008_00003_00003 + shift(1, -1)))
c Var 'aux739' direct represents '0' with '4310'
4310 0
c Encoding variable: aux740 with domain: int(0) (representing constraint (dijk_00008_00003_00001 + dijk_00008_00003_00002))
c Var 'aux740' direct represents '0' with '4311'
4311 0
c Encoding variable: aux741 with domain: int(0) (representing constraint (aux739 + dijk_00008_00003_00003))
c Var 'aux741' direct represents '0' with '4312'
4312 0
c Encoding variable: aux742 with domain: int(0) (representing constraint (aux740 + aux741))
c Var 'aux742' direct represents '0' with '4313'
4313 0
c Encoding variable: aux743 with domain: bool (representing constraint (aux742 + lijk_00008_00003_00002))
c Var 'aux743' direct represents '0' with '-4314'
c Var 'aux743' direct represents '1' with '4314'
c Var 'aux743' order represents '1' with '1'
c Var 'aux743' order represents '0' with '-4314'
c Encoding variable: aux744 with domain: int(0..2) (representing constraint (uijk_00008_00003_00001 + aux743))
c Both direct and order encoding.
c Var 'aux744' order represents '0' with '4315'
c Var 'aux744' direct represents '0' with '4315'
c Var 'aux744' order represents '1' with '4316'
-4315 4316 0
c Var 'aux744' direct represents '1' with '4317'
4315 -4316 4317 0
-4317 4316 0
-4317 -4315 0
c Var 'aux744' direct represents '2' with '-4316'
4315 4317 -4316 0
c Encoding variable: aux745 with domain: int(0..2) (representing constraint (uijk_00008_00003_00002 + rijk_00008_00003_00001))
c Both direct and order encoding.
c Var 'aux745' order represents '0' with '4318'
c Var 'aux745' direct represents '0' with '4318'
c Var 'aux745' order represents '1' with '4319'
-4318 4319 0
c Var 'aux745' direct represents '1' with '4320'
4318 -4319 4320 0
-4320 4319 0
-4320 -4318 0
c Var 'aux745' direct represents '2' with '-4319'
4318 4320 -4319 0
c Encoding variable: aux746 with domain: int(0..2) (representing constraint (rijk_00008_00003_00003 + rijk_00008_00003_00002))
c Both direct and order encoding.
c Var 'aux746' order represents '0' with '4321'
c Var 'aux746' direct represents '0' with '4321'
c Var 'aux746' order represents '1' with '4322'
-4321 4322 0
c Var 'aux746' direct represents '1' with '4323'
4321 -4322 4323 0
-4323 4322 0
-4323 -4321 0
c Var 'aux746' direct represents '2' with '-4322'
4321 4323 -4322 0
c Encoding variable: aux747 with domain: int(0..2) (representing constraint (lijk_00008_00003_00001 + uijk_00008_00003_00003))
c Both direct and order encoding.
c Var 'aux747' order represents '0' with '4324'
c Var 'aux747' direct represents '0' with '4324'
c Var 'aux747' order represents '1' with '4325'
-4324 4325 0
c Var 'aux747' direct represents '1' with '4326'
4324 -4325 4326 0
-4326 4325 0
-4326 -4324 0
c Var 'aux747' direct represents '2' with '-4325'
4324 4326 -4325 0
c Encoding variable: aux748 with domain: int(0..4) (representing constraint (aux745 + aux747))
c Both direct and order encoding.
c Var 'aux748' order represents '0' with '4327'
c Var 'aux748' direct represents '0' with '4327'
c Var 'aux748' order represents '1' with '4328'
-4327 4328 0
c Var 'aux748' direct represents '1' with '4329'
4327 -4328 4329 0
-4329 4328 0
-4329 -4327 0
c Var 'aux748' order represents '2' with '4330'
-4328 4330 0
c Var 'aux748' direct represents '2' with '4331'
4328 -4330 4331 0
-4331 4330 0
-4331 -4328 0
c Var 'aux748' order represents '3' with '4332'
-4330 4332 0
c Var 'aux748' direct represents '3' with '4333'
4330 -4332 4333 0
-4333 4332 0
-4333 -4330 0
c Var 'aux748' direct represents '4' with '-4332'
4327 4329 4331 4333 -4332 0
c Encoding variable: aux749 with domain: int(0..4) (representing constraint (aux744 + aux746))
c Both direct and order encoding.
c Var 'aux749' order represents '0' with '4334'
c Var 'aux749' direct represents '0' with '4334'
c Var 'aux749' order represents '1' with '4335'
-4334 4335 0
c Var 'aux749' direct represents '1' with '4336'
4334 -4335 4336 0
-4336 4335 0
-4336 -4334 0
c Var 'aux749' order represents '2' with '4337'
-4335 4337 0
c Var 'aux749' direct represents '2' with '4338'
4335 -4337 4338 0
-4338 4337 0
-4338 -4335 0
c Var 'aux749' order represents '3' with '4339'
-4337 4339 0
c Var 'aux749' direct represents '3' with '4340'
4337 -4339 4340 0
-4340 4339 0
-4340 -4337 0
c Var 'aux749' direct represents '4' with '-4339'
4334 4336 4338 4340 -4339 0
c Encoding variable: aux750 with domain: int(0) (representing constraint (uijk_00001_00004_00001 + uijk_00001_00004_00003))
c Var 'aux750' direct represents '0' with '4341'
4341 0
c Encoding variable: aux751 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00001_00004_00002))
c Var 'aux751' direct represents '0' with '4342'
4342 0
c Encoding variable: aux752 with domain: int(0) (representing constraint (aux750 + aux751))
c Var 'aux752' direct represents '0' with '4343'
4343 0
c Encoding variable: aux753 with domain: bool (representing constraint (aux752 + rijk_00001_00004_00003))
c Var 'aux753' direct represents '0' with '-4344'
c Var 'aux753' direct represents '1' with '4344'
c Var 'aux753' order represents '1' with '1'
c Var 'aux753' order represents '0' with '-4344'
c Encoding variable: aux754 with domain: int(0..2) (representing constraint (lijk_00001_00004_00002 + aux753))
c Both direct and order encoding.
c Var 'aux754' order represents '0' with '4345'
c Var 'aux754' direct represents '0' with '4345'
c Var 'aux754' order represents '1' with '4346'
-4345 4346 0
c Var 'aux754' direct represents '1' with '4347'
4345 -4346 4347 0
-4347 4346 0
-4347 -4345 0
c Var 'aux754' direct represents '2' with '-4346'
4345 4347 -4346 0
c Encoding variable: aux755 with domain: int(0..2) (representing constraint (lijk_00001_00004_00001 + lijk_00001_00004_00003))
c Both direct and order encoding.
c Var 'aux755' order represents '0' with '4348'
c Var 'aux755' direct represents '0' with '4348'
c Var 'aux755' order represents '1' with '4349'
-4348 4349 0
c Var 'aux755' direct represents '1' with '4350'
4348 -4349 4350 0
-4350 4349 0
-4350 -4348 0
c Var 'aux755' direct represents '2' with '-4349'
4348 4350 -4349 0
c Encoding variable: aux756 with domain: int(0..2) (representing constraint (dijk_00001_00004_00003 + rijk_00001_00004_00002))
c Both direct and order encoding.
c Var 'aux756' order represents '0' with '4351'
c Var 'aux756' direct represents '0' with '4351'
c Var 'aux756' order represents '1' with '4352'
-4351 4352 0
c Var 'aux756' direct represents '1' with '4353'
4351 -4352 4353 0
-4353 4352 0
-4353 -4351 0
c Var 'aux756' direct represents '2' with '-4352'
4351 4353 -4352 0
c Encoding variable: aux757 with domain: int(0..2) (representing constraint (dijk_00001_00004_00002 + dijk_00001_00004_00001))
c Both direct and order encoding.
c Var 'aux757' order represents '0' with '4354'
c Var 'aux757' direct represents '0' with '4354'
c Var 'aux757' order represents '1' with '4355'
-4354 4355 0
c Var 'aux757' direct represents '1' with '4356'
4354 -4355 4356 0
-4356 4355 0
-4356 -4354 0
c Var 'aux757' direct represents '2' with '-4355'
4354 4356 -4355 0
c Encoding variable: aux758 with domain: int(0..3) (representing constraint (rijk_00001_00004_00001 + aux757))
c Both direct and order encoding.
c Var 'aux758' order represents '0' with '4357'
c Var 'aux758' direct represents '0' with '4357'
c Var 'aux758' order represents '1' with '4358'
-4357 4358 0
c Var 'aux758' direct represents '1' with '4359'
4357 -4358 4359 0
-4359 4358 0
-4359 -4357 0
c Var 'aux758' order represents '2' with '4360'
-4358 4360 0
c Var 'aux758' direct represents '2' with '4361'
4358 -4360 4361 0
-4361 4360 0
-4361 -4358 0
c Var 'aux758' direct represents '3' with '-4360'
4357 4359 4361 -4360 0
c Encoding variable: aux759 with domain: int(0..4) (representing constraint (aux755 + aux754))
c Both direct and order encoding.
c Var 'aux759' order represents '0' with '4362'
c Var 'aux759' direct represents '0' with '4362'
c Var 'aux759' order represents '1' with '4363'
-4362 4363 0
c Var 'aux759' direct represents '1' with '4364'
4362 -4363 4364 0
-4364 4363 0
-4364 -4362 0
c Var 'aux759' order represents '2' with '4365'
-4363 4365 0
c Var 'aux759' direct represents '2' with '4366'
4363 -4365 4366 0
-4366 4365 0
-4366 -4363 0
c Var 'aux759' order represents '3' with '4367'
-4365 4367 0
c Var 'aux759' direct represents '3' with '4368'
4365 -4367 4368 0
-4368 4367 0
-4368 -4365 0
c Var 'aux759' direct represents '4' with '-4367'
4362 4364 4366 4368 -4367 0
c Encoding variable: aux760 with domain: int(0..5) (representing constraint (aux756 + aux758))
c Both direct and order encoding.
c Var 'aux760' order represents '0' with '4369'
c Var 'aux760' direct represents '0' with '4369'
c Var 'aux760' order represents '1' with '4370'
-4369 4370 0
c Var 'aux760' direct represents '1' with '4371'
4369 -4370 4371 0
-4371 4370 0
-4371 -4369 0
c Var 'aux760' order represents '2' with '4372'
-4370 4372 0
c Var 'aux760' direct represents '2' with '4373'
4370 -4372 4373 0
-4373 4372 0
-4373 -4370 0
c Var 'aux760' order represents '3' with '4374'
-4372 4374 0
c Var 'aux760' direct represents '3' with '4375'
4372 -4374 4375 0
-4375 4374 0
-4375 -4372 0
c Var 'aux760' order represents '4' with '4376'
-4374 4376 0
c Var 'aux760' direct represents '4' with '4377'
4374 -4376 4377 0
-4377 4376 0
-4377 -4374 0
c Var 'aux760' direct represents '5' with '-4376'
4369 4371 4373 4375 4377 -4376 0
c Encoding variable: aux761 with domain: int(0) (representing constraint (uijk_00002_00004_00002 + shift(1, -1)))
c Var 'aux761' direct represents '0' with '4378'
4378 0
c Encoding variable: aux762 with domain: int(0) (representing constraint (uijk_00002_00004_00003 + aux761))
c Var 'aux762' direct represents '0' with '4379'
4379 0
c Encoding variable: aux763 with domain: bool (representing constraint (aux762 + rijk_00002_00004_00002))
c Var 'aux763' direct represents '0' with '-4380'
c Var 'aux763' direct represents '1' with '4380'
c Var 'aux763' order represents '1' with '1'
c Var 'aux763' order represents '0' with '-4380'
c Encoding variable: aux764 with domain: int(0..2) (representing constraint (lijk_00002_00004_00003 + aux763))
c Both direct and order encoding.
c Var 'aux764' order represents '0' with '4381'
c Var 'aux764' direct represents '0' with '4381'
c Var 'aux764' order represents '1' with '4382'
-4381 4382 0
c Var 'aux764' direct represents '1' with '4383'
4381 -4382 4383 0
-4383 4382 0
-4383 -4381 0
c Var 'aux764' direct represents '2' with '-4382'
4381 4383 -4382 0
c Encoding variable: aux765 with domain: int(0..2) (representing constraint (lijk_00002_00004_00002 + rijk_00002_00004_00003))
c Both direct and order encoding.
c Var 'aux765' order represents '0' with '4384'
c Var 'aux765' direct represents '0' with '4384'
c Var 'aux765' order represents '1' with '4385'
-4384 4385 0
c Var 'aux765' direct represents '1' with '4386'
4384 -4385 4386 0
-4386 4385 0
-4386 -4384 0
c Var 'aux765' direct represents '2' with '-4385'
4384 4386 -4385 0
c Encoding variable: aux766 with domain: int(0..2) (representing constraint (uijk_00002_00004_00001 + lijk_00002_00004_00001))
c Both direct and order encoding.
c Var 'aux766' order represents '0' with '4387'
c Var 'aux766' direct represents '0' with '4387'
c Var 'aux766' order represents '1' with '4388'
-4387 4388 0
c Var 'aux766' direct represents '1' with '4389'
4387 -4388 4389 0
-4389 4388 0
-4389 -4387 0
c Var 'aux766' direct represents '2' with '-4388'
4387 4389 -4388 0
c Encoding variable: aux767 with domain: int(0..2) (representing constraint (dijk_00002_00004_00001 + rijk_00002_00004_00001))
c Both direct and order encoding.
c Var 'aux767' order represents '0' with '4390'
c Var 'aux767' direct represents '0' with '4390'
c Var 'aux767' order represents '1' with '4391'
-4390 4391 0
c Var 'aux767' direct represents '1' with '4392'
4390 -4391 4392 0
-4392 4391 0
-4392 -4390 0
c Var 'aux767' direct represents '2' with '-4391'
4390 4392 -4391 0
c Encoding variable: aux768 with domain: int(0..2) (representing constraint (dijk_00002_00004_00003 + dijk_00002_00004_00002))
c Both direct and order encoding.
c Var 'aux768' order represents '0' with '4393'
c Var 'aux768' direct represents '0' with '4393'
c Var 'aux768' order represents '1' with '4394'
-4393 4394 0
c Var 'aux768' direct represents '1' with '4395'
4393 -4394 4395 0
-4395 4394 0
-4395 -4393 0
c Var 'aux768' direct represents '2' with '-4394'
4393 4395 -4394 0
c Encoding variable: aux769 with domain: int(0..4) (representing constraint (aux764 + aux768))
c Both direct and order encoding.
c Var 'aux769' order represents '0' with '4396'
c Var 'aux769' direct represents '0' with '4396'
c Var 'aux769' order represents '1' with '4397'
-4396 4397 0
c Var 'aux769' direct represents '1' with '4398'
4396 -4397 4398 0
-4398 4397 0
-4398 -4396 0
c Var 'aux769' order represents '2' with '4399'
-4397 4399 0
c Var 'aux769' direct represents '2' with '4400'
4397 -4399 4400 0
-4400 4399 0
-4400 -4397 0
c Var 'aux769' order represents '3' with '4401'
-4399 4401 0
c Var 'aux769' direct represents '3' with '4402'
4399 -4401 4402 0
-4402 4401 0
-4402 -4399 0
c Var 'aux769' direct represents '4' with '-4401'
4396 4398 4400 4402 -4401 0
c Encoding variable: aux770 with domain: int(0..4) (representing constraint (aux765 + aux766))
c Both direct and order encoding.
c Var 'aux770' order represents '0' with '4403'
c Var 'aux770' direct represents '0' with '4403'
c Var 'aux770' order represents '1' with '4404'
-4403 4404 0
c Var 'aux770' direct represents '1' with '4405'
4403 -4404 4405 0
-4405 4404 0
-4405 -4403 0
c Var 'aux770' order represents '2' with '4406'
-4404 4406 0
c Var 'aux770' direct represents '2' with '4407'
4404 -4406 4407 0
-4407 4406 0
-4407 -4404 0
c Var 'aux770' order represents '3' with '4408'
-4406 4408 0
c Var 'aux770' direct represents '3' with '4409'
4406 -4408 4409 0
-4409 4408 0
-4409 -4406 0
c Var 'aux770' direct represents '4' with '-4408'
4403 4405 4407 4409 -4408 0
c Encoding variable: aux771 with domain: int(0..6) (representing constraint (aux767 + aux770))
c Both direct and order encoding.
c Var 'aux771' order represents '0' with '4410'
c Var 'aux771' direct represents '0' with '4410'
c Var 'aux771' order represents '1' with '4411'
-4410 4411 0
c Var 'aux771' direct represents '1' with '4412'
4410 -4411 4412 0
-4412 4411 0
-4412 -4410 0
c Var 'aux771' order represents '2' with '4413'
-4411 4413 0
c Var 'aux771' direct represents '2' with '4414'
4411 -4413 4414 0
-4414 4413 0
-4414 -4411 0
c Var 'aux771' order represents '3' with '4415'
-4413 4415 0
c Var 'aux771' direct represents '3' with '4416'
4413 -4415 4416 0
-4416 4415 0
-4416 -4413 0
c Var 'aux771' order represents '4' with '4417'
-4415 4417 0
c Var 'aux771' direct represents '4' with '4418'
4415 -4417 4418 0
-4418 4417 0
-4418 -4415 0
c Var 'aux771' order represents '5' with '4419'
-4417 4419 0
c Var 'aux771' direct represents '5' with '4420'
4417 -4419 4420 0
-4420 4419 0
-4420 -4417 0
c Var 'aux771' direct represents '6' with '-4419'
4410 4412 4414 4416 4418 4420 -4419 0
c Encoding variable: aux772 with domain: int(0) (representing constraint (uijk_00003_00004_00003 + shift(1, -1)))
c Var 'aux772' direct represents '0' with '4421'
4421 0
c Encoding variable: aux773 with domain: bool (representing constraint (aux772 + dijk_00003_00004_00003))
c Var 'aux773' direct represents '0' with '-4422'
c Var 'aux773' direct represents '1' with '4422'
c Var 'aux773' order represents '1' with '1'
c Var 'aux773' order represents '0' with '-4422'
c Encoding variable: aux774 with domain: int(0..2) (representing constraint (rijk_00003_00004_00001 + aux773))
c Both direct and order encoding.
c Var 'aux774' order represents '0' with '4423'
c Var 'aux774' direct represents '0' with '4423'
c Var 'aux774' order represents '1' with '4424'
-4423 4424 0
c Var 'aux774' direct represents '1' with '4425'
4423 -4424 4425 0
-4425 4424 0
-4425 -4423 0
c Var 'aux774' direct represents '2' with '-4424'
4423 4425 -4424 0
c Encoding variable: aux775 with domain: int(0..2) (representing constraint (uijk_00003_00004_00002 + dijk_00003_00004_00001))
c Both direct and order encoding.
c Var 'aux775' order represents '0' with '4426'
c Var 'aux775' direct represents '0' with '4426'
c Var 'aux775' order represents '1' with '4427'
-4426 4427 0
c Var 'aux775' direct represents '1' with '4428'
4426 -4427 4428 0
-4428 4427 0
-4428 -4426 0
c Var 'aux775' direct represents '2' with '-4427'
4426 4428 -4427 0
c Encoding variable: aux776 with domain: int(0..2) (representing constraint (lijk_00003_00004_00003 + lijk_00003_00004_00001))
c Both direct and order encoding.
c Var 'aux776' order represents '0' with '4429'
c Var 'aux776' direct represents '0' with '4429'
c Var 'aux776' order represents '1' with '4430'
-4429 4430 0
c Var 'aux776' direct represents '1' with '4431'
4429 -4430 4431 0
-4431 4430 0
-4431 -4429 0
c Var 'aux776' direct represents '2' with '-4430'
4429 4431 -4430 0
c Encoding variable: aux777 with domain: int(0..2) (representing constraint (lijk_00003_00004_00002 + dijk_00003_00004_00002))
c Both direct and order encoding.
c Var 'aux777' order represents '0' with '4432'
c Var 'aux777' direct represents '0' with '4432'
c Var 'aux777' order represents '1' with '4433'
-4432 4433 0
c Var 'aux777' direct represents '1' with '4434'
4432 -4433 4434 0
-4434 4433 0
-4434 -4432 0
c Var 'aux777' direct represents '2' with '-4433'
4432 4434 -4433 0
c Encoding variable: aux778 with domain: int(0..2) (representing constraint (rijk_00003_00004_00002 + rijk_00003_00004_00003))
c Both direct and order encoding.
c Var 'aux778' order represents '0' with '4435'
c Var 'aux778' direct represents '0' with '4435'
c Var 'aux778' order represents '1' with '4436'
-4435 4436 0
c Var 'aux778' direct represents '1' with '4437'
4435 -4436 4437 0
-4437 4436 0
-4437 -4435 0
c Var 'aux778' direct represents '2' with '-4436'
4435 4437 -4436 0
c Encoding variable: aux779 with domain: int(0..3) (representing constraint (uijk_00003_00004_00001 + aux778))
c Both direct and order encoding.
c Var 'aux779' order represents '0' with '4438'
c Var 'aux779' direct represents '0' with '4438'
c Var 'aux779' order represents '1' with '4439'
-4438 4439 0
c Var 'aux779' direct represents '1' with '4440'
4438 -4439 4440 0
-4440 4439 0
-4440 -4438 0
c Var 'aux779' order represents '2' with '4441'
-4439 4441 0
c Var 'aux779' direct represents '2' with '4442'
4439 -4441 4442 0
-4442 4441 0
-4442 -4439 0
c Var 'aux779' direct represents '3' with '-4441'
4438 4440 4442 -4441 0
c Encoding variable: aux780 with domain: int(0..4) (representing constraint (aux776 + aux775))
c Both direct and order encoding.
c Var 'aux780' order represents '0' with '4443'
c Var 'aux780' direct represents '0' with '4443'
c Var 'aux780' order represents '1' with '4444'
-4443 4444 0
c Var 'aux780' direct represents '1' with '4445'
4443 -4444 4445 0
-4445 4444 0
-4445 -4443 0
c Var 'aux780' order represents '2' with '4446'
-4444 4446 0
c Var 'aux780' direct represents '2' with '4447'
4444 -4446 4447 0
-4447 4446 0
-4447 -4444 0
c Var 'aux780' order represents '3' with '4448'
-4446 4448 0
c Var 'aux780' direct represents '3' with '4449'
4446 -4448 4449 0
-4449 4448 0
-4449 -4446 0
c Var 'aux780' direct represents '4' with '-4448'
4443 4445 4447 4449 -4448 0
c Encoding variable: aux781 with domain: int(0..4) (representing constraint (aux774 + aux777))
c Both direct and order encoding.
c Var 'aux781' order represents '0' with '4450'
c Var 'aux781' direct represents '0' with '4450'
c Var 'aux781' order represents '1' with '4451'
-4450 4451 0
c Var 'aux781' direct represents '1' with '4452'
4450 -4451 4452 0
-4452 4451 0
-4452 -4450 0
c Var 'aux781' order represents '2' with '4453'
-4451 4453 0
c Var 'aux781' direct represents '2' with '4454'
4451 -4453 4454 0
-4454 4453 0
-4454 -4451 0
c Var 'aux781' order represents '3' with '4455'
-4453 4455 0
c Var 'aux781' direct represents '3' with '4456'
4453 -4455 4456 0
-4456 4455 0
-4456 -4453 0
c Var 'aux781' direct represents '4' with '-4455'
4450 4452 4454 4456 -4455 0
c Encoding variable: aux782 with domain: int(0..7) (representing constraint (aux779 + aux781))
c Both direct and order encoding.
c Var 'aux782' order represents '0' with '4457'
c Var 'aux782' direct represents '0' with '4457'
c Var 'aux782' order represents '1' with '4458'
-4457 4458 0
c Var 'aux782' direct represents '1' with '4459'
4457 -4458 4459 0
-4459 4458 0
-4459 -4457 0
c Var 'aux782' order represents '2' with '4460'
-4458 4460 0
c Var 'aux782' direct represents '2' with '4461'
4458 -4460 4461 0
-4461 4460 0
-4461 -4458 0
c Var 'aux782' order represents '3' with '4462'
-4460 4462 0
c Var 'aux782' direct represents '3' with '4463'
4460 -4462 4463 0
-4463 4462 0
-4463 -4460 0
c Var 'aux782' order represents '4' with '4464'
-4462 4464 0
c Var 'aux782' direct represents '4' with '4465'
4462 -4464 4465 0
-4465 4464 0
-4465 -4462 0
c Var 'aux782' order represents '5' with '4466'
-4464 4466 0
c Var 'aux782' direct represents '5' with '4467'
4464 -4466 4467 0
-4467 4466 0
-4467 -4464 0
c Var 'aux782' order represents '6' with '4468'
-4466 4468 0
c Var 'aux782' direct represents '6' with '4469'
4466 -4468 4469 0
-4469 4468 0
-4469 -4466 0
c Var 'aux782' direct represents '7' with '-4468'
4457 4459 4461 4463 4465 4467 4469 -4468 0
c Encoding variable: aux783 with domain: bool (representing constraint (shift(1, -1) + uijk_00004_00004_00002))
c Var 'aux783' direct represents '0' with '-4470'
c Var 'aux783' direct represents '1' with '4470'
c Var 'aux783' order represents '1' with '1'
c Var 'aux783' order represents '0' with '-4470'
c Encoding variable: aux784 with domain: int(0..2) (representing constraint (rijk_00004_00004_00003 + aux783))
c Both direct and order encoding.
c Var 'aux784' order represents '0' with '4471'
c Var 'aux784' direct represents '0' with '4471'
c Var 'aux784' order represents '1' with '4472'
-4471 4472 0
c Var 'aux784' direct represents '1' with '4473'
4471 -4472 4473 0
-4473 4472 0
-4473 -4471 0
c Var 'aux784' direct represents '2' with '-4472'
4471 4473 -4472 0
c Encoding variable: aux785 with domain: int(0..2) (representing constraint (rijk_00004_00004_00002 + dijk_00004_00004_00001))
c Both direct and order encoding.
c Var 'aux785' order represents '0' with '4474'
c Var 'aux785' direct represents '0' with '4474'
c Var 'aux785' order represents '1' with '4475'
-4474 4475 0
c Var 'aux785' direct represents '1' with '4476'
4474 -4475 4476 0
-4476 4475 0
-4476 -4474 0
c Var 'aux785' direct represents '2' with '-4475'
4474 4476 -4475 0
c Encoding variable: aux786 with domain: int(0..2) (representing constraint (rijk_00004_00004_00001 + lijk_00004_00004_00001))
c Both direct and order encoding.
c Var 'aux786' order represents '0' with '4477'
c Var 'aux786' direct represents '0' with '4477'
c Var 'aux786' order represents '1' with '4478'
-4477 4478 0
c Var 'aux786' direct represents '1' with '4479'
4477 -4478 4479 0
-4479 4478 0
-4479 -4477 0
c Var 'aux786' direct represents '2' with '-4478'
4477 4479 -4478 0
c Encoding variable: aux787 with domain: int(0..2) (representing constraint (lijk_00004_00004_00003 + lijk_00004_00004_00002))
c Both direct and order encoding.
c Var 'aux787' order represents '0' with '4480'
c Var 'aux787' direct represents '0' with '4480'
c Var 'aux787' order represents '1' with '4481'
-4480 4481 0
c Var 'aux787' direct represents '1' with '4482'
4480 -4481 4482 0
-4482 4481 0
-4482 -4480 0
c Var 'aux787' direct represents '2' with '-4481'
4480 4482 -4481 0
c Encoding variable: aux788 with domain: int(0..2) (representing constraint (dijk_00004_00004_00002 + uijk_00004_00004_00001))
c Both direct and order encoding.
c Var 'aux788' order represents '0' with '4483'
c Var 'aux788' direct represents '0' with '4483'
c Var 'aux788' order represents '1' with '4484'
-4483 4484 0
c Var 'aux788' direct represents '1' with '4485'
4483 -4484 4485 0
-4485 4484 0
-4485 -4483 0
c Var 'aux788' direct represents '2' with '-4484'
4483 4485 -4484 0
c Encoding variable: aux789 with domain: int(0..2) (representing constraint (dijk_00004_00004_00003 + uijk_00004_00004_00003))
c Both direct and order encoding.
c Var 'aux789' order represents '0' with '4486'
c Var 'aux789' direct represents '0' with '4486'
c Var 'aux789' order represents '1' with '4487'
-4486 4487 0
c Var 'aux789' direct represents '1' with '4488'
4486 -4487 4488 0
-4488 4487 0
-4488 -4486 0
c Var 'aux789' direct represents '2' with '-4487'
4486 4488 -4487 0
c Encoding variable: aux790 with domain: int(0..4) (representing constraint (aux784 + aux789))
c Both direct and order encoding.
c Var 'aux790' order represents '0' with '4489'
c Var 'aux790' direct represents '0' with '4489'
c Var 'aux790' order represents '1' with '4490'
-4489 4490 0
c Var 'aux790' direct represents '1' with '4491'
4489 -4490 4491 0
-4491 4490 0
-4491 -4489 0
c Var 'aux790' order represents '2' with '4492'
-4490 4492 0
c Var 'aux790' direct represents '2' with '4493'
4490 -4492 4493 0
-4493 4492 0
-4493 -4490 0
c Var 'aux790' order represents '3' with '4494'
-4492 4494 0
c Var 'aux790' direct represents '3' with '4495'
4492 -4494 4495 0
-4495 4494 0
-4495 -4492 0
c Var 'aux790' direct represents '4' with '-4494'
4489 4491 4493 4495 -4494 0
c Encoding variable: aux791 with domain: int(0..4) (representing constraint (aux787 + aux785))
c Both direct and order encoding.
c Var 'aux791' order represents '0' with '4496'
c Var 'aux791' direct represents '0' with '4496'
c Var 'aux791' order represents '1' with '4497'
-4496 4497 0
c Var 'aux791' direct represents '1' with '4498'
4496 -4497 4498 0
-4498 4497 0
-4498 -4496 0
c Var 'aux791' order represents '2' with '4499'
-4497 4499 0
c Var 'aux791' direct represents '2' with '4500'
4497 -4499 4500 0
-4500 4499 0
-4500 -4497 0
c Var 'aux791' order represents '3' with '4501'
-4499 4501 0
c Var 'aux791' direct represents '3' with '4502'
4499 -4501 4502 0
-4502 4501 0
-4502 -4499 0
c Var 'aux791' direct represents '4' with '-4501'
4496 4498 4500 4502 -4501 0
c Encoding variable: aux792 with domain: int(0..4) (representing constraint (aux786 + aux788))
c Both direct and order encoding.
c Var 'aux792' order represents '0' with '4503'
c Var 'aux792' direct represents '0' with '4503'
c Var 'aux792' order represents '1' with '4504'
-4503 4504 0
c Var 'aux792' direct represents '1' with '4505'
4503 -4504 4505 0
-4505 4504 0
-4505 -4503 0
c Var 'aux792' order represents '2' with '4506'
-4504 4506 0
c Var 'aux792' direct represents '2' with '4507'
4504 -4506 4507 0
-4507 4506 0
-4507 -4504 0
c Var 'aux792' order represents '3' with '4508'
-4506 4508 0
c Var 'aux792' direct represents '3' with '4509'
4506 -4508 4509 0
-4509 4508 0
-4509 -4506 0
c Var 'aux792' direct represents '4' with '-4508'
4503 4505 4507 4509 -4508 0
c Encoding variable: aux793 with domain: int(0..8) (representing constraint ( - shift(agrid_00004_00004, -4) + aux792))
c Both direct and order encoding.
c Var 'aux793' order represents '0' with '4510'
c Var 'aux793' direct represents '0' with '4510'
c Var 'aux793' order represents '1' with '4511'
-4510 4511 0
c Var 'aux793' direct represents '1' with '4512'
4510 -4511 4512 0
-4512 4511 0
-4512 -4510 0
c Var 'aux793' order represents '2' with '4513'
-4511 4513 0
c Var 'aux793' direct represents '2' with '4514'
4511 -4513 4514 0
-4514 4513 0
-4514 -4511 0
c Var 'aux793' order represents '3' with '4515'
-4513 4515 0
c Var 'aux793' direct represents '3' with '4516'
4513 -4515 4516 0
-4516 4515 0
-4516 -4513 0
c Var 'aux793' order represents '4' with '4517'
-4515 4517 0
c Var 'aux793' direct represents '4' with '4518'
4515 -4517 4518 0
-4518 4517 0
-4518 -4515 0
c Var 'aux793' order represents '5' with '4519'
-4517 4519 0
c Var 'aux793' direct represents '5' with '4520'
4517 -4519 4520 0
-4520 4519 0
-4520 -4517 0
c Var 'aux793' order represents '6' with '4521'
-4519 4521 0
c Var 'aux793' direct represents '6' with '4522'
4519 -4521 4522 0
-4522 4521 0
-4522 -4519 0
c Var 'aux793' order represents '7' with '4523'
-4521 4523 0
c Var 'aux793' direct represents '7' with '4524'
4521 -4523 4524 0
-4524 4523 0
-4524 -4521 0
c Var 'aux793' direct represents '8' with '-4523'
4510 4512 4514 4516 4518 4520 4522 4524 -4523 0
c Encoding variable: aux794 with domain: bool (representing constraint (shift(1, -1) + rijk_00005_00004_00003))
c Var 'aux794' direct represents '0' with '-4525'
c Var 'aux794' direct represents '1' with '4525'
c Var 'aux794' order represents '1' with '1'
c Var 'aux794' order represents '0' with '-4525'
c Encoding variable: aux795 with domain: int(0..2) (representing constraint (rijk_00005_00004_00002 + aux794))
c Both direct and order encoding.
c Var 'aux795' order represents '0' with '4526'
c Var 'aux795' direct represents '0' with '4526'
c Var 'aux795' order represents '1' with '4527'
-4526 4527 0
c Var 'aux795' direct represents '1' with '4528'
4526 -4527 4528 0
-4528 4527 0
-4528 -4526 0
c Var 'aux795' direct represents '2' with '-4527'
4526 4528 -4527 0
c Encoding variable: aux796 with domain: int(0..2) (representing constraint (rijk_00005_00004_00001 + uijk_00005_00004_00001))
c Both direct and order encoding.
c Var 'aux796' order represents '0' with '4529'
c Var 'aux796' direct represents '0' with '4529'
c Var 'aux796' order represents '1' with '4530'
-4529 4530 0
c Var 'aux796' direct represents '1' with '4531'
4529 -4530 4531 0
-4531 4530 0
-4531 -4529 0
c Var 'aux796' direct represents '2' with '-4530'
4529 4531 -4530 0
c Encoding variable: aux797 with domain: int(0..2) (representing constraint (dijk_00005_00004_00001 + lijk_00005_00004_00001))
c Both direct and order encoding.
c Var 'aux797' order represents '0' with '4532'
c Var 'aux797' direct represents '0' with '4532'
c Var 'aux797' order represents '1' with '4533'
-4532 4533 0
c Var 'aux797' direct represents '1' with '4534'
4532 -4533 4534 0
-4534 4533 0
-4534 -4532 0
c Var 'aux797' direct represents '2' with '-4533'
4532 4534 -4533 0
c Encoding variable: aux798 with domain: int(0..2) (representing constraint (lijk_00005_00004_00003 + lijk_00005_00004_00002))
c Both direct and order encoding.
c Var 'aux798' order represents '0' with '4535'
c Var 'aux798' direct represents '0' with '4535'
c Var 'aux798' order represents '1' with '4536'
-4535 4536 0
c Var 'aux798' direct represents '1' with '4537'
4535 -4536 4537 0
-4537 4536 0
-4537 -4535 0
c Var 'aux798' direct represents '2' with '-4536'
4535 4537 -4536 0
c Encoding variable: aux799 with domain: int(0..2) (representing constraint (uijk_00005_00004_00003 + uijk_00005_00004_00002))
c Both direct and order encoding.
c Var 'aux799' order represents '0' with '4538'
c Var 'aux799' direct represents '0' with '4538'
c Var 'aux799' order represents '1' with '4539'
-4538 4539 0
c Var 'aux799' direct represents '1' with '4540'
4538 -4539 4540 0
-4540 4539 0
-4540 -4538 0
c Var 'aux799' direct represents '2' with '-4539'
4538 4540 -4539 0
c Encoding variable: aux800 with domain: int(0..2) (representing constraint (dijk_00005_00004_00002 + dijk_00005_00004_00003))
c Both direct and order encoding.
c Var 'aux800' order represents '0' with '4541'
c Var 'aux800' direct represents '0' with '4541'
c Var 'aux800' order represents '1' with '4542'
-4541 4542 0
c Var 'aux800' direct represents '1' with '4543'
4541 -4542 4543 0
-4543 4542 0
-4543 -4541 0
c Var 'aux800' direct represents '2' with '-4542'
4541 4543 -4542 0
c Encoding variable: aux801 with domain: int(0..4) (representing constraint (aux795 + aux800))
c Both direct and order encoding.
c Var 'aux801' order represents '0' with '4544'
c Var 'aux801' direct represents '0' with '4544'
c Var 'aux801' order represents '1' with '4545'
-4544 4545 0
c Var 'aux801' direct represents '1' with '4546'
4544 -4545 4546 0
-4546 4545 0
-4546 -4544 0
c Var 'aux801' order represents '2' with '4547'
-4545 4547 0
c Var 'aux801' direct represents '2' with '4548'
4545 -4547 4548 0
-4548 4547 0
-4548 -4545 0
c Var 'aux801' order represents '3' with '4549'
-4547 4549 0
c Var 'aux801' direct represents '3' with '4550'
4547 -4549 4550 0
-4550 4549 0
-4550 -4547 0
c Var 'aux801' direct represents '4' with '-4549'
4544 4546 4548 4550 -4549 0
c Encoding variable: aux802 with domain: int(0..4) (representing constraint (aux798 + aux796))
c Both direct and order encoding.
c Var 'aux802' order represents '0' with '4551'
c Var 'aux802' direct represents '0' with '4551'
c Var 'aux802' order represents '1' with '4552'
-4551 4552 0
c Var 'aux802' direct represents '1' with '4553'
4551 -4552 4553 0
-4553 4552 0
-4553 -4551 0
c Var 'aux802' order represents '2' with '4554'
-4552 4554 0
c Var 'aux802' direct represents '2' with '4555'
4552 -4554 4555 0
-4555 4554 0
-4555 -4552 0
c Var 'aux802' order represents '3' with '4556'
-4554 4556 0
c Var 'aux802' direct represents '3' with '4557'
4554 -4556 4557 0
-4557 4556 0
-4557 -4554 0
c Var 'aux802' direct represents '4' with '-4556'
4551 4553 4555 4557 -4556 0
c Encoding variable: aux803 with domain: int(0..4) (representing constraint (aux797 + aux799))
c Both direct and order encoding.
c Var 'aux803' order represents '0' with '4558'
c Var 'aux803' direct represents '0' with '4558'
c Var 'aux803' order represents '1' with '4559'
-4558 4559 0
c Var 'aux803' direct represents '1' with '4560'
4558 -4559 4560 0
-4560 4559 0
-4560 -4558 0
c Var 'aux803' order represents '2' with '4561'
-4559 4561 0
c Var 'aux803' direct represents '2' with '4562'
4559 -4561 4562 0
-4562 4561 0
-4562 -4559 0
c Var 'aux803' order represents '3' with '4563'
-4561 4563 0
c Var 'aux803' direct represents '3' with '4564'
4561 -4563 4564 0
-4564 4563 0
-4564 -4561 0
c Var 'aux803' direct represents '4' with '-4563'
4558 4560 4562 4564 -4563 0
c Encoding variable: aux804 with domain: int(0..8) (representing constraint ( - shift(agrid_00005_00004, -4) + aux803))
c Both direct and order encoding.
c Var 'aux804' order represents '0' with '4565'
c Var 'aux804' direct represents '0' with '4565'
c Var 'aux804' order represents '1' with '4566'
-4565 4566 0
c Var 'aux804' direct represents '1' with '4567'
4565 -4566 4567 0
-4567 4566 0
-4567 -4565 0
c Var 'aux804' order represents '2' with '4568'
-4566 4568 0
c Var 'aux804' direct represents '2' with '4569'
4566 -4568 4569 0
-4569 4568 0
-4569 -4566 0
c Var 'aux804' order represents '3' with '4570'
-4568 4570 0
c Var 'aux804' direct represents '3' with '4571'
4568 -4570 4571 0
-4571 4570 0
-4571 -4568 0
c Var 'aux804' order represents '4' with '4572'
-4570 4572 0
c Var 'aux804' direct represents '4' with '4573'
4570 -4572 4573 0
-4573 4572 0
-4573 -4570 0
c Var 'aux804' order represents '5' with '4574'
-4572 4574 0
c Var 'aux804' direct represents '5' with '4575'
4572 -4574 4575 0
-4575 4574 0
-4575 -4572 0
c Var 'aux804' order represents '6' with '4576'
-4574 4576 0
c Var 'aux804' direct represents '6' with '4577'
4574 -4576 4577 0
-4577 4576 0
-4577 -4574 0
c Var 'aux804' order represents '7' with '4578'
-4576 4578 0
c Var 'aux804' direct represents '7' with '4579'
4576 -4578 4579 0
-4579 4578 0
-4579 -4576 0
c Var 'aux804' direct represents '8' with '-4578'
4565 4567 4569 4571 4573 4575 4577 4579 -4578 0
c Encoding variable: aux805 with domain: int(0) (representing constraint (dijk_00006_00004_00003 + shift(1, -1)))
c Var 'aux805' direct represents '0' with '4580'
4580 0
c Encoding variable: aux806 with domain: bool (representing constraint (aux805 + uijk_00006_00004_00003))
c Var 'aux806' direct represents '0' with '-4581'
c Var 'aux806' direct represents '1' with '4581'
c Var 'aux806' order represents '1' with '1'
c Var 'aux806' order represents '0' with '-4581'
c Encoding variable: aux807 with domain: int(0..2) (representing constraint (rijk_00006_00004_00001 + aux806))
c Both direct and order encoding.
c Var 'aux807' order represents '0' with '4582'
c Var 'aux807' direct represents '0' with '4582'
c Var 'aux807' order represents '1' with '4583'
-4582 4583 0
c Var 'aux807' direct represents '1' with '4584'
4582 -4583 4584 0
-4584 4583 0
-4584 -4582 0
c Var 'aux807' direct represents '2' with '-4583'
4582 4584 -4583 0
c Encoding variable: aux808 with domain: int(0..2) (representing constraint (dijk_00006_00004_00002 + dijk_00006_00004_00001))
c Both direct and order encoding.
c Var 'aux808' order represents '0' with '4585'
c Var 'aux808' direct represents '0' with '4585'
c Var 'aux808' order represents '1' with '4586'
-4585 4586 0
c Var 'aux808' direct represents '1' with '4587'
4585 -4586 4587 0
-4587 4586 0
-4587 -4585 0
c Var 'aux808' direct represents '2' with '-4586'
4585 4587 -4586 0
c Encoding variable: aux809 with domain: int(0..2) (representing constraint (lijk_00006_00004_00003 + lijk_00006_00004_00001))
c Both direct and order encoding.
c Var 'aux809' order represents '0' with '4588'
c Var 'aux809' direct represents '0' with '4588'
c Var 'aux809' order represents '1' with '4589'
-4588 4589 0
c Var 'aux809' direct represents '1' with '4590'
4588 -4589 4590 0
-4590 4589 0
-4590 -4588 0
c Var 'aux809' direct represents '2' with '-4589'
4588 4590 -4589 0
c Encoding variable: aux810 with domain: int(0..2) (representing constraint (lijk_00006_00004_00002 + uijk_00006_00004_00002))
c Both direct and order encoding.
c Var 'aux810' order represents '0' with '4591'
c Var 'aux810' direct represents '0' with '4591'
c Var 'aux810' order represents '1' with '4592'
-4591 4592 0
c Var 'aux810' direct represents '1' with '4593'
4591 -4592 4593 0
-4593 4592 0
-4593 -4591 0
c Var 'aux810' direct represents '2' with '-4592'
4591 4593 -4592 0
c Encoding variable: aux811 with domain: int(0..2) (representing constraint (rijk_00006_00004_00002 + uijk_00006_00004_00001))
c Both direct and order encoding.
c Var 'aux811' order represents '0' with '4594'
c Var 'aux811' direct represents '0' with '4594'
c Var 'aux811' order represents '1' with '4595'
-4594 4595 0
c Var 'aux811' direct represents '1' with '4596'
4594 -4595 4596 0
-4596 4595 0
-4596 -4594 0
c Var 'aux811' direct represents '2' with '-4595'
4594 4596 -4595 0
c Encoding variable: aux812 with domain: int(0..3) (representing constraint (rijk_00006_00004_00003 + aux811))
c Both direct and order encoding.
c Var 'aux812' order represents '0' with '4597'
c Var 'aux812' direct represents '0' with '4597'
c Var 'aux812' order represents '1' with '4598'
-4597 4598 0
c Var 'aux812' direct represents '1' with '4599'
4597 -4598 4599 0
-4599 4598 0
-4599 -4597 0
c Var 'aux812' order represents '2' with '4600'
-4598 4600 0
c Var 'aux812' direct represents '2' with '4601'
4598 -4600 4601 0
-4601 4600 0
-4601 -4598 0
c Var 'aux812' direct represents '3' with '-4600'
4597 4599 4601 -4600 0
c Encoding variable: aux813 with domain: int(0..4) (representing constraint (aux809 + aux808))
c Both direct and order encoding.
c Var 'aux813' order represents '0' with '4602'
c Var 'aux813' direct represents '0' with '4602'
c Var 'aux813' order represents '1' with '4603'
-4602 4603 0
c Var 'aux813' direct represents '1' with '4604'
4602 -4603 4604 0
-4604 4603 0
-4604 -4602 0
c Var 'aux813' order represents '2' with '4605'
-4603 4605 0
c Var 'aux813' direct represents '2' with '4606'
4603 -4605 4606 0
-4606 4605 0
-4606 -4603 0
c Var 'aux813' order represents '3' with '4607'
-4605 4607 0
c Var 'aux813' direct represents '3' with '4608'
4605 -4607 4608 0
-4608 4607 0
-4608 -4605 0
c Var 'aux813' direct represents '4' with '-4607'
4602 4604 4606 4608 -4607 0
c Encoding variable: aux814 with domain: int(0..4) (representing constraint (aux807 + aux810))
c Both direct and order encoding.
c Var 'aux814' order represents '0' with '4609'
c Var 'aux814' direct represents '0' with '4609'
c Var 'aux814' order represents '1' with '4610'
-4609 4610 0
c Var 'aux814' direct represents '1' with '4611'
4609 -4610 4611 0
-4611 4610 0
-4611 -4609 0
c Var 'aux814' order represents '2' with '4612'
-4610 4612 0
c Var 'aux814' direct represents '2' with '4613'
4610 -4612 4613 0
-4613 4612 0
-4613 -4610 0
c Var 'aux814' order represents '3' with '4614'
-4612 4614 0
c Var 'aux814' direct represents '3' with '4615'
4612 -4614 4615 0
-4615 4614 0
-4615 -4612 0
c Var 'aux814' direct represents '4' with '-4614'
4609 4611 4613 4615 -4614 0
c Encoding variable: aux815 with domain: int(0..7) (representing constraint (aux812 + aux814))
c Both direct and order encoding.
c Var 'aux815' order represents '0' with '4616'
c Var 'aux815' direct represents '0' with '4616'
c Var 'aux815' order represents '1' with '4617'
-4616 4617 0
c Var 'aux815' direct represents '1' with '4618'
4616 -4617 4618 0
-4618 4617 0
-4618 -4616 0
c Var 'aux815' order represents '2' with '4619'
-4617 4619 0
c Var 'aux815' direct represents '2' with '4620'
4617 -4619 4620 0
-4620 4619 0
-4620 -4617 0
c Var 'aux815' order represents '3' with '4621'
-4619 4621 0
c Var 'aux815' direct represents '3' with '4622'
4619 -4621 4622 0
-4622 4621 0
-4622 -4619 0
c Var 'aux815' order represents '4' with '4623'
-4621 4623 0
c Var 'aux815' direct represents '4' with '4624'
4621 -4623 4624 0
-4624 4623 0
-4624 -4621 0
c Var 'aux815' order represents '5' with '4625'
-4623 4625 0
c Var 'aux815' direct represents '5' with '4626'
4623 -4625 4626 0
-4626 4625 0
-4626 -4623 0
c Var 'aux815' order represents '6' with '4627'
-4625 4627 0
c Var 'aux815' direct represents '6' with '4628'
4625 -4627 4628 0
-4628 4627 0
-4628 -4625 0
c Var 'aux815' direct represents '7' with '-4627'
4616 4618 4620 4622 4624 4626 4628 -4627 0
c Encoding variable: aux816 with domain: int(0) (representing constraint (dijk_00007_00004_00002 + dijk_00007_00004_00003))
c Var 'aux816' direct represents '0' with '4629'
4629 0
c Encoding variable: aux817 with domain: int(0) (representing constraint (shift(1, -1) + aux816))
c Var 'aux817' direct represents '0' with '4630'
4630 0
c Encoding variable: aux818 with domain: bool (representing constraint (aux817 + uijk_00007_00004_00003))
c Var 'aux818' direct represents '0' with '-4631'
c Var 'aux818' direct represents '1' with '4631'
c Var 'aux818' order represents '1' with '1'
c Var 'aux818' order represents '0' with '-4631'
c Encoding variable: aux819 with domain: int(0..2) (representing constraint (rijk_00007_00004_00002 + aux818))
c Both direct and order encoding.
c Var 'aux819' order represents '0' with '4632'
c Var 'aux819' direct represents '0' with '4632'
c Var 'aux819' order represents '1' with '4633'
-4632 4633 0
c Var 'aux819' direct represents '1' with '4634'
4632 -4633 4634 0
-4634 4633 0
-4634 -4632 0
c Var 'aux819' direct represents '2' with '-4633'
4632 4634 -4633 0
c Encoding variable: aux820 with domain: int(0..2) (representing constraint (rijk_00007_00004_00001 + dijk_00007_00004_00001))
c Both direct and order encoding.
c Var 'aux820' order represents '0' with '4635'
c Var 'aux820' direct represents '0' with '4635'
c Var 'aux820' order represents '1' with '4636'
-4635 4636 0
c Var 'aux820' direct represents '1' with '4637'
4635 -4636 4637 0
-4637 4636 0
-4637 -4635 0
c Var 'aux820' direct represents '2' with '-4636'
4635 4637 -4636 0
c Encoding variable: aux821 with domain: int(0..2) (representing constraint (lijk_00007_00004_00002 + lijk_00007_00004_00003))
c Both direct and order encoding.
c Var 'aux821' order represents '0' with '4638'
c Var 'aux821' direct represents '0' with '4638'
c Var 'aux821' order represents '1' with '4639'
-4638 4639 0
c Var 'aux821' direct represents '1' with '4640'
4638 -4639 4640 0
-4640 4639 0
-4640 -4638 0
c Var 'aux821' direct represents '2' with '-4639'
4638 4640 -4639 0
c Encoding variable: aux822 with domain: int(0..2) (representing constraint (uijk_00007_00004_00002 + uijk_00007_00004_00001))
c Both direct and order encoding.
c Var 'aux822' order represents '0' with '4641'
c Var 'aux822' direct represents '0' with '4641'
c Var 'aux822' order represents '1' with '4642'
-4641 4642 0
c Var 'aux822' direct represents '1' with '4643'
4641 -4642 4643 0
-4643 4642 0
-4643 -4641 0
c Var 'aux822' direct represents '2' with '-4642'
4641 4643 -4642 0
c Encoding variable: aux823 with domain: int(0..2) (representing constraint (lijk_00007_00004_00001 + rijk_00007_00004_00003))
c Both direct and order encoding.
c Var 'aux823' order represents '0' with '4644'
c Var 'aux823' direct represents '0' with '4644'
c Var 'aux823' order represents '1' with '4645'
-4644 4645 0
c Var 'aux823' direct represents '1' with '4646'
4644 -4645 4646 0
-4646 4645 0
-4646 -4644 0
c Var 'aux823' direct represents '2' with '-4645'
4644 4646 -4645 0
c Encoding variable: aux824 with domain: int(0..4) (representing constraint (aux819 + aux823))
c Both direct and order encoding.
c Var 'aux824' order represents '0' with '4647'
c Var 'aux824' direct represents '0' with '4647'
c Var 'aux824' order represents '1' with '4648'
-4647 4648 0
c Var 'aux824' direct represents '1' with '4649'
4647 -4648 4649 0
-4649 4648 0
-4649 -4647 0
c Var 'aux824' order represents '2' with '4650'
-4648 4650 0
c Var 'aux824' direct represents '2' with '4651'
4648 -4650 4651 0
-4651 4650 0
-4651 -4648 0
c Var 'aux824' order represents '3' with '4652'
-4650 4652 0
c Var 'aux824' direct represents '3' with '4653'
4650 -4652 4653 0
-4653 4652 0
-4653 -4650 0
c Var 'aux824' direct represents '4' with '-4652'
4647 4649 4651 4653 -4652 0
c Encoding variable: aux825 with domain: int(0..4) (representing constraint (aux820 + aux821))
c Both direct and order encoding.
c Var 'aux825' order represents '0' with '4654'
c Var 'aux825' direct represents '0' with '4654'
c Var 'aux825' order represents '1' with '4655'
-4654 4655 0
c Var 'aux825' direct represents '1' with '4656'
4654 -4655 4656 0
-4656 4655 0
-4656 -4654 0
c Var 'aux825' order represents '2' with '4657'
-4655 4657 0
c Var 'aux825' direct represents '2' with '4658'
4655 -4657 4658 0
-4658 4657 0
-4658 -4655 0
c Var 'aux825' order represents '3' with '4659'
-4657 4659 0
c Var 'aux825' direct represents '3' with '4660'
4657 -4659 4660 0
-4660 4659 0
-4660 -4657 0
c Var 'aux825' direct represents '4' with '-4659'
4654 4656 4658 4660 -4659 0
c Encoding variable: aux826 with domain: int(0..6) (representing constraint (aux822 + aux825))
c Both direct and order encoding.
c Var 'aux826' order represents '0' with '4661'
c Var 'aux826' direct represents '0' with '4661'
c Var 'aux826' order represents '1' with '4662'
-4661 4662 0
c Var 'aux826' direct represents '1' with '4663'
4661 -4662 4663 0
-4663 4662 0
-4663 -4661 0
c Var 'aux826' order represents '2' with '4664'
-4662 4664 0
c Var 'aux826' direct represents '2' with '4665'
4662 -4664 4665 0
-4665 4664 0
-4665 -4662 0
c Var 'aux826' order represents '3' with '4666'
-4664 4666 0
c Var 'aux826' direct represents '3' with '4667'
4664 -4666 4667 0
-4667 4666 0
-4667 -4664 0
c Var 'aux826' order represents '4' with '4668'
-4666 4668 0
c Var 'aux826' direct represents '4' with '4669'
4666 -4668 4669 0
-4669 4668 0
-4669 -4666 0
c Var 'aux826' order represents '5' with '4670'
-4668 4670 0
c Var 'aux826' direct represents '5' with '4671'
4668 -4670 4671 0
-4671 4670 0
-4671 -4668 0
c Var 'aux826' direct represents '6' with '-4670'
4661 4663 4665 4667 4669 4671 -4670 0
c Encoding variable: aux827 with domain: int(0) (representing constraint (dijk_00008_00004_00001 + dijk_00008_00004_00002))
c Var 'aux827' direct represents '0' with '4672'
4672 0
c Encoding variable: aux828 with domain: int(0) (representing constraint (dijk_00008_00004_00003 + shift(1, -1)))
c Var 'aux828' direct represents '0' with '4673'
4673 0
c Encoding variable: aux829 with domain: int(0) (representing constraint (aux827 + aux828))
c Var 'aux829' direct represents '0' with '4674'
4674 0
c Encoding variable: aux830 with domain: bool (representing constraint (aux829 + uijk_00008_00004_00001))
c Var 'aux830' direct represents '0' with '-4675'
c Var 'aux830' direct represents '1' with '4675'
c Var 'aux830' order represents '1' with '1'
c Var 'aux830' order represents '0' with '-4675'
c Encoding variable: aux831 with domain: int(0..2) (representing constraint (rijk_00008_00004_00001 + aux830))
c Both direct and order encoding.
c Var 'aux831' order represents '0' with '4676'
c Var 'aux831' direct represents '0' with '4676'
c Var 'aux831' order represents '1' with '4677'
-4676 4677 0
c Var 'aux831' direct represents '1' with '4678'
4676 -4677 4678 0
-4678 4677 0
-4678 -4676 0
c Var 'aux831' direct represents '2' with '-4677'
4676 4678 -4677 0
c Encoding variable: aux832 with domain: int(0..2) (representing constraint (lijk_00008_00004_00003 + rijk_00008_00004_00002))
c Both direct and order encoding.
c Var 'aux832' order represents '0' with '4679'
c Var 'aux832' direct represents '0' with '4679'
c Var 'aux832' order represents '1' with '4680'
-4679 4680 0
c Var 'aux832' direct represents '1' with '4681'
4679 -4680 4681 0
-4681 4680 0
-4681 -4679 0
c Var 'aux832' direct represents '2' with '-4680'
4679 4681 -4680 0
c Encoding variable: aux833 with domain: int(0..2) (representing constraint (lijk_00008_00004_00002 + uijk_00008_00004_00002))
c Both direct and order encoding.
c Var 'aux833' order represents '0' with '4682'
c Var 'aux833' direct represents '0' with '4682'
c Var 'aux833' order represents '1' with '4683'
-4682 4683 0
c Var 'aux833' direct represents '1' with '4684'
4682 -4683 4684 0
-4684 4683 0
-4684 -4682 0
c Var 'aux833' direct represents '2' with '-4683'
4682 4684 -4683 0
c Encoding variable: aux834 with domain: int(0..2) (representing constraint (lijk_00008_00004_00001 + uijk_00008_00004_00003))
c Both direct and order encoding.
c Var 'aux834' order represents '0' with '4685'
c Var 'aux834' direct represents '0' with '4685'
c Var 'aux834' order represents '1' with '4686'
-4685 4686 0
c Var 'aux834' direct represents '1' with '4687'
4685 -4686 4687 0
-4687 4686 0
-4687 -4685 0
c Var 'aux834' direct represents '2' with '-4686'
4685 4687 -4686 0
c Encoding variable: aux835 with domain: int(0..3) (representing constraint (rijk_00008_00004_00003 + aux834))
c Both direct and order encoding.
c Var 'aux835' order represents '0' with '4688'
c Var 'aux835' direct represents '0' with '4688'
c Var 'aux835' order represents '1' with '4689'
-4688 4689 0
c Var 'aux835' direct represents '1' with '4690'
4688 -4689 4690 0
-4690 4689 0
-4690 -4688 0
c Var 'aux835' order represents '2' with '4691'
-4689 4691 0
c Var 'aux835' direct represents '2' with '4692'
4689 -4691 4692 0
-4692 4691 0
-4692 -4689 0
c Var 'aux835' direct represents '3' with '-4691'
4688 4690 4692 -4691 0
c Encoding variable: aux836 with domain: int(0..4) (representing constraint (aux832 + aux831))
c Both direct and order encoding.
c Var 'aux836' order represents '0' with '4693'
c Var 'aux836' direct represents '0' with '4693'
c Var 'aux836' order represents '1' with '4694'
-4693 4694 0
c Var 'aux836' direct represents '1' with '4695'
4693 -4694 4695 0
-4695 4694 0
-4695 -4693 0
c Var 'aux836' order represents '2' with '4696'
-4694 4696 0
c Var 'aux836' direct represents '2' with '4697'
4694 -4696 4697 0
-4697 4696 0
-4697 -4694 0
c Var 'aux836' order represents '3' with '4698'
-4696 4698 0
c Var 'aux836' direct represents '3' with '4699'
4696 -4698 4699 0
-4699 4698 0
-4699 -4696 0
c Var 'aux836' direct represents '4' with '-4698'
4693 4695 4697 4699 -4698 0
c Encoding variable: aux837 with domain: int(0..5) (representing constraint (aux833 + aux835))
c Both direct and order encoding.
c Var 'aux837' order represents '0' with '4700'
c Var 'aux837' direct represents '0' with '4700'
c Var 'aux837' order represents '1' with '4701'
-4700 4701 0
c Var 'aux837' direct represents '1' with '4702'
4700 -4701 4702 0
-4702 4701 0
-4702 -4700 0
c Var 'aux837' order represents '2' with '4703'
-4701 4703 0
c Var 'aux837' direct represents '2' with '4704'
4701 -4703 4704 0
-4704 4703 0
-4704 -4701 0
c Var 'aux837' order represents '3' with '4705'
-4703 4705 0
c Var 'aux837' direct represents '3' with '4706'
4703 -4705 4706 0
-4706 4705 0
-4706 -4703 0
c Var 'aux837' order represents '4' with '4707'
-4705 4707 0
c Var 'aux837' direct represents '4' with '4708'
4705 -4707 4708 0
-4708 4707 0
-4708 -4705 0
c Var 'aux837' direct represents '5' with '-4707'
4700 4702 4704 4706 4708 -4707 0
c Encoding variable: aux838 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00001_00005_00003))
c Var 'aux838' direct represents '0' with '4709'
4709 0
c Encoding variable: aux839 with domain: int(0) (representing constraint (uijk_00001_00005_00001 + uijk_00001_00005_00002))
c Var 'aux839' direct represents '0' with '4710'
4710 0
c Encoding variable: aux840 with domain: int(0) (representing constraint (aux838 + aux839))
c Var 'aux840' direct represents '0' with '4711'
4711 0
c Encoding variable: aux841 with domain: bool (representing constraint (aux840 + rijk_00001_00005_00002))
c Var 'aux841' direct represents '0' with '-4712'
c Var 'aux841' direct represents '1' with '4712'
c Var 'aux841' order represents '1' with '1'
c Var 'aux841' order represents '0' with '-4712'
c Encoding variable: aux842 with domain: int(0..2) (representing constraint (dijk_00001_00005_00002 + aux841))
c Both direct and order encoding.
c Var 'aux842' order represents '0' with '4713'
c Var 'aux842' direct represents '0' with '4713'
c Var 'aux842' order represents '1' with '4714'
-4713 4714 0
c Var 'aux842' direct represents '1' with '4715'
4713 -4714 4715 0
-4715 4714 0
-4715 -4713 0
c Var 'aux842' direct represents '2' with '-4714'
4713 4715 -4714 0
c Encoding variable: aux843 with domain: int(0..2) (representing constraint (dijk_00001_00005_00001 + dijk_00001_00005_00003))
c Both direct and order encoding.
c Var 'aux843' order represents '0' with '4716'
c Var 'aux843' direct represents '0' with '4716'
c Var 'aux843' order represents '1' with '4717'
-4716 4717 0
c Var 'aux843' direct represents '1' with '4718'
4716 -4717 4718 0
-4718 4717 0
-4718 -4716 0
c Var 'aux843' direct represents '2' with '-4717'
4716 4718 -4717 0
c Encoding variable: aux844 with domain: int(0..2) (representing constraint (rijk_00001_00005_00001 + lijk_00001_00005_00003))
c Both direct and order encoding.
c Var 'aux844' order represents '0' with '4719'
c Var 'aux844' direct represents '0' with '4719'
c Var 'aux844' order represents '1' with '4720'
-4719 4720 0
c Var 'aux844' direct represents '1' with '4721'
4719 -4720 4721 0
-4721 4720 0
-4721 -4719 0
c Var 'aux844' direct represents '2' with '-4720'
4719 4721 -4720 0
c Encoding variable: aux845 with domain: int(0..2) (representing constraint (lijk_00001_00005_00002 + rijk_00001_00005_00003))
c Both direct and order encoding.
c Var 'aux845' order represents '0' with '4722'
c Var 'aux845' direct represents '0' with '4722'
c Var 'aux845' order represents '1' with '4723'
-4722 4723 0
c Var 'aux845' direct represents '1' with '4724'
4722 -4723 4724 0
-4724 4723 0
-4724 -4722 0
c Var 'aux845' direct represents '2' with '-4723'
4722 4724 -4723 0
c Encoding variable: aux846 with domain: int(0..3) (representing constraint (lijk_00001_00005_00001 + aux845))
c Both direct and order encoding.
c Var 'aux846' order represents '0' with '4725'
c Var 'aux846' direct represents '0' with '4725'
c Var 'aux846' order represents '1' with '4726'
-4725 4726 0
c Var 'aux846' direct represents '1' with '4727'
4725 -4726 4727 0
-4727 4726 0
-4727 -4725 0
c Var 'aux846' order represents '2' with '4728'
-4726 4728 0
c Var 'aux846' direct represents '2' with '4729'
4726 -4728 4729 0
-4729 4728 0
-4729 -4726 0
c Var 'aux846' direct represents '3' with '-4728'
4725 4727 4729 -4728 0
c Encoding variable: aux847 with domain: int(0..4) (representing constraint (aux843 + aux842))
c Both direct and order encoding.
c Var 'aux847' order represents '0' with '4730'
c Var 'aux847' direct represents '0' with '4730'
c Var 'aux847' order represents '1' with '4731'
-4730 4731 0
c Var 'aux847' direct represents '1' with '4732'
4730 -4731 4732 0
-4732 4731 0
-4732 -4730 0
c Var 'aux847' order represents '2' with '4733'
-4731 4733 0
c Var 'aux847' direct represents '2' with '4734'
4731 -4733 4734 0
-4734 4733 0
-4734 -4731 0
c Var 'aux847' order represents '3' with '4735'
-4733 4735 0
c Var 'aux847' direct represents '3' with '4736'
4733 -4735 4736 0
-4736 4735 0
-4736 -4733 0
c Var 'aux847' direct represents '4' with '-4735'
4730 4732 4734 4736 -4735 0
c Encoding variable: aux848 with domain: int(0..5) (representing constraint (aux844 + aux846))
c Both direct and order encoding.
c Var 'aux848' order represents '0' with '4737'
c Var 'aux848' direct represents '0' with '4737'
c Var 'aux848' order represents '1' with '4738'
-4737 4738 0
c Var 'aux848' direct represents '1' with '4739'
4737 -4738 4739 0
-4739 4738 0
-4739 -4737 0
c Var 'aux848' order represents '2' with '4740'
-4738 4740 0
c Var 'aux848' direct represents '2' with '4741'
4738 -4740 4741 0
-4741 4740 0
-4741 -4738 0
c Var 'aux848' order represents '3' with '4742'
-4740 4742 0
c Var 'aux848' direct represents '3' with '4743'
4740 -4742 4743 0
-4743 4742 0
-4743 -4740 0
c Var 'aux848' order represents '4' with '4744'
-4742 4744 0
c Var 'aux848' direct represents '4' with '4745'
4742 -4744 4745 0
-4745 4744 0
-4745 -4742 0
c Var 'aux848' direct represents '5' with '-4744'
4737 4739 4741 4743 4745 -4744 0
c Encoding variable: aux849 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00002_00005_00003))
c Var 'aux849' direct represents '0' with '4746'
4746 0
c Encoding variable: aux850 with domain: int(0) (representing constraint (uijk_00002_00005_00002 + aux849))
c Var 'aux850' direct represents '0' with '4747'
4747 0
c Encoding variable: aux851 with domain: bool (representing constraint (aux850 + lijk_00002_00005_00002))
c Var 'aux851' direct represents '0' with '-4748'
c Var 'aux851' direct represents '1' with '4748'
c Var 'aux851' order represents '1' with '1'
c Var 'aux851' order represents '0' with '-4748'
c Encoding variable: aux852 with domain: int(0..2) (representing constraint (dijk_00002_00005_00003 + aux851))
c Both direct and order encoding.
c Var 'aux852' order represents '0' with '4749'
c Var 'aux852' direct represents '0' with '4749'
c Var 'aux852' order represents '1' with '4750'
-4749 4750 0
c Var 'aux852' direct represents '1' with '4751'
4749 -4750 4751 0
-4751 4750 0
-4751 -4749 0
c Var 'aux852' direct represents '2' with '-4750'
4749 4751 -4750 0
c Encoding variable: aux853 with domain: int(0..2) (representing constraint (dijk_00002_00005_00002 + lijk_00002_00005_00003))
c Both direct and order encoding.
c Var 'aux853' order represents '0' with '4752'
c Var 'aux853' direct represents '0' with '4752'
c Var 'aux853' order represents '1' with '4753'
-4752 4753 0
c Var 'aux853' direct represents '1' with '4754'
4752 -4753 4754 0
-4754 4753 0
-4754 -4752 0
c Var 'aux853' direct represents '2' with '-4753'
4752 4754 -4753 0
c Encoding variable: aux854 with domain: int(0..2) (representing constraint (rijk_00002_00005_00001 + dijk_00002_00005_00001))
c Both direct and order encoding.
c Var 'aux854' order represents '0' with '4755'
c Var 'aux854' direct represents '0' with '4755'
c Var 'aux854' order represents '1' with '4756'
-4755 4756 0
c Var 'aux854' direct represents '1' with '4757'
4755 -4756 4757 0
-4757 4756 0
-4757 -4755 0
c Var 'aux854' direct represents '2' with '-4756'
4755 4757 -4756 0
c Encoding variable: aux855 with domain: int(0..2) (representing constraint (rijk_00002_00005_00002 + lijk_00002_00005_00001))
c Both direct and order encoding.
c Var 'aux855' order represents '0' with '4758'
c Var 'aux855' direct represents '0' with '4758'
c Var 'aux855' order represents '1' with '4759'
-4758 4759 0
c Var 'aux855' direct represents '1' with '4760'
4758 -4759 4760 0
-4760 4759 0
-4760 -4758 0
c Var 'aux855' direct represents '2' with '-4759'
4758 4760 -4759 0
c Encoding variable: aux856 with domain: int(0..2) (representing constraint (rijk_00002_00005_00003 + uijk_00002_00005_00001))
c Both direct and order encoding.
c Var 'aux856' order represents '0' with '4761'
c Var 'aux856' direct represents '0' with '4761'
c Var 'aux856' order represents '1' with '4762'
-4761 4762 0
c Var 'aux856' direct represents '1' with '4763'
4761 -4762 4763 0
-4763 4762 0
-4763 -4761 0
c Var 'aux856' direct represents '2' with '-4762'
4761 4763 -4762 0
c Encoding variable: aux857 with domain: int(0..4) (representing constraint (aux852 + aux856))
c Both direct and order encoding.
c Var 'aux857' order represents '0' with '4764'
c Var 'aux857' direct represents '0' with '4764'
c Var 'aux857' order represents '1' with '4765'
-4764 4765 0
c Var 'aux857' direct represents '1' with '4766'
4764 -4765 4766 0
-4766 4765 0
-4766 -4764 0
c Var 'aux857' order represents '2' with '4767'
-4765 4767 0
c Var 'aux857' direct represents '2' with '4768'
4765 -4767 4768 0
-4768 4767 0
-4768 -4765 0
c Var 'aux857' order represents '3' with '4769'
-4767 4769 0
c Var 'aux857' direct represents '3' with '4770'
4767 -4769 4770 0
-4770 4769 0
-4770 -4767 0
c Var 'aux857' direct represents '4' with '-4769'
4764 4766 4768 4770 -4769 0
c Encoding variable: aux858 with domain: int(0..4) (representing constraint (aux853 + aux854))
c Both direct and order encoding.
c Var 'aux858' order represents '0' with '4771'
c Var 'aux858' direct represents '0' with '4771'
c Var 'aux858' order represents '1' with '4772'
-4771 4772 0
c Var 'aux858' direct represents '1' with '4773'
4771 -4772 4773 0
-4773 4772 0
-4773 -4771 0
c Var 'aux858' order represents '2' with '4774'
-4772 4774 0
c Var 'aux858' direct represents '2' with '4775'
4772 -4774 4775 0
-4775 4774 0
-4775 -4772 0
c Var 'aux858' order represents '3' with '4776'
-4774 4776 0
c Var 'aux858' direct represents '3' with '4777'
4774 -4776 4777 0
-4777 4776 0
-4777 -4774 0
c Var 'aux858' direct represents '4' with '-4776'
4771 4773 4775 4777 -4776 0
c Encoding variable: aux859 with domain: int(0..6) (representing constraint (aux855 + aux858))
c Both direct and order encoding.
c Var 'aux859' order represents '0' with '4778'
c Var 'aux859' direct represents '0' with '4778'
c Var 'aux859' order represents '1' with '4779'
-4778 4779 0
c Var 'aux859' direct represents '1' with '4780'
4778 -4779 4780 0
-4780 4779 0
-4780 -4778 0
c Var 'aux859' order represents '2' with '4781'
-4779 4781 0
c Var 'aux859' direct represents '2' with '4782'
4779 -4781 4782 0
-4782 4781 0
-4782 -4779 0
c Var 'aux859' order represents '3' with '4783'
-4781 4783 0
c Var 'aux859' direct represents '3' with '4784'
4781 -4783 4784 0
-4784 4783 0
-4784 -4781 0
c Var 'aux859' order represents '4' with '4785'
-4783 4785 0
c Var 'aux859' direct represents '4' with '4786'
4783 -4785 4786 0
-4786 4785 0
-4786 -4783 0
c Var 'aux859' order represents '5' with '4787'
-4785 4787 0
c Var 'aux859' direct represents '5' with '4788'
4785 -4787 4788 0
-4788 4787 0
-4788 -4785 0
c Var 'aux859' direct represents '6' with '-4787'
4778 4780 4782 4784 4786 4788 -4787 0
c Encoding variable: aux860 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00003_00005_00003))
c Var 'aux860' direct represents '0' with '4789'
4789 0
c Encoding variable: aux861 with domain: bool (representing constraint (aux860 + dijk_00003_00005_00002))
c Var 'aux861' direct represents '0' with '-4790'
c Var 'aux861' direct represents '1' with '4790'
c Var 'aux861' order represents '1' with '1'
c Var 'aux861' order represents '0' with '-4790'
c Encoding variable: aux862 with domain: int(0..2) (representing constraint (rijk_00003_00005_00001 + aux861))
c Both direct and order encoding.
c Var 'aux862' order represents '0' with '4791'
c Var 'aux862' direct represents '0' with '4791'
c Var 'aux862' order represents '1' with '4792'
-4791 4792 0
c Var 'aux862' direct represents '1' with '4793'
4791 -4792 4793 0
-4793 4792 0
-4793 -4791 0
c Var 'aux862' direct represents '2' with '-4792'
4791 4793 -4792 0
c Encoding variable: aux863 with domain: int(0..2) (representing constraint (lijk_00003_00005_00003 + rijk_00003_00005_00003))
c Both direct and order encoding.
c Var 'aux863' order represents '0' with '4794'
c Var 'aux863' direct represents '0' with '4794'
c Var 'aux863' order represents '1' with '4795'
-4794 4795 0
c Var 'aux863' direct represents '1' with '4796'
4794 -4795 4796 0
-4796 4795 0
-4796 -4794 0
c Var 'aux863' direct represents '2' with '-4795'
4794 4796 -4795 0
c Encoding variable: aux864 with domain: int(0..2) (representing constraint (lijk_00003_00005_00002 + uijk_00003_00005_00001))
c Both direct and order encoding.
c Var 'aux864' order represents '0' with '4797'
c Var 'aux864' direct represents '0' with '4797'
c Var 'aux864' order represents '1' with '4798'
-4797 4798 0
c Var 'aux864' direct represents '1' with '4799'
4797 -4798 4799 0
-4799 4798 0
-4799 -4797 0
c Var 'aux864' direct represents '2' with '-4798'
4797 4799 -4798 0
c Encoding variable: aux865 with domain: int(0..2) (representing constraint (lijk_00003_00005_00001 + dijk_00003_00005_00001))
c Both direct and order encoding.
c Var 'aux865' order represents '0' with '4800'
c Var 'aux865' direct represents '0' with '4800'
c Var 'aux865' order represents '1' with '4801'
-4800 4801 0
c Var 'aux865' direct represents '1' with '4802'
4800 -4801 4802 0
-4802 4801 0
-4802 -4800 0
c Var 'aux865' direct represents '2' with '-4801'
4800 4802 -4801 0
c Encoding variable: aux866 with domain: int(0..2) (representing constraint (rijk_00003_00005_00002 + uijk_00003_00005_00002))
c Both direct and order encoding.
c Var 'aux866' order represents '0' with '4803'
c Var 'aux866' direct represents '0' with '4803'
c Var 'aux866' order represents '1' with '4804'
-4803 4804 0
c Var 'aux866' direct represents '1' with '4805'
4803 -4804 4805 0
-4805 4804 0
-4805 -4803 0
c Var 'aux866' direct represents '2' with '-4804'
4803 4805 -4804 0
c Encoding variable: aux867 with domain: int(0..3) (representing constraint (dijk_00003_00005_00003 + aux866))
c Both direct and order encoding.
c Var 'aux867' order represents '0' with '4806'
c Var 'aux867' direct represents '0' with '4806'
c Var 'aux867' order represents '1' with '4807'
-4806 4807 0
c Var 'aux867' direct represents '1' with '4808'
4806 -4807 4808 0
-4808 4807 0
-4808 -4806 0
c Var 'aux867' order represents '2' with '4809'
-4807 4809 0
c Var 'aux867' direct represents '2' with '4810'
4807 -4809 4810 0
-4810 4809 0
-4810 -4807 0
c Var 'aux867' direct represents '3' with '-4809'
4806 4808 4810 -4809 0
c Encoding variable: aux868 with domain: int(0..4) (representing constraint (aux864 + aux863))
c Both direct and order encoding.
c Var 'aux868' order represents '0' with '4811'
c Var 'aux868' direct represents '0' with '4811'
c Var 'aux868' order represents '1' with '4812'
-4811 4812 0
c Var 'aux868' direct represents '1' with '4813'
4811 -4812 4813 0
-4813 4812 0
-4813 -4811 0
c Var 'aux868' order represents '2' with '4814'
-4812 4814 0
c Var 'aux868' direct represents '2' with '4815'
4812 -4814 4815 0
-4815 4814 0
-4815 -4812 0
c Var 'aux868' order represents '3' with '4816'
-4814 4816 0
c Var 'aux868' direct represents '3' with '4817'
4814 -4816 4817 0
-4817 4816 0
-4817 -4814 0
c Var 'aux868' direct represents '4' with '-4816'
4811 4813 4815 4817 -4816 0
c Encoding variable: aux869 with domain: int(0..4) (representing constraint (aux862 + aux865))
c Both direct and order encoding.
c Var 'aux869' order represents '0' with '4818'
c Var 'aux869' direct represents '0' with '4818'
c Var 'aux869' order represents '1' with '4819'
-4818 4819 0
c Var 'aux869' direct represents '1' with '4820'
4818 -4819 4820 0
-4820 4819 0
-4820 -4818 0
c Var 'aux869' order represents '2' with '4821'
-4819 4821 0
c Var 'aux869' direct represents '2' with '4822'
4819 -4821 4822 0
-4822 4821 0
-4822 -4819 0
c Var 'aux869' order represents '3' with '4823'
-4821 4823 0
c Var 'aux869' direct represents '3' with '4824'
4821 -4823 4824 0
-4824 4823 0
-4824 -4821 0
c Var 'aux869' direct represents '4' with '-4823'
4818 4820 4822 4824 -4823 0
c Encoding variable: aux870 with domain: int(0..7) (representing constraint (aux867 + aux869))
c Both direct and order encoding.
c Var 'aux870' order represents '0' with '4825'
c Var 'aux870' direct represents '0' with '4825'
c Var 'aux870' order represents '1' with '4826'
-4825 4826 0
c Var 'aux870' direct represents '1' with '4827'
4825 -4826 4827 0
-4827 4826 0
-4827 -4825 0
c Var 'aux870' order represents '2' with '4828'
-4826 4828 0
c Var 'aux870' direct represents '2' with '4829'
4826 -4828 4829 0
-4829 4828 0
-4829 -4826 0
c Var 'aux870' order represents '3' with '4830'
-4828 4830 0
c Var 'aux870' direct represents '3' with '4831'
4828 -4830 4831 0
-4831 4830 0
-4831 -4828 0
c Var 'aux870' order represents '4' with '4832'
-4830 4832 0
c Var 'aux870' direct represents '4' with '4833'
4830 -4832 4833 0
-4833 4832 0
-4833 -4830 0
c Var 'aux870' order represents '5' with '4834'
-4832 4834 0
c Var 'aux870' direct represents '5' with '4835'
4832 -4834 4835 0
-4835 4834 0
-4835 -4832 0
c Var 'aux870' order represents '6' with '4836'
-4834 4836 0
c Var 'aux870' direct represents '6' with '4837'
4834 -4836 4837 0
-4837 4836 0
-4837 -4834 0
c Var 'aux870' direct represents '7' with '-4836'
4825 4827 4829 4831 4833 4835 4837 -4836 0
c Encoding variable: aux871 with domain: bool (representing constraint (shift(1, -1) + rijk_00004_00005_00003))
c Var 'aux871' direct represents '0' with '-4838'
c Var 'aux871' direct represents '1' with '4838'
c Var 'aux871' order represents '1' with '1'
c Var 'aux871' order represents '0' with '-4838'
c Encoding variable: aux872 with domain: int(0..2) (representing constraint (rijk_00004_00005_00002 + aux871))
c Both direct and order encoding.
c Var 'aux872' order represents '0' with '4839'
c Var 'aux872' direct represents '0' with '4839'
c Var 'aux872' order represents '1' with '4840'
-4839 4840 0
c Var 'aux872' direct represents '1' with '4841'
4839 -4840 4841 0
-4841 4840 0
-4841 -4839 0
c Var 'aux872' direct represents '2' with '-4840'
4839 4841 -4840 0
c Encoding variable: aux873 with domain: int(0..2) (representing constraint (rijk_00004_00005_00001 + uijk_00004_00005_00001))
c Both direct and order encoding.
c Var 'aux873' order represents '0' with '4842'
c Var 'aux873' direct represents '0' with '4842'
c Var 'aux873' order represents '1' with '4843'
-4842 4843 0
c Var 'aux873' direct represents '1' with '4844'
4842 -4843 4844 0
-4844 4843 0
-4844 -4842 0
c Var 'aux873' direct represents '2' with '-4843'
4842 4844 -4843 0
c Encoding variable: aux874 with domain: int(0..2) (representing constraint (uijk_00004_00005_00002 + lijk_00004_00005_00001))
c Both direct and order encoding.
c Var 'aux874' order represents '0' with '4845'
c Var 'aux874' direct represents '0' with '4845'
c Var 'aux874' order represents '1' with '4846'
-4845 4846 0
c Var 'aux874' direct represents '1' with '4847'
4845 -4846 4847 0
-4847 4846 0
-4847 -4845 0
c Var 'aux874' direct represents '2' with '-4846'
4845 4847 -4846 0
c Encoding variable: aux875 with domain: int(0..2) (representing constraint (lijk_00004_00005_00003 + lijk_00004_00005_00002))
c Both direct and order encoding.
c Var 'aux875' order represents '0' with '4848'
c Var 'aux875' direct represents '0' with '4848'
c Var 'aux875' order represents '1' with '4849'
-4848 4849 0
c Var 'aux875' direct represents '1' with '4850'
4848 -4849 4850 0
-4850 4849 0
-4850 -4848 0
c Var 'aux875' direct represents '2' with '-4849'
4848 4850 -4849 0
c Encoding variable: aux876 with domain: int(0..2) (representing constraint (dijk_00004_00005_00001 + uijk_00004_00005_00003))
c Both direct and order encoding.
c Var 'aux876' order represents '0' with '4851'
c Var 'aux876' direct represents '0' with '4851'
c Var 'aux876' order represents '1' with '4852'
-4851 4852 0
c Var 'aux876' direct represents '1' with '4853'
4851 -4852 4853 0
-4853 4852 0
-4853 -4851 0
c Var 'aux876' direct represents '2' with '-4852'
4851 4853 -4852 0
c Encoding variable: aux877 with domain: int(0..2) (representing constraint (dijk_00004_00005_00002 + dijk_00004_00005_00003))
c Both direct and order encoding.
c Var 'aux877' order represents '0' with '4854'
c Var 'aux877' direct represents '0' with '4854'
c Var 'aux877' order represents '1' with '4855'
-4854 4855 0
c Var 'aux877' direct represents '1' with '4856'
4854 -4855 4856 0
-4856 4855 0
-4856 -4854 0
c Var 'aux877' direct represents '2' with '-4855'
4854 4856 -4855 0
c Encoding variable: aux878 with domain: int(0..4) (representing constraint (aux873 + aux877))
c Both direct and order encoding.
c Var 'aux878' order represents '0' with '4857'
c Var 'aux878' direct represents '0' with '4857'
c Var 'aux878' order represents '1' with '4858'
-4857 4858 0
c Var 'aux878' direct represents '1' with '4859'
4857 -4858 4859 0
-4859 4858 0
-4859 -4857 0
c Var 'aux878' order represents '2' with '4860'
-4858 4860 0
c Var 'aux878' direct represents '2' with '4861'
4858 -4860 4861 0
-4861 4860 0
-4861 -4858 0
c Var 'aux878' order represents '3' with '4862'
-4860 4862 0
c Var 'aux878' direct represents '3' with '4863'
4860 -4862 4863 0
-4863 4862 0
-4863 -4860 0
c Var 'aux878' direct represents '4' with '-4862'
4857 4859 4861 4863 -4862 0
c Encoding variable: aux879 with domain: int(0..4) (representing constraint (aux875 + aux872))
c Both direct and order encoding.
c Var 'aux879' order represents '0' with '4864'
c Var 'aux879' direct represents '0' with '4864'
c Var 'aux879' order represents '1' with '4865'
-4864 4865 0
c Var 'aux879' direct represents '1' with '4866'
4864 -4865 4866 0
-4866 4865 0
-4866 -4864 0
c Var 'aux879' order represents '2' with '4867'
-4865 4867 0
c Var 'aux879' direct represents '2' with '4868'
4865 -4867 4868 0
-4868 4867 0
-4868 -4865 0
c Var 'aux879' order represents '3' with '4869'
-4867 4869 0
c Var 'aux879' direct represents '3' with '4870'
4867 -4869 4870 0
-4870 4869 0
-4870 -4867 0
c Var 'aux879' direct represents '4' with '-4869'
4864 4866 4868 4870 -4869 0
c Encoding variable: aux880 with domain: int(0..4) (representing constraint (aux874 + aux876))
c Both direct and order encoding.
c Var 'aux880' order represents '0' with '4871'
c Var 'aux880' direct represents '0' with '4871'
c Var 'aux880' order represents '1' with '4872'
-4871 4872 0
c Var 'aux880' direct represents '1' with '4873'
4871 -4872 4873 0
-4873 4872 0
-4873 -4871 0
c Var 'aux880' order represents '2' with '4874'
-4872 4874 0
c Var 'aux880' direct represents '2' with '4875'
4872 -4874 4875 0
-4875 4874 0
-4875 -4872 0
c Var 'aux880' order represents '3' with '4876'
-4874 4876 0
c Var 'aux880' direct represents '3' with '4877'
4874 -4876 4877 0
-4877 4876 0
-4877 -4874 0
c Var 'aux880' direct represents '4' with '-4876'
4871 4873 4875 4877 -4876 0
c Encoding variable: aux881 with domain: int(0..8) (representing constraint ( - shift(agrid_00004_00005, -4) + aux880))
c Both direct and order encoding.
c Var 'aux881' order represents '0' with '4878'
c Var 'aux881' direct represents '0' with '4878'
c Var 'aux881' order represents '1' with '4879'
-4878 4879 0
c Var 'aux881' direct represents '1' with '4880'
4878 -4879 4880 0
-4880 4879 0
-4880 -4878 0
c Var 'aux881' order represents '2' with '4881'
-4879 4881 0
c Var 'aux881' direct represents '2' with '4882'
4879 -4881 4882 0
-4882 4881 0
-4882 -4879 0
c Var 'aux881' order represents '3' with '4883'
-4881 4883 0
c Var 'aux881' direct represents '3' with '4884'
4881 -4883 4884 0
-4884 4883 0
-4884 -4881 0
c Var 'aux881' order represents '4' with '4885'
-4883 4885 0
c Var 'aux881' direct represents '4' with '4886'
4883 -4885 4886 0
-4886 4885 0
-4886 -4883 0
c Var 'aux881' order represents '5' with '4887'
-4885 4887 0
c Var 'aux881' direct represents '5' with '4888'
4885 -4887 4888 0
-4888 4887 0
-4888 -4885 0
c Var 'aux881' order represents '6' with '4889'
-4887 4889 0
c Var 'aux881' direct represents '6' with '4890'
4887 -4889 4890 0
-4890 4889 0
-4890 -4887 0
c Var 'aux881' order represents '7' with '4891'
-4889 4891 0
c Var 'aux881' direct represents '7' with '4892'
4889 -4891 4892 0
-4892 4891 0
-4892 -4889 0
c Var 'aux881' direct represents '8' with '-4891'
4878 4880 4882 4884 4886 4888 4890 4892 -4891 0
c Encoding variable: aux882 with domain: bool (representing constraint (shift(1, -1) + rijk_00005_00005_00003))
c Var 'aux882' direct represents '0' with '-4893'
c Var 'aux882' direct represents '1' with '4893'
c Var 'aux882' order represents '1' with '1'
c Var 'aux882' order represents '0' with '-4893'
c Encoding variable: aux883 with domain: int(0..2) (representing constraint (rijk_00005_00005_00002 + aux882))
c Both direct and order encoding.
c Var 'aux883' order represents '0' with '4894'
c Var 'aux883' direct represents '0' with '4894'
c Var 'aux883' order represents '1' with '4895'
-4894 4895 0
c Var 'aux883' direct represents '1' with '4896'
4894 -4895 4896 0
-4896 4895 0
-4896 -4894 0
c Var 'aux883' direct represents '2' with '-4895'
4894 4896 -4895 0
c Encoding variable: aux884 with domain: int(0..2) (representing constraint (rijk_00005_00005_00001 + uijk_00005_00005_00001))
c Both direct and order encoding.
c Var 'aux884' order represents '0' with '4897'
c Var 'aux884' direct represents '0' with '4897'
c Var 'aux884' order represents '1' with '4898'
-4897 4898 0
c Var 'aux884' direct represents '1' with '4899'
4897 -4898 4899 0
-4899 4898 0
-4899 -4897 0
c Var 'aux884' direct represents '2' with '-4898'
4897 4899 -4898 0
c Encoding variable: aux885 with domain: int(0..2) (representing constraint (lijk_00005_00005_00003 + uijk_00005_00005_00003))
c Both direct and order encoding.
c Var 'aux885' order represents '0' with '4900'
c Var 'aux885' direct represents '0' with '4900'
c Var 'aux885' order represents '1' with '4901'
-4900 4901 0
c Var 'aux885' direct represents '1' with '4902'
4900 -4901 4902 0
-4902 4901 0
-4902 -4900 0
c Var 'aux885' direct represents '2' with '-4901'
4900 4902 -4901 0
c Encoding variable: aux886 with domain: int(0..2) (representing constraint (lijk_00005_00005_00002 + lijk_00005_00005_00001))
c Both direct and order encoding.
c Var 'aux886' order represents '0' with '4903'
c Var 'aux886' direct represents '0' with '4903'
c Var 'aux886' order represents '1' with '4904'
-4903 4904 0
c Var 'aux886' direct represents '1' with '4905'
4903 -4904 4905 0
-4905 4904 0
-4905 -4903 0
c Var 'aux886' direct represents '2' with '-4904'
4903 4905 -4904 0
c Encoding variable: aux887 with domain: int(0..2) (representing constraint (dijk_00005_00005_00001 + uijk_00005_00005_00002))
c Both direct and order encoding.
c Var 'aux887' order represents '0' with '4906'
c Var 'aux887' direct represents '0' with '4906'
c Var 'aux887' order represents '1' with '4907'
-4906 4907 0
c Var 'aux887' direct represents '1' with '4908'
4906 -4907 4908 0
-4908 4907 0
-4908 -4906 0
c Var 'aux887' direct represents '2' with '-4907'
4906 4908 -4907 0
c Encoding variable: aux888 with domain: int(0..2) (representing constraint (dijk_00005_00005_00002 + dijk_00005_00005_00003))
c Both direct and order encoding.
c Var 'aux888' order represents '0' with '4909'
c Var 'aux888' direct represents '0' with '4909'
c Var 'aux888' order represents '1' with '4910'
-4909 4910 0
c Var 'aux888' direct represents '1' with '4911'
4909 -4910 4911 0
-4911 4910 0
-4911 -4909 0
c Var 'aux888' direct represents '2' with '-4910'
4909 4911 -4910 0
c Encoding variable: aux889 with domain: int(0..4) (representing constraint (aux883 + aux888))
c Both direct and order encoding.
c Var 'aux889' order represents '0' with '4912'
c Var 'aux889' direct represents '0' with '4912'
c Var 'aux889' order represents '1' with '4913'
-4912 4913 0
c Var 'aux889' direct represents '1' with '4914'
4912 -4913 4914 0
-4914 4913 0
-4914 -4912 0
c Var 'aux889' order represents '2' with '4915'
-4913 4915 0
c Var 'aux889' direct represents '2' with '4916'
4913 -4915 4916 0
-4916 4915 0
-4916 -4913 0
c Var 'aux889' order represents '3' with '4917'
-4915 4917 0
c Var 'aux889' direct represents '3' with '4918'
4915 -4917 4918 0
-4918 4917 0
-4918 -4915 0
c Var 'aux889' direct represents '4' with '-4917'
4912 4914 4916 4918 -4917 0
c Encoding variable: aux890 with domain: int(0..4) (representing constraint (aux886 + aux884))
c Both direct and order encoding.
c Var 'aux890' order represents '0' with '4919'
c Var 'aux890' direct represents '0' with '4919'
c Var 'aux890' order represents '1' with '4920'
-4919 4920 0
c Var 'aux890' direct represents '1' with '4921'
4919 -4920 4921 0
-4921 4920 0
-4921 -4919 0
c Var 'aux890' order represents '2' with '4922'
-4920 4922 0
c Var 'aux890' direct represents '2' with '4923'
4920 -4922 4923 0
-4923 4922 0
-4923 -4920 0
c Var 'aux890' order represents '3' with '4924'
-4922 4924 0
c Var 'aux890' direct represents '3' with '4925'
4922 -4924 4925 0
-4925 4924 0
-4925 -4922 0
c Var 'aux890' direct represents '4' with '-4924'
4919 4921 4923 4925 -4924 0
c Encoding variable: aux891 with domain: int(0..4) (representing constraint (aux885 + aux887))
c Both direct and order encoding.
c Var 'aux891' order represents '0' with '4926'
c Var 'aux891' direct represents '0' with '4926'
c Var 'aux891' order represents '1' with '4927'
-4926 4927 0
c Var 'aux891' direct represents '1' with '4928'
4926 -4927 4928 0
-4928 4927 0
-4928 -4926 0
c Var 'aux891' order represents '2' with '4929'
-4927 4929 0
c Var 'aux891' direct represents '2' with '4930'
4927 -4929 4930 0
-4930 4929 0
-4930 -4927 0
c Var 'aux891' order represents '3' with '4931'
-4929 4931 0
c Var 'aux891' direct represents '3' with '4932'
4929 -4931 4932 0
-4932 4931 0
-4932 -4929 0
c Var 'aux891' direct represents '4' with '-4931'
4926 4928 4930 4932 -4931 0
c Encoding variable: aux892 with domain: int(0..8) (representing constraint ( - shift(agrid_00005_00005, -4) + aux891))
c Both direct and order encoding.
c Var 'aux892' order represents '0' with '4933'
c Var 'aux892' direct represents '0' with '4933'
c Var 'aux892' order represents '1' with '4934'
-4933 4934 0
c Var 'aux892' direct represents '1' with '4935'
4933 -4934 4935 0
-4935 4934 0
-4935 -4933 0
c Var 'aux892' order represents '2' with '4936'
-4934 4936 0
c Var 'aux892' direct represents '2' with '4937'
4934 -4936 4937 0
-4937 4936 0
-4937 -4934 0
c Var 'aux892' order represents '3' with '4938'
-4936 4938 0
c Var 'aux892' direct represents '3' with '4939'
4936 -4938 4939 0
-4939 4938 0
-4939 -4936 0
c Var 'aux892' order represents '4' with '4940'
-4938 4940 0
c Var 'aux892' direct represents '4' with '4941'
4938 -4940 4941 0
-4941 4940 0
-4941 -4938 0
c Var 'aux892' order represents '5' with '4942'
-4940 4942 0
c Var 'aux892' direct represents '5' with '4943'
4940 -4942 4943 0
-4943 4942 0
-4943 -4940 0
c Var 'aux892' order represents '6' with '4944'
-4942 4944 0
c Var 'aux892' direct represents '6' with '4945'
4942 -4944 4945 0
-4945 4944 0
-4945 -4942 0
c Var 'aux892' order represents '7' with '4946'
-4944 4946 0
c Var 'aux892' direct represents '7' with '4947'
4944 -4946 4947 0
-4947 4946 0
-4947 -4944 0
c Var 'aux892' direct represents '8' with '-4946'
4933 4935 4937 4939 4941 4943 4945 4947 -4946 0
c Encoding variable: aux893 with domain: int(0) (representing constraint (dijk_00006_00005_00003 + shift(1, -1)))
c Var 'aux893' direct represents '0' with '4948'
4948 0
c Encoding variable: aux894 with domain: bool (representing constraint (aux893 + dijk_00006_00005_00002))
c Var 'aux894' direct represents '0' with '-4949'
c Var 'aux894' direct represents '1' with '4949'
c Var 'aux894' order represents '1' with '1'
c Var 'aux894' order represents '0' with '-4949'
c Encoding variable: aux895 with domain: int(0..2) (representing constraint (rijk_00006_00005_00001 + aux894))
c Both direct and order encoding.
c Var 'aux895' order represents '0' with '4950'
c Var 'aux895' direct represents '0' with '4950'
c Var 'aux895' order represents '1' with '4951'
-4950 4951 0
c Var 'aux895' direct represents '1' with '4952'
4950 -4951 4952 0
-4952 4951 0
-4952 -4950 0
c Var 'aux895' direct represents '2' with '-4951'
4950 4952 -4951 0
c Encoding variable: aux896 with domain: int(0..2) (representing constraint (lijk_00006_00005_00003 + rijk_00006_00005_00003))
c Both direct and order encoding.
c Var 'aux896' order represents '0' with '4953'
c Var 'aux896' direct represents '0' with '4953'
c Var 'aux896' order represents '1' with '4954'
-4953 4954 0
c Var 'aux896' direct represents '1' with '4955'
4953 -4954 4955 0
-4955 4954 0
-4955 -4953 0
c Var 'aux896' direct represents '2' with '-4954'
4953 4955 -4954 0
c Encoding variable: aux897 with domain: int(0..2) (representing constraint (lijk_00006_00005_00002 + uijk_00006_00005_00003))
c Both direct and order encoding.
c Var 'aux897' order represents '0' with '4956'
c Var 'aux897' direct represents '0' with '4956'
c Var 'aux897' order represents '1' with '4957'
-4956 4957 0
c Var 'aux897' direct represents '1' with '4958'
4956 -4957 4958 0
-4958 4957 0
-4958 -4956 0
c Var 'aux897' direct represents '2' with '-4957'
4956 4958 -4957 0
c Encoding variable: aux898 with domain: int(0..2) (representing constraint (lijk_00006_00005_00001 + dijk_00006_00005_00001))
c Both direct and order encoding.
c Var 'aux898' order represents '0' with '4959'
c Var 'aux898' direct represents '0' with '4959'
c Var 'aux898' order represents '1' with '4960'
-4959 4960 0
c Var 'aux898' direct represents '1' with '4961'
4959 -4960 4961 0
-4961 4960 0
-4961 -4959 0
c Var 'aux898' direct represents '2' with '-4960'
4959 4961 -4960 0
c Encoding variable: aux899 with domain: int(0..2) (representing constraint (rijk_00006_00005_00002 + uijk_00006_00005_00001))
c Both direct and order encoding.
c Var 'aux899' order represents '0' with '4962'
c Var 'aux899' direct represents '0' with '4962'
c Var 'aux899' order represents '1' with '4963'
-4962 4963 0
c Var 'aux899' direct represents '1' with '4964'
4962 -4963 4964 0
-4964 4963 0
-4964 -4962 0
c Var 'aux899' direct represents '2' with '-4963'
4962 4964 -4963 0
c Encoding variable: aux900 with domain: int(0..3) (representing constraint (uijk_00006_00005_00002 + aux899))
c Both direct and order encoding.
c Var 'aux900' order represents '0' with '4965'
c Var 'aux900' direct represents '0' with '4965'
c Var 'aux900' order represents '1' with '4966'
-4965 4966 0
c Var 'aux900' direct represents '1' with '4967'
4965 -4966 4967 0
-4967 4966 0
-4967 -4965 0
c Var 'aux900' order represents '2' with '4968'
-4966 4968 0
c Var 'aux900' direct represents '2' with '4969'
4966 -4968 4969 0
-4969 4968 0
-4969 -4966 0
c Var 'aux900' direct represents '3' with '-4968'
4965 4967 4969 -4968 0
c Encoding variable: aux901 with domain: int(0..4) (representing constraint (aux897 + aux896))
c Both direct and order encoding.
c Var 'aux901' order represents '0' with '4970'
c Var 'aux901' direct represents '0' with '4970'
c Var 'aux901' order represents '1' with '4971'
-4970 4971 0
c Var 'aux901' direct represents '1' with '4972'
4970 -4971 4972 0
-4972 4971 0
-4972 -4970 0
c Var 'aux901' order represents '2' with '4973'
-4971 4973 0
c Var 'aux901' direct represents '2' with '4974'
4971 -4973 4974 0
-4974 4973 0
-4974 -4971 0
c Var 'aux901' order represents '3' with '4975'
-4973 4975 0
c Var 'aux901' direct represents '3' with '4976'
4973 -4975 4976 0
-4976 4975 0
-4976 -4973 0
c Var 'aux901' direct represents '4' with '-4975'
4970 4972 4974 4976 -4975 0
c Encoding variable: aux902 with domain: int(0..4) (representing constraint (aux895 + aux898))
c Both direct and order encoding.
c Var 'aux902' order represents '0' with '4977'
c Var 'aux902' direct represents '0' with '4977'
c Var 'aux902' order represents '1' with '4978'
-4977 4978 0
c Var 'aux902' direct represents '1' with '4979'
4977 -4978 4979 0
-4979 4978 0
-4979 -4977 0
c Var 'aux902' order represents '2' with '4980'
-4978 4980 0
c Var 'aux902' direct represents '2' with '4981'
4978 -4980 4981 0
-4981 4980 0
-4981 -4978 0
c Var 'aux902' order represents '3' with '4982'
-4980 4982 0
c Var 'aux902' direct represents '3' with '4983'
4980 -4982 4983 0
-4983 4982 0
-4983 -4980 0
c Var 'aux902' direct represents '4' with '-4982'
4977 4979 4981 4983 -4982 0
c Encoding variable: aux903 with domain: int(0..7) (representing constraint (aux900 + aux902))
c Both direct and order encoding.
c Var 'aux903' order represents '0' with '4984'
c Var 'aux903' direct represents '0' with '4984'
c Var 'aux903' order represents '1' with '4985'
-4984 4985 0
c Var 'aux903' direct represents '1' with '4986'
4984 -4985 4986 0
-4986 4985 0
-4986 -4984 0
c Var 'aux903' order represents '2' with '4987'
-4985 4987 0
c Var 'aux903' direct represents '2' with '4988'
4985 -4987 4988 0
-4988 4987 0
-4988 -4985 0
c Var 'aux903' order represents '3' with '4989'
-4987 4989 0
c Var 'aux903' direct represents '3' with '4990'
4987 -4989 4990 0
-4990 4989 0
-4990 -4987 0
c Var 'aux903' order represents '4' with '4991'
-4989 4991 0
c Var 'aux903' direct represents '4' with '4992'
4989 -4991 4992 0
-4992 4991 0
-4992 -4989 0
c Var 'aux903' order represents '5' with '4993'
-4991 4993 0
c Var 'aux903' direct represents '5' with '4994'
4991 -4993 4994 0
-4994 4993 0
-4994 -4991 0
c Var 'aux903' order represents '6' with '4995'
-4993 4995 0
c Var 'aux903' direct represents '6' with '4996'
4993 -4995 4996 0
-4996 4995 0
-4996 -4993 0
c Var 'aux903' direct represents '7' with '-4995'
4984 4986 4988 4990 4992 4994 4996 -4995 0
c Encoding variable: aux904 with domain: int(0) (representing constraint (dijk_00007_00005_00002 + dijk_00007_00005_00003))
c Var 'aux904' direct represents '0' with '4997'
4997 0
c Encoding variable: aux905 with domain: int(0) (representing constraint (shift(1, -1) + aux904))
c Var 'aux905' direct represents '0' with '4998'
4998 0
c Encoding variable: aux906 with domain: bool (representing constraint (aux905 + rijk_00007_00005_00002))
c Var 'aux906' direct represents '0' with '-4999'
c Var 'aux906' direct represents '1' with '4999'
c Var 'aux906' order represents '1' with '1'
c Var 'aux906' order represents '0' with '-4999'
c Encoding variable: aux907 with domain: int(0..2) (representing constraint (lijk_00007_00005_00003 + aux906))
c Both direct and order encoding.
c Var 'aux907' order represents '0' with '5000'
c Var 'aux907' direct represents '0' with '5000'
c Var 'aux907' order represents '1' with '5001'
-5000 5001 0
c Var 'aux907' direct represents '1' with '5002'
5000 -5001 5002 0
-5002 5001 0
-5002 -5000 0
c Var 'aux907' direct represents '2' with '-5001'
5000 5002 -5001 0
c Encoding variable: aux908 with domain: int(0..2) (representing constraint (lijk_00007_00005_00002 + uijk_00007_00005_00001))
c Both direct and order encoding.
c Var 'aux908' order represents '0' with '5003'
c Var 'aux908' direct represents '0' with '5003'
c Var 'aux908' order represents '1' with '5004'
-5003 5004 0
c Var 'aux908' direct represents '1' with '5005'
5003 -5004 5005 0
-5005 5004 0
-5005 -5003 0
c Var 'aux908' direct represents '2' with '-5004'
5003 5005 -5004 0
c Encoding variable: aux909 with domain: int(0..2) (representing constraint (dijk_00007_00005_00001 + lijk_00007_00005_00001))
c Both direct and order encoding.
c Var 'aux909' order represents '0' with '5006'
c Var 'aux909' direct represents '0' with '5006'
c Var 'aux909' order represents '1' with '5007'
-5006 5007 0
c Var 'aux909' direct represents '1' with '5008'
5006 -5007 5008 0
-5008 5007 0
-5008 -5006 0
c Var 'aux909' direct represents '2' with '-5007'
5006 5008 -5007 0
c Encoding variable: aux910 with domain: int(0..2) (representing constraint (uijk_00007_00005_00002 + rijk_00007_00005_00001))
c Both direct and order encoding.
c Var 'aux910' order represents '0' with '5009'
c Var 'aux910' direct represents '0' with '5009'
c Var 'aux910' order represents '1' with '5010'
-5009 5010 0
c Var 'aux910' direct represents '1' with '5011'
5009 -5010 5011 0
-5011 5010 0
-5011 -5009 0
c Var 'aux910' direct represents '2' with '-5010'
5009 5011 -5010 0
c Encoding variable: aux911 with domain: int(0..2) (representing constraint (rijk_00007_00005_00003 + uijk_00007_00005_00003))
c Both direct and order encoding.
c Var 'aux911' order represents '0' with '5012'
c Var 'aux911' direct represents '0' with '5012'
c Var 'aux911' order represents '1' with '5013'
-5012 5013 0
c Var 'aux911' direct represents '1' with '5014'
5012 -5013 5014 0
-5014 5013 0
-5014 -5012 0
c Var 'aux911' direct represents '2' with '-5013'
5012 5014 -5013 0
c Encoding variable: aux912 with domain: int(0..4) (representing constraint (aux907 + aux911))
c Both direct and order encoding.
c Var 'aux912' order represents '0' with '5015'
c Var 'aux912' direct represents '0' with '5015'
c Var 'aux912' order represents '1' with '5016'
-5015 5016 0
c Var 'aux912' direct represents '1' with '5017'
5015 -5016 5017 0
-5017 5016 0
-5017 -5015 0
c Var 'aux912' order represents '2' with '5018'
-5016 5018 0
c Var 'aux912' direct represents '2' with '5019'
5016 -5018 5019 0
-5019 5018 0
-5019 -5016 0
c Var 'aux912' order represents '3' with '5020'
-5018 5020 0
c Var 'aux912' direct represents '3' with '5021'
5018 -5020 5021 0
-5021 5020 0
-5021 -5018 0
c Var 'aux912' direct represents '4' with '-5020'
5015 5017 5019 5021 -5020 0
c Encoding variable: aux913 with domain: int(0..4) (representing constraint (aux908 + aux909))
c Both direct and order encoding.
c Var 'aux913' order represents '0' with '5022'
c Var 'aux913' direct represents '0' with '5022'
c Var 'aux913' order represents '1' with '5023'
-5022 5023 0
c Var 'aux913' direct represents '1' with '5024'
5022 -5023 5024 0
-5024 5023 0
-5024 -5022 0
c Var 'aux913' order represents '2' with '5025'
-5023 5025 0
c Var 'aux913' direct represents '2' with '5026'
5023 -5025 5026 0
-5026 5025 0
-5026 -5023 0
c Var 'aux913' order represents '3' with '5027'
-5025 5027 0
c Var 'aux913' direct represents '3' with '5028'
5025 -5027 5028 0
-5028 5027 0
-5028 -5025 0
c Var 'aux913' direct represents '4' with '-5027'
5022 5024 5026 5028 -5027 0
c Encoding variable: aux914 with domain: int(0..6) (representing constraint (aux910 + aux913))
c Both direct and order encoding.
c Var 'aux914' order represents '0' with '5029'
c Var 'aux914' direct represents '0' with '5029'
c Var 'aux914' order represents '1' with '5030'
-5029 5030 0
c Var 'aux914' direct represents '1' with '5031'
5029 -5030 5031 0
-5031 5030 0
-5031 -5029 0
c Var 'aux914' order represents '2' with '5032'
-5030 5032 0
c Var 'aux914' direct represents '2' with '5033'
5030 -5032 5033 0
-5033 5032 0
-5033 -5030 0
c Var 'aux914' order represents '3' with '5034'
-5032 5034 0
c Var 'aux914' direct represents '3' with '5035'
5032 -5034 5035 0
-5035 5034 0
-5035 -5032 0
c Var 'aux914' order represents '4' with '5036'
-5034 5036 0
c Var 'aux914' direct represents '4' with '5037'
5034 -5036 5037 0
-5037 5036 0
-5037 -5034 0
c Var 'aux914' order represents '5' with '5038'
-5036 5038 0
c Var 'aux914' direct represents '5' with '5039'
5036 -5038 5039 0
-5039 5038 0
-5039 -5036 0
c Var 'aux914' direct represents '6' with '-5038'
5029 5031 5033 5035 5037 5039 -5038 0
c Encoding variable: aux915 with domain: int(0) (representing constraint (dijk_00008_00005_00001 + dijk_00008_00005_00002))
c Var 'aux915' direct represents '0' with '5040'
5040 0
c Encoding variable: aux916 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00008_00005_00003))
c Var 'aux916' direct represents '0' with '5041'
5041 0
c Encoding variable: aux917 with domain: int(0) (representing constraint (aux915 + aux916))
c Var 'aux917' direct represents '0' with '5042'
5042 0
c Encoding variable: aux918 with domain: bool (representing constraint (aux917 + uijk_00008_00005_00001))
c Var 'aux918' direct represents '0' with '-5043'
c Var 'aux918' direct represents '1' with '5043'
c Var 'aux918' order represents '1' with '1'
c Var 'aux918' order represents '0' with '-5043'
c Encoding variable: aux919 with domain: int(0..2) (representing constraint (rijk_00008_00005_00001 + aux918))
c Both direct and order encoding.
c Var 'aux919' order represents '0' with '5044'
c Var 'aux919' direct represents '0' with '5044'
c Var 'aux919' order represents '1' with '5045'
-5044 5045 0
c Var 'aux919' direct represents '1' with '5046'
5044 -5045 5046 0
-5046 5045 0
-5046 -5044 0
c Var 'aux919' direct represents '2' with '-5045'
5044 5046 -5045 0
c Encoding variable: aux920 with domain: int(0..2) (representing constraint (lijk_00008_00005_00003 + uijk_00008_00005_00002))
c Both direct and order encoding.
c Var 'aux920' order represents '0' with '5047'
c Var 'aux920' direct represents '0' with '5047'
c Var 'aux920' order represents '1' with '5048'
-5047 5048 0
c Var 'aux920' direct represents '1' with '5049'
5047 -5048 5049 0
-5049 5048 0
-5049 -5047 0
c Var 'aux920' direct represents '2' with '-5048'
5047 5049 -5048 0
c Encoding variable: aux921 with domain: int(0..2) (representing constraint (lijk_00008_00005_00002 + rijk_00008_00005_00003))
c Both direct and order encoding.
c Var 'aux921' order represents '0' with '5050'
c Var 'aux921' direct represents '0' with '5050'
c Var 'aux921' order represents '1' with '5051'
-5050 5051 0
c Var 'aux921' direct represents '1' with '5052'
5050 -5051 5052 0
-5052 5051 0
-5052 -5050 0
c Var 'aux921' direct represents '2' with '-5051'
5050 5052 -5051 0
c Encoding variable: aux922 with domain: int(0..2) (representing constraint (lijk_00008_00005_00001 + uijk_00008_00005_00003))
c Both direct and order encoding.
c Var 'aux922' order represents '0' with '5053'
c Var 'aux922' direct represents '0' with '5053'
c Var 'aux922' order represents '1' with '5054'
-5053 5054 0
c Var 'aux922' direct represents '1' with '5055'
5053 -5054 5055 0
-5055 5054 0
-5055 -5053 0
c Var 'aux922' direct represents '2' with '-5054'
5053 5055 -5054 0
c Encoding variable: aux923 with domain: int(0..3) (representing constraint (rijk_00008_00005_00002 + aux922))
c Both direct and order encoding.
c Var 'aux923' order represents '0' with '5056'
c Var 'aux923' direct represents '0' with '5056'
c Var 'aux923' order represents '1' with '5057'
-5056 5057 0
c Var 'aux923' direct represents '1' with '5058'
5056 -5057 5058 0
-5058 5057 0
-5058 -5056 0
c Var 'aux923' order represents '2' with '5059'
-5057 5059 0
c Var 'aux923' direct represents '2' with '5060'
5057 -5059 5060 0
-5060 5059 0
-5060 -5057 0
c Var 'aux923' direct represents '3' with '-5059'
5056 5058 5060 -5059 0
c Encoding variable: aux924 with domain: int(0..4) (representing constraint (aux920 + aux919))
c Both direct and order encoding.
c Var 'aux924' order represents '0' with '5061'
c Var 'aux924' direct represents '0' with '5061'
c Var 'aux924' order represents '1' with '5062'
-5061 5062 0
c Var 'aux924' direct represents '1' with '5063'
5061 -5062 5063 0
-5063 5062 0
-5063 -5061 0
c Var 'aux924' order represents '2' with '5064'
-5062 5064 0
c Var 'aux924' direct represents '2' with '5065'
5062 -5064 5065 0
-5065 5064 0
-5065 -5062 0
c Var 'aux924' order represents '3' with '5066'
-5064 5066 0
c Var 'aux924' direct represents '3' with '5067'
5064 -5066 5067 0
-5067 5066 0
-5067 -5064 0
c Var 'aux924' direct represents '4' with '-5066'
5061 5063 5065 5067 -5066 0
c Encoding variable: aux925 with domain: int(0..5) (representing constraint (aux921 + aux923))
c Both direct and order encoding.
c Var 'aux925' order represents '0' with '5068'
c Var 'aux925' direct represents '0' with '5068'
c Var 'aux925' order represents '1' with '5069'
-5068 5069 0
c Var 'aux925' direct represents '1' with '5070'
5068 -5069 5070 0
-5070 5069 0
-5070 -5068 0
c Var 'aux925' order represents '2' with '5071'
-5069 5071 0
c Var 'aux925' direct represents '2' with '5072'
5069 -5071 5072 0
-5072 5071 0
-5072 -5069 0
c Var 'aux925' order represents '3' with '5073'
-5071 5073 0
c Var 'aux925' direct represents '3' with '5074'
5071 -5073 5074 0
-5074 5073 0
-5074 -5071 0
c Var 'aux925' order represents '4' with '5075'
-5073 5075 0
c Var 'aux925' direct represents '4' with '5076'
5073 -5075 5076 0
-5076 5075 0
-5076 -5073 0
c Var 'aux925' direct represents '5' with '-5075'
5068 5070 5072 5074 5076 -5075 0
c Encoding variable: aux926 with domain: int(0) (representing constraint (rijk_00001_00006_00003 + shift(1, -1)))
c Var 'aux926' direct represents '0' with '5077'
5077 0
c Encoding variable: aux927 with domain: int(0) (representing constraint (uijk_00001_00006_00001 + uijk_00001_00006_00002))
c Var 'aux927' direct represents '0' with '5078'
5078 0
c Encoding variable: aux928 with domain: int(0) (representing constraint (uijk_00001_00006_00003 + aux926))
c Var 'aux928' direct represents '0' with '5079'
5079 0
c Encoding variable: aux929 with domain: int(0) (representing constraint (aux927 + aux928))
c Var 'aux929' direct represents '0' with '5080'
5080 0
c Encoding variable: aux930 with domain: bool (representing constraint (aux929 + dijk_00001_00006_00001))
c Var 'aux930' direct represents '0' with '-5081'
c Var 'aux930' direct represents '1' with '5081'
c Var 'aux930' order represents '1' with '1'
c Var 'aux930' order represents '0' with '-5081'
c Encoding variable: aux931 with domain: int(0..2) (representing constraint (lijk_00001_00006_00002 + aux930))
c Both direct and order encoding.
c Var 'aux931' order represents '0' with '5082'
c Var 'aux931' direct represents '0' with '5082'
c Var 'aux931' order represents '1' with '5083'
-5082 5083 0
c Var 'aux931' direct represents '1' with '5084'
5082 -5083 5084 0
-5084 5083 0
-5084 -5082 0
c Var 'aux931' direct represents '2' with '-5083'
5082 5084 -5083 0
c Encoding variable: aux932 with domain: int(0..2) (representing constraint (rijk_00001_00006_00001 + dijk_00001_00006_00003))
c Both direct and order encoding.
c Var 'aux932' order represents '0' with '5085'
c Var 'aux932' direct represents '0' with '5085'
c Var 'aux932' order represents '1' with '5086'
-5085 5086 0
c Var 'aux932' direct represents '1' with '5087'
5085 -5086 5087 0
-5087 5086 0
-5087 -5085 0
c Var 'aux932' direct represents '2' with '-5086'
5085 5087 -5086 0
c Encoding variable: aux933 with domain: int(0..2) (representing constraint (lijk_00001_00006_00003 + rijk_00001_00006_00002))
c Both direct and order encoding.
c Var 'aux933' order represents '0' with '5088'
c Var 'aux933' direct represents '0' with '5088'
c Var 'aux933' order represents '1' with '5089'
-5088 5089 0
c Var 'aux933' direct represents '1' with '5090'
5088 -5089 5090 0
-5090 5089 0
-5090 -5088 0
c Var 'aux933' direct represents '2' with '-5089'
5088 5090 -5089 0
c Encoding variable: aux934 with domain: int(0..2) (representing constraint (lijk_00001_00006_00001 + dijk_00001_00006_00002))
c Both direct and order encoding.
c Var 'aux934' order represents '0' with '5091'
c Var 'aux934' direct represents '0' with '5091'
c Var 'aux934' order represents '1' with '5092'
-5091 5092 0
c Var 'aux934' direct represents '1' with '5093'
5091 -5092 5093 0
-5093 5092 0
-5093 -5091 0
c Var 'aux934' direct represents '2' with '-5092'
5091 5093 -5092 0
c Encoding variable: aux935 with domain: int(0..4) (representing constraint (aux932 + aux934))
c Both direct and order encoding.
c Var 'aux935' order represents '0' with '5094'
c Var 'aux935' direct represents '0' with '5094'
c Var 'aux935' order represents '1' with '5095'
-5094 5095 0
c Var 'aux935' direct represents '1' with '5096'
5094 -5095 5096 0
-5096 5095 0
-5096 -5094 0
c Var 'aux935' order represents '2' with '5097'
-5095 5097 0
c Var 'aux935' direct represents '2' with '5098'
5095 -5097 5098 0
-5098 5097 0
-5098 -5095 0
c Var 'aux935' order represents '3' with '5099'
-5097 5099 0
c Var 'aux935' direct represents '3' with '5100'
5097 -5099 5100 0
-5100 5099 0
-5100 -5097 0
c Var 'aux935' direct represents '4' with '-5099'
5094 5096 5098 5100 -5099 0
c Encoding variable: aux936 with domain: int(0..4) (representing constraint (aux931 + aux933))
c Both direct and order encoding.
c Var 'aux936' order represents '0' with '5101'
c Var 'aux936' direct represents '0' with '5101'
c Var 'aux936' order represents '1' with '5102'
-5101 5102 0
c Var 'aux936' direct represents '1' with '5103'
5101 -5102 5103 0
-5103 5102 0
-5103 -5101 0
c Var 'aux936' order represents '2' with '5104'
-5102 5104 0
c Var 'aux936' direct represents '2' with '5105'
5102 -5104 5105 0
-5105 5104 0
-5105 -5102 0
c Var 'aux936' order represents '3' with '5106'
-5104 5106 0
c Var 'aux936' direct represents '3' with '5107'
5104 -5106 5107 0
-5107 5106 0
-5107 -5104 0
c Var 'aux936' direct represents '4' with '-5106'
5101 5103 5105 5107 -5106 0
c Encoding variable: aux937 with domain: int(0) (representing constraint (rijk_00002_00006_00003 + shift(1, -1)))
c Var 'aux937' direct represents '0' with '5108'
5108 0
c Encoding variable: aux938 with domain: int(0) (representing constraint (uijk_00002_00006_00002 + uijk_00002_00006_00003))
c Var 'aux938' direct represents '0' with '5109'
5109 0
c Encoding variable: aux939 with domain: int(0) (representing constraint (aux937 + aux938))
c Var 'aux939' direct represents '0' with '5110'
5110 0
c Encoding variable: aux940 with domain: bool (representing constraint (aux939 + dijk_00002_00006_00002))
c Var 'aux940' direct represents '0' with '-5111'
c Var 'aux940' direct represents '1' with '5111'
c Var 'aux940' order represents '1' with '1'
c Var 'aux940' order represents '0' with '-5111'
c Encoding variable: aux941 with domain: int(0..2) (representing constraint (rijk_00002_00006_00002 + aux940))
c Both direct and order encoding.
c Var 'aux941' order represents '0' with '5112'
c Var 'aux941' direct represents '0' with '5112'
c Var 'aux941' order represents '1' with '5113'
-5112 5113 0
c Var 'aux941' direct represents '1' with '5114'
5112 -5113 5114 0
-5114 5113 0
-5114 -5112 0
c Var 'aux941' direct represents '2' with '-5113'
5112 5114 -5113 0
c Encoding variable: aux942 with domain: int(0..2) (representing constraint (uijk_00002_00006_00001 + lijk_00002_00006_00003))
c Both direct and order encoding.
c Var 'aux942' order represents '0' with '5115'
c Var 'aux942' direct represents '0' with '5115'
c Var 'aux942' order represents '1' with '5116'
-5115 5116 0
c Var 'aux942' direct represents '1' with '5117'
5115 -5116 5117 0
-5117 5116 0
-5117 -5115 0
c Var 'aux942' direct represents '2' with '-5116'
5115 5117 -5116 0
c Encoding variable: aux943 with domain: int(0..2) (representing constraint (rijk_00002_00006_00001 + lijk_00002_00006_00002))
c Both direct and order encoding.
c Var 'aux943' order represents '0' with '5118'
c Var 'aux943' direct represents '0' with '5118'
c Var 'aux943' order represents '1' with '5119'
-5118 5119 0
c Var 'aux943' direct represents '1' with '5120'
5118 -5119 5120 0
-5120 5119 0
-5120 -5118 0
c Var 'aux943' direct represents '2' with '-5119'
5118 5120 -5119 0
c Encoding variable: aux944 with domain: int(0..2) (representing constraint (dijk_00002_00006_00003 + lijk_00002_00006_00001))
c Both direct and order encoding.
c Var 'aux944' order represents '0' with '5121'
c Var 'aux944' direct represents '0' with '5121'
c Var 'aux944' order represents '1' with '5122'
-5121 5122 0
c Var 'aux944' direct represents '1' with '5123'
5121 -5122 5123 0
-5123 5122 0
-5123 -5121 0
c Var 'aux944' direct represents '2' with '-5122'
5121 5123 -5122 0
c Encoding variable: aux945 with domain: int(0..3) (representing constraint (dijk_00002_00006_00001 + aux944))
c Both direct and order encoding.
c Var 'aux945' order represents '0' with '5124'
c Var 'aux945' direct represents '0' with '5124'
c Var 'aux945' order represents '1' with '5125'
-5124 5125 0
c Var 'aux945' direct represents '1' with '5126'
5124 -5125 5126 0
-5126 5125 0
-5126 -5124 0
c Var 'aux945' order represents '2' with '5127'
-5125 5127 0
c Var 'aux945' direct represents '2' with '5128'
5125 -5127 5128 0
-5128 5127 0
-5128 -5125 0
c Var 'aux945' direct represents '3' with '-5127'
5124 5126 5128 -5127 0
c Encoding variable: aux946 with domain: int(0..4) (representing constraint (aux942 + aux941))
c Both direct and order encoding.
c Var 'aux946' order represents '0' with '5129'
c Var 'aux946' direct represents '0' with '5129'
c Var 'aux946' order represents '1' with '5130'
-5129 5130 0
c Var 'aux946' direct represents '1' with '5131'
5129 -5130 5131 0
-5131 5130 0
-5131 -5129 0
c Var 'aux946' order represents '2' with '5132'
-5130 5132 0
c Var 'aux946' direct represents '2' with '5133'
5130 -5132 5133 0
-5133 5132 0
-5133 -5130 0
c Var 'aux946' order represents '3' with '5134'
-5132 5134 0
c Var 'aux946' direct represents '3' with '5135'
5132 -5134 5135 0
-5135 5134 0
-5135 -5132 0
c Var 'aux946' direct represents '4' with '-5134'
5129 5131 5133 5135 -5134 0
c Encoding variable: aux947 with domain: int(0..5) (representing constraint (aux943 + aux945))
c Both direct and order encoding.
c Var 'aux947' order represents '0' with '5136'
c Var 'aux947' direct represents '0' with '5136'
c Var 'aux947' order represents '1' with '5137'
-5136 5137 0
c Var 'aux947' direct represents '1' with '5138'
5136 -5137 5138 0
-5138 5137 0
-5138 -5136 0
c Var 'aux947' order represents '2' with '5139'
-5137 5139 0
c Var 'aux947' direct represents '2' with '5140'
5137 -5139 5140 0
-5140 5139 0
-5140 -5137 0
c Var 'aux947' order represents '3' with '5141'
-5139 5141 0
c Var 'aux947' direct represents '3' with '5142'
5139 -5141 5142 0
-5142 5141 0
-5142 -5139 0
c Var 'aux947' order represents '4' with '5143'
-5141 5143 0
c Var 'aux947' direct represents '4' with '5144'
5141 -5143 5144 0
-5144 5143 0
-5144 -5141 0
c Var 'aux947' direct represents '5' with '-5143'
5136 5138 5140 5142 5144 -5143 0
c Encoding variable: aux948 with domain: int(0) (representing constraint (rijk_00003_00006_00003 + uijk_00003_00006_00003))
c Var 'aux948' direct represents '0' with '5145'
5145 0
c Encoding variable: aux949 with domain: int(0) (representing constraint (shift(1, -1) + aux948))
c Var 'aux949' direct represents '0' with '5146'
5146 0
c Encoding variable: aux950 with domain: bool (representing constraint (aux949 + dijk_00003_00006_00002))
c Var 'aux950' direct represents '0' with '-5147'
c Var 'aux950' direct represents '1' with '5147'
c Var 'aux950' order represents '1' with '1'
c Var 'aux950' order represents '0' with '-5147'
c Encoding variable: aux951 with domain: int(0..2) (representing constraint (rijk_00003_00006_00002 + aux950))
c Both direct and order encoding.
c Var 'aux951' order represents '0' with '5148'
c Var 'aux951' direct represents '0' with '5148'
c Var 'aux951' order represents '1' with '5149'
-5148 5149 0
c Var 'aux951' direct represents '1' with '5150'
5148 -5149 5150 0
-5150 5149 0
-5150 -5148 0
c Var 'aux951' direct represents '2' with '-5149'
5148 5150 -5149 0
c Encoding variable: aux952 with domain: int(0..2) (representing constraint (uijk_00003_00006_00002 + dijk_00003_00006_00003))
c Both direct and order encoding.
c Var 'aux952' order represents '0' with '5151'
c Var 'aux952' direct represents '0' with '5151'
c Var 'aux952' order represents '1' with '5152'
-5151 5152 0
c Var 'aux952' direct represents '1' with '5153'
5151 -5152 5153 0
-5153 5152 0
-5153 -5151 0
c Var 'aux952' direct represents '2' with '-5152'
5151 5153 -5152 0
c Encoding variable: aux953 with domain: int(0..2) (representing constraint (rijk_00003_00006_00001 + uijk_00003_00006_00001))
c Both direct and order encoding.
c Var 'aux953' order represents '0' with '5154'
c Var 'aux953' direct represents '0' with '5154'
c Var 'aux953' order represents '1' with '5155'
-5154 5155 0
c Var 'aux953' direct represents '1' with '5156'
5154 -5155 5156 0
-5156 5155 0
-5156 -5154 0
c Var 'aux953' direct represents '2' with '-5155'
5154 5156 -5155 0
c Encoding variable: aux954 with domain: int(0..2) (representing constraint (lijk_00003_00006_00002 + dijk_00003_00006_00001))
c Both direct and order encoding.
c Var 'aux954' order represents '0' with '5157'
c Var 'aux954' direct represents '0' with '5157'
c Var 'aux954' order represents '1' with '5158'
-5157 5158 0
c Var 'aux954' direct represents '1' with '5159'
5157 -5158 5159 0
-5159 5158 0
-5159 -5157 0
c Var 'aux954' direct represents '2' with '-5158'
5157 5159 -5158 0
c Encoding variable: aux955 with domain: int(0..2) (representing constraint (lijk_00003_00006_00001 + lijk_00003_00006_00003))
c Both direct and order encoding.
c Var 'aux955' order represents '0' with '5160'
c Var 'aux955' direct represents '0' with '5160'
c Var 'aux955' order represents '1' with '5161'
-5160 5161 0
c Var 'aux955' direct represents '1' with '5162'
5160 -5161 5162 0
-5162 5161 0
-5162 -5160 0
c Var 'aux955' direct represents '2' with '-5161'
5160 5162 -5161 0
c Encoding variable: aux956 with domain: int(0..4) (representing constraint (aux951 + aux955))
c Both direct and order encoding.
c Var 'aux956' order represents '0' with '5163'
c Var 'aux956' direct represents '0' with '5163'
c Var 'aux956' order represents '1' with '5164'
-5163 5164 0
c Var 'aux956' direct represents '1' with '5165'
5163 -5164 5165 0
-5165 5164 0
-5165 -5163 0
c Var 'aux956' order represents '2' with '5166'
-5164 5166 0
c Var 'aux956' direct represents '2' with '5167'
5164 -5166 5167 0
-5167 5166 0
-5167 -5164 0
c Var 'aux956' order represents '3' with '5168'
-5166 5168 0
c Var 'aux956' direct represents '3' with '5169'
5166 -5168 5169 0
-5169 5168 0
-5169 -5166 0
c Var 'aux956' direct represents '4' with '-5168'
5163 5165 5167 5169 -5168 0
c Encoding variable: aux957 with domain: int(0..4) (representing constraint (aux952 + aux953))
c Both direct and order encoding.
c Var 'aux957' order represents '0' with '5170'
c Var 'aux957' direct represents '0' with '5170'
c Var 'aux957' order represents '1' with '5171'
-5170 5171 0
c Var 'aux957' direct represents '1' with '5172'
5170 -5171 5172 0
-5172 5171 0
-5172 -5170 0
c Var 'aux957' order represents '2' with '5173'
-5171 5173 0
c Var 'aux957' direct represents '2' with '5174'
5171 -5173 5174 0
-5174 5173 0
-5174 -5171 0
c Var 'aux957' order represents '3' with '5175'
-5173 5175 0
c Var 'aux957' direct represents '3' with '5176'
5173 -5175 5176 0
-5176 5175 0
-5176 -5173 0
c Var 'aux957' direct represents '4' with '-5175'
5170 5172 5174 5176 -5175 0
c Encoding variable: aux958 with domain: int(0..6) (representing constraint (aux954 + aux957))
c Both direct and order encoding.
c Var 'aux958' order represents '0' with '5177'
c Var 'aux958' direct represents '0' with '5177'
c Var 'aux958' order represents '1' with '5178'
-5177 5178 0
c Var 'aux958' direct represents '1' with '5179'
5177 -5178 5179 0
-5179 5178 0
-5179 -5177 0
c Var 'aux958' order represents '2' with '5180'
-5178 5180 0
c Var 'aux958' direct represents '2' with '5181'
5178 -5180 5181 0
-5181 5180 0
-5181 -5178 0
c Var 'aux958' order represents '3' with '5182'
-5180 5182 0
c Var 'aux958' direct represents '3' with '5183'
5180 -5182 5183 0
-5183 5182 0
-5183 -5180 0
c Var 'aux958' order represents '4' with '5184'
-5182 5184 0
c Var 'aux958' direct represents '4' with '5185'
5182 -5184 5185 0
-5185 5184 0
-5185 -5182 0
c Var 'aux958' order represents '5' with '5186'
-5184 5186 0
c Var 'aux958' direct represents '5' with '5187'
5184 -5186 5187 0
-5187 5186 0
-5187 -5184 0
c Var 'aux958' direct represents '6' with '-5186'
5177 5179 5181 5183 5185 5187 -5186 0
c Encoding variable: aux959 with domain: int(0) (representing constraint (rijk_00004_00006_00003 + shift(1, -1)))
c Var 'aux959' direct represents '0' with '5188'
5188 0
c Encoding variable: aux960 with domain: bool (representing constraint (aux959 + uijk_00004_00006_00002))
c Var 'aux960' direct represents '0' with '-5189'
c Var 'aux960' direct represents '1' with '5189'
c Var 'aux960' order represents '1' with '1'
c Var 'aux960' order represents '0' with '-5189'
c Encoding variable: aux961 with domain: int(0..2) (representing constraint (lijk_00004_00006_00001 + aux960))
c Both direct and order encoding.
c Var 'aux961' order represents '0' with '5190'
c Var 'aux961' direct represents '0' with '5190'
c Var 'aux961' order represents '1' with '5191'
-5190 5191 0
c Var 'aux961' direct represents '1' with '5192'
5190 -5191 5192 0
-5192 5191 0
-5192 -5190 0
c Var 'aux961' direct represents '2' with '-5191'
5190 5192 -5191 0
c Encoding variable: aux962 with domain: int(0..2) (representing constraint (lijk_00004_00006_00003 + rijk_00004_00006_00002))
c Both direct and order encoding.
c Var 'aux962' order represents '0' with '5193'
c Var 'aux962' direct represents '0' with '5193'
c Var 'aux962' order represents '1' with '5194'
-5193 5194 0
c Var 'aux962' direct represents '1' with '5195'
5193 -5194 5195 0
-5195 5194 0
-5195 -5193 0
c Var 'aux962' direct represents '2' with '-5194'
5193 5195 -5194 0
c Encoding variable: aux963 with domain: int(0..2) (representing constraint (dijk_00004_00006_00003 + dijk_00004_00006_00001))
c Both direct and order encoding.
c Var 'aux963' order represents '0' with '5196'
c Var 'aux963' direct represents '0' with '5196'
c Var 'aux963' order represents '1' with '5197'
-5196 5197 0
c Var 'aux963' direct represents '1' with '5198'
5196 -5197 5198 0
-5198 5197 0
-5198 -5196 0
c Var 'aux963' direct represents '2' with '-5197'
5196 5198 -5197 0
c Encoding variable: aux964 with domain: int(0..2) (representing constraint (dijk_00004_00006_00002 + uijk_00004_00006_00001))
c Both direct and order encoding.
c Var 'aux964' order represents '0' with '5199'
c Var 'aux964' direct represents '0' with '5199'
c Var 'aux964' order represents '1' with '5200'
-5199 5200 0
c Var 'aux964' direct represents '1' with '5201'
5199 -5200 5201 0
-5201 5200 0
-5201 -5199 0
c Var 'aux964' direct represents '2' with '-5200'
5199 5201 -5200 0
c Encoding variable: aux965 with domain: int(0..2) (representing constraint (lijk_00004_00006_00002 + rijk_00004_00006_00001))
c Both direct and order encoding.
c Var 'aux965' order represents '0' with '5202'
c Var 'aux965' direct represents '0' with '5202'
c Var 'aux965' order represents '1' with '5203'
-5202 5203 0
c Var 'aux965' direct represents '1' with '5204'
5202 -5203 5204 0
-5204 5203 0
-5204 -5202 0
c Var 'aux965' direct represents '2' with '-5203'
5202 5204 -5203 0
c Encoding variable: aux966 with domain: int(0..3) (representing constraint (uijk_00004_00006_00003 + aux965))
c Both direct and order encoding.
c Var 'aux966' order represents '0' with '5205'
c Var 'aux966' direct represents '0' with '5205'
c Var 'aux966' order represents '1' with '5206'
-5205 5206 0
c Var 'aux966' direct represents '1' with '5207'
5205 -5206 5207 0
-5207 5206 0
-5207 -5205 0
c Var 'aux966' order represents '2' with '5208'
-5206 5208 0
c Var 'aux966' direct represents '2' with '5209'
5206 -5208 5209 0
-5209 5208 0
-5209 -5206 0
c Var 'aux966' direct represents '3' with '-5208'
5205 5207 5209 -5208 0
c Encoding variable: aux967 with domain: int(0..4) (representing constraint (aux963 + aux962))
c Both direct and order encoding.
c Var 'aux967' order represents '0' with '5210'
c Var 'aux967' direct represents '0' with '5210'
c Var 'aux967' order represents '1' with '5211'
-5210 5211 0
c Var 'aux967' direct represents '1' with '5212'
5210 -5211 5212 0
-5212 5211 0
-5212 -5210 0
c Var 'aux967' order represents '2' with '5213'
-5211 5213 0
c Var 'aux967' direct represents '2' with '5214'
5211 -5213 5214 0
-5214 5213 0
-5214 -5211 0
c Var 'aux967' order represents '3' with '5215'
-5213 5215 0
c Var 'aux967' direct represents '3' with '5216'
5213 -5215 5216 0
-5216 5215 0
-5216 -5213 0
c Var 'aux967' direct represents '4' with '-5215'
5210 5212 5214 5216 -5215 0
c Encoding variable: aux968 with domain: int(0..4) (representing constraint (aux961 + aux964))
c Both direct and order encoding.
c Var 'aux968' order represents '0' with '5217'
c Var 'aux968' direct represents '0' with '5217'
c Var 'aux968' order represents '1' with '5218'
-5217 5218 0
c Var 'aux968' direct represents '1' with '5219'
5217 -5218 5219 0
-5219 5218 0
-5219 -5217 0
c Var 'aux968' order represents '2' with '5220'
-5218 5220 0
c Var 'aux968' direct represents '2' with '5221'
5218 -5220 5221 0
-5221 5220 0
-5221 -5218 0
c Var 'aux968' order represents '3' with '5222'
-5220 5222 0
c Var 'aux968' direct represents '3' with '5223'
5220 -5222 5223 0
-5223 5222 0
-5223 -5220 0
c Var 'aux968' direct represents '4' with '-5222'
5217 5219 5221 5223 -5222 0
c Encoding variable: aux969 with domain: int(0..7) (representing constraint (aux966 + aux968))
c Both direct and order encoding.
c Var 'aux969' order represents '0' with '5224'
c Var 'aux969' direct represents '0' with '5224'
c Var 'aux969' order represents '1' with '5225'
-5224 5225 0
c Var 'aux969' direct represents '1' with '5226'
5224 -5225 5226 0
-5226 5225 0
-5226 -5224 0
c Var 'aux969' order represents '2' with '5227'
-5225 5227 0
c Var 'aux969' direct represents '2' with '5228'
5225 -5227 5228 0
-5228 5227 0
-5228 -5225 0
c Var 'aux969' order represents '3' with '5229'
-5227 5229 0
c Var 'aux969' direct represents '3' with '5230'
5227 -5229 5230 0
-5230 5229 0
-5230 -5227 0
c Var 'aux969' order represents '4' with '5231'
-5229 5231 0
c Var 'aux969' direct represents '4' with '5232'
5229 -5231 5232 0
-5232 5231 0
-5232 -5229 0
c Var 'aux969' order represents '5' with '5233'
-5231 5233 0
c Var 'aux969' direct represents '5' with '5234'
5231 -5233 5234 0
-5234 5233 0
-5234 -5231 0
c Var 'aux969' order represents '6' with '5235'
-5233 5235 0
c Var 'aux969' direct represents '6' with '5236'
5233 -5235 5236 0
-5236 5235 0
-5236 -5233 0
c Var 'aux969' direct represents '7' with '-5235'
5224 5226 5228 5230 5232 5234 5236 -5235 0
c Encoding variable: aux970 with domain: int(0) (representing constraint (rijk_00005_00006_00003 + shift(1, -1)))
c Var 'aux970' direct represents '0' with '5237'
5237 0
c Encoding variable: aux971 with domain: bool (representing constraint (aux970 + uijk_00005_00006_00001))
c Var 'aux971' direct represents '0' with '-5238'
c Var 'aux971' direct represents '1' with '5238'
c Var 'aux971' order represents '1' with '1'
c Var 'aux971' order represents '0' with '-5238'
c Encoding variable: aux972 with domain: int(0..2) (representing constraint (lijk_00005_00006_00001 + aux971))
c Both direct and order encoding.
c Var 'aux972' order represents '0' with '5239'
c Var 'aux972' direct represents '0' with '5239'
c Var 'aux972' order represents '1' with '5240'
-5239 5240 0
c Var 'aux972' direct represents '1' with '5241'
5239 -5240 5241 0
-5241 5240 0
-5241 -5239 0
c Var 'aux972' direct represents '2' with '-5240'
5239 5241 -5240 0
c Encoding variable: aux973 with domain: int(0..2) (representing constraint (dijk_00005_00006_00003 + lijk_00005_00006_00003))
c Both direct and order encoding.
c Var 'aux973' order represents '0' with '5242'
c Var 'aux973' direct represents '0' with '5242'
c Var 'aux973' order represents '1' with '5243'
-5242 5243 0
c Var 'aux973' direct represents '1' with '5244'
5242 -5243 5244 0
-5244 5243 0
-5244 -5242 0
c Var 'aux973' direct represents '2' with '-5243'
5242 5244 -5243 0
c Encoding variable: aux974 with domain: int(0..2) (representing constraint (dijk_00005_00006_00002 + uijk_00005_00006_00003))
c Both direct and order encoding.
c Var 'aux974' order represents '0' with '5245'
c Var 'aux974' direct represents '0' with '5245'
c Var 'aux974' order represents '1' with '5246'
-5245 5246 0
c Var 'aux974' direct represents '1' with '5247'
5245 -5246 5247 0
-5247 5246 0
-5247 -5245 0
c Var 'aux974' direct represents '2' with '-5246'
5245 5247 -5246 0
c Encoding variable: aux975 with domain: int(0..2) (representing constraint (dijk_00005_00006_00001 + rijk_00005_00006_00002))
c Both direct and order encoding.
c Var 'aux975' order represents '0' with '5248'
c Var 'aux975' direct represents '0' with '5248'
c Var 'aux975' order represents '1' with '5249'
-5248 5249 0
c Var 'aux975' direct represents '1' with '5250'
5248 -5249 5250 0
-5250 5249 0
-5250 -5248 0
c Var 'aux975' direct represents '2' with '-5249'
5248 5250 -5249 0
c Encoding variable: aux976 with domain: int(0..2) (representing constraint (lijk_00005_00006_00002 + rijk_00005_00006_00001))
c Both direct and order encoding.
c Var 'aux976' order represents '0' with '5251'
c Var 'aux976' direct represents '0' with '5251'
c Var 'aux976' order represents '1' with '5252'
-5251 5252 0
c Var 'aux976' direct represents '1' with '5253'
5251 -5252 5253 0
-5253 5252 0
-5253 -5251 0
c Var 'aux976' direct represents '2' with '-5252'
5251 5253 -5252 0
c Encoding variable: aux977 with domain: int(0..3) (representing constraint (uijk_00005_00006_00002 + aux976))
c Both direct and order encoding.
c Var 'aux977' order represents '0' with '5254'
c Var 'aux977' direct represents '0' with '5254'
c Var 'aux977' order represents '1' with '5255'
-5254 5255 0
c Var 'aux977' direct represents '1' with '5256'
5254 -5255 5256 0
-5256 5255 0
-5256 -5254 0
c Var 'aux977' order represents '2' with '5257'
-5255 5257 0
c Var 'aux977' direct represents '2' with '5258'
5255 -5257 5258 0
-5258 5257 0
-5258 -5255 0
c Var 'aux977' direct represents '3' with '-5257'
5254 5256 5258 -5257 0
c Encoding variable: aux978 with domain: int(0..4) (representing constraint (aux974 + aux973))
c Both direct and order encoding.
c Var 'aux978' order represents '0' with '5259'
c Var 'aux978' direct represents '0' with '5259'
c Var 'aux978' order represents '1' with '5260'
-5259 5260 0
c Var 'aux978' direct represents '1' with '5261'
5259 -5260 5261 0
-5261 5260 0
-5261 -5259 0
c Var 'aux978' order represents '2' with '5262'
-5260 5262 0
c Var 'aux978' direct represents '2' with '5263'
5260 -5262 5263 0
-5263 5262 0
-5263 -5260 0
c Var 'aux978' order represents '3' with '5264'
-5262 5264 0
c Var 'aux978' direct represents '3' with '5265'
5262 -5264 5265 0
-5265 5264 0
-5265 -5262 0
c Var 'aux978' direct represents '4' with '-5264'
5259 5261 5263 5265 -5264 0
c Encoding variable: aux979 with domain: int(0..4) (representing constraint (aux972 + aux975))
c Both direct and order encoding.
c Var 'aux979' order represents '0' with '5266'
c Var 'aux979' direct represents '0' with '5266'
c Var 'aux979' order represents '1' with '5267'
-5266 5267 0
c Var 'aux979' direct represents '1' with '5268'
5266 -5267 5268 0
-5268 5267 0
-5268 -5266 0
c Var 'aux979' order represents '2' with '5269'
-5267 5269 0
c Var 'aux979' direct represents '2' with '5270'
5267 -5269 5270 0
-5270 5269 0
-5270 -5267 0
c Var 'aux979' order represents '3' with '5271'
-5269 5271 0
c Var 'aux979' direct represents '3' with '5272'
5269 -5271 5272 0
-5272 5271 0
-5272 -5269 0
c Var 'aux979' direct represents '4' with '-5271'
5266 5268 5270 5272 -5271 0
c Encoding variable: aux980 with domain: int(0..7) (representing constraint (aux977 + aux979))
c Both direct and order encoding.
c Var 'aux980' order represents '0' with '5273'
c Var 'aux980' direct represents '0' with '5273'
c Var 'aux980' order represents '1' with '5274'
-5273 5274 0
c Var 'aux980' direct represents '1' with '5275'
5273 -5274 5275 0
-5275 5274 0
-5275 -5273 0
c Var 'aux980' order represents '2' with '5276'
-5274 5276 0
c Var 'aux980' direct represents '2' with '5277'
5274 -5276 5277 0
-5277 5276 0
-5277 -5274 0
c Var 'aux980' order represents '3' with '5278'
-5276 5278 0
c Var 'aux980' direct represents '3' with '5279'
5276 -5278 5279 0
-5279 5278 0
-5279 -5276 0
c Var 'aux980' order represents '4' with '5280'
-5278 5280 0
c Var 'aux980' direct represents '4' with '5281'
5278 -5280 5281 0
-5281 5280 0
-5281 -5278 0
c Var 'aux980' order represents '5' with '5282'
-5280 5282 0
c Var 'aux980' direct represents '5' with '5283'
5280 -5282 5283 0
-5283 5282 0
-5283 -5280 0
c Var 'aux980' order represents '6' with '5284'
-5282 5284 0
c Var 'aux980' direct represents '6' with '5285'
5282 -5284 5285 0
-5285 5284 0
-5285 -5282 0
c Var 'aux980' direct represents '7' with '-5284'
5273 5275 5277 5279 5281 5283 5285 -5284 0
c Encoding variable: aux981 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00006_00006_00003))
c Var 'aux981' direct represents '0' with '5286'
5286 0
c Encoding variable: aux982 with domain: int(0) (representing constraint (rijk_00006_00006_00003 + aux981))
c Var 'aux982' direct represents '0' with '5287'
5287 0
c Encoding variable: aux983 with domain: bool (representing constraint (aux982 + rijk_00006_00006_00002))
c Var 'aux983' direct represents '0' with '-5288'
c Var 'aux983' direct represents '1' with '5288'
c Var 'aux983' order represents '1' with '1'
c Var 'aux983' order represents '0' with '-5288'
c Encoding variable: aux984 with domain: int(0..2) (representing constraint (lijk_00006_00006_00003 + aux983))
c Both direct and order encoding.
c Var 'aux984' order represents '0' with '5289'
c Var 'aux984' direct represents '0' with '5289'
c Var 'aux984' order represents '1' with '5290'
-5289 5290 0
c Var 'aux984' direct represents '1' with '5291'
5289 -5290 5291 0
-5291 5290 0
-5291 -5289 0
c Var 'aux984' direct represents '2' with '-5290'
5289 5291 -5290 0
c Encoding variable: aux985 with domain: int(0..2) (representing constraint (lijk_00006_00006_00002 + dijk_00006_00006_00002))
c Both direct and order encoding.
c Var 'aux985' order represents '0' with '5292'
c Var 'aux985' direct represents '0' with '5292'
c Var 'aux985' order represents '1' with '5293'
-5292 5293 0
c Var 'aux985' direct represents '1' with '5294'
5292 -5293 5294 0
-5294 5293 0
-5294 -5292 0
c Var 'aux985' direct represents '2' with '-5293'
5292 5294 -5293 0
c Encoding variable: aux986 with domain: int(0..2) (representing constraint (uijk_00006_00006_00002 + lijk_00006_00006_00001))
c Both direct and order encoding.
c Var 'aux986' order represents '0' with '5295'
c Var 'aux986' direct represents '0' with '5295'
c Var 'aux986' order represents '1' with '5296'
-5295 5296 0
c Var 'aux986' direct represents '1' with '5297'
5295 -5296 5297 0
-5297 5296 0
-5297 -5295 0
c Var 'aux986' direct represents '2' with '-5296'
5295 5297 -5296 0
c Encoding variable: aux987 with domain: int(0..2) (representing constraint (uijk_00006_00006_00003 + rijk_00006_00006_00001))
c Both direct and order encoding.
c Var 'aux987' order represents '0' with '5298'
c Var 'aux987' direct represents '0' with '5298'
c Var 'aux987' order represents '1' with '5299'
-5298 5299 0
c Var 'aux987' direct represents '1' with '5300'
5298 -5299 5300 0
-5300 5299 0
-5300 -5298 0
c Var 'aux987' direct represents '2' with '-5299'
5298 5300 -5299 0
c Encoding variable: aux988 with domain: int(0..2) (representing constraint (uijk_00006_00006_00001 + dijk_00006_00006_00001))
c Both direct and order encoding.
c Var 'aux988' order represents '0' with '5301'
c Var 'aux988' direct represents '0' with '5301'
c Var 'aux988' order represents '1' with '5302'
-5301 5302 0
c Var 'aux988' direct represents '1' with '5303'
5301 -5302 5303 0
-5303 5302 0
-5303 -5301 0
c Var 'aux988' direct represents '2' with '-5302'
5301 5303 -5302 0
c Encoding variable: aux989 with domain: int(0..4) (representing constraint (aux984 + aux988))
c Both direct and order encoding.
c Var 'aux989' order represents '0' with '5304'
c Var 'aux989' direct represents '0' with '5304'
c Var 'aux989' order represents '1' with '5305'
-5304 5305 0
c Var 'aux989' direct represents '1' with '5306'
5304 -5305 5306 0
-5306 5305 0
-5306 -5304 0
c Var 'aux989' order represents '2' with '5307'
-5305 5307 0
c Var 'aux989' direct represents '2' with '5308'
5305 -5307 5308 0
-5308 5307 0
-5308 -5305 0
c Var 'aux989' order represents '3' with '5309'
-5307 5309 0
c Var 'aux989' direct represents '3' with '5310'
5307 -5309 5310 0
-5310 5309 0
-5310 -5307 0
c Var 'aux989' direct represents '4' with '-5309'
5304 5306 5308 5310 -5309 0
c Encoding variable: aux990 with domain: int(0..4) (representing constraint (aux985 + aux986))
c Both direct and order encoding.
c Var 'aux990' order represents '0' with '5311'
c Var 'aux990' direct represents '0' with '5311'
c Var 'aux990' order represents '1' with '5312'
-5311 5312 0
c Var 'aux990' direct represents '1' with '5313'
5311 -5312 5313 0
-5313 5312 0
-5313 -5311 0
c Var 'aux990' order represents '2' with '5314'
-5312 5314 0
c Var 'aux990' direct represents '2' with '5315'
5312 -5314 5315 0
-5315 5314 0
-5315 -5312 0
c Var 'aux990' order represents '3' with '5316'
-5314 5316 0
c Var 'aux990' direct represents '3' with '5317'
5314 -5316 5317 0
-5317 5316 0
-5317 -5314 0
c Var 'aux990' direct represents '4' with '-5316'
5311 5313 5315 5317 -5316 0
c Encoding variable: aux991 with domain: int(0..6) (representing constraint (aux987 + aux990))
c Both direct and order encoding.
c Var 'aux991' order represents '0' with '5318'
c Var 'aux991' direct represents '0' with '5318'
c Var 'aux991' order represents '1' with '5319'
-5318 5319 0
c Var 'aux991' direct represents '1' with '5320'
5318 -5319 5320 0
-5320 5319 0
-5320 -5318 0
c Var 'aux991' order represents '2' with '5321'
-5319 5321 0
c Var 'aux991' direct represents '2' with '5322'
5319 -5321 5322 0
-5322 5321 0
-5322 -5319 0
c Var 'aux991' order represents '3' with '5323'
-5321 5323 0
c Var 'aux991' direct represents '3' with '5324'
5321 -5323 5324 0
-5324 5323 0
-5324 -5321 0
c Var 'aux991' order represents '4' with '5325'
-5323 5325 0
c Var 'aux991' direct represents '4' with '5326'
5323 -5325 5326 0
-5326 5325 0
-5326 -5323 0
c Var 'aux991' order represents '5' with '5327'
-5325 5327 0
c Var 'aux991' direct represents '5' with '5328'
5325 -5327 5328 0
-5328 5327 0
-5328 -5325 0
c Var 'aux991' direct represents '6' with '-5327'
5318 5320 5322 5324 5326 5328 -5327 0
c Encoding variable: aux992 with domain: int(0) (representing constraint (shift(1, -1) + dijk_00007_00006_00003))
c Var 'aux992' direct represents '0' with '5329'
5329 0
c Encoding variable: aux993 with domain: int(0) (representing constraint (dijk_00007_00006_00002 + rijk_00007_00006_00003))
c Var 'aux993' direct represents '0' with '5330'
5330 0
c Encoding variable: aux994 with domain: int(0) (representing constraint (aux992 + aux993))
c Var 'aux994' direct represents '0' with '5331'
5331 0
c Encoding variable: aux995 with domain: bool (representing constraint (aux994 + lijk_00007_00006_00002))
c Var 'aux995' direct represents '0' with '-5332'
c Var 'aux995' direct represents '1' with '5332'
c Var 'aux995' order represents '1' with '1'
c Var 'aux995' order represents '0' with '-5332'
c Encoding variable: aux996 with domain: int(0..2) (representing constraint (lijk_00007_00006_00003 + aux995))
c Both direct and order encoding.
c Var 'aux996' order represents '0' with '5333'
c Var 'aux996' direct represents '0' with '5333'
c Var 'aux996' order represents '1' with '5334'
-5333 5334 0
c Var 'aux996' direct represents '1' with '5335'
5333 -5334 5335 0
-5335 5334 0
-5335 -5333 0
c Var 'aux996' direct represents '2' with '-5334'
5333 5335 -5334 0
c Encoding variable: aux997 with domain: int(0..2) (representing constraint (lijk_00007_00006_00001 + uijk_00007_00006_00001))
c Both direct and order encoding.
c Var 'aux997' order represents '0' with '5336'
c Var 'aux997' direct represents '0' with '5336'
c Var 'aux997' order represents '1' with '5337'
-5336 5337 0
c Var 'aux997' direct represents '1' with '5338'
5336 -5337 5338 0
-5338 5337 0
-5338 -5336 0
c Var 'aux997' direct represents '2' with '-5337'
5336 5338 -5337 0
c Encoding variable: aux998 with domain: int(0..2) (representing constraint (uijk_00007_00006_00002 + uijk_00007_00006_00003))
c Both direct and order encoding.
c Var 'aux998' order represents '0' with '5339'
c Var 'aux998' direct represents '0' with '5339'
c Var 'aux998' order represents '1' with '5340'
-5339 5340 0
c Var 'aux998' direct represents '1' with '5341'
5339 -5340 5341 0
-5341 5340 0
-5341 -5339 0
c Var 'aux998' direct represents '2' with '-5340'
5339 5341 -5340 0
c Encoding variable: aux999 with domain: int(0..2) (representing constraint (rijk_00007_00006_00002 + dijk_00007_00006_00001))
c Both direct and order encoding.
c Var 'aux999' order represents '0' with '5342'
c Var 'aux999' direct represents '0' with '5342'
c Var 'aux999' order represents '1' with '5343'
-5342 5343 0
c Var 'aux999' direct represents '1' with '5344'
5342 -5343 5344 0
-5344 5343 0
-5344 -5342 0
c Var 'aux999' direct represents '2' with '-5343'
5342 5344 -5343 0
c Encoding variable: aux1000 with domain: int(0..3) (representing constraint (rijk_00007_00006_00001 + aux999))
c Both direct and order encoding.
c Var 'aux1000' order represents '0' with '5345'
c Var 'aux1000' direct represents '0' with '5345'
c Var 'aux1000' order represents '1' with '5346'
-5345 5346 0
c Var 'aux1000' direct represents '1' with '5347'
5345 -5346 5347 0
-5347 5346 0
-5347 -5345 0
c Var 'aux1000' order represents '2' with '5348'
-5346 5348 0
c Var 'aux1000' direct represents '2' with '5349'
5346 -5348 5349 0
-5349 5348 0
-5349 -5346 0
c Var 'aux1000' direct represents '3' with '-5348'
5345 5347 5349 -5348 0
c Encoding variable: aux1001 with domain: int(0..4) (representing constraint (aux997 + aux996))
c Both direct and order encoding.
c Var 'aux1001' order represents '0' with '5350'
c Var 'aux1001' direct represents '0' with '5350'
c Var 'aux1001' order represents '1' with '5351'
-5350 5351 0
c Var 'aux1001' direct represents '1' with '5352'
5350 -5351 5352 0
-5352 5351 0
-5352 -5350 0
c Var 'aux1001' order represents '2' with '5353'
-5351 5353 0
c Var 'aux1001' direct represents '2' with '5354'
5351 -5353 5354 0
-5354 5353 0
-5354 -5351 0
c Var 'aux1001' order represents '3' with '5355'
-5353 5355 0
c Var 'aux1001' direct represents '3' with '5356'
5353 -5355 5356 0
-5356 5355 0
-5356 -5353 0
c Var 'aux1001' direct represents '4' with '-5355'
5350 5352 5354 5356 -5355 0
c Encoding variable: aux1002 with domain: int(0..5) (representing constraint (aux998 + aux1000))
c Both direct and order encoding.
c Var 'aux1002' order represents '0' with '5357'
c Var 'aux1002' direct represents '0' with '5357'
c Var 'aux1002' order represents '1' with '5358'
-5357 5358 0
c Var 'aux1002' direct represents '1' with '5359'
5357 -5358 5359 0
-5359 5358 0
-5359 -5357 0
c Var 'aux1002' order represents '2' with '5360'
-5358 5360 0
c Var 'aux1002' direct represents '2' with '5361'
5358 -5360 5361 0
-5361 5360 0
-5361 -5358 0
c Var 'aux1002' order represents '3' with '5362'
-5360 5362 0
c Var 'aux1002' direct represents '3' with '5363'
5360 -5362 5363 0
-5363 5362 0
-5363 -5360 0
c Var 'aux1002' order represents '4' with '5364'
-5362 5364 0
c Var 'aux1002' direct represents '4' with '5365'
5362 -5364 5365 0
-5365 5364 0
-5365 -5362 0
c Var 'aux1002' direct represents '5' with '-5364'
5357 5359 5361 5363 5365 -5364 0
c Encoding variable: aux1003 with domain: int(0) (representing constraint (dijk_00008_00006_00001 + rijk_00008_00006_00003))
c Var 'aux1003' direct represents '0' with '5366'
5366 0
c Encoding variable: aux1004 with domain: int(0) (representing constraint (dijk_00008_00006_00002 + dijk_00008_00006_00003))
c Var 'aux1004' direct represents '0' with '5367'
5367 0
c Encoding variable: aux1005 with domain: int(0) (representing constraint (aux1003 + shift(1, -1)))
c Var 'aux1005' direct represents '0' with '5368'
5368 0
c Encoding variable: aux1006 with domain: int(0) (representing constraint (aux1004 + aux1005))
c Var 'aux1006' direct represents '0' with '5369'
5369 0
c Encoding variable: aux1007 with domain: bool (representing constraint (aux1006 + rijk_00008_00006_00002))
c Var 'aux1007' direct represents '0' with '-5370'
c Var 'aux1007' direct represents '1' with '5370'
c Var 'aux1007' order represents '1' with '1'
c Var 'aux1007' order represents '0' with '-5370'
c Encoding variable: aux1008 with domain: int(0..2) (representing constraint (lijk_00008_00006_00002 + aux1007))
c Both direct and order encoding.
c Var 'aux1008' order represents '0' with '5371'
c Var 'aux1008' direct represents '0' with '5371'
c Var 'aux1008' order represents '1' with '5372'
-5371 5372 0
c Var 'aux1008' direct represents '1' with '5373'
5371 -5372 5373 0
-5373 5372 0
-5373 -5371 0
c Var 'aux1008' direct represents '2' with '-5372'
5371 5373 -5372 0
c Encoding variable: aux1009 with domain: int(0..2) (representing constraint (lijk_00008_00006_00001 + lijk_00008_00006_00003))
c Both direct and order encoding.
c Var 'aux1009' order represents '0' with '5374'
c Var 'aux1009' direct represents '0' with '5374'
c Var 'aux1009' order represents '1' with '5375'
-5374 5375 0
c Var 'aux1009' direct represents '1' with '5376'
5374 -5375 5376 0
-5376 5375 0
-5376 -5374 0
c Var 'aux1009' direct represents '2' with '-5375'
5374 5376 -5375 0
c Encoding variable: aux1010 with domain: int(0..2) (representing constraint (rijk_00008_00006_00001 + uijk_00008_00006_00002))
c Both direct and order encoding.
c Var 'aux1010' order represents '0' with '5377'
c Var 'aux1010' direct represents '0' with '5377'
c Var 'aux1010' order represents '1' with '5378'
-5377 5378 0
c Var 'aux1010' direct represents '1' with '5379'
5377 -5378 5379 0
-5379 5378 0
-5379 -5377 0
c Var 'aux1010' direct represents '2' with '-5378'
5377 5379 -5378 0
c Encoding variable: aux1011 with domain: int(0..2) (representing constraint (uijk_00008_00006_00001 + uijk_00008_00006_00003))
c Both direct and order encoding.
c Var 'aux1011' order represents '0' with '5380'
c Var 'aux1011' direct represents '0' with '5380'
c Var 'aux1011' order represents '1' with '5381'
-5380 5381 0
c Var 'aux1011' direct represents '1' with '5382'
5380 -5381 5382 0
-5382 5381 0
-5382 -5380 0
c Var 'aux1011' direct represents '2' with '-5381'
5380 5382 -5381 0
c Encoding variable: aux1012 with domain: int(0..4) (representing constraint (aux1009 + aux1011))
c Both direct and order encoding.
c Var 'aux1012' order represents '0' with '5383'
c Var 'aux1012' direct represents '0' with '5383'
c Var 'aux1012' order represents '1' with '5384'
-5383 5384 0
c Var 'aux1012' direct represents '1' with '5385'
5383 -5384 5385 0
-5385 5384 0
-5385 -5383 0
c Var 'aux1012' order represents '2' with '5386'
-5384 5386 0
c Var 'aux1012' direct represents '2' with '5387'
5384 -5386 5387 0
-5387 5386 0
-5387 -5384 0
c Var 'aux1012' order represents '3' with '5388'
-5386 5388 0
c Var 'aux1012' direct represents '3' with '5389'
5386 -5388 5389 0
-5389 5388 0
-5389 -5386 0
c Var 'aux1012' direct represents '4' with '-5388'
5383 5385 5387 5389 -5388 0
c Encoding variable: aux1013 with domain: int(0..4) (representing constraint (aux1008 + aux1010))
c Both direct and order encoding.
c Var 'aux1013' order represents '0' with '5390'
c Var 'aux1013' direct represents '0' with '5390'
c Var 'aux1013' order represents '1' with '5391'
-5390 5391 0
c Var 'aux1013' direct represents '1' with '5392'
5390 -5391 5392 0
-5392 5391 0
-5392 -5390 0
c Var 'aux1013' order represents '2' with '5393'
-5391 5393 0
c Var 'aux1013' direct represents '2' with '5394'
5391 -5393 5394 0
-5394 5393 0
-5394 -5391 0
c Var 'aux1013' order represents '3' with '5395'
-5393 5395 0
c Var 'aux1013' direct represents '3' with '5396'
5393 -5395 5396 0
-5396 5395 0
-5396 -5393 0
c Var 'aux1013' direct represents '4' with '-5395'
5390 5392 5394 5396 -5395 0
c Encoding variable: aux1014 with domain: int(0) (representing constraint (uijk_00001_00007_00001 + uijk_00001_00007_00002))
c Var 'aux1014' direct represents '0' with '5397'
5397 0
c Encoding variable: aux1015 with domain: int(0) (representing constraint (shift(1, -1) + aux1014))
c Var 'aux1015' direct represents '0' with '5398'
5398 0
c Encoding variable: aux1016 with domain: int(0) (representing constraint (uijk_00001_00007_00003 + rijk_00001_00007_00002))
c Var 'aux1016' direct represents '0' with '5399'
5399 0
c Encoding variable: aux1017 with domain: int(0) (representing constraint (aux1015 + aux1016))
c Var 'aux1017' direct represents '0' with '5400'
5400 0
c Encoding variable: aux1018 with domain: int(0) (representing constraint (rijk_00001_00007_00003 + aux1017))
c Var 'aux1018' direct represents '0' with '5401'
5401 0
c Encoding variable: aux1019 with domain: bool (representing constraint (aux1018 + dijk_00001_00007_00001))
c Var 'aux1019' direct represents '0' with '-5402'
c Var 'aux1019' direct represents '1' with '5402'
c Var 'aux1019' order represents '1' with '1'
c Var 'aux1019' order represents '0' with '-5402'
c Encoding variable: aux1020 with domain: int(0..2) (representing constraint (lijk_00001_00007_00001 + aux1019))
c Both direct and order encoding.
c Var 'aux1020' order represents '0' with '5403'
c Var 'aux1020' direct represents '0' with '5403'
c Var 'aux1020' order represents '1' with '5404'
-5403 5404 0
c Var 'aux1020' direct represents '1' with '5405'
5403 -5404 5405 0
-5405 5404 0
-5405 -5403 0
c Var 'aux1020' direct represents '2' with '-5404'
5403 5405 -5404 0
c Encoding variable: aux1021 with domain: int(0..2) (representing constraint (dijk_00001_00007_00002 + lijk_00001_00007_00002))
c Both direct and order encoding.
c Var 'aux1021' order represents '0' with '5406'
c Var 'aux1021' direct represents '0' with '5406'
c Var 'aux1021' order represents '1' with '5407'
-5406 5407 0
c Var 'aux1021' direct represents '1' with '5408'
5406 -5407 5408 0
-5408 5407 0
-5408 -5406 0
c Var 'aux1021' direct represents '2' with '-5407'
5406 5408 -5407 0
c Encoding variable: aux1022 with domain: int(0..2) (representing constraint (dijk_00001_00007_00003 + lijk_00001_00007_00003))
c Both direct and order encoding.
c Var 'aux1022' order represents '0' with '5409'
c Var 'aux1022' direct represents '0' with '5409'
c Var 'aux1022' order represents '1' with '5410'
-5409 5410 0
c Var 'aux1022' direct represents '1' with '5411'
5409 -5410 5411 0
-5411 5410 0
-5411 -5409 0
c Var 'aux1022' direct represents '2' with '-5410'
5409 5411 -5410 0
c Encoding variable: aux1023 with domain: int(0..3) (representing constraint (rijk_00001_00007_00001 + aux1022))
c Both direct and order encoding.
c Var 'aux1023' order represents '0' with '5412'
c Var 'aux1023' direct represents '0' with '5412'
c Var 'aux1023' order represents '1' with '5413'
-5412 5413 0
c Var 'aux1023' direct represents '1' with '5414'
5412 -5413 5414 0
-5414 5413 0
-5414 -5412 0
c Var 'aux1023' order represents '2' with '5415'
-5413 5415 0
c Var 'aux1023' direct represents '2' with '5416'
5413 -5415 5416 0
-5416 5415 0
-5416 -5413 0
c Var 'aux1023' direct represents '3' with '-5415'
5412 5414 5416 -5415 0
c Encoding variable: aux1024 with domain: int(0..4) (representing constraint (aux1020 + aux1021))
c Both direct and order encoding.
c Var 'aux1024' order represents '0' with '5417'
c Var 'aux1024' direct represents '0' with '5417'
c Var 'aux1024' order represents '1' with '5418'
-5417 5418 0
c Var 'aux1024' direct represents '1' with '5419'
5417 -5418 5419 0
-5419 5418 0
-5419 -5417 0
c Var 'aux1024' order represents '2' with '5420'
-5418 5420 0
c Var 'aux1024' direct represents '2' with '5421'
5418 -5420 5421 0
-5421 5420 0
-5421 -5418 0
c Var 'aux1024' order represents '3' with '5422'
-5420 5422 0
c Var 'aux1024' direct represents '3' with '5423'
5420 -5422 5423 0
-5423 5422 0
-5423 -5420 0
c Var 'aux1024' direct represents '4' with '-5422'
5417 5419 5421 5423 -5422 0
c Encoding variable: aux1025 with domain: int(0) (representing constraint (uijk_00002_00007_00002 + rijk_00002_00007_00002))
c Var 'aux1025' direct represents '0' with '5424'
5424 0
c Encoding variable: aux1026 with domain: int(0) (representing constraint (uijk_00002_00007_00003 + rijk_00002_00007_00003))
c Var 'aux1026' direct represents '0' with '5425'
5425 0
c Encoding variable: aux1027 with domain: int(0) (representing constraint (aux1025 + shift(1, -1)))
c Var 'aux1027' direct represents '0' with '5426'
5426 0
c Encoding variable: aux1028 with domain: int(0) (representing constraint (aux1026 + aux1027))
c Var 'aux1028' direct represents '0' with '5427'
5427 0
c Encoding variable: aux1029 with domain: bool (representing constraint (aux1028 + lijk_00002_00007_00001))
c Var 'aux1029' direct represents '0' with '-5428'
c Var 'aux1029' direct represents '1' with '5428'
c Var 'aux1029' order represents '1' with '1'
c Var 'aux1029' order represents '0' with '-5428'
c Encoding variable: aux1030 with domain: int(0..2) (representing constraint (lijk_00002_00007_00003 + aux1029))
c Both direct and order encoding.
c Var 'aux1030' order represents '0' with '5429'
c Var 'aux1030' direct represents '0' with '5429'
c Var 'aux1030' order represents '1' with '5430'
-5429 5430 0
c Var 'aux1030' direct represents '1' with '5431'
5429 -5430 5431 0
-5431 5430 0
-5431 -5429 0
c Var 'aux1030' direct represents '2' with '-5430'
5429 5431 -5430 0
c Encoding variable: aux1031 with domain: int(0..2) (representing constraint (lijk_00002_00007_00002 + rijk_00002_00007_00001))
c Both direct and order encoding.
c Var 'aux1031' order represents '0' with '5432'
c Var 'aux1031' direct represents '0' with '5432'
c Var 'aux1031' order represents '1' with '5433'
-5432 5433 0
c Var 'aux1031' direct represents '1' with '5434'
5432 -5433 5434 0
-5434 5433 0
-5434 -5432 0
c Var 'aux1031' direct represents '2' with '-5433'
5432 5434 -5433 0
c Encoding variable: aux1032 with domain: int(0..2) (representing constraint (dijk_00002_00007_00001 + uijk_00002_00007_00001))
c Both direct and order encoding.
c Var 'aux1032' order represents '0' with '5435'
c Var 'aux1032' direct represents '0' with '5435'
c Var 'aux1032' order represents '1' with '5436'
-5435 5436 0
c Var 'aux1032' direct represents '1' with '5437'
5435 -5436 5437 0
-5437 5436 0
-5437 -5435 0
c Var 'aux1032' direct represents '2' with '-5436'
5435 5437 -5436 0
c Encoding variable: aux1033 with domain: int(0..2) (representing constraint (dijk_00002_00007_00003 + dijk_00002_00007_00002))
c Both direct and order encoding.
c Var 'aux1033' order represents '0' with '5438'
c Var 'aux1033' direct represents '0' with '5438'
c Var 'aux1033' order represents '1' with '5439'
-5438 5439 0
c Var 'aux1033' direct represents '1' with '5440'
5438 -5439 5440 0
-5440 5439 0
-5440 -5438 0
c Var 'aux1033' direct represents '2' with '-5439'
5438 5440 -5439 0
c Encoding variable: aux1034 with domain: int(0..4) (representing constraint (aux1031 + aux1033))
c Both direct and order encoding.
c Var 'aux1034' order represents '0' with '5441'
c Var 'aux1034' direct represents '0' with '5441'
c Var 'aux1034' order represents '1' with '5442'
-5441 5442 0
c Var 'aux1034' direct represents '1' with '5443'
5441 -5442 5443 0
-5443 5442 0
-5443 -5441 0
c Var 'aux1034' order represents '2' with '5444'
-5442 5444 0
c Var 'aux1034' direct represents '2' with '5445'
5442 -5444 5445 0
-5445 5444 0
-5445 -5442 0
c Var 'aux1034' order represents '3' with '5446'
-5444 5446 0
c Var 'aux1034' direct represents '3' with '5447'
5444 -5446 5447 0
-5447 5446 0
-5447 -5444 0
c Var 'aux1034' direct represents '4' with '-5446'
5441 5443 5445 5447 -5446 0
c Encoding variable: aux1035 with domain: int(0..4) (representing constraint (aux1030 + aux1032))
c Both direct and order encoding.
c Var 'aux1035' order represents '0' with '5448'
c Var 'aux1035' direct represents '0' with '5448'
c Var 'aux1035' order represents '1' with '5449'
-5448 5449 0
c Var 'aux1035' direct represents '1' with '5450'
5448 -5449 5450 0
-5450 5449 0
-5450 -5448 0
c Var 'aux1035' order represents '2' with '5451'
-5449 5451 0
c Var 'aux1035' direct represents '2' with '5452'
5449 -5451 5452 0
-5452 5451 0
-5452 -5449 0
c Var 'aux1035' order represents '3' with '5453'
-5451 5453 0
c Var 'aux1035' direct represents '3' with '5454'
5451 -5453 5454 0
-5454 5453 0
-5454 -5451 0
c Var 'aux1035' direct represents '4' with '-5453'
5448 5450 5452 5454 -5453 0
c Encoding variable: aux1036 with domain: int(0) (representing constraint (rijk_00003_00007_00002 + rijk_00003_00007_00003))
c Var 'aux1036' direct represents '0' with '5455'
5455 0
c Encoding variable: aux1037 with domain: int(0) (representing constraint (shift(1, -1) + uijk_00003_00007_00003))
c Var 'aux1037' direct represents '0' with '5456'
5456 0
c Encoding variable: aux1038 with domain: int(0) (representing constraint (aux1036 + aux1037))
c Var 'aux1038' direct represents '0' with '5457'
5457 0
c Encoding variable: aux1039 with domain: bool (representing constraint (aux1038 + rijk_00003_00007_00001))
c Var 'aux1039' direct represents '0' with '-5458'
c Var 'aux1039' direct represents '1' with '5458'
c Var 'aux1039' order represents '1' with '1'
c Var 'aux1039' order represents '0' with '-5458'
c Encoding variable: aux1040 with domain: int(0..2) (representing constraint (lijk_00003_00007_00002 + aux1039))
c Both direct and order encoding.
c Var 'aux1040' order represents '0' with '5459'
c Var 'aux1040' direct represents '0' with '5459'
c Var 'aux1040' order represents '1' with '5460'
-5459 5460 0
c Var 'aux1040' direct represents '1' with '5461'
5459 -5460 5461 0
-5461 5460 0
-5461 -5459 0
c Var 'aux1040' direct represents '2' with '-5460'
5459 5461 -5460 0
c Encoding variable: aux1041 with domain: int(0..2) (representing constraint (dijk_00003_00007_00002 + uijk_00003_00007_00002))
c Both direct and order encoding.
c Var 'aux1041' order represents '0' with '5462'
c Var 'aux1041' direct represents '0' with '5462'
c Var 'aux1041' order represents '1' with '5463'
-5462 5463 0
c Var 'aux1041' direct represents '1' with '5464'
5462 -5463 5464 0
-5464 5463 0
-5464 -5462 0
c Var 'aux1041' direct represents '2' with '-5463'
5462 5464 -5463 0
c Encoding variable: aux1042 with domain: int(0..2) (representing constraint (lijk_00003_00007_00001 + dijk_00003_00007_00001))
c Both direct and order encoding.
c Var 'aux1042' order represents '0' with '5465'
c Var 'aux1042' direct represents '0' with '5465'
c Var 'aux1042' order represents '1' with '5466'
-5465 5466 0
c Var 'aux1042' direct represents '1' with '5467'
5465 -5466 5467 0
-5467 5466 0
-5467 -5465 0
c Var 'aux1042' direct represents '2' with '-5466'
5465 5467 -5466 0
c Encoding variable: aux1043 with domain: int(0..2) (representing constraint (dijk_00003_00007_00003 + lijk_00003_00007_00003))
c Both direct and order encoding.
c Var 'aux1043' order represents '0' with '5468'
c Var 'aux1043' direct represents '0' with '5468'
c Var 'aux1043' order represents '1' with '5469'
-5468 5469 0
c Var 'aux1043' direct represents '1' with '5470'
5468 -5469 5470 0
-5470 5469 0
-5470 -5468 0
c Var 'aux1043' direct represents '2' with '-5469'
5468 5470 -5469 0
c Encoding variable: aux1044 with domain: int(0..3) (representing constraint (uijk_00003_00007_00001 + aux1043))
c Both direct and order encoding.
c Var 'aux1044' order represents '0' with '5471'
c Var 'aux1044' direct represents '0' with '5471'
c Var 'aux1044' order represents '1' with '5472'
-5471 5472 0
c Var 'aux1044' direct represents '1' with '5473'
5471 -5472 5473 0
-5473 5472 0
-5473 -5471 0
c Var 'aux1044' order represents '2' with '5474'
-5472 5474 0
c Var 'aux1044' direct represents '2' with '5475'
5472 -5474 5475 0
-5475 5474 0
-5475 -5472 0
c Var 'aux1044' direct represents '3' with '-5474'
5471 5473 5475 -5474 0
c Encoding variable: aux1045 with domain: int(0..4) (representing constraint (aux1041 + aux1040))
c Both direct and order encoding.
c Var 'aux1045' order represents '0' with '5476'
c Var 'aux1045' direct represents '0' with '5476'
c Var 'aux1045' order represents '1' with '5477'
-5476 5477 0
c Var 'aux1045' direct represents '1' with '5478'
5476 -5477 5478 0
-5478 5477 0
-5478 -5476 0
c Var 'aux1045' order represents '2' with '5479'
-5477 5479 0
c Var 'aux1045' direct represents '2' with '5480'
5477 -5479 5480 0
-5480 5479 0
-5480 -5477 0
c Var 'aux1045' order represents '3' with '5481'
-5479 5481 0
c Var 'aux1045' direct represents '3' with '5482'
5479 -5481 5482 0
-5482 5481 0
-5482 -5479 0
c Var 'aux1045' direct represents '4' with '-5481'
5476 5478 5480 5482 -5481 0
c Encoding variable: aux1046 with domain: int(0..5) (representing constraint (aux1042 + aux1044))
c Both direct and order encoding.
c Var 'aux1046' order represents '0' with '5483'
c Var 'aux1046' direct represents '0' with '5483'
c Var 'aux1046' order represents '1' with '5484'
-5483 5484 0
c Var 'aux1046' direct represents '1' with '5485'
5483 -5484 5485 0
-5485 5484 0
-5485 -5483 0
c Var 'aux1046' order represents '2' with '5486'
-5484 5486 0
c Var 'aux1046' direct represents '2' with '5487'
5484 -5486 5487 0
-5487 5486 0
-5487 -5484 0
c Var 'aux1046' order represents '3' with '5488'
-5486 5488 0
c Var 'aux1046' direct represents '3' with '5489'
5486 -5488 5489 0
-5489 5488 0
-5489 -5486 0
c Var 'aux1046' order represents '4' with '5490'
-5488 5490 0
c Var 'aux1046' direct represents '4' with '5491'
5488 -5490 5491 0
-5491 5490 0
-5491 -5488 0
c Var 'aux1046' direct represents '5' with '-5490'
5483 5485 5487 5489 5491 -5490 0
c Encoding variable: aux1047 with domain: int(0) (representing constraint (rijk_00004_00007_00002 + rijk_00004_00007_00003))
c Var 'aux1047' direct represents '0' with '5492'
5492 0
c Encoding variable: aux1048 with domain: int(0) (representing constraint (shift(1, -1) + aux1047))
c Var 'aux1048' direct represents '0' with '5493'
5493 0
c Encoding variable: aux1049 with domain: bool (representing constraint (aux1048 + dijk_00004_00007_00002))
c Var 'aux1049' direct represents '0' with '-5494'
c Var 'aux1049' direct represents '1' with '5494'
c Var 'aux1049' order represents '1' with '1'
c Var 'aux1049' order represents '0' with '-5494'
c Encoding variable: aux1050 with domain: int(0..2) (representing constraint (uijk_00004_00007_00003 + aux1049))
c Both direct and order encoding.
c Var 'aux1050' order represents '0' with '5495'
c Var 'aux1050' direct represents '0' with '5495'
c Var 'aux1050' order represents '1' with '5496'
-5495 5496 0
c Var 'aux1050' direct represents '1' with '5497'
5495 -5496 5497 0
-5497 5496 0
-5497 -5495 0
c Var 'aux1050' direct represents '2' with '-5496'
5495 5497 -5496 0
c Encoding variable: aux1051 with domain: int(0..2) (representing constraint (uijk_00004_00007_00002 + lijk_00004_00007_00001))
c Both direct and order encoding.
c Var 'aux1051' order represents '0' with '5498'
c Var 'aux1051' direct represents '0' with '5498'
c Var 'aux1051' order represents '1' with '5499'
-5498 5499 0
c Var 'aux1051' direct represents '1' with '5500'
5498 -5499 5500 0
-5500 5499 0
-5500 -5498 0
c Var 'aux1051' direct represents '2' with '-5499'
5498 5500 -5499 0
c Encoding variable: aux1052 with domain: int(0..2) (representing constraint (rijk_00004_00007_00001 + uijk_00004_00007_00001))
c Both direct and order encoding.
c Var 'aux1052' order represents '0' with '5501'
c Var 'aux1052' direct represents '0' with '5501'
c Var 'aux1052' order represents '1' with '5502'
-5501 5502 0
c Var 'aux1052' direct represents '1' with '5503'
5501 -5502 5503 0
-5503 5502 0
-5503 -5501 0
c Var 'aux1052' direct represents '2' with '-5502'
5501 5503 -5502 0
c Encoding variable: aux1053 with domain: int(0..2) (representing constraint (lijk_00004_00007_00002 + dijk_00004_00007_00001))
c Both direct and order encoding.
c Var 'aux1053' order represents '0' with '5504'
c Var 'aux1053' direct represents '0' with '5504'
c Var 'aux1053' order represents '1' with '5505'
-5504 5505 0
c Var 'aux1053' direct represents '1' with '5506'
5504 -5505 5506 0
-5506 5505 0
-5506 -5504 0
c Var 'aux1053' direct represents '2' with '-5505'
5504 5506 -5505 0
c Encoding variable: aux1054 with domain: int(0..2) (representing constraint (dijk_00004_00007_00003 + lijk_00004_00007_00003))
c Both direct and order encoding.
c Var 'aux1054' order represents '0' with '5507'
c Var 'aux1054' direct represents '0' with '5507'
c Var 'aux1054' order represents '1' with '5508'
-5507 5508 0
c Var 'aux1054' direct represents '1' with '5509'
5507 -5508 5509 0
-5509 5508 0
-5509 -5507 0
c Var 'aux1054' direct represents '2' with '-5508'
5507 5509 -5508 0
c Encoding variable: aux1055 with domain: int(0..4) (representing constraint (aux1050 + aux1054))
c Both direct and order encoding.
c Var 'aux1055' order represents '0' with '5510'
c Var 'aux1055' direct represents '0' with '5510'
c Var 'aux1055' order represents '1' with '5511'
-5510 5511 0
c Var 'aux1055' direct represents '1' with '5512'
5510 -5511 5512 0
-5512 5511 0
-5512 -5510 0
c Var 'aux1055' order represents '2' with '5513'
-5511 5513 0
c Var 'aux1055' direct represents '2' with '5514'
5511 -5513 5514 0
-5514 5513 0
-5514 -5511 0
c Var 'aux1055' order represents '3' with '5515'
-5513 5515 0
c Var 'aux1055' direct represents '3' with '5516'
5513 -5515 5516 0
-5516 5515 0
-5516 -5513 0
c Var 'aux1055' direct represents '4' with '-5515'
5510 5512 5514 5516 -5515 0
c Encoding variable: aux1056 with domain: int(0..4) (representing constraint (aux1051 + aux1052))
c Both direct and order encoding.
c Var 'aux1056' order represents '0' with '5517'
c Var 'aux1056' direct represents '0' with '5517'
c Var 'aux1056' order represents '1' with '5518'
-5517 5518 0
c Var 'aux1056' direct represents '1' with '5519'
5517 -5518 5519 0
-5519 5518 0
-5519 -5517 0
c Var 'aux1056' order represents '2' with '5520'
-5518 5520 0
c Var 'aux1056' direct represents '2' with '5521'
5518 -5520 5521 0
-5521 5520 0
-5521 -5518 0
c Var 'aux1056' order represents '3' with '5522'
-5520 5522 0
c Var 'aux1056' direct represents '3' with '5523'
5520 -5522 5523 0
-5523 5522 0
-5523 -5520 0
c Var 'aux1056' direct represents '4' with '-5522'
5517 5519 5521 5523 -5522 0
c Encoding variable: aux1057 with domain: int(0..6) (representing constraint (aux1053 + aux1056))
c Both direct and order encoding.
c Var 'aux1057' order represents '0' with '5524'
c Var 'aux1057' direct represents '0' with '5524'
c Var 'aux1057' order represents '1' with '5525'
-5524 5525 0
c Var 'aux1057' direct represents '1' with '5526'
5524 -5525 5526 0
-5526 5525 0
-5526 -5524 0
c Var 'aux1057' order represents '2' with '5527'
-5525 5527 0
c Var 'aux1057' direct represents '2' with '5528'
5525 -5527 5528 0
-5528 5527 0
-5528 -5525 0
c Var 'aux1057' order represents '3' with '5529'
-5527 5529 0
c Var 'aux1057' direct represents '3' with '5530'
5527 -5529 5530 0
-5530 5529 0
-5530 -5527 0
c Var 'aux1057' order represents '4' with '5531'
-5529 5531 0
c Var 'aux1057' direct represents '4' with '5532'
5529 -5531 5532 0
-5532 5531 0
-5532 -5529 0
c Var 'aux1057' order represents '5' with '5533'
-5531 5533 0
c Var 'aux1057' direct represents '5' with '5534'
5531 -5533 5534 0
-5534 5533 0
-5534 -5531 0
c Var 'aux1057' direct represents '6' with '-5533'
5524 5526 5528 5530 5532 5534 -5533 0
c Encoding variable: aux1058 with domain: int(0) (representing constraint (rijk_00005_00007_00002 + shift(1, -1)))
c Var 'aux1058' direct represents '0' with '5535'
5535 0
c Encoding variable: aux1059 with domain: int(0) (representing constraint (rijk_00005_00007_00003 + aux1058))
c Var 'aux1059' direct represents '0' with '5536'
5536 0
c Encoding variable: aux1060 with domain: bool (representing constraint (aux1059 + dijk_00005_00007_00002))
c Var 'aux1060' direct represents '0' with '-5537'
c Var 'aux1060' direct represents '1' with '5537'
c Var 'aux1060' order represents '1' with '1'
c Var 'aux1060' order represents '0' with '-5537'
c Encoding variable: aux1061 with domain: int(0..2) (representing constraint (uijk_00005_00007_00003 + aux1060))
c Both direct and order encoding.
c Var 'aux1061' order represents '0' with '5538'
c Var 'aux1061' direct represents '0' with '5538'
c Var 'aux1061' order represents '1' with '5539'
-5538 5539 0
c Var 'aux1061' direct represents '1' with '5540'
5538 -5539 5540 0
-5540 5539 0
-5540 -5538 0
c Var 'aux1061' direct represents '2' with '-5539'
5538 5540 -5539 0
c Encoding variable: aux1062 with domain: int(0..2) (representing constraint (uijk_00005_00007_00002 + dijk_00005_00007_00003))
c Both direct and order encoding.
c Var 'aux1062' order represents '0' with '5541'
c Var 'aux1062' direct represents '0' with '5541'
c Var 'aux1062' order represents '1' with '5542'
-5541 5542 0
c Var 'aux1062' direct represents '1' with '5543'
5541 -5542 5543 0
-5543 5542 0
-5543 -5541 0
c Var 'aux1062' direct represents '2' with '-5542'
5541 5543 -5542 0
c Encoding variable: aux1063 with domain: int(0..2) (representing constraint (lijk_00005_00007_00003 + uijk_00005_00007_00001))
c Both direct and order encoding.
c Var 'aux1063' order represents '0' with '5544'
c Var 'aux1063' direct represents '0' with '5544'
c Var 'aux1063' order represents '1' with '5545'
-5544 5545 0
c Var 'aux1063' direct represents '1' with '5546'
5544 -5545 5546 0
-5546 5545 0
-5546 -5544 0
c Var 'aux1063' direct represents '2' with '-5545'
5544 5546 -5545 0
c Encoding variable: aux1064 with domain: int(0..2) (representing constraint (rijk_00005_00007_00001 + dijk_00005_00007_00001))
c Both direct and order encoding.
c Var 'aux1064' order represents '0' with '5547'
c Var 'aux1064' direct represents '0' with '5547'
c Var 'aux1064' order represents '1' with '5548'
-5547 5548 0
c Var 'aux1064' direct represents '1' with '5549'
5547 -5548 5549 0
-5549 5548 0
-5549 -5547 0
c Var 'aux1064' direct represents '2' with '-5548'
5547 5549 -5548 0
c Encoding variable: aux1065 with domain: int(0..2) (representing constraint (lijk_00005_00007_00001 + lijk_00005_00007_00002))
c Both direct and order encoding.
c Var 'aux1065' order represents '0' with '5550'
c Var 'aux1065' direct represents '0' with '5550'
c Var 'aux1065' order represents '1' with '5551'
-5550 5551 0
c Var 'aux1065' direct represents '1' with '5552'
5550 -5551 5552 0
-5552 5551 0
-5552 -5550 0
c Var 'aux1065' direct represents '2' with '-5551'
5550 5552 -5551 0
c Encoding variable: aux1066 with domain: int(0..4) (representing constraint (aux1061 + aux1065))
c Both direct and order encoding.
c Var 'aux1066' order represents '0' with '5553'
c Var 'aux1066' direct represents '0' with '5553'
c Var 'aux1066' order represents '1' with '5554'
-5553 5554 0
c Var 'aux1066' direct represents '1' with '5555'
5553 -5554 5555 0
-5555 5554 0
-5555 -5553 0
c Var 'aux1066' order represents '2' with '5556'
-5554 5556 0
c Var 'aux1066' direct represents '2' with '5557'
5554 -5556 5557 0
-5557 5556 0
-5557 -5554 0
c Var 'aux1066' order represents '3' with '5558'
-5556 5558 0
c Var 'aux1066' direct represents '3' with '5559'
5556 -5558 5559 0
-5559 5558 0
-5559 -5556 0
c Var 'aux1066' direct represents '4' with '-5558'
5553 5555 5557 5559 -5558 0
c Encoding variable: aux1067 with domain: int(0..4) (representing constraint (aux1062 + aux1063))
c Both direct and order encoding.
c Var 'aux1067' order represents '0' with '5560'
c Var 'aux1067' direct represents '0' with '5560'
c Var 'aux1067' order represents '1' with '5561'
-5560 5561 0
c Var 'aux1067' direct represents '1' with '5562'
5560 -5561 5562 0
-5562 5561 0
-5562 -5560 0
c Var 'aux1067' order represents '2' with '5563'
-5561 5563 0
c Var 'aux1067' direct represents '2' with '5564'
5561 -5563 5564 0
-5564 5563 0
-5564 -5561 0
c Var 'aux1067' order represents '3' with '5565'
-5563 5565 0
c Var 'aux1067' direct represents '3' with '5566'
5563 -5565 5566 0
-5566 5565 0
-5566 -5563 0
c Var 'aux1067' direct represents '4' with '-5565'
5560 5562 5564 5566 -5565 0
c Encoding variable: aux1068 with domain: int(0..6) (representing constraint (aux1064 + aux1067))
c Both direct and order encoding.
c Var 'aux1068' order represents '0' with '5567'
c Var 'aux1068' direct represents '0' with '5567'
c Var 'aux1068' order represents '1' with '5568'
-5567 5568 0
c Var 'aux1068' direct represents '1' with '5569'
5567 -5568 5569 0
-5569 5568 0
-5569 -5567 0
c Var 'aux1068' order represents '2' with '5570'
-5568 5570 0
c Var 'aux1068' direct represents '2' with '5571'
5568 -5570 5571 0
-5571 5570 0
-5571 -5568 0
c Var 'aux1068' order represents '3' with '5572'
-5570 5572 0
c Var 'aux1068' direct represents '3' with '5573'
5570 -5572 5573 0
-5573 5572 0
-5573 -5570 0
c Var 'aux1068' order represents '4' with '5574'
-5572 5574 0
c Var 'aux1068' direct represents '4' with '5575'
5572 -5574 5575 0
-5575 5574 0
-5575 -5572 0
c Var 'aux1068' order represents '5' with '5576'
-5574 5576 0
c Var 'aux1068' direct represents '5' with '5577'
5574 -5576 5577 0
-5577 5576 0
-5577 -5574 0
c Var 'aux1068' direct represents '6' with '-5576'
5567 5569 5571 5573 5575 5577 -5576 0
c Encoding variable: aux1069 with domain: int(0) (representing constraint (rijk_00006_00007_00002 + shift(1, -1)))
c Var 'aux1069' direct represents '0' with '5578'
5578 0
c Encoding variable: aux1070 with domain: int(0) (representing constraint (rijk_00006_00007_00003 + dijk_00006_00007_00003))
c Var 'aux1070' direct represents '0' with '5579'
5579 0
c Encoding variable: aux1071 with domain: int(0) (representing constraint (aux1069 + aux1070))
c Var 'aux1071' direct represents '0' with '5580'
5580 0
c Encoding variable: aux1072 with domain: bool (representing constraint (aux1071 + lijk_00006_00007_00002))
c Var 'aux1072' direct represents '0' with '-5581'
c Var 'aux1072' direct represents '1' with '5581'
c Var 'aux1072' order represents '1' with '1'
c Var 'aux1072' order represents '0' with '-5581'
c Encoding variable: aux1073 with domain: int(0..2) (representing constraint (uijk_00006_00007_00002 + aux1072))
c Both direct and order encoding.
c Var 'aux1073' order represents '0' with '5582'
c Var 'aux1073' direct represents '0' with '5582'
c Var 'aux1073' order represents '1' with '5583'
-5582 5583 0
c Var 'aux1073' direct represents '1' with '5584'
5582 -5583 5584 0
-5584 5583 0
-5584 -5582 0
c Var 'aux1073' direct represents '2' with '-5583'
5582 5584 -5583 0
c Encoding variable: aux1074 with domain: int(0..2) (representing constraint (uijk_00006_00007_00001 + uijk_00006_00007_00003))
c Both direct and order encoding.
c Var 'aux1074' order represents '0' with '5585'
c Var 'aux1074' direct represents '0' with '5585'
c Var 'aux1074' order represents '1' with '5586'
-5585 5586 0
c Var 'aux1074' direct represents '1' with '5587'
5585 -5586 5587 0
-5587 5586 0
-5587 -5585 0
c Var 'aux1074' direct represents '2' with '-5586'
5585 5587 -5586 0
c Encoding variable: aux1075 with domain: int(0..2) (representing constraint (rijk_00006_00007_00001 + lijk_00006_00007_00001))
c Both direct and order encoding.
c Var 'aux1075' order represents '0' with '5588'
c Var 'aux1075' direct represents '0' with '5588'
c Var 'aux1075' order represents '1' with '5589'
-5588 5589 0
c Var 'aux1075' direct represents '1' with '5590'
5588 -5589 5590 0
-5590 5589 0
-5590 -5588 0
c Var 'aux1075' direct represents '2' with '-5589'
5588 5590 -5589 0
c Encoding variable: aux1076 with domain: int(0..2) (representing constraint (dijk_00006_00007_00002 + lijk_00006_00007_00003))
c Both direct and order encoding.
c Var 'aux1076' order represents '0' with '5591'
c Var 'aux1076' direct represents '0' with '5591'
c Var 'aux1076' order represents '1' with '5592'
-5591 5592 0
c Var 'aux1076' direct represents '1' with '5593'
5591 -5592 5593 0
-5593 5592 0
-5593 -5591 0
c Var 'aux1076' direct represents '2' with '-5592'
5591 5593 -5592 0
c Encoding variable: aux1077 with domain: int(0..3) (representing constraint (dijk_00006_00007_00001 + aux1076))
c Both direct and order encoding.
c Var 'aux1077' order represents '0' with '5594'
c Var 'aux1077' direct represents '0' with '5594'
c Var 'aux1077' order represents '1' with '5595'
-5594 5595 0
c Var 'aux1077' direct represents '1' with '5596'
5594 -5595 5596 0
-5596 5595 0
-5596 -5594 0
c Var 'aux1077' order represents '2' with '5597'
-5595 5597 0
c Var 'aux1077' direct represents '2' with '5598'
5595 -5597 5598 0
-5598 5597 0
-5598 -5595 0
c Var 'aux1077' direct represents '3' with '-5597'
5594 5596 5598 -5597 0
c Encoding variable: aux1078 with domain: int(0..4) (representing constraint (aux1074 + aux1073))
c Both direct and order encoding.
c Var 'aux1078' order represents '0' with '5599'
c Var 'aux1078' direct represents '0' with '5599'
c Var 'aux1078' order represents '1' with '5600'
-5599 5600 0
c Var 'aux1078' direct represents '1' with '5601'
5599 -5600 5601 0
-5601 5600 0
-5601 -5599 0
c Var 'aux1078' order represents '2' with '5602'
-5600 5602 0
c Var 'aux1078' direct represents '2' with '5603'
5600 -5602 5603 0
-5603 5602 0
-5603 -5600 0
c Var 'aux1078' order represents '3' with '5604'
-5602 5604 0
c Var 'aux1078' direct represents '3' with '5605'
5602 -5604 5605 0
-5605 5604 0
-5605 -5602 0
c Var 'aux1078' direct represents '4' with '-5604'
5599 5601 5603 5605 -5604 0
c Encoding variable: aux1079 with domain: int(0..5) (representing constraint (aux1075 + aux1077))
c Both direct and order encoding.
c Var 'aux1079' order represents '0' with '5606'
c Var 'aux1079' direct represents '0' with '5606'
c Var 'aux1079' order represents '1' with '5607'
-5606 5607 0
c Var 'aux1079' direct represents '1' with '5608'
5606 -5607 5608 0
-5608 5607 0
-5608 -5606 0
c Var 'aux1079' order represents '2' with '5609'
-5607 5609 0
c Var 'aux1079' direct represents '2' with '5610'
5607 -5609 5610 0
-5610 5609 0
-5610 -5607 0
c Var 'aux1079' order represents '3' with '5611'
-5609 5611 0
c Var 'aux1079' direct represents '3' with '5612'
5609 -5611 5612 0
-5612 5611 0
-5612 -5609 0
c Var 'aux1079' order represents '4' with '5613'
-5611 5613 0
c Var 'aux1079' direct represents '4' with '5614'
5611 -5613 5614 0
-5614 5613 0
-5614 -5611 0
c Var 'aux1079' direct represents '5' with '-5613'
5606 5608 5610 5612 5614 -5613 0
c Encoding variable: aux1080 with domain: int(0) (representing constraint (rijk_00007_00007_00002 + shift(1, -1)))
c Var 'aux1080' direct represents '0' with '5615'
5615 0
c Encoding variable: aux1081 with domain: int(0) (representing constraint (dijk_00007_00007_00002 + dijk_00007_00007_00003))
c Var 'aux1081' direct represents '0' with '5616'
5616 0
c Encoding variable: aux1082 with domain: int(0) (representing constraint (rijk_00007_00007_00003 + aux1080))
c Var 'aux1082' direct represents '0' with '5617'
5617 0
c Encoding variable: aux1083 with domain: int(0) (representing constraint (aux1081 + aux1082))
c Var 'aux1083' direct represents '0' with '5618'
5618 0
c Encoding variable: aux1084 with domain: bool (representing constraint (aux1083 + uijk_00007_00007_00001))
c Var 'aux1084' direct represents '0' with '-5619'
c Var 'aux1084' direct represents '1' with '5619'
c Var 'aux1084' order represents '1' with '1'
c Var 'aux1084' order represents '0' with '-5619'
c Encoding variable: aux1085 with domain: int(0..2) (representing constraint (dijk_00007_00007_00001 + aux1084))
c Both direct and order encoding.
c Var 'aux1085' order represents '0' with '5620'
c Var 'aux1085' direct represents '0' with '5620'
c Var 'aux1085' order represents '1' with '5621'
-5620 5621 0
c Var 'aux1085' direct represents '1' with '5622'
5620 -5621 5622 0
-5622 5621 0
-5622 -5620 0
c Var 'aux1085' direct represents '2' with '-5621'
5620 5622 -5621 0
c Encoding variable: aux1086 with domain: int(0..2) (representing constraint (lijk_00007_00007_00002 + uijk_00007_00007_00003))
c Both direct and order encoding.
c Var 'aux1086' order represents '0' with '5623'
c Var 'aux1086' direct represents '0' with '5623'
c Var 'aux1086' order represents '1' with '5624'
-5623 5624 0
c Var 'aux1086' direct represents '1' with '5625'
5623 -5624 5625 0
-5625 5624 0
-5625 -5623 0
c Var 'aux1086' direct represents '2' with '-5624'
5623 5625 -5624 0
c Encoding variable: aux1087 with domain: int(0..2) (representing constraint (uijk_00007_00007_00002 + rijk_00007_00007_00001))
c Both direct and order encoding.
c Var 'aux1087' order represents '0' with '5626'
c Var 'aux1087' direct represents '0' with '5626'
c Var 'aux1087' order represents '1' with '5627'
-5626 5627 0
c Var 'aux1087' direct represents '1' with '5628'
5626 -5627 5628 0
-5628 5627 0
-5628 -5626 0
c Var 'aux1087' direct represents '2' with '-5627'
5626 5628 -5627 0
c Encoding variable: aux1088 with domain: int(0..2) (representing constraint (lijk_00007_00007_00001 + lijk_00007_00007_00003))
c Both direct and order encoding.
c Var 'aux1088' order represents '0' with '5629'
c Var 'aux1088' direct represents '0' with '5629'
c Var 'aux1088' order represents '1' with '5630'
-5629 5630 0
c Var 'aux1088' direct represents '1' with '5631'
5629 -5630 5631 0
-5631 5630 0
-5631 -5629 0
c Var 'aux1088' direct represents '2' with '-5630'
5629 5631 -5630 0
c Encoding variable: aux1089 with domain: int(0..4) (representing constraint (aux1086 + aux1088))
c Both direct and order encoding.
c Var 'aux1089' order represents '0' with '5632'
c Var 'aux1089' direct represents '0' with '5632'
c Var 'aux1089' order represents '1' with '5633'
-5632 5633 0
c Var 'aux1089' direct represents '1' with '5634'
5632 -5633 5634 0
-5634 5633 0
-5634 -5632 0
c Var 'aux1089' order represents '2' with '5635'
-5633 5635 0
c Var 'aux1089' direct represents '2' with '5636'
5633 -5635 5636 0
-5636 5635 0
-5636 -5633 0
c Var 'aux1089' order represents '3' with '5637'
-5635 5637 0
c Var 'aux1089' direct represents '3' with '5638'
5635 -5637 5638 0
-5638 5637 0
-5638 -5635 0
c Var 'aux1089' direct represents '4' with '-5637'
5632 5634 5636 5638 -5637 0
c Encoding variable: aux1090 with domain: int(0..4) (representing constraint (aux1085 + aux1087))
c Both direct and order encoding.
c Var 'aux1090' order represents '0' with '5639'
c Var 'aux1090' direct represents '0' with '5639'
c Var 'aux1090' order represents '1' with '5640'
-5639 5640 0
c Var 'aux1090' direct represents '1' with '5641'
5639 -5640 5641 0
-5641 5640 0
-5641 -5639 0
c Var 'aux1090' order represents '2' with '5642'
-5640 5642 0
c Var 'aux1090' direct represents '2' with '5643'
5640 -5642 5643 0
-5643 5642 0
-5643 -5640 0
c Var 'aux1090' order represents '3' with '5644'
-5642 5644 0
c Var 'aux1090' direct represents '3' with '5645'
5642 -5644 5645 0
-5645 5644 0
-5645 -5642 0
c Var 'aux1090' direct represents '4' with '-5644'
5639 5641 5643 5645 -5644 0
c Encoding variable: aux1091 with domain: int(0) (representing constraint (rijk_00008_00007_00002 + shift(1, -1)))
c Var 'aux1091' direct represents '0' with '5646'
5646 0
c Encoding variable: aux1092 with domain: int(0) (representing constraint (dijk_00008_00007_00001 + dijk_00008_00007_00002))
c Var 'aux1092' direct represents '0' with '5647'
5647 0
c Encoding variable: aux1093 with domain: int(0) (representing constraint (dijk_00008_00007_00003 + aux1092))
c Var 'aux1093' direct represents '0' with '5648'
5648 0
c Encoding variable: aux1094 with domain: int(0) (representing constraint (rijk_00008_00007_00003 + aux1093))
c Var 'aux1094' direct represents '0' with '5649'
5649 0
c Encoding variable: aux1095 with domain: int(0) (representing constraint (aux1091 + aux1094))
c Var 'aux1095' direct represents '0' with '5650'
5650 0
c Encoding variable: aux1096 with domain: bool (representing constraint (aux1095 + lijk_00008_00007_00002))
c Var 'aux1096' direct represents '0' with '-5651'
c Var 'aux1096' direct represents '1' with '5651'
c Var 'aux1096' order represents '1' with '1'
c Var 'aux1096' order represents '0' with '-5651'
c Encoding variable: aux1097 with domain: int(0..2) (representing constraint (rijk_00008_00007_00001 + aux1096))
c Both direct and order encoding.
c Var 'aux1097' order represents '0' with '5652'
c Var 'aux1097' direct represents '0' with '5652'
c Var 'aux1097' order represents '1' with '5653'
-5652 5653 0
c Var 'aux1097' direct represents '1' with '5654'
5652 -5653 5654 0
-5654 5653 0
-5654 -5652 0
c Var 'aux1097' direct represents '2' with '-5653'
5652 5654 -5653 0
c Encoding variable: aux1098 with domain: int(0..2) (representing constraint (uijk_00008_00007_00003 + lijk_00008_00007_00003))
c Both direct and order encoding.
c Var 'aux1098' order represents '0' with '5655'
c Var 'aux1098' direct represents '0' with '5655'
c Var 'aux1098' order represents '1' with '5656'
-5655 5656 0
c Var 'aux1098' direct represents '1' with '5657'
5655 -5656 5657 0
-5657 5656 0
-5657 -5655 0
c Var 'aux1098' direct represents '2' with '-5656'
5655 5657 -5656 0
c Encoding variable: aux1099 with domain: int(0..2) (representing constraint (lijk_00008_00007_00001 + uijk_00008_00007_00002))
c Both direct and order encoding.
c Var 'aux1099' order represents '0' with '5658'
c Var 'aux1099' direct represents '0' with '5658'
c Var 'aux1099' order represents '1' with '5659'
-5658 5659 0
c Var 'aux1099' direct represents '1' with '5660'
5658 -5659 5660 0
-5660 5659 0
-5660 -5658 0
c Var 'aux1099' direct represents '2' with '-5659'
5658 5660 -5659 0
c Encoding variable: aux1100 with domain: int(0..3) (representing constraint (uijk_00008_00007_00001 + aux1099))
c Both direct and order encoding.
c Var 'aux1100' order represents '0' with '5661'
c Var 'aux1100' direct represents '0' with '5661'
c Var 'aux1100' order represents '1' with '5662'
-5661 5662 0
c Var 'aux1100' direct represents '1' with '5663'
5661 -5662 5663 0
-5663 5662 0
-5663 -5661 0
c Var 'aux1100' order represents '2' with '5664'
-5662 5664 0
c Var 'aux1100' direct represents '2' with '5665'
5662 -5664 5665 0
-5665 5664 0
-5665 -5662 0
c Var 'aux1100' direct represents '3' with '-5664'
5661 5663 5665 -5664 0
c Encoding variable: aux1101 with domain: int(0..4) (representing constraint (aux1097 + aux1098))
c Both direct and order encoding.
c Var 'aux1101' order represents '0' with '5666'
c Var 'aux1101' direct represents '0' with '5666'
c Var 'aux1101' order represents '1' with '5667'
-5666 5667 0
c Var 'aux1101' direct represents '1' with '5668'
5666 -5667 5668 0
-5668 5667 0
-5668 -5666 0
c Var 'aux1101' order represents '2' with '5669'
-5667 5669 0
c Var 'aux1101' direct represents '2' with '5670'
5667 -5669 5670 0
-5670 5669 0
-5670 -5667 0
c Var 'aux1101' order represents '3' with '5671'
-5669 5671 0
c Var 'aux1101' direct represents '3' with '5672'
5669 -5671 5672 0
-5672 5671 0
-5672 -5669 0
c Var 'aux1101' direct represents '4' with '-5671'
5666 5668 5670 5672 -5671 0
c Encoding variable: aux1102 with domain: int(0) (representing constraint (uijk_00001_00008_00001 + uijk_00001_00008_00003))
c Var 'aux1102' direct represents '0' with '5673'
5673 0
c Encoding variable: aux1103 with domain: int(0) (representing constraint (rijk_00001_00008_00002 + aux1102))
c Var 'aux1103' direct represents '0' with '5674'
5674 0
c Encoding variable: aux1104 with domain: int(0) (representing constraint (shift(1, -1) + aux1103))
c Var 'aux1104' direct represents '0' with '5675'
5675 0
c Encoding variable: aux1105 with domain: int(0) (representing constraint (uijk_00001_00008_00002 + aux1104))
c Var 'aux1105' direct represents '0' with '5676'
5676 0
c Encoding variable: aux1106 with domain: int(0) (representing constraint (rijk_00001_00008_00001 + aux1105))
c Var 'aux1106' direct represents '0' with '5677'
5677 0
c Encoding variable: aux1107 with domain: int(0) (representing constraint (rijk_00001_00008_00003 + aux1106))
c Var 'aux1107' direct represents '0' with '5678'
5678 0
c Encoding variable: aux1108 with domain: bool (representing constraint (aux1107 + dijk_00001_00008_00003))
c Var 'aux1108' direct represents '0' with '-5679'
c Var 'aux1108' direct represents '1' with '5679'
c Var 'aux1108' order represents '1' with '1'
c Var 'aux1108' order represents '0' with '-5679'
c Encoding variable: aux1109 with domain: int(0..2) (representing constraint (lijk_00001_00008_00002 + aux1108))
c Both direct and order encoding.
c Var 'aux1109' order represents '0' with '5680'
c Var 'aux1109' direct represents '0' with '5680'
c Var 'aux1109' order represents '1' with '5681'
-5680 5681 0
c Var 'aux1109' direct represents '1' with '5682'
5680 -5681 5682 0
-5682 5681 0
-5682 -5680 0
c Var 'aux1109' direct represents '2' with '-5681'
5680 5682 -5681 0
c Encoding variable: aux1110 with domain: int(0..2) (representing constraint (lijk_00001_00008_00003 + dijk_00001_00008_00002))
c Both direct and order encoding.
c Var 'aux1110' order represents '0' with '5683'
c Var 'aux1110' direct represents '0' with '5683'
c Var 'aux1110' order represents '1' with '5684'
-5683 5684 0
c Var 'aux1110' direct represents '1' with '5685'
5683 -5684 5685 0
-5685 5684 0
-5685 -5683 0
c Var 'aux1110' direct represents '2' with '-5684'
5683 5685 -5684 0
c Encoding variable: aux1111 with domain: int(0..2) (representing constraint (dijk_00001_00008_00001 + lijk_00001_00008_00001))
c Both direct and order encoding.
c Var 'aux1111' order represents '0' with '5686'
c Var 'aux1111' direct represents '0' with '5686'
c Var 'aux1111' order represents '1' with '5687'
-5686 5687 0
c Var 'aux1111' direct represents '1' with '5688'
5686 -5687 5688 0
-5688 5687 0
-5688 -5686 0
c Var 'aux1111' direct represents '2' with '-5687'
5686 5688 -5687 0
c Encoding variable: aux1112 with domain: int(0..4) (representing constraint (aux1109 + aux1111))
c Both direct and order encoding.
c Var 'aux1112' order represents '0' with '5689'
c Var 'aux1112' direct represents '0' with '5689'
c Var 'aux1112' order represents '1' with '5690'
-5689 5690 0
c Var 'aux1112' direct represents '1' with '5691'
5689 -5690 5691 0
-5691 5690 0
-5691 -5689 0
c Var 'aux1112' order represents '2' with '5692'
-5690 5692 0
c Var 'aux1112' direct represents '2' with '5693'
5690 -5692 5693 0
-5693 5692 0
-5693 -5690 0
c Var 'aux1112' order represents '3' with '5694'
-5692 5694 0
c Var 'aux1112' direct represents '3' with '5695'
5692 -5694 5695 0
-5695 5694 0
-5695 -5692 0
c Var 'aux1112' direct represents '4' with '-5694'
5689 5691 5693 5695 -5694 0
c Encoding variable: aux1113 with domain: int(0) (representing constraint (uijk_00002_00008_00002 + shift(1, -1)))
c Var 'aux1113' direct represents '0' with '5696'
5696 0
c Encoding variable: aux1114 with domain: int(0) (representing constraint (rijk_00002_00008_00002 + aux1113))
c Var 'aux1114' direct represents '0' with '5697'
5697 0
c Encoding variable: aux1115 with domain: int(0) (representing constraint (uijk_00002_00008_00003 + rijk_00002_00008_00001))
c Var 'aux1115' direct represents '0' with '5698'
5698 0
c Encoding variable: aux1116 with domain: int(0) (representing constraint (aux1114 + aux1115))
c Var 'aux1116' direct represents '0' with '5699'
5699 0
c Encoding variable: aux1117 with domain: int(0) (representing constraint (rijk_00002_00008_00003 + aux1116))
c Var 'aux1117' direct represents '0' with '5700'
5700 0
c Encoding variable: aux1118 with domain: bool (representing constraint (aux1117 + dijk_00002_00008_00001))
c Var 'aux1118' direct represents '0' with '-5701'
c Var 'aux1118' direct represents '1' with '5701'
c Var 'aux1118' order represents '1' with '1'
c Var 'aux1118' order represents '0' with '-5701'
c Encoding variable: aux1119 with domain: int(0..2) (representing constraint (lijk_00002_00008_00001 + uijk_00002_00008_00001))
c Both direct and order encoding.
c Var 'aux1119' order represents '0' with '5702'
c Var 'aux1119' direct represents '0' with '5702'
c Var 'aux1119' order represents '1' with '5703'
-5702 5703 0
c Var 'aux1119' direct represents '1' with '5704'
5702 -5703 5704 0
-5704 5703 0
-5704 -5702 0
c Var 'aux1119' direct represents '2' with '-5703'
5702 5704 -5703 0
c Encoding variable: aux1120 with domain: int(0..2) (representing constraint (lijk_00002_00008_00003 + aux1118))
c Both direct and order encoding.
c Var 'aux1120' order represents '0' with '5705'
c Var 'aux1120' direct represents '0' with '5705'
c Var 'aux1120' order represents '1' with '5706'
-5705 5706 0
c Var 'aux1120' direct represents '1' with '5707'
5705 -5706 5707 0
-5707 5706 0
-5707 -5705 0
c Var 'aux1120' direct represents '2' with '-5706'
5705 5707 -5706 0
c Encoding variable: aux1121 with domain: int(0..2) (representing constraint (dijk_00002_00008_00003 + dijk_00002_00008_00002))
c Both direct and order encoding.
c Var 'aux1121' order represents '0' with '5708'
c Var 'aux1121' direct represents '0' with '5708'
c Var 'aux1121' order represents '1' with '5709'
-5708 5709 0
c Var 'aux1121' direct represents '1' with '5710'
5708 -5709 5710 0
-5710 5709 0
-5710 -5708 0
c Var 'aux1121' direct represents '2' with '-5709'
5708 5710 -5709 0
c Encoding variable: aux1122 with domain: int(0..3) (representing constraint (lijk_00002_00008_00002 + aux1121))
c Both direct and order encoding.
c Var 'aux1122' order represents '0' with '5711'
c Var 'aux1122' direct represents '0' with '5711'
c Var 'aux1122' order represents '1' with '5712'
-5711 5712 0
c Var 'aux1122' direct represents '1' with '5713'
5711 -5712 5713 0
-5713 5712 0
-5713 -5711 0
c Var 'aux1122' order represents '2' with '5714'
-5712 5714 0
c Var 'aux1122' direct represents '2' with '5715'
5712 -5714 5715 0
-5715 5714 0
-5715 -5712 0
c Var 'aux1122' direct represents '3' with '-5714'
5711 5713 5715 -5714 0
c Encoding variable: aux1123 with domain: int(0..4) (representing constraint (aux1120 + aux1119))
c Both direct and order encoding.
c Var 'aux1123' order represents '0' with '5716'
c Var 'aux1123' direct represents '0' with '5716'
c Var 'aux1123' order represents '1' with '5717'
-5716 5717 0
c Var 'aux1123' direct represents '1' with '5718'
5716 -5717 5718 0
-5718 5717 0
-5718 -5716 0
c Var 'aux1123' order represents '2' with '5719'
-5717 5719 0
c Var 'aux1123' direct represents '2' with '5720'
5717 -5719 5720 0
-5720 5719 0
-5720 -5717 0
c Var 'aux1123' order represents '3' with '5721'
-5719 5721 0
c Var 'aux1123' direct represents '3' with '5722'
5719 -5721 5722 0
-5722 5721 0
-5722 -5719 0
c Var 'aux1123' direct represents '4' with '-5721'
5716 5718 5720 5722 -5721 0
c Encoding variable: aux1124 with domain: int(0) (representing constraint (uijk_00003_00008_00003 + shift(1, -1)))
c Var 'aux1124' direct represents '0' with '5723'
5723 0
c Encoding variable: aux1125 with domain: int(0) (representing constraint (rijk_00003_00008_00001 + aux1124))
c Var 'aux1125' direct represents '0' with '5724'
5724 0
c Encoding variable: aux1126 with domain: int(0) (representing constraint (rijk_00003_00008_00002 + rijk_00003_00008_00003))
c Var 'aux1126' direct represents '0' with '5725'
5725 0
c Encoding variable: aux1127 with domain: int(0) (representing constraint (aux1125 + aux1126))
c Var 'aux1127' direct represents '0' with '5726'
5726 0
c Encoding variable: aux1128 with domain: bool (representing constraint (aux1127 + uijk_00003_00008_00001))
c Var 'aux1128' direct represents '0' with '-5727'
c Var 'aux1128' direct represents '1' with '5727'
c Var 'aux1128' order represents '1' with '1'
c Var 'aux1128' order represents '0' with '-5727'
c Encoding variable: aux1129 with domain: int(0..2) (representing constraint (lijk_00003_00008_00003 + aux1128))
c Both direct and order encoding.
c Var 'aux1129' order represents '0' with '5728'
c Var 'aux1129' direct represents '0' with '5728'
c Var 'aux1129' order represents '1' with '5729'
-5728 5729 0
c Var 'aux1129' direct represents '1' with '5730'
5728 -5729 5730 0
-5730 5729 0
-5730 -5728 0
c Var 'aux1129' direct represents '2' with '-5729'
5728 5730 -5729 0
c Encoding variable: aux1130 with domain: int(0..2) (representing constraint (dijk_00003_00008_00002 + lijk_00003_00008_00002))
c Both direct and order encoding.
c Var 'aux1130' order represents '0' with '5731'
c Var 'aux1130' direct represents '0' with '5731'
c Var 'aux1130' order represents '1' with '5732'
-5731 5732 0
c Var 'aux1130' direct represents '1' with '5733'
5731 -5732 5733 0
-5733 5732 0
-5733 -5731 0
c Var 'aux1130' direct represents '2' with '-5732'
5731 5733 -5732 0
c Encoding variable: aux1131 with domain: int(0..2) (representing constraint (lijk_00003_00008_00001 + dijk_00003_00008_00001))
c Both direct and order encoding.
c Var 'aux1131' order represents '0' with '5734'
c Var 'aux1131' direct represents '0' with '5734'
c Var 'aux1131' order represents '1' with '5735'
-5734 5735 0
c Var 'aux1131' direct represents '1' with '5736'
5734 -5735 5736 0
-5736 5735 0
-5736 -5734 0
c Var 'aux1131' direct represents '2' with '-5735'
5734 5736 -5735 0
c Encoding variable: aux1132 with domain: int(0..2) (representing constraint (dijk_00003_00008_00003 + uijk_00003_00008_00002))
c Both direct and order encoding.
c Var 'aux1132' order represents '0' with '5737'
c Var 'aux1132' direct represents '0' with '5737'
c Var 'aux1132' order represents '1' with '5738'
-5737 5738 0
c Var 'aux1132' direct represents '1' with '5739'
5737 -5738 5739 0
-5739 5738 0
-5739 -5737 0
c Var 'aux1132' direct represents '2' with '-5738'
5737 5739 -5738 0
c Encoding variable: aux1133 with domain: int(0..4) (representing constraint (aux1130 + aux1132))
c Both direct and order encoding.
c Var 'aux1133' order represents '0' with '5740'
c Var 'aux1133' direct represents '0' with '5740'
c Var 'aux1133' order represents '1' with '5741'
-5740 5741 0
c Var 'aux1133' direct represents '1' with '5742'
5740 -5741 5742 0
-5742 5741 0
-5742 -5740 0
c Var 'aux1133' order represents '2' with '5743'
-5741 5743 0
c Var 'aux1133' direct represents '2' with '5744'
5741 -5743 5744 0
-5744 5743 0
-5744 -5741 0
c Var 'aux1133' order represents '3' with '5745'
-5743 5745 0
c Var 'aux1133' direct represents '3' with '5746'
5743 -5745 5746 0
-5746 5745 0
-5746 -5743 0
c Var 'aux1133' direct represents '4' with '-5745'
5740 5742 5744 5746 -5745 0
c Encoding variable: aux1134 with domain: int(0..4) (representing constraint (aux1129 + aux1131))
c Both direct and order encoding.
c Var 'aux1134' order represents '0' with '5747'
c Var 'aux1134' direct represents '0' with '5747'
c Var 'aux1134' order represents '1' with '5748'
-5747 5748 0
c Var 'aux1134' direct represents '1' with '5749'
5747 -5748 5749 0
-5749 5748 0
-5749 -5747 0
c Var 'aux1134' order represents '2' with '5750'
-5748 5750 0
c Var 'aux1134' direct represents '2' with '5751'
5748 -5750 5751 0
-5751 5750 0
-5751 -5748 0
c Var 'aux1134' order represents '3' with '5752'
-5750 5752 0
c Var 'aux1134' direct represents '3' with '5753'
5750 -5752 5753 0
-5753 5752 0
-5753 -5750 0
c Var 'aux1134' direct represents '4' with '-5752'
5747 5749 5751 5753 -5752 0
c Encoding variable: aux1135 with domain: int(0) (representing constraint (shift(1, -1) + rijk_00004_00008_00001))
c Var 'aux1135' direct represents '0' with '5754'
5754 0
c Encoding variable: aux1136 with domain: int(0) (representing constraint (rijk_00004_00008_00002 + rijk_00004_00008_00003))
c Var 'aux1136' direct represents '0' with '5755'
5755 0
c Encoding variable: aux1137 with domain: int(0) (representing constraint (aux1135 + aux1136))
c Var 'aux1137' direct represents '0' with '5756'
5756 0
c Encoding variable: aux1138 with domain: bool (representing constraint (aux1137 + uijk_00004_00008_00001))
c Var 'aux1138' direct represents '0' with '-5757'
c Var 'aux1138' direct represents '1' with '5757'
c Var 'aux1138' order represents '1' with '1'
c Var 'aux1138' order represents '0' with '-5757'
c Encoding variable: aux1139 with domain: int(0..2) (representing constraint (dijk_00004_00008_00002 + aux1138))
c Both direct and order encoding.
c Var 'aux1139' order represents '0' with '5758'
c Var 'aux1139' direct represents '0' with '5758'
c Var 'aux1139' order represents '1' with '5759'
-5758 5759 0
c Var 'aux1139' direct represents '1' with '5760'
5758 -5759 5760 0
-5760 5759 0
-5760 -5758 0
c Var 'aux1139' direct represents '2' with '-5759'
5758 5760 -5759 0
c Encoding variable: aux1140 with domain: int(0..2) (representing constraint (lijk_00004_00008_00003 + uijk_00004_00008_00002))
c Both direct and order encoding.
c Var 'aux1140' order represents '0' with '5761'
c Var 'aux1140' direct represents '0' with '5761'
c Var 'aux1140' order represents '1' with '5762'
-5761 5762 0
c Var 'aux1140' direct represents '1' with '5763'
5761 -5762 5763 0
-5763 5762 0
-5763 -5761 0
c Var 'aux1140' direct represents '2' with '-5762'
5761 5763 -5762 0
c Encoding variable: aux1141 with domain: int(0..2) (representing constraint (lijk_00004_00008_00002 + dijk_00004_00008_00001))
c Both direct and order encoding.
c Var 'aux1141' order represents '0' with '5764'
c Var 'aux1141' direct represents '0' with '5764'
c Var 'aux1141' order represents '1' with '5765'
-5764 5765 0
c Var 'aux1141' direct represents '1' with '5766'
5764 -5765 5766 0
-5766 5765 0
-5766 -5764 0
c Var 'aux1141' direct represents '2' with '-5765'
5764 5766 -5765 0
c Encoding variable: aux1142 with domain: int(0..2) (representing constraint (lijk_00004_00008_00001 + uijk_00004_00008_00003))
c Both direct and order encoding.
c Var 'aux1142' order represents '0' with '5767'
c Var 'aux1142' direct represents '0' with '5767'
c Var 'aux1142' order represents '1' with '5768'
-5767 5768 0
c Var 'aux1142' direct represents '1' with '5769'
5767 -5768 5769 0
-5769 5768 0
-5769 -5767 0
c Var 'aux1142' direct represents '2' with '-5768'
5767 5769 -5768 0
c Encoding variable: aux1143 with domain: int(0..3) (representing constraint (dijk_00004_00008_00003 + aux1142))
c Both direct and order encoding.
c Var 'aux1143' order represents '0' with '5770'
c Var 'aux1143' direct represents '0' with '5770'
c Var 'aux1143' order represents '1' with '5771'
-5770 5771 0
c Var 'aux1143' direct represents '1' with '5772'
5770 -5771 5772 0
-5772 5771 0
-5772 -5770 0
c Var 'aux1143' order represents '2' with '5773'
-5771 5773 0
c Var 'aux1143' direct represents '2' with '5774'
5771 -5773 5774 0
-5774 5773 0
-5774 -5771 0
c Var 'aux1143' direct represents '3' with '-5773'
5770 5772 5774 -5773 0
c Encoding variable: aux1144 with domain: int(0..4) (representing constraint (aux1140 + aux1139))
c Both direct and order encoding.
c Var 'aux1144' order represents '0' with '5775'
c Var 'aux1144' direct represents '0' with '5775'
c Var 'aux1144' order represents '1' with '5776'
-5775 5776 0
c Var 'aux1144' direct represents '1' with '5777'
5775 -5776 5777 0
-5777 5776 0
-5777 -5775 0
c Var 'aux1144' order represents '2' with '5778'
-5776 5778 0
c Var 'aux1144' direct represents '2' with '5779'
5776 -5778 5779 0
-5779 5778 0
-5779 -5776 0
c Var 'aux1144' order represents '3' with '5780'
-5778 5780 0
c Var 'aux1144' direct represents '3' with '5781'
5778 -5780 5781 0
-5781 5780 0
-5781 -5778 0
c Var 'aux1144' direct represents '4' with '-5780'
5775 5777 5779 5781 -5780 0
c Encoding variable: aux1145 with domain: int(0..5) (representing constraint (aux1141 + aux1143))
c Both direct and order encoding.
c Var 'aux1145' order represents '0' with '5782'
c Var 'aux1145' direct represents '0' with '5782'
c Var 'aux1145' order represents '1' with '5783'
-5782 5783 0
c Var 'aux1145' direct represents '1' with '5784'
5782 -5783 5784 0
-5784 5783 0
-5784 -5782 0
c Var 'aux1145' order represents '2' with '5785'
-5783 5785 0
c Var 'aux1145' direct represents '2' with '5786'
5783 -5785 5786 0
-5786 5785 0
-5786 -5783 0
c Var 'aux1145' order represents '3' with '5787'
-5785 5787 0
c Var 'aux1145' direct represents '3' with '5788'
5785 -5787 5788 0
-5788 5787 0
-5788 -5785 0
c Var 'aux1145' order represents '4' with '5789'
-5787 5789 0
c Var 'aux1145' direct represents '4' with '5790'
5787 -5789 5790 0
-5790 5789 0
-5790 -5787 0
c Var 'aux1145' direct represents '5' with '-5789'
5782 5784 5786 5788 5790 -5789 0
c Encoding variable: aux1146 with domain: int(0) (representing constraint (rijk_00005_00008_00001 + rijk_00005_00008_00002))
c Var 'aux1146' direct represents '0' with '5791'
5791 0
c Encoding variable: aux1147 with domain: int(0) (representing constraint (rijk_00005_00008_00003 + shift(1, -1)))
c Var 'aux1147' direct represents '0' with '5792'
5792 0
c Encoding variable: aux1148 with domain: int(0) (representing constraint (aux1146 + aux1147))
c Var 'aux1148' direct represents '0' with '5793'
5793 0
c Encoding variable: aux1149 with domain: bool (representing constraint (aux1148 + uijk_00005_00008_00002))
c Var 'aux1149' direct represents '0' with '-5794'
c Var 'aux1149' direct represents '1' with '5794'
c Var 'aux1149' order represents '1' with '1'
c Var 'aux1149' order represents '0' with '-5794'
c Encoding variable: aux1150 with domain: int(0..2) (representing constraint (lijk_00005_00008_00003 + aux1149))
c Both direct and order encoding.
c Var 'aux1150' order represents '0' with '5795'
c Var 'aux1150' direct represents '0' with '5795'
c Var 'aux1150' order represents '1' with '5796'
-5795 5796 0
c Var 'aux1150' direct represents '1' with '5797'
5795 -5796 5797 0
-5797 5796 0
-5797 -5795 0
c Var 'aux1150' direct represents '2' with '-5796'
5795 5797 -5796 0
c Encoding variable: aux1151 with domain: int(0..2) (representing constraint (lijk_00005_00008_00002 + dijk_00005_00008_00001))
c Both direct and order encoding.
c Var 'aux1151' order represents '0' with '5798'
c Var 'aux1151' direct represents '0' with '5798'
c Var 'aux1151' order represents '1' with '5799'
-5798 5799 0
c Var 'aux1151' direct represents '1' with '5800'
5798 -5799 5800 0
-5800 5799 0
-5800 -5798 0
c Var 'aux1151' direct represents '2' with '-5799'
5798 5800 -5799 0
c Encoding variable: aux1152 with domain: int(0..2) (representing constraint (lijk_00005_00008_00001 + uijk_00005_00008_00001))
c Both direct and order encoding.
c Var 'aux1152' order represents '0' with '5801'
c Var 'aux1152' direct represents '0' with '5801'
c Var 'aux1152' order represents '1' with '5802'
-5801 5802 0
c Var 'aux1152' direct represents '1' with '5803'
5801 -5802 5803 0
-5803 5802 0
-5803 -5801 0
c Var 'aux1152' direct represents '2' with '-5802'
5801 5803 -5802 0
c Encoding variable: aux1153 with domain: int(0..2) (representing constraint (uijk_00005_00008_00003 + dijk_00005_00008_00003))
c Both direct and order encoding.
c Var 'aux1153' order represents '0' with '5804'
c Var 'aux1153' direct represents '0' with '5804'
c Var 'aux1153' order represents '1' with '5805'
-5804 5805 0
c Var 'aux1153' direct represents '1' with '5806'
5804 -5805 5806 0
-5806 5805 0
-5806 -5804 0
c Var 'aux1153' direct represents '2' with '-5805'
5804 5806 -5805 0
c Encoding variable: aux1154 with domain: int(0..3) (representing constraint (dijk_00005_00008_00002 + aux1153))
c Both direct and order encoding.
c Var 'aux1154' order represents '0' with '5807'
c Var 'aux1154' direct represents '0' with '5807'
c Var 'aux1154' order represents '1' with '5808'
-5807 5808 0
c Var 'aux1154' direct represents '1' with '5809'
5807 -5808 5809 0
-5809 5808 0
-5809 -5807 0
c Var 'aux1154' order represents '2' with '5810'
-5808 5810 0
c Var 'aux1154' direct represents '2' with '5811'
5808 -5810 5811 0
-5811 5810 0
-5811 -5808 0
c Var 'aux1154' direct represents '3' with '-5810'
5807 5809 5811 -5810 0
c Encoding variable: aux1155 with domain: int(0..4) (representing constraint (aux1151 + aux1150))
c Both direct and order encoding.
c Var 'aux1155' order represents '0' with '5812'
c Var 'aux1155' direct represents '0' with '5812'
c Var 'aux1155' order represents '1' with '5813'
-5812 5813 0
c Var 'aux1155' direct represents '1' with '5814'
5812 -5813 5814 0
-5814 5813 0
-5814 -5812 0
c Var 'aux1155' order represents '2' with '5815'
-5813 5815 0
c Var 'aux1155' direct represents '2' with '5816'
5813 -5815 5816 0
-5816 5815 0
-5816 -5813 0
c Var 'aux1155' order represents '3' with '5817'
-5815 5817 0
c Var 'aux1155' direct represents '3' with '5818'
5815 -5817 5818 0
-5818 5817 0
-5818 -5815 0
c Var 'aux1155' direct represents '4' with '-5817'
5812 5814 5816 5818 -5817 0
c Encoding variable: aux1156 with domain: int(0..5) (representing constraint (aux1152 + aux1154))
c Both direct and order encoding.
c Var 'aux1156' order represents '0' with '5819'
c Var 'aux1156' direct represents '0' with '5819'
c Var 'aux1156' order represents '1' with '5820'
-5819 5820 0
c Var 'aux1156' direct represents '1' with '5821'
5819 -5820 5821 0
-5821 5820 0
-5821 -5819 0
c Var 'aux1156' order represents '2' with '5822'
-5820 5822 0
c Var 'aux1156' direct represents '2' with '5823'
5820 -5822 5823 0
-5823 5822 0
-5823 -5820 0
c Var 'aux1156' order represents '3' with '5824'
-5822 5824 0
c Var 'aux1156' direct represents '3' with '5825'
5822 -5824 5825 0
-5825 5824 0
-5825 -5822 0
c Var 'aux1156' order represents '4' with '5826'
-5824 5826 0
c Var 'aux1156' direct represents '4' with '5827'
5824 -5826 5827 0
-5827 5826 0
-5827 -5824 0
c Var 'aux1156' direct represents '5' with '-5826'
5819 5821 5823 5825 5827 -5826 0
c Encoding variable: aux1157 with domain: int(0) (representing constraint (dijk_00006_00008_00003 + rijk_00006_00008_00001))
c Var 'aux1157' direct represents '0' with '5828'
5828 0
c Encoding variable: aux1158 with domain: int(0) (representing constraint (rijk_00006_00008_00002 + rijk_00006_00008_00003))
c Var 'aux1158' direct represents '0' with '5829'
5829 0
c Encoding variable: aux1159 with domain: int(0) (representing constraint (shift(1, -1) + aux1157))
c Var 'aux1159' direct represents '0' with '5830'
5830 0
c Encoding variable: aux1160 with domain: int(0) (representing constraint (aux1158 + aux1159))
c Var 'aux1160' direct represents '0' with '5831'
5831 0
c Encoding variable: aux1161 with domain: bool (representing constraint (aux1160 + uijk_00006_00008_00001))
c Var 'aux1161' direct represents '0' with '-5832'
c Var 'aux1161' direct represents '1' with '5832'
c Var 'aux1161' order represents '1' with '1'
c Var 'aux1161' order represents '0' with '-5832'
c Encoding variable: aux1162 with domain: int(0..2) (representing constraint (dijk_00006_00008_00002 + aux1161))
c Both direct and order encoding.
c Var 'aux1162' order represents '0' with '5833'
c Var 'aux1162' direct represents '0' with '5833'
c Var 'aux1162' order represents '1' with '5834'
-5833 5834 0
c Var 'aux1162' direct represents '1' with '5835'
5833 -5834 5835 0
-5835 5834 0
-5835 -5833 0
c Var 'aux1162' direct represents '2' with '-5834'
5833 5835 -5834 0
c Encoding variable: aux1163 with domain: int(0..2) (representing constraint (lijk_00006_00008_00002 + lijk_00006_00008_00001))
c Both direct and order encoding.
c Var 'aux1163' order represents '0' with '5836'
c Var 'aux1163' direct represents '0' with '5836'
c Var 'aux1163' order represents '1' with '5837'
-5836 5837 0
c Var 'aux1163' direct represents '1' with '5838'
5836 -5837 5838 0
-5838 5837 0
-5838 -5836 0
c Var 'aux1163' direct represents '2' with '-5837'
5836 5838 -5837 0
c Encoding variable: aux1164 with domain: int(0..2) (representing constraint (uijk_00006_00008_00003 + lijk_00006_00008_00003))
c Both direct and order encoding.
c Var 'aux1164' order represents '0' with '5839'
c Var 'aux1164' direct represents '0' with '5839'
c Var 'aux1164' order represents '1' with '5840'
-5839 5840 0
c Var 'aux1164' direct represents '1' with '5841'
5839 -5840 5841 0
-5841 5840 0
-5841 -5839 0
c Var 'aux1164' direct represents '2' with '-5840'
5839 5841 -5840 0
c Encoding variable: aux1165 with domain: int(0..2) (representing constraint (dijk_00006_00008_00001 + uijk_00006_00008_00002))
c Both direct and order encoding.
c Var 'aux1165' order represents '0' with '5842'
c Var 'aux1165' direct represents '0' with '5842'
c Var 'aux1165' order represents '1' with '5843'
-5842 5843 0
c Var 'aux1165' direct represents '1' with '5844'
5842 -5843 5844 0
-5844 5843 0
-5844 -5842 0
c Var 'aux1165' direct represents '2' with '-5843'
5842 5844 -5843 0
c Encoding variable: aux1166 with domain: int(0..4) (representing constraint (aux1163 + aux1165))
c Both direct and order encoding.
c Var 'aux1166' order represents '0' with '5845'
c Var 'aux1166' direct represents '0' with '5845'
c Var 'aux1166' order represents '1' with '5846'
-5845 5846 0
c Var 'aux1166' direct represents '1' with '5847'
5845 -5846 5847 0
-5847 5846 0
-5847 -5845 0
c Var 'aux1166' order represents '2' with '5848'
-5846 5848 0
c Var 'aux1166' direct represents '2' with '5849'
5846 -5848 5849 0
-5849 5848 0
-5849 -5846 0
c Var 'aux1166' order represents '3' with '5850'
-5848 5850 0
c Var 'aux1166' direct represents '3' with '5851'
5848 -5850 5851 0
-5851 5850 0
-5851 -5848 0
c Var 'aux1166' direct represents '4' with '-5850'
5845 5847 5849 5851 -5850 0
c Encoding variable: aux1167 with domain: int(0..4) (representing constraint (aux1162 + aux1164))
c Both direct and order encoding.
c Var 'aux1167' order represents '0' with '5852'
c Var 'aux1167' direct represents '0' with '5852'
c Var 'aux1167' order represents '1' with '5853'
-5852 5853 0
c Var 'aux1167' direct represents '1' with '5854'
5852 -5853 5854 0
-5854 5853 0
-5854 -5852 0
c Var 'aux1167' order represents '2' with '5855'
-5853 5855 0
c Var 'aux1167' direct represents '2' with '5856'
5853 -5855 5856 0
-5856 5855 0
-5856 -5853 0
c Var 'aux1167' order represents '3' with '5857'
-5855 5857 0
c Var 'aux1167' direct represents '3' with '5858'
5855 -5857 5858 0
-5858 5857 0
-5858 -5855 0
c Var 'aux1167' direct represents '4' with '-5857'
5852 5854 5856 5858 -5857 0
c Encoding variable: aux1168 with domain: int(0) (representing constraint (rijk_00007_00008_00001 + dijk_00007_00008_00003))
c Var 'aux1168' direct represents '0' with '5859'
5859 0
c Encoding variable: aux1169 with domain: int(0) (representing constraint (rijk_00007_00008_00002 + aux1168))
c Var 'aux1169' direct represents '0' with '5860'
5860 0
c Encoding variable: aux1170 with domain: int(0) (representing constraint (rijk_00007_00008_00003 + dijk_00007_00008_00002))
c Var 'aux1170' direct represents '0' with '5861'
5861 0
c Encoding variable: aux1171 with domain: int(0) (representing constraint (aux1169 + aux1170))
c Var 'aux1171' direct represents '0' with '5862'
5862 0
c Encoding variable: aux1172 with domain: int(0) (representing constraint (shift(1, -1) + aux1171))
c Var 'aux1172' direct represents '0' with '5863'
5863 0
c Encoding variable: aux1173 with domain: bool (representing constraint (aux1172 + lijk_00007_00008_00002))
c Var 'aux1173' direct represents '0' with '-5864'
c Var 'aux1173' direct represents '1' with '5864'
c Var 'aux1173' order represents '1' with '1'
c Var 'aux1173' order represents '0' with '-5864'
c Encoding variable: aux1174 with domain: int(0..2) (representing constraint (uijk_00007_00008_00001 + lijk_00007_00008_00003))
c Both direct and order encoding.
c Var 'aux1174' order represents '0' with '5865'
c Var 'aux1174' direct represents '0' with '5865'
c Var 'aux1174' order represents '1' with '5866'
-5865 5866 0
c Var 'aux1174' direct represents '1' with '5867'
5865 -5866 5867 0
-5867 5866 0
-5867 -5865 0
c Var 'aux1174' direct represents '2' with '-5866'
5865 5867 -5866 0
c Encoding variable: aux1175 with domain: int(0..2) (representing constraint (uijk_00007_00008_00003 + aux1173))
c Both direct and order encoding.
c Var 'aux1175' order represents '0' with '5868'
c Var 'aux1175' direct represents '0' with '5868'
c Var 'aux1175' order represents '1' with '5869'
-5868 5869 0
c Var 'aux1175' direct represents '1' with '5870'
5868 -5869 5870 0
-5870 5869 0
-5870 -5868 0
c Var 'aux1175' direct represents '2' with '-5869'
5868 5870 -5869 0
c Encoding variable: aux1176 with domain: int(0..2) (representing constraint (dijk_00007_00008_00001 + lijk_00007_00008_00001))
c Both direct and order encoding.
c Var 'aux1176' order represents '0' with '5871'
c Var 'aux1176' direct represents '0' with '5871'
c Var 'aux1176' order represents '1' with '5872'
-5871 5872 0
c Var 'aux1176' direct represents '1' with '5873'
5871 -5872 5873 0
-5873 5872 0
-5873 -5871 0
c Var 'aux1176' direct represents '2' with '-5872'
5871 5873 -5872 0
c Encoding variable: aux1177 with domain: int(0..3) (representing constraint (uijk_00007_00008_00002 + aux1176))
c Both direct and order encoding.
c Var 'aux1177' order represents '0' with '5874'
c Var 'aux1177' direct represents '0' with '5874'
c Var 'aux1177' order represents '1' with '5875'
-5874 5875 0
c Var 'aux1177' direct represents '1' with '5876'
5874 -5875 5876 0
-5876 5875 0
-5876 -5874 0
c Var 'aux1177' order represents '2' with '5877'
-5875 5877 0
c Var 'aux1177' direct represents '2' with '5878'
5875 -5877 5878 0
-5878 5877 0
-5878 -5875 0
c Var 'aux1177' direct represents '3' with '-5877'
5874 5876 5878 -5877 0
c Encoding variable: aux1178 with domain: int(0..4) (representing constraint (aux1175 + aux1174))
c Both direct and order encoding.
c Var 'aux1178' order represents '0' with '5879'
c Var 'aux1178' direct represents '0' with '5879'
c Var 'aux1178' order represents '1' with '5880'
-5879 5880 0
c Var 'aux1178' direct represents '1' with '5881'
5879 -5880 5881 0
-5881 5880 0
-5881 -5879 0
c Var 'aux1178' order represents '2' with '5882'
-5880 5882 0
c Var 'aux1178' direct represents '2' with '5883'
5880 -5882 5883 0
-5883 5882 0
-5883 -5880 0
c Var 'aux1178' order represents '3' with '5884'
-5882 5884 0
c Var 'aux1178' direct represents '3' with '5885'
5882 -5884 5885 0
-5885 5884 0
-5885 -5882 0
c Var 'aux1178' direct represents '4' with '-5884'
5879 5881 5883 5885 -5884 0
c Encoding variable: aux1179 with domain: int(0) (representing constraint (rijk_00008_00008_00001 + dijk_00008_00008_00003))
c Var 'aux1179' direct represents '0' with '5886'
5886 0
c Encoding variable: aux1180 with domain: int(0) (representing constraint (dijk_00008_00008_00002 + aux1179))
c Var 'aux1180' direct represents '0' with '5887'
5887 0
c Encoding variable: aux1181 with domain: int(0) (representing constraint (rijk_00008_00008_00002 + aux1180))
c Var 'aux1181' direct represents '0' with '5888'
5888 0
c Encoding variable: aux1182 with domain: int(0) (representing constraint (rijk_00008_00008_00003 + aux1181))
c Var 'aux1182' direct represents '0' with '5889'
5889 0
c Encoding variable: aux1183 with domain: int(0) (representing constraint (dijk_00008_00008_00001 + aux1182))
c Var 'aux1183' direct represents '0' with '5890'
5890 0
c Encoding variable: aux1184 with domain: int(0) (representing constraint (shift(1, -1) + aux1183))
c Var 'aux1184' direct represents '0' with '5891'
5891 0
c Encoding variable: aux1185 with domain: bool (representing constraint (aux1184 + lijk_00008_00008_00002))
c Var 'aux1185' direct represents '0' with '-5892'
c Var 'aux1185' direct represents '1' with '5892'
c Var 'aux1185' order represents '1' with '1'
c Var 'aux1185' order represents '0' with '-5892'
c Encoding variable: aux1186 with domain: int(0..2) (representing constraint (uijk_00008_00008_00002 + aux1185))
c Both direct and order encoding.
c Var 'aux1186' order represents '0' with '5893'
c Var 'aux1186' direct represents '0' with '5893'
c Var 'aux1186' order represents '1' with '5894'
-5893 5894 0
c Var 'aux1186' direct represents '1' with '5895'
5893 -5894 5895 0
-5895 5894 0
-5895 -5893 0
c Var 'aux1186' direct represents '2' with '-5894'
5893 5895 -5894 0
c Encoding variable: aux1187 with domain: int(0..2) (representing constraint (uijk_00008_00008_00003 + lijk_00008_00008_00003))
c Both direct and order encoding.
c Var 'aux1187' order represents '0' with '5896'
c Var 'aux1187' direct represents '0' with '5896'
c Var 'aux1187' order represents '1' with '5897'
-5896 5897 0
c Var 'aux1187' direct represents '1' with '5898'
5896 -5897 5898 0
-5898 5897 0
-5898 -5896 0
c Var 'aux1187' direct represents '2' with '-5897'
5896 5898 -5897 0
c Encoding variable: aux1188 with domain: int(0..2) (representing constraint (lijk_00008_00008_00001 + uijk_00008_00008_00001))
c Both direct and order encoding.
c Var 'aux1188' order represents '0' with '5899'
c Var 'aux1188' direct represents '0' with '5899'
c Var 'aux1188' order represents '1' with '5900'
-5899 5900 0
c Var 'aux1188' direct represents '1' with '5901'
5899 -5900 5901 0
-5901 5900 0
-5901 -5899 0
c Var 'aux1188' direct represents '2' with '-5900'
5899 5901 -5900 0
c Encoding variable: aux1189 with domain: int(0..4) (representing constraint (aux1186 + aux1188))
c Both direct and order encoding.
c Var 'aux1189' order represents '0' with '5902'
c Var 'aux1189' direct represents '0' with '5902'
c Var 'aux1189' order represents '1' with '5903'
-5902 5903 0
c Var 'aux1189' direct represents '1' with '5904'
5902 -5903 5904 0
-5904 5903 0
-5904 -5902 0
c Var 'aux1189' order represents '2' with '5905'
-5903 5905 0
c Var 'aux1189' direct represents '2' with '5906'
5903 -5905 5906 0
-5906 5905 0
-5906 -5903 0
c Var 'aux1189' order represents '3' with '5907'
-5905 5907 0
c Var 'aux1189' direct represents '3' with '5908'
5905 -5907 5908 0
-5908 5907 0
-5908 -5905 0
c Var 'aux1189' direct represents '4' with '-5907'
5902 5904 5906 5908 -5907 0
c Encoding variable: aux1190 with domain: int(0..2) (representing constraint ((agrid_00004_00001=0) + (agrid_00004_00002=0)))
c Both direct and order encoding.
c Var 'aux1190' order represents '0' with '5909'
c Var 'aux1190' direct represents '0' with '5909'
c Var 'aux1190' order represents '1' with '5910'
-5909 5910 0
c Var 'aux1190' direct represents '1' with '5911'
5909 -5910 5911 0
-5911 5910 0
-5911 -5909 0
c Var 'aux1190' direct represents '2' with '-5910'
5909 5911 -5910 0
c Encoding variable: aux1191 with domain: int(0..2) (representing constraint ((agrid_00004_00004=0) + (agrid_00004_00008=0)))
c Both direct and order encoding.
c Var 'aux1191' order represents '0' with '5912'
c Var 'aux1191' direct represents '0' with '5912'
c Var 'aux1191' order represents '1' with '5913'
-5912 5913 0
c Var 'aux1191' direct represents '1' with '5914'
5912 -5913 5914 0
-5914 5913 0
-5914 -5912 0
c Var 'aux1191' direct represents '2' with '-5913'
5912 5914 -5913 0
c Encoding variable: aux1192 with domain: int(0..2) (representing constraint ((agrid_00006_00007=0) + (agrid_00002_00008=0)))
c Both direct and order encoding.
c Var 'aux1192' order represents '0' with '5915'
c Var 'aux1192' direct represents '0' with '5915'
c Var 'aux1192' order represents '1' with '5916'
-5915 5916 0
c Var 'aux1192' direct represents '1' with '5917'
5915 -5916 5917 0
-5917 5916 0
-5917 -5915 0
c Var 'aux1192' direct represents '2' with '-5916'
5915 5917 -5916 0
c Encoding variable: aux1193 with domain: int(0..2) (representing constraint ((agrid_00006_00006=0) + (agrid_00005_00008=0)))
c Both direct and order encoding.
c Var 'aux1193' order represents '0' with '5918'
c Var 'aux1193' direct represents '0' with '5918'
c Var 'aux1193' order represents '1' with '5919'
-5918 5919 0
c Var 'aux1193' direct represents '1' with '5920'
5918 -5919 5920 0
-5920 5919 0
-5920 -5918 0
c Var 'aux1193' direct represents '2' with '-5919'
5918 5920 -5919 0
c Encoding variable: aux1194 with domain: int(0..2) (representing constraint ((agrid_00006_00005=0) + (agrid_00006_00008=0)))
c Both direct and order encoding.
c Var 'aux1194' order represents '0' with '5921'
c Var 'aux1194' direct represents '0' with '5921'
c Var 'aux1194' order represents '1' with '5922'
-5921 5922 0
c Var 'aux1194' direct represents '1' with '5923'
5921 -5922 5923 0
-5923 5922 0
-5923 -5921 0
c Var 'aux1194' direct represents '2' with '-5922'
5921 5923 -5922 0
c Encoding variable: aux1195 with domain: int(0..2) (representing constraint ((agrid_00006_00004=0) + (agrid_00003_00001=0)))
c Both direct and order encoding.
c Var 'aux1195' order represents '0' with '5924'
c Var 'aux1195' direct represents '0' with '5924'
c Var 'aux1195' order represents '1' with '5925'
-5924 5925 0
c Var 'aux1195' direct represents '1' with '5926'
5924 -5925 5926 0
-5926 5925 0
-5926 -5924 0
c Var 'aux1195' direct represents '2' with '-5925'
5924 5926 -5925 0
c Encoding variable: aux1196 with domain: int(0..2) (representing constraint ((agrid_00006_00003=0) + (agrid_00007_00001=0)))
c Both direct and order encoding.
c Var 'aux1196' order represents '0' with '5927'
c Var 'aux1196' direct represents '0' with '5927'
c Var 'aux1196' order represents '1' with '5928'
-5927 5928 0
c Var 'aux1196' direct represents '1' with '5929'
5927 -5928 5929 0
-5929 5928 0
-5929 -5927 0
c Var 'aux1196' direct represents '2' with '-5928'
5927 5929 -5928 0
c Encoding variable: aux1197 with domain: int(0..2) (representing constraint ((agrid_00006_00002=0) + (agrid_00003_00002=0)))
c Both direct and order encoding.
c Var 'aux1197' order represents '0' with '5930'
c Var 'aux1197' direct represents '0' with '5930'
c Var 'aux1197' order represents '1' with '5931'
-5930 5931 0
c Var 'aux1197' direct represents '1' with '5932'
5930 -5931 5932 0
-5932 5931 0
-5932 -5930 0
c Var 'aux1197' direct represents '2' with '-5931'
5930 5932 -5931 0
c Encoding variable: aux1198 with domain: int(0..2) (representing constraint ((agrid_00006_00001=0) + (agrid_00003_00003=0)))
c Both direct and order encoding.
c Var 'aux1198' order represents '0' with '5933'
c Var 'aux1198' direct represents '0' with '5933'
c Var 'aux1198' order represents '1' with '5934'
-5933 5934 0
c Var 'aux1198' direct represents '1' with '5935'
5933 -5934 5935 0
-5935 5934 0
-5935 -5933 0
c Var 'aux1198' direct represents '2' with '-5934'
5933 5935 -5934 0
c Encoding variable: aux1199 with domain: int(0..2) (representing constraint ((agrid_00001_00008=0) + (agrid_00002_00001=0)))
c Both direct and order encoding.
c Var 'aux1199' order represents '0' with '5936'
c Var 'aux1199' direct represents '0' with '5936'
c Var 'aux1199' order represents '1' with '5937'
-5936 5937 0
c Var 'aux1199' direct represents '1' with '5938'
5936 -5937 5938 0
-5938 5937 0
-5938 -5936 0
c Var 'aux1199' direct represents '2' with '-5937'
5936 5938 -5937 0
c Encoding variable: aux1200 with domain: int(0..2) (representing constraint ((agrid_00001_00007=0) + (agrid_00007_00002=0)))
c Both direct and order encoding.
c Var 'aux1200' order represents '0' with '5939'
c Var 'aux1200' direct represents '0' with '5939'
c Var 'aux1200' order represents '1' with '5940'
-5939 5940 0
c Var 'aux1200' direct represents '1' with '5941'
5939 -5940 5941 0
-5941 5940 0
-5941 -5939 0
c Var 'aux1200' direct represents '2' with '-5940'
5939 5941 -5940 0
c Encoding variable: aux1201 with domain: int(0..2) (representing constraint ((agrid_00001_00006=0) + (agrid_00003_00004=0)))
c Both direct and order encoding.
c Var 'aux1201' order represents '0' with '5942'
c Var 'aux1201' direct represents '0' with '5942'
c Var 'aux1201' order represents '1' with '5943'
-5942 5943 0
c Var 'aux1201' direct represents '1' with '5944'
5942 -5943 5944 0
-5944 5943 0
-5944 -5942 0
c Var 'aux1201' direct represents '2' with '-5943'
5942 5944 -5943 0
c Encoding variable: aux1202 with domain: int(0..2) (representing constraint ((agrid_00001_00005=0) + (agrid_00003_00005=0)))
c Both direct and order encoding.
c Var 'aux1202' order represents '0' with '5945'
c Var 'aux1202' direct represents '0' with '5945'
c Var 'aux1202' order represents '1' with '5946'
-5945 5946 0
c Var 'aux1202' direct represents '1' with '5947'
5945 -5946 5947 0
-5947 5946 0
-5947 -5945 0
c Var 'aux1202' direct represents '2' with '-5946'
5945 5947 -5946 0
c Encoding variable: aux1203 with domain: int(0..2) (representing constraint ((agrid_00001_00004=0) + (agrid_00007_00003=0)))
c Both direct and order encoding.
c Var 'aux1203' order represents '0' with '5948'
c Var 'aux1203' direct represents '0' with '5948'
c Var 'aux1203' order represents '1' with '5949'
-5948 5949 0
c Var 'aux1203' direct represents '1' with '5950'
5948 -5949 5950 0
-5950 5949 0
-5950 -5948 0
c Var 'aux1203' direct represents '2' with '-5949'
5948 5950 -5949 0
c Encoding variable: aux1204 with domain: int(0..2) (representing constraint ((agrid_00001_00003=0) + (agrid_00003_00006=0)))
c Both direct and order encoding.
c Var 'aux1204' order represents '0' with '5951'
c Var 'aux1204' direct represents '0' with '5951'
c Var 'aux1204' order represents '1' with '5952'
-5951 5952 0
c Var 'aux1204' direct represents '1' with '5953'
5951 -5952 5953 0
-5953 5952 0
-5953 -5951 0
c Var 'aux1204' direct represents '2' with '-5952'
5951 5953 -5952 0
c Encoding variable: aux1205 with domain: int(0..2) (representing constraint ((agrid_00001_00002=0) + (agrid_00003_00007=0)))
c Both direct and order encoding.
c Var 'aux1205' order represents '0' with '5954'
c Var 'aux1205' direct represents '0' with '5954'
c Var 'aux1205' order represents '1' with '5955'
-5954 5955 0
c Var 'aux1205' direct represents '1' with '5956'
5954 -5955 5956 0
-5956 5955 0
-5956 -5954 0
c Var 'aux1205' direct represents '2' with '-5955'
5954 5956 -5955 0
c Encoding variable: aux1206 with domain: int(0..2) (representing constraint ((agrid_00001_00001=0) + (agrid_00004_00005=0)))
c Both direct and order encoding.
c Var 'aux1206' order represents '0' with '5957'
c Var 'aux1206' direct represents '0' with '5957'
c Var 'aux1206' order represents '1' with '5958'
-5957 5958 0
c Var 'aux1206' direct represents '1' with '5959'
5957 -5958 5959 0
-5959 5958 0
-5959 -5957 0
c Var 'aux1206' direct represents '2' with '-5958'
5957 5959 -5958 0
c Encoding variable: aux1207 with domain: int(0..2) (representing constraint ((agrid_00008_00008=0) + (agrid_00002_00002=0)))
c Both direct and order encoding.
c Var 'aux1207' order represents '0' with '5960'
c Var 'aux1207' direct represents '0' with '5960'
c Var 'aux1207' order represents '1' with '5961'
-5960 5961 0
c Var 'aux1207' direct represents '1' with '5962'
5960 -5961 5962 0
-5962 5961 0
-5962 -5960 0
c Var 'aux1207' direct represents '2' with '-5961'
5960 5962 -5961 0
c Encoding variable: aux1208 with domain: int(0..2) (representing constraint ((agrid_00008_00007=0) + (agrid_00007_00004=0)))
c Both direct and order encoding.
c Var 'aux1208' order represents '0' with '5963'
c Var 'aux1208' direct represents '0' with '5963'
c Var 'aux1208' order represents '1' with '5964'
-5963 5964 0
c Var 'aux1208' direct represents '1' with '5965'
5963 -5964 5965 0
-5965 5964 0
-5965 -5963 0
c Var 'aux1208' direct represents '2' with '-5964'
5963 5965 -5964 0
c Encoding variable: aux1209 with domain: int(0..2) (representing constraint ((agrid_00008_00006=0) + (agrid_00003_00008=0)))
c Both direct and order encoding.
c Var 'aux1209' order represents '0' with '5966'
c Var 'aux1209' direct represents '0' with '5966'
c Var 'aux1209' order represents '1' with '5967'
-5966 5967 0
c Var 'aux1209' direct represents '1' with '5968'
5966 -5967 5968 0
-5968 5967 0
-5968 -5966 0
c Var 'aux1209' direct represents '2' with '-5967'
5966 5968 -5967 0
c Encoding variable: aux1210 with domain: int(0..2) (representing constraint ((agrid_00008_00005=0) + (agrid_00008_00001=0)))
c Both direct and order encoding.
c Var 'aux1210' order represents '0' with '5969'
c Var 'aux1210' direct represents '0' with '5969'
c Var 'aux1210' order represents '1' with '5970'
-5969 5970 0
c Var 'aux1210' direct represents '1' with '5971'
5969 -5970 5971 0
-5971 5970 0
-5971 -5969 0
c Var 'aux1210' direct represents '2' with '-5970'
5969 5971 -5970 0
c Encoding variable: aux1211 with domain: int(0..2) (representing constraint ((agrid_00008_00004=0) + (agrid_00007_00005=0)))
c Both direct and order encoding.
c Var 'aux1211' order represents '0' with '5972'
c Var 'aux1211' direct represents '0' with '5972'
c Var 'aux1211' order represents '1' with '5973'
-5972 5973 0
c Var 'aux1211' direct represents '1' with '5974'
5972 -5973 5974 0
-5974 5973 0
-5974 -5972 0
c Var 'aux1211' direct represents '2' with '-5973'
5972 5974 -5973 0
c Encoding variable: aux1212 with domain: int(0..2) (representing constraint ((agrid_00008_00002=0) + (agrid_00008_00003=0)))
c Both direct and order encoding.
c Var 'aux1212' order represents '0' with '5975'
c Var 'aux1212' direct represents '0' with '5975'
c Var 'aux1212' order represents '1' with '5976'
-5975 5976 0
c Var 'aux1212' direct represents '1' with '5977'
5975 -5976 5977 0
-5977 5976 0
-5977 -5975 0
c Var 'aux1212' direct represents '2' with '-5976'
5975 5977 -5976 0
c Encoding variable: aux1213 with domain: int(0..2) (representing constraint ((agrid_00002_00003=0) + (agrid_00007_00006=0)))
c Both direct and order encoding.
c Var 'aux1213' order represents '0' with '5978'
c Var 'aux1213' direct represents '0' with '5978'
c Var 'aux1213' order represents '1' with '5979'
-5978 5979 0
c Var 'aux1213' direct represents '1' with '5980'
5978 -5979 5980 0
-5980 5979 0
-5980 -5978 0
c Var 'aux1213' direct represents '2' with '-5979'
5978 5980 -5979 0
c Encoding variable: aux1214 with domain: int(0..2) (representing constraint ((agrid_00007_00007=0) + (agrid_00004_00003=0)))
c Both direct and order encoding.
c Var 'aux1214' order represents '0' with '5981'
c Var 'aux1214' direct represents '0' with '5981'
c Var 'aux1214' order represents '1' with '5982'
-5981 5982 0
c Var 'aux1214' direct represents '1' with '5983'
5981 -5982 5983 0
-5983 5982 0
-5983 -5981 0
c Var 'aux1214' direct represents '2' with '-5982'
5981 5983 -5982 0
c Encoding variable: aux1215 with domain: int(0..2) (representing constraint ((agrid_00004_00006=0) + (agrid_00002_00004=0)))
c Both direct and order encoding.
c Var 'aux1215' order represents '0' with '5984'
c Var 'aux1215' direct represents '0' with '5984'
c Var 'aux1215' order represents '1' with '5985'
-5984 5985 0
c Var 'aux1215' direct represents '1' with '5986'
5984 -5985 5986 0
-5986 5985 0
-5986 -5984 0
c Var 'aux1215' direct represents '2' with '-5985'
5984 5986 -5985 0
c Encoding variable: aux1216 with domain: int(0..2) (representing constraint ((agrid_00007_00008=0) + (agrid_00005_00001=0)))
c Both direct and order encoding.
c Var 'aux1216' order represents '0' with '5987'
c Var 'aux1216' direct represents '0' with '5987'
c Var 'aux1216' order represents '1' with '5988'
-5987 5988 0
c Var 'aux1216' direct represents '1' with '5989'
5987 -5988 5989 0
-5989 5988 0
-5989 -5987 0
c Var 'aux1216' direct represents '2' with '-5988'
5987 5989 -5988 0
c Encoding variable: aux1217 with domain: int(0..2) (representing constraint ((agrid_00002_00005=0) + (agrid_00005_00002=0)))
c Both direct and order encoding.
c Var 'aux1217' order represents '0' with '5990'
c Var 'aux1217' direct represents '0' with '5990'
c Var 'aux1217' order represents '1' with '5991'
-5990 5991 0
c Var 'aux1217' direct represents '1' with '5992'
5990 -5991 5992 0
-5992 5991 0
-5992 -5990 0
c Var 'aux1217' direct represents '2' with '-5991'
5990 5992 -5991 0
c Encoding variable: aux1218 with domain: int(0..2) (representing constraint ((agrid_00005_00003=0) + (agrid_00004_00007=0)))
c Both direct and order encoding.
c Var 'aux1218' order represents '0' with '5993'
c Var 'aux1218' direct represents '0' with '5993'
c Var 'aux1218' order represents '1' with '5994'
-5993 5994 0
c Var 'aux1218' direct represents '1' with '5995'
5993 -5994 5995 0
-5995 5994 0
-5995 -5993 0
c Var 'aux1218' direct represents '2' with '-5994'
5993 5995 -5994 0
c Encoding variable: aux1219 with domain: int(0..2) (representing constraint ((agrid_00002_00006=0) + (agrid_00005_00004=0)))
c Both direct and order encoding.
c Var 'aux1219' order represents '0' with '5996'
c Var 'aux1219' direct represents '0' with '5996'
c Var 'aux1219' order represents '1' with '5997'
-5996 5997 0
c Var 'aux1219' direct represents '1' with '5998'
5996 -5997 5998 0
-5998 5997 0
-5998 -5996 0
c Var 'aux1219' direct represents '2' with '-5997'
5996 5998 -5997 0
c Encoding variable: aux1220 with domain: int(0..2) (representing constraint ((agrid_00005_00005=0) + (agrid_00002_00007=0)))
c Both direct and order encoding.
c Var 'aux1220' order represents '0' with '5999'
c Var 'aux1220' direct represents '0' with '5999'
c Var 'aux1220' order represents '1' with '6000'
-5999 6000 0
c Var 'aux1220' direct represents '1' with '6001'
5999 -6000 6001 0
-6001 6000 0
-6001 -5999 0
c Var 'aux1220' direct represents '2' with '-6000'
5999 6001 -6000 0
c Encoding variable: aux1221 with domain: int(0..2) (representing constraint ((agrid_00005_00006=0) + (agrid_00005_00007=0)))
c Both direct and order encoding.
c Var 'aux1221' order represents '0' with '6002'
c Var 'aux1221' direct represents '0' with '6002'
c Var 'aux1221' order represents '1' with '6003'
-6002 6003 0
c Var 'aux1221' direct represents '1' with '6004'
6002 -6003 6004 0
-6004 6003 0
-6004 -6002 0
c Var 'aux1221' direct represents '2' with '-6003'
6002 6004 -6003 0
c Encoding variable: aux1222 with domain: int(0..4) (representing constraint (aux1205 + aux1221))
c Both direct and order encoding.
c Var 'aux1222' order represents '0' with '6005'
c Var 'aux1222' direct represents '0' with '6005'
c Var 'aux1222' order represents '1' with '6006'
-6005 6006 0
c Var 'aux1222' direct represents '1' with '6007'
6005 -6006 6007 0
-6007 6006 0
-6007 -6005 0
c Var 'aux1222' order represents '2' with '6008'
-6006 6008 0
c Var 'aux1222' direct represents '2' with '6009'
6006 -6008 6009 0
-6009 6008 0
-6009 -6006 0
c Var 'aux1222' order represents '3' with '6010'
-6008 6010 0
c Var 'aux1222' direct represents '3' with '6011'
6008 -6010 6011 0
-6011 6010 0
-6011 -6008 0
c Var 'aux1222' direct represents '4' with '-6010'
6005 6007 6009 6011 -6010 0
c Encoding variable: aux1223 with domain: int(0..4) (representing constraint (aux1203 + aux1195))
c Both direct and order encoding.
c Var 'aux1223' order represents '0' with '6012'
c Var 'aux1223' direct represents '0' with '6012'
c Var 'aux1223' order represents '1' with '6013'
-6012 6013 0
c Var 'aux1223' direct represents '1' with '6014'
6012 -6013 6014 0
-6014 6013 0
-6014 -6012 0
c Var 'aux1223' order represents '2' with '6015'
-6013 6015 0
c Var 'aux1223' direct represents '2' with '6016'
6013 -6015 6016 0
-6016 6015 0
-6016 -6013 0
c Var 'aux1223' order represents '3' with '6017'
-6015 6017 0
c Var 'aux1223' direct represents '3' with '6018'
6015 -6017 6018 0
-6018 6017 0
-6018 -6015 0
c Var 'aux1223' direct represents '4' with '-6017'
6012 6014 6016 6018 -6017 0
c Encoding variable: aux1224 with domain: int(0..4) (representing constraint (aux1193 + aux1191))
c Both direct and order encoding.
c Var 'aux1224' order represents '0' with '6019'
c Var 'aux1224' direct represents '0' with '6019'
c Var 'aux1224' order represents '1' with '6020'
-6019 6020 0
c Var 'aux1224' direct represents '1' with '6021'
6019 -6020 6021 0
-6021 6020 0
-6021 -6019 0
c Var 'aux1224' order represents '2' with '6022'
-6020 6022 0
c Var 'aux1224' direct represents '2' with '6023'
6020 -6022 6023 0
-6023 6022 0
-6023 -6020 0
c Var 'aux1224' order represents '3' with '6024'
-6022 6024 0
c Var 'aux1224' direct represents '3' with '6025'
6022 -6024 6025 0
-6025 6024 0
-6025 -6022 0
c Var 'aux1224' direct represents '4' with '-6024'
6019 6021 6023 6025 -6024 0
c Encoding variable: aux1225 with domain: int(0..4) (representing constraint (aux1218 + aux1190))
c Both direct and order encoding.
c Var 'aux1225' order represents '0' with '6026'
c Var 'aux1225' direct represents '0' with '6026'
c Var 'aux1225' order represents '1' with '6027'
-6026 6027 0
c Var 'aux1225' direct represents '1' with '6028'
6026 -6027 6028 0
-6028 6027 0
-6028 -6026 0
c Var 'aux1225' order represents '2' with '6029'
-6027 6029 0
c Var 'aux1225' direct represents '2' with '6030'
6027 -6029 6030 0
-6030 6029 0
-6030 -6027 0
c Var 'aux1225' order represents '3' with '6031'
-6029 6031 0
c Var 'aux1225' direct represents '3' with '6032'
6029 -6031 6032 0
-6032 6031 0
-6032 -6029 0
c Var 'aux1225' direct represents '4' with '-6031'
6026 6028 6030 6032 -6031 0
c Encoding variable: aux1226 with domain: int(0..4) (representing constraint (aux1217 + aux1194))
c Both direct and order encoding.
c Var 'aux1226' order represents '0' with '6033'
c Var 'aux1226' direct represents '0' with '6033'
c Var 'aux1226' order represents '1' with '6034'
-6033 6034 0
c Var 'aux1226' direct represents '1' with '6035'
6033 -6034 6035 0
-6035 6034 0
-6035 -6033 0
c Var 'aux1226' order represents '2' with '6036'
-6034 6036 0
c Var 'aux1226' direct represents '2' with '6037'
6034 -6036 6037 0
-6037 6036 0
-6037 -6034 0
c Var 'aux1226' order represents '3' with '6038'
-6036 6038 0
c Var 'aux1226' direct represents '3' with '6039'
6036 -6038 6039 0
-6039 6038 0
-6039 -6036 0
c Var 'aux1226' direct represents '4' with '-6038'
6033 6035 6037 6039 -6038 0
c Encoding variable: aux1227 with domain: int(0..4) (representing constraint (aux1197 + aux1202))
c Both direct and order encoding.
c Var 'aux1227' order represents '0' with '6040'
c Var 'aux1227' direct represents '0' with '6040'
c Var 'aux1227' order represents '1' with '6041'
-6040 6041 0
c Var 'aux1227' direct represents '1' with '6042'
6040 -6041 6042 0
-6042 6041 0
-6042 -6040 0
c Var 'aux1227' order represents '2' with '6043'
-6041 6043 0
c Var 'aux1227' direct represents '2' with '6044'
6041 -6043 6044 0
-6044 6043 0
-6044 -6041 0
c Var 'aux1227' order represents '3' with '6045'
-6043 6045 0
c Var 'aux1227' direct represents '3' with '6046'
6043 -6045 6046 0
-6046 6045 0
-6046 -6043 0
c Var 'aux1227' direct represents '4' with '-6045'
6040 6042 6044 6046 -6045 0
c Encoding variable: aux1228 with domain: int(0..4) (representing constraint (aux1215 + aux1198))
c Both direct and order encoding.
c Var 'aux1228' order represents '0' with '6047'
c Var 'aux1228' direct represents '0' with '6047'
c Var 'aux1228' order represents '1' with '6048'
-6047 6048 0
c Var 'aux1228' direct represents '1' with '6049'
6047 -6048 6049 0
-6049 6048 0
-6049 -6047 0
c Var 'aux1228' order represents '2' with '6050'
-6048 6050 0
c Var 'aux1228' direct represents '2' with '6051'
6048 -6050 6051 0
-6051 6050 0
-6051 -6048 0
c Var 'aux1228' order represents '3' with '6052'
-6050 6052 0
c Var 'aux1228' direct represents '3' with '6053'
6050 -6052 6053 0
-6053 6052 0
-6053 -6050 0
c Var 'aux1228' direct represents '4' with '-6052'
6047 6049 6051 6053 -6052 0
c Encoding variable: aux1229 with domain: int(0..4) (representing constraint (aux1200 + aux1201))
c Both direct and order encoding.
c Var 'aux1229' order represents '0' with '6054'
c Var 'aux1229' direct represents '0' with '6054'
c Var 'aux1229' order represents '1' with '6055'
-6054 6055 0
c Var 'aux1229' direct represents '1' with '6056'
6054 -6055 6056 0
-6056 6055 0
-6056 -6054 0
c Var 'aux1229' order represents '2' with '6057'
-6055 6057 0
c Var 'aux1229' direct represents '2' with '6058'
6055 -6057 6058 0
-6058 6057 0
-6058 -6055 0
c Var 'aux1229' order represents '3' with '6059'
-6057 6059 0
c Var 'aux1229' direct represents '3' with '6060'
6057 -6059 6060 0
-6060 6059 0
-6060 -6057 0
c Var 'aux1229' direct represents '4' with '-6059'
6054 6056 6058 6060 -6059 0
c Encoding variable: aux1230 with domain: int(0..4) (representing constraint (aux1204 + aux1212))
c Both direct and order encoding.
c Var 'aux1230' order represents '0' with '6061'
c Var 'aux1230' direct represents '0' with '6061'
c Var 'aux1230' order represents '1' with '6062'
-6061 6062 0
c Var 'aux1230' direct represents '1' with '6063'
6061 -6062 6063 0
-6063 6062 0
-6063 -6061 0
c Var 'aux1230' order represents '2' with '6064'
-6062 6064 0
c Var 'aux1230' direct represents '2' with '6065'
6062 -6064 6065 0
-6065 6064 0
-6065 -6062 0
c Var 'aux1230' order represents '3' with '6066'
-6064 6066 0
c Var 'aux1230' direct represents '3' with '6067'
6064 -6066 6067 0
-6067 6066 0
-6067 -6064 0
c Var 'aux1230' direct represents '4' with '-6066'
6061 6063 6065 6067 -6066 0
c Encoding variable: aux1231 with domain: int(0..4) (representing constraint (aux1213 + aux1210))
c Both direct and order encoding.
c Var 'aux1231' order represents '0' with '6068'
c Var 'aux1231' direct represents '0' with '6068'
c Var 'aux1231' order represents '1' with '6069'
-6068 6069 0
c Var 'aux1231' direct represents '1' with '6070'
6068 -6069 6070 0
-6070 6069 0
-6070 -6068 0
c Var 'aux1231' order represents '2' with '6071'
-6069 6071 0
c Var 'aux1231' direct represents '2' with '6072'
6069 -6071 6072 0
-6072 6071 0
-6072 -6069 0
c Var 'aux1231' order represents '3' with '6073'
-6071 6073 0
c Var 'aux1231' direct represents '3' with '6074'
6071 -6073 6074 0
-6074 6073 0
-6074 -6071 0
c Var 'aux1231' direct represents '4' with '-6073'
6068 6070 6072 6074 -6073 0
c Encoding variable: aux1232 with domain: int(0..4) (representing constraint (aux1211 + aux1206))
c Both direct and order encoding.
c Var 'aux1232' order represents '0' with '6075'
c Var 'aux1232' direct represents '0' with '6075'
c Var 'aux1232' order represents '1' with '6076'
-6075 6076 0
c Var 'aux1232' direct represents '1' with '6077'
6075 -6076 6077 0
-6077 6076 0
-6077 -6075 0
c Var 'aux1232' order represents '2' with '6078'
-6076 6078 0
c Var 'aux1232' direct represents '2' with '6079'
6076 -6078 6079 0
-6079 6078 0
-6079 -6076 0
c Var 'aux1232' order represents '3' with '6080'
-6078 6080 0
c Var 'aux1232' direct represents '3' with '6081'
6078 -6080 6081 0
-6081 6080 0
-6081 -6078 0
c Var 'aux1232' direct represents '4' with '-6080'
6075 6077 6079 6081 -6080 0
c Encoding variable: aux1233 with domain: int(0..4) (representing constraint (aux1209 + aux1207))
c Both direct and order encoding.
c Var 'aux1233' order represents '0' with '6082'
c Var 'aux1233' direct represents '0' with '6082'
c Var 'aux1233' order represents '1' with '6083'
-6082 6083 0
c Var 'aux1233' direct represents '1' with '6084'
6082 -6083 6084 0
-6084 6083 0
-6084 -6082 0
c Var 'aux1233' order represents '2' with '6085'
-6083 6085 0
c Var 'aux1233' direct represents '2' with '6086'
6083 -6085 6086 0
-6086 6085 0
-6086 -6083 0
c Var 'aux1233' order represents '3' with '6087'
-6085 6087 0
c Var 'aux1233' direct represents '3' with '6088'
6085 -6087 6088 0
-6088 6087 0
-6088 -6085 0
c Var 'aux1233' direct represents '4' with '-6087'
6082 6084 6086 6088 -6087 0
c Encoding variable: aux1234 with domain: int(0..4) (representing constraint (aux1208 + aux1220))
c Both direct and order encoding.
c Var 'aux1234' order represents '0' with '6089'
c Var 'aux1234' direct represents '0' with '6089'
c Var 'aux1234' order represents '1' with '6090'
-6089 6090 0
c Var 'aux1234' direct represents '1' with '6091'
6089 -6090 6091 0
-6091 6090 0
-6091 -6089 0
c Var 'aux1234' order represents '2' with '6092'
-6090 6092 0
c Var 'aux1234' direct represents '2' with '6093'
6090 -6092 6093 0
-6093 6092 0
-6093 -6090 0
c Var 'aux1234' order represents '3' with '6094'
-6092 6094 0
c Var 'aux1234' direct represents '3' with '6095'
6092 -6094 6095 0
-6095 6094 0
-6095 -6092 0
c Var 'aux1234' direct represents '4' with '-6094'
6089 6091 6093 6095 -6094 0
c Encoding variable: aux1235 with domain: int(0..4) (representing constraint (aux1216 + aux1214))
c Both direct and order encoding.
c Var 'aux1235' order represents '0' with '6096'
c Var 'aux1235' direct represents '0' with '6096'
c Var 'aux1235' order represents '1' with '6097'
-6096 6097 0
c Var 'aux1235' direct represents '1' with '6098'
6096 -6097 6098 0
-6098 6097 0
-6098 -6096 0
c Var 'aux1235' order represents '2' with '6099'
-6097 6099 0
c Var 'aux1235' direct represents '2' with '6100'
6097 -6099 6100 0
-6100 6099 0
-6100 -6097 0
c Var 'aux1235' order represents '3' with '6101'
-6099 6101 0
c Var 'aux1235' direct represents '3' with '6102'
6099 -6101 6102 0
-6102 6101 0
-6102 -6099 0
c Var 'aux1235' direct represents '4' with '-6101'
6096 6098 6100 6102 -6101 0
c Encoding variable: aux1236 with domain: int(0..4) (representing constraint (aux1199 + aux1192))
c Both direct and order encoding.
c Var 'aux1236' order represents '0' with '6103'
c Var 'aux1236' direct represents '0' with '6103'
c Var 'aux1236' order represents '1' with '6104'
-6103 6104 0
c Var 'aux1236' direct represents '1' with '6105'
6103 -6104 6105 0
-6105 6104 0
-6105 -6103 0
c Var 'aux1236' order represents '2' with '6106'
-6104 6106 0
c Var 'aux1236' direct represents '2' with '6107'
6104 -6106 6107 0
-6107 6106 0
-6107 -6104 0
c Var 'aux1236' order represents '3' with '6108'
-6106 6108 0
c Var 'aux1236' direct represents '3' with '6109'
6106 -6108 6109 0
-6109 6108 0
-6109 -6106 0
c Var 'aux1236' direct represents '4' with '-6108'
6103 6105 6107 6109 -6108 0
c Encoding variable: aux1237 with domain: int(0..4) (representing constraint (aux1196 + aux1219))
c Both direct and order encoding.
c Var 'aux1237' order represents '0' with '6110'
c Var 'aux1237' direct represents '0' with '6110'
c Var 'aux1237' order represents '1' with '6111'
-6110 6111 0
c Var 'aux1237' direct represents '1' with '6112'
6110 -6111 6112 0
-6112 6111 0
-6112 -6110 0
c Var 'aux1237' order represents '2' with '6113'
-6111 6113 0
c Var 'aux1237' direct represents '2' with '6114'
6111 -6113 6114 0
-6114 6113 0
-6114 -6111 0
c Var 'aux1237' order represents '3' with '6115'
-6113 6115 0
c Var 'aux1237' direct represents '3' with '6116'
6113 -6115 6116 0
-6116 6115 0
-6116 -6113 0
c Var 'aux1237' direct represents '4' with '-6115'
6110 6112 6114 6116 -6115 0
c Encoding variable: aux1238 with domain: int(0..8) (representing constraint (aux1229 + aux1237))
c Both direct and order encoding.
c Var 'aux1238' order represents '0' with '6117'
c Var 'aux1238' direct represents '0' with '6117'
c Var 'aux1238' order represents '1' with '6118'
-6117 6118 0
c Var 'aux1238' direct represents '1' with '6119'
6117 -6118 6119 0
-6119 6118 0
-6119 -6117 0
c Var 'aux1238' order represents '2' with '6120'
-6118 6120 0
c Var 'aux1238' direct represents '2' with '6121'
6118 -6120 6121 0
-6121 6120 0
-6121 -6118 0
c Var 'aux1238' order represents '3' with '6122'
-6120 6122 0
c Var 'aux1238' direct represents '3' with '6123'
6120 -6122 6123 0
-6123 6122 0
-6123 -6120 0
c Var 'aux1238' order represents '4' with '6124'
-6122 6124 0
c Var 'aux1238' direct represents '4' with '6125'
6122 -6124 6125 0
-6125 6124 0
-6125 -6122 0
c Var 'aux1238' order represents '5' with '6126'
-6124 6126 0
c Var 'aux1238' direct represents '5' with '6127'
6124 -6126 6127 0
-6127 6126 0
-6127 -6124 0
c Var 'aux1238' order represents '6' with '6128'
-6126 6128 0
c Var 'aux1238' direct represents '6' with '6129'
6126 -6128 6129 0
-6129 6128 0
-6129 -6126 0
c Var 'aux1238' order represents '7' with '6130'
-6128 6130 0
c Var 'aux1238' direct represents '7' with '6131'
6128 -6130 6131 0
-6131 6130 0
-6131 -6128 0
c Var 'aux1238' direct represents '8' with '-6130'
6117 6119 6121 6123 6125 6127 6129 6131 -6130 0
c Encoding variable: aux1239 with domain: int(0..8) (representing constraint (aux1227 + aux1223))
c Both direct and order encoding.
c Var 'aux1239' order represents '0' with '6132'
c Var 'aux1239' direct represents '0' with '6132'
c Var 'aux1239' order represents '1' with '6133'
-6132 6133 0
c Var 'aux1239' direct represents '1' with '6134'
6132 -6133 6134 0
-6134 6133 0
-6134 -6132 0
c Var 'aux1239' order represents '2' with '6135'
-6133 6135 0
c Var 'aux1239' direct represents '2' with '6136'
6133 -6135 6136 0
-6136 6135 0
-6136 -6133 0
c Var 'aux1239' order represents '3' with '6137'
-6135 6137 0
c Var 'aux1239' direct represents '3' with '6138'
6135 -6137 6138 0
-6138 6137 0
-6138 -6135 0
c Var 'aux1239' order represents '4' with '6139'
-6137 6139 0
c Var 'aux1239' direct represents '4' with '6140'
6137 -6139 6140 0
-6140 6139 0
-6140 -6137 0
c Var 'aux1239' order represents '5' with '6141'
-6139 6141 0
c Var 'aux1239' direct represents '5' with '6142'
6139 -6141 6142 0
-6142 6141 0
-6142 -6139 0
c Var 'aux1239' order represents '6' with '6143'
-6141 6143 0
c Var 'aux1239' direct represents '6' with '6144'
6141 -6143 6144 0
-6144 6143 0
-6144 -6141 0
c Var 'aux1239' order represents '7' with '6145'
-6143 6145 0
c Var 'aux1239' direct represents '7' with '6146'
6143 -6145 6146 0
-6146 6145 0
-6146 -6143 0
c Var 'aux1239' direct represents '8' with '-6145'
6132 6134 6136 6138 6140 6142 6144 6146 -6145 0
c Encoding variable: aux1240 with domain: int(0..8) (representing constraint (aux1235 + aux1222))
c Both direct and order encoding.
c Var 'aux1240' order represents '0' with '6147'
c Var 'aux1240' direct represents '0' with '6147'
c Var 'aux1240' order represents '1' with '6148'
-6147 6148 0
c Var 'aux1240' direct represents '1' with '6149'
6147 -6148 6149 0
-6149 6148 0
-6149 -6147 0
c Var 'aux1240' order represents '2' with '6150'
-6148 6150 0
c Var 'aux1240' direct represents '2' with '6151'
6148 -6150 6151 0
-6151 6150 0
-6151 -6148 0
c Var 'aux1240' order represents '3' with '6152'
-6150 6152 0
c Var 'aux1240' direct represents '3' with '6153'
6150 -6152 6153 0
-6153 6152 0
-6153 -6150 0
c Var 'aux1240' order represents '4' with '6154'
-6152 6154 0
c Var 'aux1240' direct represents '4' with '6155'
6152 -6154 6155 0
-6155 6154 0
-6155 -6152 0
c Var 'aux1240' order represents '5' with '6156'
-6154 6156 0
c Var 'aux1240' direct represents '5' with '6157'
6154 -6156 6157 0
-6157 6156 0
-6157 -6154 0
c Var 'aux1240' order represents '6' with '6158'
-6156 6158 0
c Var 'aux1240' direct represents '6' with '6159'
6156 -6158 6159 0
-6159 6158 0
-6159 -6156 0
c Var 'aux1240' order represents '7' with '6160'
-6158 6160 0
c Var 'aux1240' direct represents '7' with '6161'
6158 -6160 6161 0
-6161 6160 0
-6161 -6158 0
c Var 'aux1240' direct represents '8' with '-6160'
6147 6149 6151 6153 6155 6157 6159 6161 -6160 0
c Encoding variable: aux1241 with domain: int(0..8) (representing constraint (aux1225 + aux1226))
c Both direct and order encoding.
c Var 'aux1241' order represents '0' with '6162'
c Var 'aux1241' direct represents '0' with '6162'
c Var 'aux1241' order represents '1' with '6163'
-6162 6163 0
c Var 'aux1241' direct represents '1' with '6164'
6162 -6163 6164 0
-6164 6163 0
-6164 -6162 0
c Var 'aux1241' order represents '2' with '6165'
-6163 6165 0
c Var 'aux1241' direct represents '2' with '6166'
6163 -6165 6166 0
-6166 6165 0
-6166 -6163 0
c Var 'aux1241' order represents '3' with '6167'
-6165 6167 0
c Var 'aux1241' direct represents '3' with '6168'
6165 -6167 6168 0
-6168 6167 0
-6168 -6165 0
c Var 'aux1241' order represents '4' with '6169'
-6167 6169 0
c Var 'aux1241' direct represents '4' with '6170'
6167 -6169 6170 0
-6170 6169 0
-6170 -6167 0
c Var 'aux1241' order represents '5' with '6171'
-6169 6171 0
c Var 'aux1241' direct represents '5' with '6172'
6169 -6171 6172 0
-6172 6171 0
-6172 -6169 0
c Var 'aux1241' order represents '6' with '6173'
-6171 6173 0
c Var 'aux1241' direct represents '6' with '6174'
6171 -6173 6174 0
-6174 6173 0
-6174 -6171 0
c Var 'aux1241' order represents '7' with '6175'
-6173 6175 0
c Var 'aux1241' direct represents '7' with '6176'
6173 -6175 6176 0
-6176 6175 0
-6176 -6173 0
c Var 'aux1241' direct represents '8' with '-6175'
6162 6164 6166 6168 6170 6172 6174 6176 -6175 0
c Encoding variable: aux1242 with domain: int(0..8) (representing constraint (aux1228 + aux1232))
c Both direct and order encoding.
c Var 'aux1242' order represents '0' with '6177'
c Var 'aux1242' direct represents '0' with '6177'
c Var 'aux1242' order represents '1' with '6178'
-6177 6178 0
c Var 'aux1242' direct represents '1' with '6179'
6177 -6178 6179 0
-6179 6178 0
-6179 -6177 0
c Var 'aux1242' order represents '2' with '6180'
-6178 6180 0
c Var 'aux1242' direct represents '2' with '6181'
6178 -6180 6181 0
-6181 6180 0
-6181 -6178 0
c Var 'aux1242' order represents '3' with '6182'
-6180 6182 0
c Var 'aux1242' direct represents '3' with '6183'
6180 -6182 6183 0
-6183 6182 0
-6183 -6180 0
c Var 'aux1242' order represents '4' with '6184'
-6182 6184 0
c Var 'aux1242' direct represents '4' with '6185'
6182 -6184 6185 0
-6185 6184 0
-6185 -6182 0
c Var 'aux1242' order represents '5' with '6186'
-6184 6186 0
c Var 'aux1242' direct represents '5' with '6187'
6184 -6186 6187 0
-6187 6186 0
-6187 -6184 0
c Var 'aux1242' order represents '6' with '6188'
-6186 6188 0
c Var 'aux1242' direct represents '6' with '6189'
6186 -6188 6189 0
-6189 6188 0
-6189 -6186 0
c Var 'aux1242' order represents '7' with '6190'
-6188 6190 0
c Var 'aux1242' direct represents '7' with '6191'
6188 -6190 6191 0
-6191 6190 0
-6191 -6188 0
c Var 'aux1242' direct represents '8' with '-6190'
6177 6179 6181 6183 6185 6187 6189 6191 -6190 0
c Encoding variable: aux1243 with domain: int(0..8) (representing constraint (aux1233 + aux1230))
c Both direct and order encoding.
c Var 'aux1243' order represents '0' with '6192'
c Var 'aux1243' direct represents '0' with '6192'
c Var 'aux1243' order represents '1' with '6193'
-6192 6193 0
c Var 'aux1243' direct represents '1' with '6194'
6192 -6193 6194 0
-6194 6193 0
-6194 -6192 0
c Var 'aux1243' order represents '2' with '6195'
-6193 6195 0
c Var 'aux1243' direct represents '2' with '6196'
6193 -6195 6196 0
-6196 6195 0
-6196 -6193 0
c Var 'aux1243' order represents '3' with '6197'
-6195 6197 0
c Var 'aux1243' direct represents '3' with '6198'
6195 -6197 6198 0
-6198 6197 0
-6198 -6195 0
c Var 'aux1243' order represents '4' with '6199'
-6197 6199 0
c Var 'aux1243' direct represents '4' with '6200'
6197 -6199 6200 0
-6200 6199 0
-6200 -6197 0
c Var 'aux1243' order represents '5' with '6201'
-6199 6201 0
c Var 'aux1243' direct represents '5' with '6202'
6199 -6201 6202 0
-6202 6201 0
-6202 -6199 0
c Var 'aux1243' order represents '6' with '6203'
-6201 6203 0
c Var 'aux1243' direct represents '6' with '6204'
6201 -6203 6204 0
-6204 6203 0
-6204 -6201 0
c Var 'aux1243' order represents '7' with '6205'
-6203 6205 0
c Var 'aux1243' direct represents '7' with '6206'
6203 -6205 6206 0
-6206 6205 0
-6206 -6203 0
c Var 'aux1243' direct represents '8' with '-6205'
6192 6194 6196 6198 6200 6202 6204 6206 -6205 0
c Encoding variable: aux1244 with domain: int(0..8) (representing constraint (aux1231 + aux1236))
c Both direct and order encoding.
c Var 'aux1244' order represents '0' with '6207'
c Var 'aux1244' direct represents '0' with '6207'
c Var 'aux1244' order represents '1' with '6208'
-6207 6208 0
c Var 'aux1244' direct represents '1' with '6209'
6207 -6208 6209 0
-6209 6208 0
-6209 -6207 0
c Var 'aux1244' order represents '2' with '6210'
-6208 6210 0
c Var 'aux1244' direct represents '2' with '6211'
6208 -6210 6211 0
-6211 6210 0
-6211 -6208 0
c Var 'aux1244' order represents '3' with '6212'
-6210 6212 0
c Var 'aux1244' direct represents '3' with '6213'
6210 -6212 6213 0
-6213 6212 0
-6213 -6210 0
c Var 'aux1244' order represents '4' with '6214'
-6212 6214 0
c Var 'aux1244' direct represents '4' with '6215'
6212 -6214 6215 0
-6215 6214 0
-6215 -6212 0
c Var 'aux1244' order represents '5' with '6216'
-6214 6216 0
c Var 'aux1244' direct represents '5' with '6217'
6214 -6216 6217 0
-6217 6216 0
-6217 -6214 0
c Var 'aux1244' order represents '6' with '6218'
-6216 6218 0
c Var 'aux1244' direct represents '6' with '6219'
6216 -6218 6219 0
-6219 6218 0
-6219 -6216 0
c Var 'aux1244' order represents '7' with '6220'
-6218 6220 0
c Var 'aux1244' direct represents '7' with '6221'
6218 -6220 6221 0
-6221 6220 0
-6221 -6218 0
c Var 'aux1244' direct represents '8' with '-6220'
6207 6209 6211 6213 6215 6217 6219 6221 -6220 0
c Encoding variable: aux1245 with domain: int(0..8) (representing constraint (aux1234 + aux1224))
c Both direct and order encoding.
c Var 'aux1245' order represents '0' with '6222'
c Var 'aux1245' direct represents '0' with '6222'
c Var 'aux1245' order represents '1' with '6223'
-6222 6223 0
c Var 'aux1245' direct represents '1' with '6224'
6222 -6223 6224 0
-6224 6223 0
-6224 -6222 0
c Var 'aux1245' order represents '2' with '6225'
-6223 6225 0
c Var 'aux1245' direct represents '2' with '6226'
6223 -6225 6226 0
-6226 6225 0
-6226 -6223 0
c Var 'aux1245' order represents '3' with '6227'
-6225 6227 0
c Var 'aux1245' direct represents '3' with '6228'
6225 -6227 6228 0
-6228 6227 0
-6228 -6225 0
c Var 'aux1245' order represents '4' with '6229'
-6227 6229 0
c Var 'aux1245' direct represents '4' with '6230'
6227 -6229 6230 0
-6230 6229 0
-6230 -6227 0
c Var 'aux1245' order represents '5' with '6231'
-6229 6231 0
c Var 'aux1245' direct represents '5' with '6232'
6229 -6231 6232 0
-6232 6231 0
-6232 -6229 0
c Var 'aux1245' order represents '6' with '6233'
-6231 6233 0
c Var 'aux1245' direct represents '6' with '6234'
6231 -6233 6234 0
-6234 6233 0
-6234 -6231 0
c Var 'aux1245' order represents '7' with '6235'
-6233 6235 0
c Var 'aux1245' direct represents '7' with '6236'
6233 -6235 6236 0
-6236 6235 0
-6236 -6233 0
c Var 'aux1245' direct represents '8' with '-6235'
6222 6224 6226 6228 6230 6232 6234 6236 -6235 0
c Encoding variable: aux1246 with domain: int(0..16) (representing constraint (aux1241 + aux1245))
c Both direct and order encoding.
c Var 'aux1246' order represents '0' with '6237'
c Var 'aux1246' direct represents '0' with '6237'
c Var 'aux1246' order represents '1' with '6238'
-6237 6238 0
c Var 'aux1246' direct represents '1' with '6239'
6237 -6238 6239 0
-6239 6238 0
-6239 -6237 0
c Var 'aux1246' order represents '2' with '6240'
-6238 6240 0
c Var 'aux1246' direct represents '2' with '6241'
6238 -6240 6241 0
-6241 6240 0
-6241 -6238 0
c Var 'aux1246' order represents '3' with '6242'
-6240 6242 0
c Var 'aux1246' direct represents '3' with '6243'
6240 -6242 6243 0
-6243 6242 0
-6243 -6240 0
c Var 'aux1246' order represents '4' with '6244'
-6242 6244 0
c Var 'aux1246' direct represents '4' with '6245'
6242 -6244 6245 0
-6245 6244 0
-6245 -6242 0
c Var 'aux1246' order represents '5' with '6246'
-6244 6246 0
c Var 'aux1246' direct represents '5' with '6247'
6244 -6246 6247 0
-6247 6246 0
-6247 -6244 0
c Var 'aux1246' order represents '6' with '6248'
-6246 6248 0
c Var 'aux1246' direct represents '6' with '6249'
6246 -6248 6249 0
-6249 6248 0
-6249 -6246 0
c Var 'aux1246' order represents '7' with '6250'
-6248 6250 0
c Var 'aux1246' direct represents '7' with '6251'
6248 -6250 6251 0
-6251 6250 0
-6251 -6248 0
c Var 'aux1246' order represents '8' with '6252'
-6250 6252 0
c Var 'aux1246' direct represents '8' with '6253'
6250 -6252 6253 0
-6253 6252 0
-6253 -6250 0
c Var 'aux1246' order represents '9' with '6254'
-6252 6254 0
c Var 'aux1246' direct represents '9' with '6255'
6252 -6254 6255 0
-6255 6254 0
-6255 -6252 0
c Var 'aux1246' order represents '10' with '6256'
-6254 6256 0
c Var 'aux1246' direct represents '10' with '6257'
6254 -6256 6257 0
-6257 6256 0
-6257 -6254 0
c Var 'aux1246' order represents '11' with '6258'
-6256 6258 0
c Var 'aux1246' direct represents '11' with '6259'
6256 -6258 6259 0
-6259 6258 0
-6259 -6256 0
c Var 'aux1246' order represents '12' with '6260'
-6258 6260 0
c Var 'aux1246' direct represents '12' with '6261'
6258 -6260 6261 0
-6261 6260 0
-6261 -6258 0
c Var 'aux1246' order represents '13' with '6262'
-6260 6262 0
c Var 'aux1246' direct represents '13' with '6263'
6260 -6262 6263 0
-6263 6262 0
-6263 -6260 0
c Var 'aux1246' order represents '14' with '6264'
-6262 6264 0
c Var 'aux1246' direct represents '14' with '6265'
6262 -6264 6265 0
-6265 6264 0
-6265 -6262 0
c Var 'aux1246' order represents '15' with '6266'
-6264 6266 0
c Var 'aux1246' direct represents '15' with '6267'
6264 -6266 6267 0
-6267 6266 0
-6267 -6264 0
c Var 'aux1246' direct represents '16' with '-6266'
6237 6239 6241 6243 6245 6247 6249 6251 6253 6255 6257 6259 6261 6263 6265 6267 -6266 0
c Encoding variable: aux1247 with domain: int(0..16) (representing constraint (aux1239 + aux1238))
c Both direct and order encoding.
c Var 'aux1247' order represents '0' with '6268'
c Var 'aux1247' direct represents '0' with '6268'
c Var 'aux1247' order represents '1' with '6269'
-6268 6269 0
c Var 'aux1247' direct represents '1' with '6270'
6268 -6269 6270 0
-6270 6269 0
-6270 -6268 0
c Var 'aux1247' order represents '2' with '6271'
-6269 6271 0
c Var 'aux1247' direct represents '2' with '6272'
6269 -6271 6272 0
-6272 6271 0
-6272 -6269 0
c Var 'aux1247' order represents '3' with '6273'
-6271 6273 0
c Var 'aux1247' direct represents '3' with '6274'
6271 -6273 6274 0
-6274 6273 0
-6274 -6271 0
c Var 'aux1247' order represents '4' with '6275'
-6273 6275 0
c Var 'aux1247' direct represents '4' with '6276'
6273 -6275 6276 0
-6276 6275 0
-6276 -6273 0
c Var 'aux1247' order represents '5' with '6277'
-6275 6277 0
c Var 'aux1247' direct represents '5' with '6278'
6275 -6277 6278 0
-6278 6277 0
-6278 -6275 0
c Var 'aux1247' order represents '6' with '6279'
-6277 6279 0
c Var 'aux1247' direct represents '6' with '6280'
6277 -6279 6280 0
-6280 6279 0
-6280 -6277 0
c Var 'aux1247' order represents '7' with '6281'
-6279 6281 0
c Var 'aux1247' direct represents '7' with '6282'
6279 -6281 6282 0
-6282 6281 0
-6282 -6279 0
c Var 'aux1247' order represents '8' with '6283'
-6281 6283 0
c Var 'aux1247' direct represents '8' with '6284'
6281 -6283 6284 0
-6284 6283 0
-6284 -6281 0
c Var 'aux1247' order represents '9' with '6285'
-6283 6285 0
c Var 'aux1247' direct represents '9' with '6286'
6283 -6285 6286 0
-6286 6285 0
-6286 -6283 0
c Var 'aux1247' order represents '10' with '6287'
-6285 6287 0
c Var 'aux1247' direct represents '10' with '6288'
6285 -6287 6288 0
-6288 6287 0
-6288 -6285 0
c Var 'aux1247' order represents '11' with '6289'
-6287 6289 0
c Var 'aux1247' direct represents '11' with '6290'
6287 -6289 6290 0
-6290 6289 0
-6290 -6287 0
c Var 'aux1247' order represents '12' with '6291'
-6289 6291 0
c Var 'aux1247' direct represents '12' with '6292'
6289 -6291 6292 0
-6292 6291 0
-6292 -6289 0
c Var 'aux1247' order represents '13' with '6293'
-6291 6293 0
c Var 'aux1247' direct represents '13' with '6294'
6291 -6293 6294 0
-6294 6293 0
-6294 -6291 0
c Var 'aux1247' order represents '14' with '6295'
-6293 6295 0
c Var 'aux1247' direct represents '14' with '6296'
6293 -6295 6296 0
-6296 6295 0
-6296 -6293 0
c Var 'aux1247' order represents '15' with '6297'
-6295 6297 0
c Var 'aux1247' direct represents '15' with '6298'
6295 -6297 6298 0
-6298 6297 0
-6298 -6295 0
c Var 'aux1247' direct represents '16' with '-6297'
6268 6270 6272 6274 6276 6278 6280 6282 6284 6286 6288 6290 6292 6294 6296 6298 -6297 0
c Encoding variable: aux1248 with domain: int(0..16) (representing constraint (aux1240 + aux1242))
c Both direct and order encoding.
c Var 'aux1248' order represents '0' with '6299'
c Var 'aux1248' direct represents '0' with '6299'
c Var 'aux1248' order represents '1' with '6300'
-6299 6300 0
c Var 'aux1248' direct represents '1' with '6301'
6299 -6300 6301 0
-6301 6300 0
-6301 -6299 0
c Var 'aux1248' order represents '2' with '6302'
-6300 6302 0
c Var 'aux1248' direct represents '2' with '6303'
6300 -6302 6303 0
-6303 6302 0
-6303 -6300 0
c Var 'aux1248' order represents '3' with '6304'
-6302 6304 0
c Var 'aux1248' direct represents '3' with '6305'
6302 -6304 6305 0
-6305 6304 0
-6305 -6302 0
c Var 'aux1248' order represents '4' with '6306'
-6304 6306 0
c Var 'aux1248' direct represents '4' with '6307'
6304 -6306 6307 0
-6307 6306 0
-6307 -6304 0
c Var 'aux1248' order represents '5' with '6308'
-6306 6308 0
c Var 'aux1248' direct represents '5' with '6309'
6306 -6308 6309 0
-6309 6308 0
-6309 -6306 0
c Var 'aux1248' order represents '6' with '6310'
-6308 6310 0
c Var 'aux1248' direct represents '6' with '6311'
6308 -6310 6311 0
-6311 6310 0
-6311 -6308 0
c Var 'aux1248' order represents '7' with '6312'
-6310 6312 0
c Var 'aux1248' direct represents '7' with '6313'
6310 -6312 6313 0
-6313 6312 0
-6313 -6310 0
c Var 'aux1248' order represents '8' with '6314'
-6312 6314 0
c Var 'aux1248' direct represents '8' with '6315'
6312 -6314 6315 0
-6315 6314 0
-6315 -6312 0
c Var 'aux1248' order represents '9' with '6316'
-6314 6316 0
c Var 'aux1248' direct represents '9' with '6317'
6314 -6316 6317 0
-6317 6316 0
-6317 -6314 0
c Var 'aux1248' order represents '10' with '6318'
-6316 6318 0
c Var 'aux1248' direct represents '10' with '6319'
6316 -6318 6319 0
-6319 6318 0
-6319 -6316 0
c Var 'aux1248' order represents '11' with '6320'
-6318 6320 0
c Var 'aux1248' direct represents '11' with '6321'
6318 -6320 6321 0
-6321 6320 0
-6321 -6318 0
c Var 'aux1248' order represents '12' with '6322'
-6320 6322 0
c Var 'aux1248' direct represents '12' with '6323'
6320 -6322 6323 0
-6323 6322 0
-6323 -6320 0
c Var 'aux1248' order represents '13' with '6324'
-6322 6324 0
c Var 'aux1248' direct represents '13' with '6325'
6322 -6324 6325 0
-6325 6324 0
-6325 -6322 0
c Var 'aux1248' order represents '14' with '6326'
-6324 6326 0
c Var 'aux1248' direct represents '14' with '6327'
6324 -6326 6327 0
-6327 6326 0
-6327 -6324 0
c Var 'aux1248' order represents '15' with '6328'
-6326 6328 0
c Var 'aux1248' direct represents '15' with '6329'
6326 -6328 6329 0
-6329 6328 0
-6329 -6326 0
c Var 'aux1248' direct represents '16' with '-6328'
6299 6301 6303 6305 6307 6309 6311 6313 6315 6317 6319 6321 6323 6325 6327 6329 -6328 0
c Encoding variable: aux1249 with domain: int(0..16) (representing constraint (aux1243 + aux1244))
c Both direct and order encoding.
c Var 'aux1249' order represents '0' with '6330'
c Var 'aux1249' direct represents '0' with '6330'
c Var 'aux1249' order represents '1' with '6331'
-6330 6331 0
c Var 'aux1249' direct represents '1' with '6332'
6330 -6331 6332 0
-6332 6331 0
-6332 -6330 0
c Var 'aux1249' order represents '2' with '6333'
-6331 6333 0
c Var 'aux1249' direct represents '2' with '6334'
6331 -6333 6334 0
-6334 6333 0
-6334 -6331 0
c Var 'aux1249' order represents '3' with '6335'
-6333 6335 0
c Var 'aux1249' direct represents '3' with '6336'
6333 -6335 6336 0
-6336 6335 0
-6336 -6333 0
c Var 'aux1249' order represents '4' with '6337'
-6335 6337 0
c Var 'aux1249' direct represents '4' with '6338'
6335 -6337 6338 0
-6338 6337 0
-6338 -6335 0
c Var 'aux1249' order represents '5' with '6339'
-6337 6339 0
c Var 'aux1249' direct represents '5' with '6340'
6337 -6339 6340 0
-6340 6339 0
-6340 -6337 0
c Var 'aux1249' order represents '6' with '6341'
-6339 6341 0
c Var 'aux1249' direct represents '6' with '6342'
6339 -6341 6342 0
-6342 6341 0
-6342 -6339 0
c Var 'aux1249' order represents '7' with '6343'
-6341 6343 0
c Var 'aux1249' direct represents '7' with '6344'
6341 -6343 6344 0
-6344 6343 0
-6344 -6341 0
c Var 'aux1249' order represents '8' with '6345'
-6343 6345 0
c Var 'aux1249' direct represents '8' with '6346'
6343 -6345 6346 0
-6346 6345 0
-6346 -6343 0
c Var 'aux1249' order represents '9' with '6347'
-6345 6347 0
c Var 'aux1249' direct represents '9' with '6348'
6345 -6347 6348 0
-6348 6347 0
-6348 -6345 0
c Var 'aux1249' order represents '10' with '6349'
-6347 6349 0
c Var 'aux1249' direct represents '10' with '6350'
6347 -6349 6350 0
-6350 6349 0
-6350 -6347 0
c Var 'aux1249' order represents '11' with '6351'
-6349 6351 0
c Var 'aux1249' direct represents '11' with '6352'
6349 -6351 6352 0
-6352 6351 0
-6352 -6349 0
c Var 'aux1249' order represents '12' with '6353'
-6351 6353 0
c Var 'aux1249' direct represents '12' with '6354'
6351 -6353 6354 0
-6354 6353 0
-6354 -6351 0
c Var 'aux1249' order represents '13' with '6355'
-6353 6355 0
c Var 'aux1249' direct represents '13' with '6356'
6353 -6355 6356 0
-6356 6355 0
-6356 -6353 0
c Var 'aux1249' order represents '14' with '6357'
-6355 6357 0
c Var 'aux1249' direct represents '14' with '6358'
6355 -6357 6358 0
-6358 6357 0
-6358 -6355 0
c Var 'aux1249' order represents '15' with '6359'
-6357 6359 0
c Var 'aux1249' direct represents '15' with '6360'
6357 -6359 6360 0
-6360 6359 0
-6360 -6357 0
c Var 'aux1249' direct represents '16' with '-6359'
6330 6332 6334 6336 6338 6340 6342 6344 6346 6348 6350 6352 6354 6356 6358 6360 -6359 0
c Encoding variable: aux1250 with domain: int(0..32) (representing constraint (aux1247 + aux1249))
c Both direct and order encoding.
c Var 'aux1250' order represents '0' with '6361'
c Var 'aux1250' direct represents '0' with '6361'
c Var 'aux1250' order represents '1' with '6362'
-6361 6362 0
c Var 'aux1250' direct represents '1' with '6363'
6361 -6362 6363 0
-6363 6362 0
-6363 -6361 0
c Var 'aux1250' order represents '2' with '6364'
-6362 6364 0
c Var 'aux1250' direct represents '2' with '6365'
6362 -6364 6365 0
-6365 6364 0
-6365 -6362 0
c Var 'aux1250' order represents '3' with '6366'
-6364 6366 0
c Var 'aux1250' direct represents '3' with '6367'
6364 -6366 6367 0
-6367 6366 0
-6367 -6364 0
c Var 'aux1250' order represents '4' with '6368'
-6366 6368 0
c Var 'aux1250' direct represents '4' with '6369'
6366 -6368 6369 0
-6369 6368 0
-6369 -6366 0
c Var 'aux1250' order represents '5' with '6370'
-6368 6370 0
c Var 'aux1250' direct represents '5' with '6371'
6368 -6370 6371 0
-6371 6370 0
-6371 -6368 0
c Var 'aux1250' order represents '6' with '6372'
-6370 6372 0
c Var 'aux1250' direct represents '6' with '6373'
6370 -6372 6373 0
-6373 6372 0
-6373 -6370 0
c Var 'aux1250' order represents '7' with '6374'
-6372 6374 0
c Var 'aux1250' direct represents '7' with '6375'
6372 -6374 6375 0
-6375 6374 0
-6375 -6372 0
c Var 'aux1250' order represents '8' with '6376'
-6374 6376 0
c Var 'aux1250' direct represents '8' with '6377'
6374 -6376 6377 0
-6377 6376 0
-6377 -6374 0
c Var 'aux1250' order represents '9' with '6378'
-6376 6378 0
c Var 'aux1250' direct represents '9' with '6379'
6376 -6378 6379 0
-6379 6378 0
-6379 -6376 0
c Var 'aux1250' order represents '10' with '6380'
-6378 6380 0
c Var 'aux1250' direct represents '10' with '6381'
6378 -6380 6381 0
-6381 6380 0
-6381 -6378 0
c Var 'aux1250' order represents '11' with '6382'
-6380 6382 0
c Var 'aux1250' direct represents '11' with '6383'
6380 -6382 6383 0
-6383 6382 0
-6383 -6380 0
c Var 'aux1250' order represents '12' with '6384'
-6382 6384 0
c Var 'aux1250' direct represents '12' with '6385'
6382 -6384 6385 0
-6385 6384 0
-6385 -6382 0
c Var 'aux1250' order represents '13' with '6386'
-6384 6386 0
c Var 'aux1250' direct represents '13' with '6387'
6384 -6386 6387 0
-6387 6386 0
-6387 -6384 0
c Var 'aux1250' order represents '14' with '6388'
-6386 6388 0
c Var 'aux1250' direct represents '14' with '6389'
6386 -6388 6389 0
-6389 6388 0
-6389 -6386 0
c Var 'aux1250' order represents '15' with '6390'
-6388 6390 0
c Var 'aux1250' direct represents '15' with '6391'
6388 -6390 6391 0
-6391 6390 0
-6391 -6388 0
c Var 'aux1250' order represents '16' with '6392'
-6390 6392 0
c Var 'aux1250' direct represents '16' with '6393'
6390 -6392 6393 0
-6393 6392 0
-6393 -6390 0
c Var 'aux1250' order represents '17' with '6394'
-6392 6394 0
c Var 'aux1250' direct represents '17' with '6395'
6392 -6394 6395 0
-6395 6394 0
-6395 -6392 0
c Var 'aux1250' order represents '18' with '6396'
-6394 6396 0
c Var 'aux1250' direct represents '18' with '6397'
6394 -6396 6397 0
-6397 6396 0
-6397 -6394 0
c Var 'aux1250' order represents '19' with '6398'
-6396 6398 0
c Var 'aux1250' direct represents '19' with '6399'
6396 -6398 6399 0
-6399 6398 0
-6399 -6396 0
c Var 'aux1250' order represents '20' with '6400'
-6398 6400 0
c Var 'aux1250' direct represents '20' with '6401'
6398 -6400 6401 0
-6401 6400 0
-6401 -6398 0
c Var 'aux1250' order represents '21' with '6402'
-6400 6402 0
c Var 'aux1250' direct represents '21' with '6403'
6400 -6402 6403 0
-6403 6402 0
-6403 -6400 0
c Var 'aux1250' order represents '22' with '6404'
-6402 6404 0
c Var 'aux1250' direct represents '22' with '6405'
6402 -6404 6405 0
-6405 6404 0
-6405 -6402 0
c Var 'aux1250' order represents '23' with '6406'
-6404 6406 0
c Var 'aux1250' direct represents '23' with '6407'
6404 -6406 6407 0
-6407 6406 0
-6407 -6404 0
c Var 'aux1250' order represents '24' with '6408'
-6406 6408 0
c Var 'aux1250' direct represents '24' with '6409'
6406 -6408 6409 0
-6409 6408 0
-6409 -6406 0
c Var 'aux1250' order represents '25' with '6410'
-6408 6410 0
c Var 'aux1250' direct represents '25' with '6411'
6408 -6410 6411 0
-6411 6410 0
-6411 -6408 0
c Var 'aux1250' order represents '26' with '6412'
-6410 6412 0
c Var 'aux1250' direct represents '26' with '6413'
6410 -6412 6413 0
-6413 6412 0
-6413 -6410 0
c Var 'aux1250' order represents '27' with '6414'
-6412 6414 0
c Var 'aux1250' direct represents '27' with '6415'
6412 -6414 6415 0
-6415 6414 0
-6415 -6412 0
c Var 'aux1250' order represents '28' with '6416'
-6414 6416 0
c Var 'aux1250' direct represents '28' with '6417'
6414 -6416 6417 0
-6417 6416 0
-6417 -6414 0
c Var 'aux1250' order represents '29' with '6418'
-6416 6418 0
c Var 'aux1250' direct represents '29' with '6419'
6416 -6418 6419 0
-6419 6418 0
-6419 -6416 0
c Var 'aux1250' order represents '30' with '6420'
-6418 6420 0
c Var 'aux1250' direct represents '30' with '6421'
6418 -6420 6421 0
-6421 6420 0
-6421 -6418 0
c Var 'aux1250' order represents '31' with '6422'
-6420 6422 0
c Var 'aux1250' direct represents '31' with '6423'
6420 -6422 6423 0
-6423 6422 0
-6423 -6420 0
c Var 'aux1250' direct represents '32' with '-6422'
6361 6363 6365 6367 6369 6371 6373 6375 6377 6379 6381 6383 6385 6387 6389 6391 6393 6395 6397 6399 6401 6403 6405 6407 6409 6411 6413 6415 6417 6419 6421 6423 -6422 0
c Encoding variable: aux1251 with domain: int(0..32) (representing constraint (aux1246 + aux1248))
c Both direct and order encoding.
c Var 'aux1251' order represents '0' with '6424'
c Var 'aux1251' direct represents '0' with '6424'
c Var 'aux1251' order represents '1' with '6425'
-6424 6425 0
c Var 'aux1251' direct represents '1' with '6426'
6424 -6425 6426 0
-6426 6425 0
-6426 -6424 0
c Var 'aux1251' order represents '2' with '6427'
-6425 6427 0
c Var 'aux1251' direct represents '2' with '6428'
6425 -6427 6428 0
-6428 6427 0
-6428 -6425 0
c Var 'aux1251' order represents '3' with '6429'
-6427 6429 0
c Var 'aux1251' direct represents '3' with '6430'
6427 -6429 6430 0
-6430 6429 0
-6430 -6427 0
c Var 'aux1251' order represents '4' with '6431'
-6429 6431 0
c Var 'aux1251' direct represents '4' with '6432'
6429 -6431 6432 0
-6432 6431 0
-6432 -6429 0
c Var 'aux1251' order represents '5' with '6433'
-6431 6433 0
c Var 'aux1251' direct represents '5' with '6434'
6431 -6433 6434 0
-6434 6433 0
-6434 -6431 0
c Var 'aux1251' order represents '6' with '6435'
-6433 6435 0
c Var 'aux1251' direct represents '6' with '6436'
6433 -6435 6436 0
-6436 6435 0
-6436 -6433 0
c Var 'aux1251' order represents '7' with '6437'
-6435 6437 0
c Var 'aux1251' direct represents '7' with '6438'
6435 -6437 6438 0
-6438 6437 0
-6438 -6435 0
c Var 'aux1251' order represents '8' with '6439'
-6437 6439 0
c Var 'aux1251' direct represents '8' with '6440'
6437 -6439 6440 0
-6440 6439 0
-6440 -6437 0
c Var 'aux1251' order represents '9' with '6441'
-6439 6441 0
c Var 'aux1251' direct represents '9' with '6442'
6439 -6441 6442 0
-6442 6441 0
-6442 -6439 0
c Var 'aux1251' order represents '10' with '6443'
-6441 6443 0
c Var 'aux1251' direct represents '10' with '6444'
6441 -6443 6444 0
-6444 6443 0
-6444 -6441 0
c Var 'aux1251' order represents '11' with '6445'
-6443 6445 0
c Var 'aux1251' direct represents '11' with '6446'
6443 -6445 6446 0
-6446 6445 0
-6446 -6443 0
c Var 'aux1251' order represents '12' with '6447'
-6445 6447 0
c Var 'aux1251' direct represents '12' with '6448'
6445 -6447 6448 0
-6448 6447 0
-6448 -6445 0
c Var 'aux1251' order represents '13' with '6449'
-6447 6449 0
c Var 'aux1251' direct represents '13' with '6450'
6447 -6449 6450 0
-6450 6449 0
-6450 -6447 0
c Var 'aux1251' order represents '14' with '6451'
-6449 6451 0
c Var 'aux1251' direct represents '14' with '6452'
6449 -6451 6452 0
-6452 6451 0
-6452 -6449 0
c Var 'aux1251' order represents '15' with '6453'
-6451 6453 0
c Var 'aux1251' direct represents '15' with '6454'
6451 -6453 6454 0
-6454 6453 0
-6454 -6451 0
c Var 'aux1251' order represents '16' with '6455'
-6453 6455 0
c Var 'aux1251' direct represents '16' with '6456'
6453 -6455 6456 0
-6456 6455 0
-6456 -6453 0
c Var 'aux1251' order represents '17' with '6457'
-6455 6457 0
c Var 'aux1251' direct represents '17' with '6458'
6455 -6457 6458 0
-6458 6457 0
-6458 -6455 0
c Var 'aux1251' order represents '18' with '6459'
-6457 6459 0
c Var 'aux1251' direct represents '18' with '6460'
6457 -6459 6460 0
-6460 6459 0
-6460 -6457 0
c Var 'aux1251' order represents '19' with '6461'
-6459 6461 0
c Var 'aux1251' direct represents '19' with '6462'
6459 -6461 6462 0
-6462 6461 0
-6462 -6459 0
c Var 'aux1251' order represents '20' with '6463'
-6461 6463 0
c Var 'aux1251' direct represents '20' with '6464'
6461 -6463 6464 0
-6464 6463 0
-6464 -6461 0
c Var 'aux1251' order represents '21' with '6465'
-6463 6465 0
c Var 'aux1251' direct represents '21' with '6466'
6463 -6465 6466 0
-6466 6465 0
-6466 -6463 0
c Var 'aux1251' order represents '22' with '6467'
-6465 6467 0
c Var 'aux1251' direct represents '22' with '6468'
6465 -6467 6468 0
-6468 6467 0
-6468 -6465 0
c Var 'aux1251' order represents '23' with '6469'
-6467 6469 0
c Var 'aux1251' direct represents '23' with '6470'
6467 -6469 6470 0
-6470 6469 0
-6470 -6467 0
c Var 'aux1251' order represents '24' with '6471'
-6469 6471 0
c Var 'aux1251' direct represents '24' with '6472'
6469 -6471 6472 0
-6472 6471 0
-6472 -6469 0
c Var 'aux1251' order represents '25' with '6473'
-6471 6473 0
c Var 'aux1251' direct represents '25' with '6474'
6471 -6473 6474 0
-6474 6473 0
-6474 -6471 0
c Var 'aux1251' order represents '26' with '6475'
-6473 6475 0
c Var 'aux1251' direct represents '26' with '6476'
6473 -6475 6476 0
-6476 6475 0
-6476 -6473 0
c Var 'aux1251' order represents '27' with '6477'
-6475 6477 0
c Var 'aux1251' direct represents '27' with '6478'
6475 -6477 6478 0
-6478 6477 0
-6478 -6475 0
c Var 'aux1251' order represents '28' with '6479'
-6477 6479 0
c Var 'aux1251' direct represents '28' with '6480'
6477 -6479 6480 0
-6480 6479 0
-6480 -6477 0
c Var 'aux1251' order represents '29' with '6481'
-6479 6481 0
c Var 'aux1251' direct represents '29' with '6482'
6479 -6481 6482 0
-6482 6481 0
-6482 -6479 0
c Var 'aux1251' order represents '30' with '6483'
-6481 6483 0
c Var 'aux1251' direct represents '30' with '6484'
6481 -6483 6484 0
-6484 6483 0
-6484 -6481 0
c Var 'aux1251' order represents '31' with '6485'
-6483 6485 0
c Var 'aux1251' direct represents '31' with '6486'
6483 -6485 6486 0
-6486 6485 0
-6486 -6483 0
c Var 'aux1251' direct represents '32' with '-6485'
6424 6426 6428 6430 6432 6434 6436 6438 6440 6442 6444 6446 6448 6450 6452 6454 6456 6458 6460 6462 6464 6466 6468 6470 6472 6474 6476 6478 6480 6482 6484 6486 -6485 0
c Encoding variable: aux1252 with domain: int(0..2) (representing constraint ((agrid_00004_00001=1) + (agrid_00004_00002=1)))
c Both direct and order encoding.
c Var 'aux1252' order represents '0' with '6487'
c Var 'aux1252' direct represents '0' with '6487'
c Var 'aux1252' order represents '1' with '6488'
-6487 6488 0
c Var 'aux1252' direct represents '1' with '6489'
6487 -6488 6489 0
-6489 6488 0
-6489 -6487 0
c Var 'aux1252' direct represents '2' with '-6488'
6487 6489 -6488 0
c Encoding variable: aux1253 with domain: int(0..2) (representing constraint ((agrid_00004_00004=1) + (agrid_00004_00008=1)))
c Both direct and order encoding.
c Var 'aux1253' order represents '0' with '6490'
c Var 'aux1253' direct represents '0' with '6490'
c Var 'aux1253' order represents '1' with '6491'
-6490 6491 0
c Var 'aux1253' direct represents '1' with '6492'
6490 -6491 6492 0
-6492 6491 0
-6492 -6490 0
c Var 'aux1253' direct represents '2' with '-6491'
6490 6492 -6491 0
c Encoding variable: aux1254 with domain: int(0..2) (representing constraint ((agrid_00006_00007=1) + (agrid_00002_00008=1)))
c Both direct and order encoding.
c Var 'aux1254' order represents '0' with '6493'
c Var 'aux1254' direct represents '0' with '6493'
c Var 'aux1254' order represents '1' with '6494'
-6493 6494 0
c Var 'aux1254' direct represents '1' with '6495'
6493 -6494 6495 0
-6495 6494 0
-6495 -6493 0
c Var 'aux1254' direct represents '2' with '-6494'
6493 6495 -6494 0
c Encoding variable: aux1255 with domain: int(0..2) (representing constraint ((agrid_00006_00006=1) + (agrid_00005_00008=1)))
c Both direct and order encoding.
c Var 'aux1255' order represents '0' with '6496'
c Var 'aux1255' direct represents '0' with '6496'
c Var 'aux1255' order represents '1' with '6497'
-6496 6497 0
c Var 'aux1255' direct represents '1' with '6498'
6496 -6497 6498 0
-6498 6497 0
-6498 -6496 0
c Var 'aux1255' direct represents '2' with '-6497'
6496 6498 -6497 0
c Encoding variable: aux1256 with domain: int(0..2) (representing constraint ((agrid_00006_00005=1) + (agrid_00006_00008=1)))
c Both direct and order encoding.
c Var 'aux1256' order represents '0' with '6499'
c Var 'aux1256' direct represents '0' with '6499'
c Var 'aux1256' order represents '1' with '6500'
-6499 6500 0
c Var 'aux1256' direct represents '1' with '6501'
6499 -6500 6501 0
-6501 6500 0
-6501 -6499 0
c Var 'aux1256' direct represents '2' with '-6500'
6499 6501 -6500 0
c Encoding variable: aux1257 with domain: int(0..2) (representing constraint ((agrid_00006_00004=1) + (agrid_00003_00001=1)))
c Both direct and order encoding.
c Var 'aux1257' order represents '0' with '6502'
c Var 'aux1257' direct represents '0' with '6502'
c Var 'aux1257' order represents '1' with '6503'
-6502 6503 0
c Var 'aux1257' direct represents '1' with '6504'
6502 -6503 6504 0
-6504 6503 0
-6504 -6502 0
c Var 'aux1257' direct represents '2' with '-6503'
6502 6504 -6503 0
c Encoding variable: aux1258 with domain: int(0..2) (representing constraint ((agrid_00006_00003=1) + (agrid_00007_00001=1)))
c Both direct and order encoding.
c Var 'aux1258' order represents '0' with '6505'
c Var 'aux1258' direct represents '0' with '6505'
c Var 'aux1258' order represents '1' with '6506'
-6505 6506 0
c Var 'aux1258' direct represents '1' with '6507'
6505 -6506 6507 0
-6507 6506 0
-6507 -6505 0
c Var 'aux1258' direct represents '2' with '-6506'
6505 6507 -6506 0
c Encoding variable: aux1259 with domain: int(0..2) (representing constraint ((agrid_00006_00002=1) + (agrid_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux1259' order represents '0' with '6508'
c Var 'aux1259' direct represents '0' with '6508'
c Var 'aux1259' order represents '1' with '6509'
-6508 6509 0
c Var 'aux1259' direct represents '1' with '6510'
6508 -6509 6510 0
-6510 6509 0
-6510 -6508 0
c Var 'aux1259' direct represents '2' with '-6509'
6508 6510 -6509 0
c Encoding variable: aux1260 with domain: int(0..2) (representing constraint ((agrid_00006_00001=1) + (agrid_00003_00003=1)))
c Both direct and order encoding.
c Var 'aux1260' order represents '0' with '6511'
c Var 'aux1260' direct represents '0' with '6511'
c Var 'aux1260' order represents '1' with '6512'
-6511 6512 0
c Var 'aux1260' direct represents '1' with '6513'
6511 -6512 6513 0
-6513 6512 0
-6513 -6511 0
c Var 'aux1260' direct represents '2' with '-6512'
6511 6513 -6512 0
c Encoding variable: aux1261 with domain: int(0..2) (representing constraint ((agrid_00001_00008=1) + (agrid_00002_00001=1)))
c Both direct and order encoding.
c Var 'aux1261' order represents '0' with '6514'
c Var 'aux1261' direct represents '0' with '6514'
c Var 'aux1261' order represents '1' with '6515'
-6514 6515 0
c Var 'aux1261' direct represents '1' with '6516'
6514 -6515 6516 0
-6516 6515 0
-6516 -6514 0
c Var 'aux1261' direct represents '2' with '-6515'
6514 6516 -6515 0
c Encoding variable: aux1262 with domain: int(0..2) (representing constraint ((agrid_00001_00007=1) + (agrid_00007_00002=1)))
c Both direct and order encoding.
c Var 'aux1262' order represents '0' with '6517'
c Var 'aux1262' direct represents '0' with '6517'
c Var 'aux1262' order represents '1' with '6518'
-6517 6518 0
c Var 'aux1262' direct represents '1' with '6519'
6517 -6518 6519 0
-6519 6518 0
-6519 -6517 0
c Var 'aux1262' direct represents '2' with '-6518'
6517 6519 -6518 0
c Encoding variable: aux1263 with domain: int(0..2) (representing constraint ((agrid_00001_00006=1) + (agrid_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux1263' order represents '0' with '6520'
c Var 'aux1263' direct represents '0' with '6520'
c Var 'aux1263' order represents '1' with '6521'
-6520 6521 0
c Var 'aux1263' direct represents '1' with '6522'
6520 -6521 6522 0
-6522 6521 0
-6522 -6520 0
c Var 'aux1263' direct represents '2' with '-6521'
6520 6522 -6521 0
c Encoding variable: aux1264 with domain: int(0..2) (representing constraint ((agrid_00001_00005=1) + (agrid_00003_00005=1)))
c Both direct and order encoding.
c Var 'aux1264' order represents '0' with '6523'
c Var 'aux1264' direct represents '0' with '6523'
c Var 'aux1264' order represents '1' with '6524'
-6523 6524 0
c Var 'aux1264' direct represents '1' with '6525'
6523 -6524 6525 0
-6525 6524 0
-6525 -6523 0
c Var 'aux1264' direct represents '2' with '-6524'
6523 6525 -6524 0
c Encoding variable: aux1265 with domain: int(0..2) (representing constraint ((agrid_00001_00004=1) + (agrid_00007_00003=1)))
c Both direct and order encoding.
c Var 'aux1265' order represents '0' with '6526'
c Var 'aux1265' direct represents '0' with '6526'
c Var 'aux1265' order represents '1' with '6527'
-6526 6527 0
c Var 'aux1265' direct represents '1' with '6528'
6526 -6527 6528 0
-6528 6527 0
-6528 -6526 0
c Var 'aux1265' direct represents '2' with '-6527'
6526 6528 -6527 0
c Encoding variable: aux1266 with domain: int(0..2) (representing constraint ((agrid_00001_00003=1) + (agrid_00003_00006=1)))
c Both direct and order encoding.
c Var 'aux1266' order represents '0' with '6529'
c Var 'aux1266' direct represents '0' with '6529'
c Var 'aux1266' order represents '1' with '6530'
-6529 6530 0
c Var 'aux1266' direct represents '1' with '6531'
6529 -6530 6531 0
-6531 6530 0
-6531 -6529 0
c Var 'aux1266' direct represents '2' with '-6530'
6529 6531 -6530 0
c Encoding variable: aux1267 with domain: int(0..2) (representing constraint ((agrid_00001_00002=1) + (agrid_00003_00007=1)))
c Both direct and order encoding.
c Var 'aux1267' order represents '0' with '6532'
c Var 'aux1267' direct represents '0' with '6532'
c Var 'aux1267' order represents '1' with '6533'
-6532 6533 0
c Var 'aux1267' direct represents '1' with '6534'
6532 -6533 6534 0
-6534 6533 0
-6534 -6532 0
c Var 'aux1267' direct represents '2' with '-6533'
6532 6534 -6533 0
c Encoding variable: aux1268 with domain: int(0..2) (representing constraint ((agrid_00001_00001=1) + (agrid_00004_00005=1)))
c Both direct and order encoding.
c Var 'aux1268' order represents '0' with '6535'
c Var 'aux1268' direct represents '0' with '6535'
c Var 'aux1268' order represents '1' with '6536'
-6535 6536 0
c Var 'aux1268' direct represents '1' with '6537'
6535 -6536 6537 0
-6537 6536 0
-6537 -6535 0
c Var 'aux1268' direct represents '2' with '-6536'
6535 6537 -6536 0
c Encoding variable: aux1269 with domain: int(0..2) (representing constraint ((agrid_00008_00008=1) + (agrid_00002_00002=1)))
c Both direct and order encoding.
c Var 'aux1269' order represents '0' with '6538'
c Var 'aux1269' direct represents '0' with '6538'
c Var 'aux1269' order represents '1' with '6539'
-6538 6539 0
c Var 'aux1269' direct represents '1' with '6540'
6538 -6539 6540 0
-6540 6539 0
-6540 -6538 0
c Var 'aux1269' direct represents '2' with '-6539'
6538 6540 -6539 0
c Encoding variable: aux1270 with domain: int(0..2) (representing constraint ((agrid_00008_00007=1) + (agrid_00007_00004=1)))
c Both direct and order encoding.
c Var 'aux1270' order represents '0' with '6541'
c Var 'aux1270' direct represents '0' with '6541'
c Var 'aux1270' order represents '1' with '6542'
-6541 6542 0
c Var 'aux1270' direct represents '1' with '6543'
6541 -6542 6543 0
-6543 6542 0
-6543 -6541 0
c Var 'aux1270' direct represents '2' with '-6542'
6541 6543 -6542 0
c Encoding variable: aux1271 with domain: int(0..2) (representing constraint ((agrid_00008_00006=1) + (agrid_00003_00008=1)))
c Both direct and order encoding.
c Var 'aux1271' order represents '0' with '6544'
c Var 'aux1271' direct represents '0' with '6544'
c Var 'aux1271' order represents '1' with '6545'
-6544 6545 0
c Var 'aux1271' direct represents '1' with '6546'
6544 -6545 6546 0
-6546 6545 0
-6546 -6544 0
c Var 'aux1271' direct represents '2' with '-6545'
6544 6546 -6545 0
c Encoding variable: aux1272 with domain: int(0..2) (representing constraint ((agrid_00008_00005=1) + (agrid_00008_00001=1)))
c Both direct and order encoding.
c Var 'aux1272' order represents '0' with '6547'
c Var 'aux1272' direct represents '0' with '6547'
c Var 'aux1272' order represents '1' with '6548'
-6547 6548 0
c Var 'aux1272' direct represents '1' with '6549'
6547 -6548 6549 0
-6549 6548 0
-6549 -6547 0
c Var 'aux1272' direct represents '2' with '-6548'
6547 6549 -6548 0
c Encoding variable: aux1273 with domain: int(0..2) (representing constraint ((agrid_00008_00004=1) + (agrid_00007_00005=1)))
c Both direct and order encoding.
c Var 'aux1273' order represents '0' with '6550'
c Var 'aux1273' direct represents '0' with '6550'
c Var 'aux1273' order represents '1' with '6551'
-6550 6551 0
c Var 'aux1273' direct represents '1' with '6552'
6550 -6551 6552 0
-6552 6551 0
-6552 -6550 0
c Var 'aux1273' direct represents '2' with '-6551'
6550 6552 -6551 0
c Encoding variable: aux1274 with domain: int(0..2) (representing constraint ((agrid_00008_00002=1) + (agrid_00008_00003=1)))
c Both direct and order encoding.
c Var 'aux1274' order represents '0' with '6553'
c Var 'aux1274' direct represents '0' with '6553'
c Var 'aux1274' order represents '1' with '6554'
-6553 6554 0
c Var 'aux1274' direct represents '1' with '6555'
6553 -6554 6555 0
-6555 6554 0
-6555 -6553 0
c Var 'aux1274' direct represents '2' with '-6554'
6553 6555 -6554 0
c Encoding variable: aux1275 with domain: int(0..2) (representing constraint ((agrid_00002_00003=1) + (agrid_00007_00006=1)))
c Both direct and order encoding.
c Var 'aux1275' order represents '0' with '6556'
c Var 'aux1275' direct represents '0' with '6556'
c Var 'aux1275' order represents '1' with '6557'
-6556 6557 0
c Var 'aux1275' direct represents '1' with '6558'
6556 -6557 6558 0
-6558 6557 0
-6558 -6556 0
c Var 'aux1275' direct represents '2' with '-6557'
6556 6558 -6557 0
c Encoding variable: aux1276 with domain: int(0..2) (representing constraint ((agrid_00007_00007=1) + (agrid_00004_00003=1)))
c Both direct and order encoding.
c Var 'aux1276' order represents '0' with '6559'
c Var 'aux1276' direct represents '0' with '6559'
c Var 'aux1276' order represents '1' with '6560'
-6559 6560 0
c Var 'aux1276' direct represents '1' with '6561'
6559 -6560 6561 0
-6561 6560 0
-6561 -6559 0
c Var 'aux1276' direct represents '2' with '-6560'
6559 6561 -6560 0
c Encoding variable: aux1277 with domain: int(0..2) (representing constraint ((agrid_00004_00006=1) + (agrid_00002_00004=1)))
c Both direct and order encoding.
c Var 'aux1277' order represents '0' with '6562'
c Var 'aux1277' direct represents '0' with '6562'
c Var 'aux1277' order represents '1' with '6563'
-6562 6563 0
c Var 'aux1277' direct represents '1' with '6564'
6562 -6563 6564 0
-6564 6563 0
-6564 -6562 0
c Var 'aux1277' direct represents '2' with '-6563'
6562 6564 -6563 0
c Encoding variable: aux1278 with domain: int(0..2) (representing constraint ((agrid_00007_00008=1) + (agrid_00005_00001=1)))
c Both direct and order encoding.
c Var 'aux1278' order represents '0' with '6565'
c Var 'aux1278' direct represents '0' with '6565'
c Var 'aux1278' order represents '1' with '6566'
-6565 6566 0
c Var 'aux1278' direct represents '1' with '6567'
6565 -6566 6567 0
-6567 6566 0
-6567 -6565 0
c Var 'aux1278' direct represents '2' with '-6566'
6565 6567 -6566 0
c Encoding variable: aux1279 with domain: int(0..2) (representing constraint ((agrid_00002_00005=1) + (agrid_00005_00002=1)))
c Both direct and order encoding.
c Var 'aux1279' order represents '0' with '6568'
c Var 'aux1279' direct represents '0' with '6568'
c Var 'aux1279' order represents '1' with '6569'
-6568 6569 0
c Var 'aux1279' direct represents '1' with '6570'
6568 -6569 6570 0
-6570 6569 0
-6570 -6568 0
c Var 'aux1279' direct represents '2' with '-6569'
6568 6570 -6569 0
c Encoding variable: aux1280 with domain: int(0..2) (representing constraint ((agrid_00005_00003=1) + (agrid_00004_00007=1)))
c Both direct and order encoding.
c Var 'aux1280' order represents '0' with '6571'
c Var 'aux1280' direct represents '0' with '6571'
c Var 'aux1280' order represents '1' with '6572'
-6571 6572 0
c Var 'aux1280' direct represents '1' with '6573'
6571 -6572 6573 0
-6573 6572 0
-6573 -6571 0
c Var 'aux1280' direct represents '2' with '-6572'
6571 6573 -6572 0
c Encoding variable: aux1281 with domain: int(0..2) (representing constraint ((agrid_00002_00006=1) + (agrid_00005_00004=1)))
c Both direct and order encoding.
c Var 'aux1281' order represents '0' with '6574'
c Var 'aux1281' direct represents '0' with '6574'
c Var 'aux1281' order represents '1' with '6575'
-6574 6575 0
c Var 'aux1281' direct represents '1' with '6576'
6574 -6575 6576 0
-6576 6575 0
-6576 -6574 0
c Var 'aux1281' direct represents '2' with '-6575'
6574 6576 -6575 0
c Encoding variable: aux1282 with domain: int(0..2) (representing constraint ((agrid_00005_00005=1) + (agrid_00002_00007=1)))
c Both direct and order encoding.
c Var 'aux1282' order represents '0' with '6577'
c Var 'aux1282' direct represents '0' with '6577'
c Var 'aux1282' order represents '1' with '6578'
-6577 6578 0
c Var 'aux1282' direct represents '1' with '6579'
6577 -6578 6579 0
-6579 6578 0
-6579 -6577 0
c Var 'aux1282' direct represents '2' with '-6578'
6577 6579 -6578 0
c Encoding variable: aux1283 with domain: int(0..2) (representing constraint ((agrid_00005_00006=1) + (agrid_00005_00007=1)))
c Both direct and order encoding.
c Var 'aux1283' order represents '0' with '6580'
c Var 'aux1283' direct represents '0' with '6580'
c Var 'aux1283' order represents '1' with '6581'
-6580 6581 0
c Var 'aux1283' direct represents '1' with '6582'
6580 -6581 6582 0
-6582 6581 0
-6582 -6580 0
c Var 'aux1283' direct represents '2' with '-6581'
6580 6582 -6581 0
c Encoding variable: aux1284 with domain: int(0..4) (representing constraint (aux1267 + aux1283))
c Both direct and order encoding.
c Var 'aux1284' order represents '0' with '6583'
c Var 'aux1284' direct represents '0' with '6583'
c Var 'aux1284' order represents '1' with '6584'
-6583 6584 0
c Var 'aux1284' direct represents '1' with '6585'
6583 -6584 6585 0
-6585 6584 0
-6585 -6583 0
c Var 'aux1284' order represents '2' with '6586'
-6584 6586 0
c Var 'aux1284' direct represents '2' with '6587'
6584 -6586 6587 0
-6587 6586 0
-6587 -6584 0
c Var 'aux1284' order represents '3' with '6588'
-6586 6588 0
c Var 'aux1284' direct represents '3' with '6589'
6586 -6588 6589 0
-6589 6588 0
-6589 -6586 0
c Var 'aux1284' direct represents '4' with '-6588'
6583 6585 6587 6589 -6588 0
c Encoding variable: aux1285 with domain: int(0..4) (representing constraint (aux1265 + aux1257))
c Both direct and order encoding.
c Var 'aux1285' order represents '0' with '6590'
c Var 'aux1285' direct represents '0' with '6590'
c Var 'aux1285' order represents '1' with '6591'
-6590 6591 0
c Var 'aux1285' direct represents '1' with '6592'
6590 -6591 6592 0
-6592 6591 0
-6592 -6590 0
c Var 'aux1285' order represents '2' with '6593'
-6591 6593 0
c Var 'aux1285' direct represents '2' with '6594'
6591 -6593 6594 0
-6594 6593 0
-6594 -6591 0
c Var 'aux1285' order represents '3' with '6595'
-6593 6595 0
c Var 'aux1285' direct represents '3' with '6596'
6593 -6595 6596 0
-6596 6595 0
-6596 -6593 0
c Var 'aux1285' direct represents '4' with '-6595'
6590 6592 6594 6596 -6595 0
c Encoding variable: aux1286 with domain: int(0..4) (representing constraint (aux1255 + aux1253))
c Both direct and order encoding.
c Var 'aux1286' order represents '0' with '6597'
c Var 'aux1286' direct represents '0' with '6597'
c Var 'aux1286' order represents '1' with '6598'
-6597 6598 0
c Var 'aux1286' direct represents '1' with '6599'
6597 -6598 6599 0
-6599 6598 0
-6599 -6597 0
c Var 'aux1286' order represents '2' with '6600'
-6598 6600 0
c Var 'aux1286' direct represents '2' with '6601'
6598 -6600 6601 0
-6601 6600 0
-6601 -6598 0
c Var 'aux1286' order represents '3' with '6602'
-6600 6602 0
c Var 'aux1286' direct represents '3' with '6603'
6600 -6602 6603 0
-6603 6602 0
-6603 -6600 0
c Var 'aux1286' direct represents '4' with '-6602'
6597 6599 6601 6603 -6602 0
c Encoding variable: aux1287 with domain: int(0..4) (representing constraint (aux1280 + aux1252))
c Both direct and order encoding.
c Var 'aux1287' order represents '0' with '6604'
c Var 'aux1287' direct represents '0' with '6604'
c Var 'aux1287' order represents '1' with '6605'
-6604 6605 0
c Var 'aux1287' direct represents '1' with '6606'
6604 -6605 6606 0
-6606 6605 0
-6606 -6604 0
c Var 'aux1287' order represents '2' with '6607'
-6605 6607 0
c Var 'aux1287' direct represents '2' with '6608'
6605 -6607 6608 0
-6608 6607 0
-6608 -6605 0
c Var 'aux1287' order represents '3' with '6609'
-6607 6609 0
c Var 'aux1287' direct represents '3' with '6610'
6607 -6609 6610 0
-6610 6609 0
-6610 -6607 0
c Var 'aux1287' direct represents '4' with '-6609'
6604 6606 6608 6610 -6609 0
c Encoding variable: aux1288 with domain: int(0..4) (representing constraint (aux1279 + aux1256))
c Both direct and order encoding.
c Var 'aux1288' order represents '0' with '6611'
c Var 'aux1288' direct represents '0' with '6611'
c Var 'aux1288' order represents '1' with '6612'
-6611 6612 0
c Var 'aux1288' direct represents '1' with '6613'
6611 -6612 6613 0
-6613 6612 0
-6613 -6611 0
c Var 'aux1288' order represents '2' with '6614'
-6612 6614 0
c Var 'aux1288' direct represents '2' with '6615'
6612 -6614 6615 0
-6615 6614 0
-6615 -6612 0
c Var 'aux1288' order represents '3' with '6616'
-6614 6616 0
c Var 'aux1288' direct represents '3' with '6617'
6614 -6616 6617 0
-6617 6616 0
-6617 -6614 0
c Var 'aux1288' direct represents '4' with '-6616'
6611 6613 6615 6617 -6616 0
c Encoding variable: aux1289 with domain: int(0..4) (representing constraint (aux1259 + aux1264))
c Both direct and order encoding.
c Var 'aux1289' order represents '0' with '6618'
c Var 'aux1289' direct represents '0' with '6618'
c Var 'aux1289' order represents '1' with '6619'
-6618 6619 0
c Var 'aux1289' direct represents '1' with '6620'
6618 -6619 6620 0
-6620 6619 0
-6620 -6618 0
c Var 'aux1289' order represents '2' with '6621'
-6619 6621 0
c Var 'aux1289' direct represents '2' with '6622'
6619 -6621 6622 0
-6622 6621 0
-6622 -6619 0
c Var 'aux1289' order represents '3' with '6623'
-6621 6623 0
c Var 'aux1289' direct represents '3' with '6624'
6621 -6623 6624 0
-6624 6623 0
-6624 -6621 0
c Var 'aux1289' direct represents '4' with '-6623'
6618 6620 6622 6624 -6623 0
c Encoding variable: aux1290 with domain: int(0..4) (representing constraint (aux1277 + aux1260))
c Both direct and order encoding.
c Var 'aux1290' order represents '0' with '6625'
c Var 'aux1290' direct represents '0' with '6625'
c Var 'aux1290' order represents '1' with '6626'
-6625 6626 0
c Var 'aux1290' direct represents '1' with '6627'
6625 -6626 6627 0
-6627 6626 0
-6627 -6625 0
c Var 'aux1290' order represents '2' with '6628'
-6626 6628 0
c Var 'aux1290' direct represents '2' with '6629'
6626 -6628 6629 0
-6629 6628 0
-6629 -6626 0
c Var 'aux1290' order represents '3' with '6630'
-6628 6630 0
c Var 'aux1290' direct represents '3' with '6631'
6628 -6630 6631 0
-6631 6630 0
-6631 -6628 0
c Var 'aux1290' direct represents '4' with '-6630'
6625 6627 6629 6631 -6630 0
c Encoding variable: aux1291 with domain: int(0..4) (representing constraint (aux1262 + aux1263))
c Both direct and order encoding.
c Var 'aux1291' order represents '0' with '6632'
c Var 'aux1291' direct represents '0' with '6632'
c Var 'aux1291' order represents '1' with '6633'
-6632 6633 0
c Var 'aux1291' direct represents '1' with '6634'
6632 -6633 6634 0
-6634 6633 0
-6634 -6632 0
c Var 'aux1291' order represents '2' with '6635'
-6633 6635 0
c Var 'aux1291' direct represents '2' with '6636'
6633 -6635 6636 0
-6636 6635 0
-6636 -6633 0
c Var 'aux1291' order represents '3' with '6637'
-6635 6637 0
c Var 'aux1291' direct represents '3' with '6638'
6635 -6637 6638 0
-6638 6637 0
-6638 -6635 0
c Var 'aux1291' direct represents '4' with '-6637'
6632 6634 6636 6638 -6637 0
c Encoding variable: aux1292 with domain: int(0..4) (representing constraint (aux1266 + aux1274))
c Both direct and order encoding.
c Var 'aux1292' order represents '0' with '6639'
c Var 'aux1292' direct represents '0' with '6639'
c Var 'aux1292' order represents '1' with '6640'
-6639 6640 0
c Var 'aux1292' direct represents '1' with '6641'
6639 -6640 6641 0
-6641 6640 0
-6641 -6639 0
c Var 'aux1292' order represents '2' with '6642'
-6640 6642 0
c Var 'aux1292' direct represents '2' with '6643'
6640 -6642 6643 0
-6643 6642 0
-6643 -6640 0
c Var 'aux1292' order represents '3' with '6644'
-6642 6644 0
c Var 'aux1292' direct represents '3' with '6645'
6642 -6644 6645 0
-6645 6644 0
-6645 -6642 0
c Var 'aux1292' direct represents '4' with '-6644'
6639 6641 6643 6645 -6644 0
c Encoding variable: aux1293 with domain: int(0..4) (representing constraint (aux1275 + aux1272))
c Both direct and order encoding.
c Var 'aux1293' order represents '0' with '6646'
c Var 'aux1293' direct represents '0' with '6646'
c Var 'aux1293' order represents '1' with '6647'
-6646 6647 0
c Var 'aux1293' direct represents '1' with '6648'
6646 -6647 6648 0
-6648 6647 0
-6648 -6646 0
c Var 'aux1293' order represents '2' with '6649'
-6647 6649 0
c Var 'aux1293' direct represents '2' with '6650'
6647 -6649 6650 0
-6650 6649 0
-6650 -6647 0
c Var 'aux1293' order represents '3' with '6651'
-6649 6651 0
c Var 'aux1293' direct represents '3' with '6652'
6649 -6651 6652 0
-6652 6651 0
-6652 -6649 0
c Var 'aux1293' direct represents '4' with '-6651'
6646 6648 6650 6652 -6651 0
c Encoding variable: aux1294 with domain: int(0..4) (representing constraint (aux1273 + aux1268))
c Both direct and order encoding.
c Var 'aux1294' order represents '0' with '6653'
c Var 'aux1294' direct represents '0' with '6653'
c Var 'aux1294' order represents '1' with '6654'
-6653 6654 0
c Var 'aux1294' direct represents '1' with '6655'
6653 -6654 6655 0
-6655 6654 0
-6655 -6653 0
c Var 'aux1294' order represents '2' with '6656'
-6654 6656 0
c Var 'aux1294' direct represents '2' with '6657'
6654 -6656 6657 0
-6657 6656 0
-6657 -6654 0
c Var 'aux1294' order represents '3' with '6658'
-6656 6658 0
c Var 'aux1294' direct represents '3' with '6659'
6656 -6658 6659 0
-6659 6658 0
-6659 -6656 0
c Var 'aux1294' direct represents '4' with '-6658'
6653 6655 6657 6659 -6658 0
c Encoding variable: aux1295 with domain: int(0..4) (representing constraint (aux1271 + aux1269))
c Both direct and order encoding.
c Var 'aux1295' order represents '0' with '6660'
c Var 'aux1295' direct represents '0' with '6660'
c Var 'aux1295' order represents '1' with '6661'
-6660 6661 0
c Var 'aux1295' direct represents '1' with '6662'
6660 -6661 6662 0
-6662 6661 0
-6662 -6660 0
c Var 'aux1295' order represents '2' with '6663'
-6661 6663 0
c Var 'aux1295' direct represents '2' with '6664'
6661 -6663 6664 0
-6664 6663 0
-6664 -6661 0
c Var 'aux1295' order represents '3' with '6665'
-6663 6665 0
c Var 'aux1295' direct represents '3' with '6666'
6663 -6665 6666 0
-6666 6665 0
-6666 -6663 0
c Var 'aux1295' direct represents '4' with '-6665'
6660 6662 6664 6666 -6665 0
c Encoding variable: aux1296 with domain: int(0..4) (representing constraint (aux1270 + aux1282))
c Both direct and order encoding.
c Var 'aux1296' order represents '0' with '6667'
c Var 'aux1296' direct represents '0' with '6667'
c Var 'aux1296' order represents '1' with '6668'
-6667 6668 0
c Var 'aux1296' direct represents '1' with '6669'
6667 -6668 6669 0
-6669 6668 0
-6669 -6667 0
c Var 'aux1296' order represents '2' with '6670'
-6668 6670 0
c Var 'aux1296' direct represents '2' with '6671'
6668 -6670 6671 0
-6671 6670 0
-6671 -6668 0
c Var 'aux1296' order represents '3' with '6672'
-6670 6672 0
c Var 'aux1296' direct represents '3' with '6673'
6670 -6672 6673 0
-6673 6672 0
-6673 -6670 0
c Var 'aux1296' direct represents '4' with '-6672'
6667 6669 6671 6673 -6672 0
c Encoding variable: aux1297 with domain: int(0..4) (representing constraint (aux1278 + aux1276))
c Both direct and order encoding.
c Var 'aux1297' order represents '0' with '6674'
c Var 'aux1297' direct represents '0' with '6674'
c Var 'aux1297' order represents '1' with '6675'
-6674 6675 0
c Var 'aux1297' direct represents '1' with '6676'
6674 -6675 6676 0
-6676 6675 0
-6676 -6674 0
c Var 'aux1297' order represents '2' with '6677'
-6675 6677 0
c Var 'aux1297' direct represents '2' with '6678'
6675 -6677 6678 0
-6678 6677 0
-6678 -6675 0
c Var 'aux1297' order represents '3' with '6679'
-6677 6679 0
c Var 'aux1297' direct represents '3' with '6680'
6677 -6679 6680 0
-6680 6679 0
-6680 -6677 0
c Var 'aux1297' direct represents '4' with '-6679'
6674 6676 6678 6680 -6679 0
c Encoding variable: aux1298 with domain: int(0..4) (representing constraint (aux1261 + aux1254))
c Both direct and order encoding.
c Var 'aux1298' order represents '0' with '6681'
c Var 'aux1298' direct represents '0' with '6681'
c Var 'aux1298' order represents '1' with '6682'
-6681 6682 0
c Var 'aux1298' direct represents '1' with '6683'
6681 -6682 6683 0
-6683 6682 0
-6683 -6681 0
c Var 'aux1298' order represents '2' with '6684'
-6682 6684 0
c Var 'aux1298' direct represents '2' with '6685'
6682 -6684 6685 0
-6685 6684 0
-6685 -6682 0
c Var 'aux1298' order represents '3' with '6686'
-6684 6686 0
c Var 'aux1298' direct represents '3' with '6687'
6684 -6686 6687 0
-6687 6686 0
-6687 -6684 0
c Var 'aux1298' direct represents '4' with '-6686'
6681 6683 6685 6687 -6686 0
c Encoding variable: aux1299 with domain: int(0..4) (representing constraint (aux1258 + aux1281))
c Both direct and order encoding.
c Var 'aux1299' order represents '0' with '6688'
c Var 'aux1299' direct represents '0' with '6688'
c Var 'aux1299' order represents '1' with '6689'
-6688 6689 0
c Var 'aux1299' direct represents '1' with '6690'
6688 -6689 6690 0
-6690 6689 0
-6690 -6688 0
c Var 'aux1299' order represents '2' with '6691'
-6689 6691 0
c Var 'aux1299' direct represents '2' with '6692'
6689 -6691 6692 0
-6692 6691 0
-6692 -6689 0
c Var 'aux1299' order represents '3' with '6693'
-6691 6693 0
c Var 'aux1299' direct represents '3' with '6694'
6691 -6693 6694 0
-6694 6693 0
-6694 -6691 0
c Var 'aux1299' direct represents '4' with '-6693'
6688 6690 6692 6694 -6693 0
c Encoding variable: aux1300 with domain: int(0..8) (representing constraint (aux1291 + aux1299))
c Both direct and order encoding.
c Var 'aux1300' order represents '0' with '6695'
c Var 'aux1300' direct represents '0' with '6695'
c Var 'aux1300' order represents '1' with '6696'
-6695 6696 0
c Var 'aux1300' direct represents '1' with '6697'
6695 -6696 6697 0
-6697 6696 0
-6697 -6695 0
c Var 'aux1300' order represents '2' with '6698'
-6696 6698 0
c Var 'aux1300' direct represents '2' with '6699'
6696 -6698 6699 0
-6699 6698 0
-6699 -6696 0
c Var 'aux1300' order represents '3' with '6700'
-6698 6700 0
c Var 'aux1300' direct represents '3' with '6701'
6698 -6700 6701 0
-6701 6700 0
-6701 -6698 0
c Var 'aux1300' order represents '4' with '6702'
-6700 6702 0
c Var 'aux1300' direct represents '4' with '6703'
6700 -6702 6703 0
-6703 6702 0
-6703 -6700 0
c Var 'aux1300' order represents '5' with '6704'
-6702 6704 0
c Var 'aux1300' direct represents '5' with '6705'
6702 -6704 6705 0
-6705 6704 0
-6705 -6702 0
c Var 'aux1300' order represents '6' with '6706'
-6704 6706 0
c Var 'aux1300' direct represents '6' with '6707'
6704 -6706 6707 0
-6707 6706 0
-6707 -6704 0
c Var 'aux1300' order represents '7' with '6708'
-6706 6708 0
c Var 'aux1300' direct represents '7' with '6709'
6706 -6708 6709 0
-6709 6708 0
-6709 -6706 0
c Var 'aux1300' direct represents '8' with '-6708'
6695 6697 6699 6701 6703 6705 6707 6709 -6708 0
c Encoding variable: aux1301 with domain: int(0..8) (representing constraint (aux1289 + aux1285))
c Both direct and order encoding.
c Var 'aux1301' order represents '0' with '6710'
c Var 'aux1301' direct represents '0' with '6710'
c Var 'aux1301' order represents '1' with '6711'
-6710 6711 0
c Var 'aux1301' direct represents '1' with '6712'
6710 -6711 6712 0
-6712 6711 0
-6712 -6710 0
c Var 'aux1301' order represents '2' with '6713'
-6711 6713 0
c Var 'aux1301' direct represents '2' with '6714'
6711 -6713 6714 0
-6714 6713 0
-6714 -6711 0
c Var 'aux1301' order represents '3' with '6715'
-6713 6715 0
c Var 'aux1301' direct represents '3' with '6716'
6713 -6715 6716 0
-6716 6715 0
-6716 -6713 0
c Var 'aux1301' order represents '4' with '6717'
-6715 6717 0
c Var 'aux1301' direct represents '4' with '6718'
6715 -6717 6718 0
-6718 6717 0
-6718 -6715 0
c Var 'aux1301' order represents '5' with '6719'
-6717 6719 0
c Var 'aux1301' direct represents '5' with '6720'
6717 -6719 6720 0
-6720 6719 0
-6720 -6717 0
c Var 'aux1301' order represents '6' with '6721'
-6719 6721 0
c Var 'aux1301' direct represents '6' with '6722'
6719 -6721 6722 0
-6722 6721 0
-6722 -6719 0
c Var 'aux1301' order represents '7' with '6723'
-6721 6723 0
c Var 'aux1301' direct represents '7' with '6724'
6721 -6723 6724 0
-6724 6723 0
-6724 -6721 0
c Var 'aux1301' direct represents '8' with '-6723'
6710 6712 6714 6716 6718 6720 6722 6724 -6723 0
c Encoding variable: aux1302 with domain: int(0..8) (representing constraint (aux1297 + aux1284))
c Both direct and order encoding.
c Var 'aux1302' order represents '0' with '6725'
c Var 'aux1302' direct represents '0' with '6725'
c Var 'aux1302' order represents '1' with '6726'
-6725 6726 0
c Var 'aux1302' direct represents '1' with '6727'
6725 -6726 6727 0
-6727 6726 0
-6727 -6725 0
c Var 'aux1302' order represents '2' with '6728'
-6726 6728 0
c Var 'aux1302' direct represents '2' with '6729'
6726 -6728 6729 0
-6729 6728 0
-6729 -6726 0
c Var 'aux1302' order represents '3' with '6730'
-6728 6730 0
c Var 'aux1302' direct represents '3' with '6731'
6728 -6730 6731 0
-6731 6730 0
-6731 -6728 0
c Var 'aux1302' order represents '4' with '6732'
-6730 6732 0
c Var 'aux1302' direct represents '4' with '6733'
6730 -6732 6733 0
-6733 6732 0
-6733 -6730 0
c Var 'aux1302' order represents '5' with '6734'
-6732 6734 0
c Var 'aux1302' direct represents '5' with '6735'
6732 -6734 6735 0
-6735 6734 0
-6735 -6732 0
c Var 'aux1302' order represents '6' with '6736'
-6734 6736 0
c Var 'aux1302' direct represents '6' with '6737'
6734 -6736 6737 0
-6737 6736 0
-6737 -6734 0
c Var 'aux1302' order represents '7' with '6738'
-6736 6738 0
c Var 'aux1302' direct represents '7' with '6739'
6736 -6738 6739 0
-6739 6738 0
-6739 -6736 0
c Var 'aux1302' direct represents '8' with '-6738'
6725 6727 6729 6731 6733 6735 6737 6739 -6738 0
c Encoding variable: aux1303 with domain: int(0..8) (representing constraint (aux1287 + aux1288))
c Both direct and order encoding.
c Var 'aux1303' order represents '0' with '6740'
c Var 'aux1303' direct represents '0' with '6740'
c Var 'aux1303' order represents '1' with '6741'
-6740 6741 0
c Var 'aux1303' direct represents '1' with '6742'
6740 -6741 6742 0
-6742 6741 0
-6742 -6740 0
c Var 'aux1303' order represents '2' with '6743'
-6741 6743 0
c Var 'aux1303' direct represents '2' with '6744'
6741 -6743 6744 0
-6744 6743 0
-6744 -6741 0
c Var 'aux1303' order represents '3' with '6745'
-6743 6745 0
c Var 'aux1303' direct represents '3' with '6746'
6743 -6745 6746 0
-6746 6745 0
-6746 -6743 0
c Var 'aux1303' order represents '4' with '6747'
-6745 6747 0
c Var 'aux1303' direct represents '4' with '6748'
6745 -6747 6748 0
-6748 6747 0
-6748 -6745 0
c Var 'aux1303' order represents '5' with '6749'
-6747 6749 0
c Var 'aux1303' direct represents '5' with '6750'
6747 -6749 6750 0
-6750 6749 0
-6750 -6747 0
c Var 'aux1303' order represents '6' with '6751'
-6749 6751 0
c Var 'aux1303' direct represents '6' with '6752'
6749 -6751 6752 0
-6752 6751 0
-6752 -6749 0
c Var 'aux1303' order represents '7' with '6753'
-6751 6753 0
c Var 'aux1303' direct represents '7' with '6754'
6751 -6753 6754 0
-6754 6753 0
-6754 -6751 0
c Var 'aux1303' direct represents '8' with '-6753'
6740 6742 6744 6746 6748 6750 6752 6754 -6753 0
c Encoding variable: aux1304 with domain: int(0..8) (representing constraint (aux1290 + aux1294))
c Both direct and order encoding.
c Var 'aux1304' order represents '0' with '6755'
c Var 'aux1304' direct represents '0' with '6755'
c Var 'aux1304' order represents '1' with '6756'
-6755 6756 0
c Var 'aux1304' direct represents '1' with '6757'
6755 -6756 6757 0
-6757 6756 0
-6757 -6755 0
c Var 'aux1304' order represents '2' with '6758'
-6756 6758 0
c Var 'aux1304' direct represents '2' with '6759'
6756 -6758 6759 0
-6759 6758 0
-6759 -6756 0
c Var 'aux1304' order represents '3' with '6760'
-6758 6760 0
c Var 'aux1304' direct represents '3' with '6761'
6758 -6760 6761 0
-6761 6760 0
-6761 -6758 0
c Var 'aux1304' order represents '4' with '6762'
-6760 6762 0
c Var 'aux1304' direct represents '4' with '6763'
6760 -6762 6763 0
-6763 6762 0
-6763 -6760 0
c Var 'aux1304' order represents '5' with '6764'
-6762 6764 0
c Var 'aux1304' direct represents '5' with '6765'
6762 -6764 6765 0
-6765 6764 0
-6765 -6762 0
c Var 'aux1304' order represents '6' with '6766'
-6764 6766 0
c Var 'aux1304' direct represents '6' with '6767'
6764 -6766 6767 0
-6767 6766 0
-6767 -6764 0
c Var 'aux1304' order represents '7' with '6768'
-6766 6768 0
c Var 'aux1304' direct represents '7' with '6769'
6766 -6768 6769 0
-6769 6768 0
-6769 -6766 0
c Var 'aux1304' direct represents '8' with '-6768'
6755 6757 6759 6761 6763 6765 6767 6769 -6768 0
c Encoding variable: aux1305 with domain: int(0..8) (representing constraint (aux1295 + aux1292))
c Both direct and order encoding.
c Var 'aux1305' order represents '0' with '6770'
c Var 'aux1305' direct represents '0' with '6770'
c Var 'aux1305' order represents '1' with '6771'
-6770 6771 0
c Var 'aux1305' direct represents '1' with '6772'
6770 -6771 6772 0
-6772 6771 0
-6772 -6770 0
c Var 'aux1305' order represents '2' with '6773'
-6771 6773 0
c Var 'aux1305' direct represents '2' with '6774'
6771 -6773 6774 0
-6774 6773 0
-6774 -6771 0
c Var 'aux1305' order represents '3' with '6775'
-6773 6775 0
c Var 'aux1305' direct represents '3' with '6776'
6773 -6775 6776 0
-6776 6775 0
-6776 -6773 0
c Var 'aux1305' order represents '4' with '6777'
-6775 6777 0
c Var 'aux1305' direct represents '4' with '6778'
6775 -6777 6778 0
-6778 6777 0
-6778 -6775 0
c Var 'aux1305' order represents '5' with '6779'
-6777 6779 0
c Var 'aux1305' direct represents '5' with '6780'
6777 -6779 6780 0
-6780 6779 0
-6780 -6777 0
c Var 'aux1305' order represents '6' with '6781'
-6779 6781 0
c Var 'aux1305' direct represents '6' with '6782'
6779 -6781 6782 0
-6782 6781 0
-6782 -6779 0
c Var 'aux1305' order represents '7' with '6783'
-6781 6783 0
c Var 'aux1305' direct represents '7' with '6784'
6781 -6783 6784 0
-6784 6783 0
-6784 -6781 0
c Var 'aux1305' direct represents '8' with '-6783'
6770 6772 6774 6776 6778 6780 6782 6784 -6783 0
c Encoding variable: aux1306 with domain: int(0..8) (representing constraint (aux1293 + aux1298))
c Both direct and order encoding.
c Var 'aux1306' order represents '0' with '6785'
c Var 'aux1306' direct represents '0' with '6785'
c Var 'aux1306' order represents '1' with '6786'
-6785 6786 0
c Var 'aux1306' direct represents '1' with '6787'
6785 -6786 6787 0
-6787 6786 0
-6787 -6785 0
c Var 'aux1306' order represents '2' with '6788'
-6786 6788 0
c Var 'aux1306' direct represents '2' with '6789'
6786 -6788 6789 0
-6789 6788 0
-6789 -6786 0
c Var 'aux1306' order represents '3' with '6790'
-6788 6790 0
c Var 'aux1306' direct represents '3' with '6791'
6788 -6790 6791 0
-6791 6790 0
-6791 -6788 0
c Var 'aux1306' order represents '4' with '6792'
-6790 6792 0
c Var 'aux1306' direct represents '4' with '6793'
6790 -6792 6793 0
-6793 6792 0
-6793 -6790 0
c Var 'aux1306' order represents '5' with '6794'
-6792 6794 0
c Var 'aux1306' direct represents '5' with '6795'
6792 -6794 6795 0
-6795 6794 0
-6795 -6792 0
c Var 'aux1306' order represents '6' with '6796'
-6794 6796 0
c Var 'aux1306' direct represents '6' with '6797'
6794 -6796 6797 0
-6797 6796 0
-6797 -6794 0
c Var 'aux1306' order represents '7' with '6798'
-6796 6798 0
c Var 'aux1306' direct represents '7' with '6799'
6796 -6798 6799 0
-6799 6798 0
-6799 -6796 0
c Var 'aux1306' direct represents '8' with '-6798'
6785 6787 6789 6791 6793 6795 6797 6799 -6798 0
c Encoding variable: aux1307 with domain: int(0..8) (representing constraint (aux1296 + aux1286))
c Both direct and order encoding.
c Var 'aux1307' order represents '0' with '6800'
c Var 'aux1307' direct represents '0' with '6800'
c Var 'aux1307' order represents '1' with '6801'
-6800 6801 0
c Var 'aux1307' direct represents '1' with '6802'
6800 -6801 6802 0
-6802 6801 0
-6802 -6800 0
c Var 'aux1307' order represents '2' with '6803'
-6801 6803 0
c Var 'aux1307' direct represents '2' with '6804'
6801 -6803 6804 0
-6804 6803 0
-6804 -6801 0
c Var 'aux1307' order represents '3' with '6805'
-6803 6805 0
c Var 'aux1307' direct represents '3' with '6806'
6803 -6805 6806 0
-6806 6805 0
-6806 -6803 0
c Var 'aux1307' order represents '4' with '6807'
-6805 6807 0
c Var 'aux1307' direct represents '4' with '6808'
6805 -6807 6808 0
-6808 6807 0
-6808 -6805 0
c Var 'aux1307' order represents '5' with '6809'
-6807 6809 0
c Var 'aux1307' direct represents '5' with '6810'
6807 -6809 6810 0
-6810 6809 0
-6810 -6807 0
c Var 'aux1307' order represents '6' with '6811'
-6809 6811 0
c Var 'aux1307' direct represents '6' with '6812'
6809 -6811 6812 0
-6812 6811 0
-6812 -6809 0
c Var 'aux1307' order represents '7' with '6813'
-6811 6813 0
c Var 'aux1307' direct represents '7' with '6814'
6811 -6813 6814 0
-6814 6813 0
-6814 -6811 0
c Var 'aux1307' direct represents '8' with '-6813'
6800 6802 6804 6806 6808 6810 6812 6814 -6813 0
c Encoding variable: aux1308 with domain: int(0..16) (representing constraint (aux1303 + aux1307))
c Both direct and order encoding.
c Var 'aux1308' order represents '0' with '6815'
c Var 'aux1308' direct represents '0' with '6815'
c Var 'aux1308' order represents '1' with '6816'
-6815 6816 0
c Var 'aux1308' direct represents '1' with '6817'
6815 -6816 6817 0
-6817 6816 0
-6817 -6815 0
c Var 'aux1308' order represents '2' with '6818'
-6816 6818 0
c Var 'aux1308' direct represents '2' with '6819'
6816 -6818 6819 0
-6819 6818 0
-6819 -6816 0
c Var 'aux1308' order represents '3' with '6820'
-6818 6820 0
c Var 'aux1308' direct represents '3' with '6821'
6818 -6820 6821 0
-6821 6820 0
-6821 -6818 0
c Var 'aux1308' order represents '4' with '6822'
-6820 6822 0
c Var 'aux1308' direct represents '4' with '6823'
6820 -6822 6823 0
-6823 6822 0
-6823 -6820 0
c Var 'aux1308' order represents '5' with '6824'
-6822 6824 0
c Var 'aux1308' direct represents '5' with '6825'
6822 -6824 6825 0
-6825 6824 0
-6825 -6822 0
c Var 'aux1308' order represents '6' with '6826'
-6824 6826 0
c Var 'aux1308' direct represents '6' with '6827'
6824 -6826 6827 0
-6827 6826 0
-6827 -6824 0
c Var 'aux1308' order represents '7' with '6828'
-6826 6828 0
c Var 'aux1308' direct represents '7' with '6829'
6826 -6828 6829 0
-6829 6828 0
-6829 -6826 0
c Var 'aux1308' order represents '8' with '6830'
-6828 6830 0
c Var 'aux1308' direct represents '8' with '6831'
6828 -6830 6831 0
-6831 6830 0
-6831 -6828 0
c Var 'aux1308' order represents '9' with '6832'
-6830 6832 0
c Var 'aux1308' direct represents '9' with '6833'
6830 -6832 6833 0
-6833 6832 0
-6833 -6830 0
c Var 'aux1308' order represents '10' with '6834'
-6832 6834 0
c Var 'aux1308' direct represents '10' with '6835'
6832 -6834 6835 0
-6835 6834 0
-6835 -6832 0
c Var 'aux1308' order represents '11' with '6836'
-6834 6836 0
c Var 'aux1308' direct represents '11' with '6837'
6834 -6836 6837 0
-6837 6836 0
-6837 -6834 0
c Var 'aux1308' order represents '12' with '6838'
-6836 6838 0
c Var 'aux1308' direct represents '12' with '6839'
6836 -6838 6839 0
-6839 6838 0
-6839 -6836 0
c Var 'aux1308' order represents '13' with '6840'
-6838 6840 0
c Var 'aux1308' direct represents '13' with '6841'
6838 -6840 6841 0
-6841 6840 0
-6841 -6838 0
c Var 'aux1308' order represents '14' with '6842'
-6840 6842 0
c Var 'aux1308' direct represents '14' with '6843'
6840 -6842 6843 0
-6843 6842 0
-6843 -6840 0
c Var 'aux1308' order represents '15' with '6844'
-6842 6844 0
c Var 'aux1308' direct represents '15' with '6845'
6842 -6844 6845 0
-6845 6844 0
-6845 -6842 0
c Var 'aux1308' direct represents '16' with '-6844'
6815 6817 6819 6821 6823 6825 6827 6829 6831 6833 6835 6837 6839 6841 6843 6845 -6844 0
c Encoding variable: aux1309 with domain: int(0..16) (representing constraint (aux1301 + aux1300))
c Both direct and order encoding.
c Var 'aux1309' order represents '0' with '6846'
c Var 'aux1309' direct represents '0' with '6846'
c Var 'aux1309' order represents '1' with '6847'
-6846 6847 0
c Var 'aux1309' direct represents '1' with '6848'
6846 -6847 6848 0
-6848 6847 0
-6848 -6846 0
c Var 'aux1309' order represents '2' with '6849'
-6847 6849 0
c Var 'aux1309' direct represents '2' with '6850'
6847 -6849 6850 0
-6850 6849 0
-6850 -6847 0
c Var 'aux1309' order represents '3' with '6851'
-6849 6851 0
c Var 'aux1309' direct represents '3' with '6852'
6849 -6851 6852 0
-6852 6851 0
-6852 -6849 0
c Var 'aux1309' order represents '4' with '6853'
-6851 6853 0
c Var 'aux1309' direct represents '4' with '6854'
6851 -6853 6854 0
-6854 6853 0
-6854 -6851 0
c Var 'aux1309' order represents '5' with '6855'
-6853 6855 0
c Var 'aux1309' direct represents '5' with '6856'
6853 -6855 6856 0
-6856 6855 0
-6856 -6853 0
c Var 'aux1309' order represents '6' with '6857'
-6855 6857 0
c Var 'aux1309' direct represents '6' with '6858'
6855 -6857 6858 0
-6858 6857 0
-6858 -6855 0
c Var 'aux1309' order represents '7' with '6859'
-6857 6859 0
c Var 'aux1309' direct represents '7' with '6860'
6857 -6859 6860 0
-6860 6859 0
-6860 -6857 0
c Var 'aux1309' order represents '8' with '6861'
-6859 6861 0
c Var 'aux1309' direct represents '8' with '6862'
6859 -6861 6862 0
-6862 6861 0
-6862 -6859 0
c Var 'aux1309' order represents '9' with '6863'
-6861 6863 0
c Var 'aux1309' direct represents '9' with '6864'
6861 -6863 6864 0
-6864 6863 0
-6864 -6861 0
c Var 'aux1309' order represents '10' with '6865'
-6863 6865 0
c Var 'aux1309' direct represents '10' with '6866'
6863 -6865 6866 0
-6866 6865 0
-6866 -6863 0
c Var 'aux1309' order represents '11' with '6867'
-6865 6867 0
c Var 'aux1309' direct represents '11' with '6868'
6865 -6867 6868 0
-6868 6867 0
-6868 -6865 0
c Var 'aux1309' order represents '12' with '6869'
-6867 6869 0
c Var 'aux1309' direct represents '12' with '6870'
6867 -6869 6870 0
-6870 6869 0
-6870 -6867 0
c Var 'aux1309' order represents '13' with '6871'
-6869 6871 0
c Var 'aux1309' direct represents '13' with '6872'
6869 -6871 6872 0
-6872 6871 0
-6872 -6869 0
c Var 'aux1309' order represents '14' with '6873'
-6871 6873 0
c Var 'aux1309' direct represents '14' with '6874'
6871 -6873 6874 0
-6874 6873 0
-6874 -6871 0
c Var 'aux1309' order represents '15' with '6875'
-6873 6875 0
c Var 'aux1309' direct represents '15' with '6876'
6873 -6875 6876 0
-6876 6875 0
-6876 -6873 0
c Var 'aux1309' direct represents '16' with '-6875'
6846 6848 6850 6852 6854 6856 6858 6860 6862 6864 6866 6868 6870 6872 6874 6876 -6875 0
c Encoding variable: aux1310 with domain: int(0..16) (representing constraint (aux1302 + aux1304))
c Both direct and order encoding.
c Var 'aux1310' order represents '0' with '6877'
c Var 'aux1310' direct represents '0' with '6877'
c Var 'aux1310' order represents '1' with '6878'
-6877 6878 0
c Var 'aux1310' direct represents '1' with '6879'
6877 -6878 6879 0
-6879 6878 0
-6879 -6877 0
c Var 'aux1310' order represents '2' with '6880'
-6878 6880 0
c Var 'aux1310' direct represents '2' with '6881'
6878 -6880 6881 0
-6881 6880 0
-6881 -6878 0
c Var 'aux1310' order represents '3' with '6882'
-6880 6882 0
c Var 'aux1310' direct represents '3' with '6883'
6880 -6882 6883 0
-6883 6882 0
-6883 -6880 0
c Var 'aux1310' order represents '4' with '6884'
-6882 6884 0
c Var 'aux1310' direct represents '4' with '6885'
6882 -6884 6885 0
-6885 6884 0
-6885 -6882 0
c Var 'aux1310' order represents '5' with '6886'
-6884 6886 0
c Var 'aux1310' direct represents '5' with '6887'
6884 -6886 6887 0
-6887 6886 0
-6887 -6884 0
c Var 'aux1310' order represents '6' with '6888'
-6886 6888 0
c Var 'aux1310' direct represents '6' with '6889'
6886 -6888 6889 0
-6889 6888 0
-6889 -6886 0
c Var 'aux1310' order represents '7' with '6890'
-6888 6890 0
c Var 'aux1310' direct represents '7' with '6891'
6888 -6890 6891 0
-6891 6890 0
-6891 -6888 0
c Var 'aux1310' order represents '8' with '6892'
-6890 6892 0
c Var 'aux1310' direct represents '8' with '6893'
6890 -6892 6893 0
-6893 6892 0
-6893 -6890 0
c Var 'aux1310' order represents '9' with '6894'
-6892 6894 0
c Var 'aux1310' direct represents '9' with '6895'
6892 -6894 6895 0
-6895 6894 0
-6895 -6892 0
c Var 'aux1310' order represents '10' with '6896'
-6894 6896 0
c Var 'aux1310' direct represents '10' with '6897'
6894 -6896 6897 0
-6897 6896 0
-6897 -6894 0
c Var 'aux1310' order represents '11' with '6898'
-6896 6898 0
c Var 'aux1310' direct represents '11' with '6899'
6896 -6898 6899 0
-6899 6898 0
-6899 -6896 0
c Var 'aux1310' order represents '12' with '6900'
-6898 6900 0
c Var 'aux1310' direct represents '12' with '6901'
6898 -6900 6901 0
-6901 6900 0
-6901 -6898 0
c Var 'aux1310' order represents '13' with '6902'
-6900 6902 0
c Var 'aux1310' direct represents '13' with '6903'
6900 -6902 6903 0
-6903 6902 0
-6903 -6900 0
c Var 'aux1310' order represents '14' with '6904'
-6902 6904 0
c Var 'aux1310' direct represents '14' with '6905'
6902 -6904 6905 0
-6905 6904 0
-6905 -6902 0
c Var 'aux1310' order represents '15' with '6906'
-6904 6906 0
c Var 'aux1310' direct represents '15' with '6907'
6904 -6906 6907 0
-6907 6906 0
-6907 -6904 0
c Var 'aux1310' direct represents '16' with '-6906'
6877 6879 6881 6883 6885 6887 6889 6891 6893 6895 6897 6899 6901 6903 6905 6907 -6906 0
c Encoding variable: aux1311 with domain: int(0..16) (representing constraint (aux1305 + aux1306))
c Both direct and order encoding.
c Var 'aux1311' order represents '0' with '6908'
c Var 'aux1311' direct represents '0' with '6908'
c Var 'aux1311' order represents '1' with '6909'
-6908 6909 0
c Var 'aux1311' direct represents '1' with '6910'
6908 -6909 6910 0
-6910 6909 0
-6910 -6908 0
c Var 'aux1311' order represents '2' with '6911'
-6909 6911 0
c Var 'aux1311' direct represents '2' with '6912'
6909 -6911 6912 0
-6912 6911 0
-6912 -6909 0
c Var 'aux1311' order represents '3' with '6913'
-6911 6913 0
c Var 'aux1311' direct represents '3' with '6914'
6911 -6913 6914 0
-6914 6913 0
-6914 -6911 0
c Var 'aux1311' order represents '4' with '6915'
-6913 6915 0
c Var 'aux1311' direct represents '4' with '6916'
6913 -6915 6916 0
-6916 6915 0
-6916 -6913 0
c Var 'aux1311' order represents '5' with '6917'
-6915 6917 0
c Var 'aux1311' direct represents '5' with '6918'
6915 -6917 6918 0
-6918 6917 0
-6918 -6915 0
c Var 'aux1311' order represents '6' with '6919'
-6917 6919 0
c Var 'aux1311' direct represents '6' with '6920'
6917 -6919 6920 0
-6920 6919 0
-6920 -6917 0
c Var 'aux1311' order represents '7' with '6921'
-6919 6921 0
c Var 'aux1311' direct represents '7' with '6922'
6919 -6921 6922 0
-6922 6921 0
-6922 -6919 0
c Var 'aux1311' order represents '8' with '6923'
-6921 6923 0
c Var 'aux1311' direct represents '8' with '6924'
6921 -6923 6924 0
-6924 6923 0
-6924 -6921 0
c Var 'aux1311' order represents '9' with '6925'
-6923 6925 0
c Var 'aux1311' direct represents '9' with '6926'
6923 -6925 6926 0
-6926 6925 0
-6926 -6923 0
c Var 'aux1311' order represents '10' with '6927'
-6925 6927 0
c Var 'aux1311' direct represents '10' with '6928'
6925 -6927 6928 0
-6928 6927 0
-6928 -6925 0
c Var 'aux1311' order represents '11' with '6929'
-6927 6929 0
c Var 'aux1311' direct represents '11' with '6930'
6927 -6929 6930 0
-6930 6929 0
-6930 -6927 0
c Var 'aux1311' order represents '12' with '6931'
-6929 6931 0
c Var 'aux1311' direct represents '12' with '6932'
6929 -6931 6932 0
-6932 6931 0
-6932 -6929 0
c Var 'aux1311' order represents '13' with '6933'
-6931 6933 0
c Var 'aux1311' direct represents '13' with '6934'
6931 -6933 6934 0
-6934 6933 0
-6934 -6931 0
c Var 'aux1311' order represents '14' with '6935'
-6933 6935 0
c Var 'aux1311' direct represents '14' with '6936'
6933 -6935 6936 0
-6936 6935 0
-6936 -6933 0
c Var 'aux1311' order represents '15' with '6937'
-6935 6937 0
c Var 'aux1311' direct represents '15' with '6938'
6935 -6937 6938 0
-6938 6937 0
-6938 -6935 0
c Var 'aux1311' direct represents '16' with '-6937'
6908 6910 6912 6914 6916 6918 6920 6922 6924 6926 6928 6930 6932 6934 6936 6938 -6937 0
c Encoding variable: aux1312 with domain: int(0..32) (representing constraint (aux1309 + aux1311))
c Both direct and order encoding.
c Var 'aux1312' order represents '0' with '6939'
c Var 'aux1312' direct represents '0' with '6939'
c Var 'aux1312' order represents '1' with '6940'
-6939 6940 0
c Var 'aux1312' direct represents '1' with '6941'
6939 -6940 6941 0
-6941 6940 0
-6941 -6939 0
c Var 'aux1312' order represents '2' with '6942'
-6940 6942 0
c Var 'aux1312' direct represents '2' with '6943'
6940 -6942 6943 0
-6943 6942 0
-6943 -6940 0
c Var 'aux1312' order represents '3' with '6944'
-6942 6944 0
c Var 'aux1312' direct represents '3' with '6945'
6942 -6944 6945 0
-6945 6944 0
-6945 -6942 0
c Var 'aux1312' order represents '4' with '6946'
-6944 6946 0
c Var 'aux1312' direct represents '4' with '6947'
6944 -6946 6947 0
-6947 6946 0
-6947 -6944 0
c Var 'aux1312' order represents '5' with '6948'
-6946 6948 0
c Var 'aux1312' direct represents '5' with '6949'
6946 -6948 6949 0
-6949 6948 0
-6949 -6946 0
c Var 'aux1312' order represents '6' with '6950'
-6948 6950 0
c Var 'aux1312' direct represents '6' with '6951'
6948 -6950 6951 0
-6951 6950 0
-6951 -6948 0
c Var 'aux1312' order represents '7' with '6952'
-6950 6952 0
c Var 'aux1312' direct represents '7' with '6953'
6950 -6952 6953 0
-6953 6952 0
-6953 -6950 0
c Var 'aux1312' order represents '8' with '6954'
-6952 6954 0
c Var 'aux1312' direct represents '8' with '6955'
6952 -6954 6955 0
-6955 6954 0
-6955 -6952 0
c Var 'aux1312' order represents '9' with '6956'
-6954 6956 0
c Var 'aux1312' direct represents '9' with '6957'
6954 -6956 6957 0
-6957 6956 0
-6957 -6954 0
c Var 'aux1312' order represents '10' with '6958'
-6956 6958 0
c Var 'aux1312' direct represents '10' with '6959'
6956 -6958 6959 0
-6959 6958 0
-6959 -6956 0
c Var 'aux1312' order represents '11' with '6960'
-6958 6960 0
c Var 'aux1312' direct represents '11' with '6961'
6958 -6960 6961 0
-6961 6960 0
-6961 -6958 0
c Var 'aux1312' order represents '12' with '6962'
-6960 6962 0
c Var 'aux1312' direct represents '12' with '6963'
6960 -6962 6963 0
-6963 6962 0
-6963 -6960 0
c Var 'aux1312' order represents '13' with '6964'
-6962 6964 0
c Var 'aux1312' direct represents '13' with '6965'
6962 -6964 6965 0
-6965 6964 0
-6965 -6962 0
c Var 'aux1312' order represents '14' with '6966'
-6964 6966 0
c Var 'aux1312' direct represents '14' with '6967'
6964 -6966 6967 0
-6967 6966 0
-6967 -6964 0
c Var 'aux1312' order represents '15' with '6968'
-6966 6968 0
c Var 'aux1312' direct represents '15' with '6969'
6966 -6968 6969 0
-6969 6968 0
-6969 -6966 0
c Var 'aux1312' order represents '16' with '6970'
-6968 6970 0
c Var 'aux1312' direct represents '16' with '6971'
6968 -6970 6971 0
-6971 6970 0
-6971 -6968 0
c Var 'aux1312' order represents '17' with '6972'
-6970 6972 0
c Var 'aux1312' direct represents '17' with '6973'
6970 -6972 6973 0
-6973 6972 0
-6973 -6970 0
c Var 'aux1312' order represents '18' with '6974'
-6972 6974 0
c Var 'aux1312' direct represents '18' with '6975'
6972 -6974 6975 0
-6975 6974 0
-6975 -6972 0
c Var 'aux1312' order represents '19' with '6976'
-6974 6976 0
c Var 'aux1312' direct represents '19' with '6977'
6974 -6976 6977 0
-6977 6976 0
-6977 -6974 0
c Var 'aux1312' order represents '20' with '6978'
-6976 6978 0
c Var 'aux1312' direct represents '20' with '6979'
6976 -6978 6979 0
-6979 6978 0
-6979 -6976 0
c Var 'aux1312' order represents '21' with '6980'
-6978 6980 0
c Var 'aux1312' direct represents '21' with '6981'
6978 -6980 6981 0
-6981 6980 0
-6981 -6978 0
c Var 'aux1312' order represents '22' with '6982'
-6980 6982 0
c Var 'aux1312' direct represents '22' with '6983'
6980 -6982 6983 0
-6983 6982 0
-6983 -6980 0
c Var 'aux1312' order represents '23' with '6984'
-6982 6984 0
c Var 'aux1312' direct represents '23' with '6985'
6982 -6984 6985 0
-6985 6984 0
-6985 -6982 0
c Var 'aux1312' order represents '24' with '6986'
-6984 6986 0
c Var 'aux1312' direct represents '24' with '6987'
6984 -6986 6987 0
-6987 6986 0
-6987 -6984 0
c Var 'aux1312' order represents '25' with '6988'
-6986 6988 0
c Var 'aux1312' direct represents '25' with '6989'
6986 -6988 6989 0
-6989 6988 0
-6989 -6986 0
c Var 'aux1312' order represents '26' with '6990'
-6988 6990 0
c Var 'aux1312' direct represents '26' with '6991'
6988 -6990 6991 0
-6991 6990 0
-6991 -6988 0
c Var 'aux1312' order represents '27' with '6992'
-6990 6992 0
c Var 'aux1312' direct represents '27' with '6993'
6990 -6992 6993 0
-6993 6992 0
-6993 -6990 0
c Var 'aux1312' order represents '28' with '6994'
-6992 6994 0
c Var 'aux1312' direct represents '28' with '6995'
6992 -6994 6995 0
-6995 6994 0
-6995 -6992 0
c Var 'aux1312' order represents '29' with '6996'
-6994 6996 0
c Var 'aux1312' direct represents '29' with '6997'
6994 -6996 6997 0
-6997 6996 0
-6997 -6994 0
c Var 'aux1312' order represents '30' with '6998'
-6996 6998 0
c Var 'aux1312' direct represents '30' with '6999'
6996 -6998 6999 0
-6999 6998 0
-6999 -6996 0
c Var 'aux1312' order represents '31' with '7000'
-6998 7000 0
c Var 'aux1312' direct represents '31' with '7001'
6998 -7000 7001 0
-7001 7000 0
-7001 -6998 0
c Var 'aux1312' direct represents '32' with '-7000'
6939 6941 6943 6945 6947 6949 6951 6953 6955 6957 6959 6961 6963 6965 6967 6969 6971 6973 6975 6977 6979 6981 6983 6985 6987 6989 6991 6993 6995 6997 6999 7001 -7000 0
c Encoding variable: aux1313 with domain: int(0..32) (representing constraint (aux1308 + aux1310))
c Both direct and order encoding.
c Var 'aux1313' order represents '0' with '7002'
c Var 'aux1313' direct represents '0' with '7002'
c Var 'aux1313' order represents '1' with '7003'
-7002 7003 0
c Var 'aux1313' direct represents '1' with '7004'
7002 -7003 7004 0
-7004 7003 0
-7004 -7002 0
c Var 'aux1313' order represents '2' with '7005'
-7003 7005 0
c Var 'aux1313' direct represents '2' with '7006'
7003 -7005 7006 0
-7006 7005 0
-7006 -7003 0
c Var 'aux1313' order represents '3' with '7007'
-7005 7007 0
c Var 'aux1313' direct represents '3' with '7008'
7005 -7007 7008 0
-7008 7007 0
-7008 -7005 0
c Var 'aux1313' order represents '4' with '7009'
-7007 7009 0
c Var 'aux1313' direct represents '4' with '7010'
7007 -7009 7010 0
-7010 7009 0
-7010 -7007 0
c Var 'aux1313' order represents '5' with '7011'
-7009 7011 0
c Var 'aux1313' direct represents '5' with '7012'
7009 -7011 7012 0
-7012 7011 0
-7012 -7009 0
c Var 'aux1313' order represents '6' with '7013'
-7011 7013 0
c Var 'aux1313' direct represents '6' with '7014'
7011 -7013 7014 0
-7014 7013 0
-7014 -7011 0
c Var 'aux1313' order represents '7' with '7015'
-7013 7015 0
c Var 'aux1313' direct represents '7' with '7016'
7013 -7015 7016 0
-7016 7015 0
-7016 -7013 0
c Var 'aux1313' order represents '8' with '7017'
-7015 7017 0
c Var 'aux1313' direct represents '8' with '7018'
7015 -7017 7018 0
-7018 7017 0
-7018 -7015 0
c Var 'aux1313' order represents '9' with '7019'
-7017 7019 0
c Var 'aux1313' direct represents '9' with '7020'
7017 -7019 7020 0
-7020 7019 0
-7020 -7017 0
c Var 'aux1313' order represents '10' with '7021'
-7019 7021 0
c Var 'aux1313' direct represents '10' with '7022'
7019 -7021 7022 0
-7022 7021 0
-7022 -7019 0
c Var 'aux1313' order represents '11' with '7023'
-7021 7023 0
c Var 'aux1313' direct represents '11' with '7024'
7021 -7023 7024 0
-7024 7023 0
-7024 -7021 0
c Var 'aux1313' order represents '12' with '7025'
-7023 7025 0
c Var 'aux1313' direct represents '12' with '7026'
7023 -7025 7026 0
-7026 7025 0
-7026 -7023 0
c Var 'aux1313' order represents '13' with '7027'
-7025 7027 0
c Var 'aux1313' direct represents '13' with '7028'
7025 -7027 7028 0
-7028 7027 0
-7028 -7025 0
c Var 'aux1313' order represents '14' with '7029'
-7027 7029 0
c Var 'aux1313' direct represents '14' with '7030'
7027 -7029 7030 0
-7030 7029 0
-7030 -7027 0
c Var 'aux1313' order represents '15' with '7031'
-7029 7031 0
c Var 'aux1313' direct represents '15' with '7032'
7029 -7031 7032 0
-7032 7031 0
-7032 -7029 0
c Var 'aux1313' order represents '16' with '7033'
-7031 7033 0
c Var 'aux1313' direct represents '16' with '7034'
7031 -7033 7034 0
-7034 7033 0
-7034 -7031 0
c Var 'aux1313' order represents '17' with '7035'
-7033 7035 0
c Var 'aux1313' direct represents '17' with '7036'
7033 -7035 7036 0
-7036 7035 0
-7036 -7033 0
c Var 'aux1313' order represents '18' with '7037'
-7035 7037 0
c Var 'aux1313' direct represents '18' with '7038'
7035 -7037 7038 0
-7038 7037 0
-7038 -7035 0
c Var 'aux1313' order represents '19' with '7039'
-7037 7039 0
c Var 'aux1313' direct represents '19' with '7040'
7037 -7039 7040 0
-7040 7039 0
-7040 -7037 0
c Var 'aux1313' order represents '20' with '7041'
-7039 7041 0
c Var 'aux1313' direct represents '20' with '7042'
7039 -7041 7042 0
-7042 7041 0
-7042 -7039 0
c Var 'aux1313' order represents '21' with '7043'
-7041 7043 0
c Var 'aux1313' direct represents '21' with '7044'
7041 -7043 7044 0
-7044 7043 0
-7044 -7041 0
c Var 'aux1313' order represents '22' with '7045'
-7043 7045 0
c Var 'aux1313' direct represents '22' with '7046'
7043 -7045 7046 0
-7046 7045 0
-7046 -7043 0
c Var 'aux1313' order represents '23' with '7047'
-7045 7047 0
c Var 'aux1313' direct represents '23' with '7048'
7045 -7047 7048 0
-7048 7047 0
-7048 -7045 0
c Var 'aux1313' order represents '24' with '7049'
-7047 7049 0
c Var 'aux1313' direct represents '24' with '7050'
7047 -7049 7050 0
-7050 7049 0
-7050 -7047 0
c Var 'aux1313' order represents '25' with '7051'
-7049 7051 0
c Var 'aux1313' direct represents '25' with '7052'
7049 -7051 7052 0
-7052 7051 0
-7052 -7049 0
c Var 'aux1313' order represents '26' with '7053'
-7051 7053 0
c Var 'aux1313' direct represents '26' with '7054'
7051 -7053 7054 0
-7054 7053 0
-7054 -7051 0
c Var 'aux1313' order represents '27' with '7055'
-7053 7055 0
c Var 'aux1313' direct represents '27' with '7056'
7053 -7055 7056 0
-7056 7055 0
-7056 -7053 0
c Var 'aux1313' order represents '28' with '7057'
-7055 7057 0
c Var 'aux1313' direct represents '28' with '7058'
7055 -7057 7058 0
-7058 7057 0
-7058 -7055 0
c Var 'aux1313' order represents '29' with '7059'
-7057 7059 0
c Var 'aux1313' direct represents '29' with '7060'
7057 -7059 7060 0
-7060 7059 0
-7060 -7057 0
c Var 'aux1313' order represents '30' with '7061'
-7059 7061 0
c Var 'aux1313' direct represents '30' with '7062'
7059 -7061 7062 0
-7062 7061 0
-7062 -7059 0
c Var 'aux1313' order represents '31' with '7063'
-7061 7063 0
c Var 'aux1313' direct represents '31' with '7064'
7061 -7063 7064 0
-7064 7063 0
-7064 -7061 0
c Var 'aux1313' direct represents '32' with '-7063'
7002 7004 7006 7008 7010 7012 7014 7016 7018 7020 7022 7024 7026 7028 7030 7032 7034 7036 7038 7040 7042 7044 7046 7048 7050 7052 7054 7056 7058 7060 7062 7064 -7063 0
c Encoding variable: aux1314 with domain: int(0..2) (representing constraint ((agrid_00004_00001=2) + (agrid_00004_00002=2)))
c Both direct and order encoding.
c Var 'aux1314' order represents '0' with '7065'
c Var 'aux1314' direct represents '0' with '7065'
c Var 'aux1314' order represents '1' with '7066'
-7065 7066 0
c Var 'aux1314' direct represents '1' with '7067'
7065 -7066 7067 0
-7067 7066 0
-7067 -7065 0
c Var 'aux1314' direct represents '2' with '-7066'
7065 7067 -7066 0
c Encoding variable: aux1315 with domain: int(0..2) (representing constraint ((agrid_00004_00004=2) + (agrid_00004_00008=2)))
c Both direct and order encoding.
c Var 'aux1315' order represents '0' with '7068'
c Var 'aux1315' direct represents '0' with '7068'
c Var 'aux1315' order represents '1' with '7069'
-7068 7069 0
c Var 'aux1315' direct represents '1' with '7070'
7068 -7069 7070 0
-7070 7069 0
-7070 -7068 0
c Var 'aux1315' direct represents '2' with '-7069'
7068 7070 -7069 0
c Encoding variable: aux1316 with domain: int(0..2) (representing constraint ((agrid_00006_00007=2) + (agrid_00002_00008=2)))
c Both direct and order encoding.
c Var 'aux1316' order represents '0' with '7071'
c Var 'aux1316' direct represents '0' with '7071'
c Var 'aux1316' order represents '1' with '7072'
-7071 7072 0
c Var 'aux1316' direct represents '1' with '7073'
7071 -7072 7073 0
-7073 7072 0
-7073 -7071 0
c Var 'aux1316' direct represents '2' with '-7072'
7071 7073 -7072 0
c Encoding variable: aux1317 with domain: int(0..2) (representing constraint ((agrid_00006_00006=2) + (agrid_00005_00008=2)))
c Both direct and order encoding.
c Var 'aux1317' order represents '0' with '7074'
c Var 'aux1317' direct represents '0' with '7074'
c Var 'aux1317' order represents '1' with '7075'
-7074 7075 0
c Var 'aux1317' direct represents '1' with '7076'
7074 -7075 7076 0
-7076 7075 0
-7076 -7074 0
c Var 'aux1317' direct represents '2' with '-7075'
7074 7076 -7075 0
c Encoding variable: aux1318 with domain: int(0..2) (representing constraint ((agrid_00006_00005=2) + (agrid_00006_00008=2)))
c Both direct and order encoding.
c Var 'aux1318' order represents '0' with '7077'
c Var 'aux1318' direct represents '0' with '7077'
c Var 'aux1318' order represents '1' with '7078'
-7077 7078 0
c Var 'aux1318' direct represents '1' with '7079'
7077 -7078 7079 0
-7079 7078 0
-7079 -7077 0
c Var 'aux1318' direct represents '2' with '-7078'
7077 7079 -7078 0
c Encoding variable: aux1319 with domain: int(0..2) (representing constraint ((agrid_00006_00004=2) + (agrid_00003_00001=2)))
c Both direct and order encoding.
c Var 'aux1319' order represents '0' with '7080'
c Var 'aux1319' direct represents '0' with '7080'
c Var 'aux1319' order represents '1' with '7081'
-7080 7081 0
c Var 'aux1319' direct represents '1' with '7082'
7080 -7081 7082 0
-7082 7081 0
-7082 -7080 0
c Var 'aux1319' direct represents '2' with '-7081'
7080 7082 -7081 0
c Encoding variable: aux1320 with domain: int(0..2) (representing constraint ((agrid_00006_00003=2) + (agrid_00007_00001=2)))
c Both direct and order encoding.
c Var 'aux1320' order represents '0' with '7083'
c Var 'aux1320' direct represents '0' with '7083'
c Var 'aux1320' order represents '1' with '7084'
-7083 7084 0
c Var 'aux1320' direct represents '1' with '7085'
7083 -7084 7085 0
-7085 7084 0
-7085 -7083 0
c Var 'aux1320' direct represents '2' with '-7084'
7083 7085 -7084 0
c Encoding variable: aux1321 with domain: int(0..2) (representing constraint ((agrid_00006_00002=2) + (agrid_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux1321' order represents '0' with '7086'
c Var 'aux1321' direct represents '0' with '7086'
c Var 'aux1321' order represents '1' with '7087'
-7086 7087 0
c Var 'aux1321' direct represents '1' with '7088'
7086 -7087 7088 0
-7088 7087 0
-7088 -7086 0
c Var 'aux1321' direct represents '2' with '-7087'
7086 7088 -7087 0
c Encoding variable: aux1322 with domain: int(0..2) (representing constraint ((agrid_00006_00001=2) + (agrid_00003_00003=2)))
c Both direct and order encoding.
c Var 'aux1322' order represents '0' with '7089'
c Var 'aux1322' direct represents '0' with '7089'
c Var 'aux1322' order represents '1' with '7090'
-7089 7090 0
c Var 'aux1322' direct represents '1' with '7091'
7089 -7090 7091 0
-7091 7090 0
-7091 -7089 0
c Var 'aux1322' direct represents '2' with '-7090'
7089 7091 -7090 0
c Encoding variable: aux1323 with domain: int(0..2) (representing constraint ((agrid_00001_00008=2) + (agrid_00002_00001=2)))
c Both direct and order encoding.
c Var 'aux1323' order represents '0' with '7092'
c Var 'aux1323' direct represents '0' with '7092'
c Var 'aux1323' order represents '1' with '7093'
-7092 7093 0
c Var 'aux1323' direct represents '1' with '7094'
7092 -7093 7094 0
-7094 7093 0
-7094 -7092 0
c Var 'aux1323' direct represents '2' with '-7093'
7092 7094 -7093 0
c Encoding variable: aux1324 with domain: int(0..2) (representing constraint ((agrid_00001_00007=2) + (agrid_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux1324' order represents '0' with '7095'
c Var 'aux1324' direct represents '0' with '7095'
c Var 'aux1324' order represents '1' with '7096'
-7095 7096 0
c Var 'aux1324' direct represents '1' with '7097'
7095 -7096 7097 0
-7097 7096 0
-7097 -7095 0
c Var 'aux1324' direct represents '2' with '-7096'
7095 7097 -7096 0
c Encoding variable: aux1325 with domain: int(0..2) (representing constraint ((agrid_00001_00006=2) + (agrid_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux1325' order represents '0' with '7098'
c Var 'aux1325' direct represents '0' with '7098'
c Var 'aux1325' order represents '1' with '7099'
-7098 7099 0
c Var 'aux1325' direct represents '1' with '7100'
7098 -7099 7100 0
-7100 7099 0
-7100 -7098 0
c Var 'aux1325' direct represents '2' with '-7099'
7098 7100 -7099 0
c Encoding variable: aux1326 with domain: int(0..2) (representing constraint ((agrid_00001_00005=2) + (agrid_00003_00005=2)))
c Both direct and order encoding.
c Var 'aux1326' order represents '0' with '7101'
c Var 'aux1326' direct represents '0' with '7101'
c Var 'aux1326' order represents '1' with '7102'
-7101 7102 0
c Var 'aux1326' direct represents '1' with '7103'
7101 -7102 7103 0
-7103 7102 0
-7103 -7101 0
c Var 'aux1326' direct represents '2' with '-7102'
7101 7103 -7102 0
c Encoding variable: aux1327 with domain: int(0..2) (representing constraint ((agrid_00001_00004=2) + (agrid_00007_00003=2)))
c Both direct and order encoding.
c Var 'aux1327' order represents '0' with '7104'
c Var 'aux1327' direct represents '0' with '7104'
c Var 'aux1327' order represents '1' with '7105'
-7104 7105 0
c Var 'aux1327' direct represents '1' with '7106'
7104 -7105 7106 0
-7106 7105 0
-7106 -7104 0
c Var 'aux1327' direct represents '2' with '-7105'
7104 7106 -7105 0
c Encoding variable: aux1328 with domain: int(0..2) (representing constraint ((agrid_00001_00003=2) + (agrid_00003_00006=2)))
c Both direct and order encoding.
c Var 'aux1328' order represents '0' with '7107'
c Var 'aux1328' direct represents '0' with '7107'
c Var 'aux1328' order represents '1' with '7108'
-7107 7108 0
c Var 'aux1328' direct represents '1' with '7109'
7107 -7108 7109 0
-7109 7108 0
-7109 -7107 0
c Var 'aux1328' direct represents '2' with '-7108'
7107 7109 -7108 0
c Encoding variable: aux1329 with domain: int(0..2) (representing constraint ((agrid_00001_00002=2) + (agrid_00003_00007=2)))
c Both direct and order encoding.
c Var 'aux1329' order represents '0' with '7110'
c Var 'aux1329' direct represents '0' with '7110'
c Var 'aux1329' order represents '1' with '7111'
-7110 7111 0
c Var 'aux1329' direct represents '1' with '7112'
7110 -7111 7112 0
-7112 7111 0
-7112 -7110 0
c Var 'aux1329' direct represents '2' with '-7111'
7110 7112 -7111 0
c Encoding variable: aux1330 with domain: int(0..2) (representing constraint ((agrid_00001_00001=2) + (agrid_00004_00005=2)))
c Both direct and order encoding.
c Var 'aux1330' order represents '0' with '7113'
c Var 'aux1330' direct represents '0' with '7113'
c Var 'aux1330' order represents '1' with '7114'
-7113 7114 0
c Var 'aux1330' direct represents '1' with '7115'
7113 -7114 7115 0
-7115 7114 0
-7115 -7113 0
c Var 'aux1330' direct represents '2' with '-7114'
7113 7115 -7114 0
c Encoding variable: aux1331 with domain: int(0..2) (representing constraint ((agrid_00008_00008=2) + (agrid_00002_00002=2)))
c Both direct and order encoding.
c Var 'aux1331' order represents '0' with '7116'
c Var 'aux1331' direct represents '0' with '7116'
c Var 'aux1331' order represents '1' with '7117'
-7116 7117 0
c Var 'aux1331' direct represents '1' with '7118'
7116 -7117 7118 0
-7118 7117 0
-7118 -7116 0
c Var 'aux1331' direct represents '2' with '-7117'
7116 7118 -7117 0
c Encoding variable: aux1332 with domain: int(0..2) (representing constraint ((agrid_00008_00007=2) + (agrid_00007_00004=2)))
c Both direct and order encoding.
c Var 'aux1332' order represents '0' with '7119'
c Var 'aux1332' direct represents '0' with '7119'
c Var 'aux1332' order represents '1' with '7120'
-7119 7120 0
c Var 'aux1332' direct represents '1' with '7121'
7119 -7120 7121 0
-7121 7120 0
-7121 -7119 0
c Var 'aux1332' direct represents '2' with '-7120'
7119 7121 -7120 0
c Encoding variable: aux1333 with domain: int(0..2) (representing constraint ((agrid_00008_00006=2) + (agrid_00003_00008=2)))
c Both direct and order encoding.
c Var 'aux1333' order represents '0' with '7122'
c Var 'aux1333' direct represents '0' with '7122'
c Var 'aux1333' order represents '1' with '7123'
-7122 7123 0
c Var 'aux1333' direct represents '1' with '7124'
7122 -7123 7124 0
-7124 7123 0
-7124 -7122 0
c Var 'aux1333' direct represents '2' with '-7123'
7122 7124 -7123 0
c Encoding variable: aux1334 with domain: int(0..2) (representing constraint ((agrid_00008_00005=2) + (agrid_00008_00001=2)))
c Both direct and order encoding.
c Var 'aux1334' order represents '0' with '7125'
c Var 'aux1334' direct represents '0' with '7125'
c Var 'aux1334' order represents '1' with '7126'
-7125 7126 0
c Var 'aux1334' direct represents '1' with '7127'
7125 -7126 7127 0
-7127 7126 0
-7127 -7125 0
c Var 'aux1334' direct represents '2' with '-7126'
7125 7127 -7126 0
c Encoding variable: aux1335 with domain: int(0..2) (representing constraint ((agrid_00008_00004=2) + (agrid_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux1335' order represents '0' with '7128'
c Var 'aux1335' direct represents '0' with '7128'
c Var 'aux1335' order represents '1' with '7129'
-7128 7129 0
c Var 'aux1335' direct represents '1' with '7130'
7128 -7129 7130 0
-7130 7129 0
-7130 -7128 0
c Var 'aux1335' direct represents '2' with '-7129'
7128 7130 -7129 0
c Encoding variable: aux1336 with domain: int(0..2) (representing constraint ((agrid_00008_00002=2) + (agrid_00008_00003=2)))
c Both direct and order encoding.
c Var 'aux1336' order represents '0' with '7131'
c Var 'aux1336' direct represents '0' with '7131'
c Var 'aux1336' order represents '1' with '7132'
-7131 7132 0
c Var 'aux1336' direct represents '1' with '7133'
7131 -7132 7133 0
-7133 7132 0
-7133 -7131 0
c Var 'aux1336' direct represents '2' with '-7132'
7131 7133 -7132 0
c Encoding variable: aux1337 with domain: int(0..2) (representing constraint ((agrid_00002_00003=2) + (agrid_00007_00006=2)))
c Both direct and order encoding.
c Var 'aux1337' order represents '0' with '7134'
c Var 'aux1337' direct represents '0' with '7134'
c Var 'aux1337' order represents '1' with '7135'
-7134 7135 0
c Var 'aux1337' direct represents '1' with '7136'
7134 -7135 7136 0
-7136 7135 0
-7136 -7134 0
c Var 'aux1337' direct represents '2' with '-7135'
7134 7136 -7135 0
c Encoding variable: aux1338 with domain: int(0..2) (representing constraint ((agrid_00007_00007=2) + (agrid_00004_00003=2)))
c Both direct and order encoding.
c Var 'aux1338' order represents '0' with '7137'
c Var 'aux1338' direct represents '0' with '7137'
c Var 'aux1338' order represents '1' with '7138'
-7137 7138 0
c Var 'aux1338' direct represents '1' with '7139'
7137 -7138 7139 0
-7139 7138 0
-7139 -7137 0
c Var 'aux1338' direct represents '2' with '-7138'
7137 7139 -7138 0
c Encoding variable: aux1339 with domain: int(0..2) (representing constraint ((agrid_00004_00006=2) + (agrid_00002_00004=2)))
c Both direct and order encoding.
c Var 'aux1339' order represents '0' with '7140'
c Var 'aux1339' direct represents '0' with '7140'
c Var 'aux1339' order represents '1' with '7141'
-7140 7141 0
c Var 'aux1339' direct represents '1' with '7142'
7140 -7141 7142 0
-7142 7141 0
-7142 -7140 0
c Var 'aux1339' direct represents '2' with '-7141'
7140 7142 -7141 0
c Encoding variable: aux1340 with domain: int(0..2) (representing constraint ((agrid_00007_00008=2) + (agrid_00005_00001=2)))
c Both direct and order encoding.
c Var 'aux1340' order represents '0' with '7143'
c Var 'aux1340' direct represents '0' with '7143'
c Var 'aux1340' order represents '1' with '7144'
-7143 7144 0
c Var 'aux1340' direct represents '1' with '7145'
7143 -7144 7145 0
-7145 7144 0
-7145 -7143 0
c Var 'aux1340' direct represents '2' with '-7144'
7143 7145 -7144 0
c Encoding variable: aux1341 with domain: int(0..2) (representing constraint ((agrid_00002_00005=2) + (agrid_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux1341' order represents '0' with '7146'
c Var 'aux1341' direct represents '0' with '7146'
c Var 'aux1341' order represents '1' with '7147'
-7146 7147 0
c Var 'aux1341' direct represents '1' with '7148'
7146 -7147 7148 0
-7148 7147 0
-7148 -7146 0
c Var 'aux1341' direct represents '2' with '-7147'
7146 7148 -7147 0
c Encoding variable: aux1342 with domain: int(0..2) (representing constraint ((agrid_00005_00003=2) + (agrid_00004_00007=2)))
c Both direct and order encoding.
c Var 'aux1342' order represents '0' with '7149'
c Var 'aux1342' direct represents '0' with '7149'
c Var 'aux1342' order represents '1' with '7150'
-7149 7150 0
c Var 'aux1342' direct represents '1' with '7151'
7149 -7150 7151 0
-7151 7150 0
-7151 -7149 0
c Var 'aux1342' direct represents '2' with '-7150'
7149 7151 -7150 0
c Encoding variable: aux1343 with domain: int(0..2) (representing constraint ((agrid_00002_00006=2) + (agrid_00005_00004=2)))
c Both direct and order encoding.
c Var 'aux1343' order represents '0' with '7152'
c Var 'aux1343' direct represents '0' with '7152'
c Var 'aux1343' order represents '1' with '7153'
-7152 7153 0
c Var 'aux1343' direct represents '1' with '7154'
7152 -7153 7154 0
-7154 7153 0
-7154 -7152 0
c Var 'aux1343' direct represents '2' with '-7153'
7152 7154 -7153 0
c Encoding variable: aux1344 with domain: int(0..2) (representing constraint ((agrid_00005_00005=2) + (agrid_00002_00007=2)))
c Both direct and order encoding.
c Var 'aux1344' order represents '0' with '7155'
c Var 'aux1344' direct represents '0' with '7155'
c Var 'aux1344' order represents '1' with '7156'
-7155 7156 0
c Var 'aux1344' direct represents '1' with '7157'
7155 -7156 7157 0
-7157 7156 0
-7157 -7155 0
c Var 'aux1344' direct represents '2' with '-7156'
7155 7157 -7156 0
c Encoding variable: aux1345 with domain: int(0..2) (representing constraint ((agrid_00005_00006=2) + (agrid_00005_00007=2)))
c Both direct and order encoding.
c Var 'aux1345' order represents '0' with '7158'
c Var 'aux1345' direct represents '0' with '7158'
c Var 'aux1345' order represents '1' with '7159'
-7158 7159 0
c Var 'aux1345' direct represents '1' with '7160'
7158 -7159 7160 0
-7160 7159 0
-7160 -7158 0
c Var 'aux1345' direct represents '2' with '-7159'
7158 7160 -7159 0
c Encoding variable: aux1346 with domain: int(0..4) (representing constraint (aux1329 + aux1345))
c Both direct and order encoding.
c Var 'aux1346' order represents '0' with '7161'
c Var 'aux1346' direct represents '0' with '7161'
c Var 'aux1346' order represents '1' with '7162'
-7161 7162 0
c Var 'aux1346' direct represents '1' with '7163'
7161 -7162 7163 0
-7163 7162 0
-7163 -7161 0
c Var 'aux1346' order represents '2' with '7164'
-7162 7164 0
c Var 'aux1346' direct represents '2' with '7165'
7162 -7164 7165 0
-7165 7164 0
-7165 -7162 0
c Var 'aux1346' order represents '3' with '7166'
-7164 7166 0
c Var 'aux1346' direct represents '3' with '7167'
7164 -7166 7167 0
-7167 7166 0
-7167 -7164 0
c Var 'aux1346' direct represents '4' with '-7166'
7161 7163 7165 7167 -7166 0
c Encoding variable: aux1347 with domain: int(0..4) (representing constraint (aux1327 + aux1319))
c Both direct and order encoding.
c Var 'aux1347' order represents '0' with '7168'
c Var 'aux1347' direct represents '0' with '7168'
c Var 'aux1347' order represents '1' with '7169'
-7168 7169 0
c Var 'aux1347' direct represents '1' with '7170'
7168 -7169 7170 0
-7170 7169 0
-7170 -7168 0
c Var 'aux1347' order represents '2' with '7171'
-7169 7171 0
c Var 'aux1347' direct represents '2' with '7172'
7169 -7171 7172 0
-7172 7171 0
-7172 -7169 0
c Var 'aux1347' order represents '3' with '7173'
-7171 7173 0
c Var 'aux1347' direct represents '3' with '7174'
7171 -7173 7174 0
-7174 7173 0
-7174 -7171 0
c Var 'aux1347' direct represents '4' with '-7173'
7168 7170 7172 7174 -7173 0
c Encoding variable: aux1348 with domain: int(0..4) (representing constraint (aux1317 + aux1315))
c Both direct and order encoding.
c Var 'aux1348' order represents '0' with '7175'
c Var 'aux1348' direct represents '0' with '7175'
c Var 'aux1348' order represents '1' with '7176'
-7175 7176 0
c Var 'aux1348' direct represents '1' with '7177'
7175 -7176 7177 0
-7177 7176 0
-7177 -7175 0
c Var 'aux1348' order represents '2' with '7178'
-7176 7178 0
c Var 'aux1348' direct represents '2' with '7179'
7176 -7178 7179 0
-7179 7178 0
-7179 -7176 0
c Var 'aux1348' order represents '3' with '7180'
-7178 7180 0
c Var 'aux1348' direct represents '3' with '7181'
7178 -7180 7181 0
-7181 7180 0
-7181 -7178 0
c Var 'aux1348' direct represents '4' with '-7180'
7175 7177 7179 7181 -7180 0
c Encoding variable: aux1349 with domain: int(0..4) (representing constraint (aux1342 + aux1314))
c Both direct and order encoding.
c Var 'aux1349' order represents '0' with '7182'
c Var 'aux1349' direct represents '0' with '7182'
c Var 'aux1349' order represents '1' with '7183'
-7182 7183 0
c Var 'aux1349' direct represents '1' with '7184'
7182 -7183 7184 0
-7184 7183 0
-7184 -7182 0
c Var 'aux1349' order represents '2' with '7185'
-7183 7185 0
c Var 'aux1349' direct represents '2' with '7186'
7183 -7185 7186 0
-7186 7185 0
-7186 -7183 0
c Var 'aux1349' order represents '3' with '7187'
-7185 7187 0
c Var 'aux1349' direct represents '3' with '7188'
7185 -7187 7188 0
-7188 7187 0
-7188 -7185 0
c Var 'aux1349' direct represents '4' with '-7187'
7182 7184 7186 7188 -7187 0
c Encoding variable: aux1350 with domain: int(0..4) (representing constraint (aux1341 + aux1318))
c Both direct and order encoding.
c Var 'aux1350' order represents '0' with '7189'
c Var 'aux1350' direct represents '0' with '7189'
c Var 'aux1350' order represents '1' with '7190'
-7189 7190 0
c Var 'aux1350' direct represents '1' with '7191'
7189 -7190 7191 0
-7191 7190 0
-7191 -7189 0
c Var 'aux1350' order represents '2' with '7192'
-7190 7192 0
c Var 'aux1350' direct represents '2' with '7193'
7190 -7192 7193 0
-7193 7192 0
-7193 -7190 0
c Var 'aux1350' order represents '3' with '7194'
-7192 7194 0
c Var 'aux1350' direct represents '3' with '7195'
7192 -7194 7195 0
-7195 7194 0
-7195 -7192 0
c Var 'aux1350' direct represents '4' with '-7194'
7189 7191 7193 7195 -7194 0
c Encoding variable: aux1351 with domain: int(0..4) (representing constraint (aux1321 + aux1326))
c Both direct and order encoding.
c Var 'aux1351' order represents '0' with '7196'
c Var 'aux1351' direct represents '0' with '7196'
c Var 'aux1351' order represents '1' with '7197'
-7196 7197 0
c Var 'aux1351' direct represents '1' with '7198'
7196 -7197 7198 0
-7198 7197 0
-7198 -7196 0
c Var 'aux1351' order represents '2' with '7199'
-7197 7199 0
c Var 'aux1351' direct represents '2' with '7200'
7197 -7199 7200 0
-7200 7199 0
-7200 -7197 0
c Var 'aux1351' order represents '3' with '7201'
-7199 7201 0
c Var 'aux1351' direct represents '3' with '7202'
7199 -7201 7202 0
-7202 7201 0
-7202 -7199 0
c Var 'aux1351' direct represents '4' with '-7201'
7196 7198 7200 7202 -7201 0
c Encoding variable: aux1352 with domain: int(0..4) (representing constraint (aux1339 + aux1322))
c Both direct and order encoding.
c Var 'aux1352' order represents '0' with '7203'
c Var 'aux1352' direct represents '0' with '7203'
c Var 'aux1352' order represents '1' with '7204'
-7203 7204 0
c Var 'aux1352' direct represents '1' with '7205'
7203 -7204 7205 0
-7205 7204 0
-7205 -7203 0
c Var 'aux1352' order represents '2' with '7206'
-7204 7206 0
c Var 'aux1352' direct represents '2' with '7207'
7204 -7206 7207 0
-7207 7206 0
-7207 -7204 0
c Var 'aux1352' order represents '3' with '7208'
-7206 7208 0
c Var 'aux1352' direct represents '3' with '7209'
7206 -7208 7209 0
-7209 7208 0
-7209 -7206 0
c Var 'aux1352' direct represents '4' with '-7208'
7203 7205 7207 7209 -7208 0
c Encoding variable: aux1353 with domain: int(0..4) (representing constraint (aux1324 + aux1325))
c Both direct and order encoding.
c Var 'aux1353' order represents '0' with '7210'
c Var 'aux1353' direct represents '0' with '7210'
c Var 'aux1353' order represents '1' with '7211'
-7210 7211 0
c Var 'aux1353' direct represents '1' with '7212'
7210 -7211 7212 0
-7212 7211 0
-7212 -7210 0
c Var 'aux1353' order represents '2' with '7213'
-7211 7213 0
c Var 'aux1353' direct represents '2' with '7214'
7211 -7213 7214 0
-7214 7213 0
-7214 -7211 0
c Var 'aux1353' order represents '3' with '7215'
-7213 7215 0
c Var 'aux1353' direct represents '3' with '7216'
7213 -7215 7216 0
-7216 7215 0
-7216 -7213 0
c Var 'aux1353' direct represents '4' with '-7215'
7210 7212 7214 7216 -7215 0
c Encoding variable: aux1354 with domain: int(0..4) (representing constraint (aux1328 + aux1336))
c Both direct and order encoding.
c Var 'aux1354' order represents '0' with '7217'
c Var 'aux1354' direct represents '0' with '7217'
c Var 'aux1354' order represents '1' with '7218'
-7217 7218 0
c Var 'aux1354' direct represents '1' with '7219'
7217 -7218 7219 0
-7219 7218 0
-7219 -7217 0
c Var 'aux1354' order represents '2' with '7220'
-7218 7220 0
c Var 'aux1354' direct represents '2' with '7221'
7218 -7220 7221 0
-7221 7220 0
-7221 -7218 0
c Var 'aux1354' order represents '3' with '7222'
-7220 7222 0
c Var 'aux1354' direct represents '3' with '7223'
7220 -7222 7223 0
-7223 7222 0
-7223 -7220 0
c Var 'aux1354' direct represents '4' with '-7222'
7217 7219 7221 7223 -7222 0
c Encoding variable: aux1355 with domain: int(0..4) (representing constraint (aux1337 + aux1334))
c Both direct and order encoding.
c Var 'aux1355' order represents '0' with '7224'
c Var 'aux1355' direct represents '0' with '7224'
c Var 'aux1355' order represents '1' with '7225'
-7224 7225 0
c Var 'aux1355' direct represents '1' with '7226'
7224 -7225 7226 0
-7226 7225 0
-7226 -7224 0
c Var 'aux1355' order represents '2' with '7227'
-7225 7227 0
c Var 'aux1355' direct represents '2' with '7228'
7225 -7227 7228 0
-7228 7227 0
-7228 -7225 0
c Var 'aux1355' order represents '3' with '7229'
-7227 7229 0
c Var 'aux1355' direct represents '3' with '7230'
7227 -7229 7230 0
-7230 7229 0
-7230 -7227 0
c Var 'aux1355' direct represents '4' with '-7229'
7224 7226 7228 7230 -7229 0
c Encoding variable: aux1356 with domain: int(0..4) (representing constraint (aux1335 + aux1330))
c Both direct and order encoding.
c Var 'aux1356' order represents '0' with '7231'
c Var 'aux1356' direct represents '0' with '7231'
c Var 'aux1356' order represents '1' with '7232'
-7231 7232 0
c Var 'aux1356' direct represents '1' with '7233'
7231 -7232 7233 0
-7233 7232 0
-7233 -7231 0
c Var 'aux1356' order represents '2' with '7234'
-7232 7234 0
c Var 'aux1356' direct represents '2' with '7235'
7232 -7234 7235 0
-7235 7234 0
-7235 -7232 0
c Var 'aux1356' order represents '3' with '7236'
-7234 7236 0
c Var 'aux1356' direct represents '3' with '7237'
7234 -7236 7237 0
-7237 7236 0
-7237 -7234 0
c Var 'aux1356' direct represents '4' with '-7236'
7231 7233 7235 7237 -7236 0
c Encoding variable: aux1357 with domain: int(0..4) (representing constraint (aux1333 + aux1331))
c Both direct and order encoding.
c Var 'aux1357' order represents '0' with '7238'
c Var 'aux1357' direct represents '0' with '7238'
c Var 'aux1357' order represents '1' with '7239'
-7238 7239 0
c Var 'aux1357' direct represents '1' with '7240'
7238 -7239 7240 0
-7240 7239 0
-7240 -7238 0
c Var 'aux1357' order represents '2' with '7241'
-7239 7241 0
c Var 'aux1357' direct represents '2' with '7242'
7239 -7241 7242 0
-7242 7241 0
-7242 -7239 0
c Var 'aux1357' order represents '3' with '7243'
-7241 7243 0
c Var 'aux1357' direct represents '3' with '7244'
7241 -7243 7244 0
-7244 7243 0
-7244 -7241 0
c Var 'aux1357' direct represents '4' with '-7243'
7238 7240 7242 7244 -7243 0
c Encoding variable: aux1358 with domain: int(0..4) (representing constraint (aux1332 + aux1344))
c Both direct and order encoding.
c Var 'aux1358' order represents '0' with '7245'
c Var 'aux1358' direct represents '0' with '7245'
c Var 'aux1358' order represents '1' with '7246'
-7245 7246 0
c Var 'aux1358' direct represents '1' with '7247'
7245 -7246 7247 0
-7247 7246 0
-7247 -7245 0
c Var 'aux1358' order represents '2' with '7248'
-7246 7248 0
c Var 'aux1358' direct represents '2' with '7249'
7246 -7248 7249 0
-7249 7248 0
-7249 -7246 0
c Var 'aux1358' order represents '3' with '7250'
-7248 7250 0
c Var 'aux1358' direct represents '3' with '7251'
7248 -7250 7251 0
-7251 7250 0
-7251 -7248 0
c Var 'aux1358' direct represents '4' with '-7250'
7245 7247 7249 7251 -7250 0
c Encoding variable: aux1359 with domain: int(0..4) (representing constraint (aux1340 + aux1338))
c Both direct and order encoding.
c Var 'aux1359' order represents '0' with '7252'
c Var 'aux1359' direct represents '0' with '7252'
c Var 'aux1359' order represents '1' with '7253'
-7252 7253 0
c Var 'aux1359' direct represents '1' with '7254'
7252 -7253 7254 0
-7254 7253 0
-7254 -7252 0
c Var 'aux1359' order represents '2' with '7255'
-7253 7255 0
c Var 'aux1359' direct represents '2' with '7256'
7253 -7255 7256 0
-7256 7255 0
-7256 -7253 0
c Var 'aux1359' order represents '3' with '7257'
-7255 7257 0
c Var 'aux1359' direct represents '3' with '7258'
7255 -7257 7258 0
-7258 7257 0
-7258 -7255 0
c Var 'aux1359' direct represents '4' with '-7257'
7252 7254 7256 7258 -7257 0
c Encoding variable: aux1360 with domain: int(0..4) (representing constraint (aux1323 + aux1316))
c Both direct and order encoding.
c Var 'aux1360' order represents '0' with '7259'
c Var 'aux1360' direct represents '0' with '7259'
c Var 'aux1360' order represents '1' with '7260'
-7259 7260 0
c Var 'aux1360' direct represents '1' with '7261'
7259 -7260 7261 0
-7261 7260 0
-7261 -7259 0
c Var 'aux1360' order represents '2' with '7262'
-7260 7262 0
c Var 'aux1360' direct represents '2' with '7263'
7260 -7262 7263 0
-7263 7262 0
-7263 -7260 0
c Var 'aux1360' order represents '3' with '7264'
-7262 7264 0
c Var 'aux1360' direct represents '3' with '7265'
7262 -7264 7265 0
-7265 7264 0
-7265 -7262 0
c Var 'aux1360' direct represents '4' with '-7264'
7259 7261 7263 7265 -7264 0
c Encoding variable: aux1361 with domain: int(0..4) (representing constraint (aux1320 + aux1343))
c Both direct and order encoding.
c Var 'aux1361' order represents '0' with '7266'
c Var 'aux1361' direct represents '0' with '7266'
c Var 'aux1361' order represents '1' with '7267'
-7266 7267 0
c Var 'aux1361' direct represents '1' with '7268'
7266 -7267 7268 0
-7268 7267 0
-7268 -7266 0
c Var 'aux1361' order represents '2' with '7269'
-7267 7269 0
c Var 'aux1361' direct represents '2' with '7270'
7267 -7269 7270 0
-7270 7269 0
-7270 -7267 0
c Var 'aux1361' order represents '3' with '7271'
-7269 7271 0
c Var 'aux1361' direct represents '3' with '7272'
7269 -7271 7272 0
-7272 7271 0
-7272 -7269 0
c Var 'aux1361' direct represents '4' with '-7271'
7266 7268 7270 7272 -7271 0
c Encoding variable: aux1362 with domain: int(0..8) (representing constraint (aux1353 + aux1361))
c Both direct and order encoding.
c Var 'aux1362' order represents '0' with '7273'
c Var 'aux1362' direct represents '0' with '7273'
c Var 'aux1362' order represents '1' with '7274'
-7273 7274 0
c Var 'aux1362' direct represents '1' with '7275'
7273 -7274 7275 0
-7275 7274 0
-7275 -7273 0
c Var 'aux1362' order represents '2' with '7276'
-7274 7276 0
c Var 'aux1362' direct represents '2' with '7277'
7274 -7276 7277 0
-7277 7276 0
-7277 -7274 0
c Var 'aux1362' order represents '3' with '7278'
-7276 7278 0
c Var 'aux1362' direct represents '3' with '7279'
7276 -7278 7279 0
-7279 7278 0
-7279 -7276 0
c Var 'aux1362' order represents '4' with '7280'
-7278 7280 0
c Var 'aux1362' direct represents '4' with '7281'
7278 -7280 7281 0
-7281 7280 0
-7281 -7278 0
c Var 'aux1362' order represents '5' with '7282'
-7280 7282 0
c Var 'aux1362' direct represents '5' with '7283'
7280 -7282 7283 0
-7283 7282 0
-7283 -7280 0
c Var 'aux1362' order represents '6' with '7284'
-7282 7284 0
c Var 'aux1362' direct represents '6' with '7285'
7282 -7284 7285 0
-7285 7284 0
-7285 -7282 0
c Var 'aux1362' order represents '7' with '7286'
-7284 7286 0
c Var 'aux1362' direct represents '7' with '7287'
7284 -7286 7287 0
-7287 7286 0
-7287 -7284 0
c Var 'aux1362' direct represents '8' with '-7286'
7273 7275 7277 7279 7281 7283 7285 7287 -7286 0
c Encoding variable: aux1363 with domain: int(0..8) (representing constraint (aux1351 + aux1347))
c Both direct and order encoding.
c Var 'aux1363' order represents '0' with '7288'
c Var 'aux1363' direct represents '0' with '7288'
c Var 'aux1363' order represents '1' with '7289'
-7288 7289 0
c Var 'aux1363' direct represents '1' with '7290'
7288 -7289 7290 0
-7290 7289 0
-7290 -7288 0
c Var 'aux1363' order represents '2' with '7291'
-7289 7291 0
c Var 'aux1363' direct represents '2' with '7292'
7289 -7291 7292 0
-7292 7291 0
-7292 -7289 0
c Var 'aux1363' order represents '3' with '7293'
-7291 7293 0
c Var 'aux1363' direct represents '3' with '7294'
7291 -7293 7294 0
-7294 7293 0
-7294 -7291 0
c Var 'aux1363' order represents '4' with '7295'
-7293 7295 0
c Var 'aux1363' direct represents '4' with '7296'
7293 -7295 7296 0
-7296 7295 0
-7296 -7293 0
c Var 'aux1363' order represents '5' with '7297'
-7295 7297 0
c Var 'aux1363' direct represents '5' with '7298'
7295 -7297 7298 0
-7298 7297 0
-7298 -7295 0
c Var 'aux1363' order represents '6' with '7299'
-7297 7299 0
c Var 'aux1363' direct represents '6' with '7300'
7297 -7299 7300 0
-7300 7299 0
-7300 -7297 0
c Var 'aux1363' order represents '7' with '7301'
-7299 7301 0
c Var 'aux1363' direct represents '7' with '7302'
7299 -7301 7302 0
-7302 7301 0
-7302 -7299 0
c Var 'aux1363' direct represents '8' with '-7301'
7288 7290 7292 7294 7296 7298 7300 7302 -7301 0
c Encoding variable: aux1364 with domain: int(0..8) (representing constraint (aux1359 + aux1346))
c Both direct and order encoding.
c Var 'aux1364' order represents '0' with '7303'
c Var 'aux1364' direct represents '0' with '7303'
c Var 'aux1364' order represents '1' with '7304'
-7303 7304 0
c Var 'aux1364' direct represents '1' with '7305'
7303 -7304 7305 0
-7305 7304 0
-7305 -7303 0
c Var 'aux1364' order represents '2' with '7306'
-7304 7306 0
c Var 'aux1364' direct represents '2' with '7307'
7304 -7306 7307 0
-7307 7306 0
-7307 -7304 0
c Var 'aux1364' order represents '3' with '7308'
-7306 7308 0
c Var 'aux1364' direct represents '3' with '7309'
7306 -7308 7309 0
-7309 7308 0
-7309 -7306 0
c Var 'aux1364' order represents '4' with '7310'
-7308 7310 0
c Var 'aux1364' direct represents '4' with '7311'
7308 -7310 7311 0
-7311 7310 0
-7311 -7308 0
c Var 'aux1364' order represents '5' with '7312'
-7310 7312 0
c Var 'aux1364' direct represents '5' with '7313'
7310 -7312 7313 0
-7313 7312 0
-7313 -7310 0
c Var 'aux1364' order represents '6' with '7314'
-7312 7314 0
c Var 'aux1364' direct represents '6' with '7315'
7312 -7314 7315 0
-7315 7314 0
-7315 -7312 0
c Var 'aux1364' order represents '7' with '7316'
-7314 7316 0
c Var 'aux1364' direct represents '7' with '7317'
7314 -7316 7317 0
-7317 7316 0
-7317 -7314 0
c Var 'aux1364' direct represents '8' with '-7316'
7303 7305 7307 7309 7311 7313 7315 7317 -7316 0
c Encoding variable: aux1365 with domain: int(0..8) (representing constraint (aux1349 + aux1350))
c Both direct and order encoding.
c Var 'aux1365' order represents '0' with '7318'
c Var 'aux1365' direct represents '0' with '7318'
c Var 'aux1365' order represents '1' with '7319'
-7318 7319 0
c Var 'aux1365' direct represents '1' with '7320'
7318 -7319 7320 0
-7320 7319 0
-7320 -7318 0
c Var 'aux1365' order represents '2' with '7321'
-7319 7321 0
c Var 'aux1365' direct represents '2' with '7322'
7319 -7321 7322 0
-7322 7321 0
-7322 -7319 0
c Var 'aux1365' order represents '3' with '7323'
-7321 7323 0
c Var 'aux1365' direct represents '3' with '7324'
7321 -7323 7324 0
-7324 7323 0
-7324 -7321 0
c Var 'aux1365' order represents '4' with '7325'
-7323 7325 0
c Var 'aux1365' direct represents '4' with '7326'
7323 -7325 7326 0
-7326 7325 0
-7326 -7323 0
c Var 'aux1365' order represents '5' with '7327'
-7325 7327 0
c Var 'aux1365' direct represents '5' with '7328'
7325 -7327 7328 0
-7328 7327 0
-7328 -7325 0
c Var 'aux1365' order represents '6' with '7329'
-7327 7329 0
c Var 'aux1365' direct represents '6' with '7330'
7327 -7329 7330 0
-7330 7329 0
-7330 -7327 0
c Var 'aux1365' order represents '7' with '7331'
-7329 7331 0
c Var 'aux1365' direct represents '7' with '7332'
7329 -7331 7332 0
-7332 7331 0
-7332 -7329 0
c Var 'aux1365' direct represents '8' with '-7331'
7318 7320 7322 7324 7326 7328 7330 7332 -7331 0
c Encoding variable: aux1366 with domain: int(0..8) (representing constraint (aux1352 + aux1356))
c Both direct and order encoding.
c Var 'aux1366' order represents '0' with '7333'
c Var 'aux1366' direct represents '0' with '7333'
c Var 'aux1366' order represents '1' with '7334'
-7333 7334 0
c Var 'aux1366' direct represents '1' with '7335'
7333 -7334 7335 0
-7335 7334 0
-7335 -7333 0
c Var 'aux1366' order represents '2' with '7336'
-7334 7336 0
c Var 'aux1366' direct represents '2' with '7337'
7334 -7336 7337 0
-7337 7336 0
-7337 -7334 0
c Var 'aux1366' order represents '3' with '7338'
-7336 7338 0
c Var 'aux1366' direct represents '3' with '7339'
7336 -7338 7339 0
-7339 7338 0
-7339 -7336 0
c Var 'aux1366' order represents '4' with '7340'
-7338 7340 0
c Var 'aux1366' direct represents '4' with '7341'
7338 -7340 7341 0
-7341 7340 0
-7341 -7338 0
c Var 'aux1366' order represents '5' with '7342'
-7340 7342 0
c Var 'aux1366' direct represents '5' with '7343'
7340 -7342 7343 0
-7343 7342 0
-7343 -7340 0
c Var 'aux1366' order represents '6' with '7344'
-7342 7344 0
c Var 'aux1366' direct represents '6' with '7345'
7342 -7344 7345 0
-7345 7344 0
-7345 -7342 0
c Var 'aux1366' order represents '7' with '7346'
-7344 7346 0
c Var 'aux1366' direct represents '7' with '7347'
7344 -7346 7347 0
-7347 7346 0
-7347 -7344 0
c Var 'aux1366' direct represents '8' with '-7346'
7333 7335 7337 7339 7341 7343 7345 7347 -7346 0
c Encoding variable: aux1367 with domain: int(0..8) (representing constraint (aux1357 + aux1354))
c Both direct and order encoding.
c Var 'aux1367' order represents '0' with '7348'
c Var 'aux1367' direct represents '0' with '7348'
c Var 'aux1367' order represents '1' with '7349'
-7348 7349 0
c Var 'aux1367' direct represents '1' with '7350'
7348 -7349 7350 0
-7350 7349 0
-7350 -7348 0
c Var 'aux1367' order represents '2' with '7351'
-7349 7351 0
c Var 'aux1367' direct represents '2' with '7352'
7349 -7351 7352 0
-7352 7351 0
-7352 -7349 0
c Var 'aux1367' order represents '3' with '7353'
-7351 7353 0
c Var 'aux1367' direct represents '3' with '7354'
7351 -7353 7354 0
-7354 7353 0
-7354 -7351 0
c Var 'aux1367' order represents '4' with '7355'
-7353 7355 0
c Var 'aux1367' direct represents '4' with '7356'
7353 -7355 7356 0
-7356 7355 0
-7356 -7353 0
c Var 'aux1367' order represents '5' with '7357'
-7355 7357 0
c Var 'aux1367' direct represents '5' with '7358'
7355 -7357 7358 0
-7358 7357 0
-7358 -7355 0
c Var 'aux1367' order represents '6' with '7359'
-7357 7359 0
c Var 'aux1367' direct represents '6' with '7360'
7357 -7359 7360 0
-7360 7359 0
-7360 -7357 0
c Var 'aux1367' order represents '7' with '7361'
-7359 7361 0
c Var 'aux1367' direct represents '7' with '7362'
7359 -7361 7362 0
-7362 7361 0
-7362 -7359 0
c Var 'aux1367' direct represents '8' with '-7361'
7348 7350 7352 7354 7356 7358 7360 7362 -7361 0
c Encoding variable: aux1368 with domain: int(0..8) (representing constraint (aux1355 + aux1360))
c Both direct and order encoding.
c Var 'aux1368' order represents '0' with '7363'
c Var 'aux1368' direct represents '0' with '7363'
c Var 'aux1368' order represents '1' with '7364'
-7363 7364 0
c Var 'aux1368' direct represents '1' with '7365'
7363 -7364 7365 0
-7365 7364 0
-7365 -7363 0
c Var 'aux1368' order represents '2' with '7366'
-7364 7366 0
c Var 'aux1368' direct represents '2' with '7367'
7364 -7366 7367 0
-7367 7366 0
-7367 -7364 0
c Var 'aux1368' order represents '3' with '7368'
-7366 7368 0
c Var 'aux1368' direct represents '3' with '7369'
7366 -7368 7369 0
-7369 7368 0
-7369 -7366 0
c Var 'aux1368' order represents '4' with '7370'
-7368 7370 0
c Var 'aux1368' direct represents '4' with '7371'
7368 -7370 7371 0
-7371 7370 0
-7371 -7368 0
c Var 'aux1368' order represents '5' with '7372'
-7370 7372 0
c Var 'aux1368' direct represents '5' with '7373'
7370 -7372 7373 0
-7373 7372 0
-7373 -7370 0
c Var 'aux1368' order represents '6' with '7374'
-7372 7374 0
c Var 'aux1368' direct represents '6' with '7375'
7372 -7374 7375 0
-7375 7374 0
-7375 -7372 0
c Var 'aux1368' order represents '7' with '7376'
-7374 7376 0
c Var 'aux1368' direct represents '7' with '7377'
7374 -7376 7377 0
-7377 7376 0
-7377 -7374 0
c Var 'aux1368' direct represents '8' with '-7376'
7363 7365 7367 7369 7371 7373 7375 7377 -7376 0
c Encoding variable: aux1369 with domain: int(0..8) (representing constraint (aux1358 + aux1348))
c Both direct and order encoding.
c Var 'aux1369' order represents '0' with '7378'
c Var 'aux1369' direct represents '0' with '7378'
c Var 'aux1369' order represents '1' with '7379'
-7378 7379 0
c Var 'aux1369' direct represents '1' with '7380'
7378 -7379 7380 0
-7380 7379 0
-7380 -7378 0
c Var 'aux1369' order represents '2' with '7381'
-7379 7381 0
c Var 'aux1369' direct represents '2' with '7382'
7379 -7381 7382 0
-7382 7381 0
-7382 -7379 0
c Var 'aux1369' order represents '3' with '7383'
-7381 7383 0
c Var 'aux1369' direct represents '3' with '7384'
7381 -7383 7384 0
-7384 7383 0
-7384 -7381 0
c Var 'aux1369' order represents '4' with '7385'
-7383 7385 0
c Var 'aux1369' direct represents '4' with '7386'
7383 -7385 7386 0
-7386 7385 0
-7386 -7383 0
c Var 'aux1369' order represents '5' with '7387'
-7385 7387 0
c Var 'aux1369' direct represents '5' with '7388'
7385 -7387 7388 0
-7388 7387 0
-7388 -7385 0
c Var 'aux1369' order represents '6' with '7389'
-7387 7389 0
c Var 'aux1369' direct represents '6' with '7390'
7387 -7389 7390 0
-7390 7389 0
-7390 -7387 0
c Var 'aux1369' order represents '7' with '7391'
-7389 7391 0
c Var 'aux1369' direct represents '7' with '7392'
7389 -7391 7392 0
-7392 7391 0
-7392 -7389 0
c Var 'aux1369' direct represents '8' with '-7391'
7378 7380 7382 7384 7386 7388 7390 7392 -7391 0
c Encoding variable: aux1370 with domain: int(0..16) (representing constraint (aux1365 + aux1369))
c Both direct and order encoding.
c Var 'aux1370' order represents '0' with '7393'
c Var 'aux1370' direct represents '0' with '7393'
c Var 'aux1370' order represents '1' with '7394'
-7393 7394 0
c Var 'aux1370' direct represents '1' with '7395'
7393 -7394 7395 0
-7395 7394 0
-7395 -7393 0
c Var 'aux1370' order represents '2' with '7396'
-7394 7396 0
c Var 'aux1370' direct represents '2' with '7397'
7394 -7396 7397 0
-7397 7396 0
-7397 -7394 0
c Var 'aux1370' order represents '3' with '7398'
-7396 7398 0
c Var 'aux1370' direct represents '3' with '7399'
7396 -7398 7399 0
-7399 7398 0
-7399 -7396 0
c Var 'aux1370' order represents '4' with '7400'
-7398 7400 0
c Var 'aux1370' direct represents '4' with '7401'
7398 -7400 7401 0
-7401 7400 0
-7401 -7398 0
c Var 'aux1370' order represents '5' with '7402'
-7400 7402 0
c Var 'aux1370' direct represents '5' with '7403'
7400 -7402 7403 0
-7403 7402 0
-7403 -7400 0
c Var 'aux1370' order represents '6' with '7404'
-7402 7404 0
c Var 'aux1370' direct represents '6' with '7405'
7402 -7404 7405 0
-7405 7404 0
-7405 -7402 0
c Var 'aux1370' order represents '7' with '7406'
-7404 7406 0
c Var 'aux1370' direct represents '7' with '7407'
7404 -7406 7407 0
-7407 7406 0
-7407 -7404 0
c Var 'aux1370' order represents '8' with '7408'
-7406 7408 0
c Var 'aux1370' direct represents '8' with '7409'
7406 -7408 7409 0
-7409 7408 0
-7409 -7406 0
c Var 'aux1370' order represents '9' with '7410'
-7408 7410 0
c Var 'aux1370' direct represents '9' with '7411'
7408 -7410 7411 0
-7411 7410 0
-7411 -7408 0
c Var 'aux1370' order represents '10' with '7412'
-7410 7412 0
c Var 'aux1370' direct represents '10' with '7413'
7410 -7412 7413 0
-7413 7412 0
-7413 -7410 0
c Var 'aux1370' order represents '11' with '7414'
-7412 7414 0
c Var 'aux1370' direct represents '11' with '7415'
7412 -7414 7415 0
-7415 7414 0
-7415 -7412 0
c Var 'aux1370' order represents '12' with '7416'
-7414 7416 0
c Var 'aux1370' direct represents '12' with '7417'
7414 -7416 7417 0
-7417 7416 0
-7417 -7414 0
c Var 'aux1370' order represents '13' with '7418'
-7416 7418 0
c Var 'aux1370' direct represents '13' with '7419'
7416 -7418 7419 0
-7419 7418 0
-7419 -7416 0
c Var 'aux1370' order represents '14' with '7420'
-7418 7420 0
c Var 'aux1370' direct represents '14' with '7421'
7418 -7420 7421 0
-7421 7420 0
-7421 -7418 0
c Var 'aux1370' order represents '15' with '7422'
-7420 7422 0
c Var 'aux1370' direct represents '15' with '7423'
7420 -7422 7423 0
-7423 7422 0
-7423 -7420 0
c Var 'aux1370' direct represents '16' with '-7422'
7393 7395 7397 7399 7401 7403 7405 7407 7409 7411 7413 7415 7417 7419 7421 7423 -7422 0
c Encoding variable: aux1371 with domain: int(0..16) (representing constraint (aux1363 + aux1362))
c Both direct and order encoding.
c Var 'aux1371' order represents '0' with '7424'
c Var 'aux1371' direct represents '0' with '7424'
c Var 'aux1371' order represents '1' with '7425'
-7424 7425 0
c Var 'aux1371' direct represents '1' with '7426'
7424 -7425 7426 0
-7426 7425 0
-7426 -7424 0
c Var 'aux1371' order represents '2' with '7427'
-7425 7427 0
c Var 'aux1371' direct represents '2' with '7428'
7425 -7427 7428 0
-7428 7427 0
-7428 -7425 0
c Var 'aux1371' order represents '3' with '7429'
-7427 7429 0
c Var 'aux1371' direct represents '3' with '7430'
7427 -7429 7430 0
-7430 7429 0
-7430 -7427 0
c Var 'aux1371' order represents '4' with '7431'
-7429 7431 0
c Var 'aux1371' direct represents '4' with '7432'
7429 -7431 7432 0
-7432 7431 0
-7432 -7429 0
c Var 'aux1371' order represents '5' with '7433'
-7431 7433 0
c Var 'aux1371' direct represents '5' with '7434'
7431 -7433 7434 0
-7434 7433 0
-7434 -7431 0
c Var 'aux1371' order represents '6' with '7435'
-7433 7435 0
c Var 'aux1371' direct represents '6' with '7436'
7433 -7435 7436 0
-7436 7435 0
-7436 -7433 0
c Var 'aux1371' order represents '7' with '7437'
-7435 7437 0
c Var 'aux1371' direct represents '7' with '7438'
7435 -7437 7438 0
-7438 7437 0
-7438 -7435 0
c Var 'aux1371' order represents '8' with '7439'
-7437 7439 0
c Var 'aux1371' direct represents '8' with '7440'
7437 -7439 7440 0
-7440 7439 0
-7440 -7437 0
c Var 'aux1371' order represents '9' with '7441'
-7439 7441 0
c Var 'aux1371' direct represents '9' with '7442'
7439 -7441 7442 0
-7442 7441 0
-7442 -7439 0
c Var 'aux1371' order represents '10' with '7443'
-7441 7443 0
c Var 'aux1371' direct represents '10' with '7444'
7441 -7443 7444 0
-7444 7443 0
-7444 -7441 0
c Var 'aux1371' order represents '11' with '7445'
-7443 7445 0
c Var 'aux1371' direct represents '11' with '7446'
7443 -7445 7446 0
-7446 7445 0
-7446 -7443 0
c Var 'aux1371' order represents '12' with '7447'
-7445 7447 0
c Var 'aux1371' direct represents '12' with '7448'
7445 -7447 7448 0
-7448 7447 0
-7448 -7445 0
c Var 'aux1371' order represents '13' with '7449'
-7447 7449 0
c Var 'aux1371' direct represents '13' with '7450'
7447 -7449 7450 0
-7450 7449 0
-7450 -7447 0
c Var 'aux1371' order represents '14' with '7451'
-7449 7451 0
c Var 'aux1371' direct represents '14' with '7452'
7449 -7451 7452 0
-7452 7451 0
-7452 -7449 0
c Var 'aux1371' order represents '15' with '7453'
-7451 7453 0
c Var 'aux1371' direct represents '15' with '7454'
7451 -7453 7454 0
-7454 7453 0
-7454 -7451 0
c Var 'aux1371' direct represents '16' with '-7453'
7424 7426 7428 7430 7432 7434 7436 7438 7440 7442 7444 7446 7448 7450 7452 7454 -7453 0
c Encoding variable: aux1372 with domain: int(0..16) (representing constraint (aux1364 + aux1366))
c Both direct and order encoding.
c Var 'aux1372' order represents '0' with '7455'
c Var 'aux1372' direct represents '0' with '7455'
c Var 'aux1372' order represents '1' with '7456'
-7455 7456 0
c Var 'aux1372' direct represents '1' with '7457'
7455 -7456 7457 0
-7457 7456 0
-7457 -7455 0
c Var 'aux1372' order represents '2' with '7458'
-7456 7458 0
c Var 'aux1372' direct represents '2' with '7459'
7456 -7458 7459 0
-7459 7458 0
-7459 -7456 0
c Var 'aux1372' order represents '3' with '7460'
-7458 7460 0
c Var 'aux1372' direct represents '3' with '7461'
7458 -7460 7461 0
-7461 7460 0
-7461 -7458 0
c Var 'aux1372' order represents '4' with '7462'
-7460 7462 0
c Var 'aux1372' direct represents '4' with '7463'
7460 -7462 7463 0
-7463 7462 0
-7463 -7460 0
c Var 'aux1372' order represents '5' with '7464'
-7462 7464 0
c Var 'aux1372' direct represents '5' with '7465'
7462 -7464 7465 0
-7465 7464 0
-7465 -7462 0
c Var 'aux1372' order represents '6' with '7466'
-7464 7466 0
c Var 'aux1372' direct represents '6' with '7467'
7464 -7466 7467 0
-7467 7466 0
-7467 -7464 0
c Var 'aux1372' order represents '7' with '7468'
-7466 7468 0
c Var 'aux1372' direct represents '7' with '7469'
7466 -7468 7469 0
-7469 7468 0
-7469 -7466 0
c Var 'aux1372' order represents '8' with '7470'
-7468 7470 0
c Var 'aux1372' direct represents '8' with '7471'
7468 -7470 7471 0
-7471 7470 0
-7471 -7468 0
c Var 'aux1372' order represents '9' with '7472'
-7470 7472 0
c Var 'aux1372' direct represents '9' with '7473'
7470 -7472 7473 0
-7473 7472 0
-7473 -7470 0
c Var 'aux1372' order represents '10' with '7474'
-7472 7474 0
c Var 'aux1372' direct represents '10' with '7475'
7472 -7474 7475 0
-7475 7474 0
-7475 -7472 0
c Var 'aux1372' order represents '11' with '7476'
-7474 7476 0
c Var 'aux1372' direct represents '11' with '7477'
7474 -7476 7477 0
-7477 7476 0
-7477 -7474 0
c Var 'aux1372' order represents '12' with '7478'
-7476 7478 0
c Var 'aux1372' direct represents '12' with '7479'
7476 -7478 7479 0
-7479 7478 0
-7479 -7476 0
c Var 'aux1372' order represents '13' with '7480'
-7478 7480 0
c Var 'aux1372' direct represents '13' with '7481'
7478 -7480 7481 0
-7481 7480 0
-7481 -7478 0
c Var 'aux1372' order represents '14' with '7482'
-7480 7482 0
c Var 'aux1372' direct represents '14' with '7483'
7480 -7482 7483 0
-7483 7482 0
-7483 -7480 0
c Var 'aux1372' order represents '15' with '7484'
-7482 7484 0
c Var 'aux1372' direct represents '15' with '7485'
7482 -7484 7485 0
-7485 7484 0
-7485 -7482 0
c Var 'aux1372' direct represents '16' with '-7484'
7455 7457 7459 7461 7463 7465 7467 7469 7471 7473 7475 7477 7479 7481 7483 7485 -7484 0
c Encoding variable: aux1373 with domain: int(0..16) (representing constraint (aux1367 + aux1368))
c Both direct and order encoding.
c Var 'aux1373' order represents '0' with '7486'
c Var 'aux1373' direct represents '0' with '7486'
c Var 'aux1373' order represents '1' with '7487'
-7486 7487 0
c Var 'aux1373' direct represents '1' with '7488'
7486 -7487 7488 0
-7488 7487 0
-7488 -7486 0
c Var 'aux1373' order represents '2' with '7489'
-7487 7489 0
c Var 'aux1373' direct represents '2' with '7490'
7487 -7489 7490 0
-7490 7489 0
-7490 -7487 0
c Var 'aux1373' order represents '3' with '7491'
-7489 7491 0
c Var 'aux1373' direct represents '3' with '7492'
7489 -7491 7492 0
-7492 7491 0
-7492 -7489 0
c Var 'aux1373' order represents '4' with '7493'
-7491 7493 0
c Var 'aux1373' direct represents '4' with '7494'
7491 -7493 7494 0
-7494 7493 0
-7494 -7491 0
c Var 'aux1373' order represents '5' with '7495'
-7493 7495 0
c Var 'aux1373' direct represents '5' with '7496'
7493 -7495 7496 0
-7496 7495 0
-7496 -7493 0
c Var 'aux1373' order represents '6' with '7497'
-7495 7497 0
c Var 'aux1373' direct represents '6' with '7498'
7495 -7497 7498 0
-7498 7497 0
-7498 -7495 0
c Var 'aux1373' order represents '7' with '7499'
-7497 7499 0
c Var 'aux1373' direct represents '7' with '7500'
7497 -7499 7500 0
-7500 7499 0
-7500 -7497 0
c Var 'aux1373' order represents '8' with '7501'
-7499 7501 0
c Var 'aux1373' direct represents '8' with '7502'
7499 -7501 7502 0
-7502 7501 0
-7502 -7499 0
c Var 'aux1373' order represents '9' with '7503'
-7501 7503 0
c Var 'aux1373' direct represents '9' with '7504'
7501 -7503 7504 0
-7504 7503 0
-7504 -7501 0
c Var 'aux1373' order represents '10' with '7505'
-7503 7505 0
c Var 'aux1373' direct represents '10' with '7506'
7503 -7505 7506 0
-7506 7505 0
-7506 -7503 0
c Var 'aux1373' order represents '11' with '7507'
-7505 7507 0
c Var 'aux1373' direct represents '11' with '7508'
7505 -7507 7508 0
-7508 7507 0
-7508 -7505 0
c Var 'aux1373' order represents '12' with '7509'
-7507 7509 0
c Var 'aux1373' direct represents '12' with '7510'
7507 -7509 7510 0
-7510 7509 0
-7510 -7507 0
c Var 'aux1373' order represents '13' with '7511'
-7509 7511 0
c Var 'aux1373' direct represents '13' with '7512'
7509 -7511 7512 0
-7512 7511 0
-7512 -7509 0
c Var 'aux1373' order represents '14' with '7513'
-7511 7513 0
c Var 'aux1373' direct represents '14' with '7514'
7511 -7513 7514 0
-7514 7513 0
-7514 -7511 0
c Var 'aux1373' order represents '15' with '7515'
-7513 7515 0
c Var 'aux1373' direct represents '15' with '7516'
7513 -7515 7516 0
-7516 7515 0
-7516 -7513 0
c Var 'aux1373' direct represents '16' with '-7515'
7486 7488 7490 7492 7494 7496 7498 7500 7502 7504 7506 7508 7510 7512 7514 7516 -7515 0
c Encoding variable: aux1374 with domain: int(0..32) (representing constraint (aux1371 + aux1373))
c Both direct and order encoding.
c Var 'aux1374' order represents '0' with '7517'
c Var 'aux1374' direct represents '0' with '7517'
c Var 'aux1374' order represents '1' with '7518'
-7517 7518 0
c Var 'aux1374' direct represents '1' with '7519'
7517 -7518 7519 0
-7519 7518 0
-7519 -7517 0
c Var 'aux1374' order represents '2' with '7520'
-7518 7520 0
c Var 'aux1374' direct represents '2' with '7521'
7518 -7520 7521 0
-7521 7520 0
-7521 -7518 0
c Var 'aux1374' order represents '3' with '7522'
-7520 7522 0
c Var 'aux1374' direct represents '3' with '7523'
7520 -7522 7523 0
-7523 7522 0
-7523 -7520 0
c Var 'aux1374' order represents '4' with '7524'
-7522 7524 0
c Var 'aux1374' direct represents '4' with '7525'
7522 -7524 7525 0
-7525 7524 0
-7525 -7522 0
c Var 'aux1374' order represents '5' with '7526'
-7524 7526 0
c Var 'aux1374' direct represents '5' with '7527'
7524 -7526 7527 0
-7527 7526 0
-7527 -7524 0
c Var 'aux1374' order represents '6' with '7528'
-7526 7528 0
c Var 'aux1374' direct represents '6' with '7529'
7526 -7528 7529 0
-7529 7528 0
-7529 -7526 0
c Var 'aux1374' order represents '7' with '7530'
-7528 7530 0
c Var 'aux1374' direct represents '7' with '7531'
7528 -7530 7531 0
-7531 7530 0
-7531 -7528 0
c Var 'aux1374' order represents '8' with '7532'
-7530 7532 0
c Var 'aux1374' direct represents '8' with '7533'
7530 -7532 7533 0
-7533 7532 0
-7533 -7530 0
c Var 'aux1374' order represents '9' with '7534'
-7532 7534 0
c Var 'aux1374' direct represents '9' with '7535'
7532 -7534 7535 0
-7535 7534 0
-7535 -7532 0
c Var 'aux1374' order represents '10' with '7536'
-7534 7536 0
c Var 'aux1374' direct represents '10' with '7537'
7534 -7536 7537 0
-7537 7536 0
-7537 -7534 0
c Var 'aux1374' order represents '11' with '7538'
-7536 7538 0
c Var 'aux1374' direct represents '11' with '7539'
7536 -7538 7539 0
-7539 7538 0
-7539 -7536 0
c Var 'aux1374' order represents '12' with '7540'
-7538 7540 0
c Var 'aux1374' direct represents '12' with '7541'
7538 -7540 7541 0
-7541 7540 0
-7541 -7538 0
c Var 'aux1374' order represents '13' with '7542'
-7540 7542 0
c Var 'aux1374' direct represents '13' with '7543'
7540 -7542 7543 0
-7543 7542 0
-7543 -7540 0
c Var 'aux1374' order represents '14' with '7544'
-7542 7544 0
c Var 'aux1374' direct represents '14' with '7545'
7542 -7544 7545 0
-7545 7544 0
-7545 -7542 0
c Var 'aux1374' order represents '15' with '7546'
-7544 7546 0
c Var 'aux1374' direct represents '15' with '7547'
7544 -7546 7547 0
-7547 7546 0
-7547 -7544 0
c Var 'aux1374' order represents '16' with '7548'
-7546 7548 0
c Var 'aux1374' direct represents '16' with '7549'
7546 -7548 7549 0
-7549 7548 0
-7549 -7546 0
c Var 'aux1374' order represents '17' with '7550'
-7548 7550 0
c Var 'aux1374' direct represents '17' with '7551'
7548 -7550 7551 0
-7551 7550 0
-7551 -7548 0
c Var 'aux1374' order represents '18' with '7552'
-7550 7552 0
c Var 'aux1374' direct represents '18' with '7553'
7550 -7552 7553 0
-7553 7552 0
-7553 -7550 0
c Var 'aux1374' order represents '19' with '7554'
-7552 7554 0
c Var 'aux1374' direct represents '19' with '7555'
7552 -7554 7555 0
-7555 7554 0
-7555 -7552 0
c Var 'aux1374' order represents '20' with '7556'
-7554 7556 0
c Var 'aux1374' direct represents '20' with '7557'
7554 -7556 7557 0
-7557 7556 0
-7557 -7554 0
c Var 'aux1374' order represents '21' with '7558'
-7556 7558 0
c Var 'aux1374' direct represents '21' with '7559'
7556 -7558 7559 0
-7559 7558 0
-7559 -7556 0
c Var 'aux1374' order represents '22' with '7560'
-7558 7560 0
c Var 'aux1374' direct represents '22' with '7561'
7558 -7560 7561 0
-7561 7560 0
-7561 -7558 0
c Var 'aux1374' order represents '23' with '7562'
-7560 7562 0
c Var 'aux1374' direct represents '23' with '7563'
7560 -7562 7563 0
-7563 7562 0
-7563 -7560 0
c Var 'aux1374' order represents '24' with '7564'
-7562 7564 0
c Var 'aux1374' direct represents '24' with '7565'
7562 -7564 7565 0
-7565 7564 0
-7565 -7562 0
c Var 'aux1374' order represents '25' with '7566'
-7564 7566 0
c Var 'aux1374' direct represents '25' with '7567'
7564 -7566 7567 0
-7567 7566 0
-7567 -7564 0
c Var 'aux1374' order represents '26' with '7568'
-7566 7568 0
c Var 'aux1374' direct represents '26' with '7569'
7566 -7568 7569 0
-7569 7568 0
-7569 -7566 0
c Var 'aux1374' order represents '27' with '7570'
-7568 7570 0
c Var 'aux1374' direct represents '27' with '7571'
7568 -7570 7571 0
-7571 7570 0
-7571 -7568 0
c Var 'aux1374' order represents '28' with '7572'
-7570 7572 0
c Var 'aux1374' direct represents '28' with '7573'
7570 -7572 7573 0
-7573 7572 0
-7573 -7570 0
c Var 'aux1374' order represents '29' with '7574'
-7572 7574 0
c Var 'aux1374' direct represents '29' with '7575'
7572 -7574 7575 0
-7575 7574 0
-7575 -7572 0
c Var 'aux1374' order represents '30' with '7576'
-7574 7576 0
c Var 'aux1374' direct represents '30' with '7577'
7574 -7576 7577 0
-7577 7576 0
-7577 -7574 0
c Var 'aux1374' order represents '31' with '7578'
-7576 7578 0
c Var 'aux1374' direct represents '31' with '7579'
7576 -7578 7579 0
-7579 7578 0
-7579 -7576 0
c Var 'aux1374' direct represents '32' with '-7578'
7517 7519 7521 7523 7525 7527 7529 7531 7533 7535 7537 7539 7541 7543 7545 7547 7549 7551 7553 7555 7557 7559 7561 7563 7565 7567 7569 7571 7573 7575 7577 7579 -7578 0
c Encoding variable: aux1375 with domain: int(0..32) (representing constraint (aux1370 + aux1372))
c Both direct and order encoding.
c Var 'aux1375' order represents '0' with '7580'
c Var 'aux1375' direct represents '0' with '7580'
c Var 'aux1375' order represents '1' with '7581'
-7580 7581 0
c Var 'aux1375' direct represents '1' with '7582'
7580 -7581 7582 0
-7582 7581 0
-7582 -7580 0
c Var 'aux1375' order represents '2' with '7583'
-7581 7583 0
c Var 'aux1375' direct represents '2' with '7584'
7581 -7583 7584 0
-7584 7583 0
-7584 -7581 0
c Var 'aux1375' order represents '3' with '7585'
-7583 7585 0
c Var 'aux1375' direct represents '3' with '7586'
7583 -7585 7586 0
-7586 7585 0
-7586 -7583 0
c Var 'aux1375' order represents '4' with '7587'
-7585 7587 0
c Var 'aux1375' direct represents '4' with '7588'
7585 -7587 7588 0
-7588 7587 0
-7588 -7585 0
c Var 'aux1375' order represents '5' with '7589'
-7587 7589 0
c Var 'aux1375' direct represents '5' with '7590'
7587 -7589 7590 0
-7590 7589 0
-7590 -7587 0
c Var 'aux1375' order represents '6' with '7591'
-7589 7591 0
c Var 'aux1375' direct represents '6' with '7592'
7589 -7591 7592 0
-7592 7591 0
-7592 -7589 0
c Var 'aux1375' order represents '7' with '7593'
-7591 7593 0
c Var 'aux1375' direct represents '7' with '7594'
7591 -7593 7594 0
-7594 7593 0
-7594 -7591 0
c Var 'aux1375' order represents '8' with '7595'
-7593 7595 0
c Var 'aux1375' direct represents '8' with '7596'
7593 -7595 7596 0
-7596 7595 0
-7596 -7593 0
c Var 'aux1375' order represents '9' with '7597'
-7595 7597 0
c Var 'aux1375' direct represents '9' with '7598'
7595 -7597 7598 0
-7598 7597 0
-7598 -7595 0
c Var 'aux1375' order represents '10' with '7599'
-7597 7599 0
c Var 'aux1375' direct represents '10' with '7600'
7597 -7599 7600 0
-7600 7599 0
-7600 -7597 0
c Var 'aux1375' order represents '11' with '7601'
-7599 7601 0
c Var 'aux1375' direct represents '11' with '7602'
7599 -7601 7602 0
-7602 7601 0
-7602 -7599 0
c Var 'aux1375' order represents '12' with '7603'
-7601 7603 0
c Var 'aux1375' direct represents '12' with '7604'
7601 -7603 7604 0
-7604 7603 0
-7604 -7601 0
c Var 'aux1375' order represents '13' with '7605'
-7603 7605 0
c Var 'aux1375' direct represents '13' with '7606'
7603 -7605 7606 0
-7606 7605 0
-7606 -7603 0
c Var 'aux1375' order represents '14' with '7607'
-7605 7607 0
c Var 'aux1375' direct represents '14' with '7608'
7605 -7607 7608 0
-7608 7607 0
-7608 -7605 0
c Var 'aux1375' order represents '15' with '7609'
-7607 7609 0
c Var 'aux1375' direct represents '15' with '7610'
7607 -7609 7610 0
-7610 7609 0
-7610 -7607 0
c Var 'aux1375' order represents '16' with '7611'
-7609 7611 0
c Var 'aux1375' direct represents '16' with '7612'
7609 -7611 7612 0
-7612 7611 0
-7612 -7609 0
c Var 'aux1375' order represents '17' with '7613'
-7611 7613 0
c Var 'aux1375' direct represents '17' with '7614'
7611 -7613 7614 0
-7614 7613 0
-7614 -7611 0
c Var 'aux1375' order represents '18' with '7615'
-7613 7615 0
c Var 'aux1375' direct represents '18' with '7616'
7613 -7615 7616 0
-7616 7615 0
-7616 -7613 0
c Var 'aux1375' order represents '19' with '7617'
-7615 7617 0
c Var 'aux1375' direct represents '19' with '7618'
7615 -7617 7618 0
-7618 7617 0
-7618 -7615 0
c Var 'aux1375' order represents '20' with '7619'
-7617 7619 0
c Var 'aux1375' direct represents '20' with '7620'
7617 -7619 7620 0
-7620 7619 0
-7620 -7617 0
c Var 'aux1375' order represents '21' with '7621'
-7619 7621 0
c Var 'aux1375' direct represents '21' with '7622'
7619 -7621 7622 0
-7622 7621 0
-7622 -7619 0
c Var 'aux1375' order represents '22' with '7623'
-7621 7623 0
c Var 'aux1375' direct represents '22' with '7624'
7621 -7623 7624 0
-7624 7623 0
-7624 -7621 0
c Var 'aux1375' order represents '23' with '7625'
-7623 7625 0
c Var 'aux1375' direct represents '23' with '7626'
7623 -7625 7626 0
-7626 7625 0
-7626 -7623 0
c Var 'aux1375' order represents '24' with '7627'
-7625 7627 0
c Var 'aux1375' direct represents '24' with '7628'
7625 -7627 7628 0
-7628 7627 0
-7628 -7625 0
c Var 'aux1375' order represents '25' with '7629'
-7627 7629 0
c Var 'aux1375' direct represents '25' with '7630'
7627 -7629 7630 0
-7630 7629 0
-7630 -7627 0
c Var 'aux1375' order represents '26' with '7631'
-7629 7631 0
c Var 'aux1375' direct represents '26' with '7632'
7629 -7631 7632 0
-7632 7631 0
-7632 -7629 0
c Var 'aux1375' order represents '27' with '7633'
-7631 7633 0
c Var 'aux1375' direct represents '27' with '7634'
7631 -7633 7634 0
-7634 7633 0
-7634 -7631 0
c Var 'aux1375' order represents '28' with '7635'
-7633 7635 0
c Var 'aux1375' direct represents '28' with '7636'
7633 -7635 7636 0
-7636 7635 0
-7636 -7633 0
c Var 'aux1375' order represents '29' with '7637'
-7635 7637 0
c Var 'aux1375' direct represents '29' with '7638'
7635 -7637 7638 0
-7638 7637 0
-7638 -7635 0
c Var 'aux1375' order represents '30' with '7639'
-7637 7639 0
c Var 'aux1375' direct represents '30' with '7640'
7637 -7639 7640 0
-7640 7639 0
-7640 -7637 0
c Var 'aux1375' order represents '31' with '7641'
-7639 7641 0
c Var 'aux1375' direct represents '31' with '7642'
7639 -7641 7642 0
-7642 7641 0
-7642 -7639 0
c Var 'aux1375' direct represents '32' with '-7641'
7580 7582 7584 7586 7588 7590 7592 7594 7596 7598 7600 7602 7604 7606 7608 7610 7612 7614 7616 7618 7620 7622 7624 7626 7628 7630 7632 7634 7636 7638 7640 7642 -7641 0
c Encoding variable: aux1376 with domain: int(0..2) (representing constraint ((agrid_00004_00001=3) + (agrid_00004_00002=3)))
c Both direct and order encoding.
c Var 'aux1376' order represents '0' with '7643'
c Var 'aux1376' direct represents '0' with '7643'
c Var 'aux1376' order represents '1' with '7644'
-7643 7644 0
c Var 'aux1376' direct represents '1' with '7645'
7643 -7644 7645 0
-7645 7644 0
-7645 -7643 0
c Var 'aux1376' direct represents '2' with '-7644'
7643 7645 -7644 0
c Encoding variable: aux1377 with domain: int(0..2) (representing constraint ((agrid_00004_00004=3) + (agrid_00004_00008=3)))
c Both direct and order encoding.
c Var 'aux1377' order represents '0' with '7646'
c Var 'aux1377' direct represents '0' with '7646'
c Var 'aux1377' order represents '1' with '7647'
-7646 7647 0
c Var 'aux1377' direct represents '1' with '7648'
7646 -7647 7648 0
-7648 7647 0
-7648 -7646 0
c Var 'aux1377' direct represents '2' with '-7647'
7646 7648 -7647 0
c Encoding variable: aux1378 with domain: int(0..2) (representing constraint ((agrid_00006_00007=3) + (agrid_00002_00008=3)))
c Both direct and order encoding.
c Var 'aux1378' order represents '0' with '7649'
c Var 'aux1378' direct represents '0' with '7649'
c Var 'aux1378' order represents '1' with '7650'
-7649 7650 0
c Var 'aux1378' direct represents '1' with '7651'
7649 -7650 7651 0
-7651 7650 0
-7651 -7649 0
c Var 'aux1378' direct represents '2' with '-7650'
7649 7651 -7650 0
c Encoding variable: aux1379 with domain: int(0..2) (representing constraint ((agrid_00006_00006=3) + (agrid_00005_00008=3)))
c Both direct and order encoding.
c Var 'aux1379' order represents '0' with '7652'
c Var 'aux1379' direct represents '0' with '7652'
c Var 'aux1379' order represents '1' with '7653'
-7652 7653 0
c Var 'aux1379' direct represents '1' with '7654'
7652 -7653 7654 0
-7654 7653 0
-7654 -7652 0
c Var 'aux1379' direct represents '2' with '-7653'
7652 7654 -7653 0
c Encoding variable: aux1380 with domain: int(0..2) (representing constraint ((agrid_00006_00005=3) + (agrid_00006_00008=3)))
c Both direct and order encoding.
c Var 'aux1380' order represents '0' with '7655'
c Var 'aux1380' direct represents '0' with '7655'
c Var 'aux1380' order represents '1' with '7656'
-7655 7656 0
c Var 'aux1380' direct represents '1' with '7657'
7655 -7656 7657 0
-7657 7656 0
-7657 -7655 0
c Var 'aux1380' direct represents '2' with '-7656'
7655 7657 -7656 0
c Encoding variable: aux1381 with domain: int(0..2) (representing constraint ((agrid_00006_00004=3) + (agrid_00003_00001=3)))
c Both direct and order encoding.
c Var 'aux1381' order represents '0' with '7658'
c Var 'aux1381' direct represents '0' with '7658'
c Var 'aux1381' order represents '1' with '7659'
-7658 7659 0
c Var 'aux1381' direct represents '1' with '7660'
7658 -7659 7660 0
-7660 7659 0
-7660 -7658 0
c Var 'aux1381' direct represents '2' with '-7659'
7658 7660 -7659 0
c Encoding variable: aux1382 with domain: int(0..2) (representing constraint ((agrid_00006_00003=3) + (agrid_00007_00001=3)))
c Both direct and order encoding.
c Var 'aux1382' order represents '0' with '7661'
c Var 'aux1382' direct represents '0' with '7661'
c Var 'aux1382' order represents '1' with '7662'
-7661 7662 0
c Var 'aux1382' direct represents '1' with '7663'
7661 -7662 7663 0
-7663 7662 0
-7663 -7661 0
c Var 'aux1382' direct represents '2' with '-7662'
7661 7663 -7662 0
c Encoding variable: aux1383 with domain: int(0..2) (representing constraint ((agrid_00006_00002=3) + (agrid_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux1383' order represents '0' with '7664'
c Var 'aux1383' direct represents '0' with '7664'
c Var 'aux1383' order represents '1' with '7665'
-7664 7665 0
c Var 'aux1383' direct represents '1' with '7666'
7664 -7665 7666 0
-7666 7665 0
-7666 -7664 0
c Var 'aux1383' direct represents '2' with '-7665'
7664 7666 -7665 0
c Encoding variable: aux1384 with domain: int(0..2) (representing constraint ((agrid_00006_00001=3) + (agrid_00003_00003=3)))
c Both direct and order encoding.
c Var 'aux1384' order represents '0' with '7667'
c Var 'aux1384' direct represents '0' with '7667'
c Var 'aux1384' order represents '1' with '7668'
-7667 7668 0
c Var 'aux1384' direct represents '1' with '7669'
7667 -7668 7669 0
-7669 7668 0
-7669 -7667 0
c Var 'aux1384' direct represents '2' with '-7668'
7667 7669 -7668 0
c Encoding variable: aux1385 with domain: int(0..2) (representing constraint ((agrid_00001_00008=3) + (agrid_00002_00001=3)))
c Both direct and order encoding.
c Var 'aux1385' order represents '0' with '7670'
c Var 'aux1385' direct represents '0' with '7670'
c Var 'aux1385' order represents '1' with '7671'
-7670 7671 0
c Var 'aux1385' direct represents '1' with '7672'
7670 -7671 7672 0
-7672 7671 0
-7672 -7670 0
c Var 'aux1385' direct represents '2' with '-7671'
7670 7672 -7671 0
c Encoding variable: aux1386 with domain: int(0..2) (representing constraint ((agrid_00001_00007=3) + (agrid_00007_00002=3)))
c Both direct and order encoding.
c Var 'aux1386' order represents '0' with '7673'
c Var 'aux1386' direct represents '0' with '7673'
c Var 'aux1386' order represents '1' with '7674'
-7673 7674 0
c Var 'aux1386' direct represents '1' with '7675'
7673 -7674 7675 0
-7675 7674 0
-7675 -7673 0
c Var 'aux1386' direct represents '2' with '-7674'
7673 7675 -7674 0
c Encoding variable: aux1387 with domain: int(0..2) (representing constraint ((agrid_00001_00006=3) + (agrid_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux1387' order represents '0' with '7676'
c Var 'aux1387' direct represents '0' with '7676'
c Var 'aux1387' order represents '1' with '7677'
-7676 7677 0
c Var 'aux1387' direct represents '1' with '7678'
7676 -7677 7678 0
-7678 7677 0
-7678 -7676 0
c Var 'aux1387' direct represents '2' with '-7677'
7676 7678 -7677 0
c Encoding variable: aux1388 with domain: int(0..2) (representing constraint ((agrid_00001_00005=3) + (agrid_00003_00005=3)))
c Both direct and order encoding.
c Var 'aux1388' order represents '0' with '7679'
c Var 'aux1388' direct represents '0' with '7679'
c Var 'aux1388' order represents '1' with '7680'
-7679 7680 0
c Var 'aux1388' direct represents '1' with '7681'
7679 -7680 7681 0
-7681 7680 0
-7681 -7679 0
c Var 'aux1388' direct represents '2' with '-7680'
7679 7681 -7680 0
c Encoding variable: aux1389 with domain: int(0..2) (representing constraint ((agrid_00001_00004=3) + (agrid_00007_00003=3)))
c Both direct and order encoding.
c Var 'aux1389' order represents '0' with '7682'
c Var 'aux1389' direct represents '0' with '7682'
c Var 'aux1389' order represents '1' with '7683'
-7682 7683 0
c Var 'aux1389' direct represents '1' with '7684'
7682 -7683 7684 0
-7684 7683 0
-7684 -7682 0
c Var 'aux1389' direct represents '2' with '-7683'
7682 7684 -7683 0
c Encoding variable: aux1390 with domain: int(0..2) (representing constraint ((agrid_00001_00003=3) + (agrid_00003_00006=3)))
c Both direct and order encoding.
c Var 'aux1390' order represents '0' with '7685'
c Var 'aux1390' direct represents '0' with '7685'
c Var 'aux1390' order represents '1' with '7686'
-7685 7686 0
c Var 'aux1390' direct represents '1' with '7687'
7685 -7686 7687 0
-7687 7686 0
-7687 -7685 0
c Var 'aux1390' direct represents '2' with '-7686'
7685 7687 -7686 0
c Encoding variable: aux1391 with domain: int(0..2) (representing constraint ((agrid_00001_00002=3) + (agrid_00003_00007=3)))
c Both direct and order encoding.
c Var 'aux1391' order represents '0' with '7688'
c Var 'aux1391' direct represents '0' with '7688'
c Var 'aux1391' order represents '1' with '7689'
-7688 7689 0
c Var 'aux1391' direct represents '1' with '7690'
7688 -7689 7690 0
-7690 7689 0
-7690 -7688 0
c Var 'aux1391' direct represents '2' with '-7689'
7688 7690 -7689 0
c Encoding variable: aux1392 with domain: int(0..2) (representing constraint ((agrid_00001_00001=3) + (agrid_00004_00005=3)))
c Both direct and order encoding.
c Var 'aux1392' order represents '0' with '7691'
c Var 'aux1392' direct represents '0' with '7691'
c Var 'aux1392' order represents '1' with '7692'
-7691 7692 0
c Var 'aux1392' direct represents '1' with '7693'
7691 -7692 7693 0
-7693 7692 0
-7693 -7691 0
c Var 'aux1392' direct represents '2' with '-7692'
7691 7693 -7692 0
c Encoding variable: aux1393 with domain: int(0..2) (representing constraint ((agrid_00008_00008=3) + (agrid_00002_00002=3)))
c Both direct and order encoding.
c Var 'aux1393' order represents '0' with '7694'
c Var 'aux1393' direct represents '0' with '7694'
c Var 'aux1393' order represents '1' with '7695'
-7694 7695 0
c Var 'aux1393' direct represents '1' with '7696'
7694 -7695 7696 0
-7696 7695 0
-7696 -7694 0
c Var 'aux1393' direct represents '2' with '-7695'
7694 7696 -7695 0
c Encoding variable: aux1394 with domain: int(0..2) (representing constraint ((agrid_00008_00007=3) + (agrid_00007_00004=3)))
c Both direct and order encoding.
c Var 'aux1394' order represents '0' with '7697'
c Var 'aux1394' direct represents '0' with '7697'
c Var 'aux1394' order represents '1' with '7698'
-7697 7698 0
c Var 'aux1394' direct represents '1' with '7699'
7697 -7698 7699 0
-7699 7698 0
-7699 -7697 0
c Var 'aux1394' direct represents '2' with '-7698'
7697 7699 -7698 0
c Encoding variable: aux1395 with domain: int(0..2) (representing constraint ((agrid_00008_00006=3) + (agrid_00003_00008=3)))
c Both direct and order encoding.
c Var 'aux1395' order represents '0' with '7700'
c Var 'aux1395' direct represents '0' with '7700'
c Var 'aux1395' order represents '1' with '7701'
-7700 7701 0
c Var 'aux1395' direct represents '1' with '7702'
7700 -7701 7702 0
-7702 7701 0
-7702 -7700 0
c Var 'aux1395' direct represents '2' with '-7701'
7700 7702 -7701 0
c Encoding variable: aux1396 with domain: int(0..2) (representing constraint ((agrid_00008_00005=3) + (agrid_00008_00001=3)))
c Both direct and order encoding.
c Var 'aux1396' order represents '0' with '7703'
c Var 'aux1396' direct represents '0' with '7703'
c Var 'aux1396' order represents '1' with '7704'
-7703 7704 0
c Var 'aux1396' direct represents '1' with '7705'
7703 -7704 7705 0
-7705 7704 0
-7705 -7703 0
c Var 'aux1396' direct represents '2' with '-7704'
7703 7705 -7704 0
c Encoding variable: aux1397 with domain: int(0..2) (representing constraint ((agrid_00008_00004=3) + (agrid_00007_00005=3)))
c Both direct and order encoding.
c Var 'aux1397' order represents '0' with '7706'
c Var 'aux1397' direct represents '0' with '7706'
c Var 'aux1397' order represents '1' with '7707'
-7706 7707 0
c Var 'aux1397' direct represents '1' with '7708'
7706 -7707 7708 0
-7708 7707 0
-7708 -7706 0
c Var 'aux1397' direct represents '2' with '-7707'
7706 7708 -7707 0
c Encoding variable: aux1398 with domain: int(0..2) (representing constraint ((agrid_00008_00002=3) + (agrid_00008_00003=3)))
c Both direct and order encoding.
c Var 'aux1398' order represents '0' with '7709'
c Var 'aux1398' direct represents '0' with '7709'
c Var 'aux1398' order represents '1' with '7710'
-7709 7710 0
c Var 'aux1398' direct represents '1' with '7711'
7709 -7710 7711 0
-7711 7710 0
-7711 -7709 0
c Var 'aux1398' direct represents '2' with '-7710'
7709 7711 -7710 0
c Encoding variable: aux1399 with domain: int(0..2) (representing constraint ((agrid_00002_00003=3) + (agrid_00007_00006=3)))
c Both direct and order encoding.
c Var 'aux1399' order represents '0' with '7712'
c Var 'aux1399' direct represents '0' with '7712'
c Var 'aux1399' order represents '1' with '7713'
-7712 7713 0
c Var 'aux1399' direct represents '1' with '7714'
7712 -7713 7714 0
-7714 7713 0
-7714 -7712 0
c Var 'aux1399' direct represents '2' with '-7713'
7712 7714 -7713 0
c Encoding variable: aux1400 with domain: int(0..2) (representing constraint ((agrid_00007_00007=3) + (agrid_00004_00003=3)))
c Both direct and order encoding.
c Var 'aux1400' order represents '0' with '7715'
c Var 'aux1400' direct represents '0' with '7715'
c Var 'aux1400' order represents '1' with '7716'
-7715 7716 0
c Var 'aux1400' direct represents '1' with '7717'
7715 -7716 7717 0
-7717 7716 0
-7717 -7715 0
c Var 'aux1400' direct represents '2' with '-7716'
7715 7717 -7716 0
c Encoding variable: aux1401 with domain: int(0..2) (representing constraint ((agrid_00004_00006=3) + (agrid_00002_00004=3)))
c Both direct and order encoding.
c Var 'aux1401' order represents '0' with '7718'
c Var 'aux1401' direct represents '0' with '7718'
c Var 'aux1401' order represents '1' with '7719'
-7718 7719 0
c Var 'aux1401' direct represents '1' with '7720'
7718 -7719 7720 0
-7720 7719 0
-7720 -7718 0
c Var 'aux1401' direct represents '2' with '-7719'
7718 7720 -7719 0
c Encoding variable: aux1402 with domain: int(0..2) (representing constraint ((agrid_00007_00008=3) + (agrid_00005_00001=3)))
c Both direct and order encoding.
c Var 'aux1402' order represents '0' with '7721'
c Var 'aux1402' direct represents '0' with '7721'
c Var 'aux1402' order represents '1' with '7722'
-7721 7722 0
c Var 'aux1402' direct represents '1' with '7723'
7721 -7722 7723 0
-7723 7722 0
-7723 -7721 0
c Var 'aux1402' direct represents '2' with '-7722'
7721 7723 -7722 0
c Encoding variable: aux1403 with domain: int(0..2) (representing constraint ((agrid_00002_00005=3) + (agrid_00005_00002=3)))
c Both direct and order encoding.
c Var 'aux1403' order represents '0' with '7724'
c Var 'aux1403' direct represents '0' with '7724'
c Var 'aux1403' order represents '1' with '7725'
-7724 7725 0
c Var 'aux1403' direct represents '1' with '7726'
7724 -7725 7726 0
-7726 7725 0
-7726 -7724 0
c Var 'aux1403' direct represents '2' with '-7725'
7724 7726 -7725 0
c Encoding variable: aux1404 with domain: int(0..2) (representing constraint ((agrid_00005_00003=3) + (agrid_00004_00007=3)))
c Both direct and order encoding.
c Var 'aux1404' order represents '0' with '7727'
c Var 'aux1404' direct represents '0' with '7727'
c Var 'aux1404' order represents '1' with '7728'
-7727 7728 0
c Var 'aux1404' direct represents '1' with '7729'
7727 -7728 7729 0
-7729 7728 0
-7729 -7727 0
c Var 'aux1404' direct represents '2' with '-7728'
7727 7729 -7728 0
c Encoding variable: aux1405 with domain: int(0..2) (representing constraint ((agrid_00002_00006=3) + (agrid_00005_00004=3)))
c Both direct and order encoding.
c Var 'aux1405' order represents '0' with '7730'
c Var 'aux1405' direct represents '0' with '7730'
c Var 'aux1405' order represents '1' with '7731'
-7730 7731 0
c Var 'aux1405' direct represents '1' with '7732'
7730 -7731 7732 0
-7732 7731 0
-7732 -7730 0
c Var 'aux1405' direct represents '2' with '-7731'
7730 7732 -7731 0
c Encoding variable: aux1406 with domain: int(0..2) (representing constraint ((agrid_00005_00005=3) + (agrid_00002_00007=3)))
c Both direct and order encoding.
c Var 'aux1406' order represents '0' with '7733'
c Var 'aux1406' direct represents '0' with '7733'
c Var 'aux1406' order represents '1' with '7734'
-7733 7734 0
c Var 'aux1406' direct represents '1' with '7735'
7733 -7734 7735 0
-7735 7734 0
-7735 -7733 0
c Var 'aux1406' direct represents '2' with '-7734'
7733 7735 -7734 0
c Encoding variable: aux1407 with domain: int(0..2) (representing constraint ((agrid_00005_00006=3) + (agrid_00005_00007=3)))
c Both direct and order encoding.
c Var 'aux1407' order represents '0' with '7736'
c Var 'aux1407' direct represents '0' with '7736'
c Var 'aux1407' order represents '1' with '7737'
-7736 7737 0
c Var 'aux1407' direct represents '1' with '7738'
7736 -7737 7738 0
-7738 7737 0
-7738 -7736 0
c Var 'aux1407' direct represents '2' with '-7737'
7736 7738 -7737 0
c Encoding variable: aux1408 with domain: int(0..4) (representing constraint (aux1391 + aux1407))
c Both direct and order encoding.
c Var 'aux1408' order represents '0' with '7739'
c Var 'aux1408' direct represents '0' with '7739'
c Var 'aux1408' order represents '1' with '7740'
-7739 7740 0
c Var 'aux1408' direct represents '1' with '7741'
7739 -7740 7741 0
-7741 7740 0
-7741 -7739 0
c Var 'aux1408' order represents '2' with '7742'
-7740 7742 0
c Var 'aux1408' direct represents '2' with '7743'
7740 -7742 7743 0
-7743 7742 0
-7743 -7740 0
c Var 'aux1408' order represents '3' with '7744'
-7742 7744 0
c Var 'aux1408' direct represents '3' with '7745'
7742 -7744 7745 0
-7745 7744 0
-7745 -7742 0
c Var 'aux1408' direct represents '4' with '-7744'
7739 7741 7743 7745 -7744 0
c Encoding variable: aux1409 with domain: int(0..4) (representing constraint (aux1389 + aux1381))
c Both direct and order encoding.
c Var 'aux1409' order represents '0' with '7746'
c Var 'aux1409' direct represents '0' with '7746'
c Var 'aux1409' order represents '1' with '7747'
-7746 7747 0
c Var 'aux1409' direct represents '1' with '7748'
7746 -7747 7748 0
-7748 7747 0
-7748 -7746 0
c Var 'aux1409' order represents '2' with '7749'
-7747 7749 0
c Var 'aux1409' direct represents '2' with '7750'
7747 -7749 7750 0
-7750 7749 0
-7750 -7747 0
c Var 'aux1409' order represents '3' with '7751'
-7749 7751 0
c Var 'aux1409' direct represents '3' with '7752'
7749 -7751 7752 0
-7752 7751 0
-7752 -7749 0
c Var 'aux1409' direct represents '4' with '-7751'
7746 7748 7750 7752 -7751 0
c Encoding variable: aux1410 with domain: int(0..4) (representing constraint (aux1379 + aux1377))
c Both direct and order encoding.
c Var 'aux1410' order represents '0' with '7753'
c Var 'aux1410' direct represents '0' with '7753'
c Var 'aux1410' order represents '1' with '7754'
-7753 7754 0
c Var 'aux1410' direct represents '1' with '7755'
7753 -7754 7755 0
-7755 7754 0
-7755 -7753 0
c Var 'aux1410' order represents '2' with '7756'
-7754 7756 0
c Var 'aux1410' direct represents '2' with '7757'
7754 -7756 7757 0
-7757 7756 0
-7757 -7754 0
c Var 'aux1410' order represents '3' with '7758'
-7756 7758 0
c Var 'aux1410' direct represents '3' with '7759'
7756 -7758 7759 0
-7759 7758 0
-7759 -7756 0
c Var 'aux1410' direct represents '4' with '-7758'
7753 7755 7757 7759 -7758 0
c Encoding variable: aux1411 with domain: int(0..4) (representing constraint (aux1404 + aux1376))
c Both direct and order encoding.
c Var 'aux1411' order represents '0' with '7760'
c Var 'aux1411' direct represents '0' with '7760'
c Var 'aux1411' order represents '1' with '7761'
-7760 7761 0
c Var 'aux1411' direct represents '1' with '7762'
7760 -7761 7762 0
-7762 7761 0
-7762 -7760 0
c Var 'aux1411' order represents '2' with '7763'
-7761 7763 0
c Var 'aux1411' direct represents '2' with '7764'
7761 -7763 7764 0
-7764 7763 0
-7764 -7761 0
c Var 'aux1411' order represents '3' with '7765'
-7763 7765 0
c Var 'aux1411' direct represents '3' with '7766'
7763 -7765 7766 0
-7766 7765 0
-7766 -7763 0
c Var 'aux1411' direct represents '4' with '-7765'
7760 7762 7764 7766 -7765 0
c Encoding variable: aux1412 with domain: int(0..4) (representing constraint (aux1403 + aux1380))
c Both direct and order encoding.
c Var 'aux1412' order represents '0' with '7767'
c Var 'aux1412' direct represents '0' with '7767'
c Var 'aux1412' order represents '1' with '7768'
-7767 7768 0
c Var 'aux1412' direct represents '1' with '7769'
7767 -7768 7769 0
-7769 7768 0
-7769 -7767 0
c Var 'aux1412' order represents '2' with '7770'
-7768 7770 0
c Var 'aux1412' direct represents '2' with '7771'
7768 -7770 7771 0
-7771 7770 0
-7771 -7768 0
c Var 'aux1412' order represents '3' with '7772'
-7770 7772 0
c Var 'aux1412' direct represents '3' with '7773'
7770 -7772 7773 0
-7773 7772 0
-7773 -7770 0
c Var 'aux1412' direct represents '4' with '-7772'
7767 7769 7771 7773 -7772 0
c Encoding variable: aux1413 with domain: int(0..4) (representing constraint (aux1383 + aux1388))
c Both direct and order encoding.
c Var 'aux1413' order represents '0' with '7774'
c Var 'aux1413' direct represents '0' with '7774'
c Var 'aux1413' order represents '1' with '7775'
-7774 7775 0
c Var 'aux1413' direct represents '1' with '7776'
7774 -7775 7776 0
-7776 7775 0
-7776 -7774 0
c Var 'aux1413' order represents '2' with '7777'
-7775 7777 0
c Var 'aux1413' direct represents '2' with '7778'
7775 -7777 7778 0
-7778 7777 0
-7778 -7775 0
c Var 'aux1413' order represents '3' with '7779'
-7777 7779 0
c Var 'aux1413' direct represents '3' with '7780'
7777 -7779 7780 0
-7780 7779 0
-7780 -7777 0
c Var 'aux1413' direct represents '4' with '-7779'
7774 7776 7778 7780 -7779 0
c Encoding variable: aux1414 with domain: int(0..4) (representing constraint (aux1401 + aux1384))
c Both direct and order encoding.
c Var 'aux1414' order represents '0' with '7781'
c Var 'aux1414' direct represents '0' with '7781'
c Var 'aux1414' order represents '1' with '7782'
-7781 7782 0
c Var 'aux1414' direct represents '1' with '7783'
7781 -7782 7783 0
-7783 7782 0
-7783 -7781 0
c Var 'aux1414' order represents '2' with '7784'
-7782 7784 0
c Var 'aux1414' direct represents '2' with '7785'
7782 -7784 7785 0
-7785 7784 0
-7785 -7782 0
c Var 'aux1414' order represents '3' with '7786'
-7784 7786 0
c Var 'aux1414' direct represents '3' with '7787'
7784 -7786 7787 0
-7787 7786 0
-7787 -7784 0
c Var 'aux1414' direct represents '4' with '-7786'
7781 7783 7785 7787 -7786 0
c Encoding variable: aux1415 with domain: int(0..4) (representing constraint (aux1386 + aux1387))
c Both direct and order encoding.
c Var 'aux1415' order represents '0' with '7788'
c Var 'aux1415' direct represents '0' with '7788'
c Var 'aux1415' order represents '1' with '7789'
-7788 7789 0
c Var 'aux1415' direct represents '1' with '7790'
7788 -7789 7790 0
-7790 7789 0
-7790 -7788 0
c Var 'aux1415' order represents '2' with '7791'
-7789 7791 0
c Var 'aux1415' direct represents '2' with '7792'
7789 -7791 7792 0
-7792 7791 0
-7792 -7789 0
c Var 'aux1415' order represents '3' with '7793'
-7791 7793 0
c Var 'aux1415' direct represents '3' with '7794'
7791 -7793 7794 0
-7794 7793 0
-7794 -7791 0
c Var 'aux1415' direct represents '4' with '-7793'
7788 7790 7792 7794 -7793 0
c Encoding variable: aux1416 with domain: int(0..4) (representing constraint (aux1390 + aux1398))
c Both direct and order encoding.
c Var 'aux1416' order represents '0' with '7795'
c Var 'aux1416' direct represents '0' with '7795'
c Var 'aux1416' order represents '1' with '7796'
-7795 7796 0
c Var 'aux1416' direct represents '1' with '7797'
7795 -7796 7797 0
-7797 7796 0
-7797 -7795 0
c Var 'aux1416' order represents '2' with '7798'
-7796 7798 0
c Var 'aux1416' direct represents '2' with '7799'
7796 -7798 7799 0
-7799 7798 0
-7799 -7796 0
c Var 'aux1416' order represents '3' with '7800'
-7798 7800 0
c Var 'aux1416' direct represents '3' with '7801'
7798 -7800 7801 0
-7801 7800 0
-7801 -7798 0
c Var 'aux1416' direct represents '4' with '-7800'
7795 7797 7799 7801 -7800 0
c Encoding variable: aux1417 with domain: int(0..4) (representing constraint (aux1399 + aux1396))
c Both direct and order encoding.
c Var 'aux1417' order represents '0' with '7802'
c Var 'aux1417' direct represents '0' with '7802'
c Var 'aux1417' order represents '1' with '7803'
-7802 7803 0
c Var 'aux1417' direct represents '1' with '7804'
7802 -7803 7804 0
-7804 7803 0
-7804 -7802 0
c Var 'aux1417' order represents '2' with '7805'
-7803 7805 0
c Var 'aux1417' direct represents '2' with '7806'
7803 -7805 7806 0
-7806 7805 0
-7806 -7803 0
c Var 'aux1417' order represents '3' with '7807'
-7805 7807 0
c Var 'aux1417' direct represents '3' with '7808'
7805 -7807 7808 0
-7808 7807 0
-7808 -7805 0
c Var 'aux1417' direct represents '4' with '-7807'
7802 7804 7806 7808 -7807 0
c Encoding variable: aux1418 with domain: int(0..4) (representing constraint (aux1397 + aux1392))
c Both direct and order encoding.
c Var 'aux1418' order represents '0' with '7809'
c Var 'aux1418' direct represents '0' with '7809'
c Var 'aux1418' order represents '1' with '7810'
-7809 7810 0
c Var 'aux1418' direct represents '1' with '7811'
7809 -7810 7811 0
-7811 7810 0
-7811 -7809 0
c Var 'aux1418' order represents '2' with '7812'
-7810 7812 0
c Var 'aux1418' direct represents '2' with '7813'
7810 -7812 7813 0
-7813 7812 0
-7813 -7810 0
c Var 'aux1418' order represents '3' with '7814'
-7812 7814 0
c Var 'aux1418' direct represents '3' with '7815'
7812 -7814 7815 0
-7815 7814 0
-7815 -7812 0
c Var 'aux1418' direct represents '4' with '-7814'
7809 7811 7813 7815 -7814 0
c Encoding variable: aux1419 with domain: int(0..4) (representing constraint (aux1395 + aux1393))
c Both direct and order encoding.
c Var 'aux1419' order represents '0' with '7816'
c Var 'aux1419' direct represents '0' with '7816'
c Var 'aux1419' order represents '1' with '7817'
-7816 7817 0
c Var 'aux1419' direct represents '1' with '7818'
7816 -7817 7818 0
-7818 7817 0
-7818 -7816 0
c Var 'aux1419' order represents '2' with '7819'
-7817 7819 0
c Var 'aux1419' direct represents '2' with '7820'
7817 -7819 7820 0
-7820 7819 0
-7820 -7817 0
c Var 'aux1419' order represents '3' with '7821'
-7819 7821 0
c Var 'aux1419' direct represents '3' with '7822'
7819 -7821 7822 0
-7822 7821 0
-7822 -7819 0
c Var 'aux1419' direct represents '4' with '-7821'
7816 7818 7820 7822 -7821 0
c Encoding variable: aux1420 with domain: int(0..4) (representing constraint (aux1394 + aux1406))
c Both direct and order encoding.
c Var 'aux1420' order represents '0' with '7823'
c Var 'aux1420' direct represents '0' with '7823'
c Var 'aux1420' order represents '1' with '7824'
-7823 7824 0
c Var 'aux1420' direct represents '1' with '7825'
7823 -7824 7825 0
-7825 7824 0
-7825 -7823 0
c Var 'aux1420' order represents '2' with '7826'
-7824 7826 0
c Var 'aux1420' direct represents '2' with '7827'
7824 -7826 7827 0
-7827 7826 0
-7827 -7824 0
c Var 'aux1420' order represents '3' with '7828'
-7826 7828 0
c Var 'aux1420' direct represents '3' with '7829'
7826 -7828 7829 0
-7829 7828 0
-7829 -7826 0
c Var 'aux1420' direct represents '4' with '-7828'
7823 7825 7827 7829 -7828 0
c Encoding variable: aux1421 with domain: int(0..4) (representing constraint (aux1402 + aux1400))
c Both direct and order encoding.
c Var 'aux1421' order represents '0' with '7830'
c Var 'aux1421' direct represents '0' with '7830'
c Var 'aux1421' order represents '1' with '7831'
-7830 7831 0
c Var 'aux1421' direct represents '1' with '7832'
7830 -7831 7832 0
-7832 7831 0
-7832 -7830 0
c Var 'aux1421' order represents '2' with '7833'
-7831 7833 0
c Var 'aux1421' direct represents '2' with '7834'
7831 -7833 7834 0
-7834 7833 0
-7834 -7831 0
c Var 'aux1421' order represents '3' with '7835'
-7833 7835 0
c Var 'aux1421' direct represents '3' with '7836'
7833 -7835 7836 0
-7836 7835 0
-7836 -7833 0
c Var 'aux1421' direct represents '4' with '-7835'
7830 7832 7834 7836 -7835 0
c Encoding variable: aux1422 with domain: int(0..4) (representing constraint (aux1385 + aux1378))
c Both direct and order encoding.
c Var 'aux1422' order represents '0' with '7837'
c Var 'aux1422' direct represents '0' with '7837'
c Var 'aux1422' order represents '1' with '7838'
-7837 7838 0
c Var 'aux1422' direct represents '1' with '7839'
7837 -7838 7839 0
-7839 7838 0
-7839 -7837 0
c Var 'aux1422' order represents '2' with '7840'
-7838 7840 0
c Var 'aux1422' direct represents '2' with '7841'
7838 -7840 7841 0
-7841 7840 0
-7841 -7838 0
c Var 'aux1422' order represents '3' with '7842'
-7840 7842 0
c Var 'aux1422' direct represents '3' with '7843'
7840 -7842 7843 0
-7843 7842 0
-7843 -7840 0
c Var 'aux1422' direct represents '4' with '-7842'
7837 7839 7841 7843 -7842 0
c Encoding variable: aux1423 with domain: int(0..4) (representing constraint (aux1382 + aux1405))
c Both direct and order encoding.
c Var 'aux1423' order represents '0' with '7844'
c Var 'aux1423' direct represents '0' with '7844'
c Var 'aux1423' order represents '1' with '7845'
-7844 7845 0
c Var 'aux1423' direct represents '1' with '7846'
7844 -7845 7846 0
-7846 7845 0
-7846 -7844 0
c Var 'aux1423' order represents '2' with '7847'
-7845 7847 0
c Var 'aux1423' direct represents '2' with '7848'
7845 -7847 7848 0
-7848 7847 0
-7848 -7845 0
c Var 'aux1423' order represents '3' with '7849'
-7847 7849 0
c Var 'aux1423' direct represents '3' with '7850'
7847 -7849 7850 0
-7850 7849 0
-7850 -7847 0
c Var 'aux1423' direct represents '4' with '-7849'
7844 7846 7848 7850 -7849 0
c Encoding variable: aux1424 with domain: int(0..8) (representing constraint (aux1415 + aux1423))
c Both direct and order encoding.
c Var 'aux1424' order represents '0' with '7851'
c Var 'aux1424' direct represents '0' with '7851'
c Var 'aux1424' order represents '1' with '7852'
-7851 7852 0
c Var 'aux1424' direct represents '1' with '7853'
7851 -7852 7853 0
-7853 7852 0
-7853 -7851 0
c Var 'aux1424' order represents '2' with '7854'
-7852 7854 0
c Var 'aux1424' direct represents '2' with '7855'
7852 -7854 7855 0
-7855 7854 0
-7855 -7852 0
c Var 'aux1424' order represents '3' with '7856'
-7854 7856 0
c Var 'aux1424' direct represents '3' with '7857'
7854 -7856 7857 0
-7857 7856 0
-7857 -7854 0
c Var 'aux1424' order represents '4' with '7858'
-7856 7858 0
c Var 'aux1424' direct represents '4' with '7859'
7856 -7858 7859 0
-7859 7858 0
-7859 -7856 0
c Var 'aux1424' order represents '5' with '7860'
-7858 7860 0
c Var 'aux1424' direct represents '5' with '7861'
7858 -7860 7861 0
-7861 7860 0
-7861 -7858 0
c Var 'aux1424' order represents '6' with '7862'
-7860 7862 0
c Var 'aux1424' direct represents '6' with '7863'
7860 -7862 7863 0
-7863 7862 0
-7863 -7860 0
c Var 'aux1424' order represents '7' with '7864'
-7862 7864 0
c Var 'aux1424' direct represents '7' with '7865'
7862 -7864 7865 0
-7865 7864 0
-7865 -7862 0
c Var 'aux1424' direct represents '8' with '-7864'
7851 7853 7855 7857 7859 7861 7863 7865 -7864 0
c Encoding variable: aux1425 with domain: int(0..8) (representing constraint (aux1413 + aux1409))
c Both direct and order encoding.
c Var 'aux1425' order represents '0' with '7866'
c Var 'aux1425' direct represents '0' with '7866'
c Var 'aux1425' order represents '1' with '7867'
-7866 7867 0
c Var 'aux1425' direct represents '1' with '7868'
7866 -7867 7868 0
-7868 7867 0
-7868 -7866 0
c Var 'aux1425' order represents '2' with '7869'
-7867 7869 0
c Var 'aux1425' direct represents '2' with '7870'
7867 -7869 7870 0
-7870 7869 0
-7870 -7867 0
c Var 'aux1425' order represents '3' with '7871'
-7869 7871 0
c Var 'aux1425' direct represents '3' with '7872'
7869 -7871 7872 0
-7872 7871 0
-7872 -7869 0
c Var 'aux1425' order represents '4' with '7873'
-7871 7873 0
c Var 'aux1425' direct represents '4' with '7874'
7871 -7873 7874 0
-7874 7873 0
-7874 -7871 0
c Var 'aux1425' order represents '5' with '7875'
-7873 7875 0
c Var 'aux1425' direct represents '5' with '7876'
7873 -7875 7876 0
-7876 7875 0
-7876 -7873 0
c Var 'aux1425' order represents '6' with '7877'
-7875 7877 0
c Var 'aux1425' direct represents '6' with '7878'
7875 -7877 7878 0
-7878 7877 0
-7878 -7875 0
c Var 'aux1425' order represents '7' with '7879'
-7877 7879 0
c Var 'aux1425' direct represents '7' with '7880'
7877 -7879 7880 0
-7880 7879 0
-7880 -7877 0
c Var 'aux1425' direct represents '8' with '-7879'
7866 7868 7870 7872 7874 7876 7878 7880 -7879 0
c Encoding variable: aux1426 with domain: int(0..8) (representing constraint (aux1421 + aux1408))
c Both direct and order encoding.
c Var 'aux1426' order represents '0' with '7881'
c Var 'aux1426' direct represents '0' with '7881'
c Var 'aux1426' order represents '1' with '7882'
-7881 7882 0
c Var 'aux1426' direct represents '1' with '7883'
7881 -7882 7883 0
-7883 7882 0
-7883 -7881 0
c Var 'aux1426' order represents '2' with '7884'
-7882 7884 0
c Var 'aux1426' direct represents '2' with '7885'
7882 -7884 7885 0
-7885 7884 0
-7885 -7882 0
c Var 'aux1426' order represents '3' with '7886'
-7884 7886 0
c Var 'aux1426' direct represents '3' with '7887'
7884 -7886 7887 0
-7887 7886 0
-7887 -7884 0
c Var 'aux1426' order represents '4' with '7888'
-7886 7888 0
c Var 'aux1426' direct represents '4' with '7889'
7886 -7888 7889 0
-7889 7888 0
-7889 -7886 0
c Var 'aux1426' order represents '5' with '7890'
-7888 7890 0
c Var 'aux1426' direct represents '5' with '7891'
7888 -7890 7891 0
-7891 7890 0
-7891 -7888 0
c Var 'aux1426' order represents '6' with '7892'
-7890 7892 0
c Var 'aux1426' direct represents '6' with '7893'
7890 -7892 7893 0
-7893 7892 0
-7893 -7890 0
c Var 'aux1426' order represents '7' with '7894'
-7892 7894 0
c Var 'aux1426' direct represents '7' with '7895'
7892 -7894 7895 0
-7895 7894 0
-7895 -7892 0
c Var 'aux1426' direct represents '8' with '-7894'
7881 7883 7885 7887 7889 7891 7893 7895 -7894 0
c Encoding variable: aux1427 with domain: int(0..8) (representing constraint (aux1411 + aux1412))
c Both direct and order encoding.
c Var 'aux1427' order represents '0' with '7896'
c Var 'aux1427' direct represents '0' with '7896'
c Var 'aux1427' order represents '1' with '7897'
-7896 7897 0
c Var 'aux1427' direct represents '1' with '7898'
7896 -7897 7898 0
-7898 7897 0
-7898 -7896 0
c Var 'aux1427' order represents '2' with '7899'
-7897 7899 0
c Var 'aux1427' direct represents '2' with '7900'
7897 -7899 7900 0
-7900 7899 0
-7900 -7897 0
c Var 'aux1427' order represents '3' with '7901'
-7899 7901 0
c Var 'aux1427' direct represents '3' with '7902'
7899 -7901 7902 0
-7902 7901 0
-7902 -7899 0
c Var 'aux1427' order represents '4' with '7903'
-7901 7903 0
c Var 'aux1427' direct represents '4' with '7904'
7901 -7903 7904 0
-7904 7903 0
-7904 -7901 0
c Var 'aux1427' order represents '5' with '7905'
-7903 7905 0
c Var 'aux1427' direct represents '5' with '7906'
7903 -7905 7906 0
-7906 7905 0
-7906 -7903 0
c Var 'aux1427' order represents '6' with '7907'
-7905 7907 0
c Var 'aux1427' direct represents '6' with '7908'
7905 -7907 7908 0
-7908 7907 0
-7908 -7905 0
c Var 'aux1427' order represents '7' with '7909'
-7907 7909 0
c Var 'aux1427' direct represents '7' with '7910'
7907 -7909 7910 0
-7910 7909 0
-7910 -7907 0
c Var 'aux1427' direct represents '8' with '-7909'
7896 7898 7900 7902 7904 7906 7908 7910 -7909 0
c Encoding variable: aux1428 with domain: int(0..8) (representing constraint (aux1414 + aux1418))
c Both direct and order encoding.
c Var 'aux1428' order represents '0' with '7911'
c Var 'aux1428' direct represents '0' with '7911'
c Var 'aux1428' order represents '1' with '7912'
-7911 7912 0
c Var 'aux1428' direct represents '1' with '7913'
7911 -7912 7913 0
-7913 7912 0
-7913 -7911 0
c Var 'aux1428' order represents '2' with '7914'
-7912 7914 0
c Var 'aux1428' direct represents '2' with '7915'
7912 -7914 7915 0
-7915 7914 0
-7915 -7912 0
c Var 'aux1428' order represents '3' with '7916'
-7914 7916 0
c Var 'aux1428' direct represents '3' with '7917'
7914 -7916 7917 0
-7917 7916 0
-7917 -7914 0
c Var 'aux1428' order represents '4' with '7918'
-7916 7918 0
c Var 'aux1428' direct represents '4' with '7919'
7916 -7918 7919 0
-7919 7918 0
-7919 -7916 0
c Var 'aux1428' order represents '5' with '7920'
-7918 7920 0
c Var 'aux1428' direct represents '5' with '7921'
7918 -7920 7921 0
-7921 7920 0
-7921 -7918 0
c Var 'aux1428' order represents '6' with '7922'
-7920 7922 0
c Var 'aux1428' direct represents '6' with '7923'
7920 -7922 7923 0
-7923 7922 0
-7923 -7920 0
c Var 'aux1428' order represents '7' with '7924'
-7922 7924 0
c Var 'aux1428' direct represents '7' with '7925'
7922 -7924 7925 0
-7925 7924 0
-7925 -7922 0
c Var 'aux1428' direct represents '8' with '-7924'
7911 7913 7915 7917 7919 7921 7923 7925 -7924 0
c Encoding variable: aux1429 with domain: int(0..8) (representing constraint (aux1419 + aux1416))
c Both direct and order encoding.
c Var 'aux1429' order represents '0' with '7926'
c Var 'aux1429' direct represents '0' with '7926'
c Var 'aux1429' order represents '1' with '7927'
-7926 7927 0
c Var 'aux1429' direct represents '1' with '7928'
7926 -7927 7928 0
-7928 7927 0
-7928 -7926 0
c Var 'aux1429' order represents '2' with '7929'
-7927 7929 0
c Var 'aux1429' direct represents '2' with '7930'
7927 -7929 7930 0
-7930 7929 0
-7930 -7927 0
c Var 'aux1429' order represents '3' with '7931'
-7929 7931 0
c Var 'aux1429' direct represents '3' with '7932'
7929 -7931 7932 0
-7932 7931 0
-7932 -7929 0
c Var 'aux1429' order represents '4' with '7933'
-7931 7933 0
c Var 'aux1429' direct represents '4' with '7934'
7931 -7933 7934 0
-7934 7933 0
-7934 -7931 0
c Var 'aux1429' order represents '5' with '7935'
-7933 7935 0
c Var 'aux1429' direct represents '5' with '7936'
7933 -7935 7936 0
-7936 7935 0
-7936 -7933 0
c Var 'aux1429' order represents '6' with '7937'
-7935 7937 0
c Var 'aux1429' direct represents '6' with '7938'
7935 -7937 7938 0
-7938 7937 0
-7938 -7935 0
c Var 'aux1429' order represents '7' with '7939'
-7937 7939 0
c Var 'aux1429' direct represents '7' with '7940'
7937 -7939 7940 0
-7940 7939 0
-7940 -7937 0
c Var 'aux1429' direct represents '8' with '-7939'
7926 7928 7930 7932 7934 7936 7938 7940 -7939 0
c Encoding variable: aux1430 with domain: int(0..8) (representing constraint (aux1417 + aux1422))
c Both direct and order encoding.
c Var 'aux1430' order represents '0' with '7941'
c Var 'aux1430' direct represents '0' with '7941'
c Var 'aux1430' order represents '1' with '7942'
-7941 7942 0
c Var 'aux1430' direct represents '1' with '7943'
7941 -7942 7943 0
-7943 7942 0
-7943 -7941 0
c Var 'aux1430' order represents '2' with '7944'
-7942 7944 0
c Var 'aux1430' direct represents '2' with '7945'
7942 -7944 7945 0
-7945 7944 0
-7945 -7942 0
c Var 'aux1430' order represents '3' with '7946'
-7944 7946 0
c Var 'aux1430' direct represents '3' with '7947'
7944 -7946 7947 0
-7947 7946 0
-7947 -7944 0
c Var 'aux1430' order represents '4' with '7948'
-7946 7948 0
c Var 'aux1430' direct represents '4' with '7949'
7946 -7948 7949 0
-7949 7948 0
-7949 -7946 0
c Var 'aux1430' order represents '5' with '7950'
-7948 7950 0
c Var 'aux1430' direct represents '5' with '7951'
7948 -7950 7951 0
-7951 7950 0
-7951 -7948 0
c Var 'aux1430' order represents '6' with '7952'
-7950 7952 0
c Var 'aux1430' direct represents '6' with '7953'
7950 -7952 7953 0
-7953 7952 0
-7953 -7950 0
c Var 'aux1430' order represents '7' with '7954'
-7952 7954 0
c Var 'aux1430' direct represents '7' with '7955'
7952 -7954 7955 0
-7955 7954 0
-7955 -7952 0
c Var 'aux1430' direct represents '8' with '-7954'
7941 7943 7945 7947 7949 7951 7953 7955 -7954 0
c Encoding variable: aux1431 with domain: int(0..8) (representing constraint (aux1420 + aux1410))
c Both direct and order encoding.
c Var 'aux1431' order represents '0' with '7956'
c Var 'aux1431' direct represents '0' with '7956'
c Var 'aux1431' order represents '1' with '7957'
-7956 7957 0
c Var 'aux1431' direct represents '1' with '7958'
7956 -7957 7958 0
-7958 7957 0
-7958 -7956 0
c Var 'aux1431' order represents '2' with '7959'
-7957 7959 0
c Var 'aux1431' direct represents '2' with '7960'
7957 -7959 7960 0
-7960 7959 0
-7960 -7957 0
c Var 'aux1431' order represents '3' with '7961'
-7959 7961 0
c Var 'aux1431' direct represents '3' with '7962'
7959 -7961 7962 0
-7962 7961 0
-7962 -7959 0
c Var 'aux1431' order represents '4' with '7963'
-7961 7963 0
c Var 'aux1431' direct represents '4' with '7964'
7961 -7963 7964 0
-7964 7963 0
-7964 -7961 0
c Var 'aux1431' order represents '5' with '7965'
-7963 7965 0
c Var 'aux1431' direct represents '5' with '7966'
7963 -7965 7966 0
-7966 7965 0
-7966 -7963 0
c Var 'aux1431' order represents '6' with '7967'
-7965 7967 0
c Var 'aux1431' direct represents '6' with '7968'
7965 -7967 7968 0
-7968 7967 0
-7968 -7965 0
c Var 'aux1431' order represents '7' with '7969'
-7967 7969 0
c Var 'aux1431' direct represents '7' with '7970'
7967 -7969 7970 0
-7970 7969 0
-7970 -7967 0
c Var 'aux1431' direct represents '8' with '-7969'
7956 7958 7960 7962 7964 7966 7968 7970 -7969 0
c Encoding variable: aux1432 with domain: int(0..16) (representing constraint (aux1427 + aux1431))
c Both direct and order encoding.
c Var 'aux1432' order represents '0' with '7971'
c Var 'aux1432' direct represents '0' with '7971'
c Var 'aux1432' order represents '1' with '7972'
-7971 7972 0
c Var 'aux1432' direct represents '1' with '7973'
7971 -7972 7973 0
-7973 7972 0
-7973 -7971 0
c Var 'aux1432' order represents '2' with '7974'
-7972 7974 0
c Var 'aux1432' direct represents '2' with '7975'
7972 -7974 7975 0
-7975 7974 0
-7975 -7972 0
c Var 'aux1432' order represents '3' with '7976'
-7974 7976 0
c Var 'aux1432' direct represents '3' with '7977'
7974 -7976 7977 0
-7977 7976 0
-7977 -7974 0
c Var 'aux1432' order represents '4' with '7978'
-7976 7978 0
c Var 'aux1432' direct represents '4' with '7979'
7976 -7978 7979 0
-7979 7978 0
-7979 -7976 0
c Var 'aux1432' order represents '5' with '7980'
-7978 7980 0
c Var 'aux1432' direct represents '5' with '7981'
7978 -7980 7981 0
-7981 7980 0
-7981 -7978 0
c Var 'aux1432' order represents '6' with '7982'
-7980 7982 0
c Var 'aux1432' direct represents '6' with '7983'
7980 -7982 7983 0
-7983 7982 0
-7983 -7980 0
c Var 'aux1432' order represents '7' with '7984'
-7982 7984 0
c Var 'aux1432' direct represents '7' with '7985'
7982 -7984 7985 0
-7985 7984 0
-7985 -7982 0
c Var 'aux1432' order represents '8' with '7986'
-7984 7986 0
c Var 'aux1432' direct represents '8' with '7987'
7984 -7986 7987 0
-7987 7986 0
-7987 -7984 0
c Var 'aux1432' order represents '9' with '7988'
-7986 7988 0
c Var 'aux1432' direct represents '9' with '7989'
7986 -7988 7989 0
-7989 7988 0
-7989 -7986 0
c Var 'aux1432' order represents '10' with '7990'
-7988 7990 0
c Var 'aux1432' direct represents '10' with '7991'
7988 -7990 7991 0
-7991 7990 0
-7991 -7988 0
c Var 'aux1432' order represents '11' with '7992'
-7990 7992 0
c Var 'aux1432' direct represents '11' with '7993'
7990 -7992 7993 0
-7993 7992 0
-7993 -7990 0
c Var 'aux1432' order represents '12' with '7994'
-7992 7994 0
c Var 'aux1432' direct represents '12' with '7995'
7992 -7994 7995 0
-7995 7994 0
-7995 -7992 0
c Var 'aux1432' order represents '13' with '7996'
-7994 7996 0
c Var 'aux1432' direct represents '13' with '7997'
7994 -7996 7997 0
-7997 7996 0
-7997 -7994 0
c Var 'aux1432' order represents '14' with '7998'
-7996 7998 0
c Var 'aux1432' direct represents '14' with '7999'
7996 -7998 7999 0
-7999 7998 0
-7999 -7996 0
c Var 'aux1432' order represents '15' with '8000'
-7998 8000 0
c Var 'aux1432' direct represents '15' with '8001'
7998 -8000 8001 0
-8001 8000 0
-8001 -7998 0
c Var 'aux1432' direct represents '16' with '-8000'
7971 7973 7975 7977 7979 7981 7983 7985 7987 7989 7991 7993 7995 7997 7999 8001 -8000 0
c Encoding variable: aux1433 with domain: int(0..16) (representing constraint (aux1425 + aux1424))
c Both direct and order encoding.
c Var 'aux1433' order represents '0' with '8002'
c Var 'aux1433' direct represents '0' with '8002'
c Var 'aux1433' order represents '1' with '8003'
-8002 8003 0
c Var 'aux1433' direct represents '1' with '8004'
8002 -8003 8004 0
-8004 8003 0
-8004 -8002 0
c Var 'aux1433' order represents '2' with '8005'
-8003 8005 0
c Var 'aux1433' direct represents '2' with '8006'
8003 -8005 8006 0
-8006 8005 0
-8006 -8003 0
c Var 'aux1433' order represents '3' with '8007'
-8005 8007 0
c Var 'aux1433' direct represents '3' with '8008'
8005 -8007 8008 0
-8008 8007 0
-8008 -8005 0
c Var 'aux1433' order represents '4' with '8009'
-8007 8009 0
c Var 'aux1433' direct represents '4' with '8010'
8007 -8009 8010 0
-8010 8009 0
-8010 -8007 0
c Var 'aux1433' order represents '5' with '8011'
-8009 8011 0
c Var 'aux1433' direct represents '5' with '8012'
8009 -8011 8012 0
-8012 8011 0
-8012 -8009 0
c Var 'aux1433' order represents '6' with '8013'
-8011 8013 0
c Var 'aux1433' direct represents '6' with '8014'
8011 -8013 8014 0
-8014 8013 0
-8014 -8011 0
c Var 'aux1433' order represents '7' with '8015'
-8013 8015 0
c Var 'aux1433' direct represents '7' with '8016'
8013 -8015 8016 0
-8016 8015 0
-8016 -8013 0
c Var 'aux1433' order represents '8' with '8017'
-8015 8017 0
c Var 'aux1433' direct represents '8' with '8018'
8015 -8017 8018 0
-8018 8017 0
-8018 -8015 0
c Var 'aux1433' order represents '9' with '8019'
-8017 8019 0
c Var 'aux1433' direct represents '9' with '8020'
8017 -8019 8020 0
-8020 8019 0
-8020 -8017 0
c Var 'aux1433' order represents '10' with '8021'
-8019 8021 0
c Var 'aux1433' direct represents '10' with '8022'
8019 -8021 8022 0
-8022 8021 0
-8022 -8019 0
c Var 'aux1433' order represents '11' with '8023'
-8021 8023 0
c Var 'aux1433' direct represents '11' with '8024'
8021 -8023 8024 0
-8024 8023 0
-8024 -8021 0
c Var 'aux1433' order represents '12' with '8025'
-8023 8025 0
c Var 'aux1433' direct represents '12' with '8026'
8023 -8025 8026 0
-8026 8025 0
-8026 -8023 0
c Var 'aux1433' order represents '13' with '8027'
-8025 8027 0
c Var 'aux1433' direct represents '13' with '8028'
8025 -8027 8028 0
-8028 8027 0
-8028 -8025 0
c Var 'aux1433' order represents '14' with '8029'
-8027 8029 0
c Var 'aux1433' direct represents '14' with '8030'
8027 -8029 8030 0
-8030 8029 0
-8030 -8027 0
c Var 'aux1433' order represents '15' with '8031'
-8029 8031 0
c Var 'aux1433' direct represents '15' with '8032'
8029 -8031 8032 0
-8032 8031 0
-8032 -8029 0
c Var 'aux1433' direct represents '16' with '-8031'
8002 8004 8006 8008 8010 8012 8014 8016 8018 8020 8022 8024 8026 8028 8030 8032 -8031 0
c Encoding variable: aux1434 with domain: int(0..16) (representing constraint (aux1426 + aux1428))
c Both direct and order encoding.
c Var 'aux1434' order represents '0' with '8033'
c Var 'aux1434' direct represents '0' with '8033'
c Var 'aux1434' order represents '1' with '8034'
-8033 8034 0
c Var 'aux1434' direct represents '1' with '8035'
8033 -8034 8035 0
-8035 8034 0
-8035 -8033 0
c Var 'aux1434' order represents '2' with '8036'
-8034 8036 0
c Var 'aux1434' direct represents '2' with '8037'
8034 -8036 8037 0
-8037 8036 0
-8037 -8034 0
c Var 'aux1434' order represents '3' with '8038'
-8036 8038 0
c Var 'aux1434' direct represents '3' with '8039'
8036 -8038 8039 0
-8039 8038 0
-8039 -8036 0
c Var 'aux1434' order represents '4' with '8040'
-8038 8040 0
c Var 'aux1434' direct represents '4' with '8041'
8038 -8040 8041 0
-8041 8040 0
-8041 -8038 0
c Var 'aux1434' order represents '5' with '8042'
-8040 8042 0
c Var 'aux1434' direct represents '5' with '8043'
8040 -8042 8043 0
-8043 8042 0
-8043 -8040 0
c Var 'aux1434' order represents '6' with '8044'
-8042 8044 0
c Var 'aux1434' direct represents '6' with '8045'
8042 -8044 8045 0
-8045 8044 0
-8045 -8042 0
c Var 'aux1434' order represents '7' with '8046'
-8044 8046 0
c Var 'aux1434' direct represents '7' with '8047'
8044 -8046 8047 0
-8047 8046 0
-8047 -8044 0
c Var 'aux1434' order represents '8' with '8048'
-8046 8048 0
c Var 'aux1434' direct represents '8' with '8049'
8046 -8048 8049 0
-8049 8048 0
-8049 -8046 0
c Var 'aux1434' order represents '9' with '8050'
-8048 8050 0
c Var 'aux1434' direct represents '9' with '8051'
8048 -8050 8051 0
-8051 8050 0
-8051 -8048 0
c Var 'aux1434' order represents '10' with '8052'
-8050 8052 0
c Var 'aux1434' direct represents '10' with '8053'
8050 -8052 8053 0
-8053 8052 0
-8053 -8050 0
c Var 'aux1434' order represents '11' with '8054'
-8052 8054 0
c Var 'aux1434' direct represents '11' with '8055'
8052 -8054 8055 0
-8055 8054 0
-8055 -8052 0
c Var 'aux1434' order represents '12' with '8056'
-8054 8056 0
c Var 'aux1434' direct represents '12' with '8057'
8054 -8056 8057 0
-8057 8056 0
-8057 -8054 0
c Var 'aux1434' order represents '13' with '8058'
-8056 8058 0
c Var 'aux1434' direct represents '13' with '8059'
8056 -8058 8059 0
-8059 8058 0
-8059 -8056 0
c Var 'aux1434' order represents '14' with '8060'
-8058 8060 0
c Var 'aux1434' direct represents '14' with '8061'
8058 -8060 8061 0
-8061 8060 0
-8061 -8058 0
c Var 'aux1434' order represents '15' with '8062'
-8060 8062 0
c Var 'aux1434' direct represents '15' with '8063'
8060 -8062 8063 0
-8063 8062 0
-8063 -8060 0
c Var 'aux1434' direct represents '16' with '-8062'
8033 8035 8037 8039 8041 8043 8045 8047 8049 8051 8053 8055 8057 8059 8061 8063 -8062 0
c Encoding variable: aux1435 with domain: int(0..16) (representing constraint (aux1429 + aux1430))
c Both direct and order encoding.
c Var 'aux1435' order represents '0' with '8064'
c Var 'aux1435' direct represents '0' with '8064'
c Var 'aux1435' order represents '1' with '8065'
-8064 8065 0
c Var 'aux1435' direct represents '1' with '8066'
8064 -8065 8066 0
-8066 8065 0
-8066 -8064 0
c Var 'aux1435' order represents '2' with '8067'
-8065 8067 0
c Var 'aux1435' direct represents '2' with '8068'
8065 -8067 8068 0
-8068 8067 0
-8068 -8065 0
c Var 'aux1435' order represents '3' with '8069'
-8067 8069 0
c Var 'aux1435' direct represents '3' with '8070'
8067 -8069 8070 0
-8070 8069 0
-8070 -8067 0
c Var 'aux1435' order represents '4' with '8071'
-8069 8071 0
c Var 'aux1435' direct represents '4' with '8072'
8069 -8071 8072 0
-8072 8071 0
-8072 -8069 0
c Var 'aux1435' order represents '5' with '8073'
-8071 8073 0
c Var 'aux1435' direct represents '5' with '8074'
8071 -8073 8074 0
-8074 8073 0
-8074 -8071 0
c Var 'aux1435' order represents '6' with '8075'
-8073 8075 0
c Var 'aux1435' direct represents '6' with '8076'
8073 -8075 8076 0
-8076 8075 0
-8076 -8073 0
c Var 'aux1435' order represents '7' with '8077'
-8075 8077 0
c Var 'aux1435' direct represents '7' with '8078'
8075 -8077 8078 0
-8078 8077 0
-8078 -8075 0
c Var 'aux1435' order represents '8' with '8079'
-8077 8079 0
c Var 'aux1435' direct represents '8' with '8080'
8077 -8079 8080 0
-8080 8079 0
-8080 -8077 0
c Var 'aux1435' order represents '9' with '8081'
-8079 8081 0
c Var 'aux1435' direct represents '9' with '8082'
8079 -8081 8082 0
-8082 8081 0
-8082 -8079 0
c Var 'aux1435' order represents '10' with '8083'
-8081 8083 0
c Var 'aux1435' direct represents '10' with '8084'
8081 -8083 8084 0
-8084 8083 0
-8084 -8081 0
c Var 'aux1435' order represents '11' with '8085'
-8083 8085 0
c Var 'aux1435' direct represents '11' with '8086'
8083 -8085 8086 0
-8086 8085 0
-8086 -8083 0
c Var 'aux1435' order represents '12' with '8087'
-8085 8087 0
c Var 'aux1435' direct represents '12' with '8088'
8085 -8087 8088 0
-8088 8087 0
-8088 -8085 0
c Var 'aux1435' order represents '13' with '8089'
-8087 8089 0
c Var 'aux1435' direct represents '13' with '8090'
8087 -8089 8090 0
-8090 8089 0
-8090 -8087 0
c Var 'aux1435' order represents '14' with '8091'
-8089 8091 0
c Var 'aux1435' direct represents '14' with '8092'
8089 -8091 8092 0
-8092 8091 0
-8092 -8089 0
c Var 'aux1435' order represents '15' with '8093'
-8091 8093 0
c Var 'aux1435' direct represents '15' with '8094'
8091 -8093 8094 0
-8094 8093 0
-8094 -8091 0
c Var 'aux1435' direct represents '16' with '-8093'
8064 8066 8068 8070 8072 8074 8076 8078 8080 8082 8084 8086 8088 8090 8092 8094 -8093 0
c Encoding variable: aux1436 with domain: int(0..32) (representing constraint (aux1433 + aux1435))
c Both direct and order encoding.
c Var 'aux1436' order represents '0' with '8095'
c Var 'aux1436' direct represents '0' with '8095'
c Var 'aux1436' order represents '1' with '8096'
-8095 8096 0
c Var 'aux1436' direct represents '1' with '8097'
8095 -8096 8097 0
-8097 8096 0
-8097 -8095 0
c Var 'aux1436' order represents '2' with '8098'
-8096 8098 0
c Var 'aux1436' direct represents '2' with '8099'
8096 -8098 8099 0
-8099 8098 0
-8099 -8096 0
c Var 'aux1436' order represents '3' with '8100'
-8098 8100 0
c Var 'aux1436' direct represents '3' with '8101'
8098 -8100 8101 0
-8101 8100 0
-8101 -8098 0
c Var 'aux1436' order represents '4' with '8102'
-8100 8102 0
c Var 'aux1436' direct represents '4' with '8103'
8100 -8102 8103 0
-8103 8102 0
-8103 -8100 0
c Var 'aux1436' order represents '5' with '8104'
-8102 8104 0
c Var 'aux1436' direct represents '5' with '8105'
8102 -8104 8105 0
-8105 8104 0
-8105 -8102 0
c Var 'aux1436' order represents '6' with '8106'
-8104 8106 0
c Var 'aux1436' direct represents '6' with '8107'
8104 -8106 8107 0
-8107 8106 0
-8107 -8104 0
c Var 'aux1436' order represents '7' with '8108'
-8106 8108 0
c Var 'aux1436' direct represents '7' with '8109'
8106 -8108 8109 0
-8109 8108 0
-8109 -8106 0
c Var 'aux1436' order represents '8' with '8110'
-8108 8110 0
c Var 'aux1436' direct represents '8' with '8111'
8108 -8110 8111 0
-8111 8110 0
-8111 -8108 0
c Var 'aux1436' order represents '9' with '8112'
-8110 8112 0
c Var 'aux1436' direct represents '9' with '8113'
8110 -8112 8113 0
-8113 8112 0
-8113 -8110 0
c Var 'aux1436' order represents '10' with '8114'
-8112 8114 0
c Var 'aux1436' direct represents '10' with '8115'
8112 -8114 8115 0
-8115 8114 0
-8115 -8112 0
c Var 'aux1436' order represents '11' with '8116'
-8114 8116 0
c Var 'aux1436' direct represents '11' with '8117'
8114 -8116 8117 0
-8117 8116 0
-8117 -8114 0
c Var 'aux1436' order represents '12' with '8118'
-8116 8118 0
c Var 'aux1436' direct represents '12' with '8119'
8116 -8118 8119 0
-8119 8118 0
-8119 -8116 0
c Var 'aux1436' order represents '13' with '8120'
-8118 8120 0
c Var 'aux1436' direct represents '13' with '8121'
8118 -8120 8121 0
-8121 8120 0
-8121 -8118 0
c Var 'aux1436' order represents '14' with '8122'
-8120 8122 0
c Var 'aux1436' direct represents '14' with '8123'
8120 -8122 8123 0
-8123 8122 0
-8123 -8120 0
c Var 'aux1436' order represents '15' with '8124'
-8122 8124 0
c Var 'aux1436' direct represents '15' with '8125'
8122 -8124 8125 0
-8125 8124 0
-8125 -8122 0
c Var 'aux1436' order represents '16' with '8126'
-8124 8126 0
c Var 'aux1436' direct represents '16' with '8127'
8124 -8126 8127 0
-8127 8126 0
-8127 -8124 0
c Var 'aux1436' order represents '17' with '8128'
-8126 8128 0
c Var 'aux1436' direct represents '17' with '8129'
8126 -8128 8129 0
-8129 8128 0
-8129 -8126 0
c Var 'aux1436' order represents '18' with '8130'
-8128 8130 0
c Var 'aux1436' direct represents '18' with '8131'
8128 -8130 8131 0
-8131 8130 0
-8131 -8128 0
c Var 'aux1436' order represents '19' with '8132'
-8130 8132 0
c Var 'aux1436' direct represents '19' with '8133'
8130 -8132 8133 0
-8133 8132 0
-8133 -8130 0
c Var 'aux1436' order represents '20' with '8134'
-8132 8134 0
c Var 'aux1436' direct represents '20' with '8135'
8132 -8134 8135 0
-8135 8134 0
-8135 -8132 0
c Var 'aux1436' order represents '21' with '8136'
-8134 8136 0
c Var 'aux1436' direct represents '21' with '8137'
8134 -8136 8137 0
-8137 8136 0
-8137 -8134 0
c Var 'aux1436' order represents '22' with '8138'
-8136 8138 0
c Var 'aux1436' direct represents '22' with '8139'
8136 -8138 8139 0
-8139 8138 0
-8139 -8136 0
c Var 'aux1436' order represents '23' with '8140'
-8138 8140 0
c Var 'aux1436' direct represents '23' with '8141'
8138 -8140 8141 0
-8141 8140 0
-8141 -8138 0
c Var 'aux1436' order represents '24' with '8142'
-8140 8142 0
c Var 'aux1436' direct represents '24' with '8143'
8140 -8142 8143 0
-8143 8142 0
-8143 -8140 0
c Var 'aux1436' order represents '25' with '8144'
-8142 8144 0
c Var 'aux1436' direct represents '25' with '8145'
8142 -8144 8145 0
-8145 8144 0
-8145 -8142 0
c Var 'aux1436' order represents '26' with '8146'
-8144 8146 0
c Var 'aux1436' direct represents '26' with '8147'
8144 -8146 8147 0
-8147 8146 0
-8147 -8144 0
c Var 'aux1436' order represents '27' with '8148'
-8146 8148 0
c Var 'aux1436' direct represents '27' with '8149'
8146 -8148 8149 0
-8149 8148 0
-8149 -8146 0
c Var 'aux1436' order represents '28' with '8150'
-8148 8150 0
c Var 'aux1436' direct represents '28' with '8151'
8148 -8150 8151 0
-8151 8150 0
-8151 -8148 0
c Var 'aux1436' order represents '29' with '8152'
-8150 8152 0
c Var 'aux1436' direct represents '29' with '8153'
8150 -8152 8153 0
-8153 8152 0
-8153 -8150 0
c Var 'aux1436' order represents '30' with '8154'
-8152 8154 0
c Var 'aux1436' direct represents '30' with '8155'
8152 -8154 8155 0
-8155 8154 0
-8155 -8152 0
c Var 'aux1436' order represents '31' with '8156'
-8154 8156 0
c Var 'aux1436' direct represents '31' with '8157'
8154 -8156 8157 0
-8157 8156 0
-8157 -8154 0
c Var 'aux1436' direct represents '32' with '-8156'
8095 8097 8099 8101 8103 8105 8107 8109 8111 8113 8115 8117 8119 8121 8123 8125 8127 8129 8131 8133 8135 8137 8139 8141 8143 8145 8147 8149 8151 8153 8155 8157 -8156 0
c Encoding variable: aux1437 with domain: int(0..32) (representing constraint (aux1432 + aux1434))
c Both direct and order encoding.
c Var 'aux1437' order represents '0' with '8158'
c Var 'aux1437' direct represents '0' with '8158'
c Var 'aux1437' order represents '1' with '8159'
-8158 8159 0
c Var 'aux1437' direct represents '1' with '8160'
8158 -8159 8160 0
-8160 8159 0
-8160 -8158 0
c Var 'aux1437' order represents '2' with '8161'
-8159 8161 0
c Var 'aux1437' direct represents '2' with '8162'
8159 -8161 8162 0
-8162 8161 0
-8162 -8159 0
c Var 'aux1437' order represents '3' with '8163'
-8161 8163 0
c Var 'aux1437' direct represents '3' with '8164'
8161 -8163 8164 0
-8164 8163 0
-8164 -8161 0
c Var 'aux1437' order represents '4' with '8165'
-8163 8165 0
c Var 'aux1437' direct represents '4' with '8166'
8163 -8165 8166 0
-8166 8165 0
-8166 -8163 0
c Var 'aux1437' order represents '5' with '8167'
-8165 8167 0
c Var 'aux1437' direct represents '5' with '8168'
8165 -8167 8168 0
-8168 8167 0
-8168 -8165 0
c Var 'aux1437' order represents '6' with '8169'
-8167 8169 0
c Var 'aux1437' direct represents '6' with '8170'
8167 -8169 8170 0
-8170 8169 0
-8170 -8167 0
c Var 'aux1437' order represents '7' with '8171'
-8169 8171 0
c Var 'aux1437' direct represents '7' with '8172'
8169 -8171 8172 0
-8172 8171 0
-8172 -8169 0
c Var 'aux1437' order represents '8' with '8173'
-8171 8173 0
c Var 'aux1437' direct represents '8' with '8174'
8171 -8173 8174 0
-8174 8173 0
-8174 -8171 0
c Var 'aux1437' order represents '9' with '8175'
-8173 8175 0
c Var 'aux1437' direct represents '9' with '8176'
8173 -8175 8176 0
-8176 8175 0
-8176 -8173 0
c Var 'aux1437' order represents '10' with '8177'
-8175 8177 0
c Var 'aux1437' direct represents '10' with '8178'
8175 -8177 8178 0
-8178 8177 0
-8178 -8175 0
c Var 'aux1437' order represents '11' with '8179'
-8177 8179 0
c Var 'aux1437' direct represents '11' with '8180'
8177 -8179 8180 0
-8180 8179 0
-8180 -8177 0
c Var 'aux1437' order represents '12' with '8181'
-8179 8181 0
c Var 'aux1437' direct represents '12' with '8182'
8179 -8181 8182 0
-8182 8181 0
-8182 -8179 0
c Var 'aux1437' order represents '13' with '8183'
-8181 8183 0
c Var 'aux1437' direct represents '13' with '8184'
8181 -8183 8184 0
-8184 8183 0
-8184 -8181 0
c Var 'aux1437' order represents '14' with '8185'
-8183 8185 0
c Var 'aux1437' direct represents '14' with '8186'
8183 -8185 8186 0
-8186 8185 0
-8186 -8183 0
c Var 'aux1437' order represents '15' with '8187'
-8185 8187 0
c Var 'aux1437' direct represents '15' with '8188'
8185 -8187 8188 0
-8188 8187 0
-8188 -8185 0
c Var 'aux1437' order represents '16' with '8189'
-8187 8189 0
c Var 'aux1437' direct represents '16' with '8190'
8187 -8189 8190 0
-8190 8189 0
-8190 -8187 0
c Var 'aux1437' order represents '17' with '8191'
-8189 8191 0
c Var 'aux1437' direct represents '17' with '8192'
8189 -8191 8192 0
-8192 8191 0
-8192 -8189 0
c Var 'aux1437' order represents '18' with '8193'
-8191 8193 0
c Var 'aux1437' direct represents '18' with '8194'
8191 -8193 8194 0
-8194 8193 0
-8194 -8191 0
c Var 'aux1437' order represents '19' with '8195'
-8193 8195 0
c Var 'aux1437' direct represents '19' with '8196'
8193 -8195 8196 0
-8196 8195 0
-8196 -8193 0
c Var 'aux1437' order represents '20' with '8197'
-8195 8197 0
c Var 'aux1437' direct represents '20' with '8198'
8195 -8197 8198 0
-8198 8197 0
-8198 -8195 0
c Var 'aux1437' order represents '21' with '8199'
-8197 8199 0
c Var 'aux1437' direct represents '21' with '8200'
8197 -8199 8200 0
-8200 8199 0
-8200 -8197 0
c Var 'aux1437' order represents '22' with '8201'
-8199 8201 0
c Var 'aux1437' direct represents '22' with '8202'
8199 -8201 8202 0
-8202 8201 0
-8202 -8199 0
c Var 'aux1437' order represents '23' with '8203'
-8201 8203 0
c Var 'aux1437' direct represents '23' with '8204'
8201 -8203 8204 0
-8204 8203 0
-8204 -8201 0
c Var 'aux1437' order represents '24' with '8205'
-8203 8205 0
c Var 'aux1437' direct represents '24' with '8206'
8203 -8205 8206 0
-8206 8205 0
-8206 -8203 0
c Var 'aux1437' order represents '25' with '8207'
-8205 8207 0
c Var 'aux1437' direct represents '25' with '8208'
8205 -8207 8208 0
-8208 8207 0
-8208 -8205 0
c Var 'aux1437' order represents '26' with '8209'
-8207 8209 0
c Var 'aux1437' direct represents '26' with '8210'
8207 -8209 8210 0
-8210 8209 0
-8210 -8207 0
c Var 'aux1437' order represents '27' with '8211'
-8209 8211 0
c Var 'aux1437' direct represents '27' with '8212'
8209 -8211 8212 0
-8212 8211 0
-8212 -8209 0
c Var 'aux1437' order represents '28' with '8213'
-8211 8213 0
c Var 'aux1437' direct represents '28' with '8214'
8211 -8213 8214 0
-8214 8213 0
-8214 -8211 0
c Var 'aux1437' order represents '29' with '8215'
-8213 8215 0
c Var 'aux1437' direct represents '29' with '8216'
8213 -8215 8216 0
-8216 8215 0
-8216 -8213 0
c Var 'aux1437' order represents '30' with '8217'
-8215 8217 0
c Var 'aux1437' direct represents '30' with '8218'
8215 -8217 8218 0
-8218 8217 0
-8218 -8215 0
c Var 'aux1437' order represents '31' with '8219'
-8217 8219 0
c Var 'aux1437' direct represents '31' with '8220'
8217 -8219 8220 0
-8220 8219 0
-8220 -8217 0
c Var 'aux1437' direct represents '32' with '-8219'
8158 8160 8162 8164 8166 8168 8170 8172 8174 8176 8178 8180 8182 8184 8186 8188 8190 8192 8194 8196 8198 8200 8202 8204 8206 8208 8210 8212 8214 8216 8218 8220 -8219 0
c Encoding variable: aux1438 with domain: int(0..2) (representing constraint ((agrid_00004_00001=4) + (agrid_00004_00002=4)))
c Both direct and order encoding.
c Var 'aux1438' order represents '0' with '8221'
c Var 'aux1438' direct represents '0' with '8221'
c Var 'aux1438' order represents '1' with '8222'
-8221 8222 0
c Var 'aux1438' direct represents '1' with '8223'
8221 -8222 8223 0
-8223 8222 0
-8223 -8221 0
c Var 'aux1438' direct represents '2' with '-8222'
8221 8223 -8222 0
c Encoding variable: aux1439 with domain: int(0..2) (representing constraint ((agrid_00004_00004=4) + (agrid_00004_00008=4)))
c Both direct and order encoding.
c Var 'aux1439' order represents '0' with '8224'
c Var 'aux1439' direct represents '0' with '8224'
c Var 'aux1439' order represents '1' with '8225'
-8224 8225 0
c Var 'aux1439' direct represents '1' with '8226'
8224 -8225 8226 0
-8226 8225 0
-8226 -8224 0
c Var 'aux1439' direct represents '2' with '-8225'
8224 8226 -8225 0
c Encoding variable: aux1440 with domain: int(0..2) (representing constraint ((agrid_00006_00007=4) + (agrid_00002_00008=4)))
c Both direct and order encoding.
c Var 'aux1440' order represents '0' with '8227'
c Var 'aux1440' direct represents '0' with '8227'
c Var 'aux1440' order represents '1' with '8228'
-8227 8228 0
c Var 'aux1440' direct represents '1' with '8229'
8227 -8228 8229 0
-8229 8228 0
-8229 -8227 0
c Var 'aux1440' direct represents '2' with '-8228'
8227 8229 -8228 0
c Encoding variable: aux1441 with domain: int(0..2) (representing constraint ((agrid_00006_00006=4) + (agrid_00005_00008=4)))
c Both direct and order encoding.
c Var 'aux1441' order represents '0' with '8230'
c Var 'aux1441' direct represents '0' with '8230'
c Var 'aux1441' order represents '1' with '8231'
-8230 8231 0
c Var 'aux1441' direct represents '1' with '8232'
8230 -8231 8232 0
-8232 8231 0
-8232 -8230 0
c Var 'aux1441' direct represents '2' with '-8231'
8230 8232 -8231 0
c Encoding variable: aux1442 with domain: int(0..2) (representing constraint ((agrid_00006_00005=4) + (agrid_00006_00008=4)))
c Both direct and order encoding.
c Var 'aux1442' order represents '0' with '8233'
c Var 'aux1442' direct represents '0' with '8233'
c Var 'aux1442' order represents '1' with '8234'
-8233 8234 0
c Var 'aux1442' direct represents '1' with '8235'
8233 -8234 8235 0
-8235 8234 0
-8235 -8233 0
c Var 'aux1442' direct represents '2' with '-8234'
8233 8235 -8234 0
c Encoding variable: aux1443 with domain: int(0..2) (representing constraint ((agrid_00006_00004=4) + (agrid_00003_00001=4)))
c Both direct and order encoding.
c Var 'aux1443' order represents '0' with '8236'
c Var 'aux1443' direct represents '0' with '8236'
c Var 'aux1443' order represents '1' with '8237'
-8236 8237 0
c Var 'aux1443' direct represents '1' with '8238'
8236 -8237 8238 0
-8238 8237 0
-8238 -8236 0
c Var 'aux1443' direct represents '2' with '-8237'
8236 8238 -8237 0
c Encoding variable: aux1444 with domain: int(0..2) (representing constraint ((agrid_00006_00003=4) + (agrid_00007_00001=4)))
c Both direct and order encoding.
c Var 'aux1444' order represents '0' with '8239'
c Var 'aux1444' direct represents '0' with '8239'
c Var 'aux1444' order represents '1' with '8240'
-8239 8240 0
c Var 'aux1444' direct represents '1' with '8241'
8239 -8240 8241 0
-8241 8240 0
-8241 -8239 0
c Var 'aux1444' direct represents '2' with '-8240'
8239 8241 -8240 0
c Encoding variable: aux1445 with domain: int(0..2) (representing constraint ((agrid_00006_00002=4) + (agrid_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux1445' order represents '0' with '8242'
c Var 'aux1445' direct represents '0' with '8242'
c Var 'aux1445' order represents '1' with '8243'
-8242 8243 0
c Var 'aux1445' direct represents '1' with '8244'
8242 -8243 8244 0
-8244 8243 0
-8244 -8242 0
c Var 'aux1445' direct represents '2' with '-8243'
8242 8244 -8243 0
c Encoding variable: aux1446 with domain: int(0..2) (representing constraint ((agrid_00006_00001=4) + (agrid_00003_00003=4)))
c Both direct and order encoding.
c Var 'aux1446' order represents '0' with '8245'
c Var 'aux1446' direct represents '0' with '8245'
c Var 'aux1446' order represents '1' with '8246'
-8245 8246 0
c Var 'aux1446' direct represents '1' with '8247'
8245 -8246 8247 0
-8247 8246 0
-8247 -8245 0
c Var 'aux1446' direct represents '2' with '-8246'
8245 8247 -8246 0
c Encoding variable: aux1447 with domain: int(0..2) (representing constraint ((agrid_00001_00008=4) + (agrid_00002_00001=4)))
c Both direct and order encoding.
c Var 'aux1447' order represents '0' with '8248'
c Var 'aux1447' direct represents '0' with '8248'
c Var 'aux1447' order represents '1' with '8249'
-8248 8249 0
c Var 'aux1447' direct represents '1' with '8250'
8248 -8249 8250 0
-8250 8249 0
-8250 -8248 0
c Var 'aux1447' direct represents '2' with '-8249'
8248 8250 -8249 0
c Encoding variable: aux1448 with domain: int(0..2) (representing constraint ((agrid_00001_00007=4) + (agrid_00007_00002=4)))
c Both direct and order encoding.
c Var 'aux1448' order represents '0' with '8251'
c Var 'aux1448' direct represents '0' with '8251'
c Var 'aux1448' order represents '1' with '8252'
-8251 8252 0
c Var 'aux1448' direct represents '1' with '8253'
8251 -8252 8253 0
-8253 8252 0
-8253 -8251 0
c Var 'aux1448' direct represents '2' with '-8252'
8251 8253 -8252 0
c Encoding variable: aux1449 with domain: int(0..2) (representing constraint ((agrid_00001_00006=4) + (agrid_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux1449' order represents '0' with '8254'
c Var 'aux1449' direct represents '0' with '8254'
c Var 'aux1449' order represents '1' with '8255'
-8254 8255 0
c Var 'aux1449' direct represents '1' with '8256'
8254 -8255 8256 0
-8256 8255 0
-8256 -8254 0
c Var 'aux1449' direct represents '2' with '-8255'
8254 8256 -8255 0
c Encoding variable: aux1450 with domain: int(0..2) (representing constraint ((agrid_00001_00005=4) + (agrid_00003_00005=4)))
c Both direct and order encoding.
c Var 'aux1450' order represents '0' with '8257'
c Var 'aux1450' direct represents '0' with '8257'
c Var 'aux1450' order represents '1' with '8258'
-8257 8258 0
c Var 'aux1450' direct represents '1' with '8259'
8257 -8258 8259 0
-8259 8258 0
-8259 -8257 0
c Var 'aux1450' direct represents '2' with '-8258'
8257 8259 -8258 0
c Encoding variable: aux1451 with domain: int(0..2) (representing constraint ((agrid_00001_00004=4) + (agrid_00007_00003=4)))
c Both direct and order encoding.
c Var 'aux1451' order represents '0' with '8260'
c Var 'aux1451' direct represents '0' with '8260'
c Var 'aux1451' order represents '1' with '8261'
-8260 8261 0
c Var 'aux1451' direct represents '1' with '8262'
8260 -8261 8262 0
-8262 8261 0
-8262 -8260 0
c Var 'aux1451' direct represents '2' with '-8261'
8260 8262 -8261 0
c Encoding variable: aux1452 with domain: int(0..2) (representing constraint ((agrid_00001_00003=4) + (agrid_00003_00006=4)))
c Both direct and order encoding.
c Var 'aux1452' order represents '0' with '8263'
c Var 'aux1452' direct represents '0' with '8263'
c Var 'aux1452' order represents '1' with '8264'
-8263 8264 0
c Var 'aux1452' direct represents '1' with '8265'
8263 -8264 8265 0
-8265 8264 0
-8265 -8263 0
c Var 'aux1452' direct represents '2' with '-8264'
8263 8265 -8264 0
c Encoding variable: aux1453 with domain: int(0..2) (representing constraint ((agrid_00001_00002=4) + (agrid_00003_00007=4)))
c Both direct and order encoding.
c Var 'aux1453' order represents '0' with '8266'
c Var 'aux1453' direct represents '0' with '8266'
c Var 'aux1453' order represents '1' with '8267'
-8266 8267 0
c Var 'aux1453' direct represents '1' with '8268'
8266 -8267 8268 0
-8268 8267 0
-8268 -8266 0
c Var 'aux1453' direct represents '2' with '-8267'
8266 8268 -8267 0
c Encoding variable: aux1454 with domain: int(0..2) (representing constraint ((agrid_00001_00001=4) + (agrid_00004_00005=4)))
c Both direct and order encoding.
c Var 'aux1454' order represents '0' with '8269'
c Var 'aux1454' direct represents '0' with '8269'
c Var 'aux1454' order represents '1' with '8270'
-8269 8270 0
c Var 'aux1454' direct represents '1' with '8271'
8269 -8270 8271 0
-8271 8270 0
-8271 -8269 0
c Var 'aux1454' direct represents '2' with '-8270'
8269 8271 -8270 0
c Encoding variable: aux1455 with domain: int(0..2) (representing constraint ((agrid_00008_00008=4) + (agrid_00002_00002=4)))
c Both direct and order encoding.
c Var 'aux1455' order represents '0' with '8272'
c Var 'aux1455' direct represents '0' with '8272'
c Var 'aux1455' order represents '1' with '8273'
-8272 8273 0
c Var 'aux1455' direct represents '1' with '8274'
8272 -8273 8274 0
-8274 8273 0
-8274 -8272 0
c Var 'aux1455' direct represents '2' with '-8273'
8272 8274 -8273 0
c Encoding variable: aux1456 with domain: int(0..2) (representing constraint ((agrid_00008_00007=4) + (agrid_00007_00004=4)))
c Both direct and order encoding.
c Var 'aux1456' order represents '0' with '8275'
c Var 'aux1456' direct represents '0' with '8275'
c Var 'aux1456' order represents '1' with '8276'
-8275 8276 0
c Var 'aux1456' direct represents '1' with '8277'
8275 -8276 8277 0
-8277 8276 0
-8277 -8275 0
c Var 'aux1456' direct represents '2' with '-8276'
8275 8277 -8276 0
c Encoding variable: aux1457 with domain: int(0..2) (representing constraint ((agrid_00008_00006=4) + (agrid_00003_00008=4)))
c Both direct and order encoding.
c Var 'aux1457' order represents '0' with '8278'
c Var 'aux1457' direct represents '0' with '8278'
c Var 'aux1457' order represents '1' with '8279'
-8278 8279 0
c Var 'aux1457' direct represents '1' with '8280'
8278 -8279 8280 0
-8280 8279 0
-8280 -8278 0
c Var 'aux1457' direct represents '2' with '-8279'
8278 8280 -8279 0
c Encoding variable: aux1458 with domain: int(0..2) (representing constraint ((agrid_00008_00005=4) + (agrid_00008_00001=4)))
c Both direct and order encoding.
c Var 'aux1458' order represents '0' with '8281'
c Var 'aux1458' direct represents '0' with '8281'
c Var 'aux1458' order represents '1' with '8282'
-8281 8282 0
c Var 'aux1458' direct represents '1' with '8283'
8281 -8282 8283 0
-8283 8282 0
-8283 -8281 0
c Var 'aux1458' direct represents '2' with '-8282'
8281 8283 -8282 0
c Encoding variable: aux1459 with domain: int(0..2) (representing constraint ((agrid_00008_00004=4) + (agrid_00007_00005=4)))
c Both direct and order encoding.
c Var 'aux1459' order represents '0' with '8284'
c Var 'aux1459' direct represents '0' with '8284'
c Var 'aux1459' order represents '1' with '8285'
-8284 8285 0
c Var 'aux1459' direct represents '1' with '8286'
8284 -8285 8286 0
-8286 8285 0
-8286 -8284 0
c Var 'aux1459' direct represents '2' with '-8285'
8284 8286 -8285 0
c Encoding variable: aux1460 with domain: int(0..2) (representing constraint ((agrid_00008_00002=4) + (agrid_00008_00003=4)))
c Both direct and order encoding.
c Var 'aux1460' order represents '0' with '8287'
c Var 'aux1460' direct represents '0' with '8287'
c Var 'aux1460' order represents '1' with '8288'
-8287 8288 0
c Var 'aux1460' direct represents '1' with '8289'
8287 -8288 8289 0
-8289 8288 0
-8289 -8287 0
c Var 'aux1460' direct represents '2' with '-8288'
8287 8289 -8288 0
c Encoding variable: aux1461 with domain: int(0..2) (representing constraint ((agrid_00002_00003=4) + (agrid_00007_00006=4)))
c Both direct and order encoding.
c Var 'aux1461' order represents '0' with '8290'
c Var 'aux1461' direct represents '0' with '8290'
c Var 'aux1461' order represents '1' with '8291'
-8290 8291 0
c Var 'aux1461' direct represents '1' with '8292'
8290 -8291 8292 0
-8292 8291 0
-8292 -8290 0
c Var 'aux1461' direct represents '2' with '-8291'
8290 8292 -8291 0
c Encoding variable: aux1462 with domain: int(0..2) (representing constraint ((agrid_00007_00007=4) + (agrid_00004_00003=4)))
c Both direct and order encoding.
c Var 'aux1462' order represents '0' with '8293'
c Var 'aux1462' direct represents '0' with '8293'
c Var 'aux1462' order represents '1' with '8294'
-8293 8294 0
c Var 'aux1462' direct represents '1' with '8295'
8293 -8294 8295 0
-8295 8294 0
-8295 -8293 0
c Var 'aux1462' direct represents '2' with '-8294'
8293 8295 -8294 0
c Encoding variable: aux1463 with domain: int(0..2) (representing constraint ((agrid_00004_00006=4) + (agrid_00002_00004=4)))
c Both direct and order encoding.
c Var 'aux1463' order represents '0' with '8296'
c Var 'aux1463' direct represents '0' with '8296'
c Var 'aux1463' order represents '1' with '8297'
-8296 8297 0
c Var 'aux1463' direct represents '1' with '8298'
8296 -8297 8298 0
-8298 8297 0
-8298 -8296 0
c Var 'aux1463' direct represents '2' with '-8297'
8296 8298 -8297 0
c Encoding variable: aux1464 with domain: int(0..2) (representing constraint ((agrid_00007_00008=4) + (agrid_00005_00001=4)))
c Both direct and order encoding.
c Var 'aux1464' order represents '0' with '8299'
c Var 'aux1464' direct represents '0' with '8299'
c Var 'aux1464' order represents '1' with '8300'
-8299 8300 0
c Var 'aux1464' direct represents '1' with '8301'
8299 -8300 8301 0
-8301 8300 0
-8301 -8299 0
c Var 'aux1464' direct represents '2' with '-8300'
8299 8301 -8300 0
c Encoding variable: aux1465 with domain: int(0..2) (representing constraint ((agrid_00002_00005=4) + (agrid_00005_00002=4)))
c Both direct and order encoding.
c Var 'aux1465' order represents '0' with '8302'
c Var 'aux1465' direct represents '0' with '8302'
c Var 'aux1465' order represents '1' with '8303'
-8302 8303 0
c Var 'aux1465' direct represents '1' with '8304'
8302 -8303 8304 0
-8304 8303 0
-8304 -8302 0
c Var 'aux1465' direct represents '2' with '-8303'
8302 8304 -8303 0
c Encoding variable: aux1466 with domain: int(0..2) (representing constraint ((agrid_00005_00003=4) + (agrid_00004_00007=4)))
c Both direct and order encoding.
c Var 'aux1466' order represents '0' with '8305'
c Var 'aux1466' direct represents '0' with '8305'
c Var 'aux1466' order represents '1' with '8306'
-8305 8306 0
c Var 'aux1466' direct represents '1' with '8307'
8305 -8306 8307 0
-8307 8306 0
-8307 -8305 0
c Var 'aux1466' direct represents '2' with '-8306'
8305 8307 -8306 0
c Encoding variable: aux1467 with domain: int(0..2) (representing constraint ((agrid_00002_00006=4) + (agrid_00005_00004=4)))
c Both direct and order encoding.
c Var 'aux1467' order represents '0' with '8308'
c Var 'aux1467' direct represents '0' with '8308'
c Var 'aux1467' order represents '1' with '8309'
-8308 8309 0
c Var 'aux1467' direct represents '1' with '8310'
8308 -8309 8310 0
-8310 8309 0
-8310 -8308 0
c Var 'aux1467' direct represents '2' with '-8309'
8308 8310 -8309 0
c Encoding variable: aux1468 with domain: int(0..2) (representing constraint ((agrid_00005_00005=4) + (agrid_00002_00007=4)))
c Both direct and order encoding.
c Var 'aux1468' order represents '0' with '8311'
c Var 'aux1468' direct represents '0' with '8311'
c Var 'aux1468' order represents '1' with '8312'
-8311 8312 0
c Var 'aux1468' direct represents '1' with '8313'
8311 -8312 8313 0
-8313 8312 0
-8313 -8311 0
c Var 'aux1468' direct represents '2' with '-8312'
8311 8313 -8312 0
c Encoding variable: aux1469 with domain: int(0..2) (representing constraint ((agrid_00005_00006=4) + (agrid_00005_00007=4)))
c Both direct and order encoding.
c Var 'aux1469' order represents '0' with '8314'
c Var 'aux1469' direct represents '0' with '8314'
c Var 'aux1469' order represents '1' with '8315'
-8314 8315 0
c Var 'aux1469' direct represents '1' with '8316'
8314 -8315 8316 0
-8316 8315 0
-8316 -8314 0
c Var 'aux1469' direct represents '2' with '-8315'
8314 8316 -8315 0
c Encoding variable: aux1470 with domain: int(0..4) (representing constraint (aux1453 + aux1469))
c Both direct and order encoding.
c Var 'aux1470' order represents '0' with '8317'
c Var 'aux1470' direct represents '0' with '8317'
c Var 'aux1470' order represents '1' with '8318'
-8317 8318 0
c Var 'aux1470' direct represents '1' with '8319'
8317 -8318 8319 0
-8319 8318 0
-8319 -8317 0
c Var 'aux1470' order represents '2' with '8320'
-8318 8320 0
c Var 'aux1470' direct represents '2' with '8321'
8318 -8320 8321 0
-8321 8320 0
-8321 -8318 0
c Var 'aux1470' order represents '3' with '8322'
-8320 8322 0
c Var 'aux1470' direct represents '3' with '8323'
8320 -8322 8323 0
-8323 8322 0
-8323 -8320 0
c Var 'aux1470' direct represents '4' with '-8322'
8317 8319 8321 8323 -8322 0
c Encoding variable: aux1471 with domain: int(0..4) (representing constraint (aux1451 + aux1443))
c Both direct and order encoding.
c Var 'aux1471' order represents '0' with '8324'
c Var 'aux1471' direct represents '0' with '8324'
c Var 'aux1471' order represents '1' with '8325'
-8324 8325 0
c Var 'aux1471' direct represents '1' with '8326'
8324 -8325 8326 0
-8326 8325 0
-8326 -8324 0
c Var 'aux1471' order represents '2' with '8327'
-8325 8327 0
c Var 'aux1471' direct represents '2' with '8328'
8325 -8327 8328 0
-8328 8327 0
-8328 -8325 0
c Var 'aux1471' order represents '3' with '8329'
-8327 8329 0
c Var 'aux1471' direct represents '3' with '8330'
8327 -8329 8330 0
-8330 8329 0
-8330 -8327 0
c Var 'aux1471' direct represents '4' with '-8329'
8324 8326 8328 8330 -8329 0
c Encoding variable: aux1472 with domain: int(0..4) (representing constraint (aux1441 + aux1439))
c Both direct and order encoding.
c Var 'aux1472' order represents '0' with '8331'
c Var 'aux1472' direct represents '0' with '8331'
c Var 'aux1472' order represents '1' with '8332'
-8331 8332 0
c Var 'aux1472' direct represents '1' with '8333'
8331 -8332 8333 0
-8333 8332 0
-8333 -8331 0
c Var 'aux1472' order represents '2' with '8334'
-8332 8334 0
c Var 'aux1472' direct represents '2' with '8335'
8332 -8334 8335 0
-8335 8334 0
-8335 -8332 0
c Var 'aux1472' order represents '3' with '8336'
-8334 8336 0
c Var 'aux1472' direct represents '3' with '8337'
8334 -8336 8337 0
-8337 8336 0
-8337 -8334 0
c Var 'aux1472' direct represents '4' with '-8336'
8331 8333 8335 8337 -8336 0
c Encoding variable: aux1473 with domain: int(0..4) (representing constraint (aux1466 + aux1438))
c Both direct and order encoding.
c Var 'aux1473' order represents '0' with '8338'
c Var 'aux1473' direct represents '0' with '8338'
c Var 'aux1473' order represents '1' with '8339'
-8338 8339 0
c Var 'aux1473' direct represents '1' with '8340'
8338 -8339 8340 0
-8340 8339 0
-8340 -8338 0
c Var 'aux1473' order represents '2' with '8341'
-8339 8341 0
c Var 'aux1473' direct represents '2' with '8342'
8339 -8341 8342 0
-8342 8341 0
-8342 -8339 0
c Var 'aux1473' order represents '3' with '8343'
-8341 8343 0
c Var 'aux1473' direct represents '3' with '8344'
8341 -8343 8344 0
-8344 8343 0
-8344 -8341 0
c Var 'aux1473' direct represents '4' with '-8343'
8338 8340 8342 8344 -8343 0
c Encoding variable: aux1474 with domain: int(0..4) (representing constraint (aux1465 + aux1442))
c Both direct and order encoding.
c Var 'aux1474' order represents '0' with '8345'
c Var 'aux1474' direct represents '0' with '8345'
c Var 'aux1474' order represents '1' with '8346'
-8345 8346 0
c Var 'aux1474' direct represents '1' with '8347'
8345 -8346 8347 0
-8347 8346 0
-8347 -8345 0
c Var 'aux1474' order represents '2' with '8348'
-8346 8348 0
c Var 'aux1474' direct represents '2' with '8349'
8346 -8348 8349 0
-8349 8348 0
-8349 -8346 0
c Var 'aux1474' order represents '3' with '8350'
-8348 8350 0
c Var 'aux1474' direct represents '3' with '8351'
8348 -8350 8351 0
-8351 8350 0
-8351 -8348 0
c Var 'aux1474' direct represents '4' with '-8350'
8345 8347 8349 8351 -8350 0
c Encoding variable: aux1475 with domain: int(0..4) (representing constraint (aux1445 + aux1450))
c Both direct and order encoding.
c Var 'aux1475' order represents '0' with '8352'
c Var 'aux1475' direct represents '0' with '8352'
c Var 'aux1475' order represents '1' with '8353'
-8352 8353 0
c Var 'aux1475' direct represents '1' with '8354'
8352 -8353 8354 0
-8354 8353 0
-8354 -8352 0
c Var 'aux1475' order represents '2' with '8355'
-8353 8355 0
c Var 'aux1475' direct represents '2' with '8356'
8353 -8355 8356 0
-8356 8355 0
-8356 -8353 0
c Var 'aux1475' order represents '3' with '8357'
-8355 8357 0
c Var 'aux1475' direct represents '3' with '8358'
8355 -8357 8358 0
-8358 8357 0
-8358 -8355 0
c Var 'aux1475' direct represents '4' with '-8357'
8352 8354 8356 8358 -8357 0
c Encoding variable: aux1476 with domain: int(0..4) (representing constraint (aux1463 + aux1446))
c Both direct and order encoding.
c Var 'aux1476' order represents '0' with '8359'
c Var 'aux1476' direct represents '0' with '8359'
c Var 'aux1476' order represents '1' with '8360'
-8359 8360 0
c Var 'aux1476' direct represents '1' with '8361'
8359 -8360 8361 0
-8361 8360 0
-8361 -8359 0
c Var 'aux1476' order represents '2' with '8362'
-8360 8362 0
c Var 'aux1476' direct represents '2' with '8363'
8360 -8362 8363 0
-8363 8362 0
-8363 -8360 0
c Var 'aux1476' order represents '3' with '8364'
-8362 8364 0
c Var 'aux1476' direct represents '3' with '8365'
8362 -8364 8365 0
-8365 8364 0
-8365 -8362 0
c Var 'aux1476' direct represents '4' with '-8364'
8359 8361 8363 8365 -8364 0
c Encoding variable: aux1477 with domain: int(0..4) (representing constraint (aux1448 + aux1449))
c Both direct and order encoding.
c Var 'aux1477' order represents '0' with '8366'
c Var 'aux1477' direct represents '0' with '8366'
c Var 'aux1477' order represents '1' with '8367'
-8366 8367 0
c Var 'aux1477' direct represents '1' with '8368'
8366 -8367 8368 0
-8368 8367 0
-8368 -8366 0
c Var 'aux1477' order represents '2' with '8369'
-8367 8369 0
c Var 'aux1477' direct represents '2' with '8370'
8367 -8369 8370 0
-8370 8369 0
-8370 -8367 0
c Var 'aux1477' order represents '3' with '8371'
-8369 8371 0
c Var 'aux1477' direct represents '3' with '8372'
8369 -8371 8372 0
-8372 8371 0
-8372 -8369 0
c Var 'aux1477' direct represents '4' with '-8371'
8366 8368 8370 8372 -8371 0
c Encoding variable: aux1478 with domain: int(0..4) (representing constraint (aux1452 + aux1460))
c Both direct and order encoding.
c Var 'aux1478' order represents '0' with '8373'
c Var 'aux1478' direct represents '0' with '8373'
c Var 'aux1478' order represents '1' with '8374'
-8373 8374 0
c Var 'aux1478' direct represents '1' with '8375'
8373 -8374 8375 0
-8375 8374 0
-8375 -8373 0
c Var 'aux1478' order represents '2' with '8376'
-8374 8376 0
c Var 'aux1478' direct represents '2' with '8377'
8374 -8376 8377 0
-8377 8376 0
-8377 -8374 0
c Var 'aux1478' order represents '3' with '8378'
-8376 8378 0
c Var 'aux1478' direct represents '3' with '8379'
8376 -8378 8379 0
-8379 8378 0
-8379 -8376 0
c Var 'aux1478' direct represents '4' with '-8378'
8373 8375 8377 8379 -8378 0
c Encoding variable: aux1479 with domain: int(0..4) (representing constraint (aux1461 + aux1458))
c Both direct and order encoding.
c Var 'aux1479' order represents '0' with '8380'
c Var 'aux1479' direct represents '0' with '8380'
c Var 'aux1479' order represents '1' with '8381'
-8380 8381 0
c Var 'aux1479' direct represents '1' with '8382'
8380 -8381 8382 0
-8382 8381 0
-8382 -8380 0
c Var 'aux1479' order represents '2' with '8383'
-8381 8383 0
c Var 'aux1479' direct represents '2' with '8384'
8381 -8383 8384 0
-8384 8383 0
-8384 -8381 0
c Var 'aux1479' order represents '3' with '8385'
-8383 8385 0
c Var 'aux1479' direct represents '3' with '8386'
8383 -8385 8386 0
-8386 8385 0
-8386 -8383 0
c Var 'aux1479' direct represents '4' with '-8385'
8380 8382 8384 8386 -8385 0
c Encoding variable: aux1480 with domain: int(0..4) (representing constraint (aux1459 + aux1454))
c Both direct and order encoding.
c Var 'aux1480' order represents '0' with '8387'
c Var 'aux1480' direct represents '0' with '8387'
c Var 'aux1480' order represents '1' with '8388'
-8387 8388 0
c Var 'aux1480' direct represents '1' with '8389'
8387 -8388 8389 0
-8389 8388 0
-8389 -8387 0
c Var 'aux1480' order represents '2' with '8390'
-8388 8390 0
c Var 'aux1480' direct represents '2' with '8391'
8388 -8390 8391 0
-8391 8390 0
-8391 -8388 0
c Var 'aux1480' order represents '3' with '8392'
-8390 8392 0
c Var 'aux1480' direct represents '3' with '8393'
8390 -8392 8393 0
-8393 8392 0
-8393 -8390 0
c Var 'aux1480' direct represents '4' with '-8392'
8387 8389 8391 8393 -8392 0
c Encoding variable: aux1481 with domain: int(0..4) (representing constraint (aux1457 + aux1455))
c Both direct and order encoding.
c Var 'aux1481' order represents '0' with '8394'
c Var 'aux1481' direct represents '0' with '8394'
c Var 'aux1481' order represents '1' with '8395'
-8394 8395 0
c Var 'aux1481' direct represents '1' with '8396'
8394 -8395 8396 0
-8396 8395 0
-8396 -8394 0
c Var 'aux1481' order represents '2' with '8397'
-8395 8397 0
c Var 'aux1481' direct represents '2' with '8398'
8395 -8397 8398 0
-8398 8397 0
-8398 -8395 0
c Var 'aux1481' order represents '3' with '8399'
-8397 8399 0
c Var 'aux1481' direct represents '3' with '8400'
8397 -8399 8400 0
-8400 8399 0
-8400 -8397 0
c Var 'aux1481' direct represents '4' with '-8399'
8394 8396 8398 8400 -8399 0
c Encoding variable: aux1482 with domain: int(0..4) (representing constraint (aux1456 + aux1468))
c Both direct and order encoding.
c Var 'aux1482' order represents '0' with '8401'
c Var 'aux1482' direct represents '0' with '8401'
c Var 'aux1482' order represents '1' with '8402'
-8401 8402 0
c Var 'aux1482' direct represents '1' with '8403'
8401 -8402 8403 0
-8403 8402 0
-8403 -8401 0
c Var 'aux1482' order represents '2' with '8404'
-8402 8404 0
c Var 'aux1482' direct represents '2' with '8405'
8402 -8404 8405 0
-8405 8404 0
-8405 -8402 0
c Var 'aux1482' order represents '3' with '8406'
-8404 8406 0
c Var 'aux1482' direct represents '3' with '8407'
8404 -8406 8407 0
-8407 8406 0
-8407 -8404 0
c Var 'aux1482' direct represents '4' with '-8406'
8401 8403 8405 8407 -8406 0
c Encoding variable: aux1483 with domain: int(0..4) (representing constraint (aux1464 + aux1462))
c Both direct and order encoding.
c Var 'aux1483' order represents '0' with '8408'
c Var 'aux1483' direct represents '0' with '8408'
c Var 'aux1483' order represents '1' with '8409'
-8408 8409 0
c Var 'aux1483' direct represents '1' with '8410'
8408 -8409 8410 0
-8410 8409 0
-8410 -8408 0
c Var 'aux1483' order represents '2' with '8411'
-8409 8411 0
c Var 'aux1483' direct represents '2' with '8412'
8409 -8411 8412 0
-8412 8411 0
-8412 -8409 0
c Var 'aux1483' order represents '3' with '8413'
-8411 8413 0
c Var 'aux1483' direct represents '3' with '8414'
8411 -8413 8414 0
-8414 8413 0
-8414 -8411 0
c Var 'aux1483' direct represents '4' with '-8413'
8408 8410 8412 8414 -8413 0
c Encoding variable: aux1484 with domain: int(0..4) (representing constraint (aux1447 + aux1440))
c Both direct and order encoding.
c Var 'aux1484' order represents '0' with '8415'
c Var 'aux1484' direct represents '0' with '8415'
c Var 'aux1484' order represents '1' with '8416'
-8415 8416 0
c Var 'aux1484' direct represents '1' with '8417'
8415 -8416 8417 0
-8417 8416 0
-8417 -8415 0
c Var 'aux1484' order represents '2' with '8418'
-8416 8418 0
c Var 'aux1484' direct represents '2' with '8419'
8416 -8418 8419 0
-8419 8418 0
-8419 -8416 0
c Var 'aux1484' order represents '3' with '8420'
-8418 8420 0
c Var 'aux1484' direct represents '3' with '8421'
8418 -8420 8421 0
-8421 8420 0
-8421 -8418 0
c Var 'aux1484' direct represents '4' with '-8420'
8415 8417 8419 8421 -8420 0
c Encoding variable: aux1485 with domain: int(0..4) (representing constraint (aux1444 + aux1467))
c Both direct and order encoding.
c Var 'aux1485' order represents '0' with '8422'
c Var 'aux1485' direct represents '0' with '8422'
c Var 'aux1485' order represents '1' with '8423'
-8422 8423 0
c Var 'aux1485' direct represents '1' with '8424'
8422 -8423 8424 0
-8424 8423 0
-8424 -8422 0
c Var 'aux1485' order represents '2' with '8425'
-8423 8425 0
c Var 'aux1485' direct represents '2' with '8426'
8423 -8425 8426 0
-8426 8425 0
-8426 -8423 0
c Var 'aux1485' order represents '3' with '8427'
-8425 8427 0
c Var 'aux1485' direct represents '3' with '8428'
8425 -8427 8428 0
-8428 8427 0
-8428 -8425 0
c Var 'aux1485' direct represents '4' with '-8427'
8422 8424 8426 8428 -8427 0
c Encoding variable: aux1486 with domain: int(0..8) (representing constraint (aux1477 + aux1485))
c Both direct and order encoding.
c Var 'aux1486' order represents '0' with '8429'
c Var 'aux1486' direct represents '0' with '8429'
c Var 'aux1486' order represents '1' with '8430'
-8429 8430 0
c Var 'aux1486' direct represents '1' with '8431'
8429 -8430 8431 0
-8431 8430 0
-8431 -8429 0
c Var 'aux1486' order represents '2' with '8432'
-8430 8432 0
c Var 'aux1486' direct represents '2' with '8433'
8430 -8432 8433 0
-8433 8432 0
-8433 -8430 0
c Var 'aux1486' order represents '3' with '8434'
-8432 8434 0
c Var 'aux1486' direct represents '3' with '8435'
8432 -8434 8435 0
-8435 8434 0
-8435 -8432 0
c Var 'aux1486' order represents '4' with '8436'
-8434 8436 0
c Var 'aux1486' direct represents '4' with '8437'
8434 -8436 8437 0
-8437 8436 0
-8437 -8434 0
c Var 'aux1486' order represents '5' with '8438'
-8436 8438 0
c Var 'aux1486' direct represents '5' with '8439'
8436 -8438 8439 0
-8439 8438 0
-8439 -8436 0
c Var 'aux1486' order represents '6' with '8440'
-8438 8440 0
c Var 'aux1486' direct represents '6' with '8441'
8438 -8440 8441 0
-8441 8440 0
-8441 -8438 0
c Var 'aux1486' order represents '7' with '8442'
-8440 8442 0
c Var 'aux1486' direct represents '7' with '8443'
8440 -8442 8443 0
-8443 8442 0
-8443 -8440 0
c Var 'aux1486' direct represents '8' with '-8442'
8429 8431 8433 8435 8437 8439 8441 8443 -8442 0
c Encoding variable: aux1487 with domain: int(0..8) (representing constraint (aux1475 + aux1471))
c Both direct and order encoding.
c Var 'aux1487' order represents '0' with '8444'
c Var 'aux1487' direct represents '0' with '8444'
c Var 'aux1487' order represents '1' with '8445'
-8444 8445 0
c Var 'aux1487' direct represents '1' with '8446'
8444 -8445 8446 0
-8446 8445 0
-8446 -8444 0
c Var 'aux1487' order represents '2' with '8447'
-8445 8447 0
c Var 'aux1487' direct represents '2' with '8448'
8445 -8447 8448 0
-8448 8447 0
-8448 -8445 0
c Var 'aux1487' order represents '3' with '8449'
-8447 8449 0
c Var 'aux1487' direct represents '3' with '8450'
8447 -8449 8450 0
-8450 8449 0
-8450 -8447 0
c Var 'aux1487' order represents '4' with '8451'
-8449 8451 0
c Var 'aux1487' direct represents '4' with '8452'
8449 -8451 8452 0
-8452 8451 0
-8452 -8449 0
c Var 'aux1487' order represents '5' with '8453'
-8451 8453 0
c Var 'aux1487' direct represents '5' with '8454'
8451 -8453 8454 0
-8454 8453 0
-8454 -8451 0
c Var 'aux1487' order represents '6' with '8455'
-8453 8455 0
c Var 'aux1487' direct represents '6' with '8456'
8453 -8455 8456 0
-8456 8455 0
-8456 -8453 0
c Var 'aux1487' order represents '7' with '8457'
-8455 8457 0
c Var 'aux1487' direct represents '7' with '8458'
8455 -8457 8458 0
-8458 8457 0
-8458 -8455 0
c Var 'aux1487' direct represents '8' with '-8457'
8444 8446 8448 8450 8452 8454 8456 8458 -8457 0
c Encoding variable: aux1488 with domain: int(0..8) (representing constraint (aux1483 + aux1470))
c Both direct and order encoding.
c Var 'aux1488' order represents '0' with '8459'
c Var 'aux1488' direct represents '0' with '8459'
c Var 'aux1488' order represents '1' with '8460'
-8459 8460 0
c Var 'aux1488' direct represents '1' with '8461'
8459 -8460 8461 0
-8461 8460 0
-8461 -8459 0
c Var 'aux1488' order represents '2' with '8462'
-8460 8462 0
c Var 'aux1488' direct represents '2' with '8463'
8460 -8462 8463 0
-8463 8462 0
-8463 -8460 0
c Var 'aux1488' order represents '3' with '8464'
-8462 8464 0
c Var 'aux1488' direct represents '3' with '8465'
8462 -8464 8465 0
-8465 8464 0
-8465 -8462 0
c Var 'aux1488' order represents '4' with '8466'
-8464 8466 0
c Var 'aux1488' direct represents '4' with '8467'
8464 -8466 8467 0
-8467 8466 0
-8467 -8464 0
c Var 'aux1488' order represents '5' with '8468'
-8466 8468 0
c Var 'aux1488' direct represents '5' with '8469'
8466 -8468 8469 0
-8469 8468 0
-8469 -8466 0
c Var 'aux1488' order represents '6' with '8470'
-8468 8470 0
c Var 'aux1488' direct represents '6' with '8471'
8468 -8470 8471 0
-8471 8470 0
-8471 -8468 0
c Var 'aux1488' order represents '7' with '8472'
-8470 8472 0
c Var 'aux1488' direct represents '7' with '8473'
8470 -8472 8473 0
-8473 8472 0
-8473 -8470 0
c Var 'aux1488' direct represents '8' with '-8472'
8459 8461 8463 8465 8467 8469 8471 8473 -8472 0
c Encoding variable: aux1489 with domain: int(0..8) (representing constraint (aux1473 + aux1474))
c Both direct and order encoding.
c Var 'aux1489' order represents '0' with '8474'
c Var 'aux1489' direct represents '0' with '8474'
c Var 'aux1489' order represents '1' with '8475'
-8474 8475 0
c Var 'aux1489' direct represents '1' with '8476'
8474 -8475 8476 0
-8476 8475 0
-8476 -8474 0
c Var 'aux1489' order represents '2' with '8477'
-8475 8477 0
c Var 'aux1489' direct represents '2' with '8478'
8475 -8477 8478 0
-8478 8477 0
-8478 -8475 0
c Var 'aux1489' order represents '3' with '8479'
-8477 8479 0
c Var 'aux1489' direct represents '3' with '8480'
8477 -8479 8480 0
-8480 8479 0
-8480 -8477 0
c Var 'aux1489' order represents '4' with '8481'
-8479 8481 0
c Var 'aux1489' direct represents '4' with '8482'
8479 -8481 8482 0
-8482 8481 0
-8482 -8479 0
c Var 'aux1489' order represents '5' with '8483'
-8481 8483 0
c Var 'aux1489' direct represents '5' with '8484'
8481 -8483 8484 0
-8484 8483 0
-8484 -8481 0
c Var 'aux1489' order represents '6' with '8485'
-8483 8485 0
c Var 'aux1489' direct represents '6' with '8486'
8483 -8485 8486 0
-8486 8485 0
-8486 -8483 0
c Var 'aux1489' order represents '7' with '8487'
-8485 8487 0
c Var 'aux1489' direct represents '7' with '8488'
8485 -8487 8488 0
-8488 8487 0
-8488 -8485 0
c Var 'aux1489' direct represents '8' with '-8487'
8474 8476 8478 8480 8482 8484 8486 8488 -8487 0
c Encoding variable: aux1490 with domain: int(0..8) (representing constraint (aux1476 + aux1480))
c Both direct and order encoding.
c Var 'aux1490' order represents '0' with '8489'
c Var 'aux1490' direct represents '0' with '8489'
c Var 'aux1490' order represents '1' with '8490'
-8489 8490 0
c Var 'aux1490' direct represents '1' with '8491'
8489 -8490 8491 0
-8491 8490 0
-8491 -8489 0
c Var 'aux1490' order represents '2' with '8492'
-8490 8492 0
c Var 'aux1490' direct represents '2' with '8493'
8490 -8492 8493 0
-8493 8492 0
-8493 -8490 0
c Var 'aux1490' order represents '3' with '8494'
-8492 8494 0
c Var 'aux1490' direct represents '3' with '8495'
8492 -8494 8495 0
-8495 8494 0
-8495 -8492 0
c Var 'aux1490' order represents '4' with '8496'
-8494 8496 0
c Var 'aux1490' direct represents '4' with '8497'
8494 -8496 8497 0
-8497 8496 0
-8497 -8494 0
c Var 'aux1490' order represents '5' with '8498'
-8496 8498 0
c Var 'aux1490' direct represents '5' with '8499'
8496 -8498 8499 0
-8499 8498 0
-8499 -8496 0
c Var 'aux1490' order represents '6' with '8500'
-8498 8500 0
c Var 'aux1490' direct represents '6' with '8501'
8498 -8500 8501 0
-8501 8500 0
-8501 -8498 0
c Var 'aux1490' order represents '7' with '8502'
-8500 8502 0
c Var 'aux1490' direct represents '7' with '8503'
8500 -8502 8503 0
-8503 8502 0
-8503 -8500 0
c Var 'aux1490' direct represents '8' with '-8502'
8489 8491 8493 8495 8497 8499 8501 8503 -8502 0
c Encoding variable: aux1491 with domain: int(0..8) (representing constraint (aux1481 + aux1478))
c Both direct and order encoding.
c Var 'aux1491' order represents '0' with '8504'
c Var 'aux1491' direct represents '0' with '8504'
c Var 'aux1491' order represents '1' with '8505'
-8504 8505 0
c Var 'aux1491' direct represents '1' with '8506'
8504 -8505 8506 0
-8506 8505 0
-8506 -8504 0
c Var 'aux1491' order represents '2' with '8507'
-8505 8507 0
c Var 'aux1491' direct represents '2' with '8508'
8505 -8507 8508 0
-8508 8507 0
-8508 -8505 0
c Var 'aux1491' order represents '3' with '8509'
-8507 8509 0
c Var 'aux1491' direct represents '3' with '8510'
8507 -8509 8510 0
-8510 8509 0
-8510 -8507 0
c Var 'aux1491' order represents '4' with '8511'
-8509 8511 0
c Var 'aux1491' direct represents '4' with '8512'
8509 -8511 8512 0
-8512 8511 0
-8512 -8509 0
c Var 'aux1491' order represents '5' with '8513'
-8511 8513 0
c Var 'aux1491' direct represents '5' with '8514'
8511 -8513 8514 0
-8514 8513 0
-8514 -8511 0
c Var 'aux1491' order represents '6' with '8515'
-8513 8515 0
c Var 'aux1491' direct represents '6' with '8516'
8513 -8515 8516 0
-8516 8515 0
-8516 -8513 0
c Var 'aux1491' order represents '7' with '8517'
-8515 8517 0
c Var 'aux1491' direct represents '7' with '8518'
8515 -8517 8518 0
-8518 8517 0
-8518 -8515 0
c Var 'aux1491' direct represents '8' with '-8517'
8504 8506 8508 8510 8512 8514 8516 8518 -8517 0
c Encoding variable: aux1492 with domain: int(0..8) (representing constraint (aux1479 + aux1484))
c Both direct and order encoding.
c Var 'aux1492' order represents '0' with '8519'
c Var 'aux1492' direct represents '0' with '8519'
c Var 'aux1492' order represents '1' with '8520'
-8519 8520 0
c Var 'aux1492' direct represents '1' with '8521'
8519 -8520 8521 0
-8521 8520 0
-8521 -8519 0
c Var 'aux1492' order represents '2' with '8522'
-8520 8522 0
c Var 'aux1492' direct represents '2' with '8523'
8520 -8522 8523 0
-8523 8522 0
-8523 -8520 0
c Var 'aux1492' order represents '3' with '8524'
-8522 8524 0
c Var 'aux1492' direct represents '3' with '8525'
8522 -8524 8525 0
-8525 8524 0
-8525 -8522 0
c Var 'aux1492' order represents '4' with '8526'
-8524 8526 0
c Var 'aux1492' direct represents '4' with '8527'
8524 -8526 8527 0
-8527 8526 0
-8527 -8524 0
c Var 'aux1492' order represents '5' with '8528'
-8526 8528 0
c Var 'aux1492' direct represents '5' with '8529'
8526 -8528 8529 0
-8529 8528 0
-8529 -8526 0
c Var 'aux1492' order represents '6' with '8530'
-8528 8530 0
c Var 'aux1492' direct represents '6' with '8531'
8528 -8530 8531 0
-8531 8530 0
-8531 -8528 0
c Var 'aux1492' order represents '7' with '8532'
-8530 8532 0
c Var 'aux1492' direct represents '7' with '8533'
8530 -8532 8533 0
-8533 8532 0
-8533 -8530 0
c Var 'aux1492' direct represents '8' with '-8532'
8519 8521 8523 8525 8527 8529 8531 8533 -8532 0
c Encoding variable: aux1493 with domain: int(0..8) (representing constraint (aux1482 + aux1472))
c Both direct and order encoding.
c Var 'aux1493' order represents '0' with '8534'
c Var 'aux1493' direct represents '0' with '8534'
c Var 'aux1493' order represents '1' with '8535'
-8534 8535 0
c Var 'aux1493' direct represents '1' with '8536'
8534 -8535 8536 0
-8536 8535 0
-8536 -8534 0
c Var 'aux1493' order represents '2' with '8537'
-8535 8537 0
c Var 'aux1493' direct represents '2' with '8538'
8535 -8537 8538 0
-8538 8537 0
-8538 -8535 0
c Var 'aux1493' order represents '3' with '8539'
-8537 8539 0
c Var 'aux1493' direct represents '3' with '8540'
8537 -8539 8540 0
-8540 8539 0
-8540 -8537 0
c Var 'aux1493' order represents '4' with '8541'
-8539 8541 0
c Var 'aux1493' direct represents '4' with '8542'
8539 -8541 8542 0
-8542 8541 0
-8542 -8539 0
c Var 'aux1493' order represents '5' with '8543'
-8541 8543 0
c Var 'aux1493' direct represents '5' with '8544'
8541 -8543 8544 0
-8544 8543 0
-8544 -8541 0
c Var 'aux1493' order represents '6' with '8545'
-8543 8545 0
c Var 'aux1493' direct represents '6' with '8546'
8543 -8545 8546 0
-8546 8545 0
-8546 -8543 0
c Var 'aux1493' order represents '7' with '8547'
-8545 8547 0
c Var 'aux1493' direct represents '7' with '8548'
8545 -8547 8548 0
-8548 8547 0
-8548 -8545 0
c Var 'aux1493' direct represents '8' with '-8547'
8534 8536 8538 8540 8542 8544 8546 8548 -8547 0
c Encoding variable: aux1494 with domain: int(0..16) (representing constraint (aux1489 + aux1493))
c Both direct and order encoding.
c Var 'aux1494' order represents '0' with '8549'
c Var 'aux1494' direct represents '0' with '8549'
c Var 'aux1494' order represents '1' with '8550'
-8549 8550 0
c Var 'aux1494' direct represents '1' with '8551'
8549 -8550 8551 0
-8551 8550 0
-8551 -8549 0
c Var 'aux1494' order represents '2' with '8552'
-8550 8552 0
c Var 'aux1494' direct represents '2' with '8553'
8550 -8552 8553 0
-8553 8552 0
-8553 -8550 0
c Var 'aux1494' order represents '3' with '8554'
-8552 8554 0
c Var 'aux1494' direct represents '3' with '8555'
8552 -8554 8555 0
-8555 8554 0
-8555 -8552 0
c Var 'aux1494' order represents '4' with '8556'
-8554 8556 0
c Var 'aux1494' direct represents '4' with '8557'
8554 -8556 8557 0
-8557 8556 0
-8557 -8554 0
c Var 'aux1494' order represents '5' with '8558'
-8556 8558 0
c Var 'aux1494' direct represents '5' with '8559'
8556 -8558 8559 0
-8559 8558 0
-8559 -8556 0
c Var 'aux1494' order represents '6' with '8560'
-8558 8560 0
c Var 'aux1494' direct represents '6' with '8561'
8558 -8560 8561 0
-8561 8560 0
-8561 -8558 0
c Var 'aux1494' order represents '7' with '8562'
-8560 8562 0
c Var 'aux1494' direct represents '7' with '8563'
8560 -8562 8563 0
-8563 8562 0
-8563 -8560 0
c Var 'aux1494' order represents '8' with '8564'
-8562 8564 0
c Var 'aux1494' direct represents '8' with '8565'
8562 -8564 8565 0
-8565 8564 0
-8565 -8562 0
c Var 'aux1494' order represents '9' with '8566'
-8564 8566 0
c Var 'aux1494' direct represents '9' with '8567'
8564 -8566 8567 0
-8567 8566 0
-8567 -8564 0
c Var 'aux1494' order represents '10' with '8568'
-8566 8568 0
c Var 'aux1494' direct represents '10' with '8569'
8566 -8568 8569 0
-8569 8568 0
-8569 -8566 0
c Var 'aux1494' order represents '11' with '8570'
-8568 8570 0
c Var 'aux1494' direct represents '11' with '8571'
8568 -8570 8571 0
-8571 8570 0
-8571 -8568 0
c Var 'aux1494' order represents '12' with '8572'
-8570 8572 0
c Var 'aux1494' direct represents '12' with '8573'
8570 -8572 8573 0
-8573 8572 0
-8573 -8570 0
c Var 'aux1494' order represents '13' with '8574'
-8572 8574 0
c Var 'aux1494' direct represents '13' with '8575'
8572 -8574 8575 0
-8575 8574 0
-8575 -8572 0
c Var 'aux1494' order represents '14' with '8576'
-8574 8576 0
c Var 'aux1494' direct represents '14' with '8577'
8574 -8576 8577 0
-8577 8576 0
-8577 -8574 0
c Var 'aux1494' order represents '15' with '8578'
-8576 8578 0
c Var 'aux1494' direct represents '15' with '8579'
8576 -8578 8579 0
-8579 8578 0
-8579 -8576 0
c Var 'aux1494' direct represents '16' with '-8578'
8549 8551 8553 8555 8557 8559 8561 8563 8565 8567 8569 8571 8573 8575 8577 8579 -8578 0
c Encoding variable: aux1495 with domain: int(0..16) (representing constraint (aux1487 + aux1486))
c Both direct and order encoding.
c Var 'aux1495' order represents '0' with '8580'
c Var 'aux1495' direct represents '0' with '8580'
c Var 'aux1495' order represents '1' with '8581'
-8580 8581 0
c Var 'aux1495' direct represents '1' with '8582'
8580 -8581 8582 0
-8582 8581 0
-8582 -8580 0
c Var 'aux1495' order represents '2' with '8583'
-8581 8583 0
c Var 'aux1495' direct represents '2' with '8584'
8581 -8583 8584 0
-8584 8583 0
-8584 -8581 0
c Var 'aux1495' order represents '3' with '8585'
-8583 8585 0
c Var 'aux1495' direct represents '3' with '8586'
8583 -8585 8586 0
-8586 8585 0
-8586 -8583 0
c Var 'aux1495' order represents '4' with '8587'
-8585 8587 0
c Var 'aux1495' direct represents '4' with '8588'
8585 -8587 8588 0
-8588 8587 0
-8588 -8585 0
c Var 'aux1495' order represents '5' with '8589'
-8587 8589 0
c Var 'aux1495' direct represents '5' with '8590'
8587 -8589 8590 0
-8590 8589 0
-8590 -8587 0
c Var 'aux1495' order represents '6' with '8591'
-8589 8591 0
c Var 'aux1495' direct represents '6' with '8592'
8589 -8591 8592 0
-8592 8591 0
-8592 -8589 0
c Var 'aux1495' order represents '7' with '8593'
-8591 8593 0
c Var 'aux1495' direct represents '7' with '8594'
8591 -8593 8594 0
-8594 8593 0
-8594 -8591 0
c Var 'aux1495' order represents '8' with '8595'
-8593 8595 0
c Var 'aux1495' direct represents '8' with '8596'
8593 -8595 8596 0
-8596 8595 0
-8596 -8593 0
c Var 'aux1495' order represents '9' with '8597'
-8595 8597 0
c Var 'aux1495' direct represents '9' with '8598'
8595 -8597 8598 0
-8598 8597 0
-8598 -8595 0
c Var 'aux1495' order represents '10' with '8599'
-8597 8599 0
c Var 'aux1495' direct represents '10' with '8600'
8597 -8599 8600 0
-8600 8599 0
-8600 -8597 0
c Var 'aux1495' order represents '11' with '8601'
-8599 8601 0
c Var 'aux1495' direct represents '11' with '8602'
8599 -8601 8602 0
-8602 8601 0
-8602 -8599 0
c Var 'aux1495' order represents '12' with '8603'
-8601 8603 0
c Var 'aux1495' direct represents '12' with '8604'
8601 -8603 8604 0
-8604 8603 0
-8604 -8601 0
c Var 'aux1495' order represents '13' with '8605'
-8603 8605 0
c Var 'aux1495' direct represents '13' with '8606'
8603 -8605 8606 0
-8606 8605 0
-8606 -8603 0
c Var 'aux1495' order represents '14' with '8607'
-8605 8607 0
c Var 'aux1495' direct represents '14' with '8608'
8605 -8607 8608 0
-8608 8607 0
-8608 -8605 0
c Var 'aux1495' order represents '15' with '8609'
-8607 8609 0
c Var 'aux1495' direct represents '15' with '8610'
8607 -8609 8610 0
-8610 8609 0
-8610 -8607 0
c Var 'aux1495' direct represents '16' with '-8609'
8580 8582 8584 8586 8588 8590 8592 8594 8596 8598 8600 8602 8604 8606 8608 8610 -8609 0
c Encoding variable: aux1496 with domain: int(0..16) (representing constraint (aux1488 + aux1490))
c Both direct and order encoding.
c Var 'aux1496' order represents '0' with '8611'
c Var 'aux1496' direct represents '0' with '8611'
c Var 'aux1496' order represents '1' with '8612'
-8611 8612 0
c Var 'aux1496' direct represents '1' with '8613'
8611 -8612 8613 0
-8613 8612 0
-8613 -8611 0
c Var 'aux1496' order represents '2' with '8614'
-8612 8614 0
c Var 'aux1496' direct represents '2' with '8615'
8612 -8614 8615 0
-8615 8614 0
-8615 -8612 0
c Var 'aux1496' order represents '3' with '8616'
-8614 8616 0
c Var 'aux1496' direct represents '3' with '8617'
8614 -8616 8617 0
-8617 8616 0
-8617 -8614 0
c Var 'aux1496' order represents '4' with '8618'
-8616 8618 0
c Var 'aux1496' direct represents '4' with '8619'
8616 -8618 8619 0
-8619 8618 0
-8619 -8616 0
c Var 'aux1496' order represents '5' with '8620'
-8618 8620 0
c Var 'aux1496' direct represents '5' with '8621'
8618 -8620 8621 0
-8621 8620 0
-8621 -8618 0
c Var 'aux1496' order represents '6' with '8622'
-8620 8622 0
c Var 'aux1496' direct represents '6' with '8623'
8620 -8622 8623 0
-8623 8622 0
-8623 -8620 0
c Var 'aux1496' order represents '7' with '8624'
-8622 8624 0
c Var 'aux1496' direct represents '7' with '8625'
8622 -8624 8625 0
-8625 8624 0
-8625 -8622 0
c Var 'aux1496' order represents '8' with '8626'
-8624 8626 0
c Var 'aux1496' direct represents '8' with '8627'
8624 -8626 8627 0
-8627 8626 0
-8627 -8624 0
c Var 'aux1496' order represents '9' with '8628'
-8626 8628 0
c Var 'aux1496' direct represents '9' with '8629'
8626 -8628 8629 0
-8629 8628 0
-8629 -8626 0
c Var 'aux1496' order represents '10' with '8630'
-8628 8630 0
c Var 'aux1496' direct represents '10' with '8631'
8628 -8630 8631 0
-8631 8630 0
-8631 -8628 0
c Var 'aux1496' order represents '11' with '8632'
-8630 8632 0
c Var 'aux1496' direct represents '11' with '8633'
8630 -8632 8633 0
-8633 8632 0
-8633 -8630 0
c Var 'aux1496' order represents '12' with '8634'
-8632 8634 0
c Var 'aux1496' direct represents '12' with '8635'
8632 -8634 8635 0
-8635 8634 0
-8635 -8632 0
c Var 'aux1496' order represents '13' with '8636'
-8634 8636 0
c Var 'aux1496' direct represents '13' with '8637'
8634 -8636 8637 0
-8637 8636 0
-8637 -8634 0
c Var 'aux1496' order represents '14' with '8638'
-8636 8638 0
c Var 'aux1496' direct represents '14' with '8639'
8636 -8638 8639 0
-8639 8638 0
-8639 -8636 0
c Var 'aux1496' order represents '15' with '8640'
-8638 8640 0
c Var 'aux1496' direct represents '15' with '8641'
8638 -8640 8641 0
-8641 8640 0
-8641 -8638 0
c Var 'aux1496' direct represents '16' with '-8640'
8611 8613 8615 8617 8619 8621 8623 8625 8627 8629 8631 8633 8635 8637 8639 8641 -8640 0
c Encoding variable: aux1497 with domain: int(0..16) (representing constraint (aux1491 + aux1492))
c Both direct and order encoding.
c Var 'aux1497' order represents '0' with '8642'
c Var 'aux1497' direct represents '0' with '8642'
c Var 'aux1497' order represents '1' with '8643'
-8642 8643 0
c Var 'aux1497' direct represents '1' with '8644'
8642 -8643 8644 0
-8644 8643 0
-8644 -8642 0
c Var 'aux1497' order represents '2' with '8645'
-8643 8645 0
c Var 'aux1497' direct represents '2' with '8646'
8643 -8645 8646 0
-8646 8645 0
-8646 -8643 0
c Var 'aux1497' order represents '3' with '8647'
-8645 8647 0
c Var 'aux1497' direct represents '3' with '8648'
8645 -8647 8648 0
-8648 8647 0
-8648 -8645 0
c Var 'aux1497' order represents '4' with '8649'
-8647 8649 0
c Var 'aux1497' direct represents '4' with '8650'
8647 -8649 8650 0
-8650 8649 0
-8650 -8647 0
c Var 'aux1497' order represents '5' with '8651'
-8649 8651 0
c Var 'aux1497' direct represents '5' with '8652'
8649 -8651 8652 0
-8652 8651 0
-8652 -8649 0
c Var 'aux1497' order represents '6' with '8653'
-8651 8653 0
c Var 'aux1497' direct represents '6' with '8654'
8651 -8653 8654 0
-8654 8653 0
-8654 -8651 0
c Var 'aux1497' order represents '7' with '8655'
-8653 8655 0
c Var 'aux1497' direct represents '7' with '8656'
8653 -8655 8656 0
-8656 8655 0
-8656 -8653 0
c Var 'aux1497' order represents '8' with '8657'
-8655 8657 0
c Var 'aux1497' direct represents '8' with '8658'
8655 -8657 8658 0
-8658 8657 0
-8658 -8655 0
c Var 'aux1497' order represents '9' with '8659'
-8657 8659 0
c Var 'aux1497' direct represents '9' with '8660'
8657 -8659 8660 0
-8660 8659 0
-8660 -8657 0
c Var 'aux1497' order represents '10' with '8661'
-8659 8661 0
c Var 'aux1497' direct represents '10' with '8662'
8659 -8661 8662 0
-8662 8661 0
-8662 -8659 0
c Var 'aux1497' order represents '11' with '8663'
-8661 8663 0
c Var 'aux1497' direct represents '11' with '8664'
8661 -8663 8664 0
-8664 8663 0
-8664 -8661 0
c Var 'aux1497' order represents '12' with '8665'
-8663 8665 0
c Var 'aux1497' direct represents '12' with '8666'
8663 -8665 8666 0
-8666 8665 0
-8666 -8663 0
c Var 'aux1497' order represents '13' with '8667'
-8665 8667 0
c Var 'aux1497' direct represents '13' with '8668'
8665 -8667 8668 0
-8668 8667 0
-8668 -8665 0
c Var 'aux1497' order represents '14' with '8669'
-8667 8669 0
c Var 'aux1497' direct represents '14' with '8670'
8667 -8669 8670 0
-8670 8669 0
-8670 -8667 0
c Var 'aux1497' order represents '15' with '8671'
-8669 8671 0
c Var 'aux1497' direct represents '15' with '8672'
8669 -8671 8672 0
-8672 8671 0
-8672 -8669 0
c Var 'aux1497' direct represents '16' with '-8671'
8642 8644 8646 8648 8650 8652 8654 8656 8658 8660 8662 8664 8666 8668 8670 8672 -8671 0
c Encoding variable: aux1498 with domain: int(0..32) (representing constraint (aux1495 + aux1497))
c Both direct and order encoding.
c Var 'aux1498' order represents '0' with '8673'
c Var 'aux1498' direct represents '0' with '8673'
c Var 'aux1498' order represents '1' with '8674'
-8673 8674 0
c Var 'aux1498' direct represents '1' with '8675'
8673 -8674 8675 0
-8675 8674 0
-8675 -8673 0
c Var 'aux1498' order represents '2' with '8676'
-8674 8676 0
c Var 'aux1498' direct represents '2' with '8677'
8674 -8676 8677 0
-8677 8676 0
-8677 -8674 0
c Var 'aux1498' order represents '3' with '8678'
-8676 8678 0
c Var 'aux1498' direct represents '3' with '8679'
8676 -8678 8679 0
-8679 8678 0
-8679 -8676 0
c Var 'aux1498' order represents '4' with '8680'
-8678 8680 0
c Var 'aux1498' direct represents '4' with '8681'
8678 -8680 8681 0
-8681 8680 0
-8681 -8678 0
c Var 'aux1498' order represents '5' with '8682'
-8680 8682 0
c Var 'aux1498' direct represents '5' with '8683'
8680 -8682 8683 0
-8683 8682 0
-8683 -8680 0
c Var 'aux1498' order represents '6' with '8684'
-8682 8684 0
c Var 'aux1498' direct represents '6' with '8685'
8682 -8684 8685 0
-8685 8684 0
-8685 -8682 0
c Var 'aux1498' order represents '7' with '8686'
-8684 8686 0
c Var 'aux1498' direct represents '7' with '8687'
8684 -8686 8687 0
-8687 8686 0
-8687 -8684 0
c Var 'aux1498' order represents '8' with '8688'
-8686 8688 0
c Var 'aux1498' direct represents '8' with '8689'
8686 -8688 8689 0
-8689 8688 0
-8689 -8686 0
c Var 'aux1498' order represents '9' with '8690'
-8688 8690 0
c Var 'aux1498' direct represents '9' with '8691'
8688 -8690 8691 0
-8691 8690 0
-8691 -8688 0
c Var 'aux1498' order represents '10' with '8692'
-8690 8692 0
c Var 'aux1498' direct represents '10' with '8693'
8690 -8692 8693 0
-8693 8692 0
-8693 -8690 0
c Var 'aux1498' order represents '11' with '8694'
-8692 8694 0
c Var 'aux1498' direct represents '11' with '8695'
8692 -8694 8695 0
-8695 8694 0
-8695 -8692 0
c Var 'aux1498' order represents '12' with '8696'
-8694 8696 0
c Var 'aux1498' direct represents '12' with '8697'
8694 -8696 8697 0
-8697 8696 0
-8697 -8694 0
c Var 'aux1498' order represents '13' with '8698'
-8696 8698 0
c Var 'aux1498' direct represents '13' with '8699'
8696 -8698 8699 0
-8699 8698 0
-8699 -8696 0
c Var 'aux1498' order represents '14' with '8700'
-8698 8700 0
c Var 'aux1498' direct represents '14' with '8701'
8698 -8700 8701 0
-8701 8700 0
-8701 -8698 0
c Var 'aux1498' order represents '15' with '8702'
-8700 8702 0
c Var 'aux1498' direct represents '15' with '8703'
8700 -8702 8703 0
-8703 8702 0
-8703 -8700 0
c Var 'aux1498' order represents '16' with '8704'
-8702 8704 0
c Var 'aux1498' direct represents '16' with '8705'
8702 -8704 8705 0
-8705 8704 0
-8705 -8702 0
c Var 'aux1498' order represents '17' with '8706'
-8704 8706 0
c Var 'aux1498' direct represents '17' with '8707'
8704 -8706 8707 0
-8707 8706 0
-8707 -8704 0
c Var 'aux1498' order represents '18' with '8708'
-8706 8708 0
c Var 'aux1498' direct represents '18' with '8709'
8706 -8708 8709 0
-8709 8708 0
-8709 -8706 0
c Var 'aux1498' order represents '19' with '8710'
-8708 8710 0
c Var 'aux1498' direct represents '19' with '8711'
8708 -8710 8711 0
-8711 8710 0
-8711 -8708 0
c Var 'aux1498' order represents '20' with '8712'
-8710 8712 0
c Var 'aux1498' direct represents '20' with '8713'
8710 -8712 8713 0
-8713 8712 0
-8713 -8710 0
c Var 'aux1498' order represents '21' with '8714'
-8712 8714 0
c Var 'aux1498' direct represents '21' with '8715'
8712 -8714 8715 0
-8715 8714 0
-8715 -8712 0
c Var 'aux1498' order represents '22' with '8716'
-8714 8716 0
c Var 'aux1498' direct represents '22' with '8717'
8714 -8716 8717 0
-8717 8716 0
-8717 -8714 0
c Var 'aux1498' order represents '23' with '8718'
-8716 8718 0
c Var 'aux1498' direct represents '23' with '8719'
8716 -8718 8719 0
-8719 8718 0
-8719 -8716 0
c Var 'aux1498' order represents '24' with '8720'
-8718 8720 0
c Var 'aux1498' direct represents '24' with '8721'
8718 -8720 8721 0
-8721 8720 0
-8721 -8718 0
c Var 'aux1498' order represents '25' with '8722'
-8720 8722 0
c Var 'aux1498' direct represents '25' with '8723'
8720 -8722 8723 0
-8723 8722 0
-8723 -8720 0
c Var 'aux1498' order represents '26' with '8724'
-8722 8724 0
c Var 'aux1498' direct represents '26' with '8725'
8722 -8724 8725 0
-8725 8724 0
-8725 -8722 0
c Var 'aux1498' order represents '27' with '8726'
-8724 8726 0
c Var 'aux1498' direct represents '27' with '8727'
8724 -8726 8727 0
-8727 8726 0
-8727 -8724 0
c Var 'aux1498' order represents '28' with '8728'
-8726 8728 0
c Var 'aux1498' direct represents '28' with '8729'
8726 -8728 8729 0
-8729 8728 0
-8729 -8726 0
c Var 'aux1498' order represents '29' with '8730'
-8728 8730 0
c Var 'aux1498' direct represents '29' with '8731'
8728 -8730 8731 0
-8731 8730 0
-8731 -8728 0
c Var 'aux1498' order represents '30' with '8732'
-8730 8732 0
c Var 'aux1498' direct represents '30' with '8733'
8730 -8732 8733 0
-8733 8732 0
-8733 -8730 0
c Var 'aux1498' order represents '31' with '8734'
-8732 8734 0
c Var 'aux1498' direct represents '31' with '8735'
8732 -8734 8735 0
-8735 8734 0
-8735 -8732 0
c Var 'aux1498' direct represents '32' with '-8734'
8673 8675 8677 8679 8681 8683 8685 8687 8689 8691 8693 8695 8697 8699 8701 8703 8705 8707 8709 8711 8713 8715 8717 8719 8721 8723 8725 8727 8729 8731 8733 8735 -8734 0
c Encoding variable: aux1499 with domain: int(0..32) (representing constraint (aux1494 + aux1496))
c Both direct and order encoding.
c Var 'aux1499' order represents '0' with '8736'
c Var 'aux1499' direct represents '0' with '8736'
c Var 'aux1499' order represents '1' with '8737'
-8736 8737 0
c Var 'aux1499' direct represents '1' with '8738'
8736 -8737 8738 0
-8738 8737 0
-8738 -8736 0
c Var 'aux1499' order represents '2' with '8739'
-8737 8739 0
c Var 'aux1499' direct represents '2' with '8740'
8737 -8739 8740 0
-8740 8739 0
-8740 -8737 0
c Var 'aux1499' order represents '3' with '8741'
-8739 8741 0
c Var 'aux1499' direct represents '3' with '8742'
8739 -8741 8742 0
-8742 8741 0
-8742 -8739 0
c Var 'aux1499' order represents '4' with '8743'
-8741 8743 0
c Var 'aux1499' direct represents '4' with '8744'
8741 -8743 8744 0
-8744 8743 0
-8744 -8741 0
c Var 'aux1499' order represents '5' with '8745'
-8743 8745 0
c Var 'aux1499' direct represents '5' with '8746'
8743 -8745 8746 0
-8746 8745 0
-8746 -8743 0
c Var 'aux1499' order represents '6' with '8747'
-8745 8747 0
c Var 'aux1499' direct represents '6' with '8748'
8745 -8747 8748 0
-8748 8747 0
-8748 -8745 0
c Var 'aux1499' order represents '7' with '8749'
-8747 8749 0
c Var 'aux1499' direct represents '7' with '8750'
8747 -8749 8750 0
-8750 8749 0
-8750 -8747 0
c Var 'aux1499' order represents '8' with '8751'
-8749 8751 0
c Var 'aux1499' direct represents '8' with '8752'
8749 -8751 8752 0
-8752 8751 0
-8752 -8749 0
c Var 'aux1499' order represents '9' with '8753'
-8751 8753 0
c Var 'aux1499' direct represents '9' with '8754'
8751 -8753 8754 0
-8754 8753 0
-8754 -8751 0
c Var 'aux1499' order represents '10' with '8755'
-8753 8755 0
c Var 'aux1499' direct represents '10' with '8756'
8753 -8755 8756 0
-8756 8755 0
-8756 -8753 0
c Var 'aux1499' order represents '11' with '8757'
-8755 8757 0
c Var 'aux1499' direct represents '11' with '8758'
8755 -8757 8758 0
-8758 8757 0
-8758 -8755 0
c Var 'aux1499' order represents '12' with '8759'
-8757 8759 0
c Var 'aux1499' direct represents '12' with '8760'
8757 -8759 8760 0
-8760 8759 0
-8760 -8757 0
c Var 'aux1499' order represents '13' with '8761'
-8759 8761 0
c Var 'aux1499' direct represents '13' with '8762'
8759 -8761 8762 0
-8762 8761 0
-8762 -8759 0
c Var 'aux1499' order represents '14' with '8763'
-8761 8763 0
c Var 'aux1499' direct represents '14' with '8764'
8761 -8763 8764 0
-8764 8763 0
-8764 -8761 0
c Var 'aux1499' order represents '15' with '8765'
-8763 8765 0
c Var 'aux1499' direct represents '15' with '8766'
8763 -8765 8766 0
-8766 8765 0
-8766 -8763 0
c Var 'aux1499' order represents '16' with '8767'
-8765 8767 0
c Var 'aux1499' direct represents '16' with '8768'
8765 -8767 8768 0
-8768 8767 0
-8768 -8765 0
c Var 'aux1499' order represents '17' with '8769'
-8767 8769 0
c Var 'aux1499' direct represents '17' with '8770'
8767 -8769 8770 0
-8770 8769 0
-8770 -8767 0
c Var 'aux1499' order represents '18' with '8771'
-8769 8771 0
c Var 'aux1499' direct represents '18' with '8772'
8769 -8771 8772 0
-8772 8771 0
-8772 -8769 0
c Var 'aux1499' order represents '19' with '8773'
-8771 8773 0
c Var 'aux1499' direct represents '19' with '8774'
8771 -8773 8774 0
-8774 8773 0
-8774 -8771 0
c Var 'aux1499' order represents '20' with '8775'
-8773 8775 0
c Var 'aux1499' direct represents '20' with '8776'
8773 -8775 8776 0
-8776 8775 0
-8776 -8773 0
c Var 'aux1499' order represents '21' with '8777'
-8775 8777 0
c Var 'aux1499' direct represents '21' with '8778'
8775 -8777 8778 0
-8778 8777 0
-8778 -8775 0
c Var 'aux1499' order represents '22' with '8779'
-8777 8779 0
c Var 'aux1499' direct represents '22' with '8780'
8777 -8779 8780 0
-8780 8779 0
-8780 -8777 0
c Var 'aux1499' order represents '23' with '8781'
-8779 8781 0
c Var 'aux1499' direct represents '23' with '8782'
8779 -8781 8782 0
-8782 8781 0
-8782 -8779 0
c Var 'aux1499' order represents '24' with '8783'
-8781 8783 0
c Var 'aux1499' direct represents '24' with '8784'
8781 -8783 8784 0
-8784 8783 0
-8784 -8781 0
c Var 'aux1499' order represents '25' with '8785'
-8783 8785 0
c Var 'aux1499' direct represents '25' with '8786'
8783 -8785 8786 0
-8786 8785 0
-8786 -8783 0
c Var 'aux1499' order represents '26' with '8787'
-8785 8787 0
c Var 'aux1499' direct represents '26' with '8788'
8785 -8787 8788 0
-8788 8787 0
-8788 -8785 0
c Var 'aux1499' order represents '27' with '8789'
-8787 8789 0
c Var 'aux1499' direct represents '27' with '8790'
8787 -8789 8790 0
-8790 8789 0
-8790 -8787 0
c Var 'aux1499' order represents '28' with '8791'
-8789 8791 0
c Var 'aux1499' direct represents '28' with '8792'
8789 -8791 8792 0
-8792 8791 0
-8792 -8789 0
c Var 'aux1499' order represents '29' with '8793'
-8791 8793 0
c Var 'aux1499' direct represents '29' with '8794'
8791 -8793 8794 0
-8794 8793 0
-8794 -8791 0
c Var 'aux1499' order represents '30' with '8795'
-8793 8795 0
c Var 'aux1499' direct represents '30' with '8796'
8793 -8795 8796 0
-8796 8795 0
-8796 -8793 0
c Var 'aux1499' order represents '31' with '8797'
-8795 8797 0
c Var 'aux1499' direct represents '31' with '8798'
8795 -8797 8798 0
-8798 8797 0
-8798 -8795 0
c Var 'aux1499' direct represents '32' with '-8797'
8736 8738 8740 8742 8744 8746 8748 8750 8752 8754 8756 8758 8760 8762 8764 8766 8768 8770 8772 8774 8776 8778 8780 8782 8784 8786 8788 8790 8792 8794 8796 8798 -8797 0
c Encoding variable: aux1500 with domain: bool (representing constraint ((aux404 + aux405 - shift(num_occupied_by_types_00001, -64))<=256))
c Var 'aux1500' direct represents '0' with '-8799'
c Var 'aux1500' direct represents '1' with '8799'
c Var 'aux1500' order represents '1' with '1'
c Var 'aux1500' order represents '0' with '-8799'
c Encoding variable: aux1501 with domain: bool (representing constraint (256<=(aux404 + aux405 - shift(num_occupied_by_types_00001, -64))))
c Var 'aux1501' direct represents '0' with '-8800'
c Var 'aux1501' direct represents '1' with '8800'
c Var 'aux1501' order represents '1' with '1'
c Var 'aux1501' order represents '0' with '-8800'
c Encoding variable: aux1502 with domain: bool (representing constraint ((aux407 + aux408 + aux410)<=2))
c Var 'aux1502' direct represents '0' with '-8801'
c Var 'aux1502' direct represents '1' with '8801'
c Var 'aux1502' order represents '1' with '1'
c Var 'aux1502' order represents '0' with '-8801'
c Encoding variable: aux1503 with domain: bool (representing constraint (2<=(aux407 + aux408 + aux410)))
c Var 'aux1503' direct represents '0' with '-8802'
c Var 'aux1503' direct represents '1' with '8802'
c Var 'aux1503' order represents '1' with '1'
c Var 'aux1503' order represents '0' with '-8802'
c Encoding variable: aux1504 with domain: bool (representing constraint ((aux412 + aux413 + aux415)<=4))
c Var 'aux1504' direct represents '0' with '-8803'
c Var 'aux1504' direct represents '1' with '8803'
c Var 'aux1504' order represents '1' with '1'
c Var 'aux1504' order represents '0' with '-8803'
c Encoding variable: aux1505 with domain: bool (representing constraint (4<=(aux412 + aux413 + aux415)))
c Var 'aux1505' direct represents '0' with '-8804'
c Var 'aux1505' direct represents '1' with '8804'
c Var 'aux1505' order represents '1' with '1'
c Var 'aux1505' order represents '0' with '-8804'
c Encoding variable: aux1506 with domain: bool (representing constraint ((aux417 + aux418 + aux420)<=2))
c Var 'aux1506' direct represents '0' with '-8805'
c Var 'aux1506' direct represents '1' with '8805'
c Var 'aux1506' order represents '1' with '1'
c Var 'aux1506' order represents '0' with '-8805'
c Encoding variable: aux1507 with domain: bool (representing constraint (2<=(aux417 + aux418 + aux420)))
c Var 'aux1507' direct represents '0' with '-8806'
c Var 'aux1507' direct represents '1' with '8806'
c Var 'aux1507' order represents '1' with '1'
c Var 'aux1507' order represents '0' with '-8806'
c Encoding variable: aux1508 with domain: bool (representing constraint ((aux422 + aux423 + aux425)<=3))
c Var 'aux1508' direct represents '0' with '-8807'
c Var 'aux1508' direct represents '1' with '8807'
c Var 'aux1508' order represents '1' with '1'
c Var 'aux1508' order represents '0' with '-8807'
c Encoding variable: aux1509 with domain: bool (representing constraint (3<=(aux422 + aux423 + aux425)))
c Var 'aux1509' direct represents '0' with '-8808'
c Var 'aux1509' direct represents '1' with '8808'
c Var 'aux1509' order represents '1' with '1'
c Var 'aux1509' order represents '0' with '-8808'
c Encoding variable: aux1510 with domain: bool (representing constraint ((aux427 + aux428 + aux430)<=2))
c Var 'aux1510' direct represents '0' with '-8809'
c Var 'aux1510' direct represents '1' with '8809'
c Var 'aux1510' order represents '1' with '1'
c Var 'aux1510' order represents '0' with '-8809'
c Encoding variable: aux1511 with domain: bool (representing constraint (2<=(aux427 + aux428 + aux430)))
c Var 'aux1511' direct represents '0' with '-8810'
c Var 'aux1511' direct represents '1' with '8810'
c Var 'aux1511' order represents '1' with '1'
c Var 'aux1511' order represents '0' with '-8810'
c Encoding variable: aux1512 with domain: bool (representing constraint ((aux432 + aux433 + aux435)<=1))
c Var 'aux1512' direct represents '0' with '-8811'
c Var 'aux1512' direct represents '1' with '8811'
c Var 'aux1512' order represents '1' with '1'
c Var 'aux1512' order represents '0' with '-8811'
c Encoding variable: aux1513 with domain: bool (representing constraint (1<=(aux432 + aux433 + aux435)))
c Var 'aux1513' direct represents '0' with '-8812'
c Var 'aux1513' direct represents '1' with '8812'
c Var 'aux1513' order represents '1' with '1'
c Var 'aux1513' order represents '0' with '-8812'
c Encoding variable: aux1514 with domain: bool (representing constraint ((aux437 + aux438 + aux440)<=4))
c Var 'aux1514' direct represents '0' with '-8813'
c Var 'aux1514' direct represents '1' with '8813'
c Var 'aux1514' order represents '1' with '1'
c Var 'aux1514' order represents '0' with '-8813'
c Encoding variable: aux1515 with domain: bool (representing constraint (4<=(aux437 + aux438 + aux440)))
c Var 'aux1515' direct represents '0' with '-8814'
c Var 'aux1515' direct represents '1' with '8814'
c Var 'aux1515' order represents '1' with '1'
c Var 'aux1515' order represents '0' with '-8814'
c Encoding variable: aux1516 with domain: bool (representing constraint ((aux442 + aux443 + aux445)<=2))
c Var 'aux1516' direct represents '0' with '-8815'
c Var 'aux1516' direct represents '1' with '8815'
c Var 'aux1516' order represents '1' with '1'
c Var 'aux1516' order represents '0' with '-8815'
c Encoding variable: aux1517 with domain: bool (representing constraint (2<=(aux442 + aux443 + aux445)))
c Var 'aux1517' direct represents '0' with '-8816'
c Var 'aux1517' direct represents '1' with '8816'
c Var 'aux1517' order represents '1' with '1'
c Var 'aux1517' order represents '0' with '-8816'
c Encoding variable: aux1518 with domain: bool (representing constraint ((aux447 + aux448 + aux450)<=5))
c Var 'aux1518' direct represents '0' with '-8817'
c Var 'aux1518' direct represents '1' with '8817'
c Var 'aux1518' order represents '1' with '1'
c Var 'aux1518' order represents '0' with '-8817'
c Encoding variable: aux1519 with domain: bool (representing constraint (5<=(aux447 + aux448 + aux450)))
c Var 'aux1519' direct represents '0' with '-8818'
c Var 'aux1519' direct represents '1' with '8818'
c Var 'aux1519' order represents '1' with '1'
c Var 'aux1519' order represents '0' with '-8818'
c Encoding variable: aux1520 with domain: bool (representing constraint ((aux457 + aux458 + aux460)<=5))
c Var 'aux1520' direct represents '0' with '-8819'
c Var 'aux1520' direct represents '1' with '8819'
c Var 'aux1520' order represents '1' with '1'
c Var 'aux1520' order represents '0' with '-8819'
c Encoding variable: aux1521 with domain: bool (representing constraint (5<=(aux457 + aux458 + aux460)))
c Var 'aux1521' direct represents '0' with '-8820'
c Var 'aux1521' direct represents '1' with '8820'
c Var 'aux1521' order represents '1' with '1'
c Var 'aux1521' order represents '0' with '-8820'
c Encoding variable: aux1522 with domain: bool (representing constraint ((aux462 + aux463 + aux465)<=1))
c Var 'aux1522' direct represents '0' with '-8821'
c Var 'aux1522' direct represents '1' with '8821'
c Var 'aux1522' order represents '1' with '1'
c Var 'aux1522' order represents '0' with '-8821'
c Encoding variable: aux1523 with domain: bool (representing constraint (1<=(aux462 + aux463 + aux465)))
c Var 'aux1523' direct represents '0' with '-8822'
c Var 'aux1523' direct represents '1' with '8822'
c Var 'aux1523' order represents '1' with '1'
c Var 'aux1523' order represents '0' with '-8822'
c Encoding variable: aux1524 with domain: bool (representing constraint ((aux467 + aux468 + aux470)<=2))
c Var 'aux1524' direct represents '0' with '-8823'
c Var 'aux1524' direct represents '1' with '8823'
c Var 'aux1524' order represents '1' with '1'
c Var 'aux1524' order represents '0' with '-8823'
c Encoding variable: aux1525 with domain: bool (representing constraint (2<=(aux467 + aux468 + aux470)))
c Var 'aux1525' direct represents '0' with '-8824'
c Var 'aux1525' direct represents '1' with '8824'
c Var 'aux1525' order represents '1' with '1'
c Var 'aux1525' order represents '0' with '-8824'
c Encoding variable: aux1526 with domain: bool (representing constraint ((aux472 + aux473 + aux475)<=1))
c Var 'aux1526' direct represents '0' with '-8825'
c Var 'aux1526' direct represents '1' with '8825'
c Var 'aux1526' order represents '1' with '1'
c Var 'aux1526' order represents '0' with '-8825'
c Encoding variable: aux1527 with domain: bool (representing constraint (1<=(aux472 + aux473 + aux475)))
c Var 'aux1527' direct represents '0' with '-8826'
c Var 'aux1527' direct represents '1' with '8826'
c Var 'aux1527' order represents '1' with '1'
c Var 'aux1527' order represents '0' with '-8826'
c Encoding variable: aux1528 with domain: bool (representing constraint ((aux477 + aux478 + aux480)<=2))
c Var 'aux1528' direct represents '0' with '-8827'
c Var 'aux1528' direct represents '1' with '8827'
c Var 'aux1528' order represents '1' with '1'
c Var 'aux1528' order represents '0' with '-8827'
c Encoding variable: aux1529 with domain: bool (representing constraint (2<=(aux477 + aux478 + aux480)))
c Var 'aux1529' direct represents '0' with '-8828'
c Var 'aux1529' direct represents '1' with '8828'
c Var 'aux1529' order represents '1' with '1'
c Var 'aux1529' order represents '0' with '-8828'
c Encoding variable: aux1530 with domain: bool (representing constraint ((aux482 + aux483 + aux485)<=4))
c Var 'aux1530' direct represents '0' with '-8829'
c Var 'aux1530' direct represents '1' with '8829'
c Var 'aux1530' order represents '1' with '1'
c Var 'aux1530' order represents '0' with '-8829'
c Encoding variable: aux1531 with domain: bool (representing constraint (4<=(aux482 + aux483 + aux485)))
c Var 'aux1531' direct represents '0' with '-8830'
c Var 'aux1531' direct represents '1' with '8830'
c Var 'aux1531' order represents '1' with '1'
c Var 'aux1531' order represents '0' with '-8830'
c Encoding variable: aux1532 with domain: bool (representing constraint (( - shift(agrid_00001_00001, -4) + aux494 + aux496)<=3))
c Var 'aux1532' direct represents '0' with '-8831'
c Var 'aux1532' direct represents '1' with '8831'
c Var 'aux1532' order represents '1' with '1'
c Var 'aux1532' order represents '0' with '-8831'
c Encoding variable: aux1533 with domain: bool (representing constraint (3<=( - shift(agrid_00001_00001, -4) + aux494 + aux496)))
c Var 'aux1533' direct represents '0' with '-8832'
c Var 'aux1533' direct represents '1' with '8832'
c Var 'aux1533' order represents '1' with '1'
c Var 'aux1533' order represents '0' with '-8832'
c Encoding variable: aux1534 with domain: bool (representing constraint ((aux506 + aux507 - shift(agrid_00002_00001, -4))<=3))
c Var 'aux1534' direct represents '0' with '-8833'
c Var 'aux1534' direct represents '1' with '8833'
c Var 'aux1534' order represents '1' with '1'
c Var 'aux1534' order represents '0' with '-8833'
c Encoding variable: aux1535 with domain: bool (representing constraint (3<=(aux506 + aux507 - shift(agrid_00002_00001, -4))))
c Var 'aux1535' direct represents '0' with '-8834'
c Var 'aux1535' direct represents '1' with '8834'
c Var 'aux1535' order represents '1' with '1'
c Var 'aux1535' order represents '0' with '-8834'
c Encoding variable: aux1536 with domain: bool (representing constraint ((aux517 + aux518 - shift(agrid_00003_00001, -4))<=3))
c Var 'aux1536' direct represents '0' with '-8835'
c Var 'aux1536' direct represents '1' with '8835'
c Var 'aux1536' order represents '1' with '1'
c Var 'aux1536' order represents '0' with '-8835'
c Encoding variable: aux1537 with domain: bool (representing constraint (3<=(aux517 + aux518 - shift(agrid_00003_00001, -4))))
c Var 'aux1537' direct represents '0' with '-8836'
c Var 'aux1537' direct represents '1' with '8836'
c Var 'aux1537' order represents '1' with '1'
c Var 'aux1537' order represents '0' with '-8836'
c Encoding variable: aux1538 with domain: bool (representing constraint ((aux528 + aux529 - shift(agrid_00004_00001, -4))<=3))
c Var 'aux1538' direct represents '0' with '-8837'
c Var 'aux1538' direct represents '1' with '8837'
c Var 'aux1538' order represents '1' with '1'
c Var 'aux1538' order represents '0' with '-8837'
c Encoding variable: aux1539 with domain: bool (representing constraint (3<=(aux528 + aux529 - shift(agrid_00004_00001, -4))))
c Var 'aux1539' direct represents '0' with '-8838'
c Var 'aux1539' direct represents '1' with '8838'
c Var 'aux1539' order represents '1' with '1'
c Var 'aux1539' order represents '0' with '-8838'
c Encoding variable: aux1540 with domain: bool (representing constraint ((aux539 + aux540 - shift(agrid_00005_00001, -4))<=3))
c Var 'aux1540' direct represents '0' with '-8839'
c Var 'aux1540' direct represents '1' with '8839'
c Var 'aux1540' order represents '1' with '1'
c Var 'aux1540' order represents '0' with '-8839'
c Encoding variable: aux1541 with domain: bool (representing constraint (3<=(aux539 + aux540 - shift(agrid_00005_00001, -4))))
c Var 'aux1541' direct represents '0' with '-8840'
c Var 'aux1541' direct represents '1' with '8840'
c Var 'aux1541' order represents '1' with '1'
c Var 'aux1541' order represents '0' with '-8840'
c Encoding variable: aux1542 with domain: bool (representing constraint ((aux550 + aux551 - shift(agrid_00006_00001, -4))<=3))
c Var 'aux1542' direct represents '0' with '-8841'
c Var 'aux1542' direct represents '1' with '8841'
c Var 'aux1542' order represents '1' with '1'
c Var 'aux1542' order represents '0' with '-8841'
c Encoding variable: aux1543 with domain: bool (representing constraint (3<=(aux550 + aux551 - shift(agrid_00006_00001, -4))))
c Var 'aux1543' direct represents '0' with '-8842'
c Var 'aux1543' direct represents '1' with '8842'
c Var 'aux1543' order represents '1' with '1'
c Var 'aux1543' order represents '0' with '-8842'
c Encoding variable: aux1544 with domain: bool (representing constraint ((aux561 + aux562 - shift(agrid_00007_00001, -4))<=3))
c Var 'aux1544' direct represents '0' with '-8843'
c Var 'aux1544' direct represents '1' with '8843'
c Var 'aux1544' order represents '1' with '1'
c Var 'aux1544' order represents '0' with '-8843'
c Encoding variable: aux1545 with domain: bool (representing constraint (3<=(aux561 + aux562 - shift(agrid_00007_00001, -4))))
c Var 'aux1545' direct represents '0' with '-8844'
c Var 'aux1545' direct represents '1' with '8844'
c Var 'aux1545' order represents '1' with '1'
c Var 'aux1545' order represents '0' with '-8844'
c Encoding variable: aux1546 with domain: bool (representing constraint (( - shift(agrid_00008_00001, -4) + aux571 + aux573)<=3))
c Var 'aux1546' direct represents '0' with '-8845'
c Var 'aux1546' direct represents '1' with '8845'
c Var 'aux1546' order represents '1' with '1'
c Var 'aux1546' order represents '0' with '-8845'
c Encoding variable: aux1547 with domain: bool (representing constraint (3<=( - shift(agrid_00008_00001, -4) + aux571 + aux573)))
c Var 'aux1547' direct represents '0' with '-8846'
c Var 'aux1547' direct represents '1' with '8846'
c Var 'aux1547' order represents '1' with '1'
c Var 'aux1547' order represents '0' with '-8846'
c Encoding variable: aux1548 with domain: bool (representing constraint (( - shift(agrid_00001_00002, -4) + aux583 + aux584)<=3))
c Var 'aux1548' direct represents '0' with '-8847'
c Var 'aux1548' direct represents '1' with '8847'
c Var 'aux1548' order represents '1' with '1'
c Var 'aux1548' order represents '0' with '-8847'
c Encoding variable: aux1549 with domain: bool (representing constraint (3<=( - shift(agrid_00001_00002, -4) + aux583 + aux584)))
c Var 'aux1549' direct represents '0' with '-8848'
c Var 'aux1549' direct represents '1' with '8848'
c Var 'aux1549' order represents '1' with '1'
c Var 'aux1549' order represents '0' with '-8848'
c Encoding variable: aux1550 with domain: bool (representing constraint ((aux594 + aux595 - shift(agrid_00002_00002, -4))<=3))
c Var 'aux1550' direct represents '0' with '-8849'
c Var 'aux1550' direct represents '1' with '8849'
c Var 'aux1550' order represents '1' with '1'
c Var 'aux1550' order represents '0' with '-8849'
c Encoding variable: aux1551 with domain: bool (representing constraint (3<=(aux594 + aux595 - shift(agrid_00002_00002, -4))))
c Var 'aux1551' direct represents '0' with '-8850'
c Var 'aux1551' direct represents '1' with '8850'
c Var 'aux1551' order represents '1' with '1'
c Var 'aux1551' order represents '0' with '-8850'
c Encoding variable: aux1552 with domain: bool (representing constraint ((aux605 + aux606 - shift(agrid_00003_00002, -4))<=3))
c Var 'aux1552' direct represents '0' with '-8851'
c Var 'aux1552' direct represents '1' with '8851'
c Var 'aux1552' order represents '1' with '1'
c Var 'aux1552' order represents '0' with '-8851'
c Encoding variable: aux1553 with domain: bool (representing constraint (3<=(aux605 + aux606 - shift(agrid_00003_00002, -4))))
c Var 'aux1553' direct represents '0' with '-8852'
c Var 'aux1553' direct represents '1' with '8852'
c Var 'aux1553' order represents '1' with '1'
c Var 'aux1553' order represents '0' with '-8852'
c Encoding variable: aux1554 with domain: bool (representing constraint ((aux615 + aux617 - shift(agrid_00004_00002, -4))<=3))
c Var 'aux1554' direct represents '0' with '-8853'
c Var 'aux1554' direct represents '1' with '8853'
c Var 'aux1554' order represents '1' with '1'
c Var 'aux1554' order represents '0' with '-8853'
c Encoding variable: aux1555 with domain: bool (representing constraint (3<=(aux615 + aux617 - shift(agrid_00004_00002, -4))))
c Var 'aux1555' direct represents '0' with '-8854'
c Var 'aux1555' direct represents '1' with '8854'
c Var 'aux1555' order represents '1' with '1'
c Var 'aux1555' order represents '0' with '-8854'
c Encoding variable: aux1556 with domain: bool (representing constraint ((aux626 + aux628 - shift(agrid_00005_00002, -4))<=3))
c Var 'aux1556' direct represents '0' with '-8855'
c Var 'aux1556' direct represents '1' with '8855'
c Var 'aux1556' order represents '1' with '1'
c Var 'aux1556' order represents '0' with '-8855'
c Encoding variable: aux1557 with domain: bool (representing constraint (3<=(aux626 + aux628 - shift(agrid_00005_00002, -4))))
c Var 'aux1557' direct represents '0' with '-8856'
c Var 'aux1557' direct represents '1' with '8856'
c Var 'aux1557' order represents '1' with '1'
c Var 'aux1557' order represents '0' with '-8856'
c Encoding variable: aux1558 with domain: bool (representing constraint ((aux638 + aux639 - shift(agrid_00006_00002, -4))<=3))
c Var 'aux1558' direct represents '0' with '-8857'
c Var 'aux1558' direct represents '1' with '8857'
c Var 'aux1558' order represents '1' with '1'
c Var 'aux1558' order represents '0' with '-8857'
c Encoding variable: aux1559 with domain: bool (representing constraint (3<=(aux638 + aux639 - shift(agrid_00006_00002, -4))))
c Var 'aux1559' direct represents '0' with '-8858'
c Var 'aux1559' direct represents '1' with '8858'
c Var 'aux1559' order represents '1' with '1'
c Var 'aux1559' order represents '0' with '-8858'
c Encoding variable: aux1560 with domain: bool (representing constraint ((aux649 + aux650 - shift(agrid_00007_00002, -4))<=3))
c Var 'aux1560' direct represents '0' with '-8859'
c Var 'aux1560' direct represents '1' with '8859'
c Var 'aux1560' order represents '1' with '1'
c Var 'aux1560' order represents '0' with '-8859'
c Encoding variable: aux1561 with domain: bool (representing constraint (3<=(aux649 + aux650 - shift(agrid_00007_00002, -4))))
c Var 'aux1561' direct represents '0' with '-8860'
c Var 'aux1561' direct represents '1' with '8860'
c Var 'aux1561' order represents '1' with '1'
c Var 'aux1561' order represents '0' with '-8860'
c Encoding variable: aux1562 with domain: bool (representing constraint (( - shift(agrid_00008_00002, -4) + aux660 + aux661)<=3))
c Var 'aux1562' direct represents '0' with '-8861'
c Var 'aux1562' direct represents '1' with '8861'
c Var 'aux1562' order represents '1' with '1'
c Var 'aux1562' order represents '0' with '-8861'
c Encoding variable: aux1563 with domain: bool (representing constraint (3<=( - shift(agrid_00008_00002, -4) + aux660 + aux661)))
c Var 'aux1563' direct represents '0' with '-8862'
c Var 'aux1563' direct represents '1' with '8862'
c Var 'aux1563' order represents '1' with '1'
c Var 'aux1563' order represents '0' with '-8862'
c Encoding variable: aux1564 with domain: bool (representing constraint (( - shift(agrid_00001_00003, -4) + aux671 + aux672)<=3))
c Var 'aux1564' direct represents '0' with '-8863'
c Var 'aux1564' direct represents '1' with '8863'
c Var 'aux1564' order represents '1' with '1'
c Var 'aux1564' order represents '0' with '-8863'
c Encoding variable: aux1565 with domain: bool (representing constraint (3<=( - shift(agrid_00001_00003, -4) + aux671 + aux672)))
c Var 'aux1565' direct represents '0' with '-8864'
c Var 'aux1565' direct represents '1' with '8864'
c Var 'aux1565' order represents '1' with '1'
c Var 'aux1565' order represents '0' with '-8864'
c Encoding variable: aux1566 with domain: bool (representing constraint ((aux682 + aux683 - shift(agrid_00002_00003, -4))<=3))
c Var 'aux1566' direct represents '0' with '-8865'
c Var 'aux1566' direct represents '1' with '8865'
c Var 'aux1566' order represents '1' with '1'
c Var 'aux1566' order represents '0' with '-8865'
c Encoding variable: aux1567 with domain: bool (representing constraint (3<=(aux682 + aux683 - shift(agrid_00002_00003, -4))))
c Var 'aux1567' direct represents '0' with '-8866'
c Var 'aux1567' direct represents '1' with '8866'
c Var 'aux1567' order represents '1' with '1'
c Var 'aux1567' order represents '0' with '-8866'
c Encoding variable: aux1568 with domain: bool (representing constraint ((aux692 + aux694 - shift(agrid_00003_00003, -4))<=3))
c Var 'aux1568' direct represents '0' with '-8867'
c Var 'aux1568' direct represents '1' with '8867'
c Var 'aux1568' order represents '1' with '1'
c Var 'aux1568' order represents '0' with '-8867'
c Encoding variable: aux1569 with domain: bool (representing constraint (3<=(aux692 + aux694 - shift(agrid_00003_00003, -4))))
c Var 'aux1569' direct represents '0' with '-8868'
c Var 'aux1569' direct represents '1' with '8868'
c Var 'aux1569' order represents '1' with '1'
c Var 'aux1569' order represents '0' with '-8868'
c Encoding variable: aux1570 with domain: bool (representing constraint ((aux703 + aux705 - shift(agrid_00004_00003, -4))<=3))
c Var 'aux1570' direct represents '0' with '-8869'
c Var 'aux1570' direct represents '1' with '8869'
c Var 'aux1570' order represents '1' with '1'
c Var 'aux1570' order represents '0' with '-8869'
c Encoding variable: aux1571 with domain: bool (representing constraint (3<=(aux703 + aux705 - shift(agrid_00004_00003, -4))))
c Var 'aux1571' direct represents '0' with '-8870'
c Var 'aux1571' direct represents '1' with '8870'
c Var 'aux1571' order represents '1' with '1'
c Var 'aux1571' order represents '0' with '-8870'
c Encoding variable: aux1572 with domain: bool (representing constraint ((aux714 + aux716 - shift(agrid_00005_00003, -4))<=3))
c Var 'aux1572' direct represents '0' with '-8871'
c Var 'aux1572' direct represents '1' with '8871'
c Var 'aux1572' order represents '1' with '1'
c Var 'aux1572' order represents '0' with '-8871'
c Encoding variable: aux1573 with domain: bool (representing constraint (3<=(aux714 + aux716 - shift(agrid_00005_00003, -4))))
c Var 'aux1573' direct represents '0' with '-8872'
c Var 'aux1573' direct represents '1' with '8872'
c Var 'aux1573' order represents '1' with '1'
c Var 'aux1573' order represents '0' with '-8872'
c Encoding variable: aux1574 with domain: bool (representing constraint ((aux725 + aux727 - shift(agrid_00006_00003, -4))<=3))
c Var 'aux1574' direct represents '0' with '-8873'
c Var 'aux1574' direct represents '1' with '8873'
c Var 'aux1574' order represents '1' with '1'
c Var 'aux1574' order represents '0' with '-8873'
c Encoding variable: aux1575 with domain: bool (representing constraint (3<=(aux725 + aux727 - shift(agrid_00006_00003, -4))))
c Var 'aux1575' direct represents '0' with '-8874'
c Var 'aux1575' direct represents '1' with '8874'
c Var 'aux1575' order represents '1' with '1'
c Var 'aux1575' order represents '0' with '-8874'
c Encoding variable: aux1576 with domain: bool (representing constraint ((aux737 + aux738 - shift(agrid_00007_00003, -4))<=3))
c Var 'aux1576' direct represents '0' with '-8875'
c Var 'aux1576' direct represents '1' with '8875'
c Var 'aux1576' order represents '1' with '1'
c Var 'aux1576' order represents '0' with '-8875'
c Encoding variable: aux1577 with domain: bool (representing constraint (3<=(aux737 + aux738 - shift(agrid_00007_00003, -4))))
c Var 'aux1577' direct represents '0' with '-8876'
c Var 'aux1577' direct represents '1' with '8876'
c Var 'aux1577' order represents '1' with '1'
c Var 'aux1577' order represents '0' with '-8876'
c Encoding variable: aux1578 with domain: bool (representing constraint (( - shift(agrid_00008_00003, -4) + aux748 + aux749)<=3))
c Var 'aux1578' direct represents '0' with '-8877'
c Var 'aux1578' direct represents '1' with '8877'
c Var 'aux1578' order represents '1' with '1'
c Var 'aux1578' order represents '0' with '-8877'
c Encoding variable: aux1579 with domain: bool (representing constraint (3<=( - shift(agrid_00008_00003, -4) + aux748 + aux749)))
c Var 'aux1579' direct represents '0' with '-8878'
c Var 'aux1579' direct represents '1' with '8878'
c Var 'aux1579' order represents '1' with '1'
c Var 'aux1579' order represents '0' with '-8878'
c Encoding variable: aux1580 with domain: bool (representing constraint (( - shift(agrid_00001_00004, -4) + aux759 + aux760)<=3))
c Var 'aux1580' direct represents '0' with '-8879'
c Var 'aux1580' direct represents '1' with '8879'
c Var 'aux1580' order represents '1' with '1'
c Var 'aux1580' order represents '0' with '-8879'
c Encoding variable: aux1581 with domain: bool (representing constraint (3<=( - shift(agrid_00001_00004, -4) + aux759 + aux760)))
c Var 'aux1581' direct represents '0' with '-8880'
c Var 'aux1581' direct represents '1' with '8880'
c Var 'aux1581' order represents '1' with '1'
c Var 'aux1581' order represents '0' with '-8880'
c Encoding variable: aux1582 with domain: bool (representing constraint ((aux769 + aux771 - shift(agrid_00002_00004, -4))<=3))
c Var 'aux1582' direct represents '0' with '-8881'
c Var 'aux1582' direct represents '1' with '8881'
c Var 'aux1582' order represents '1' with '1'
c Var 'aux1582' order represents '0' with '-8881'
c Encoding variable: aux1583 with domain: bool (representing constraint (3<=(aux769 + aux771 - shift(agrid_00002_00004, -4))))
c Var 'aux1583' direct represents '0' with '-8882'
c Var 'aux1583' direct represents '1' with '8882'
c Var 'aux1583' order represents '1' with '1'
c Var 'aux1583' order represents '0' with '-8882'
c Encoding variable: aux1584 with domain: bool (representing constraint ((aux780 + aux782 - shift(agrid_00003_00004, -4))<=3))
c Var 'aux1584' direct represents '0' with '-8883'
c Var 'aux1584' direct represents '1' with '8883'
c Var 'aux1584' order represents '1' with '1'
c Var 'aux1584' order represents '0' with '-8883'
c Encoding variable: aux1585 with domain: bool (representing constraint (3<=(aux780 + aux782 - shift(agrid_00003_00004, -4))))
c Var 'aux1585' direct represents '0' with '-8884'
c Var 'aux1585' direct represents '1' with '8884'
c Var 'aux1585' order represents '1' with '1'
c Var 'aux1585' order represents '0' with '-8884'
c Encoding variable: aux1586 with domain: bool (representing constraint ((aux790 + aux791 + aux793)<=3))
c Var 'aux1586' direct represents '0' with '-8885'
c Var 'aux1586' direct represents '1' with '8885'
c Var 'aux1586' order represents '1' with '1'
c Var 'aux1586' order represents '0' with '-8885'
c Encoding variable: aux1587 with domain: bool (representing constraint (3<=(aux790 + aux791 + aux793)))
c Var 'aux1587' direct represents '0' with '-8886'
c Var 'aux1587' direct represents '1' with '8886'
c Var 'aux1587' order represents '1' with '1'
c Var 'aux1587' order represents '0' with '-8886'
c Encoding variable: aux1588 with domain: bool (representing constraint ((aux801 + aux802 + aux804)<=3))
c Var 'aux1588' direct represents '0' with '-8887'
c Var 'aux1588' direct represents '1' with '8887'
c Var 'aux1588' order represents '1' with '1'
c Var 'aux1588' order represents '0' with '-8887'
c Encoding variable: aux1589 with domain: bool (representing constraint (3<=(aux801 + aux802 + aux804)))
c Var 'aux1589' direct represents '0' with '-8888'
c Var 'aux1589' direct represents '1' with '8888'
c Var 'aux1589' order represents '1' with '1'
c Var 'aux1589' order represents '0' with '-8888'
c Encoding variable: aux1590 with domain: bool (representing constraint ((aux813 + aux815 - shift(agrid_00006_00004, -4))<=3))
c Var 'aux1590' direct represents '0' with '-8889'
c Var 'aux1590' direct represents '1' with '8889'
c Var 'aux1590' order represents '1' with '1'
c Var 'aux1590' order represents '0' with '-8889'
c Encoding variable: aux1591 with domain: bool (representing constraint (3<=(aux813 + aux815 - shift(agrid_00006_00004, -4))))
c Var 'aux1591' direct represents '0' with '-8890'
c Var 'aux1591' direct represents '1' with '8890'
c Var 'aux1591' order represents '1' with '1'
c Var 'aux1591' order represents '0' with '-8890'
c Encoding variable: aux1592 with domain: bool (representing constraint ((aux824 + aux826 - shift(agrid_00007_00004, -4))<=3))
c Var 'aux1592' direct represents '0' with '-8891'
c Var 'aux1592' direct represents '1' with '8891'
c Var 'aux1592' order represents '1' with '1'
c Var 'aux1592' order represents '0' with '-8891'
c Encoding variable: aux1593 with domain: bool (representing constraint (3<=(aux824 + aux826 - shift(agrid_00007_00004, -4))))
c Var 'aux1593' direct represents '0' with '-8892'
c Var 'aux1593' direct represents '1' with '8892'
c Var 'aux1593' order represents '1' with '1'
c Var 'aux1593' order represents '0' with '-8892'
c Encoding variable: aux1594 with domain: bool (representing constraint (( - shift(agrid_00008_00004, -4) + aux836 + aux837)<=3))
c Var 'aux1594' direct represents '0' with '-8893'
c Var 'aux1594' direct represents '1' with '8893'
c Var 'aux1594' order represents '1' with '1'
c Var 'aux1594' order represents '0' with '-8893'
c Encoding variable: aux1595 with domain: bool (representing constraint (3<=( - shift(agrid_00008_00004, -4) + aux836 + aux837)))
c Var 'aux1595' direct represents '0' with '-8894'
c Var 'aux1595' direct represents '1' with '8894'
c Var 'aux1595' order represents '1' with '1'
c Var 'aux1595' order represents '0' with '-8894'
c Encoding variable: aux1596 with domain: bool (representing constraint (( - shift(agrid_00001_00005, -4) + aux847 + aux848)<=3))
c Var 'aux1596' direct represents '0' with '-8895'
c Var 'aux1596' direct represents '1' with '8895'
c Var 'aux1596' order represents '1' with '1'
c Var 'aux1596' order represents '0' with '-8895'
c Encoding variable: aux1597 with domain: bool (representing constraint (3<=( - shift(agrid_00001_00005, -4) + aux847 + aux848)))
c Var 'aux1597' direct represents '0' with '-8896'
c Var 'aux1597' direct represents '1' with '8896'
c Var 'aux1597' order represents '1' with '1'
c Var 'aux1597' order represents '0' with '-8896'
c Encoding variable: aux1598 with domain: bool (representing constraint ((aux857 + aux859 - shift(agrid_00002_00005, -4))<=3))
c Var 'aux1598' direct represents '0' with '-8897'
c Var 'aux1598' direct represents '1' with '8897'
c Var 'aux1598' order represents '1' with '1'
c Var 'aux1598' order represents '0' with '-8897'
c Encoding variable: aux1599 with domain: bool (representing constraint (3<=(aux857 + aux859 - shift(agrid_00002_00005, -4))))
c Var 'aux1599' direct represents '0' with '-8898'
c Var 'aux1599' direct represents '1' with '8898'
c Var 'aux1599' order represents '1' with '1'
c Var 'aux1599' order represents '0' with '-8898'
c Encoding variable: aux1600 with domain: bool (representing constraint ((aux868 + aux870 - shift(agrid_00003_00005, -4))<=3))
c Var 'aux1600' direct represents '0' with '-8899'
c Var 'aux1600' direct represents '1' with '8899'
c Var 'aux1600' order represents '1' with '1'
c Var 'aux1600' order represents '0' with '-8899'
c Encoding variable: aux1601 with domain: bool (representing constraint (3<=(aux868 + aux870 - shift(agrid_00003_00005, -4))))
c Var 'aux1601' direct represents '0' with '-8900'
c Var 'aux1601' direct represents '1' with '8900'
c Var 'aux1601' order represents '1' with '1'
c Var 'aux1601' order represents '0' with '-8900'
c Encoding variable: aux1602 with domain: bool (representing constraint ((aux878 + aux879 + aux881)<=3))
c Var 'aux1602' direct represents '0' with '-8901'
c Var 'aux1602' direct represents '1' with '8901'
c Var 'aux1602' order represents '1' with '1'
c Var 'aux1602' order represents '0' with '-8901'
c Encoding variable: aux1603 with domain: bool (representing constraint (3<=(aux878 + aux879 + aux881)))
c Var 'aux1603' direct represents '0' with '-8902'
c Var 'aux1603' direct represents '1' with '8902'
c Var 'aux1603' order represents '1' with '1'
c Var 'aux1603' order represents '0' with '-8902'
c Encoding variable: aux1604 with domain: bool (representing constraint ((aux889 + aux890 + aux892)<=3))
c Var 'aux1604' direct represents '0' with '-8903'
c Var 'aux1604' direct represents '1' with '8903'
c Var 'aux1604' order represents '1' with '1'
c Var 'aux1604' order represents '0' with '-8903'
c Encoding variable: aux1605 with domain: bool (representing constraint (3<=(aux889 + aux890 + aux892)))
c Var 'aux1605' direct represents '0' with '-8904'
c Var 'aux1605' direct represents '1' with '8904'
c Var 'aux1605' order represents '1' with '1'
c Var 'aux1605' order represents '0' with '-8904'
c Encoding variable: aux1606 with domain: bool (representing constraint ((aux901 + aux903 - shift(agrid_00006_00005, -4))<=3))
c Var 'aux1606' direct represents '0' with '-8905'
c Var 'aux1606' direct represents '1' with '8905'
c Var 'aux1606' order represents '1' with '1'
c Var 'aux1606' order represents '0' with '-8905'
c Encoding variable: aux1607 with domain: bool (representing constraint (3<=(aux901 + aux903 - shift(agrid_00006_00005, -4))))
c Var 'aux1607' direct represents '0' with '-8906'
c Var 'aux1607' direct represents '1' with '8906'
c Var 'aux1607' order represents '1' with '1'
c Var 'aux1607' order represents '0' with '-8906'
c Encoding variable: aux1608 with domain: bool (representing constraint ((aux912 + aux914 - shift(agrid_00007_00005, -4))<=3))
c Var 'aux1608' direct represents '0' with '-8907'
c Var 'aux1608' direct represents '1' with '8907'
c Var 'aux1608' order represents '1' with '1'
c Var 'aux1608' order represents '0' with '-8907'
c Encoding variable: aux1609 with domain: bool (representing constraint (3<=(aux912 + aux914 - shift(agrid_00007_00005, -4))))
c Var 'aux1609' direct represents '0' with '-8908'
c Var 'aux1609' direct represents '1' with '8908'
c Var 'aux1609' order represents '1' with '1'
c Var 'aux1609' order represents '0' with '-8908'
c Encoding variable: aux1610 with domain: bool (representing constraint (( - shift(agrid_00008_00005, -4) + aux924 + aux925)<=3))
c Var 'aux1610' direct represents '0' with '-8909'
c Var 'aux1610' direct represents '1' with '8909'
c Var 'aux1610' order represents '1' with '1'
c Var 'aux1610' order represents '0' with '-8909'
c Encoding variable: aux1611 with domain: bool (representing constraint (3<=( - shift(agrid_00008_00005, -4) + aux924 + aux925)))
c Var 'aux1611' direct represents '0' with '-8910'
c Var 'aux1611' direct represents '1' with '8910'
c Var 'aux1611' order represents '1' with '1'
c Var 'aux1611' order represents '0' with '-8910'
c Encoding variable: aux1612 with domain: bool (representing constraint (( - shift(agrid_00001_00006, -4) + aux935 + aux936)<=3))
c Var 'aux1612' direct represents '0' with '-8911'
c Var 'aux1612' direct represents '1' with '8911'
c Var 'aux1612' order represents '1' with '1'
c Var 'aux1612' order represents '0' with '-8911'
c Encoding variable: aux1613 with domain: bool (representing constraint (3<=( - shift(agrid_00001_00006, -4) + aux935 + aux936)))
c Var 'aux1613' direct represents '0' with '-8912'
c Var 'aux1613' direct represents '1' with '8912'
c Var 'aux1613' order represents '1' with '1'
c Var 'aux1613' order represents '0' with '-8912'
c Encoding variable: aux1614 with domain: bool (representing constraint ((aux946 + aux947 - shift(agrid_00002_00006, -4))<=3))
c Var 'aux1614' direct represents '0' with '-8913'
c Var 'aux1614' direct represents '1' with '8913'
c Var 'aux1614' order represents '1' with '1'
c Var 'aux1614' order represents '0' with '-8913'
c Encoding variable: aux1615 with domain: bool (representing constraint (3<=(aux946 + aux947 - shift(agrid_00002_00006, -4))))
c Var 'aux1615' direct represents '0' with '-8914'
c Var 'aux1615' direct represents '1' with '8914'
c Var 'aux1615' order represents '1' with '1'
c Var 'aux1615' order represents '0' with '-8914'
c Encoding variable: aux1616 with domain: bool (representing constraint ((aux956 + aux958 - shift(agrid_00003_00006, -4))<=3))
c Var 'aux1616' direct represents '0' with '-8915'
c Var 'aux1616' direct represents '1' with '8915'
c Var 'aux1616' order represents '1' with '1'
c Var 'aux1616' order represents '0' with '-8915'
c Encoding variable: aux1617 with domain: bool (representing constraint (3<=(aux956 + aux958 - shift(agrid_00003_00006, -4))))
c Var 'aux1617' direct represents '0' with '-8916'
c Var 'aux1617' direct represents '1' with '8916'
c Var 'aux1617' order represents '1' with '1'
c Var 'aux1617' order represents '0' with '-8916'
c Encoding variable: aux1618 with domain: bool (representing constraint ((aux967 + aux969 - shift(agrid_00004_00006, -4))<=3))
c Var 'aux1618' direct represents '0' with '-8917'
c Var 'aux1618' direct represents '1' with '8917'
c Var 'aux1618' order represents '1' with '1'
c Var 'aux1618' order represents '0' with '-8917'
c Encoding variable: aux1619 with domain: bool (representing constraint (3<=(aux967 + aux969 - shift(agrid_00004_00006, -4))))
c Var 'aux1619' direct represents '0' with '-8918'
c Var 'aux1619' direct represents '1' with '8918'
c Var 'aux1619' order represents '1' with '1'
c Var 'aux1619' order represents '0' with '-8918'
c Encoding variable: aux1620 with domain: bool (representing constraint ((aux978 + aux980 - shift(agrid_00005_00006, -4))<=3))
c Var 'aux1620' direct represents '0' with '-8919'
c Var 'aux1620' direct represents '1' with '8919'
c Var 'aux1620' order represents '1' with '1'
c Var 'aux1620' order represents '0' with '-8919'
c Encoding variable: aux1621 with domain: bool (representing constraint (3<=(aux978 + aux980 - shift(agrid_00005_00006, -4))))
c Var 'aux1621' direct represents '0' with '-8920'
c Var 'aux1621' direct represents '1' with '8920'
c Var 'aux1621' order represents '1' with '1'
c Var 'aux1621' order represents '0' with '-8920'
c Encoding variable: aux1622 with domain: bool (representing constraint ((aux989 + aux991 - shift(agrid_00006_00006, -4))<=3))
c Var 'aux1622' direct represents '0' with '-8921'
c Var 'aux1622' direct represents '1' with '8921'
c Var 'aux1622' order represents '1' with '1'
c Var 'aux1622' order represents '0' with '-8921'
c Encoding variable: aux1623 with domain: bool (representing constraint (3<=(aux989 + aux991 - shift(agrid_00006_00006, -4))))
c Var 'aux1623' direct represents '0' with '-8922'
c Var 'aux1623' direct represents '1' with '8922'
c Var 'aux1623' order represents '1' with '1'
c Var 'aux1623' order represents '0' with '-8922'
c Encoding variable: aux1624 with domain: bool (representing constraint ((aux1001 + aux1002 - shift(agrid_00007_00006, -4))<=3))
c Var 'aux1624' direct represents '0' with '-8923'
c Var 'aux1624' direct represents '1' with '8923'
c Var 'aux1624' order represents '1' with '1'
c Var 'aux1624' order represents '0' with '-8923'
c Encoding variable: aux1625 with domain: bool (representing constraint (3<=(aux1001 + aux1002 - shift(agrid_00007_00006, -4))))
c Var 'aux1625' direct represents '0' with '-8924'
c Var 'aux1625' direct represents '1' with '8924'
c Var 'aux1625' order represents '1' with '1'
c Var 'aux1625' order represents '0' with '-8924'
c Encoding variable: aux1626 with domain: bool (representing constraint (( - shift(agrid_00008_00006, -4) + aux1012 + aux1013)<=3))
c Var 'aux1626' direct represents '0' with '-8925'
c Var 'aux1626' direct represents '1' with '8925'
c Var 'aux1626' order represents '1' with '1'
c Var 'aux1626' order represents '0' with '-8925'
c Encoding variable: aux1627 with domain: bool (representing constraint (3<=( - shift(agrid_00008_00006, -4) + aux1012 + aux1013)))
c Var 'aux1627' direct represents '0' with '-8926'
c Var 'aux1627' direct represents '1' with '8926'
c Var 'aux1627' order represents '1' with '1'
c Var 'aux1627' order represents '0' with '-8926'
c Encoding variable: aux1628 with domain: bool (representing constraint (( - shift(agrid_00001_00007, -4) + aux1023 + aux1024)<=3))
c Var 'aux1628' direct represents '0' with '-8927'
c Var 'aux1628' direct represents '1' with '8927'
c Var 'aux1628' order represents '1' with '1'
c Var 'aux1628' order represents '0' with '-8927'
c Encoding variable: aux1629 with domain: bool (representing constraint (3<=( - shift(agrid_00001_00007, -4) + aux1023 + aux1024)))
c Var 'aux1629' direct represents '0' with '-8928'
c Var 'aux1629' direct represents '1' with '8928'
c Var 'aux1629' order represents '1' with '1'
c Var 'aux1629' order represents '0' with '-8928'
c Encoding variable: aux1630 with domain: bool (representing constraint ((aux1034 + aux1035 - shift(agrid_00002_00007, -4))<=3))
c Var 'aux1630' direct represents '0' with '-8929'
c Var 'aux1630' direct represents '1' with '8929'
c Var 'aux1630' order represents '1' with '1'
c Var 'aux1630' order represents '0' with '-8929'
c Encoding variable: aux1631 with domain: bool (representing constraint (3<=(aux1034 + aux1035 - shift(agrid_00002_00007, -4))))
c Var 'aux1631' direct represents '0' with '-8930'
c Var 'aux1631' direct represents '1' with '8930'
c Var 'aux1631' order represents '1' with '1'
c Var 'aux1631' order represents '0' with '-8930'
c Encoding variable: aux1632 with domain: bool (representing constraint ((aux1045 + aux1046 - shift(agrid_00003_00007, -4))<=3))
c Var 'aux1632' direct represents '0' with '-8931'
c Var 'aux1632' direct represents '1' with '8931'
c Var 'aux1632' order represents '1' with '1'
c Var 'aux1632' order represents '0' with '-8931'
c Encoding variable: aux1633 with domain: bool (representing constraint (3<=(aux1045 + aux1046 - shift(agrid_00003_00007, -4))))
c Var 'aux1633' direct represents '0' with '-8932'
c Var 'aux1633' direct represents '1' with '8932'
c Var 'aux1633' order represents '1' with '1'
c Var 'aux1633' order represents '0' with '-8932'
c Encoding variable: aux1634 with domain: bool (representing constraint ((aux1055 + aux1057 - shift(agrid_00004_00007, -4))<=3))
c Var 'aux1634' direct represents '0' with '-8933'
c Var 'aux1634' direct represents '1' with '8933'
c Var 'aux1634' order represents '1' with '1'
c Var 'aux1634' order represents '0' with '-8933'
c Encoding variable: aux1635 with domain: bool (representing constraint (3<=(aux1055 + aux1057 - shift(agrid_00004_00007, -4))))
c Var 'aux1635' direct represents '0' with '-8934'
c Var 'aux1635' direct represents '1' with '8934'
c Var 'aux1635' order represents '1' with '1'
c Var 'aux1635' order represents '0' with '-8934'
c Encoding variable: aux1636 with domain: bool (representing constraint ((aux1066 + aux1068 - shift(agrid_00005_00007, -4))<=3))
c Var 'aux1636' direct represents '0' with '-8935'
c Var 'aux1636' direct represents '1' with '8935'
c Var 'aux1636' order represents '1' with '1'
c Var 'aux1636' order represents '0' with '-8935'
c Encoding variable: aux1637 with domain: bool (representing constraint (3<=(aux1066 + aux1068 - shift(agrid_00005_00007, -4))))
c Var 'aux1637' direct represents '0' with '-8936'
c Var 'aux1637' direct represents '1' with '8936'
c Var 'aux1637' order represents '1' with '1'
c Var 'aux1637' order represents '0' with '-8936'
c Encoding variable: aux1638 with domain: bool (representing constraint (( - shift(agrid_00006_00007, -4) + aux1078 + aux1079)<=3))
c Var 'aux1638' direct represents '0' with '-8937'
c Var 'aux1638' direct represents '1' with '8937'
c Var 'aux1638' order represents '1' with '1'
c Var 'aux1638' order represents '0' with '-8937'
c Encoding variable: aux1639 with domain: bool (representing constraint (3<=( - shift(agrid_00006_00007, -4) + aux1078 + aux1079)))
c Var 'aux1639' direct represents '0' with '-8938'
c Var 'aux1639' direct represents '1' with '8938'
c Var 'aux1639' order represents '1' with '1'
c Var 'aux1639' order represents '0' with '-8938'
c Encoding variable: aux1640 with domain: bool (representing constraint ((aux1089 + aux1090 - shift(agrid_00007_00007, -4))<=3))
c Var 'aux1640' direct represents '0' with '-8939'
c Var 'aux1640' direct represents '1' with '8939'
c Var 'aux1640' order represents '1' with '1'
c Var 'aux1640' order represents '0' with '-8939'
c Encoding variable: aux1641 with domain: bool (representing constraint (3<=(aux1089 + aux1090 - shift(agrid_00007_00007, -4))))
c Var 'aux1641' direct represents '0' with '-8940'
c Var 'aux1641' direct represents '1' with '8940'
c Var 'aux1641' order represents '1' with '1'
c Var 'aux1641' order represents '0' with '-8940'
c Encoding variable: aux1642 with domain: bool (representing constraint (( - shift(agrid_00008_00007, -4) + aux1100 + aux1101)<=3))
c Var 'aux1642' direct represents '0' with '-8941'
c Var 'aux1642' direct represents '1' with '8941'
c Var 'aux1642' order represents '1' with '1'
c Var 'aux1642' order represents '0' with '-8941'
c Encoding variable: aux1643 with domain: bool (representing constraint (3<=( - shift(agrid_00008_00007, -4) + aux1100 + aux1101)))
c Var 'aux1643' direct represents '0' with '-8942'
c Var 'aux1643' direct represents '1' with '8942'
c Var 'aux1643' order represents '1' with '1'
c Var 'aux1643' order represents '0' with '-8942'
c Encoding variable: aux1644 with domain: bool (representing constraint (( - shift(agrid_00001_00008, -4) + aux1110 + aux1112)<=3))
c Var 'aux1644' direct represents '0' with '-8943'
c Var 'aux1644' direct represents '1' with '8943'
c Var 'aux1644' order represents '1' with '1'
c Var 'aux1644' order represents '0' with '-8943'
c Encoding variable: aux1645 with domain: bool (representing constraint (3<=( - shift(agrid_00001_00008, -4) + aux1110 + aux1112)))
c Var 'aux1645' direct represents '0' with '-8944'
c Var 'aux1645' direct represents '1' with '8944'
c Var 'aux1645' order represents '1' with '1'
c Var 'aux1645' order represents '0' with '-8944'
c Encoding variable: aux1646 with domain: bool (representing constraint ((aux1122 + aux1123 - shift(agrid_00002_00008, -4))<=3))
c Var 'aux1646' direct represents '0' with '-8945'
c Var 'aux1646' direct represents '1' with '8945'
c Var 'aux1646' order represents '1' with '1'
c Var 'aux1646' order represents '0' with '-8945'
c Encoding variable: aux1647 with domain: bool (representing constraint (3<=(aux1122 + aux1123 - shift(agrid_00002_00008, -4))))
c Var 'aux1647' direct represents '0' with '-8946'
c Var 'aux1647' direct represents '1' with '8946'
c Var 'aux1647' order represents '1' with '1'
c Var 'aux1647' order represents '0' with '-8946'
c Encoding variable: aux1648 with domain: bool (representing constraint ((aux1133 + aux1134 - shift(agrid_00003_00008, -4))<=3))
c Var 'aux1648' direct represents '0' with '-8947'
c Var 'aux1648' direct represents '1' with '8947'
c Var 'aux1648' order represents '1' with '1'
c Var 'aux1648' order represents '0' with '-8947'
c Encoding variable: aux1649 with domain: bool (representing constraint (3<=(aux1133 + aux1134 - shift(agrid_00003_00008, -4))))
c Var 'aux1649' direct represents '0' with '-8948'
c Var 'aux1649' direct represents '1' with '8948'
c Var 'aux1649' order represents '1' with '1'
c Var 'aux1649' order represents '0' with '-8948'
c Encoding variable: aux1650 with domain: bool (representing constraint ((aux1144 + aux1145 - shift(agrid_00004_00008, -4))<=3))
c Var 'aux1650' direct represents '0' with '-8949'
c Var 'aux1650' direct represents '1' with '8949'
c Var 'aux1650' order represents '1' with '1'
c Var 'aux1650' order represents '0' with '-8949'
c Encoding variable: aux1651 with domain: bool (representing constraint (3<=(aux1144 + aux1145 - shift(agrid_00004_00008, -4))))
c Var 'aux1651' direct represents '0' with '-8950'
c Var 'aux1651' direct represents '1' with '8950'
c Var 'aux1651' order represents '1' with '1'
c Var 'aux1651' order represents '0' with '-8950'
c Encoding variable: aux1652 with domain: bool (representing constraint ((aux1155 + aux1156 - shift(agrid_00005_00008, -4))<=3))
c Var 'aux1652' direct represents '0' with '-8951'
c Var 'aux1652' direct represents '1' with '8951'
c Var 'aux1652' order represents '1' with '1'
c Var 'aux1652' order represents '0' with '-8951'
c Encoding variable: aux1653 with domain: bool (representing constraint (3<=(aux1155 + aux1156 - shift(agrid_00005_00008, -4))))
c Var 'aux1653' direct represents '0' with '-8952'
c Var 'aux1653' direct represents '1' with '8952'
c Var 'aux1653' order represents '1' with '1'
c Var 'aux1653' order represents '0' with '-8952'
c Encoding variable: aux1654 with domain: bool (representing constraint (( - shift(agrid_00006_00008, -4) + aux1166 + aux1167)<=3))
c Var 'aux1654' direct represents '0' with '-8953'
c Var 'aux1654' direct represents '1' with '8953'
c Var 'aux1654' order represents '1' with '1'
c Var 'aux1654' order represents '0' with '-8953'
c Encoding variable: aux1655 with domain: bool (representing constraint (3<=( - shift(agrid_00006_00008, -4) + aux1166 + aux1167)))
c Var 'aux1655' direct represents '0' with '-8954'
c Var 'aux1655' direct represents '1' with '8954'
c Var 'aux1655' order represents '1' with '1'
c Var 'aux1655' order represents '0' with '-8954'
c Encoding variable: aux1656 with domain: bool (representing constraint ((aux1177 + aux1178 - shift(agrid_00007_00008, -4))<=3))
c Var 'aux1656' direct represents '0' with '-8955'
c Var 'aux1656' direct represents '1' with '8955'
c Var 'aux1656' order represents '1' with '1'
c Var 'aux1656' order represents '0' with '-8955'
c Encoding variable: aux1657 with domain: bool (representing constraint (3<=(aux1177 + aux1178 - shift(agrid_00007_00008, -4))))
c Var 'aux1657' direct represents '0' with '-8956'
c Var 'aux1657' direct represents '1' with '8956'
c Var 'aux1657' order represents '1' with '1'
c Var 'aux1657' order represents '0' with '-8956'
c Encoding variable: aux1658 with domain: bool (representing constraint (( - shift(agrid_00008_00008, -4) + aux1187 + aux1189)<=3))
c Var 'aux1658' direct represents '0' with '-8957'
c Var 'aux1658' direct represents '1' with '8957'
c Var 'aux1658' order represents '1' with '1'
c Var 'aux1658' order represents '0' with '-8957'
c Encoding variable: aux1659 with domain: bool (representing constraint (3<=( - shift(agrid_00008_00008, -4) + aux1187 + aux1189)))
c Var 'aux1659' direct represents '0' with '-8958'
c Var 'aux1659' direct represents '1' with '8958'
c Var 'aux1659' order represents '1' with '1'
c Var 'aux1659' order represents '0' with '-8958'
c (((aux404 + aux405 - shift(num_occupied_by_types_00001, -64))<=256)=tv=SATLiteral(8799))
-8799 -1570 2948 3203 0
-8799 -1568 2946 3203 0
-8799 -1568 2948 3201 0
-8799 -1566 2944 3203 0
-8799 -1566 2946 3201 0
-8799 -1566 2948 3199 0
-8799 -1564 2942 3203 0
-8799 -1564 2944 3201 0
-8799 -1564 2946 3199 0
-8799 -1564 2948 3197 0
-8799 -1562 2940 3203 0
-8799 -1562 2942 3201 0
-8799 -1562 2944 3199 0
-8799 -1562 2946 3197 0
-8799 -1562 2948 3195 0
-8799 -1560 2938 3203 0
-8799 -1560 2940 3201 0
-8799 -1560 2942 3199 0
-8799 -1560 2944 3197 0
-8799 -1560 2946 3195 0
-8799 -1560 2948 3193 0
-8799 -1558 2936 3203 0
-8799 -1558 2938 3201 0
-8799 -1558 2940 3199 0
-8799 -1558 2942 3197 0
-8799 -1558 2944 3195 0
-8799 -1558 2946 3193 0
-8799 -1558 2948 3191 0
-8799 -1556 2934 3203 0
-8799 -1556 2936 3201 0
-8799 -1556 2938 3199 0
-8799 -1556 2940 3197 0
-8799 -1556 2942 3195 0
-8799 -1556 2944 3193 0
-8799 -1556 2946 3191 0
-8799 -1556 2948 3189 0
-8799 -1554 2932 3203 0
-8799 -1554 2934 3201 0
-8799 -1554 2936 3199 0
-8799 -1554 2938 3197 0
-8799 -1554 2940 3195 0
-8799 -1554 2942 3193 0
-8799 -1554 2944 3191 0
-8799 -1554 2946 3189 0
-8799 -1554 2948 3187 0
-8799 -1552 2930 3203 0
-8799 -1552 2932 3201 0
-8799 -1552 2934 3199 0
-8799 -1552 2936 3197 0
-8799 -1552 2938 3195 0
-8799 -1552 2940 3193 0
-8799 -1552 2942 3191 0
-8799 -1552 2944 3189 0
-8799 -1552 2946 3187 0
-8799 -1552 2948 3185 0
-8799 -1550 2928 3203 0
-8799 -1550 2930 3201 0
-8799 -1550 2932 3199 0
-8799 -1550 2934 3197 0
-8799 -1550 2936 3195 0
-8799 -1550 2938 3193 0
-8799 -1550 2940 3191 0
-8799 -1550 2942 3189 0
-8799 -1550 2944 3187 0
-8799 -1550 2946 3185 0
-8799 -1550 2948 3183 0
-8799 -1548 2926 3203 0
-8799 -1548 2928 3201 0
-8799 -1548 2930 3199 0
-8799 -1548 2932 3197 0
-8799 -1548 2934 3195 0
-8799 -1548 2936 3193 0
-8799 -1548 2938 3191 0
-8799 -1548 2940 3189 0
-8799 -1548 2942 3187 0
-8799 -1548 2944 3185 0
-8799 -1548 2946 3183 0
-8799 -1548 2948 3181 0
-8799 -1546 2924 3203 0
-8799 -1546 2926 3201 0
-8799 -1546 2928 3199 0
-8799 -1546 2930 3197 0
-8799 -1546 2932 3195 0
-8799 -1546 2934 3193 0
-8799 -1546 2936 3191 0
-8799 -1546 2938 3189 0
-8799 -1546 2940 3187 0
-8799 -1546 2942 3185 0
-8799 -1546 2944 3183 0
-8799 -1546 2946 3181 0
-8799 -1546 2948 3179 0
-8799 -1544 2922 3203 0
-8799 -1544 2924 3201 0
-8799 -1544 2926 3199 0
-8799 -1544 2928 3197 0
-8799 -1544 2930 3195 0
-8799 -1544 2932 3193 0
-8799 -1544 2934 3191 0
-8799 -1544 2936 3189 0
-8799 -1544 2938 3187 0
-8799 -1544 2940 3185 0
-8799 -1544 2942 3183 0
-8799 -1544 2944 3181 0
-8799 -1544 2946 3179 0
-8799 -1544 2948 3177 0
-8799 -1542 2920 3203 0
-8799 -1542 2922 3201 0
-8799 -1542 2924 3199 0
-8799 -1542 2926 3197 0
-8799 -1542 2928 3195 0
-8799 -1542 2930 3193 0
-8799 -1542 2932 3191 0
-8799 -1542 2934 3189 0
-8799 -1542 2936 3187 0
-8799 -1542 2938 3185 0
-8799 -1542 2940 3183 0
-8799 -1542 2942 3181 0
-8799 -1542 2944 3179 0
-8799 -1542 2946 3177 0
-8799 -1542 2948 3175 0
-8799 -1540 2918 3203 0
-8799 -1540 2920 3201 0
-8799 -1540 2922 3199 0
-8799 -1540 2924 3197 0
-8799 -1540 2926 3195 0
-8799 -1540 2928 3193 0
-8799 -1540 2930 3191 0
-8799 -1540 2932 3189 0
-8799 -1540 2934 3187 0
-8799 -1540 2936 3185 0
-8799 -1540 2938 3183 0
-8799 -1540 2940 3181 0
-8799 -1540 2942 3179 0
-8799 -1540 2944 3177 0
-8799 -1540 2946 3175 0
-8799 -1540 2948 3173 0
-8799 -1538 2916 3203 0
-8799 -1538 2918 3201 0
-8799 -1538 2920 3199 0
-8799 -1538 2922 3197 0
-8799 -1538 2924 3195 0
-8799 -1538 2926 3193 0
-8799 -1538 2928 3191 0
-8799 -1538 2930 3189 0
-8799 -1538 2932 3187 0
-8799 -1538 2934 3185 0
-8799 -1538 2936 3183 0
-8799 -1538 2938 3181 0
-8799 -1538 2940 3179 0
-8799 -1538 2942 3177 0
-8799 -1538 2944 3175 0
-8799 -1538 2946 3173 0
-8799 -1538 2948 3171 0
-8799 -1536 2914 3203 0
-8799 -1536 2916 3201 0
-8799 -1536 2918 3199 0
-8799 -1536 2920 3197 0
-8799 -1536 2922 3195 0
-8799 -1536 2924 3193 0
-8799 -1536 2926 3191 0
-8799 -1536 2928 3189 0
-8799 -1536 2930 3187 0
-8799 -1536 2932 3185 0
-8799 -1536 2934 3183 0
-8799 -1536 2936 3181 0
-8799 -1536 2938 3179 0
-8799 -1536 2940 3177 0
-8799 -1536 2942 3175 0
-8799 -1536 2944 3173 0
-8799 -1536 2946 3171 0
-8799 -1536 2948 3169 0
-8799 -1534 2912 3203 0
-8799 -1534 2914 3201 0
-8799 -1534 2916 3199 0
-8799 -1534 2918 3197 0
-8799 -1534 2920 3195 0
-8799 -1534 2922 3193 0
-8799 -1534 2924 3191 0
-8799 -1534 2926 3189 0
-8799 -1534 2928 3187 0
-8799 -1534 2930 3185 0
-8799 -1534 2932 3183 0
-8799 -1534 2934 3181 0
-8799 -1534 2936 3179 0
-8799 -1534 2938 3177 0
-8799 -1534 2940 3175 0
-8799 -1534 2942 3173 0
-8799 -1534 2944 3171 0
-8799 -1534 2946 3169 0
-8799 -1534 2948 3167 0
-8799 -1532 2910 3203 0
-8799 -1532 2912 3201 0
-8799 -1532 2914 3199 0
-8799 -1532 2916 3197 0
-8799 -1532 2918 3195 0
-8799 -1532 2920 3193 0
-8799 -1532 2922 3191 0
-8799 -1532 2924 3189 0
-8799 -1532 2926 3187 0
-8799 -1532 2928 3185 0
-8799 -1532 2930 3183 0
-8799 -1532 2932 3181 0
-8799 -1532 2934 3179 0
-8799 -1532 2936 3177 0
-8799 -1532 2938 3175 0
-8799 -1532 2940 3173 0
-8799 -1532 2942 3171 0
-8799 -1532 2944 3169 0
-8799 -1532 2946 3167 0
-8799 -1532 2948 3165 0
-8799 -1530 2908 3203 0
-8799 -1530 2910 3201 0
-8799 -1530 2912 3199 0
-8799 -1530 2914 3197 0
-8799 -1530 2916 3195 0
-8799 -1530 2918 3193 0
-8799 -1530 2920 3191 0
-8799 -1530 2922 3189 0
-8799 -1530 2924 3187 0
-8799 -1530 2926 3185 0
-8799 -1530 2928 3183 0
-8799 -1530 2930 3181 0
-8799 -1530 2932 3179 0
-8799 -1530 2934 3177 0
-8799 -1530 2936 3175 0
-8799 -1530 2938 3173 0
-8799 -1530 2940 3171 0
-8799 -1530 2942 3169 0
-8799 -1530 2944 3167 0
-8799 -1530 2946 3165 0
-8799 -1530 2948 3163 0
-8799 -1528 2906 3203 0
-8799 -1528 2908 3201 0
-8799 -1528 2910 3199 0
-8799 -1528 2912 3197 0
-8799 -1528 2914 3195 0
-8799 -1528 2916 3193 0
-8799 -1528 2918 3191 0
-8799 -1528 2920 3189 0
-8799 -1528 2922 3187 0
-8799 -1528 2924 3185 0
-8799 -1528 2926 3183 0
-8799 -1528 2928 3181 0
-8799 -1528 2930 3179 0
-8799 -1528 2932 3177 0
-8799 -1528 2934 3175 0
-8799 -1528 2936 3173 0
-8799 -1528 2938 3171 0
-8799 -1528 2940 3169 0
-8799 -1528 2942 3167 0
-8799 -1528 2944 3165 0
-8799 -1528 2946 3163 0
-8799 -1528 2948 3161 0
-8799 -1526 2904 3203 0
-8799 -1526 2906 3201 0
-8799 -1526 2908 3199 0
-8799 -1526 2910 3197 0
-8799 -1526 2912 3195 0
-8799 -1526 2914 3193 0
-8799 -1526 2916 3191 0
-8799 -1526 2918 3189 0
-8799 -1526 2920 3187 0
-8799 -1526 2922 3185 0
-8799 -1526 2924 3183 0
-8799 -1526 2926 3181 0
-8799 -1526 2928 3179 0
-8799 -1526 2930 3177 0
-8799 -1526 2932 3175 0
-8799 -1526 2934 3173 0
-8799 -1526 2936 3171 0
-8799 -1526 2938 3169 0
-8799 -1526 2940 3167 0
-8799 -1526 2942 3165 0
-8799 -1526 2944 3163 0
-8799 -1526 2946 3161 0
-8799 -1526 2948 3159 0
-8799 -1524 2902 3203 0
-8799 -1524 2904 3201 0
-8799 -1524 2906 3199 0
-8799 -1524 2908 3197 0
-8799 -1524 2910 3195 0
-8799 -1524 2912 3193 0
-8799 -1524 2914 3191 0
-8799 -1524 2916 3189 0
-8799 -1524 2918 3187 0
-8799 -1524 2920 3185 0
-8799 -1524 2922 3183 0
-8799 -1524 2924 3181 0
-8799 -1524 2926 3179 0
-8799 -1524 2928 3177 0
-8799 -1524 2930 3175 0
-8799 -1524 2932 3173 0
-8799 -1524 2934 3171 0
-8799 -1524 2936 3169 0
-8799 -1524 2938 3167 0
-8799 -1524 2940 3165 0
-8799 -1524 2942 3163 0
-8799 -1524 2944 3161 0
-8799 -1524 2946 3159 0
-8799 -1524 2948 3157 0
-8799 -1522 2900 3203 0
-8799 -1522 2902 3201 0
-8799 -1522 2904 3199 0
-8799 -1522 2906 3197 0
-8799 -1522 2908 3195 0
-8799 -1522 2910 3193 0
-8799 -1522 2912 3191 0
-8799 -1522 2914 3189 0
-8799 -1522 2916 3187 0
-8799 -1522 2918 3185 0
-8799 -1522 2920 3183 0
-8799 -1522 2922 3181 0
-8799 -1522 2924 3179 0
-8799 -1522 2926 3177 0
-8799 -1522 2928 3175 0
-8799 -1522 2930 3173 0
-8799 -1522 2932 3171 0
-8799 -1522 2934 3169 0
-8799 -1522 2936 3167 0
-8799 -1522 2938 3165 0
-8799 -1522 2940 3163 0
-8799 -1522 2942 3161 0
-8799 -1522 2944 3159 0
-8799 -1522 2946 3157 0
-8799 -1522 2948 3155 0
-8799 -1520 2898 3203 0
-8799 -1520 2900 3201 0
-8799 -1520 2902 3199 0
-8799 -1520 2904 3197 0
-8799 -1520 2906 3195 0
-8799 -1520 2908 3193 0
-8799 -1520 2910 3191 0
-8799 -1520 2912 3189 0
-8799 -1520 2914 3187 0
-8799 -1520 2916 3185 0
-8799 -1520 2918 3183 0
-8799 -1520 2920 3181 0
-8799 -1520 2922 3179 0
-8799 -1520 2924 3177 0
-8799 -1520 2926 3175 0
-8799 -1520 2928 3173 0
-8799 -1520 2930 3171 0
-8799 -1520 2932 3169 0
-8799 -1520 2934 3167 0
-8799 -1520 2936 3165 0
-8799 -1520 2938 3163 0
-8799 -1520 2940 3161 0
-8799 -1520 2942 3159 0
-8799 -1520 2944 3157 0
-8799 -1520 2946 3155 0
-8799 -1520 2948 3153 0
-8799 -1518 2896 3203 0
-8799 -1518 2898 3201 0
-8799 -1518 2900 3199 0
-8799 -1518 2902 3197 0
-8799 -1518 2904 3195 0
-8799 -1518 2906 3193 0
-8799 -1518 2908 3191 0
-8799 -1518 2910 3189 0
-8799 -1518 2912 3187 0
-8799 -1518 2914 3185 0
-8799 -1518 2916 3183 0
-8799 -1518 2918 3181 0
-8799 -1518 2920 3179 0
-8799 -1518 2922 3177 0
-8799 -1518 2924 3175 0
-8799 -1518 2926 3173 0
-8799 -1518 2928 3171 0
-8799 -1518 2930 3169 0
-8799 -1518 2932 3167 0
-8799 -1518 2934 3165 0
-8799 -1518 2936 3163 0
-8799 -1518 2938 3161 0
-8799 -1518 2940 3159 0
-8799 -1518 2942 3157 0
-8799 -1518 2944 3155 0
-8799 -1518 2946 3153 0
-8799 -1518 2948 3151 0
-8799 -1516 2894 3203 0
-8799 -1516 2896 3201 0
-8799 -1516 2898 3199 0
-8799 -1516 2900 3197 0
-8799 -1516 2902 3195 0
-8799 -1516 2904 3193 0
-8799 -1516 2906 3191 0
-8799 -1516 2908 3189 0
-8799 -1516 2910 3187 0
-8799 -1516 2912 3185 0
-8799 -1516 2914 3183 0
-8799 -1516 2916 3181 0
-8799 -1516 2918 3179 0
-8799 -1516 2920 3177 0
-8799 -1516 2922 3175 0
-8799 -1516 2924 3173 0
-8799 -1516 2926 3171 0
-8799 -1516 2928 3169 0
-8799 -1516 2930 3167 0
-8799 -1516 2932 3165 0
-8799 -1516 2934 3163 0
-8799 -1516 2936 3161 0
-8799 -1516 2938 3159 0
-8799 -1516 2940 3157 0
-8799 -1516 2942 3155 0
-8799 -1516 2944 3153 0
-8799 -1516 2946 3151 0
-8799 -1516 2948 3149 0
-8799 -1514 2892 3203 0
-8799 -1514 2894 3201 0
-8799 -1514 2896 3199 0
-8799 -1514 2898 3197 0
-8799 -1514 2900 3195 0
-8799 -1514 2902 3193 0
-8799 -1514 2904 3191 0
-8799 -1514 2906 3189 0
-8799 -1514 2908 3187 0
-8799 -1514 2910 3185 0
-8799 -1514 2912 3183 0
-8799 -1514 2914 3181 0
-8799 -1514 2916 3179 0
-8799 -1514 2918 3177 0
-8799 -1514 2920 3175 0
-8799 -1514 2922 3173 0
-8799 -1514 2924 3171 0
-8799 -1514 2926 3169 0
-8799 -1514 2928 3167 0
-8799 -1514 2930 3165 0
-8799 -1514 2932 3163 0
-8799 -1514 2934 3161 0
-8799 -1514 2936 3159 0
-8799 -1514 2938 3157 0
-8799 -1514 2940 3155 0
-8799 -1514 2942 3153 0
-8799 -1514 2944 3151 0
-8799 -1514 2946 3149 0
-8799 -1514 2948 3147 0
-8799 -1512 2890 3203 0
-8799 -1512 2892 3201 0
-8799 -1512 2894 3199 0
-8799 -1512 2896 3197 0
-8799 -1512 2898 3195 0
-8799 -1512 2900 3193 0
-8799 -1512 2902 3191 0
-8799 -1512 2904 3189 0
-8799 -1512 2906 3187 0
-8799 -1512 2908 3185 0
-8799 -1512 2910 3183 0
-8799 -1512 2912 3181 0
-8799 -1512 2914 3179 0
-8799 -1512 2916 3177 0
-8799 -1512 2918 3175 0
-8799 -1512 2920 3173 0
-8799 -1512 2922 3171 0
-8799 -1512 2924 3169 0
-8799 -1512 2926 3167 0
-8799 -1512 2928 3165 0
-8799 -1512 2930 3163 0
-8799 -1512 2932 3161 0
-8799 -1512 2934 3159 0
-8799 -1512 2936 3157 0
-8799 -1512 2938 3155 0
-8799 -1512 2940 3153 0
-8799 -1512 2942 3151 0
-8799 -1512 2944 3149 0
-8799 -1512 2946 3147 0
-8799 -1512 2948 3145 0
-8799 -1510 2888 3203 0
-8799 -1510 2890 3201 0
-8799 -1510 2892 3199 0
-8799 -1510 2894 3197 0
-8799 -1510 2896 3195 0
-8799 -1510 2898 3193 0
-8799 -1510 2900 3191 0
-8799 -1510 2902 3189 0
-8799 -1510 2904 3187 0
-8799 -1510 2906 3185 0
-8799 -1510 2908 3183 0
-8799 -1510 2910 3181 0
-8799 -1510 2912 3179 0
-8799 -1510 2914 3177 0
-8799 -1510 2916 3175 0
-8799 -1510 2918 3173 0
-8799 -1510 2920 3171 0
-8799 -1510 2922 3169 0
-8799 -1510 2924 3167 0
-8799 -1510 2926 3165 0
-8799 -1510 2928 3163 0
-8799 -1510 2930 3161 0
-8799 -1510 2932 3159 0
-8799 -1510 2934 3157 0
-8799 -1510 2936 3155 0
-8799 -1510 2938 3153 0
-8799 -1510 2940 3151 0
-8799 -1510 2942 3149 0
-8799 -1510 2944 3147 0
-8799 -1510 2946 3145 0
-8799 -1510 2948 3143 0
-8799 -1508 2886 3203 0
-8799 -1508 2888 3201 0
-8799 -1508 2890 3199 0
-8799 -1508 2892 3197 0
-8799 -1508 2894 3195 0
-8799 -1508 2896 3193 0
-8799 -1508 2898 3191 0
-8799 -1508 2900 3189 0
-8799 -1508 2902 3187 0
-8799 -1508 2904 3185 0
-8799 -1508 2906 3183 0
-8799 -1508 2908 3181 0
-8799 -1508 2910 3179 0
-8799 -1508 2912 3177 0
-8799 -1508 2914 3175 0
-8799 -1508 2916 3173 0
-8799 -1508 2918 3171 0
-8799 -1508 2920 3169 0
-8799 -1508 2922 3167 0
-8799 -1508 2924 3165 0
-8799 -1508 2926 3163 0
-8799 -1508 2928 3161 0
-8799 -1508 2930 3159 0
-8799 -1508 2932 3157 0
-8799 -1508 2934 3155 0
-8799 -1508 2936 3153 0
-8799 -1508 2938 3151 0
-8799 -1508 2940 3149 0
-8799 -1508 2942 3147 0
-8799 -1508 2944 3145 0
-8799 -1508 2946 3143 0
-8799 -1508 2948 3141 0
-8799 -1506 2884 3203 0
-8799 -1506 2886 3201 0
-8799 -1506 2888 3199 0
-8799 -1506 2890 3197 0
-8799 -1506 2892 3195 0
-8799 -1506 2894 3193 0
-8799 -1506 2896 3191 0
-8799 -1506 2898 3189 0
-8799 -1506 2900 3187 0
-8799 -1506 2902 3185 0
-8799 -1506 2904 3183 0
-8799 -1506 2906 3181 0
-8799 -1506 2908 3179 0
-8799 -1506 2910 3177 0
-8799 -1506 2912 3175 0
-8799 -1506 2914 3173 0
-8799 -1506 2916 3171 0
-8799 -1506 2918 3169 0
-8799 -1506 2920 3167 0
-8799 -1506 2922 3165 0
-8799 -1506 2924 3163 0
-8799 -1506 2926 3161 0
-8799 -1506 2928 3159 0
-8799 -1506 2930 3157 0
-8799 -1506 2932 3155 0
-8799 -1506 2934 3153 0
-8799 -1506 2936 3151 0
-8799 -1506 2938 3149 0
-8799 -1506 2940 3147 0
-8799 -1506 2942 3145 0
-8799 -1506 2944 3143 0
-8799 -1506 2946 3141 0
-8799 -1506 2948 3139 0
-8799 -1504 2882 3203 0
-8799 -1504 2884 3201 0
-8799 -1504 2886 3199 0
-8799 -1504 2888 3197 0
-8799 -1504 2890 3195 0
-8799 -1504 2892 3193 0
-8799 -1504 2894 3191 0
-8799 -1504 2896 3189 0
-8799 -1504 2898 3187 0
-8799 -1504 2900 3185 0
-8799 -1504 2902 3183 0
-8799 -1504 2904 3181 0
-8799 -1504 2906 3179 0
-8799 -1504 2908 3177 0
-8799 -1504 2910 3175 0
-8799 -1504 2912 3173 0
-8799 -1504 2914 3171 0
-8799 -1504 2916 3169 0
-8799 -1504 2918 3167 0
-8799 -1504 2920 3165 0
-8799 -1504 2922 3163 0
-8799 -1504 2924 3161 0
-8799 -1504 2926 3159 0
-8799 -1504 2928 3157 0
-8799 -1504 2930 3155 0
-8799 -1504 2932 3153 0
-8799 -1504 2934 3151 0
-8799 -1504 2936 3149 0
-8799 -1504 2938 3147 0
-8799 -1504 2940 3145 0
-8799 -1504 2942 3143 0
-8799 -1504 2944 3141 0
-8799 -1504 2946 3139 0
-8799 -1504 2948 3137 0
-8799 -1502 2880 3203 0
-8799 -1502 2882 3201 0
-8799 -1502 2884 3199 0
-8799 -1502 2886 3197 0
-8799 -1502 2888 3195 0
-8799 -1502 2890 3193 0
-8799 -1502 2892 3191 0
-8799 -1502 2894 3189 0
-8799 -1502 2896 3187 0
-8799 -1502 2898 3185 0
-8799 -1502 2900 3183 0
-8799 -1502 2902 3181 0
-8799 -1502 2904 3179 0
-8799 -1502 2906 3177 0
-8799 -1502 2908 3175 0
-8799 -1502 2910 3173 0
-8799 -1502 2912 3171 0
-8799 -1502 2914 3169 0
-8799 -1502 2916 3167 0
-8799 -1502 2918 3165 0
-8799 -1502 2920 3163 0
-8799 -1502 2922 3161 0
-8799 -1502 2924 3159 0
-8799 -1502 2926 3157 0
-8799 -1502 2928 3155 0
-8799 -1502 2930 3153 0
-8799 -1502 2932 3151 0
-8799 -1502 2934 3149 0
-8799 -1502 2936 3147 0
-8799 -1502 2938 3145 0
-8799 -1502 2940 3143 0
-8799 -1502 2942 3141 0
-8799 -1502 2944 3139 0
-8799 -1502 2946 3137 0
-8799 -1502 2948 3135 0
-8799 -1500 2878 3203 0
-8799 -1500 2880 3201 0
-8799 -1500 2882 3199 0
-8799 -1500 2884 3197 0
-8799 -1500 2886 3195 0
-8799 -1500 2888 3193 0
-8799 -1500 2890 3191 0
-8799 -1500 2892 3189 0
-8799 -1500 2894 3187 0
-8799 -1500 2896 3185 0
-8799 -1500 2898 3183 0
-8799 -1500 2900 3181 0
-8799 -1500 2902 3179 0
-8799 -1500 2904 3177 0
-8799 -1500 2906 3175 0
-8799 -1500 2908 3173 0
-8799 -1500 2910 3171 0
-8799 -1500 2912 3169 0
-8799 -1500 2914 3167 0
-8799 -1500 2916 3165 0
-8799 -1500 2918 3163 0
-8799 -1500 2920 3161 0
-8799 -1500 2922 3159 0
-8799 -1500 2924 3157 0
-8799 -1500 2926 3155 0
-8799 -1500 2928 3153 0
-8799 -1500 2930 3151 0
-8799 -1500 2932 3149 0
-8799 -1500 2934 3147 0
-8799 -1500 2936 3145 0
-8799 -1500 2938 3143 0
-8799 -1500 2940 3141 0
-8799 -1500 2942 3139 0
-8799 -1500 2944 3137 0
-8799 -1500 2946 3135 0
-8799 -1500 2948 3133 0
-8799 -1498 2876 3203 0
-8799 -1498 2878 3201 0
-8799 -1498 2880 3199 0
-8799 -1498 2882 3197 0
-8799 -1498 2884 3195 0
-8799 -1498 2886 3193 0
-8799 -1498 2888 3191 0
-8799 -1498 2890 3189 0
-8799 -1498 2892 3187 0
-8799 -1498 2894 3185 0
-8799 -1498 2896 3183 0
-8799 -1498 2898 3181 0
-8799 -1498 2900 3179 0
-8799 -1498 2902 3177 0
-8799 -1498 2904 3175 0
-8799 -1498 2906 3173 0
-8799 -1498 2908 3171 0
-8799 -1498 2910 3169 0
-8799 -1498 2912 3167 0
-8799 -1498 2914 3165 0
-8799 -1498 2916 3163 0
-8799 -1498 2918 3161 0
-8799 -1498 2920 3159 0
-8799 -1498 2922 3157 0
-8799 -1498 2924 3155 0
-8799 -1498 2926 3153 0
-8799 -1498 2928 3151 0
-8799 -1498 2930 3149 0
-8799 -1498 2932 3147 0
-8799 -1498 2934 3145 0
-8799 -1498 2936 3143 0
-8799 -1498 2938 3141 0
-8799 -1498 2940 3139 0
-8799 -1498 2942 3137 0
-8799 -1498 2944 3135 0
-8799 -1498 2946 3133 0
-8799 -1498 2948 3131 0
-8799 -1496 2874 3203 0
-8799 -1496 2876 3201 0
-8799 -1496 2878 3199 0
-8799 -1496 2880 3197 0
-8799 -1496 2882 3195 0
-8799 -1496 2884 3193 0
-8799 -1496 2886 3191 0
-8799 -1496 2888 3189 0
-8799 -1496 2890 3187 0
-8799 -1496 2892 3185 0
-8799 -1496 2894 3183 0
-8799 -1496 2896 3181 0
-8799 -1496 2898 3179 0
-8799 -1496 2900 3177 0
-8799 -1496 2902 3175 0
-8799 -1496 2904 3173 0
-8799 -1496 2906 3171 0
-8799 -1496 2908 3169 0
-8799 -1496 2910 3167 0
-8799 -1496 2912 3165 0
-8799 -1496 2914 3163 0
-8799 -1496 2916 3161 0
-8799 -1496 2918 3159 0
-8799 -1496 2920 3157 0
-8799 -1496 2922 3155 0
-8799 -1496 2924 3153 0
-8799 -1496 2926 3151 0
-8799 -1496 2928 3149 0
-8799 -1496 2930 3147 0
-8799 -1496 2932 3145 0
-8799 -1496 2934 3143 0
-8799 -1496 2936 3141 0
-8799 -1496 2938 3139 0
-8799 -1496 2940 3137 0
-8799 -1496 2942 3135 0
-8799 -1496 2944 3133 0
-8799 -1496 2946 3131 0
-8799 -1496 2948 3129 0
-8799 -1494 2872 3203 0
-8799 -1494 2874 3201 0
-8799 -1494 2876 3199 0
-8799 -1494 2878 3197 0
-8799 -1494 2880 3195 0
-8799 -1494 2882 3193 0
-8799 -1494 2884 3191 0
-8799 -1494 2886 3189 0
-8799 -1494 2888 3187 0
-8799 -1494 2890 3185 0
-8799 -1494 2892 3183 0
-8799 -1494 2894 3181 0
-8799 -1494 2896 3179 0
-8799 -1494 2898 3177 0
-8799 -1494 2900 3175 0
-8799 -1494 2902 3173 0
-8799 -1494 2904 3171 0
-8799 -1494 2906 3169 0
-8799 -1494 2908 3167 0
-8799 -1494 2910 3165 0
-8799 -1494 2912 3163 0
-8799 -1494 2914 3161 0
-8799 -1494 2916 3159 0
-8799 -1494 2918 3157 0
-8799 -1494 2920 3155 0
-8799 -1494 2922 3153 0
-8799 -1494 2924 3151 0
-8799 -1494 2926 3149 0
-8799 -1494 2928 3147 0
-8799 -1494 2930 3145 0
-8799 -1494 2932 3143 0
-8799 -1494 2934 3141 0
-8799 -1494 2936 3139 0
-8799 -1494 2938 3137 0
-8799 -1494 2940 3135 0
-8799 -1494 2942 3133 0
-8799 -1494 2944 3131 0
-8799 -1494 2946 3129 0
-8799 -1494 2948 3127 0
-8799 -1492 2870 3203 0
-8799 -1492 2872 3201 0
-8799 -1492 2874 3199 0
-8799 -1492 2876 3197 0
-8799 -1492 2878 3195 0
-8799 -1492 2880 3193 0
-8799 -1492 2882 3191 0
-8799 -1492 2884 3189 0
-8799 -1492 2886 3187 0
-8799 -1492 2888 3185 0
-8799 -1492 2890 3183 0
-8799 -1492 2892 3181 0
-8799 -1492 2894 3179 0
-8799 -1492 2896 3177 0
-8799 -1492 2898 3175 0
-8799 -1492 2900 3173 0
-8799 -1492 2902 3171 0
-8799 -1492 2904 3169 0
-8799 -1492 2906 3167 0
-8799 -1492 2908 3165 0
-8799 -1492 2910 3163 0
-8799 -1492 2912 3161 0
-8799 -1492 2914 3159 0
-8799 -1492 2916 3157 0
-8799 -1492 2918 3155 0
-8799 -1492 2920 3153 0
-8799 -1492 2922 3151 0
-8799 -1492 2924 3149 0
-8799 -1492 2926 3147 0
-8799 -1492 2928 3145 0
-8799 -1492 2930 3143 0
-8799 -1492 2932 3141 0
-8799 -1492 2934 3139 0
-8799 -1492 2936 3137 0
-8799 -1492 2938 3135 0
-8799 -1492 2940 3133 0
-8799 -1492 2942 3131 0
-8799 -1492 2944 3129 0
-8799 -1492 2946 3127 0
-8799 -1492 2948 3125 0
-8799 -1490 2868 3203 0
-8799 -1490 2870 3201 0
-8799 -1490 2872 3199 0
-8799 -1490 2874 3197 0
-8799 -1490 2876 3195 0
-8799 -1490 2878 3193 0
-8799 -1490 2880 3191 0
-8799 -1490 2882 3189 0
-8799 -1490 2884 3187 0
-8799 -1490 2886 3185 0
-8799 -1490 2888 3183 0
-8799 -1490 2890 3181 0
-8799 -1490 2892 3179 0
-8799 -1490 2894 3177 0
-8799 -1490 2896 3175 0
-8799 -1490 2898 3173 0
-8799 -1490 2900 3171 0
-8799 -1490 2902 3169 0
-8799 -1490 2904 3167 0
-8799 -1490 2906 3165 0
-8799 -1490 2908 3163 0
-8799 -1490 2910 3161 0
-8799 -1490 2912 3159 0
-8799 -1490 2914 3157 0
-8799 -1490 2916 3155 0
-8799 -1490 2918 3153 0
-8799 -1490 2920 3151 0
-8799 -1490 2922 3149 0
-8799 -1490 2924 3147 0
-8799 -1490 2926 3145 0
-8799 -1490 2928 3143 0
-8799 -1490 2930 3141 0
-8799 -1490 2932 3139 0
-8799 -1490 2934 3137 0
-8799 -1490 2936 3135 0
-8799 -1490 2938 3133 0
-8799 -1490 2940 3131 0
-8799 -1490 2942 3129 0
-8799 -1490 2944 3127 0
-8799 -1490 2946 3125 0
-8799 -1490 2948 3123 0
-8799 -1488 2866 3203 0
-8799 -1488 2868 3201 0
-8799 -1488 2870 3199 0
-8799 -1488 2872 3197 0
-8799 -1488 2874 3195 0
-8799 -1488 2876 3193 0
-8799 -1488 2878 3191 0
-8799 -1488 2880 3189 0
-8799 -1488 2882 3187 0
-8799 -1488 2884 3185 0
-8799 -1488 2886 3183 0
-8799 -1488 2888 3181 0
-8799 -1488 2890 3179 0
-8799 -1488 2892 3177 0
-8799 -1488 2894 3175 0
-8799 -1488 2896 3173 0
-8799 -1488 2898 3171 0
-8799 -1488 2900 3169 0
-8799 -1488 2902 3167 0
-8799 -1488 2904 3165 0
-8799 -1488 2906 3163 0
-8799 -1488 2908 3161 0
-8799 -1488 2910 3159 0
-8799 -1488 2912 3157 0
-8799 -1488 2914 3155 0
-8799 -1488 2916 3153 0
-8799 -1488 2918 3151 0
-8799 -1488 2920 3149 0
-8799 -1488 2922 3147 0
-8799 -1488 2924 3145 0
-8799 -1488 2926 3143 0
-8799 -1488 2928 3141 0
-8799 -1488 2930 3139 0
-8799 -1488 2932 3137 0
-8799 -1488 2934 3135 0
-8799 -1488 2936 3133 0
-8799 -1488 2938 3131 0
-8799 -1488 2940 3129 0
-8799 -1488 2942 3127 0
-8799 -1488 2944 3125 0
-8799 -1488 2946 3123 0
-8799 -1488 2948 3121 0
-8799 -1486 2864 3203 0
-8799 -1486 2866 3201 0
-8799 -1486 2868 3199 0
-8799 -1486 2870 3197 0
-8799 -1486 2872 3195 0
-8799 -1486 2874 3193 0
-8799 -1486 2876 3191 0
-8799 -1486 2878 3189 0
-8799 -1486 2880 3187 0
-8799 -1486 2882 3185 0
-8799 -1486 2884 3183 0
-8799 -1486 2886 3181 0
-8799 -1486 2888 3179 0
-8799 -1486 2890 3177 0
-8799 -1486 2892 3175 0
-8799 -1486 2894 3173 0
-8799 -1486 2896 3171 0
-8799 -1486 2898 3169 0
-8799 -1486 2900 3167 0
-8799 -1486 2902 3165 0
-8799 -1486 2904 3163 0
-8799 -1486 2906 3161 0
-8799 -1486 2908 3159 0
-8799 -1486 2910 3157 0
-8799 -1486 2912 3155 0
-8799 -1486 2914 3153 0
-8799 -1486 2916 3151 0
-8799 -1486 2918 3149 0
-8799 -1486 2920 3147 0
-8799 -1486 2922 3145 0
-8799 -1486 2924 3143 0
-8799 -1486 2926 3141 0
-8799 -1486 2928 3139 0
-8799 -1486 2930 3137 0
-8799 -1486 2932 3135 0
-8799 -1486 2934 3133 0
-8799 -1486 2936 3131 0
-8799 -1486 2938 3129 0
-8799 -1486 2940 3127 0
-8799 -1486 2942 3125 0
-8799 -1486 2944 3123 0
-8799 -1486 2946 3121 0
-8799 -1486 2948 3119 0
-8799 -1484 2862 3203 0
-8799 -1484 2864 3201 0
-8799 -1484 2866 3199 0
-8799 -1484 2868 3197 0
-8799 -1484 2870 3195 0
-8799 -1484 2872 3193 0
-8799 -1484 2874 3191 0
-8799 -1484 2876 3189 0
-8799 -1484 2878 3187 0
-8799 -1484 2880 3185 0
-8799 -1484 2882 3183 0
-8799 -1484 2884 3181 0
-8799 -1484 2886 3179 0
-8799 -1484 2888 3177 0
-8799 -1484 2890 3175 0
-8799 -1484 2892 3173 0
-8799 -1484 2894 3171 0
-8799 -1484 2896 3169 0
-8799 -1484 2898 3167 0
-8799 -1484 2900 3165 0
-8799 -1484 2902 3163 0
-8799 -1484 2904 3161 0
-8799 -1484 2906 3159 0
-8799 -1484 2908 3157 0
-8799 -1484 2910 3155 0
-8799 -1484 2912 3153 0
-8799 -1484 2914 3151 0
-8799 -1484 2916 3149 0
-8799 -1484 2918 3147 0
-8799 -1484 2920 3145 0
-8799 -1484 2922 3143 0
-8799 -1484 2924 3141 0
-8799 -1484 2926 3139 0
-8799 -1484 2928 3137 0
-8799 -1484 2930 3135 0
-8799 -1484 2932 3133 0
-8799 -1484 2934 3131 0
-8799 -1484 2936 3129 0
-8799 -1484 2938 3127 0
-8799 -1484 2940 3125 0
-8799 -1484 2942 3123 0
-8799 -1484 2944 3121 0
-8799 -1484 2946 3119 0
-8799 -1484 2948 3117 0
-8799 -1482 2860 3203 0
-8799 -1482 2862 3201 0
-8799 -1482 2864 3199 0
-8799 -1482 2866 3197 0
-8799 -1482 2868 3195 0
-8799 -1482 2870 3193 0
-8799 -1482 2872 3191 0
-8799 -1482 2874 3189 0
-8799 -1482 2876 3187 0
-8799 -1482 2878 3185 0
-8799 -1482 2880 3183 0
-8799 -1482 2882 3181 0
-8799 -1482 2884 3179 0
-8799 -1482 2886 3177 0
-8799 -1482 2888 3175 0
-8799 -1482 2890 3173 0
-8799 -1482 2892 3171 0
-8799 -1482 2894 3169 0
-8799 -1482 2896 3167 0
-8799 -1482 2898 3165 0
-8799 -1482 2900 3163 0
-8799 -1482 2902 3161 0
-8799 -1482 2904 3159 0
-8799 -1482 2906 3157 0
-8799 -1482 2908 3155 0
-8799 -1482 2910 3153 0
-8799 -1482 2912 3151 0
-8799 -1482 2914 3149 0
-8799 -1482 2916 3147 0
-8799 -1482 2918 3145 0
-8799 -1482 2920 3143 0
-8799 -1482 2922 3141 0
-8799 -1482 2924 3139 0
-8799 -1482 2926 3137 0
-8799 -1482 2928 3135 0
-8799 -1482 2930 3133 0
-8799 -1482 2932 3131 0
-8799 -1482 2934 3129 0
-8799 -1482 2936 3127 0
-8799 -1482 2938 3125 0
-8799 -1482 2940 3123 0
-8799 -1482 2942 3121 0
-8799 -1482 2944 3119 0
-8799 -1482 2946 3117 0
-8799 -1482 2948 3115 0
-8799 -1480 2858 3203 0
-8799 -1480 2860 3201 0
-8799 -1480 2862 3199 0
-8799 -1480 2864 3197 0
-8799 -1480 2866 3195 0
-8799 -1480 2868 3193 0
-8799 -1480 2870 3191 0
-8799 -1480 2872 3189 0
-8799 -1480 2874 3187 0
-8799 -1480 2876 3185 0
-8799 -1480 2878 3183 0
-8799 -1480 2880 3181 0
-8799 -1480 2882 3179 0
-8799 -1480 2884 3177 0
-8799 -1480 2886 3175 0
-8799 -1480 2888 3173 0
-8799 -1480 2890 3171 0
-8799 -1480 2892 3169 0
-8799 -1480 2894 3167 0
-8799 -1480 2896 3165 0
-8799 -1480 2898 3163 0
-8799 -1480 2900 3161 0
-8799 -1480 2902 3159 0
-8799 -1480 2904 3157 0
-8799 -1480 2906 3155 0
-8799 -1480 2908 3153 0
-8799 -1480 2910 3151 0
-8799 -1480 2912 3149 0
-8799 -1480 2914 3147 0
-8799 -1480 2916 3145 0
-8799 -1480 2918 3143 0
-8799 -1480 2920 3141 0
-8799 -1480 2922 3139 0
-8799 -1480 2924 3137 0
-8799 -1480 2926 3135 0
-8799 -1480 2928 3133 0
-8799 -1480 2930 3131 0
-8799 -1480 2932 3129 0
-8799 -1480 2934 3127 0
-8799 -1480 2936 3125 0
-8799 -1480 2938 3123 0
-8799 -1480 2940 3121 0
-8799 -1480 2942 3119 0
-8799 -1480 2944 3117 0
-8799 -1480 2946 3115 0
-8799 -1480 2948 3113 0
-8799 -1478 2856 3203 0
-8799 -1478 2858 3201 0
-8799 -1478 2860 3199 0
-8799 -1478 2862 3197 0
-8799 -1478 2864 3195 0
-8799 -1478 2866 3193 0
-8799 -1478 2868 3191 0
-8799 -1478 2870 3189 0
-8799 -1478 2872 3187 0
-8799 -1478 2874 3185 0
-8799 -1478 2876 3183 0
-8799 -1478 2878 3181 0
-8799 -1478 2880 3179 0
-8799 -1478 2882 3177 0
-8799 -1478 2884 3175 0
-8799 -1478 2886 3173 0
-8799 -1478 2888 3171 0
-8799 -1478 2890 3169 0
-8799 -1478 2892 3167 0
-8799 -1478 2894 3165 0
-8799 -1478 2896 3163 0
-8799 -1478 2898 3161 0
-8799 -1478 2900 3159 0
-8799 -1478 2902 3157 0
-8799 -1478 2904 3155 0
-8799 -1478 2906 3153 0
-8799 -1478 2908 3151 0
-8799 -1478 2910 3149 0
-8799 -1478 2912 3147 0
-8799 -1478 2914 3145 0
-8799 -1478 2916 3143 0
-8799 -1478 2918 3141 0
-8799 -1478 2920 3139 0
-8799 -1478 2922 3137 0
-8799 -1478 2924 3135 0
-8799 -1478 2926 3133 0
-8799 -1478 2928 3131 0
-8799 -1478 2930 3129 0
-8799 -1478 2932 3127 0
-8799 -1478 2934 3125 0
-8799 -1478 2936 3123 0
-8799 -1478 2938 3121 0
-8799 -1478 2940 3119 0
-8799 -1478 2942 3117 0
-8799 -1478 2944 3115 0
-8799 -1478 2946 3113 0
-8799 -1478 2948 3111 0
-8799 -1476 2854 3203 0
-8799 -1476 2856 3201 0
-8799 -1476 2858 3199 0
-8799 -1476 2860 3197 0
-8799 -1476 2862 3195 0
-8799 -1476 2864 3193 0
-8799 -1476 2866 3191 0
-8799 -1476 2868 3189 0
-8799 -1476 2870 3187 0
-8799 -1476 2872 3185 0
-8799 -1476 2874 3183 0
-8799 -1476 2876 3181 0
-8799 -1476 2878 3179 0
-8799 -1476 2880 3177 0
-8799 -1476 2882 3175 0
-8799 -1476 2884 3173 0
-8799 -1476 2886 3171 0
-8799 -1476 2888 3169 0
-8799 -1476 2890 3167 0
-8799 -1476 2892 3165 0
-8799 -1476 2894 3163 0
-8799 -1476 2896 3161 0
-8799 -1476 2898 3159 0
-8799 -1476 2900 3157 0
-8799 -1476 2902 3155 0
-8799 -1476 2904 3153 0
-8799 -1476 2906 3151 0
-8799 -1476 2908 3149 0
-8799 -1476 2910 3147 0
-8799 -1476 2912 3145 0
-8799 -1476 2914 3143 0
-8799 -1476 2916 3141 0
-8799 -1476 2918 3139 0
-8799 -1476 2920 3137 0
-8799 -1476 2922 3135 0
-8799 -1476 2924 3133 0
-8799 -1476 2926 3131 0
-8799 -1476 2928 3129 0
-8799 -1476 2930 3127 0
-8799 -1476 2932 3125 0
-8799 -1476 2934 3123 0
-8799 -1476 2936 3121 0
-8799 -1476 2938 3119 0
-8799 -1476 2940 3117 0
-8799 -1476 2942 3115 0
-8799 -1476 2944 3113 0
-8799 -1476 2946 3111 0
-8799 -1476 2948 3109 0
-8799 -1474 2852 3203 0
-8799 -1474 2854 3201 0
-8799 -1474 2856 3199 0
-8799 -1474 2858 3197 0
-8799 -1474 2860 3195 0
-8799 -1474 2862 3193 0
-8799 -1474 2864 3191 0
-8799 -1474 2866 3189 0
-8799 -1474 2868 3187 0
-8799 -1474 2870 3185 0
-8799 -1474 2872 3183 0
-8799 -1474 2874 3181 0
-8799 -1474 2876 3179 0
-8799 -1474 2878 3177 0
-8799 -1474 2880 3175 0
-8799 -1474 2882 3173 0
-8799 -1474 2884 3171 0
-8799 -1474 2886 3169 0
-8799 -1474 2888 3167 0
-8799 -1474 2890 3165 0
-8799 -1474 2892 3163 0
-8799 -1474 2894 3161 0
-8799 -1474 2896 3159 0
-8799 -1474 2898 3157 0
-8799 -1474 2900 3155 0
-8799 -1474 2902 3153 0
-8799 -1474 2904 3151 0
-8799 -1474 2906 3149 0
-8799 -1474 2908 3147 0
-8799 -1474 2910 3145 0
-8799 -1474 2912 3143 0
-8799 -1474 2914 3141 0
-8799 -1474 2916 3139 0
-8799 -1474 2918 3137 0
-8799 -1474 2920 3135 0
-8799 -1474 2922 3133 0
-8799 -1474 2924 3131 0
-8799 -1474 2926 3129 0
-8799 -1474 2928 3127 0
-8799 -1474 2930 3125 0
-8799 -1474 2932 3123 0
-8799 -1474 2934 3121 0
-8799 -1474 2936 3119 0
-8799 -1474 2938 3117 0
-8799 -1474 2940 3115 0
-8799 -1474 2942 3113 0
-8799 -1474 2944 3111 0
-8799 -1474 2946 3109 0
-8799 -1474 2948 3107 0
-8799 -1472 2850 3203 0
-8799 -1472 2852 3201 0
-8799 -1472 2854 3199 0
-8799 -1472 2856 3197 0
-8799 -1472 2858 3195 0
-8799 -1472 2860 3193 0
-8799 -1472 2862 3191 0
-8799 -1472 2864 3189 0
-8799 -1472 2866 3187 0
-8799 -1472 2868 3185 0
-8799 -1472 2870 3183 0
-8799 -1472 2872 3181 0
-8799 -1472 2874 3179 0
-8799 -1472 2876 3177 0
-8799 -1472 2878 3175 0
-8799 -1472 2880 3173 0
-8799 -1472 2882 3171 0
-8799 -1472 2884 3169 0
-8799 -1472 2886 3167 0
-8799 -1472 2888 3165 0
-8799 -1472 2890 3163 0
-8799 -1472 2892 3161 0
-8799 -1472 2894 3159 0
-8799 -1472 2896 3157 0
-8799 -1472 2898 3155 0
-8799 -1472 2900 3153 0
-8799 -1472 2902 3151 0
-8799 -1472 2904 3149 0
-8799 -1472 2906 3147 0
-8799 -1472 2908 3145 0
-8799 -1472 2910 3143 0
-8799 -1472 2912 3141 0
-8799 -1472 2914 3139 0
-8799 -1472 2916 3137 0
-8799 -1472 2918 3135 0
-8799 -1472 2920 3133 0
-8799 -1472 2922 3131 0
-8799 -1472 2924 3129 0
-8799 -1472 2926 3127 0
-8799 -1472 2928 3125 0
-8799 -1472 2930 3123 0
-8799 -1472 2932 3121 0
-8799 -1472 2934 3119 0
-8799 -1472 2936 3117 0
-8799 -1472 2938 3115 0
-8799 -1472 2940 3113 0
-8799 -1472 2942 3111 0
-8799 -1472 2944 3109 0
-8799 -1472 2946 3107 0
-8799 -1472 2948 3105 0
-8799 -1470 2848 3203 0
-8799 -1470 2850 3201 0
-8799 -1470 2852 3199 0
-8799 -1470 2854 3197 0
-8799 -1470 2856 3195 0
-8799 -1470 2858 3193 0
-8799 -1470 2860 3191 0
-8799 -1470 2862 3189 0
-8799 -1470 2864 3187 0
-8799 -1470 2866 3185 0
-8799 -1470 2868 3183 0
-8799 -1470 2870 3181 0
-8799 -1470 2872 3179 0
-8799 -1470 2874 3177 0
-8799 -1470 2876 3175 0
-8799 -1470 2878 3173 0
-8799 -1470 2880 3171 0
-8799 -1470 2882 3169 0
-8799 -1470 2884 3167 0
-8799 -1470 2886 3165 0
-8799 -1470 2888 3163 0
-8799 -1470 2890 3161 0
-8799 -1470 2892 3159 0
-8799 -1470 2894 3157 0
-8799 -1470 2896 3155 0
-8799 -1470 2898 3153 0
-8799 -1470 2900 3151 0
-8799 -1470 2902 3149 0
-8799 -1470 2904 3147 0
-8799 -1470 2906 3145 0
-8799 -1470 2908 3143 0
-8799 -1470 2910 3141 0
-8799 -1470 2912 3139 0
-8799 -1470 2914 3137 0
-8799 -1470 2916 3135 0
-8799 -1470 2918 3133 0
-8799 -1470 2920 3131 0
-8799 -1470 2922 3129 0
-8799 -1470 2924 3127 0
-8799 -1470 2926 3125 0
-8799 -1470 2928 3123 0
-8799 -1470 2930 3121 0
-8799 -1470 2932 3119 0
-8799 -1470 2934 3117 0
-8799 -1470 2936 3115 0
-8799 -1470 2938 3113 0
-8799 -1470 2940 3111 0
-8799 -1470 2942 3109 0
-8799 -1470 2944 3107 0
-8799 -1470 2946 3105 0
-8799 -1470 2948 3103 0
-8799 -1468 2846 3203 0
-8799 -1468 2848 3201 0
-8799 -1468 2850 3199 0
-8799 -1468 2852 3197 0
-8799 -1468 2854 3195 0
-8799 -1468 2856 3193 0
-8799 -1468 2858 3191 0
-8799 -1468 2860 3189 0
-8799 -1468 2862 3187 0
-8799 -1468 2864 3185 0
-8799 -1468 2866 3183 0
-8799 -1468 2868 3181 0
-8799 -1468 2870 3179 0
-8799 -1468 2872 3177 0
-8799 -1468 2874 3175 0
-8799 -1468 2876 3173 0
-8799 -1468 2878 3171 0
-8799 -1468 2880 3169 0
-8799 -1468 2882 3167 0
-8799 -1468 2884 3165 0
-8799 -1468 2886 3163 0
-8799 -1468 2888 3161 0
-8799 -1468 2890 3159 0
-8799 -1468 2892 3157 0
-8799 -1468 2894 3155 0
-8799 -1468 2896 3153 0
-8799 -1468 2898 3151 0
-8799 -1468 2900 3149 0
-8799 -1468 2902 3147 0
-8799 -1468 2904 3145 0
-8799 -1468 2906 3143 0
-8799 -1468 2908 3141 0
-8799 -1468 2910 3139 0
-8799 -1468 2912 3137 0
-8799 -1468 2914 3135 0
-8799 -1468 2916 3133 0
-8799 -1468 2918 3131 0
-8799 -1468 2920 3129 0
-8799 -1468 2922 3127 0
-8799 -1468 2924 3125 0
-8799 -1468 2926 3123 0
-8799 -1468 2928 3121 0
-8799 -1468 2930 3119 0
-8799 -1468 2932 3117 0
-8799 -1468 2934 3115 0
-8799 -1468 2936 3113 0
-8799 -1468 2938 3111 0
-8799 -1468 2940 3109 0
-8799 -1468 2942 3107 0
-8799 -1468 2944 3105 0
-8799 -1468 2946 3103 0
-8799 -1468 2948 3101 0
-8799 -1466 2844 3203 0
-8799 -1466 2846 3201 0
-8799 -1466 2848 3199 0
-8799 -1466 2850 3197 0
-8799 -1466 2852 3195 0
-8799 -1466 2854 3193 0
-8799 -1466 2856 3191 0
-8799 -1466 2858 3189 0
-8799 -1466 2860 3187 0
-8799 -1466 2862 3185 0
-8799 -1466 2864 3183 0
-8799 -1466 2866 3181 0
-8799 -1466 2868 3179 0
-8799 -1466 2870 3177 0
-8799 -1466 2872 3175 0
-8799 -1466 2874 3173 0
-8799 -1466 2876 3171 0
-8799 -1466 2878 3169 0
-8799 -1466 2880 3167 0
-8799 -1466 2882 3165 0
-8799 -1466 2884 3163 0
-8799 -1466 2886 3161 0
-8799 -1466 2888 3159 0
-8799 -1466 2890 3157 0
-8799 -1466 2892 3155 0
-8799 -1466 2894 3153 0
-8799 -1466 2896 3151 0
-8799 -1466 2898 3149 0
-8799 -1466 2900 3147 0
-8799 -1466 2902 3145 0
-8799 -1466 2904 3143 0
-8799 -1466 2906 3141 0
-8799 -1466 2908 3139 0
-8799 -1466 2910 3137 0
-8799 -1466 2912 3135 0
-8799 -1466 2914 3133 0
-8799 -1466 2916 3131 0
-8799 -1466 2918 3129 0
-8799 -1466 2920 3127 0
-8799 -1466 2922 3125 0
-8799 -1466 2924 3123 0
-8799 -1466 2926 3121 0
-8799 -1466 2928 3119 0
-8799 -1466 2930 3117 0
-8799 -1466 2932 3115 0
-8799 -1466 2934 3113 0
-8799 -1466 2936 3111 0
-8799 -1466 2938 3109 0
-8799 -1466 2940 3107 0
-8799 -1466 2942 3105 0
-8799 -1466 2944 3103 0
-8799 -1466 2946 3101 0
-8799 -1466 2948 3099 0
-8799 -1464 2842 3203 0
-8799 -1464 2844 3201 0
-8799 -1464 2846 3199 0
-8799 -1464 2848 3197 0
-8799 -1464 2850 3195 0
-8799 -1464 2852 3193 0
-8799 -1464 2854 3191 0
-8799 -1464 2856 3189 0
-8799 -1464 2858 3187 0
-8799 -1464 2860 3185 0
-8799 -1464 2862 3183 0
-8799 -1464 2864 3181 0
-8799 -1464 2866 3179 0
-8799 -1464 2868 3177 0
-8799 -1464 2870 3175 0
-8799 -1464 2872 3173 0
-8799 -1464 2874 3171 0
-8799 -1464 2876 3169 0
-8799 -1464 2878 3167 0
-8799 -1464 2880 3165 0
-8799 -1464 2882 3163 0
-8799 -1464 2884 3161 0
-8799 -1464 2886 3159 0
-8799 -1464 2888 3157 0
-8799 -1464 2890 3155 0
-8799 -1464 2892 3153 0
-8799 -1464 2894 3151 0
-8799 -1464 2896 3149 0
-8799 -1464 2898 3147 0
-8799 -1464 2900 3145 0
-8799 -1464 2902 3143 0
-8799 -1464 2904 3141 0
-8799 -1464 2906 3139 0
-8799 -1464 2908 3137 0
-8799 -1464 2910 3135 0
-8799 -1464 2912 3133 0
-8799 -1464 2914 3131 0
-8799 -1464 2916 3129 0
-8799 -1464 2918 3127 0
-8799 -1464 2920 3125 0
-8799 -1464 2922 3123 0
-8799 -1464 2924 3121 0
-8799 -1464 2926 3119 0
-8799 -1464 2928 3117 0
-8799 -1464 2930 3115 0
-8799 -1464 2932 3113 0
-8799 -1464 2934 3111 0
-8799 -1464 2936 3109 0
-8799 -1464 2938 3107 0
-8799 -1464 2940 3105 0
-8799 -1464 2942 3103 0
-8799 -1464 2944 3101 0
-8799 -1464 2946 3099 0
-8799 -1464 2948 3097 0
-8799 -1462 2840 3203 0
-8799 -1462 2842 3201 0
-8799 -1462 2844 3199 0
-8799 -1462 2846 3197 0
-8799 -1462 2848 3195 0
-8799 -1462 2850 3193 0
-8799 -1462 2852 3191 0
-8799 -1462 2854 3189 0
-8799 -1462 2856 3187 0
-8799 -1462 2858 3185 0
-8799 -1462 2860 3183 0
-8799 -1462 2862 3181 0
-8799 -1462 2864 3179 0
-8799 -1462 2866 3177 0
-8799 -1462 2868 3175 0
-8799 -1462 2870 3173 0
-8799 -1462 2872 3171 0
-8799 -1462 2874 3169 0
-8799 -1462 2876 3167 0
-8799 -1462 2878 3165 0
-8799 -1462 2880 3163 0
-8799 -1462 2882 3161 0
-8799 -1462 2884 3159 0
-8799 -1462 2886 3157 0
-8799 -1462 2888 3155 0
-8799 -1462 2890 3153 0
-8799 -1462 2892 3151 0
-8799 -1462 2894 3149 0
-8799 -1462 2896 3147 0
-8799 -1462 2898 3145 0
-8799 -1462 2900 3143 0
-8799 -1462 2902 3141 0
-8799 -1462 2904 3139 0
-8799 -1462 2906 3137 0
-8799 -1462 2908 3135 0
-8799 -1462 2910 3133 0
-8799 -1462 2912 3131 0
-8799 -1462 2914 3129 0
-8799 -1462 2916 3127 0
-8799 -1462 2918 3125 0
-8799 -1462 2920 3123 0
-8799 -1462 2922 3121 0
-8799 -1462 2924 3119 0
-8799 -1462 2926 3117 0
-8799 -1462 2928 3115 0
-8799 -1462 2930 3113 0
-8799 -1462 2932 3111 0
-8799 -1462 2934 3109 0
-8799 -1462 2936 3107 0
-8799 -1462 2938 3105 0
-8799 -1462 2940 3103 0
-8799 -1462 2942 3101 0
-8799 -1462 2944 3099 0
-8799 -1462 2946 3097 0
-8799 -1462 2948 3095 0
-8799 -1460 2838 3203 0
-8799 -1460 2840 3201 0
-8799 -1460 2842 3199 0
-8799 -1460 2844 3197 0
-8799 -1460 2846 3195 0
-8799 -1460 2848 3193 0
-8799 -1460 2850 3191 0
-8799 -1460 2852 3189 0
-8799 -1460 2854 3187 0
-8799 -1460 2856 3185 0
-8799 -1460 2858 3183 0
-8799 -1460 2860 3181 0
-8799 -1460 2862 3179 0
-8799 -1460 2864 3177 0
-8799 -1460 2866 3175 0
-8799 -1460 2868 3173 0
-8799 -1460 2870 3171 0
-8799 -1460 2872 3169 0
-8799 -1460 2874 3167 0
-8799 -1460 2876 3165 0
-8799 -1460 2878 3163 0
-8799 -1460 2880 3161 0
-8799 -1460 2882 3159 0
-8799 -1460 2884 3157 0
-8799 -1460 2886 3155 0
-8799 -1460 2888 3153 0
-8799 -1460 2890 3151 0
-8799 -1460 2892 3149 0
-8799 -1460 2894 3147 0
-8799 -1460 2896 3145 0
-8799 -1460 2898 3143 0
-8799 -1460 2900 3141 0
-8799 -1460 2902 3139 0
-8799 -1460 2904 3137 0
-8799 -1460 2906 3135 0
-8799 -1460 2908 3133 0
-8799 -1460 2910 3131 0
-8799 -1460 2912 3129 0
-8799 -1460 2914 3127 0
-8799 -1460 2916 3125 0
-8799 -1460 2918 3123 0
-8799 -1460 2920 3121 0
-8799 -1460 2922 3119 0
-8799 -1460 2924 3117 0
-8799 -1460 2926 3115 0
-8799 -1460 2928 3113 0
-8799 -1460 2930 3111 0
-8799 -1460 2932 3109 0
-8799 -1460 2934 3107 0
-8799 -1460 2936 3105 0
-8799 -1460 2938 3103 0
-8799 -1460 2940 3101 0
-8799 -1460 2942 3099 0
-8799 -1460 2944 3097 0
-8799 -1460 2946 3095 0
-8799 -1460 2948 3093 0
-8799 -1458 2836 3203 0
-8799 -1458 2838 3201 0
-8799 -1458 2840 3199 0
-8799 -1458 2842 3197 0
-8799 -1458 2844 3195 0
-8799 -1458 2846 3193 0
-8799 -1458 2848 3191 0
-8799 -1458 2850 3189 0
-8799 -1458 2852 3187 0
-8799 -1458 2854 3185 0
-8799 -1458 2856 3183 0
-8799 -1458 2858 3181 0
-8799 -1458 2860 3179 0
-8799 -1458 2862 3177 0
-8799 -1458 2864 3175 0
-8799 -1458 2866 3173 0
-8799 -1458 2868 3171 0
-8799 -1458 2870 3169 0
-8799 -1458 2872 3167 0
-8799 -1458 2874 3165 0
-8799 -1458 2876 3163 0
-8799 -1458 2878 3161 0
-8799 -1458 2880 3159 0
-8799 -1458 2882 3157 0
-8799 -1458 2884 3155 0
-8799 -1458 2886 3153 0
-8799 -1458 2888 3151 0
-8799 -1458 2890 3149 0
-8799 -1458 2892 3147 0
-8799 -1458 2894 3145 0
-8799 -1458 2896 3143 0
-8799 -1458 2898 3141 0
-8799 -1458 2900 3139 0
-8799 -1458 2902 3137 0
-8799 -1458 2904 3135 0
-8799 -1458 2906 3133 0
-8799 -1458 2908 3131 0
-8799 -1458 2910 3129 0
-8799 -1458 2912 3127 0
-8799 -1458 2914 3125 0
-8799 -1458 2916 3123 0
-8799 -1458 2918 3121 0
-8799 -1458 2920 3119 0
-8799 -1458 2922 3117 0
-8799 -1458 2924 3115 0
-8799 -1458 2926 3113 0
-8799 -1458 2928 3111 0
-8799 -1458 2930 3109 0
-8799 -1458 2932 3107 0
-8799 -1458 2934 3105 0
-8799 -1458 2936 3103 0
-8799 -1458 2938 3101 0
-8799 -1458 2940 3099 0
-8799 -1458 2942 3097 0
-8799 -1458 2944 3095 0
-8799 -1458 2946 3093 0
-8799 -1458 2948 3091 0
-8799 -1456 2834 3203 0
-8799 -1456 2836 3201 0
-8799 -1456 2838 3199 0
-8799 -1456 2840 3197 0
-8799 -1456 2842 3195 0
-8799 -1456 2844 3193 0
-8799 -1456 2846 3191 0
-8799 -1456 2848 3189 0
-8799 -1456 2850 3187 0
-8799 -1456 2852 3185 0
-8799 -1456 2854 3183 0
-8799 -1456 2856 3181 0
-8799 -1456 2858 3179 0
-8799 -1456 2860 3177 0
-8799 -1456 2862 3175 0
-8799 -1456 2864 3173 0
-8799 -1456 2866 3171 0
-8799 -1456 2868 3169 0
-8799 -1456 2870 3167 0
-8799 -1456 2872 3165 0
-8799 -1456 2874 3163 0
-8799 -1456 2876 3161 0
-8799 -1456 2878 3159 0
-8799 -1456 2880 3157 0
-8799 -1456 2882 3155 0
-8799 -1456 2884 3153 0
-8799 -1456 2886 3151 0
-8799 -1456 2888 3149 0
-8799 -1456 2890 3147 0
-8799 -1456 2892 3145 0
-8799 -1456 2894 3143 0
-8799 -1456 2896 3141 0
-8799 -1456 2898 3139 0
-8799 -1456 2900 3137 0
-8799 -1456 2902 3135 0
-8799 -1456 2904 3133 0
-8799 -1456 2906 3131 0
-8799 -1456 2908 3129 0
-8799 -1456 2910 3127 0
-8799 -1456 2912 3125 0
-8799 -1456 2914 3123 0
-8799 -1456 2916 3121 0
-8799 -1456 2918 3119 0
-8799 -1456 2920 3117 0
-8799 -1456 2922 3115 0
-8799 -1456 2924 3113 0
-8799 -1456 2926 3111 0
-8799 -1456 2928 3109 0
-8799 -1456 2930 3107 0
-8799 -1456 2932 3105 0
-8799 -1456 2934 3103 0
-8799 -1456 2936 3101 0
-8799 -1456 2938 3099 0
-8799 -1456 2940 3097 0
-8799 -1456 2942 3095 0
-8799 -1456 2944 3093 0
-8799 -1456 2946 3091 0
-8799 -1456 2948 3089 0
-8799 -1454 2832 3203 0
-8799 -1454 2834 3201 0
-8799 -1454 2836 3199 0
-8799 -1454 2838 3197 0
-8799 -1454 2840 3195 0
-8799 -1454 2842 3193 0
-8799 -1454 2844 3191 0
-8799 -1454 2846 3189 0
-8799 -1454 2848 3187 0
-8799 -1454 2850 3185 0
-8799 -1454 2852 3183 0
-8799 -1454 2854 3181 0
-8799 -1454 2856 3179 0
-8799 -1454 2858 3177 0
-8799 -1454 2860 3175 0
-8799 -1454 2862 3173 0
-8799 -1454 2864 3171 0
-8799 -1454 2866 3169 0
-8799 -1454 2868 3167 0
-8799 -1454 2870 3165 0
-8799 -1454 2872 3163 0
-8799 -1454 2874 3161 0
-8799 -1454 2876 3159 0
-8799 -1454 2878 3157 0
-8799 -1454 2880 3155 0
-8799 -1454 2882 3153 0
-8799 -1454 2884 3151 0
-8799 -1454 2886 3149 0
-8799 -1454 2888 3147 0
-8799 -1454 2890 3145 0
-8799 -1454 2892 3143 0
-8799 -1454 2894 3141 0
-8799 -1454 2896 3139 0
-8799 -1454 2898 3137 0
-8799 -1454 2900 3135 0
-8799 -1454 2902 3133 0
-8799 -1454 2904 3131 0
-8799 -1454 2906 3129 0
-8799 -1454 2908 3127 0
-8799 -1454 2910 3125 0
-8799 -1454 2912 3123 0
-8799 -1454 2914 3121 0
-8799 -1454 2916 3119 0
-8799 -1454 2918 3117 0
-8799 -1454 2920 3115 0
-8799 -1454 2922 3113 0
-8799 -1454 2924 3111 0
-8799 -1454 2926 3109 0
-8799 -1454 2928 3107 0
-8799 -1454 2930 3105 0
-8799 -1454 2932 3103 0
-8799 -1454 2934 3101 0
-8799 -1454 2936 3099 0
-8799 -1454 2938 3097 0
-8799 -1454 2940 3095 0
-8799 -1454 2942 3093 0
-8799 -1454 2944 3091 0
-8799 -1454 2946 3089 0
-8799 -1454 2948 3087 0
-8799 -1452 2830 3203 0
-8799 -1452 2832 3201 0
-8799 -1452 2834 3199 0
-8799 -1452 2836 3197 0
-8799 -1452 2838 3195 0
-8799 -1452 2840 3193 0
-8799 -1452 2842 3191 0
-8799 -1452 2844 3189 0
-8799 -1452 2846 3187 0
-8799 -1452 2848 3185 0
-8799 -1452 2850 3183 0
-8799 -1452 2852 3181 0
-8799 -1452 2854 3179 0
-8799 -1452 2856 3177 0
-8799 -1452 2858 3175 0
-8799 -1452 2860 3173 0
-8799 -1452 2862 3171 0
-8799 -1452 2864 3169 0
-8799 -1452 2866 3167 0
-8799 -1452 2868 3165 0
-8799 -1452 2870 3163 0
-8799 -1452 2872 3161 0
-8799 -1452 2874 3159 0
-8799 -1452 2876 3157 0
-8799 -1452 2878 3155 0
-8799 -1452 2880 3153 0
-8799 -1452 2882 3151 0
-8799 -1452 2884 3149 0
-8799 -1452 2886 3147 0
-8799 -1452 2888 3145 0
-8799 -1452 2890 3143 0
-8799 -1452 2892 3141 0
-8799 -1452 2894 3139 0
-8799 -1452 2896 3137 0
-8799 -1452 2898 3135 0
-8799 -1452 2900 3133 0
-8799 -1452 2902 3131 0
-8799 -1452 2904 3129 0
-8799 -1452 2906 3127 0
-8799 -1452 2908 3125 0
-8799 -1452 2910 3123 0
-8799 -1452 2912 3121 0
-8799 -1452 2914 3119 0
-8799 -1452 2916 3117 0
-8799 -1452 2918 3115 0
-8799 -1452 2920 3113 0
-8799 -1452 2922 3111 0
-8799 -1452 2924 3109 0
-8799 -1452 2926 3107 0
-8799 -1452 2928 3105 0
-8799 -1452 2930 3103 0
-8799 -1452 2932 3101 0
-8799 -1452 2934 3099 0
-8799 -1452 2936 3097 0
-8799 -1452 2938 3095 0
-8799 -1452 2940 3093 0
-8799 -1452 2942 3091 0
-8799 -1452 2944 3089 0
-8799 -1452 2946 3087 0
-8799 -1452 2948 3085 0
-8799 -1450 2828 3203 0
-8799 -1450 2830 3201 0
-8799 -1450 2832 3199 0
-8799 -1450 2834 3197 0
-8799 -1450 2836 3195 0
-8799 -1450 2838 3193 0
-8799 -1450 2840 3191 0
-8799 -1450 2842 3189 0
-8799 -1450 2844 3187 0
-8799 -1450 2846 3185 0
-8799 -1450 2848 3183 0
-8799 -1450 2850 3181 0
-8799 -1450 2852 3179 0
-8799 -1450 2854 3177 0
-8799 -1450 2856 3175 0
-8799 -1450 2858 3173 0
-8799 -1450 2860 3171 0
-8799 -1450 2862 3169 0
-8799 -1450 2864 3167 0
-8799 -1450 2866 3165 0
-8799 -1450 2868 3163 0
-8799 -1450 2870 3161 0
-8799 -1450 2872 3159 0
-8799 -1450 2874 3157 0
-8799 -1450 2876 3155 0
-8799 -1450 2878 3153 0
-8799 -1450 2880 3151 0
-8799 -1450 2882 3149 0
-8799 -1450 2884 3147 0
-8799 -1450 2886 3145 0
-8799 -1450 2888 3143 0
-8799 -1450 2890 3141 0
-8799 -1450 2892 3139 0
-8799 -1450 2894 3137 0
-8799 -1450 2896 3135 0
-8799 -1450 2898 3133 0
-8799 -1450 2900 3131 0
-8799 -1450 2902 3129 0
-8799 -1450 2904 3127 0
-8799 -1450 2906 3125 0
-8799 -1450 2908 3123 0
-8799 -1450 2910 3121 0
-8799 -1450 2912 3119 0
-8799 -1450 2914 3117 0
-8799 -1450 2916 3115 0
-8799 -1450 2918 3113 0
-8799 -1450 2920 3111 0
-8799 -1450 2922 3109 0
-8799 -1450 2924 3107 0
-8799 -1450 2926 3105 0
-8799 -1450 2928 3103 0
-8799 -1450 2930 3101 0
-8799 -1450 2932 3099 0
-8799 -1450 2934 3097 0
-8799 -1450 2936 3095 0
-8799 -1450 2938 3093 0
-8799 -1450 2940 3091 0
-8799 -1450 2942 3089 0
-8799 -1450 2944 3087 0
-8799 -1450 2946 3085 0
-8799 -1450 2948 3083 0
-8799 -1448 2826 3203 0
-8799 -1448 2828 3201 0
-8799 -1448 2830 3199 0
-8799 -1448 2832 3197 0
-8799 -1448 2834 3195 0
-8799 -1448 2836 3193 0
-8799 -1448 2838 3191 0
-8799 -1448 2840 3189 0
-8799 -1448 2842 3187 0
-8799 -1448 2844 3185 0
-8799 -1448 2846 3183 0
-8799 -1448 2848 3181 0
-8799 -1448 2850 3179 0
-8799 -1448 2852 3177 0
-8799 -1448 2854 3175 0
-8799 -1448 2856 3173 0
-8799 -1448 2858 3171 0
-8799 -1448 2860 3169 0
-8799 -1448 2862 3167 0
-8799 -1448 2864 3165 0
-8799 -1448 2866 3163 0
-8799 -1448 2868 3161 0
-8799 -1448 2870 3159 0
-8799 -1448 2872 3157 0
-8799 -1448 2874 3155 0
-8799 -1448 2876 3153 0
-8799 -1448 2878 3151 0
-8799 -1448 2880 3149 0
-8799 -1448 2882 3147 0
-8799 -1448 2884 3145 0
-8799 -1448 2886 3143 0
-8799 -1448 2888 3141 0
-8799 -1448 2890 3139 0
-8799 -1448 2892 3137 0
-8799 -1448 2894 3135 0
-8799 -1448 2896 3133 0
-8799 -1448 2898 3131 0
-8799 -1448 2900 3129 0
-8799 -1448 2902 3127 0
-8799 -1448 2904 3125 0
-8799 -1448 2906 3123 0
-8799 -1448 2908 3121 0
-8799 -1448 2910 3119 0
-8799 -1448 2912 3117 0
-8799 -1448 2914 3115 0
-8799 -1448 2916 3113 0
-8799 -1448 2918 3111 0
-8799 -1448 2920 3109 0
-8799 -1448 2922 3107 0
-8799 -1448 2924 3105 0
-8799 -1448 2926 3103 0
-8799 -1448 2928 3101 0
-8799 -1448 2930 3099 0
-8799 -1448 2932 3097 0
-8799 -1448 2934 3095 0
-8799 -1448 2936 3093 0
-8799 -1448 2938 3091 0
-8799 -1448 2940 3089 0
-8799 -1448 2942 3087 0
-8799 -1448 2944 3085 0
-8799 -1448 2946 3083 0
-8799 -1448 2948 3081 0
-8799 -1446 2824 3203 0
-8799 -1446 2826 3201 0
-8799 -1446 2828 3199 0
-8799 -1446 2830 3197 0
-8799 -1446 2832 3195 0
-8799 -1446 2834 3193 0
-8799 -1446 2836 3191 0
-8799 -1446 2838 3189 0
-8799 -1446 2840 3187 0
-8799 -1446 2842 3185 0
-8799 -1446 2844 3183 0
-8799 -1446 2846 3181 0
-8799 -1446 2848 3179 0
-8799 -1446 2850 3177 0
-8799 -1446 2852 3175 0
-8799 -1446 2854 3173 0
-8799 -1446 2856 3171 0
-8799 -1446 2858 3169 0
-8799 -1446 2860 3167 0
-8799 -1446 2862 3165 0
-8799 -1446 2864 3163 0
-8799 -1446 2866 3161 0
-8799 -1446 2868 3159 0
-8799 -1446 2870 3157 0
-8799 -1446 2872 3155 0
-8799 -1446 2874 3153 0
-8799 -1446 2876 3151 0
-8799 -1446 2878 3149 0
-8799 -1446 2880 3147 0
-8799 -1446 2882 3145 0
-8799 -1446 2884 3143 0
-8799 -1446 2886 3141 0
-8799 -1446 2888 3139 0
-8799 -1446 2890 3137 0
-8799 -1446 2892 3135 0
-8799 -1446 2894 3133 0
-8799 -1446 2896 3131 0
-8799 -1446 2898 3129 0
-8799 -1446 2900 3127 0
-8799 -1446 2902 3125 0
-8799 -1446 2904 3123 0
-8799 -1446 2906 3121 0
-8799 -1446 2908 3119 0
-8799 -1446 2910 3117 0
-8799 -1446 2912 3115 0
-8799 -1446 2914 3113 0
-8799 -1446 2916 3111 0
-8799 -1446 2918 3109 0
-8799 -1446 2920 3107 0
-8799 -1446 2922 3105 0
-8799 -1446 2924 3103 0
-8799 -1446 2926 3101 0
-8799 -1446 2928 3099 0
-8799 -1446 2930 3097 0
-8799 -1446 2932 3095 0
-8799 -1446 2934 3093 0
-8799 -1446 2936 3091 0
-8799 -1446 2938 3089 0
-8799 -1446 2940 3087 0
-8799 -1446 2942 3085 0
-8799 -1446 2944 3083 0
-8799 -1446 2946 3081 0
-8799 -1446 2948 3079 0
-8799 -1445 2822 3203 0
-8799 -1445 2824 3201 0
-8799 -1445 2826 3199 0
-8799 -1445 2828 3197 0
-8799 -1445 2830 3195 0
-8799 -1445 2832 3193 0
-8799 -1445 2834 3191 0
-8799 -1445 2836 3189 0
-8799 -1445 2838 3187 0
-8799 -1445 2840 3185 0
-8799 -1445 2842 3183 0
-8799 -1445 2844 3181 0
-8799 -1445 2846 3179 0
-8799 -1445 2848 3177 0
-8799 -1445 2850 3175 0
-8799 -1445 2852 3173 0
-8799 -1445 2854 3171 0
-8799 -1445 2856 3169 0
-8799 -1445 2858 3167 0
-8799 -1445 2860 3165 0
-8799 -1445 2862 3163 0
-8799 -1445 2864 3161 0
-8799 -1445 2866 3159 0
-8799 -1445 2868 3157 0
-8799 -1445 2870 3155 0
-8799 -1445 2872 3153 0
-8799 -1445 2874 3151 0
-8799 -1445 2876 3149 0
-8799 -1445 2878 3147 0
-8799 -1445 2880 3145 0
-8799 -1445 2882 3143 0
-8799 -1445 2884 3141 0
-8799 -1445 2886 3139 0
-8799 -1445 2888 3137 0
-8799 -1445 2890 3135 0
-8799 -1445 2892 3133 0
-8799 -1445 2894 3131 0
-8799 -1445 2896 3129 0
-8799 -1445 2898 3127 0
-8799 -1445 2900 3125 0
-8799 -1445 2902 3123 0
-8799 -1445 2904 3121 0
-8799 -1445 2906 3119 0
-8799 -1445 2908 3117 0
-8799 -1445 2910 3115 0
-8799 -1445 2912 3113 0
-8799 -1445 2914 3111 0
-8799 -1445 2916 3109 0
-8799 -1445 2918 3107 0
-8799 -1445 2920 3105 0
-8799 -1445 2922 3103 0
-8799 -1445 2924 3101 0
-8799 -1445 2926 3099 0
-8799 -1445 2928 3097 0
-8799 -1445 2930 3095 0
-8799 -1445 2932 3093 0
-8799 -1445 2934 3091 0
-8799 -1445 2936 3089 0
-8799 -1445 2938 3087 0
-8799 -1445 2940 3085 0
-8799 -1445 2942 3083 0
-8799 -1445 2944 3081 0
-8799 -1445 2946 3079 0
-8799 -1445 2948 3077 0
8799 -3077 0
8799 -2948 -3079 0
8799 -2946 -3081 0
8799 -2944 -3083 0
8799 -2942 -3085 0
8799 -2940 -3087 0
8799 -2938 -3089 0
8799 -2936 -3091 0
8799 -2934 -3093 0
8799 -2932 -3095 0
8799 -2930 -3097 0
8799 -2928 -3099 0
8799 -2926 -3101 0
8799 -2924 -3103 0
8799 -2922 -3105 0
8799 -2920 -3107 0
8799 -2918 -3109 0
8799 -2916 -3111 0
8799 -2914 -3113 0
8799 -2912 -3115 0
8799 -2910 -3117 0
8799 -2908 -3119 0
8799 -2906 -3121 0
8799 -2904 -3123 0
8799 -2902 -3125 0
8799 -2900 -3127 0
8799 -2898 -3129 0
8799 -2896 -3131 0
8799 -2894 -3133 0
8799 -2892 -3135 0
8799 -2890 -3137 0
8799 -2888 -3139 0
8799 -2886 -3141 0
8799 -2884 -3143 0
8799 -2882 -3145 0
8799 -2880 -3147 0
8799 -2878 -3149 0
8799 -2876 -3151 0
8799 -2874 -3153 0
8799 -2872 -3155 0
8799 -2870 -3157 0
8799 -2868 -3159 0
8799 -2866 -3161 0
8799 -2864 -3163 0
8799 -2862 -3165 0
8799 -2860 -3167 0
8799 -2858 -3169 0
8799 -2856 -3171 0
8799 -2854 -3173 0
8799 -2852 -3175 0
8799 -2850 -3177 0
8799 -2848 -3179 0
8799 -2846 -3181 0
8799 -2844 -3183 0
8799 -2842 -3185 0
8799 -2840 -3187 0
8799 -2838 -3189 0
8799 -2836 -3191 0
8799 -2834 -3193 0
8799 -2832 -3195 0
8799 -2830 -3197 0
8799 -2828 -3199 0
8799 -2826 -3201 0
8799 -2824 -3203 0
8799 -2822 0
8799 -2820 0
8799 -2818 0
8799 -2816 0
8799 -2814 0
8799 -2812 0
8799 -2810 0
8799 -2808 0
8799 -2806 0
8799 -2804 0
8799 -2802 0
8799 -2800 0
8799 -2798 0
8799 -2796 0
8799 -2794 0
8799 -2792 0
8799 -2790 0
8799 -2788 0
8799 -2786 0
8799 -2784 0
8799 -2782 0
8799 -2780 0
8799 -2778 0
8799 -2776 0
8799 -2774 0
8799 -2772 0
8799 -2770 0
8799 -2768 0
8799 -2766 0
8799 -2764 0
8799 -2762 0
8799 -2760 0
8799 -2758 0
8799 -2756 0
8799 -2754 0
8799 -2752 0
8799 -2750 0
8799 -2748 0
8799 -2746 0
8799 -2744 0
8799 -2742 0
8799 -2740 0
8799 -2738 0
8799 -2736 0
8799 -2734 0
8799 -2732 0
8799 -2730 0
8799 -2728 0
8799 -2726 0
8799 -2724 0
8799 -2722 0
8799 -2720 0
8799 -2718 0
8799 -2716 0
8799 -2714 0
8799 -2712 0
8799 -2710 0
8799 -2708 0
8799 -2706 0
8799 -2704 0
8799 -2702 0
8799 -2700 0
8799 -2698 0
8799 -2696 0
8799 -2695 0
8799 1445 -3079 0
8799 1445 -2948 -3081 0
8799 1445 -2946 -3083 0
8799 1445 -2944 -3085 0
8799 1445 -2942 -3087 0
8799 1445 -2940 -3089 0
8799 1445 -2938 -3091 0
8799 1445 -2936 -3093 0
8799 1445 -2934 -3095 0
8799 1445 -2932 -3097 0
8799 1445 -2930 -3099 0
8799 1445 -2928 -3101 0
8799 1445 -2926 -3103 0
8799 1445 -2924 -3105 0
8799 1445 -2922 -3107 0
8799 1445 -2920 -3109 0
8799 1445 -2918 -3111 0
8799 1445 -2916 -3113 0
8799 1445 -2914 -3115 0
8799 1445 -2912 -3117 0
8799 1445 -2910 -3119 0
8799 1445 -2908 -3121 0
8799 1445 -2906 -3123 0
8799 1445 -2904 -3125 0
8799 1445 -2902 -3127 0
8799 1445 -2900 -3129 0
8799 1445 -2898 -3131 0
8799 1445 -2896 -3133 0
8799 1445 -2894 -3135 0
8799 1445 -2892 -3137 0
8799 1445 -2890 -3139 0
8799 1445 -2888 -3141 0
8799 1445 -2886 -3143 0
8799 1445 -2884 -3145 0
8799 1445 -2882 -3147 0
8799 1445 -2880 -3149 0
8799 1445 -2878 -3151 0
8799 1445 -2876 -3153 0
8799 1445 -2874 -3155 0
8799 1445 -2872 -3157 0
8799 1445 -2870 -3159 0
8799 1445 -2868 -3161 0
8799 1445 -2866 -3163 0
8799 1445 -2864 -3165 0
8799 1445 -2862 -3167 0
8799 1445 -2860 -3169 0
8799 1445 -2858 -3171 0
8799 1445 -2856 -3173 0
8799 1445 -2854 -3175 0
8799 1445 -2852 -3177 0
8799 1445 -2850 -3179 0
8799 1445 -2848 -3181 0
8799 1445 -2846 -3183 0
8799 1445 -2844 -3185 0
8799 1445 -2842 -3187 0
8799 1445 -2840 -3189 0
8799 1445 -2838 -3191 0
8799 1445 -2836 -3193 0
8799 1445 -2834 -3195 0
8799 1445 -2832 -3197 0
8799 1445 -2830 -3199 0
8799 1445 -2828 -3201 0
8799 1445 -2826 -3203 0
8799 1445 -2824 0
8799 1445 -2822 0
8799 1445 -2820 0
8799 1445 -2818 0
8799 1445 -2816 0
8799 1445 -2814 0
8799 1445 -2812 0
8799 1445 -2810 0
8799 1445 -2808 0
8799 1445 -2806 0
8799 1445 -2804 0
8799 1445 -2802 0
8799 1445 -2800 0
8799 1445 -2798 0
8799 1445 -2796 0
8799 1445 -2794 0
8799 1445 -2792 0
8799 1445 -2790 0
8799 1445 -2788 0
8799 1445 -2786 0
8799 1445 -2784 0
8799 1445 -2782 0
8799 1445 -2780 0
8799 1445 -2778 0
8799 1445 -2776 0
8799 1445 -2774 0
8799 1445 -2772 0
8799 1445 -2770 0
8799 1445 -2768 0
8799 1445 -2766 0
8799 1445 -2764 0
8799 1445 -2762 0
8799 1445 -2760 0
8799 1445 -2758 0
8799 1445 -2756 0
8799 1445 -2754 0
8799 1445 -2752 0
8799 1445 -2750 0
8799 1445 -2748 0
8799 1445 -2746 0
8799 1445 -2744 0
8799 1445 -2742 0
8799 1445 -2740 0
8799 1445 -2738 0
8799 1445 -2736 0
8799 1445 -2734 0
8799 1445 -2732 0
8799 1445 -2730 0
8799 1445 -2728 0
8799 1445 -2726 0
8799 1445 -2724 0
8799 1445 -2722 0
8799 1445 -2720 0
8799 1445 -2718 0
8799 1445 -2716 0
8799 1445 -2714 0
8799 1445 -2712 0
8799 1445 -2710 0
8799 1445 -2708 0
8799 1445 -2706 0
8799 1445 -2704 0
8799 1445 -2702 0
8799 1445 -2700 0
8799 1445 -2698 0
8799 1445 -2696 0
8799 1445 -2695 0
8799 1446 -3081 0
8799 1446 -2948 -3083 0
8799 1446 -2946 -3085 0
8799 1446 -2944 -3087 0
8799 1446 -2942 -3089 0
8799 1446 -2940 -3091 0
8799 1446 -2938 -3093 0
8799 1446 -2936 -3095 0
8799 1446 -2934 -3097 0
8799 1446 -2932 -3099 0
8799 1446 -2930 -3101 0
8799 1446 -2928 -3103 0
8799 1446 -2926 -3105 0
8799 1446 -2924 -3107 0
8799 1446 -2922 -3109 0
8799 1446 -2920 -3111 0
8799 1446 -2918 -3113 0
8799 1446 -2916 -3115 0
8799 1446 -2914 -3117 0
8799 1446 -2912 -3119 0
8799 1446 -2910 -3121 0
8799 1446 -2908 -3123 0
8799 1446 -2906 -3125 0
8799 1446 -2904 -3127 0
8799 1446 -2902 -3129 0
8799 1446 -2900 -3131 0
8799 1446 -2898 -3133 0
8799 1446 -2896 -3135 0
8799 1446 -2894 -3137 0
8799 1446 -2892 -3139 0
8799 1446 -2890 -3141 0
8799 1446 -2888 -3143 0
8799 1446 -2886 -3145 0
8799 1446 -2884 -3147 0
8799 1446 -2882 -3149 0
8799 1446 -2880 -3151 0
8799 1446 -2878 -3153 0
8799 1446 -2876 -3155 0
8799 1446 -2874 -3157 0
8799 1446 -2872 -3159 0
8799 1446 -2870 -3161 0
8799 1446 -2868 -3163 0
8799 1446 -2866 -3165 0
8799 1446 -2864 -3167 0
8799 1446 -2862 -3169 0
8799 1446 -2860 -3171 0
8799 1446 -2858 -3173 0
8799 1446 -2856 -3175 0
8799 1446 -2854 -3177 0
8799 1446 -2852 -3179 0
8799 1446 -2850 -3181 0
8799 1446 -2848 -3183 0
8799 1446 -2846 -3185 0
8799 1446 -2844 -3187 0
8799 1446 -2842 -3189 0
8799 1446 -2840 -3191 0
8799 1446 -2838 -3193 0
8799 1446 -2836 -3195 0
8799 1446 -2834 -3197 0
8799 1446 -2832 -3199 0
8799 1446 -2830 -3201 0
8799 1446 -2828 -3203 0
8799 1446 -2826 0
8799 1446 -2824 0
8799 1446 -2822 0
8799 1446 -2820 0
8799 1446 -2818 0
8799 1446 -2816 0
8799 1446 -2814 0
8799 1446 -2812 0
8799 1446 -2810 0
8799 1446 -2808 0
8799 1446 -2806 0
8799 1446 -2804 0
8799 1446 -2802 0
8799 1446 -2800 0
8799 1446 -2798 0
8799 1446 -2796 0
8799 1446 -2794 0
8799 1446 -2792 0
8799 1446 -2790 0
8799 1446 -2788 0
8799 1446 -2786 0
8799 1446 -2784 0
8799 1446 -2782 0
8799 1446 -2780 0
8799 1446 -2778 0
8799 1446 -2776 0
8799 1446 -2774 0
8799 1446 -2772 0
8799 1446 -2770 0
8799 1446 -2768 0
8799 1446 -2766 0
8799 1446 -2764 0
8799 1446 -2762 0
8799 1446 -2760 0
8799 1446 -2758 0
8799 1446 -2756 0
8799 1446 -2754 0
8799 1446 -2752 0
8799 1446 -2750 0
8799 1446 -2748 0
8799 1446 -2746 0
8799 1446 -2744 0
8799 1446 -2742 0
8799 1446 -2740 0
8799 1446 -2738 0
8799 1446 -2736 0
8799 1446 -2734 0
8799 1446 -2732 0
8799 1446 -2730 0
8799 1446 -2728 0
8799 1446 -2726 0
8799 1446 -2724 0
8799 1446 -2722 0
8799 1446 -2720 0
8799 1446 -2718 0
8799 1446 -2716 0
8799 1446 -2714 0
8799 1446 -2712 0
8799 1446 -2710 0
8799 1446 -2708 0
8799 1446 -2706 0
8799 1446 -2704 0
8799 1446 -2702 0
8799 1446 -2700 0
8799 1446 -2698 0
8799 1446 -2696 0
8799 1446 -2695 0
8799 1448 -3083 0
8799 1448 -2948 -3085 0
8799 1448 -2946 -3087 0
8799 1448 -2944 -3089 0
8799 1448 -2942 -3091 0
8799 1448 -2940 -3093 0
8799 1448 -2938 -3095 0
8799 1448 -2936 -3097 0
8799 1448 -2934 -3099 0
8799 1448 -2932 -3101 0
8799 1448 -2930 -3103 0
8799 1448 -2928 -3105 0
8799 1448 -2926 -3107 0
8799 1448 -2924 -3109 0
8799 1448 -2922 -3111 0
8799 1448 -2920 -3113 0
8799 1448 -2918 -3115 0
8799 1448 -2916 -3117 0
8799 1448 -2914 -3119 0
8799 1448 -2912 -3121 0
8799 1448 -2910 -3123 0
8799 1448 -2908 -3125 0
8799 1448 -2906 -3127 0
8799 1448 -2904 -3129 0
8799 1448 -2902 -3131 0
8799 1448 -2900 -3133 0
8799 1448 -2898 -3135 0
8799 1448 -2896 -3137 0
8799 1448 -2894 -3139 0
8799 1448 -2892 -3141 0
8799 1448 -2890 -3143 0
8799 1448 -2888 -3145 0
8799 1448 -2886 -3147 0
8799 1448 -2884 -3149 0
8799 1448 -2882 -3151 0
8799 1448 -2880 -3153 0
8799 1448 -2878 -3155 0
8799 1448 -2876 -3157 0
8799 1448 -2874 -3159 0
8799 1448 -2872 -3161 0
8799 1448 -2870 -3163 0
8799 1448 -2868 -3165 0
8799 1448 -2866 -3167 0
8799 1448 -2864 -3169 0
8799 1448 -2862 -3171 0
8799 1448 -2860 -3173 0
8799 1448 -2858 -3175 0
8799 1448 -2856 -3177 0
8799 1448 -2854 -3179 0
8799 1448 -2852 -3181 0
8799 1448 -2850 -3183 0
8799 1448 -2848 -3185 0
8799 1448 -2846 -3187 0
8799 1448 -2844 -3189 0
8799 1448 -2842 -3191 0
8799 1448 -2840 -3193 0
8799 1448 -2838 -3195 0
8799 1448 -2836 -3197 0
8799 1448 -2834 -3199 0
8799 1448 -2832 -3201 0
8799 1448 -2830 -3203 0
8799 1448 -2828 0
8799 1448 -2826 0
8799 1448 -2824 0
8799 1448 -2822 0
8799 1448 -2820 0
8799 1448 -2818 0
8799 1448 -2816 0
8799 1448 -2814 0
8799 1448 -2812 0
8799 1448 -2810 0
8799 1448 -2808 0
8799 1448 -2806 0
8799 1448 -2804 0
8799 1448 -2802 0
8799 1448 -2800 0
8799 1448 -2798 0
8799 1448 -2796 0
8799 1448 -2794 0
8799 1448 -2792 0
8799 1448 -2790 0
8799 1448 -2788 0
8799 1448 -2786 0
8799 1448 -2784 0
8799 1448 -2782 0
8799 1448 -2780 0
8799 1448 -2778 0
8799 1448 -2776 0
8799 1448 -2774 0
8799 1448 -2772 0
8799 1448 -2770 0
8799 1448 -2768 0
8799 1448 -2766 0
8799 1448 -2764 0
8799 1448 -2762 0
8799 1448 -2760 0
8799 1448 -2758 0
8799 1448 -2756 0
8799 1448 -2754 0
8799 1448 -2752 0
8799 1448 -2750 0
8799 1448 -2748 0
8799 1448 -2746 0
8799 1448 -2744 0
8799 1448 -2742 0
8799 1448 -2740 0
8799 1448 -2738 0
8799 1448 -2736 0
8799 1448 -2734 0
8799 1448 -2732 0
8799 1448 -2730 0
8799 1448 -2728 0
8799 1448 -2726 0
8799 1448 -2724 0
8799 1448 -2722 0
8799 1448 -2720 0
8799 1448 -2718 0
8799 1448 -2716 0
8799 1448 -2714 0
8799 1448 -2712 0
8799 1448 -2710 0
8799 1448 -2708 0
8799 1448 -2706 0
8799 1448 -2704 0
8799 1448 -2702 0
8799 1448 -2700 0
8799 1448 -2698 0
8799 1448 -2696 0
8799 1448 -2695 0
8799 1450 -3085 0
8799 1450 -2948 -3087 0
8799 1450 -2946 -3089 0
8799 1450 -2944 -3091 0
8799 1450 -2942 -3093 0
8799 1450 -2940 -3095 0
8799 1450 -2938 -3097 0
8799 1450 -2936 -3099 0
8799 1450 -2934 -3101 0
8799 1450 -2932 -3103 0
8799 1450 -2930 -3105 0
8799 1450 -2928 -3107 0
8799 1450 -2926 -3109 0
8799 1450 -2924 -3111 0
8799 1450 -2922 -3113 0
8799 1450 -2920 -3115 0
8799 1450 -2918 -3117 0
8799 1450 -2916 -3119 0
8799 1450 -2914 -3121 0
8799 1450 -2912 -3123 0
8799 1450 -2910 -3125 0
8799 1450 -2908 -3127 0
8799 1450 -2906 -3129 0
8799 1450 -2904 -3131 0
8799 1450 -2902 -3133 0
8799 1450 -2900 -3135 0
8799 1450 -2898 -3137 0
8799 1450 -2896 -3139 0
8799 1450 -2894 -3141 0
8799 1450 -2892 -3143 0
8799 1450 -2890 -3145 0
8799 1450 -2888 -3147 0
8799 1450 -2886 -3149 0
8799 1450 -2884 -3151 0
8799 1450 -2882 -3153 0
8799 1450 -2880 -3155 0
8799 1450 -2878 -3157 0
8799 1450 -2876 -3159 0
8799 1450 -2874 -3161 0
8799 1450 -2872 -3163 0
8799 1450 -2870 -3165 0
8799 1450 -2868 -3167 0
8799 1450 -2866 -3169 0
8799 1450 -2864 -3171 0
8799 1450 -2862 -3173 0
8799 1450 -2860 -3175 0
8799 1450 -2858 -3177 0
8799 1450 -2856 -3179 0
8799 1450 -2854 -3181 0
8799 1450 -2852 -3183 0
8799 1450 -2850 -3185 0
8799 1450 -2848 -3187 0
8799 1450 -2846 -3189 0
8799 1450 -2844 -3191 0
8799 1450 -2842 -3193 0
8799 1450 -2840 -3195 0
8799 1450 -2838 -3197 0
8799 1450 -2836 -3199 0
8799 1450 -2834 -3201 0
8799 1450 -2832 -3203 0
8799 1450 -2830 0
8799 1450 -2828 0
8799 1450 -2826 0
8799 1450 -2824 0
8799 1450 -2822 0
8799 1450 -2820 0
8799 1450 -2818 0
8799 1450 -2816 0
8799 1450 -2814 0
8799 1450 -2812 0
8799 1450 -2810 0
8799 1450 -2808 0
8799 1450 -2806 0
8799 1450 -2804 0
8799 1450 -2802 0
8799 1450 -2800 0
8799 1450 -2798 0
8799 1450 -2796 0
8799 1450 -2794 0
8799 1450 -2792 0
8799 1450 -2790 0
8799 1450 -2788 0
8799 1450 -2786 0
8799 1450 -2784 0
8799 1450 -2782 0
8799 1450 -2780 0
8799 1450 -2778 0
8799 1450 -2776 0
8799 1450 -2774 0
8799 1450 -2772 0
8799 1450 -2770 0
8799 1450 -2768 0
8799 1450 -2766 0
8799 1450 -2764 0
8799 1450 -2762 0
8799 1450 -2760 0
8799 1450 -2758 0
8799 1450 -2756 0
8799 1450 -2754 0
8799 1450 -2752 0
8799 1450 -2750 0
8799 1450 -2748 0
8799 1450 -2746 0
8799 1450 -2744 0
8799 1450 -2742 0
8799 1450 -2740 0
8799 1450 -2738 0
8799 1450 -2736 0
8799 1450 -2734 0
8799 1450 -2732 0
8799 1450 -2730 0
8799 1450 -2728 0
8799 1450 -2726 0
8799 1450 -2724 0
8799 1450 -2722 0
8799 1450 -2720 0
8799 1450 -2718 0
8799 1450 -2716 0
8799 1450 -2714 0
8799 1450 -2712 0
8799 1450 -2710 0
8799 1450 -2708 0
8799 1450 -2706 0
8799 1450 -2704 0
8799 1450 -2702 0
8799 1450 -2700 0
8799 1450 -2698 0
8799 1450 -2696 0
8799 1450 -2695 0
8799 1452 -3087 0
8799 1452 -2948 -3089 0
8799 1452 -2946 -3091 0
8799 1452 -2944 -3093 0
8799 1452 -2942 -3095 0
8799 1452 -2940 -3097 0
8799 1452 -2938 -3099 0
8799 1452 -2936 -3101 0
8799 1452 -2934 -3103 0
8799 1452 -2932 -3105 0
8799 1452 -2930 -3107 0
8799 1452 -2928 -3109 0
8799 1452 -2926 -3111 0
8799 1452 -2924 -3113 0
8799 1452 -2922 -3115 0
8799 1452 -2920 -3117 0
8799 1452 -2918 -3119 0
8799 1452 -2916 -3121 0
8799 1452 -2914 -3123 0
8799 1452 -2912 -3125 0
8799 1452 -2910 -3127 0
8799 1452 -2908 -3129 0
8799 1452 -2906 -3131 0
8799 1452 -2904 -3133 0
8799 1452 -2902 -3135 0
8799 1452 -2900 -3137 0
8799 1452 -2898 -3139 0
8799 1452 -2896 -3141 0
8799 1452 -2894 -3143 0
8799 1452 -2892 -3145 0
8799 1452 -2890 -3147 0
8799 1452 -2888 -3149 0
8799 1452 -2886 -3151 0
8799 1452 -2884 -3153 0
8799 1452 -2882 -3155 0
8799 1452 -2880 -3157 0
8799 1452 -2878 -3159 0
8799 1452 -2876 -3161 0
8799 1452 -2874 -3163 0
8799 1452 -2872 -3165 0
8799 1452 -2870 -3167 0
8799 1452 -2868 -3169 0
8799 1452 -2866 -3171 0
8799 1452 -2864 -3173 0
8799 1452 -2862 -3175 0
8799 1452 -2860 -3177 0
8799 1452 -2858 -3179 0
8799 1452 -2856 -3181 0
8799 1452 -2854 -3183 0
8799 1452 -2852 -3185 0
8799 1452 -2850 -3187 0
8799 1452 -2848 -3189 0
8799 1452 -2846 -3191 0
8799 1452 -2844 -3193 0
8799 1452 -2842 -3195 0
8799 1452 -2840 -3197 0
8799 1452 -2838 -3199 0
8799 1452 -2836 -3201 0
8799 1452 -2834 -3203 0
8799 1452 -2832 0
8799 1452 -2830 0
8799 1452 -2828 0
8799 1452 -2826 0
8799 1452 -2824 0
8799 1452 -2822 0
8799 1452 -2820 0
8799 1452 -2818 0
8799 1452 -2816 0
8799 1452 -2814 0
8799 1452 -2812 0
8799 1452 -2810 0
8799 1452 -2808 0
8799 1452 -2806 0
8799 1452 -2804 0
8799 1452 -2802 0
8799 1452 -2800 0
8799 1452 -2798 0
8799 1452 -2796 0
8799 1452 -2794 0
8799 1452 -2792 0
8799 1452 -2790 0
8799 1452 -2788 0
8799 1452 -2786 0
8799 1452 -2784 0
8799 1452 -2782 0
8799 1452 -2780 0
8799 1452 -2778 0
8799 1452 -2776 0
8799 1452 -2774 0
8799 1452 -2772 0
8799 1452 -2770 0
8799 1452 -2768 0
8799 1452 -2766 0
8799 1452 -2764 0
8799 1452 -2762 0
8799 1452 -2760 0
8799 1452 -2758 0
8799 1452 -2756 0
8799 1452 -2754 0
8799 1452 -2752 0
8799 1452 -2750 0
8799 1452 -2748 0
8799 1452 -2746 0
8799 1452 -2744 0
8799 1452 -2742 0
8799 1452 -2740 0
8799 1452 -2738 0
8799 1452 -2736 0
8799 1452 -2734 0
8799 1452 -2732 0
8799 1452 -2730 0
8799 1452 -2728 0
8799 1452 -2726 0
8799 1452 -2724 0
8799 1452 -2722 0
8799 1452 -2720 0
8799 1452 -2718 0
8799 1452 -2716 0
8799 1452 -2714 0
8799 1452 -2712 0
8799 1452 -2710 0
8799 1452 -2708 0
8799 1452 -2706 0
8799 1452 -2704 0
8799 1452 -2702 0
8799 1452 -2700 0
8799 1452 -2698 0
8799 1452 -2696 0
8799 1452 -2695 0
8799 1454 -3089 0
8799 1454 -2948 -3091 0
8799 1454 -2946 -3093 0
8799 1454 -2944 -3095 0
8799 1454 -2942 -3097 0
8799 1454 -2940 -3099 0
8799 1454 -2938 -3101 0
8799 1454 -2936 -3103 0
8799 1454 -2934 -3105 0
8799 1454 -2932 -3107 0
8799 1454 -2930 -3109 0
8799 1454 -2928 -3111 0
8799 1454 -2926 -3113 0
8799 1454 -2924 -3115 0
8799 1454 -2922 -3117 0
8799 1454 -2920 -3119 0
8799 1454 -2918 -3121 0
8799 1454 -2916 -3123 0
8799 1454 -2914 -3125 0
8799 1454 -2912 -3127 0
8799 1454 -2910 -3129 0
8799 1454 -2908 -3131 0
8799 1454 -2906 -3133 0
8799 1454 -2904 -3135 0
8799 1454 -2902 -3137 0
8799 1454 -2900 -3139 0
8799 1454 -2898 -3141 0
8799 1454 -2896 -3143 0
8799 1454 -2894 -3145 0
8799 1454 -2892 -3147 0
8799 1454 -2890 -3149 0
8799 1454 -2888 -3151 0
8799 1454 -2886 -3153 0
8799 1454 -2884 -3155 0
8799 1454 -2882 -3157 0
8799 1454 -2880 -3159 0
8799 1454 -2878 -3161 0
8799 1454 -2876 -3163 0
8799 1454 -2874 -3165 0
8799 1454 -2872 -3167 0
8799 1454 -2870 -3169 0
8799 1454 -2868 -3171 0
8799 1454 -2866 -3173 0
8799 1454 -2864 -3175 0
8799 1454 -2862 -3177 0
8799 1454 -2860 -3179 0
8799 1454 -2858 -3181 0
8799 1454 -2856 -3183 0
8799 1454 -2854 -3185 0
8799 1454 -2852 -3187 0
8799 1454 -2850 -3189 0
8799 1454 -2848 -3191 0
8799 1454 -2846 -3193 0
8799 1454 -2844 -3195 0
8799 1454 -2842 -3197 0
8799 1454 -2840 -3199 0
8799 1454 -2838 -3201 0
8799 1454 -2836 -3203 0
8799 1454 -2834 0
8799 1454 -2832 0
8799 1454 -2830 0
8799 1454 -2828 0
8799 1454 -2826 0
8799 1454 -2824 0
8799 1454 -2822 0
8799 1454 -2820 0
8799 1454 -2818 0
8799 1454 -2816 0
8799 1454 -2814 0
8799 1454 -2812 0
8799 1454 -2810 0
8799 1454 -2808 0
8799 1454 -2806 0
8799 1454 -2804 0
8799 1454 -2802 0
8799 1454 -2800 0
8799 1454 -2798 0
8799 1454 -2796 0
8799 1454 -2794 0
8799 1454 -2792 0
8799 1454 -2790 0
8799 1454 -2788 0
8799 1454 -2786 0
8799 1454 -2784 0
8799 1454 -2782 0
8799 1454 -2780 0
8799 1454 -2778 0
8799 1454 -2776 0
8799 1454 -2774 0
8799 1454 -2772 0
8799 1454 -2770 0
8799 1454 -2768 0
8799 1454 -2766 0
8799 1454 -2764 0
8799 1454 -2762 0
8799 1454 -2760 0
8799 1454 -2758 0
8799 1454 -2756 0
8799 1454 -2754 0
8799 1454 -2752 0
8799 1454 -2750 0
8799 1454 -2748 0
8799 1454 -2746 0
8799 1454 -2744 0
8799 1454 -2742 0
8799 1454 -2740 0
8799 1454 -2738 0
8799 1454 -2736 0
8799 1454 -2734 0
8799 1454 -2732 0
8799 1454 -2730 0
8799 1454 -2728 0
8799 1454 -2726 0
8799 1454 -2724 0
8799 1454 -2722 0
8799 1454 -2720 0
8799 1454 -2718 0
8799 1454 -2716 0
8799 1454 -2714 0
8799 1454 -2712 0
8799 1454 -2710 0
8799 1454 -2708 0
8799 1454 -2706 0
8799 1454 -2704 0
8799 1454 -2702 0
8799 1454 -2700 0
8799 1454 -2698 0
8799 1454 -2696 0
8799 1454 -2695 0
8799 1456 -3091 0
8799 1456 -2948 -3093 0
8799 1456 -2946 -3095 0
8799 1456 -2944 -3097 0
8799 1456 -2942 -3099 0
8799 1456 -2940 -3101 0
8799 1456 -2938 -3103 0
8799 1456 -2936 -3105 0
8799 1456 -2934 -3107 0
8799 1456 -2932 -3109 0
8799 1456 -2930 -3111 0
8799 1456 -2928 -3113 0
8799 1456 -2926 -3115 0
8799 1456 -2924 -3117 0
8799 1456 -2922 -3119 0
8799 1456 -2920 -3121 0
8799 1456 -2918 -3123 0
8799 1456 -2916 -3125 0
8799 1456 -2914 -3127 0
8799 1456 -2912 -3129 0
8799 1456 -2910 -3131 0
8799 1456 -2908 -3133 0
8799 1456 -2906 -3135 0
8799 1456 -2904 -3137 0
8799 1456 -2902 -3139 0
8799 1456 -2900 -3141 0
8799 1456 -2898 -3143 0
8799 1456 -2896 -3145 0
8799 1456 -2894 -3147 0
8799 1456 -2892 -3149 0
8799 1456 -2890 -3151 0
8799 1456 -2888 -3153 0
8799 1456 -2886 -3155 0
8799 1456 -2884 -3157 0
8799 1456 -2882 -3159 0
8799 1456 -2880 -3161 0
8799 1456 -2878 -3163 0
8799 1456 -2876 -3165 0
8799 1456 -2874 -3167 0
8799 1456 -2872 -3169 0
8799 1456 -2870 -3171 0
8799 1456 -2868 -3173 0
8799 1456 -2866 -3175 0
8799 1456 -2864 -3177 0
8799 1456 -2862 -3179 0
8799 1456 -2860 -3181 0
8799 1456 -2858 -3183 0
8799 1456 -2856 -3185 0
8799 1456 -2854 -3187 0
8799 1456 -2852 -3189 0
8799 1456 -2850 -3191 0
8799 1456 -2848 -3193 0
8799 1456 -2846 -3195 0
8799 1456 -2844 -3197 0
8799 1456 -2842 -3199 0
8799 1456 -2840 -3201 0
8799 1456 -2838 -3203 0
8799 1456 -2836 0
8799 1456 -2834 0
8799 1456 -2832 0
8799 1456 -2830 0
8799 1456 -2828 0
8799 1456 -2826 0
8799 1456 -2824 0
8799 1456 -2822 0
8799 1456 -2820 0
8799 1456 -2818 0
8799 1456 -2816 0
8799 1456 -2814 0
8799 1456 -2812 0
8799 1456 -2810 0
8799 1456 -2808 0
8799 1456 -2806 0
8799 1456 -2804 0
8799 1456 -2802 0
8799 1456 -2800 0
8799 1456 -2798 0
8799 1456 -2796 0
8799 1456 -2794 0
8799 1456 -2792 0
8799 1456 -2790 0
8799 1456 -2788 0
8799 1456 -2786 0
8799 1456 -2784 0
8799 1456 -2782 0
8799 1456 -2780 0
8799 1456 -2778 0
8799 1456 -2776 0
8799 1456 -2774 0
8799 1456 -2772 0
8799 1456 -2770 0
8799 1456 -2768 0
8799 1456 -2766 0
8799 1456 -2764 0
8799 1456 -2762 0
8799 1456 -2760 0
8799 1456 -2758 0
8799 1456 -2756 0
8799 1456 -2754 0
8799 1456 -2752 0
8799 1456 -2750 0
8799 1456 -2748 0
8799 1456 -2746 0
8799 1456 -2744 0
8799 1456 -2742 0
8799 1456 -2740 0
8799 1456 -2738 0
8799 1456 -2736 0
8799 1456 -2734 0
8799 1456 -2732 0
8799 1456 -2730 0
8799 1456 -2728 0
8799 1456 -2726 0
8799 1456 -2724 0
8799 1456 -2722 0
8799 1456 -2720 0
8799 1456 -2718 0
8799 1456 -2716 0
8799 1456 -2714 0
8799 1456 -2712 0
8799 1456 -2710 0
8799 1456 -2708 0
8799 1456 -2706 0
8799 1456 -2704 0
8799 1456 -2702 0
8799 1456 -2700 0
8799 1456 -2698 0
8799 1456 -2696 0
8799 1456 -2695 0
8799 1458 -3093 0
8799 1458 -2948 -3095 0
8799 1458 -2946 -3097 0
8799 1458 -2944 -3099 0
8799 1458 -2942 -3101 0
8799 1458 -2940 -3103 0
8799 1458 -2938 -3105 0
8799 1458 -2936 -3107 0
8799 1458 -2934 -3109 0
8799 1458 -2932 -3111 0
8799 1458 -2930 -3113 0
8799 1458 -2928 -3115 0
8799 1458 -2926 -3117 0
8799 1458 -2924 -3119 0
8799 1458 -2922 -3121 0
8799 1458 -2920 -3123 0
8799 1458 -2918 -3125 0
8799 1458 -2916 -3127 0
8799 1458 -2914 -3129 0
8799 1458 -2912 -3131 0
8799 1458 -2910 -3133 0
8799 1458 -2908 -3135 0
8799 1458 -2906 -3137 0
8799 1458 -2904 -3139 0
8799 1458 -2902 -3141 0
8799 1458 -2900 -3143 0
8799 1458 -2898 -3145 0
8799 1458 -2896 -3147 0
8799 1458 -2894 -3149 0
8799 1458 -2892 -3151 0
8799 1458 -2890 -3153 0
8799 1458 -2888 -3155 0
8799 1458 -2886 -3157 0
8799 1458 -2884 -3159 0
8799 1458 -2882 -3161 0
8799 1458 -2880 -3163 0
8799 1458 -2878 -3165 0
8799 1458 -2876 -3167 0
8799 1458 -2874 -3169 0
8799 1458 -2872 -3171 0
8799 1458 -2870 -3173 0
8799 1458 -2868 -3175 0
8799 1458 -2866 -3177 0
8799 1458 -2864 -3179 0
8799 1458 -2862 -3181 0
8799 1458 -2860 -3183 0
8799 1458 -2858 -3185 0
8799 1458 -2856 -3187 0
8799 1458 -2854 -3189 0
8799 1458 -2852 -3191 0
8799 1458 -2850 -3193 0
8799 1458 -2848 -3195 0
8799 1458 -2846 -3197 0
8799 1458 -2844 -3199 0
8799 1458 -2842 -3201 0
8799 1458 -2840 -3203 0
8799 1458 -2838 0
8799 1458 -2836 0
8799 1458 -2834 0
8799 1458 -2832 0
8799 1458 -2830 0
8799 1458 -2828 0
8799 1458 -2826 0
8799 1458 -2824 0
8799 1458 -2822 0
8799 1458 -2820 0
8799 1458 -2818 0
8799 1458 -2816 0
8799 1458 -2814 0
8799 1458 -2812 0
8799 1458 -2810 0
8799 1458 -2808 0
8799 1458 -2806 0
8799 1458 -2804 0
8799 1458 -2802 0
8799 1458 -2800 0
8799 1458 -2798 0
8799 1458 -2796 0
8799 1458 -2794 0
8799 1458 -2792 0
8799 1458 -2790 0
8799 1458 -2788 0
8799 1458 -2786 0
8799 1458 -2784 0
8799 1458 -2782 0
8799 1458 -2780 0
8799 1458 -2778 0
8799 1458 -2776 0
8799 1458 -2774 0
8799 1458 -2772 0
8799 1458 -2770 0
8799 1458 -2768 0
8799 1458 -2766 0
8799 1458 -2764 0
8799 1458 -2762 0
8799 1458 -2760 0
8799 1458 -2758 0
8799 1458 -2756 0
8799 1458 -2754 0
8799 1458 -2752 0
8799 1458 -2750 0
8799 1458 -2748 0
8799 1458 -2746 0
8799 1458 -2744 0
8799 1458 -2742 0
8799 1458 -2740 0
8799 1458 -2738 0
8799 1458 -2736 0
8799 1458 -2734 0
8799 1458 -2732 0
8799 1458 -2730 0
8799 1458 -2728 0
8799 1458 -2726 0
8799 1458 -2724 0
8799 1458 -2722 0
8799 1458 -2720 0
8799 1458 -2718 0
8799 1458 -2716 0
8799 1458 -2714 0
8799 1458 -2712 0
8799 1458 -2710 0
8799 1458 -2708 0
8799 1458 -2706 0
8799 1458 -2704 0
8799 1458 -2702 0
8799 1458 -2700 0
8799 1458 -2698 0
8799 1458 -2696 0
8799 1458 -2695 0
8799 1460 -3095 0
8799 1460 -2948 -3097 0
8799 1460 -2946 -3099 0
8799 1460 -2944 -3101 0
8799 1460 -2942 -3103 0
8799 1460 -2940 -3105 0
8799 1460 -2938 -3107 0
8799 1460 -2936 -3109 0
8799 1460 -2934 -3111 0
8799 1460 -2932 -3113 0
8799 1460 -2930 -3115 0
8799 1460 -2928 -3117 0
8799 1460 -2926 -3119 0
8799 1460 -2924 -3121 0
8799 1460 -2922 -3123 0
8799 1460 -2920 -3125 0
8799 1460 -2918 -3127 0
8799 1460 -2916 -3129 0
8799 1460 -2914 -3131 0
8799 1460 -2912 -3133 0
8799 1460 -2910 -3135 0
8799 1460 -2908 -3137 0
8799 1460 -2906 -3139 0
8799 1460 -2904 -3141 0
8799 1460 -2902 -3143 0
8799 1460 -2900 -3145 0
8799 1460 -2898 -3147 0
8799 1460 -2896 -3149 0
8799 1460 -2894 -3151 0
8799 1460 -2892 -3153 0
8799 1460 -2890 -3155 0
8799 1460 -2888 -3157 0
8799 1460 -2886 -3159 0
8799 1460 -2884 -3161 0
8799 1460 -2882 -3163 0
8799 1460 -2880 -3165 0
8799 1460 -2878 -3167 0
8799 1460 -2876 -3169 0
8799 1460 -2874 -3171 0
8799 1460 -2872 -3173 0
8799 1460 -2870 -3175 0
8799 1460 -2868 -3177 0
8799 1460 -2866 -3179 0
8799 1460 -2864 -3181 0
8799 1460 -2862 -3183 0
8799 1460 -2860 -3185 0
8799 1460 -2858 -3187 0
8799 1460 -2856 -3189 0
8799 1460 -2854 -3191 0
8799 1460 -2852 -3193 0
8799 1460 -2850 -3195 0
8799 1460 -2848 -3197 0
8799 1460 -2846 -3199 0
8799 1460 -2844 -3201 0
8799 1460 -2842 -3203 0
8799 1460 -2840 0
8799 1460 -2838 0
8799 1460 -2836 0
8799 1460 -2834 0
8799 1460 -2832 0
8799 1460 -2830 0
8799 1460 -2828 0
8799 1460 -2826 0
8799 1460 -2824 0
8799 1460 -2822 0
8799 1460 -2820 0
8799 1460 -2818 0
8799 1460 -2816 0
8799 1460 -2814 0
8799 1460 -2812 0
8799 1460 -2810 0
8799 1460 -2808 0
8799 1460 -2806 0
8799 1460 -2804 0
8799 1460 -2802 0
8799 1460 -2800 0
8799 1460 -2798 0
8799 1460 -2796 0
8799 1460 -2794 0
8799 1460 -2792 0
8799 1460 -2790 0
8799 1460 -2788 0
8799 1460 -2786 0
8799 1460 -2784 0
8799 1460 -2782 0
8799 1460 -2780 0
8799 1460 -2778 0
8799 1460 -2776 0
8799 1460 -2774 0
8799 1460 -2772 0
8799 1460 -2770 0
8799 1460 -2768 0
8799 1460 -2766 0
8799 1460 -2764 0
8799 1460 -2762 0
8799 1460 -2760 0
8799 1460 -2758 0
8799 1460 -2756 0
8799 1460 -2754 0
8799 1460 -2752 0
8799 1460 -2750 0
8799 1460 -2748 0
8799 1460 -2746 0
8799 1460 -2744 0
8799 1460 -2742 0
8799 1460 -2740 0
8799 1460 -2738 0
8799 1460 -2736 0
8799 1460 -2734 0
8799 1460 -2732 0
8799 1460 -2730 0
8799 1460 -2728 0
8799 1460 -2726 0
8799 1460 -2724 0
8799 1460 -2722 0
8799 1460 -2720 0
8799 1460 -2718 0
8799 1460 -2716 0
8799 1460 -2714 0
8799 1460 -2712 0
8799 1460 -2710 0
8799 1460 -2708 0
8799 1460 -2706 0
8799 1460 -2704 0
8799 1460 -2702 0
8799 1460 -2700 0
8799 1460 -2698 0
8799 1460 -2696 0
8799 1460 -2695 0
8799 1462 -3097 0
8799 1462 -2948 -3099 0
8799 1462 -2946 -3101 0
8799 1462 -2944 -3103 0
8799 1462 -2942 -3105 0
8799 1462 -2940 -3107 0
8799 1462 -2938 -3109 0
8799 1462 -2936 -3111 0
8799 1462 -2934 -3113 0
8799 1462 -2932 -3115 0
8799 1462 -2930 -3117 0
8799 1462 -2928 -3119 0
8799 1462 -2926 -3121 0
8799 1462 -2924 -3123 0
8799 1462 -2922 -3125 0
8799 1462 -2920 -3127 0
8799 1462 -2918 -3129 0
8799 1462 -2916 -3131 0
8799 1462 -2914 -3133 0
8799 1462 -2912 -3135 0
8799 1462 -2910 -3137 0
8799 1462 -2908 -3139 0
8799 1462 -2906 -3141 0
8799 1462 -2904 -3143 0
8799 1462 -2902 -3145 0
8799 1462 -2900 -3147 0
8799 1462 -2898 -3149 0
8799 1462 -2896 -3151 0
8799 1462 -2894 -3153 0
8799 1462 -2892 -3155 0
8799 1462 -2890 -3157 0
8799 1462 -2888 -3159 0
8799 1462 -2886 -3161 0
8799 1462 -2884 -3163 0
8799 1462 -2882 -3165 0
8799 1462 -2880 -3167 0
8799 1462 -2878 -3169 0
8799 1462 -2876 -3171 0
8799 1462 -2874 -3173 0
8799 1462 -2872 -3175 0
8799 1462 -2870 -3177 0
8799 1462 -2868 -3179 0
8799 1462 -2866 -3181 0
8799 1462 -2864 -3183 0
8799 1462 -2862 -3185 0
8799 1462 -2860 -3187 0
8799 1462 -2858 -3189 0
8799 1462 -2856 -3191 0
8799 1462 -2854 -3193 0
8799 1462 -2852 -3195 0
8799 1462 -2850 -3197 0
8799 1462 -2848 -3199 0
8799 1462 -2846 -3201 0
8799 1462 -2844 -3203 0
8799 1462 -2842 0
8799 1462 -2840 0
8799 1462 -2838 0
8799 1462 -2836 0
8799 1462 -2834 0
8799 1462 -2832 0
8799 1462 -2830 0
8799 1462 -2828 0
8799 1462 -2826 0
8799 1462 -2824 0
8799 1462 -2822 0
8799 1462 -2820 0
8799 1462 -2818 0
8799 1462 -2816 0
8799 1462 -2814 0
8799 1462 -2812 0
8799 1462 -2810 0
8799 1462 -2808 0
8799 1462 -2806 0
8799 1462 -2804 0
8799 1462 -2802 0
8799 1462 -2800 0
8799 1462 -2798 0
8799 1462 -2796 0
8799 1462 -2794 0
8799 1462 -2792 0
8799 1462 -2790 0
8799 1462 -2788 0
8799 1462 -2786 0
8799 1462 -2784 0
8799 1462 -2782 0
8799 1462 -2780 0
8799 1462 -2778 0
8799 1462 -2776 0
8799 1462 -2774 0
8799 1462 -2772 0
8799 1462 -2770 0
8799 1462 -2768 0
8799 1462 -2766 0
8799 1462 -2764 0
8799 1462 -2762 0
8799 1462 -2760 0
8799 1462 -2758 0
8799 1462 -2756 0
8799 1462 -2754 0
8799 1462 -2752 0
8799 1462 -2750 0
8799 1462 -2748 0
8799 1462 -2746 0
8799 1462 -2744 0
8799 1462 -2742 0
8799 1462 -2740 0
8799 1462 -2738 0
8799 1462 -2736 0
8799 1462 -2734 0
8799 1462 -2732 0
8799 1462 -2730 0
8799 1462 -2728 0
8799 1462 -2726 0
8799 1462 -2724 0
8799 1462 -2722 0
8799 1462 -2720 0
8799 1462 -2718 0
8799 1462 -2716 0
8799 1462 -2714 0
8799 1462 -2712 0
8799 1462 -2710 0
8799 1462 -2708 0
8799 1462 -2706 0
8799 1462 -2704 0
8799 1462 -2702 0
8799 1462 -2700 0
8799 1462 -2698 0
8799 1462 -2696 0
8799 1462 -2695 0
8799 1464 -3099 0
8799 1464 -2948 -3101 0
8799 1464 -2946 -3103 0
8799 1464 -2944 -3105 0
8799 1464 -2942 -3107 0
8799 1464 -2940 -3109 0
8799 1464 -2938 -3111 0
8799 1464 -2936 -3113 0
8799 1464 -2934 -3115 0
8799 1464 -2932 -3117 0
8799 1464 -2930 -3119 0
8799 1464 -2928 -3121 0
8799 1464 -2926 -3123 0
8799 1464 -2924 -3125 0
8799 1464 -2922 -3127 0
8799 1464 -2920 -3129 0
8799 1464 -2918 -3131 0
8799 1464 -2916 -3133 0
8799 1464 -2914 -3135 0
8799 1464 -2912 -3137 0
8799 1464 -2910 -3139 0
8799 1464 -2908 -3141 0
8799 1464 -2906 -3143 0
8799 1464 -2904 -3145 0
8799 1464 -2902 -3147 0
8799 1464 -2900 -3149 0
8799 1464 -2898 -3151 0
8799 1464 -2896 -3153 0
8799 1464 -2894 -3155 0
8799 1464 -2892 -3157 0
8799 1464 -2890 -3159 0
8799 1464 -2888 -3161 0
8799 1464 -2886 -3163 0
8799 1464 -2884 -3165 0
8799 1464 -2882 -3167 0
8799 1464 -2880 -3169 0
8799 1464 -2878 -3171 0
8799 1464 -2876 -3173 0
8799 1464 -2874 -3175 0
8799 1464 -2872 -3177 0
8799 1464 -2870 -3179 0
8799 1464 -2868 -3181 0
8799 1464 -2866 -3183 0
8799 1464 -2864 -3185 0
8799 1464 -2862 -3187 0
8799 1464 -2860 -3189 0
8799 1464 -2858 -3191 0
8799 1464 -2856 -3193 0
8799 1464 -2854 -3195 0
8799 1464 -2852 -3197 0
8799 1464 -2850 -3199 0
8799 1464 -2848 -3201 0
8799 1464 -2846 -3203 0
8799 1464 -2844 0
8799 1464 -2842 0
8799 1464 -2840 0
8799 1464 -2838 0
8799 1464 -2836 0
8799 1464 -2834 0
8799 1464 -2832 0
8799 1464 -2830 0
8799 1464 -2828 0
8799 1464 -2826 0
8799 1464 -2824 0
8799 1464 -2822 0
8799 1464 -2820 0
8799 1464 -2818 0
8799 1464 -2816 0
8799 1464 -2814 0
8799 1464 -2812 0
8799 1464 -2810 0
8799 1464 -2808 0
8799 1464 -2806 0
8799 1464 -2804 0
8799 1464 -2802 0
8799 1464 -2800 0
8799 1464 -2798 0
8799 1464 -2796 0
8799 1464 -2794 0
8799 1464 -2792 0
8799 1464 -2790 0
8799 1464 -2788 0
8799 1464 -2786 0
8799 1464 -2784 0
8799 1464 -2782 0
8799 1464 -2780 0
8799 1464 -2778 0
8799 1464 -2776 0
8799 1464 -2774 0
8799 1464 -2772 0
8799 1464 -2770 0
8799 1464 -2768 0
8799 1464 -2766 0
8799 1464 -2764 0
8799 1464 -2762 0
8799 1464 -2760 0
8799 1464 -2758 0
8799 1464 -2756 0
8799 1464 -2754 0
8799 1464 -2752 0
8799 1464 -2750 0
8799 1464 -2748 0
8799 1464 -2746 0
8799 1464 -2744 0
8799 1464 -2742 0
8799 1464 -2740 0
8799 1464 -2738 0
8799 1464 -2736 0
8799 1464 -2734 0
8799 1464 -2732 0
8799 1464 -2730 0
8799 1464 -2728 0
8799 1464 -2726 0
8799 1464 -2724 0
8799 1464 -2722 0
8799 1464 -2720 0
8799 1464 -2718 0
8799 1464 -2716 0
8799 1464 -2714 0
8799 1464 -2712 0
8799 1464 -2710 0
8799 1464 -2708 0
8799 1464 -2706 0
8799 1464 -2704 0
8799 1464 -2702 0
8799 1464 -2700 0
8799 1464 -2698 0
8799 1464 -2696 0
8799 1464 -2695 0
8799 1466 -3101 0
8799 1466 -2948 -3103 0
8799 1466 -2946 -3105 0
8799 1466 -2944 -3107 0
8799 1466 -2942 -3109 0
8799 1466 -2940 -3111 0
8799 1466 -2938 -3113 0
8799 1466 -2936 -3115 0
8799 1466 -2934 -3117 0
8799 1466 -2932 -3119 0
8799 1466 -2930 -3121 0
8799 1466 -2928 -3123 0
8799 1466 -2926 -3125 0
8799 1466 -2924 -3127 0
8799 1466 -2922 -3129 0
8799 1466 -2920 -3131 0
8799 1466 -2918 -3133 0
8799 1466 -2916 -3135 0
8799 1466 -2914 -3137 0
8799 1466 -2912 -3139 0
8799 1466 -2910 -3141 0
8799 1466 -2908 -3143 0
8799 1466 -2906 -3145 0
8799 1466 -2904 -3147 0
8799 1466 -2902 -3149 0
8799 1466 -2900 -3151 0
8799 1466 -2898 -3153 0
8799 1466 -2896 -3155 0
8799 1466 -2894 -3157 0
8799 1466 -2892 -3159 0
8799 1466 -2890 -3161 0
8799 1466 -2888 -3163 0
8799 1466 -2886 -3165 0
8799 1466 -2884 -3167 0
8799 1466 -2882 -3169 0
8799 1466 -2880 -3171 0
8799 1466 -2878 -3173 0
8799 1466 -2876 -3175 0
8799 1466 -2874 -3177 0
8799 1466 -2872 -3179 0
8799 1466 -2870 -3181 0
8799 1466 -2868 -3183 0
8799 1466 -2866 -3185 0
8799 1466 -2864 -3187 0
8799 1466 -2862 -3189 0
8799 1466 -2860 -3191 0
8799 1466 -2858 -3193 0
8799 1466 -2856 -3195 0
8799 1466 -2854 -3197 0
8799 1466 -2852 -3199 0
8799 1466 -2850 -3201 0
8799 1466 -2848 -3203 0
8799 1466 -2846 0
8799 1466 -2844 0
8799 1466 -2842 0
8799 1466 -2840 0
8799 1466 -2838 0
8799 1466 -2836 0
8799 1466 -2834 0
8799 1466 -2832 0
8799 1466 -2830 0
8799 1466 -2828 0
8799 1466 -2826 0
8799 1466 -2824 0
8799 1466 -2822 0
8799 1466 -2820 0
8799 1466 -2818 0
8799 1466 -2816 0
8799 1466 -2814 0
8799 1466 -2812 0
8799 1466 -2810 0
8799 1466 -2808 0
8799 1466 -2806 0
8799 1466 -2804 0
8799 1466 -2802 0
8799 1466 -2800 0
8799 1466 -2798 0
8799 1466 -2796 0
8799 1466 -2794 0
8799 1466 -2792 0
8799 1466 -2790 0
8799 1466 -2788 0
8799 1466 -2786 0
8799 1466 -2784 0
8799 1466 -2782 0
8799 1466 -2780 0
8799 1466 -2778 0
8799 1466 -2776 0
8799 1466 -2774 0
8799 1466 -2772 0
8799 1466 -2770 0
8799 1466 -2768 0
8799 1466 -2766 0
8799 1466 -2764 0
8799 1466 -2762 0
8799 1466 -2760 0
8799 1466 -2758 0
8799 1466 -2756 0
8799 1466 -2754 0
8799 1466 -2752 0
8799 1466 -2750 0
8799 1466 -2748 0
8799 1466 -2746 0
8799 1466 -2744 0
8799 1466 -2742 0
8799 1466 -2740 0
8799 1466 -2738 0
8799 1466 -2736 0
8799 1466 -2734 0
8799 1466 -2732 0
8799 1466 -2730 0
8799 1466 -2728 0
8799 1466 -2726 0
8799 1466 -2724 0
8799 1466 -2722 0
8799 1466 -2720 0
8799 1466 -2718 0
8799 1466 -2716 0
8799 1466 -2714 0
8799 1466 -2712 0
8799 1466 -2710 0
8799 1466 -2708 0
8799 1466 -2706 0
8799 1466 -2704 0
8799 1466 -2702 0
8799 1466 -2700 0
8799 1466 -2698 0
8799 1466 -2696 0
8799 1466 -2695 0
8799 1468 -3103 0
8799 1468 -2948 -3105 0
8799 1468 -2946 -3107 0
8799 1468 -2944 -3109 0
8799 1468 -2942 -3111 0
8799 1468 -2940 -3113 0
8799 1468 -2938 -3115 0
8799 1468 -2936 -3117 0
8799 1468 -2934 -3119 0
8799 1468 -2932 -3121 0
8799 1468 -2930 -3123 0
8799 1468 -2928 -3125 0
8799 1468 -2926 -3127 0
8799 1468 -2924 -3129 0
8799 1468 -2922 -3131 0
8799 1468 -2920 -3133 0
8799 1468 -2918 -3135 0
8799 1468 -2916 -3137 0
8799 1468 -2914 -3139 0
8799 1468 -2912 -3141 0
8799 1468 -2910 -3143 0
8799 1468 -2908 -3145 0
8799 1468 -2906 -3147 0
8799 1468 -2904 -3149 0
8799 1468 -2902 -3151 0
8799 1468 -2900 -3153 0
8799 1468 -2898 -3155 0
8799 1468 -2896 -3157 0
8799 1468 -2894 -3159 0
8799 1468 -2892 -3161 0
8799 1468 -2890 -3163 0
8799 1468 -2888 -3165 0
8799 1468 -2886 -3167 0
8799 1468 -2884 -3169 0
8799 1468 -2882 -3171 0
8799 1468 -2880 -3173 0
8799 1468 -2878 -3175 0
8799 1468 -2876 -3177 0
8799 1468 -2874 -3179 0
8799 1468 -2872 -3181 0
8799 1468 -2870 -3183 0
8799 1468 -2868 -3185 0
8799 1468 -2866 -3187 0
8799 1468 -2864 -3189 0
8799 1468 -2862 -3191 0
8799 1468 -2860 -3193 0
8799 1468 -2858 -3195 0
8799 1468 -2856 -3197 0
8799 1468 -2854 -3199 0
8799 1468 -2852 -3201 0
8799 1468 -2850 -3203 0
8799 1468 -2848 0
8799 1468 -2846 0
8799 1468 -2844 0
8799 1468 -2842 0
8799 1468 -2840 0
8799 1468 -2838 0
8799 1468 -2836 0
8799 1468 -2834 0
8799 1468 -2832 0
8799 1468 -2830 0
8799 1468 -2828 0
8799 1468 -2826 0
8799 1468 -2824 0
8799 1468 -2822 0
8799 1468 -2820 0
8799 1468 -2818 0
8799 1468 -2816 0
8799 1468 -2814 0
8799 1468 -2812 0
8799 1468 -2810 0
8799 1468 -2808 0
8799 1468 -2806 0
8799 1468 -2804 0
8799 1468 -2802 0
8799 1468 -2800 0
8799 1468 -2798 0
8799 1468 -2796 0
8799 1468 -2794 0
8799 1468 -2792 0
8799 1468 -2790 0
8799 1468 -2788 0
8799 1468 -2786 0
8799 1468 -2784 0
8799 1468 -2782 0
8799 1468 -2780 0
8799 1468 -2778 0
8799 1468 -2776 0
8799 1468 -2774 0
8799 1468 -2772 0
8799 1468 -2770 0
8799 1468 -2768 0
8799 1468 -2766 0
8799 1468 -2764 0
8799 1468 -2762 0
8799 1468 -2760 0
8799 1468 -2758 0
8799 1468 -2756 0
8799 1468 -2754 0
8799 1468 -2752 0
8799 1468 -2750 0
8799 1468 -2748 0
8799 1468 -2746 0
8799 1468 -2744 0
8799 1468 -2742 0
8799 1468 -2740 0
8799 1468 -2738 0
8799 1468 -2736 0
8799 1468 -2734 0
8799 1468 -2732 0
8799 1468 -2730 0
8799 1468 -2728 0
8799 1468 -2726 0
8799 1468 -2724 0
8799 1468 -2722 0
8799 1468 -2720 0
8799 1468 -2718 0
8799 1468 -2716 0
8799 1468 -2714 0
8799 1468 -2712 0
8799 1468 -2710 0
8799 1468 -2708 0
8799 1468 -2706 0
8799 1468 -2704 0
8799 1468 -2702 0
8799 1468 -2700 0
8799 1468 -2698 0
8799 1468 -2696 0
8799 1468 -2695 0
8799 1470 -3105 0
8799 1470 -2948 -3107 0
8799 1470 -2946 -3109 0
8799 1470 -2944 -3111 0
8799 1470 -2942 -3113 0
8799 1470 -2940 -3115 0
8799 1470 -2938 -3117 0
8799 1470 -2936 -3119 0
8799 1470 -2934 -3121 0
8799 1470 -2932 -3123 0
8799 1470 -2930 -3125 0
8799 1470 -2928 -3127 0
8799 1470 -2926 -3129 0
8799 1470 -2924 -3131 0
8799 1470 -2922 -3133 0
8799 1470 -2920 -3135 0
8799 1470 -2918 -3137 0
8799 1470 -2916 -3139 0
8799 1470 -2914 -3141 0
8799 1470 -2912 -3143 0
8799 1470 -2910 -3145 0
8799 1470 -2908 -3147 0
8799 1470 -2906 -3149 0
8799 1470 -2904 -3151 0
8799 1470 -2902 -3153 0
8799 1470 -2900 -3155 0
8799 1470 -2898 -3157 0
8799 1470 -2896 -3159 0
8799 1470 -2894 -3161 0
8799 1470 -2892 -3163 0
8799 1470 -2890 -3165 0
8799 1470 -2888 -3167 0
8799 1470 -2886 -3169 0
8799 1470 -2884 -3171 0
8799 1470 -2882 -3173 0
8799 1470 -2880 -3175 0
8799 1470 -2878 -3177 0
8799 1470 -2876 -3179 0
8799 1470 -2874 -3181 0
8799 1470 -2872 -3183 0
8799 1470 -2870 -3185 0
8799 1470 -2868 -3187 0
8799 1470 -2866 -3189 0
8799 1470 -2864 -3191 0
8799 1470 -2862 -3193 0
8799 1470 -2860 -3195 0
8799 1470 -2858 -3197 0
8799 1470 -2856 -3199 0
8799 1470 -2854 -3201 0
8799 1470 -2852 -3203 0
8799 1470 -2850 0
8799 1470 -2848 0
8799 1470 -2846 0
8799 1470 -2844 0
8799 1470 -2842 0
8799 1470 -2840 0
8799 1470 -2838 0
8799 1470 -2836 0
8799 1470 -2834 0
8799 1470 -2832 0
8799 1470 -2830 0
8799 1470 -2828 0
8799 1470 -2826 0
8799 1470 -2824 0
8799 1470 -2822 0
8799 1470 -2820 0
8799 1470 -2818 0
8799 1470 -2816 0
8799 1470 -2814 0
8799 1470 -2812 0
8799 1470 -2810 0
8799 1470 -2808 0
8799 1470 -2806 0
8799 1470 -2804 0
8799 1470 -2802 0
8799 1470 -2800 0
8799 1470 -2798 0
8799 1470 -2796 0
8799 1470 -2794 0
8799 1470 -2792 0
8799 1470 -2790 0
8799 1470 -2788 0
8799 1470 -2786 0
8799 1470 -2784 0
8799 1470 -2782 0
8799 1470 -2780 0
8799 1470 -2778 0
8799 1470 -2776 0
8799 1470 -2774 0
8799 1470 -2772 0
8799 1470 -2770 0
8799 1470 -2768 0
8799 1470 -2766 0
8799 1470 -2764 0
8799 1470 -2762 0
8799 1470 -2760 0
8799 1470 -2758 0
8799 1470 -2756 0
8799 1470 -2754 0
8799 1470 -2752 0
8799 1470 -2750 0
8799 1470 -2748 0
8799 1470 -2746 0
8799 1470 -2744 0
8799 1470 -2742 0
8799 1470 -2740 0
8799 1470 -2738 0
8799 1470 -2736 0
8799 1470 -2734 0
8799 1470 -2732 0
8799 1470 -2730 0
8799 1470 -2728 0
8799 1470 -2726 0
8799 1470 -2724 0
8799 1470 -2722 0
8799 1470 -2720 0
8799 1470 -2718 0
8799 1470 -2716 0
8799 1470 -2714 0
8799 1470 -2712 0
8799 1470 -2710 0
8799 1470 -2708 0
8799 1470 -2706 0
8799 1470 -2704 0
8799 1470 -2702 0
8799 1470 -2700 0
8799 1470 -2698 0
8799 1470 -2696 0
8799 1470 -2695 0
8799 1472 -3107 0
8799 1472 -2948 -3109 0
8799 1472 -2946 -3111 0
8799 1472 -2944 -3113 0
8799 1472 -2942 -3115 0
8799 1472 -2940 -3117 0
8799 1472 -2938 -3119 0
8799 1472 -2936 -3121 0
8799 1472 -2934 -3123 0
8799 1472 -2932 -3125 0
8799 1472 -2930 -3127 0
8799 1472 -2928 -3129 0
8799 1472 -2926 -3131 0
8799 1472 -2924 -3133 0
8799 1472 -2922 -3135 0
8799 1472 -2920 -3137 0
8799 1472 -2918 -3139 0
8799 1472 -2916 -3141 0
8799 1472 -2914 -3143 0
8799 1472 -2912 -3145 0
8799 1472 -2910 -3147 0
8799 1472 -2908 -3149 0
8799 1472 -2906 -3151 0
8799 1472 -2904 -3153 0
8799 1472 -2902 -3155 0
8799 1472 -2900 -3157 0
8799 1472 -2898 -3159 0
8799 1472 -2896 -3161 0
8799 1472 -2894 -3163 0
8799 1472 -2892 -3165 0
8799 1472 -2890 -3167 0
8799 1472 -2888 -3169 0
8799 1472 -2886 -3171 0
8799 1472 -2884 -3173 0
8799 1472 -2882 -3175 0
8799 1472 -2880 -3177 0
8799 1472 -2878 -3179 0
8799 1472 -2876 -3181 0
8799 1472 -2874 -3183 0
8799 1472 -2872 -3185 0
8799 1472 -2870 -3187 0
8799 1472 -2868 -3189 0
8799 1472 -2866 -3191 0
8799 1472 -2864 -3193 0
8799 1472 -2862 -3195 0
8799 1472 -2860 -3197 0
8799 1472 -2858 -3199 0
8799 1472 -2856 -3201 0
8799 1472 -2854 -3203 0
8799 1472 -2852 0
8799 1472 -2850 0
8799 1472 -2848 0
8799 1472 -2846 0
8799 1472 -2844 0
8799 1472 -2842 0
8799 1472 -2840 0
8799 1472 -2838 0
8799 1472 -2836 0
8799 1472 -2834 0
8799 1472 -2832 0
8799 1472 -2830 0
8799 1472 -2828 0
8799 1472 -2826 0
8799 1472 -2824 0
8799 1472 -2822 0
8799 1472 -2820 0
8799 1472 -2818 0
8799 1472 -2816 0
8799 1472 -2814 0
8799 1472 -2812 0
8799 1472 -2810 0
8799 1472 -2808 0
8799 1472 -2806 0
8799 1472 -2804 0
8799 1472 -2802 0
8799 1472 -2800 0
8799 1472 -2798 0
8799 1472 -2796 0
8799 1472 -2794 0
8799 1472 -2792 0
8799 1472 -2790 0
8799 1472 -2788 0
8799 1472 -2786 0
8799 1472 -2784 0
8799 1472 -2782 0
8799 1472 -2780 0
8799 1472 -2778 0
8799 1472 -2776 0
8799 1472 -2774 0
8799 1472 -2772 0
8799 1472 -2770 0
8799 1472 -2768 0
8799 1472 -2766 0
8799 1472 -2764 0
8799 1472 -2762 0
8799 1472 -2760 0
8799 1472 -2758 0
8799 1472 -2756 0
8799 1472 -2754 0
8799 1472 -2752 0
8799 1472 -2750 0
8799 1472 -2748 0
8799 1472 -2746 0
8799 1472 -2744 0
8799 1472 -2742 0
8799 1472 -2740 0
8799 1472 -2738 0
8799 1472 -2736 0
8799 1472 -2734 0
8799 1472 -2732 0
8799 1472 -2730 0
8799 1472 -2728 0
8799 1472 -2726 0
8799 1472 -2724 0
8799 1472 -2722 0
8799 1472 -2720 0
8799 1472 -2718 0
8799 1472 -2716 0
8799 1472 -2714 0
8799 1472 -2712 0
8799 1472 -2710 0
8799 1472 -2708 0
8799 1472 -2706 0
8799 1472 -2704 0
8799 1472 -2702 0
8799 1472 -2700 0
8799 1472 -2698 0
8799 1472 -2696 0
8799 1472 -2695 0
8799 1474 -3109 0
8799 1474 -2948 -3111 0
8799 1474 -2946 -3113 0
8799 1474 -2944 -3115 0
8799 1474 -2942 -3117 0
8799 1474 -2940 -3119 0
8799 1474 -2938 -3121 0
8799 1474 -2936 -3123 0
8799 1474 -2934 -3125 0
8799 1474 -2932 -3127 0
8799 1474 -2930 -3129 0
8799 1474 -2928 -3131 0
8799 1474 -2926 -3133 0
8799 1474 -2924 -3135 0
8799 1474 -2922 -3137 0
8799 1474 -2920 -3139 0
8799 1474 -2918 -3141 0
8799 1474 -2916 -3143 0
8799 1474 -2914 -3145 0
8799 1474 -2912 -3147 0
8799 1474 -2910 -3149 0
8799 1474 -2908 -3151 0
8799 1474 -2906 -3153 0
8799 1474 -2904 -3155 0
8799 1474 -2902 -3157 0
8799 1474 -2900 -3159 0
8799 1474 -2898 -3161 0
8799 1474 -2896 -3163 0
8799 1474 -2894 -3165 0
8799 1474 -2892 -3167 0
8799 1474 -2890 -3169 0
8799 1474 -2888 -3171 0
8799 1474 -2886 -3173 0
8799 1474 -2884 -3175 0
8799 1474 -2882 -3177 0
8799 1474 -2880 -3179 0
8799 1474 -2878 -3181 0
8799 1474 -2876 -3183 0
8799 1474 -2874 -3185 0
8799 1474 -2872 -3187 0
8799 1474 -2870 -3189 0
8799 1474 -2868 -3191 0
8799 1474 -2866 -3193 0
8799 1474 -2864 -3195 0
8799 1474 -2862 -3197 0
8799 1474 -2860 -3199 0
8799 1474 -2858 -3201 0
8799 1474 -2856 -3203 0
8799 1474 -2854 0
8799 1474 -2852 0
8799 1474 -2850 0
8799 1474 -2848 0
8799 1474 -2846 0
8799 1474 -2844 0
8799 1474 -2842 0
8799 1474 -2840 0
8799 1474 -2838 0
8799 1474 -2836 0
8799 1474 -2834 0
8799 1474 -2832 0
8799 1474 -2830 0
8799 1474 -2828 0
8799 1474 -2826 0
8799 1474 -2824 0
8799 1474 -2822 0
8799 1474 -2820 0
8799 1474 -2818 0
8799 1474 -2816 0
8799 1474 -2814 0
8799 1474 -2812 0
8799 1474 -2810 0
8799 1474 -2808 0
8799 1474 -2806 0
8799 1474 -2804 0
8799 1474 -2802 0
8799 1474 -2800 0
8799 1474 -2798 0
8799 1474 -2796 0
8799 1474 -2794 0
8799 1474 -2792 0
8799 1474 -2790 0
8799 1474 -2788 0
8799 1474 -2786 0
8799 1474 -2784 0
8799 1474 -2782 0
8799 1474 -2780 0
8799 1474 -2778 0
8799 1474 -2776 0
8799 1474 -2774 0
8799 1474 -2772 0
8799 1474 -2770 0
8799 1474 -2768 0
8799 1474 -2766 0
8799 1474 -2764 0
8799 1474 -2762 0
8799 1474 -2760 0
8799 1474 -2758 0
8799 1474 -2756 0
8799 1474 -2754 0
8799 1474 -2752 0
8799 1474 -2750 0
8799 1474 -2748 0
8799 1474 -2746 0
8799 1474 -2744 0
8799 1474 -2742 0
8799 1474 -2740 0
8799 1474 -2738 0
8799 1474 -2736 0
8799 1474 -2734 0
8799 1474 -2732 0
8799 1474 -2730 0
8799 1474 -2728 0
8799 1474 -2726 0
8799 1474 -2724 0
8799 1474 -2722 0
8799 1474 -2720 0
8799 1474 -2718 0
8799 1474 -2716 0
8799 1474 -2714 0
8799 1474 -2712 0
8799 1474 -2710 0
8799 1474 -2708 0
8799 1474 -2706 0
8799 1474 -2704 0
8799 1474 -2702 0
8799 1474 -2700 0
8799 1474 -2698 0
8799 1474 -2696 0
8799 1474 -2695 0
8799 1476 -3111 0
8799 1476 -2948 -3113 0
8799 1476 -2946 -3115 0
8799 1476 -2944 -3117 0
8799 1476 -2942 -3119 0
8799 1476 -2940 -3121 0
8799 1476 -2938 -3123 0
8799 1476 -2936 -3125 0
8799 1476 -2934 -3127 0
8799 1476 -2932 -3129 0
8799 1476 -2930 -3131 0
8799 1476 -2928 -3133 0
8799 1476 -2926 -3135 0
8799 1476 -2924 -3137 0
8799 1476 -2922 -3139 0
8799 1476 -2920 -3141 0
8799 1476 -2918 -3143 0
8799 1476 -2916 -3145 0
8799 1476 -2914 -3147 0
8799 1476 -2912 -3149 0
8799 1476 -2910 -3151 0
8799 1476 -2908 -3153 0
8799 1476 -2906 -3155 0
8799 1476 -2904 -3157 0
8799 1476 -2902 -3159 0
8799 1476 -2900 -3161 0
8799 1476 -2898 -3163 0
8799 1476 -2896 -3165 0
8799 1476 -2894 -3167 0
8799 1476 -2892 -3169 0
8799 1476 -2890 -3171 0
8799 1476 -2888 -3173 0
8799 1476 -2886 -3175 0
8799 1476 -2884 -3177 0
8799 1476 -2882 -3179 0
8799 1476 -2880 -3181 0
8799 1476 -2878 -3183 0
8799 1476 -2876 -3185 0
8799 1476 -2874 -3187 0
8799 1476 -2872 -3189 0
8799 1476 -2870 -3191 0
8799 1476 -2868 -3193 0
8799 1476 -2866 -3195 0
8799 1476 -2864 -3197 0
8799 1476 -2862 -3199 0
8799 1476 -2860 -3201 0
8799 1476 -2858 -3203 0
8799 1476 -2856 0
8799 1476 -2854 0
8799 1476 -2852 0
8799 1476 -2850 0
8799 1476 -2848 0
8799 1476 -2846 0
8799 1476 -2844 0
8799 1476 -2842 0
8799 1476 -2840 0
8799 1476 -2838 0
8799 1476 -2836 0
8799 1476 -2834 0
8799 1476 -2832 0
8799 1476 -2830 0
8799 1476 -2828 0
8799 1476 -2826 0
8799 1476 -2824 0
8799 1476 -2822 0
8799 1476 -2820 0
8799 1476 -2818 0
8799 1476 -2816 0
8799 1476 -2814 0
8799 1476 -2812 0
8799 1476 -2810 0
8799 1476 -2808 0
8799 1476 -2806 0
8799 1476 -2804 0
8799 1476 -2802 0
8799 1476 -2800 0
8799 1476 -2798 0
8799 1476 -2796 0
8799 1476 -2794 0
8799 1476 -2792 0
8799 1476 -2790 0
8799 1476 -2788 0
8799 1476 -2786 0
8799 1476 -2784 0
8799 1476 -2782 0
8799 1476 -2780 0
8799 1476 -2778 0
8799 1476 -2776 0
8799 1476 -2774 0
8799 1476 -2772 0
8799 1476 -2770 0
8799 1476 -2768 0
8799 1476 -2766 0
8799 1476 -2764 0
8799 1476 -2762 0
8799 1476 -2760 0
8799 1476 -2758 0
8799 1476 -2756 0
8799 1476 -2754 0
8799 1476 -2752 0
8799 1476 -2750 0
8799 1476 -2748 0
8799 1476 -2746 0
8799 1476 -2744 0
8799 1476 -2742 0
8799 1476 -2740 0
8799 1476 -2738 0
8799 1476 -2736 0
8799 1476 -2734 0
8799 1476 -2732 0
8799 1476 -2730 0
8799 1476 -2728 0
8799 1476 -2726 0
8799 1476 -2724 0
8799 1476 -2722 0
8799 1476 -2720 0
8799 1476 -2718 0
8799 1476 -2716 0
8799 1476 -2714 0
8799 1476 -2712 0
8799 1476 -2710 0
8799 1476 -2708 0
8799 1476 -2706 0
8799 1476 -2704 0
8799 1476 -2702 0
8799 1476 -2700 0
8799 1476 -2698 0
8799 1476 -2696 0
8799 1476 -2695 0
8799 1478 -3113 0
8799 1478 -2948 -3115 0
8799 1478 -2946 -3117 0
8799 1478 -2944 -3119 0
8799 1478 -2942 -3121 0
8799 1478 -2940 -3123 0
8799 1478 -2938 -3125 0
8799 1478 -2936 -3127 0
8799 1478 -2934 -3129 0
8799 1478 -2932 -3131 0
8799 1478 -2930 -3133 0
8799 1478 -2928 -3135 0
8799 1478 -2926 -3137 0
8799 1478 -2924 -3139 0
8799 1478 -2922 -3141 0
8799 1478 -2920 -3143 0
8799 1478 -2918 -3145 0
8799 1478 -2916 -3147 0
8799 1478 -2914 -3149 0
8799 1478 -2912 -3151 0
8799 1478 -2910 -3153 0
8799 1478 -2908 -3155 0
8799 1478 -2906 -3157 0
8799 1478 -2904 -3159 0
8799 1478 -2902 -3161 0
8799 1478 -2900 -3163 0
8799 1478 -2898 -3165 0
8799 1478 -2896 -3167 0
8799 1478 -2894 -3169 0
8799 1478 -2892 -3171 0
8799 1478 -2890 -3173 0
8799 1478 -2888 -3175 0
8799 1478 -2886 -3177 0
8799 1478 -2884 -3179 0
8799 1478 -2882 -3181 0
8799 1478 -2880 -3183 0
8799 1478 -2878 -3185 0
8799 1478 -2876 -3187 0
8799 1478 -2874 -3189 0
8799 1478 -2872 -3191 0
8799 1478 -2870 -3193 0
8799 1478 -2868 -3195 0
8799 1478 -2866 -3197 0
8799 1478 -2864 -3199 0
8799 1478 -2862 -3201 0
8799 1478 -2860 -3203 0
8799 1478 -2858 0
8799 1478 -2856 0
8799 1478 -2854 0
8799 1478 -2852 0
8799 1478 -2850 0
8799 1478 -2848 0
8799 1478 -2846 0
8799 1478 -2844 0
8799 1478 -2842 0
8799 1478 -2840 0
8799 1478 -2838 0
8799 1478 -2836 0
8799 1478 -2834 0
8799 1478 -2832 0
8799 1478 -2830 0
8799 1478 -2828 0
8799 1478 -2826 0
8799 1478 -2824 0
8799 1478 -2822 0
8799 1478 -2820 0
8799 1478 -2818 0
8799 1478 -2816 0
8799 1478 -2814 0
8799 1478 -2812 0
8799 1478 -2810 0
8799 1478 -2808 0
8799 1478 -2806 0
8799 1478 -2804 0
8799 1478 -2802 0
8799 1478 -2800 0
8799 1478 -2798 0
8799 1478 -2796 0
8799 1478 -2794 0
8799 1478 -2792 0
8799 1478 -2790 0
8799 1478 -2788 0
8799 1478 -2786 0
8799 1478 -2784 0
8799 1478 -2782 0
8799 1478 -2780 0
8799 1478 -2778 0
8799 1478 -2776 0
8799 1478 -2774 0
8799 1478 -2772 0
8799 1478 -2770 0
8799 1478 -2768 0
8799 1478 -2766 0
8799 1478 -2764 0
8799 1478 -2762 0
8799 1478 -2760 0
8799 1478 -2758 0
8799 1478 -2756 0
8799 1478 -2754 0
8799 1478 -2752 0
8799 1478 -2750 0
8799 1478 -2748 0
8799 1478 -2746 0
8799 1478 -2744 0
8799 1478 -2742 0
8799 1478 -2740 0
8799 1478 -2738 0
8799 1478 -2736 0
8799 1478 -2734 0
8799 1478 -2732 0
8799 1478 -2730 0
8799 1478 -2728 0
8799 1478 -2726 0
8799 1478 -2724 0
8799 1478 -2722 0
8799 1478 -2720 0
8799 1478 -2718 0
8799 1478 -2716 0
8799 1478 -2714 0
8799 1478 -2712 0
8799 1478 -2710 0
8799 1478 -2708 0
8799 1478 -2706 0
8799 1478 -2704 0
8799 1478 -2702 0
8799 1478 -2700 0
8799 1478 -2698 0
8799 1478 -2696 0
8799 1478 -2695 0
8799 1480 -3115 0
8799 1480 -2948 -3117 0
8799 1480 -2946 -3119 0
8799 1480 -2944 -3121 0
8799 1480 -2942 -3123 0
8799 1480 -2940 -3125 0
8799 1480 -2938 -3127 0
8799 1480 -2936 -3129 0
8799 1480 -2934 -3131 0
8799 1480 -2932 -3133 0
8799 1480 -2930 -3135 0
8799 1480 -2928 -3137 0
8799 1480 -2926 -3139 0
8799 1480 -2924 -3141 0
8799 1480 -2922 -3143 0
8799 1480 -2920 -3145 0
8799 1480 -2918 -3147 0
8799 1480 -2916 -3149 0
8799 1480 -2914 -3151 0
8799 1480 -2912 -3153 0
8799 1480 -2910 -3155 0
8799 1480 -2908 -3157 0
8799 1480 -2906 -3159 0
8799 1480 -2904 -3161 0
8799 1480 -2902 -3163 0
8799 1480 -2900 -3165 0
8799 1480 -2898 -3167 0
8799 1480 -2896 -3169 0
8799 1480 -2894 -3171 0
8799 1480 -2892 -3173 0
8799 1480 -2890 -3175 0
8799 1480 -2888 -3177 0
8799 1480 -2886 -3179 0
8799 1480 -2884 -3181 0
8799 1480 -2882 -3183 0
8799 1480 -2880 -3185 0
8799 1480 -2878 -3187 0
8799 1480 -2876 -3189 0
8799 1480 -2874 -3191 0
8799 1480 -2872 -3193 0
8799 1480 -2870 -3195 0
8799 1480 -2868 -3197 0
8799 1480 -2866 -3199 0
8799 1480 -2864 -3201 0
8799 1480 -2862 -3203 0
8799 1480 -2860 0
8799 1480 -2858 0
8799 1480 -2856 0
8799 1480 -2854 0
8799 1480 -2852 0
8799 1480 -2850 0
8799 1480 -2848 0
8799 1480 -2846 0
8799 1480 -2844 0
8799 1480 -2842 0
8799 1480 -2840 0
8799 1480 -2838 0
8799 1480 -2836 0
8799 1480 -2834 0
8799 1480 -2832 0
8799 1480 -2830 0
8799 1480 -2828 0
8799 1480 -2826 0
8799 1480 -2824 0
8799 1480 -2822 0
8799 1480 -2820 0
8799 1480 -2818 0
8799 1480 -2816 0
8799 1480 -2814 0
8799 1480 -2812 0
8799 1480 -2810 0
8799 1480 -2808 0
8799 1480 -2806 0
8799 1480 -2804 0
8799 1480 -2802 0
8799 1480 -2800 0
8799 1480 -2798 0
8799 1480 -2796 0
8799 1480 -2794 0
8799 1480 -2792 0
8799 1480 -2790 0
8799 1480 -2788 0
8799 1480 -2786 0
8799 1480 -2784 0
8799 1480 -2782 0
8799 1480 -2780 0
8799 1480 -2778 0
8799 1480 -2776 0
8799 1480 -2774 0
8799 1480 -2772 0
8799 1480 -2770 0
8799 1480 -2768 0
8799 1480 -2766 0
8799 1480 -2764 0
8799 1480 -2762 0
8799 1480 -2760 0
8799 1480 -2758 0
8799 1480 -2756 0
8799 1480 -2754 0
8799 1480 -2752 0
8799 1480 -2750 0
8799 1480 -2748 0
8799 1480 -2746 0
8799 1480 -2744 0
8799 1480 -2742 0
8799 1480 -2740 0
8799 1480 -2738 0
8799 1480 -2736 0
8799 1480 -2734 0
8799 1480 -2732 0
8799 1480 -2730 0
8799 1480 -2728 0
8799 1480 -2726 0
8799 1480 -2724 0
8799 1480 -2722 0
8799 1480 -2720 0
8799 1480 -2718 0
8799 1480 -2716 0
8799 1480 -2714 0
8799 1480 -2712 0
8799 1480 -2710 0
8799 1480 -2708 0
8799 1480 -2706 0
8799 1480 -2704 0
8799 1480 -2702 0
8799 1480 -2700 0
8799 1480 -2698 0
8799 1480 -2696 0
8799 1480 -2695 0
8799 1482 -3117 0
8799 1482 -2948 -3119 0
8799 1482 -2946 -3121 0
8799 1482 -2944 -3123 0
8799 1482 -2942 -3125 0
8799 1482 -2940 -3127 0
8799 1482 -2938 -3129 0
8799 1482 -2936 -3131 0
8799 1482 -2934 -3133 0
8799 1482 -2932 -3135 0
8799 1482 -2930 -3137 0
8799 1482 -2928 -3139 0
8799 1482 -2926 -3141 0
8799 1482 -2924 -3143 0
8799 1482 -2922 -3145 0
8799 1482 -2920 -3147 0
8799 1482 -2918 -3149 0
8799 1482 -2916 -3151 0
8799 1482 -2914 -3153 0
8799 1482 -2912 -3155 0
8799 1482 -2910 -3157 0
8799 1482 -2908 -3159 0
8799 1482 -2906 -3161 0
8799 1482 -2904 -3163 0
8799 1482 -2902 -3165 0
8799 1482 -2900 -3167 0
8799 1482 -2898 -3169 0
8799 1482 -2896 -3171 0
8799 1482 -2894 -3173 0
8799 1482 -2892 -3175 0
8799 1482 -2890 -3177 0
8799 1482 -2888 -3179 0
8799 1482 -2886 -3181 0
8799 1482 -2884 -3183 0
8799 1482 -2882 -3185 0
8799 1482 -2880 -3187 0
8799 1482 -2878 -3189 0
8799 1482 -2876 -3191 0
8799 1482 -2874 -3193 0
8799 1482 -2872 -3195 0
8799 1482 -2870 -3197 0
8799 1482 -2868 -3199 0
8799 1482 -2866 -3201 0
8799 1482 -2864 -3203 0
8799 1482 -2862 0
8799 1482 -2860 0
8799 1482 -2858 0
8799 1482 -2856 0
8799 1482 -2854 0
8799 1482 -2852 0
8799 1482 -2850 0
8799 1482 -2848 0
8799 1482 -2846 0
8799 1482 -2844 0
8799 1482 -2842 0
8799 1482 -2840 0
8799 1482 -2838 0
8799 1482 -2836 0
8799 1482 -2834 0
8799 1482 -2832 0
8799 1482 -2830 0
8799 1482 -2828 0
8799 1482 -2826 0
8799 1482 -2824 0
8799 1482 -2822 0
8799 1482 -2820 0
8799 1482 -2818 0
8799 1482 -2816 0
8799 1482 -2814 0
8799 1482 -2812 0
8799 1482 -2810 0
8799 1482 -2808 0
8799 1482 -2806 0
8799 1482 -2804 0
8799 1482 -2802 0
8799 1482 -2800 0
8799 1482 -2798 0
8799 1482 -2796 0
8799 1482 -2794 0
8799 1482 -2792 0
8799 1482 -2790 0
8799 1482 -2788 0
8799 1482 -2786 0
8799 1482 -2784 0
8799 1482 -2782 0
8799 1482 -2780 0
8799 1482 -2778 0
8799 1482 -2776 0
8799 1482 -2774 0
8799 1482 -2772 0
8799 1482 -2770 0
8799 1482 -2768 0
8799 1482 -2766 0
8799 1482 -2764 0
8799 1482 -2762 0
8799 1482 -2760 0
8799 1482 -2758 0
8799 1482 -2756 0
8799 1482 -2754 0
8799 1482 -2752 0
8799 1482 -2750 0
8799 1482 -2748 0
8799 1482 -2746 0
8799 1482 -2744 0
8799 1482 -2742 0
8799 1482 -2740 0
8799 1482 -2738 0
8799 1482 -2736 0
8799 1482 -2734 0
8799 1482 -2732 0
8799 1482 -2730 0
8799 1482 -2728 0
8799 1482 -2726 0
8799 1482 -2724 0
8799 1482 -2722 0
8799 1482 -2720 0
8799 1482 -2718 0
8799 1482 -2716 0
8799 1482 -2714 0
8799 1482 -2712 0
8799 1482 -2710 0
8799 1482 -2708 0
8799 1482 -2706 0
8799 1482 -2704 0
8799 1482 -2702 0
8799 1482 -2700 0
8799 1482 -2698 0
8799 1482 -2696 0
8799 1482 -2695 0
8799 1484 -3119 0
8799 1484 -2948 -3121 0
8799 1484 -2946 -3123 0
8799 1484 -2944 -3125 0
8799 1484 -2942 -3127 0
8799 1484 -2940 -3129 0
8799 1484 -2938 -3131 0
8799 1484 -2936 -3133 0
8799 1484 -2934 -3135 0
8799 1484 -2932 -3137 0
8799 1484 -2930 -3139 0
8799 1484 -2928 -3141 0
8799 1484 -2926 -3143 0
8799 1484 -2924 -3145 0
8799 1484 -2922 -3147 0
8799 1484 -2920 -3149 0
8799 1484 -2918 -3151 0
8799 1484 -2916 -3153 0
8799 1484 -2914 -3155 0
8799 1484 -2912 -3157 0
8799 1484 -2910 -3159 0
8799 1484 -2908 -3161 0
8799 1484 -2906 -3163 0
8799 1484 -2904 -3165 0
8799 1484 -2902 -3167 0
8799 1484 -2900 -3169 0
8799 1484 -2898 -3171 0
8799 1484 -2896 -3173 0
8799 1484 -2894 -3175 0
8799 1484 -2892 -3177 0
8799 1484 -2890 -3179 0
8799 1484 -2888 -3181 0
8799 1484 -2886 -3183 0
8799 1484 -2884 -3185 0
8799 1484 -2882 -3187 0
8799 1484 -2880 -3189 0
8799 1484 -2878 -3191 0
8799 1484 -2876 -3193 0
8799 1484 -2874 -3195 0
8799 1484 -2872 -3197 0
8799 1484 -2870 -3199 0
8799 1484 -2868 -3201 0
8799 1484 -2866 -3203 0
8799 1484 -2864 0
8799 1484 -2862 0
8799 1484 -2860 0
8799 1484 -2858 0
8799 1484 -2856 0
8799 1484 -2854 0
8799 1484 -2852 0
8799 1484 -2850 0
8799 1484 -2848 0
8799 1484 -2846 0
8799 1484 -2844 0
8799 1484 -2842 0
8799 1484 -2840 0
8799 1484 -2838 0
8799 1484 -2836 0
8799 1484 -2834 0
8799 1484 -2832 0
8799 1484 -2830 0
8799 1484 -2828 0
8799 1484 -2826 0
8799 1484 -2824 0
8799 1484 -2822 0
8799 1484 -2820 0
8799 1484 -2818 0
8799 1484 -2816 0
8799 1484 -2814 0
8799 1484 -2812 0
8799 1484 -2810 0
8799 1484 -2808 0
8799 1484 -2806 0
8799 1484 -2804 0
8799 1484 -2802 0
8799 1484 -2800 0
8799 1484 -2798 0
8799 1484 -2796 0
8799 1484 -2794 0
8799 1484 -2792 0
8799 1484 -2790 0
8799 1484 -2788 0
8799 1484 -2786 0
8799 1484 -2784 0
8799 1484 -2782 0
8799 1484 -2780 0
8799 1484 -2778 0
8799 1484 -2776 0
8799 1484 -2774 0
8799 1484 -2772 0
8799 1484 -2770 0
8799 1484 -2768 0
8799 1484 -2766 0
8799 1484 -2764 0
8799 1484 -2762 0
8799 1484 -2760 0
8799 1484 -2758 0
8799 1484 -2756 0
8799 1484 -2754 0
8799 1484 -2752 0
8799 1484 -2750 0
8799 1484 -2748 0
8799 1484 -2746 0
8799 1484 -2744 0
8799 1484 -2742 0
8799 1484 -2740 0
8799 1484 -2738 0
8799 1484 -2736 0
8799 1484 -2734 0
8799 1484 -2732 0
8799 1484 -2730 0
8799 1484 -2728 0
8799 1484 -2726 0
8799 1484 -2724 0
8799 1484 -2722 0
8799 1484 -2720 0
8799 1484 -2718 0
8799 1484 -2716 0
8799 1484 -2714 0
8799 1484 -2712 0
8799 1484 -2710 0
8799 1484 -2708 0
8799 1484 -2706 0
8799 1484 -2704 0
8799 1484 -2702 0
8799 1484 -2700 0
8799 1484 -2698 0
8799 1484 -2696 0
8799 1484 -2695 0
8799 1486 -3121 0
8799 1486 -2948 -3123 0
8799 1486 -2946 -3125 0
8799 1486 -2944 -3127 0
8799 1486 -2942 -3129 0
8799 1486 -2940 -3131 0
8799 1486 -2938 -3133 0
8799 1486 -2936 -3135 0
8799 1486 -2934 -3137 0
8799 1486 -2932 -3139 0
8799 1486 -2930 -3141 0
8799 1486 -2928 -3143 0
8799 1486 -2926 -3145 0
8799 1486 -2924 -3147 0
8799 1486 -2922 -3149 0
8799 1486 -2920 -3151 0
8799 1486 -2918 -3153 0
8799 1486 -2916 -3155 0
8799 1486 -2914 -3157 0
8799 1486 -2912 -3159 0
8799 1486 -2910 -3161 0
8799 1486 -2908 -3163 0
8799 1486 -2906 -3165 0
8799 1486 -2904 -3167 0
8799 1486 -2902 -3169 0
8799 1486 -2900 -3171 0
8799 1486 -2898 -3173 0
8799 1486 -2896 -3175 0
8799 1486 -2894 -3177 0
8799 1486 -2892 -3179 0
8799 1486 -2890 -3181 0
8799 1486 -2888 -3183 0
8799 1486 -2886 -3185 0
8799 1486 -2884 -3187 0
8799 1486 -2882 -3189 0
8799 1486 -2880 -3191 0
8799 1486 -2878 -3193 0
8799 1486 -2876 -3195 0
8799 1486 -2874 -3197 0
8799 1486 -2872 -3199 0
8799 1486 -2870 -3201 0
8799 1486 -2868 -3203 0
8799 1486 -2866 0
8799 1486 -2864 0
8799 1486 -2862 0
8799 1486 -2860 0
8799 1486 -2858 0
8799 1486 -2856 0
8799 1486 -2854 0
8799 1486 -2852 0
8799 1486 -2850 0
8799 1486 -2848 0
8799 1486 -2846 0
8799 1486 -2844 0
8799 1486 -2842 0
8799 1486 -2840 0
8799 1486 -2838 0
8799 1486 -2836 0
8799 1486 -2834 0
8799 1486 -2832 0
8799 1486 -2830 0
8799 1486 -2828 0
8799 1486 -2826 0
8799 1486 -2824 0
8799 1486 -2822 0
8799 1486 -2820 0
8799 1486 -2818 0
8799 1486 -2816 0
8799 1486 -2814 0
8799 1486 -2812 0
8799 1486 -2810 0
8799 1486 -2808 0
8799 1486 -2806 0
8799 1486 -2804 0
8799 1486 -2802 0
8799 1486 -2800 0
8799 1486 -2798 0
8799 1486 -2796 0
8799 1486 -2794 0
8799 1486 -2792 0
8799 1486 -2790 0
8799 1486 -2788 0
8799 1486 -2786 0
8799 1486 -2784 0
8799 1486 -2782 0
8799 1486 -2780 0
8799 1486 -2778 0
8799 1486 -2776 0
8799 1486 -2774 0
8799 1486 -2772 0
8799 1486 -2770 0
8799 1486 -2768 0
8799 1486 -2766 0
8799 1486 -2764 0
8799 1486 -2762 0
8799 1486 -2760 0
8799 1486 -2758 0
8799 1486 -2756 0
8799 1486 -2754 0
8799 1486 -2752 0
8799 1486 -2750 0
8799 1486 -2748 0
8799 1486 -2746 0
8799 1486 -2744 0
8799 1486 -2742 0
8799 1486 -2740 0
8799 1486 -2738 0
8799 1486 -2736 0
8799 1486 -2734 0
8799 1486 -2732 0
8799 1486 -2730 0
8799 1486 -2728 0
8799 1486 -2726 0
8799 1486 -2724 0
8799 1486 -2722 0
8799 1486 -2720 0
8799 1486 -2718 0
8799 1486 -2716 0
8799 1486 -2714 0
8799 1486 -2712 0
8799 1486 -2710 0
8799 1486 -2708 0
8799 1486 -2706 0
8799 1486 -2704 0
8799 1486 -2702 0
8799 1486 -2700 0
8799 1486 -2698 0
8799 1486 -2696 0
8799 1486 -2695 0
8799 1488 -3123 0
8799 1488 -2948 -3125 0
8799 1488 -2946 -3127 0
8799 1488 -2944 -3129 0
8799 1488 -2942 -3131 0
8799 1488 -2940 -3133 0
8799 1488 -2938 -3135 0
8799 1488 -2936 -3137 0
8799 1488 -2934 -3139 0
8799 1488 -2932 -3141 0
8799 1488 -2930 -3143 0
8799 1488 -2928 -3145 0
8799 1488 -2926 -3147 0
8799 1488 -2924 -3149 0
8799 1488 -2922 -3151 0
8799 1488 -2920 -3153 0
8799 1488 -2918 -3155 0
8799 1488 -2916 -3157 0
8799 1488 -2914 -3159 0
8799 1488 -2912 -3161 0
8799 1488 -2910 -3163 0
8799 1488 -2908 -3165 0
8799 1488 -2906 -3167 0
8799 1488 -2904 -3169 0
8799 1488 -2902 -3171 0
8799 1488 -2900 -3173 0
8799 1488 -2898 -3175 0
8799 1488 -2896 -3177 0
8799 1488 -2894 -3179 0
8799 1488 -2892 -3181 0
8799 1488 -2890 -3183 0
8799 1488 -2888 -3185 0
8799 1488 -2886 -3187 0
8799 1488 -2884 -3189 0
8799 1488 -2882 -3191 0
8799 1488 -2880 -3193 0
8799 1488 -2878 -3195 0
8799 1488 -2876 -3197 0
8799 1488 -2874 -3199 0
8799 1488 -2872 -3201 0
8799 1488 -2870 -3203 0
8799 1488 -2868 0
8799 1488 -2866 0
8799 1488 -2864 0
8799 1488 -2862 0
8799 1488 -2860 0
8799 1488 -2858 0
8799 1488 -2856 0
8799 1488 -2854 0
8799 1488 -2852 0
8799 1488 -2850 0
8799 1488 -2848 0
8799 1488 -2846 0
8799 1488 -2844 0
8799 1488 -2842 0
8799 1488 -2840 0
8799 1488 -2838 0
8799 1488 -2836 0
8799 1488 -2834 0
8799 1488 -2832 0
8799 1488 -2830 0
8799 1488 -2828 0
8799 1488 -2826 0
8799 1488 -2824 0
8799 1488 -2822 0
8799 1488 -2820 0
8799 1488 -2818 0
8799 1488 -2816 0
8799 1488 -2814 0
8799 1488 -2812 0
8799 1488 -2810 0
8799 1488 -2808 0
8799 1488 -2806 0
8799 1488 -2804 0
8799 1488 -2802 0
8799 1488 -2800 0
8799 1488 -2798 0
8799 1488 -2796 0
8799 1488 -2794 0
8799 1488 -2792 0
8799 1488 -2790 0
8799 1488 -2788 0
8799 1488 -2786 0
8799 1488 -2784 0
8799 1488 -2782 0
8799 1488 -2780 0
8799 1488 -2778 0
8799 1488 -2776 0
8799 1488 -2774 0
8799 1488 -2772 0
8799 1488 -2770 0
8799 1488 -2768 0
8799 1488 -2766 0
8799 1488 -2764 0
8799 1488 -2762 0
8799 1488 -2760 0
8799 1488 -2758 0
8799 1488 -2756 0
8799 1488 -2754 0
8799 1488 -2752 0
8799 1488 -2750 0
8799 1488 -2748 0
8799 1488 -2746 0
8799 1488 -2744 0
8799 1488 -2742 0
8799 1488 -2740 0
8799 1488 -2738 0
8799 1488 -2736 0
8799 1488 -2734 0
8799 1488 -2732 0
8799 1488 -2730 0
8799 1488 -2728 0
8799 1488 -2726 0
8799 1488 -2724 0
8799 1488 -2722 0
8799 1488 -2720 0
8799 1488 -2718 0
8799 1488 -2716 0
8799 1488 -2714 0
8799 1488 -2712 0
8799 1488 -2710 0
8799 1488 -2708 0
8799 1488 -2706 0
8799 1488 -2704 0
8799 1488 -2702 0
8799 1488 -2700 0
8799 1488 -2698 0
8799 1488 -2696 0
8799 1488 -2695 0
8799 1490 -3125 0
8799 1490 -2948 -3127 0
8799 1490 -2946 -3129 0
8799 1490 -2944 -3131 0
8799 1490 -2942 -3133 0
8799 1490 -2940 -3135 0
8799 1490 -2938 -3137 0
8799 1490 -2936 -3139 0
8799 1490 -2934 -3141 0
8799 1490 -2932 -3143 0
8799 1490 -2930 -3145 0
8799 1490 -2928 -3147 0
8799 1490 -2926 -3149 0
8799 1490 -2924 -3151 0
8799 1490 -2922 -3153 0
8799 1490 -2920 -3155 0
8799 1490 -2918 -3157 0
8799 1490 -2916 -3159 0
8799 1490 -2914 -3161 0
8799 1490 -2912 -3163 0
8799 1490 -2910 -3165 0
8799 1490 -2908 -3167 0
8799 1490 -2906 -3169 0
8799 1490 -2904 -3171 0
8799 1490 -2902 -3173 0
8799 1490 -2900 -3175 0
8799 1490 -2898 -3177 0
8799 1490 -2896 -3179 0
8799 1490 -2894 -3181 0
8799 1490 -2892 -3183 0
8799 1490 -2890 -3185 0
8799 1490 -2888 -3187 0
8799 1490 -2886 -3189 0
8799 1490 -2884 -3191 0
8799 1490 -2882 -3193 0
8799 1490 -2880 -3195 0
8799 1490 -2878 -3197 0
8799 1490 -2876 -3199 0
8799 1490 -2874 -3201 0
8799 1490 -2872 -3203 0
8799 1490 -2870 0
8799 1490 -2868 0
8799 1490 -2866 0
8799 1490 -2864 0
8799 1490 -2862 0
8799 1490 -2860 0
8799 1490 -2858 0
8799 1490 -2856 0
8799 1490 -2854 0
8799 1490 -2852 0
8799 1490 -2850 0
8799 1490 -2848 0
8799 1490 -2846 0
8799 1490 -2844 0
8799 1490 -2842 0
8799 1490 -2840 0
8799 1490 -2838 0
8799 1490 -2836 0
8799 1490 -2834 0
8799 1490 -2832 0
8799 1490 -2830 0
8799 1490 -2828 0
8799 1490 -2826 0
8799 1490 -2824 0
8799 1490 -2822 0
8799 1490 -2820 0
8799 1490 -2818 0
8799 1490 -2816 0
8799 1490 -2814 0
8799 1490 -2812 0
8799 1490 -2810 0
8799 1490 -2808 0
8799 1490 -2806 0
8799 1490 -2804 0
8799 1490 -2802 0
8799 1490 -2800 0
8799 1490 -2798 0
8799 1490 -2796 0
8799 1490 -2794 0
8799 1490 -2792 0
8799 1490 -2790 0
8799 1490 -2788 0
8799 1490 -2786 0
8799 1490 -2784 0
8799 1490 -2782 0
8799 1490 -2780 0
8799 1490 -2778 0
8799 1490 -2776 0
8799 1490 -2774 0
8799 1490 -2772 0
8799 1490 -2770 0
8799 1490 -2768 0
8799 1490 -2766 0
8799 1490 -2764 0
8799 1490 -2762 0
8799 1490 -2760 0
8799 1490 -2758 0
8799 1490 -2756 0
8799 1490 -2754 0
8799 1490 -2752 0
8799 1490 -2750 0
8799 1490 -2748 0
8799 1490 -2746 0
8799 1490 -2744 0
8799 1490 -2742 0
8799 1490 -2740 0
8799 1490 -2738 0
8799 1490 -2736 0
8799 1490 -2734 0
8799 1490 -2732 0
8799 1490 -2730 0
8799 1490 -2728 0
8799 1490 -2726 0
8799 1490 -2724 0
8799 1490 -2722 0
8799 1490 -2720 0
8799 1490 -2718 0
8799 1490 -2716 0
8799 1490 -2714 0
8799 1490 -2712 0
8799 1490 -2710 0
8799 1490 -2708 0
8799 1490 -2706 0
8799 1490 -2704 0
8799 1490 -2702 0
8799 1490 -2700 0
8799 1490 -2698 0
8799 1490 -2696 0
8799 1490 -2695 0
8799 1492 -3127 0
8799 1492 -2948 -3129 0
8799 1492 -2946 -3131 0
8799 1492 -2944 -3133 0
8799 1492 -2942 -3135 0
8799 1492 -2940 -3137 0
8799 1492 -2938 -3139 0
8799 1492 -2936 -3141 0
8799 1492 -2934 -3143 0
8799 1492 -2932 -3145 0
8799 1492 -2930 -3147 0
8799 1492 -2928 -3149 0
8799 1492 -2926 -3151 0
8799 1492 -2924 -3153 0
8799 1492 -2922 -3155 0
8799 1492 -2920 -3157 0
8799 1492 -2918 -3159 0
8799 1492 -2916 -3161 0
8799 1492 -2914 -3163 0
8799 1492 -2912 -3165 0
8799 1492 -2910 -3167 0
8799 1492 -2908 -3169 0
8799 1492 -2906 -3171 0
8799 1492 -2904 -3173 0
8799 1492 -2902 -3175 0
8799 1492 -2900 -3177 0
8799 1492 -2898 -3179 0
8799 1492 -2896 -3181 0
8799 1492 -2894 -3183 0
8799 1492 -2892 -3185 0
8799 1492 -2890 -3187 0
8799 1492 -2888 -3189 0
8799 1492 -2886 -3191 0
8799 1492 -2884 -3193 0
8799 1492 -2882 -3195 0
8799 1492 -2880 -3197 0
8799 1492 -2878 -3199 0
8799 1492 -2876 -3201 0
8799 1492 -2874 -3203 0
8799 1492 -2872 0
8799 1492 -2870 0
8799 1492 -2868 0
8799 1492 -2866 0
8799 1492 -2864 0
8799 1492 -2862 0
8799 1492 -2860 0
8799 1492 -2858 0
8799 1492 -2856 0
8799 1492 -2854 0
8799 1492 -2852 0
8799 1492 -2850 0
8799 1492 -2848 0
8799 1492 -2846 0
8799 1492 -2844 0
8799 1492 -2842 0
8799 1492 -2840 0
8799 1492 -2838 0
8799 1492 -2836 0
8799 1492 -2834 0
8799 1492 -2832 0
8799 1492 -2830 0
8799 1492 -2828 0
8799 1492 -2826 0
8799 1492 -2824 0
8799 1492 -2822 0
8799 1492 -2820 0
8799 1492 -2818 0
8799 1492 -2816 0
8799 1492 -2814 0
8799 1492 -2812 0
8799 1492 -2810 0
8799 1492 -2808 0
8799 1492 -2806 0
8799 1492 -2804 0
8799 1492 -2802 0
8799 1492 -2800 0
8799 1492 -2798 0
8799 1492 -2796 0
8799 1492 -2794 0
8799 1492 -2792 0
8799 1492 -2790 0
8799 1492 -2788 0
8799 1492 -2786 0
8799 1492 -2784 0
8799 1492 -2782 0
8799 1492 -2780 0
8799 1492 -2778 0
8799 1492 -2776 0
8799 1492 -2774 0
8799 1492 -2772 0
8799 1492 -2770 0
8799 1492 -2768 0
8799 1492 -2766 0
8799 1492 -2764 0
8799 1492 -2762 0
8799 1492 -2760 0
8799 1492 -2758 0
8799 1492 -2756 0
8799 1492 -2754 0
8799 1492 -2752 0
8799 1492 -2750 0
8799 1492 -2748 0
8799 1492 -2746 0
8799 1492 -2744 0
8799 1492 -2742 0
8799 1492 -2740 0
8799 1492 -2738 0
8799 1492 -2736 0
8799 1492 -2734 0
8799 1492 -2732 0
8799 1492 -2730 0
8799 1492 -2728 0
8799 1492 -2726 0
8799 1492 -2724 0
8799 1492 -2722 0
8799 1492 -2720 0
8799 1492 -2718 0
8799 1492 -2716 0
8799 1492 -2714 0
8799 1492 -2712 0
8799 1492 -2710 0
8799 1492 -2708 0
8799 1492 -2706 0
8799 1492 -2704 0
8799 1492 -2702 0
8799 1492 -2700 0
8799 1492 -2698 0
8799 1492 -2696 0
8799 1492 -2695 0
8799 1494 -3129 0
8799 1494 -2948 -3131 0
8799 1494 -2946 -3133 0
8799 1494 -2944 -3135 0
8799 1494 -2942 -3137 0
8799 1494 -2940 -3139 0
8799 1494 -2938 -3141 0
8799 1494 -2936 -3143 0
8799 1494 -2934 -3145 0
8799 1494 -2932 -3147 0
8799 1494 -2930 -3149 0
8799 1494 -2928 -3151 0
8799 1494 -2926 -3153 0
8799 1494 -2924 -3155 0
8799 1494 -2922 -3157 0
8799 1494 -2920 -3159 0
8799 1494 -2918 -3161 0
8799 1494 -2916 -3163 0
8799 1494 -2914 -3165 0
8799 1494 -2912 -3167 0
8799 1494 -2910 -3169 0
8799 1494 -2908 -3171 0
8799 1494 -2906 -3173 0
8799 1494 -2904 -3175 0
8799 1494 -2902 -3177 0
8799 1494 -2900 -3179 0
8799 1494 -2898 -3181 0
8799 1494 -2896 -3183 0
8799 1494 -2894 -3185 0
8799 1494 -2892 -3187 0
8799 1494 -2890 -3189 0
8799 1494 -2888 -3191 0
8799 1494 -2886 -3193 0
8799 1494 -2884 -3195 0
8799 1494 -2882 -3197 0
8799 1494 -2880 -3199 0
8799 1494 -2878 -3201 0
8799 1494 -2876 -3203 0
8799 1494 -2874 0
8799 1494 -2872 0
8799 1494 -2870 0
8799 1494 -2868 0
8799 1494 -2866 0
8799 1494 -2864 0
8799 1494 -2862 0
8799 1494 -2860 0
8799 1494 -2858 0
8799 1494 -2856 0
8799 1494 -2854 0
8799 1494 -2852 0
8799 1494 -2850 0
8799 1494 -2848 0
8799 1494 -2846 0
8799 1494 -2844 0
8799 1494 -2842 0
8799 1494 -2840 0
8799 1494 -2838 0
8799 1494 -2836 0
8799 1494 -2834 0
8799 1494 -2832 0
8799 1494 -2830 0
8799 1494 -2828 0
8799 1494 -2826 0
8799 1494 -2824 0
8799 1494 -2822 0
8799 1494 -2820 0
8799 1494 -2818 0
8799 1494 -2816 0
8799 1494 -2814 0
8799 1494 -2812 0
8799 1494 -2810 0
8799 1494 -2808 0
8799 1494 -2806 0
8799 1494 -2804 0
8799 1494 -2802 0
8799 1494 -2800 0
8799 1494 -2798 0
8799 1494 -2796 0
8799 1494 -2794 0
8799 1494 -2792 0
8799 1494 -2790 0
8799 1494 -2788 0
8799 1494 -2786 0
8799 1494 -2784 0
8799 1494 -2782 0
8799 1494 -2780 0
8799 1494 -2778 0
8799 1494 -2776 0
8799 1494 -2774 0
8799 1494 -2772 0
8799 1494 -2770 0
8799 1494 -2768 0
8799 1494 -2766 0
8799 1494 -2764 0
8799 1494 -2762 0
8799 1494 -2760 0
8799 1494 -2758 0
8799 1494 -2756 0
8799 1494 -2754 0
8799 1494 -2752 0
8799 1494 -2750 0
8799 1494 -2748 0
8799 1494 -2746 0
8799 1494 -2744 0
8799 1494 -2742 0
8799 1494 -2740 0
8799 1494 -2738 0
8799 1494 -2736 0
8799 1494 -2734 0
8799 1494 -2732 0
8799 1494 -2730 0
8799 1494 -2728 0
8799 1494 -2726 0
8799 1494 -2724 0
8799 1494 -2722 0
8799 1494 -2720 0
8799 1494 -2718 0
8799 1494 -2716 0
8799 1494 -2714 0
8799 1494 -2712 0
8799 1494 -2710 0
8799 1494 -2708 0
8799 1494 -2706 0
8799 1494 -2704 0
8799 1494 -2702 0
8799 1494 -2700 0
8799 1494 -2698 0
8799 1494 -2696 0
8799 1494 -2695 0
8799 1496 -3131 0
8799 1496 -2948 -3133 0
8799 1496 -2946 -3135 0
8799 1496 -2944 -3137 0
8799 1496 -2942 -3139 0
8799 1496 -2940 -3141 0
8799 1496 -2938 -3143 0
8799 1496 -2936 -3145 0
8799 1496 -2934 -3147 0
8799 1496 -2932 -3149 0
8799 1496 -2930 -3151 0
8799 1496 -2928 -3153 0
8799 1496 -2926 -3155 0
8799 1496 -2924 -3157 0
8799 1496 -2922 -3159 0
8799 1496 -2920 -3161 0
8799 1496 -2918 -3163 0
8799 1496 -2916 -3165 0
8799 1496 -2914 -3167 0
8799 1496 -2912 -3169 0
8799 1496 -2910 -3171 0
8799 1496 -2908 -3173 0
8799 1496 -2906 -3175 0
8799 1496 -2904 -3177 0
8799 1496 -2902 -3179 0
8799 1496 -2900 -3181 0
8799 1496 -2898 -3183 0
8799 1496 -2896 -3185 0
8799 1496 -2894 -3187 0
8799 1496 -2892 -3189 0
8799 1496 -2890 -3191 0
8799 1496 -2888 -3193 0
8799 1496 -2886 -3195 0
8799 1496 -2884 -3197 0
8799 1496 -2882 -3199 0
8799 1496 -2880 -3201 0
8799 1496 -2878 -3203 0
8799 1496 -2876 0
8799 1496 -2874 0
8799 1496 -2872 0
8799 1496 -2870 0
8799 1496 -2868 0
8799 1496 -2866 0
8799 1496 -2864 0
8799 1496 -2862 0
8799 1496 -2860 0
8799 1496 -2858 0
8799 1496 -2856 0
8799 1496 -2854 0
8799 1496 -2852 0
8799 1496 -2850 0
8799 1496 -2848 0
8799 1496 -2846 0
8799 1496 -2844 0
8799 1496 -2842 0
8799 1496 -2840 0
8799 1496 -2838 0
8799 1496 -2836 0
8799 1496 -2834 0
8799 1496 -2832 0
8799 1496 -2830 0
8799 1496 -2828 0
8799 1496 -2826 0
8799 1496 -2824 0
8799 1496 -2822 0
8799 1496 -2820 0
8799 1496 -2818 0
8799 1496 -2816 0
8799 1496 -2814 0
8799 1496 -2812 0
8799 1496 -2810 0
8799 1496 -2808 0
8799 1496 -2806 0
8799 1496 -2804 0
8799 1496 -2802 0
8799 1496 -2800 0
8799 1496 -2798 0
8799 1496 -2796 0
8799 1496 -2794 0
8799 1496 -2792 0
8799 1496 -2790 0
8799 1496 -2788 0
8799 1496 -2786 0
8799 1496 -2784 0
8799 1496 -2782 0
8799 1496 -2780 0
8799 1496 -2778 0
8799 1496 -2776 0
8799 1496 -2774 0
8799 1496 -2772 0
8799 1496 -2770 0
8799 1496 -2768 0
8799 1496 -2766 0
8799 1496 -2764 0
8799 1496 -2762 0
8799 1496 -2760 0
8799 1496 -2758 0
8799 1496 -2756 0
8799 1496 -2754 0
8799 1496 -2752 0
8799 1496 -2750 0
8799 1496 -2748 0
8799 1496 -2746 0
8799 1496 -2744 0
8799 1496 -2742 0
8799 1496 -2740 0
8799 1496 -2738 0
8799 1496 -2736 0
8799 1496 -2734 0
8799 1496 -2732 0
8799 1496 -2730 0
8799 1496 -2728 0
8799 1496 -2726 0
8799 1496 -2724 0
8799 1496 -2722 0
8799 1496 -2720 0
8799 1496 -2718 0
8799 1496 -2716 0
8799 1496 -2714 0
8799 1496 -2712 0
8799 1496 -2710 0
8799 1496 -2708 0
8799 1496 -2706 0
8799 1496 -2704 0
8799 1496 -2702 0
8799 1496 -2700 0
8799 1496 -2698 0
8799 1496 -2696 0
8799 1496 -2695 0
8799 1498 -3133 0
8799 1498 -2948 -3135 0
8799 1498 -2946 -3137 0
8799 1498 -2944 -3139 0
8799 1498 -2942 -3141 0
8799 1498 -2940 -3143 0
8799 1498 -2938 -3145 0
8799 1498 -2936 -3147 0
8799 1498 -2934 -3149 0
8799 1498 -2932 -3151 0
8799 1498 -2930 -3153 0
8799 1498 -2928 -3155 0
8799 1498 -2926 -3157 0
8799 1498 -2924 -3159 0
8799 1498 -2922 -3161 0
8799 1498 -2920 -3163 0
8799 1498 -2918 -3165 0
8799 1498 -2916 -3167 0
8799 1498 -2914 -3169 0
8799 1498 -2912 -3171 0
8799 1498 -2910 -3173 0
8799 1498 -2908 -3175 0
8799 1498 -2906 -3177 0
8799 1498 -2904 -3179 0
8799 1498 -2902 -3181 0
8799 1498 -2900 -3183 0
8799 1498 -2898 -3185 0
8799 1498 -2896 -3187 0
8799 1498 -2894 -3189 0
8799 1498 -2892 -3191 0
8799 1498 -2890 -3193 0
8799 1498 -2888 -3195 0
8799 1498 -2886 -3197 0
8799 1498 -2884 -3199 0
8799 1498 -2882 -3201 0
8799 1498 -2880 -3203 0
8799 1498 -2878 0
8799 1498 -2876 0
8799 1498 -2874 0
8799 1498 -2872 0
8799 1498 -2870 0
8799 1498 -2868 0
8799 1498 -2866 0
8799 1498 -2864 0
8799 1498 -2862 0
8799 1498 -2860 0
8799 1498 -2858 0
8799 1498 -2856 0
8799 1498 -2854 0
8799 1498 -2852 0
8799 1498 -2850 0
8799 1498 -2848 0
8799 1498 -2846 0
8799 1498 -2844 0
8799 1498 -2842 0
8799 1498 -2840 0
8799 1498 -2838 0
8799 1498 -2836 0
8799 1498 -2834 0
8799 1498 -2832 0
8799 1498 -2830 0
8799 1498 -2828 0
8799 1498 -2826 0
8799 1498 -2824 0
8799 1498 -2822 0
8799 1498 -2820 0
8799 1498 -2818 0
8799 1498 -2816 0
8799 1498 -2814 0
8799 1498 -2812 0
8799 1498 -2810 0
8799 1498 -2808 0
8799 1498 -2806 0
8799 1498 -2804 0
8799 1498 -2802 0
8799 1498 -2800 0
8799 1498 -2798 0
8799 1498 -2796 0
8799 1498 -2794 0
8799 1498 -2792 0
8799 1498 -2790 0
8799 1498 -2788 0
8799 1498 -2786 0
8799 1498 -2784 0
8799 1498 -2782 0
8799 1498 -2780 0
8799 1498 -2778 0
8799 1498 -2776 0
8799 1498 -2774 0
8799 1498 -2772 0
8799 1498 -2770 0
8799 1498 -2768 0
8799 1498 -2766 0
8799 1498 -2764 0
8799 1498 -2762 0
8799 1498 -2760 0
8799 1498 -2758 0
8799 1498 -2756 0
8799 1498 -2754 0
8799 1498 -2752 0
8799 1498 -2750 0
8799 1498 -2748 0
8799 1498 -2746 0
8799 1498 -2744 0
8799 1498 -2742 0
8799 1498 -2740 0
8799 1498 -2738 0
8799 1498 -2736 0
8799 1498 -2734 0
8799 1498 -2732 0
8799 1498 -2730 0
8799 1498 -2728 0
8799 1498 -2726 0
8799 1498 -2724 0
8799 1498 -2722 0
8799 1498 -2720 0
8799 1498 -2718 0
8799 1498 -2716 0
8799 1498 -2714 0
8799 1498 -2712 0
8799 1498 -2710 0
8799 1498 -2708 0
8799 1498 -2706 0
8799 1498 -2704 0
8799 1498 -2702 0
8799 1498 -2700 0
8799 1498 -2698 0
8799 1498 -2696 0
8799 1498 -2695 0
8799 1500 -3135 0
8799 1500 -2948 -3137 0
8799 1500 -2946 -3139 0
8799 1500 -2944 -3141 0
8799 1500 -2942 -3143 0
8799 1500 -2940 -3145 0
8799 1500 -2938 -3147 0
8799 1500 -2936 -3149 0
8799 1500 -2934 -3151 0
8799 1500 -2932 -3153 0
8799 1500 -2930 -3155 0
8799 1500 -2928 -3157 0
8799 1500 -2926 -3159 0
8799 1500 -2924 -3161 0
8799 1500 -2922 -3163 0
8799 1500 -2920 -3165 0
8799 1500 -2918 -3167 0
8799 1500 -2916 -3169 0
8799 1500 -2914 -3171 0
8799 1500 -2912 -3173 0
8799 1500 -2910 -3175 0
8799 1500 -2908 -3177 0
8799 1500 -2906 -3179 0
8799 1500 -2904 -3181 0
8799 1500 -2902 -3183 0
8799 1500 -2900 -3185 0
8799 1500 -2898 -3187 0
8799 1500 -2896 -3189 0
8799 1500 -2894 -3191 0
8799 1500 -2892 -3193 0
8799 1500 -2890 -3195 0
8799 1500 -2888 -3197 0
8799 1500 -2886 -3199 0
8799 1500 -2884 -3201 0
8799 1500 -2882 -3203 0
8799 1500 -2880 0
8799 1500 -2878 0
8799 1500 -2876 0
8799 1500 -2874 0
8799 1500 -2872 0
8799 1500 -2870 0
8799 1500 -2868 0
8799 1500 -2866 0
8799 1500 -2864 0
8799 1500 -2862 0
8799 1500 -2860 0
8799 1500 -2858 0
8799 1500 -2856 0
8799 1500 -2854 0
8799 1500 -2852 0
8799 1500 -2850 0
8799 1500 -2848 0
8799 1500 -2846 0
8799 1500 -2844 0
8799 1500 -2842 0
8799 1500 -2840 0
8799 1500 -2838 0
8799 1500 -2836 0
8799 1500 -2834 0
8799 1500 -2832 0
8799 1500 -2830 0
8799 1500 -2828 0
8799 1500 -2826 0
8799 1500 -2824 0
8799 1500 -2822 0
8799 1500 -2820 0
8799 1500 -2818 0
8799 1500 -2816 0
8799 1500 -2814 0
8799 1500 -2812 0
8799 1500 -2810 0
8799 1500 -2808 0
8799 1500 -2806 0
8799 1500 -2804 0
8799 1500 -2802 0
8799 1500 -2800 0
8799 1500 -2798 0
8799 1500 -2796 0
8799 1500 -2794 0
8799 1500 -2792 0
8799 1500 -2790 0
8799 1500 -2788 0
8799 1500 -2786 0
8799 1500 -2784 0
8799 1500 -2782 0
8799 1500 -2780 0
8799 1500 -2778 0
8799 1500 -2776 0
8799 1500 -2774 0
8799 1500 -2772 0
8799 1500 -2770 0
8799 1500 -2768 0
8799 1500 -2766 0
8799 1500 -2764 0
8799 1500 -2762 0
8799 1500 -2760 0
8799 1500 -2758 0
8799 1500 -2756 0
8799 1500 -2754 0
8799 1500 -2752 0
8799 1500 -2750 0
8799 1500 -2748 0
8799 1500 -2746 0
8799 1500 -2744 0
8799 1500 -2742 0
8799 1500 -2740 0
8799 1500 -2738 0
8799 1500 -2736 0
8799 1500 -2734 0
8799 1500 -2732 0
8799 1500 -2730 0
8799 1500 -2728 0
8799 1500 -2726 0
8799 1500 -2724 0
8799 1500 -2722 0
8799 1500 -2720 0
8799 1500 -2718 0
8799 1500 -2716 0
8799 1500 -2714 0
8799 1500 -2712 0
8799 1500 -2710 0
8799 1500 -2708 0
8799 1500 -2706 0
8799 1500 -2704 0
8799 1500 -2702 0
8799 1500 -2700 0
8799 1500 -2698 0
8799 1500 -2696 0
8799 1500 -2695 0
8799 1502 -3137 0
8799 1502 -2948 -3139 0
8799 1502 -2946 -3141 0
8799 1502 -2944 -3143 0
8799 1502 -2942 -3145 0
8799 1502 -2940 -3147 0
8799 1502 -2938 -3149 0
8799 1502 -2936 -3151 0
8799 1502 -2934 -3153 0
8799 1502 -2932 -3155 0
8799 1502 -2930 -3157 0
8799 1502 -2928 -3159 0
8799 1502 -2926 -3161 0
8799 1502 -2924 -3163 0
8799 1502 -2922 -3165 0
8799 1502 -2920 -3167 0
8799 1502 -2918 -3169 0
8799 1502 -2916 -3171 0
8799 1502 -2914 -3173 0
8799 1502 -2912 -3175 0
8799 1502 -2910 -3177 0
8799 1502 -2908 -3179 0
8799 1502 -2906 -3181 0
8799 1502 -2904 -3183 0
8799 1502 -2902 -3185 0
8799 1502 -2900 -3187 0
8799 1502 -2898 -3189 0
8799 1502 -2896 -3191 0
8799 1502 -2894 -3193 0
8799 1502 -2892 -3195 0
8799 1502 -2890 -3197 0
8799 1502 -2888 -3199 0
8799 1502 -2886 -3201 0
8799 1502 -2884 -3203 0
8799 1502 -2882 0
8799 1502 -2880 0
8799 1502 -2878 0
8799 1502 -2876 0
8799 1502 -2874 0
8799 1502 -2872 0
8799 1502 -2870 0
8799 1502 -2868 0
8799 1502 -2866 0
8799 1502 -2864 0
8799 1502 -2862 0
8799 1502 -2860 0
8799 1502 -2858 0
8799 1502 -2856 0
8799 1502 -2854 0
8799 1502 -2852 0
8799 1502 -2850 0
8799 1502 -2848 0
8799 1502 -2846 0
8799 1502 -2844 0
8799 1502 -2842 0
8799 1502 -2840 0
8799 1502 -2838 0
8799 1502 -2836 0
8799 1502 -2834 0
8799 1502 -2832 0
8799 1502 -2830 0
8799 1502 -2828 0
8799 1502 -2826 0
8799 1502 -2824 0
8799 1502 -2822 0
8799 1502 -2820 0
8799 1502 -2818 0
8799 1502 -2816 0
8799 1502 -2814 0
8799 1502 -2812 0
8799 1502 -2810 0
8799 1502 -2808 0
8799 1502 -2806 0
8799 1502 -2804 0
8799 1502 -2802 0
8799 1502 -2800 0
8799 1502 -2798 0
8799 1502 -2796 0
8799 1502 -2794 0
8799 1502 -2792 0
8799 1502 -2790 0
8799 1502 -2788 0
8799 1502 -2786 0
8799 1502 -2784 0
8799 1502 -2782 0
8799 1502 -2780 0
8799 1502 -2778 0
8799 1502 -2776 0
8799 1502 -2774 0
8799 1502 -2772 0
8799 1502 -2770 0
8799 1502 -2768 0
8799 1502 -2766 0
8799 1502 -2764 0
8799 1502 -2762 0
8799 1502 -2760 0
8799 1502 -2758 0
8799 1502 -2756 0
8799 1502 -2754 0
8799 1502 -2752 0
8799 1502 -2750 0
8799 1502 -2748 0
8799 1502 -2746 0
8799 1502 -2744 0
8799 1502 -2742 0
8799 1502 -2740 0
8799 1502 -2738 0
8799 1502 -2736 0
8799 1502 -2734 0
8799 1502 -2732 0
8799 1502 -2730 0
8799 1502 -2728 0
8799 1502 -2726 0
8799 1502 -2724 0
8799 1502 -2722 0
8799 1502 -2720 0
8799 1502 -2718 0
8799 1502 -2716 0
8799 1502 -2714 0
8799 1502 -2712 0
8799 1502 -2710 0
8799 1502 -2708 0
8799 1502 -2706 0
8799 1502 -2704 0
8799 1502 -2702 0
8799 1502 -2700 0
8799 1502 -2698 0
8799 1502 -2696 0
8799 1502 -2695 0
8799 1504 -3139 0
8799 1504 -2948 -3141 0
8799 1504 -2946 -3143 0
8799 1504 -2944 -3145 0
8799 1504 -2942 -3147 0
8799 1504 -2940 -3149 0
8799 1504 -2938 -3151 0
8799 1504 -2936 -3153 0
8799 1504 -2934 -3155 0
8799 1504 -2932 -3157 0
8799 1504 -2930 -3159 0
8799 1504 -2928 -3161 0
8799 1504 -2926 -3163 0
8799 1504 -2924 -3165 0
8799 1504 -2922 -3167 0
8799 1504 -2920 -3169 0
8799 1504 -2918 -3171 0
8799 1504 -2916 -3173 0
8799 1504 -2914 -3175 0
8799 1504 -2912 -3177 0
8799 1504 -2910 -3179 0
8799 1504 -2908 -3181 0
8799 1504 -2906 -3183 0
8799 1504 -2904 -3185 0
8799 1504 -2902 -3187 0
8799 1504 -2900 -3189 0
8799 1504 -2898 -3191 0
8799 1504 -2896 -3193 0
8799 1504 -2894 -3195 0
8799 1504 -2892 -3197 0
8799 1504 -2890 -3199 0
8799 1504 -2888 -3201 0
8799 1504 -2886 -3203 0
8799 1504 -2884 0
8799 1504 -2882 0
8799 1504 -2880 0
8799 1504 -2878 0
8799 1504 -2876 0
8799 1504 -2874 0
8799 1504 -2872 0
8799 1504 -2870 0
8799 1504 -2868 0
8799 1504 -2866 0
8799 1504 -2864 0
8799 1504 -2862 0
8799 1504 -2860 0
8799 1504 -2858 0
8799 1504 -2856 0
8799 1504 -2854 0
8799 1504 -2852 0
8799 1504 -2850 0
8799 1504 -2848 0
8799 1504 -2846 0
8799 1504 -2844 0
8799 1504 -2842 0
8799 1504 -2840 0
8799 1504 -2838 0
8799 1504 -2836 0
8799 1504 -2834 0
8799 1504 -2832 0
8799 1504 -2830 0
8799 1504 -2828 0
8799 1504 -2826 0
8799 1504 -2824 0
8799 1504 -2822 0
8799 1504 -2820 0
8799 1504 -2818 0
8799 1504 -2816 0
8799 1504 -2814 0
8799 1504 -2812 0
8799 1504 -2810 0
8799 1504 -2808 0
8799 1504 -2806 0
8799 1504 -2804 0
8799 1504 -2802 0
8799 1504 -2800 0
8799 1504 -2798 0
8799 1504 -2796 0
8799 1504 -2794 0
8799 1504 -2792 0
8799 1504 -2790 0
8799 1504 -2788 0
8799 1504 -2786 0
8799 1504 -2784 0
8799 1504 -2782 0
8799 1504 -2780 0
8799 1504 -2778 0
8799 1504 -2776 0
8799 1504 -2774 0
8799 1504 -2772 0
8799 1504 -2770 0
8799 1504 -2768 0
8799 1504 -2766 0
8799 1504 -2764 0
8799 1504 -2762 0
8799 1504 -2760 0
8799 1504 -2758 0
8799 1504 -2756 0
8799 1504 -2754 0
8799 1504 -2752 0
8799 1504 -2750 0
8799 1504 -2748 0
8799 1504 -2746 0
8799 1504 -2744 0
8799 1504 -2742 0
8799 1504 -2740 0
8799 1504 -2738 0
8799 1504 -2736 0
8799 1504 -2734 0
8799 1504 -2732 0
8799 1504 -2730 0
8799 1504 -2728 0
8799 1504 -2726 0
8799 1504 -2724 0
8799 1504 -2722 0
8799 1504 -2720 0
8799 1504 -2718 0
8799 1504 -2716 0
8799 1504 -2714 0
8799 1504 -2712 0
8799 1504 -2710 0
8799 1504 -2708 0
8799 1504 -2706 0
8799 1504 -2704 0
8799 1504 -2702 0
8799 1504 -2700 0
8799 1504 -2698 0
8799 1504 -2696 0
8799 1504 -2695 0
8799 1506 -3141 0
8799 1506 -2948 -3143 0
8799 1506 -2946 -3145 0
8799 1506 -2944 -3147 0
8799 1506 -2942 -3149 0
8799 1506 -2940 -3151 0
8799 1506 -2938 -3153 0
8799 1506 -2936 -3155 0
8799 1506 -2934 -3157 0
8799 1506 -2932 -3159 0
8799 1506 -2930 -3161 0
8799 1506 -2928 -3163 0
8799 1506 -2926 -3165 0
8799 1506 -2924 -3167 0
8799 1506 -2922 -3169 0
8799 1506 -2920 -3171 0
8799 1506 -2918 -3173 0
8799 1506 -2916 -3175 0
8799 1506 -2914 -3177 0
8799 1506 -2912 -3179 0
8799 1506 -2910 -3181 0
8799 1506 -2908 -3183 0
8799 1506 -2906 -3185 0
8799 1506 -2904 -3187 0
8799 1506 -2902 -3189 0
8799 1506 -2900 -3191 0
8799 1506 -2898 -3193 0
8799 1506 -2896 -3195 0
8799 1506 -2894 -3197 0
8799 1506 -2892 -3199 0
8799 1506 -2890 -3201 0
8799 1506 -2888 -3203 0
8799 1506 -2886 0
8799 1506 -2884 0
8799 1506 -2882 0
8799 1506 -2880 0
8799 1506 -2878 0
8799 1506 -2876 0
8799 1506 -2874 0
8799 1506 -2872 0
8799 1506 -2870 0
8799 1506 -2868 0
8799 1506 -2866 0
8799 1506 -2864 0
8799 1506 -2862 0
8799 1506 -2860 0
8799 1506 -2858 0
8799 1506 -2856 0
8799 1506 -2854 0
8799 1506 -2852 0
8799 1506 -2850 0
8799 1506 -2848 0
8799 1506 -2846 0
8799 1506 -2844 0
8799 1506 -2842 0
8799 1506 -2840 0
8799 1506 -2838 0
8799 1506 -2836 0
8799 1506 -2834 0
8799 1506 -2832 0
8799 1506 -2830 0
8799 1506 -2828 0
8799 1506 -2826 0
8799 1506 -2824 0
8799 1506 -2822 0
8799 1506 -2820 0
8799 1506 -2818 0
8799 1506 -2816 0
8799 1506 -2814 0
8799 1506 -2812 0
8799 1506 -2810 0
8799 1506 -2808 0
8799 1506 -2806 0
8799 1506 -2804 0
8799 1506 -2802 0
8799 1506 -2800 0
8799 1506 -2798 0
8799 1506 -2796 0
8799 1506 -2794 0
8799 1506 -2792 0
8799 1506 -2790 0
8799 1506 -2788 0
8799 1506 -2786 0
8799 1506 -2784 0
8799 1506 -2782 0
8799 1506 -2780 0
8799 1506 -2778 0
8799 1506 -2776 0
8799 1506 -2774 0
8799 1506 -2772 0
8799 1506 -2770 0
8799 1506 -2768 0
8799 1506 -2766 0
8799 1506 -2764 0
8799 1506 -2762 0
8799 1506 -2760 0
8799 1506 -2758 0
8799 1506 -2756 0
8799 1506 -2754 0
8799 1506 -2752 0
8799 1506 -2750 0
8799 1506 -2748 0
8799 1506 -2746 0
8799 1506 -2744 0
8799 1506 -2742 0
8799 1506 -2740 0
8799 1506 -2738 0
8799 1506 -2736 0
8799 1506 -2734 0
8799 1506 -2732 0
8799 1506 -2730 0
8799 1506 -2728 0
8799 1506 -2726 0
8799 1506 -2724 0
8799 1506 -2722 0
8799 1506 -2720 0
8799 1506 -2718 0
8799 1506 -2716 0
8799 1506 -2714 0
8799 1506 -2712 0
8799 1506 -2710 0
8799 1506 -2708 0
8799 1506 -2706 0
8799 1506 -2704 0
8799 1506 -2702 0
8799 1506 -2700 0
8799 1506 -2698 0
8799 1506 -2696 0
8799 1506 -2695 0
8799 1508 -3143 0
8799 1508 -2948 -3145 0
8799 1508 -2946 -3147 0
8799 1508 -2944 -3149 0
8799 1508 -2942 -3151 0
8799 1508 -2940 -3153 0
8799 1508 -2938 -3155 0
8799 1508 -2936 -3157 0
8799 1508 -2934 -3159 0
8799 1508 -2932 -3161 0
8799 1508 -2930 -3163 0
8799 1508 -2928 -3165 0
8799 1508 -2926 -3167 0
8799 1508 -2924 -3169 0
8799 1508 -2922 -3171 0
8799 1508 -2920 -3173 0
8799 1508 -2918 -3175 0
8799 1508 -2916 -3177 0
8799 1508 -2914 -3179 0
8799 1508 -2912 -3181 0
8799 1508 -2910 -3183 0
8799 1508 -2908 -3185 0
8799 1508 -2906 -3187 0
8799 1508 -2904 -3189 0
8799 1508 -2902 -3191 0
8799 1508 -2900 -3193 0
8799 1508 -2898 -3195 0
8799 1508 -2896 -3197 0
8799 1508 -2894 -3199 0
8799 1508 -2892 -3201 0
8799 1508 -2890 -3203 0
8799 1508 -2888 0
8799 1508 -2886 0
8799 1508 -2884 0
8799 1508 -2882 0
8799 1508 -2880 0
8799 1508 -2878 0
8799 1508 -2876 0
8799 1508 -2874 0
8799 1508 -2872 0
8799 1508 -2870 0
8799 1508 -2868 0
8799 1508 -2866 0
8799 1508 -2864 0
8799 1508 -2862 0
8799 1508 -2860 0
8799 1508 -2858 0
8799 1508 -2856 0
8799 1508 -2854 0
8799 1508 -2852 0
8799 1508 -2850 0
8799 1508 -2848 0
8799 1508 -2846 0
8799 1508 -2844 0
8799 1508 -2842 0
8799 1508 -2840 0
8799 1508 -2838 0
8799 1508 -2836 0
8799 1508 -2834 0
8799 1508 -2832 0
8799 1508 -2830 0
8799 1508 -2828 0
8799 1508 -2826 0
8799 1508 -2824 0
8799 1508 -2822 0
8799 1508 -2820 0
8799 1508 -2818 0
8799 1508 -2816 0
8799 1508 -2814 0
8799 1508 -2812 0
8799 1508 -2810 0
8799 1508 -2808 0
8799 1508 -2806 0
8799 1508 -2804 0
8799 1508 -2802 0
8799 1508 -2800 0
8799 1508 -2798 0
8799 1508 -2796 0
8799 1508 -2794 0
8799 1508 -2792 0
8799 1508 -2790 0
8799 1508 -2788 0
8799 1508 -2786 0
8799 1508 -2784 0
8799 1508 -2782 0
8799 1508 -2780 0
8799 1508 -2778 0
8799 1508 -2776 0
8799 1508 -2774 0
8799 1508 -2772 0
8799 1508 -2770 0
8799 1508 -2768 0
8799 1508 -2766 0
8799 1508 -2764 0
8799 1508 -2762 0
8799 1508 -2760 0
8799 1508 -2758 0
8799 1508 -2756 0
8799 1508 -2754 0
8799 1508 -2752 0
8799 1508 -2750 0
8799 1508 -2748 0
8799 1508 -2746 0
8799 1508 -2744 0
8799 1508 -2742 0
8799 1508 -2740 0
8799 1508 -2738 0
8799 1508 -2736 0
8799 1508 -2734 0
8799 1508 -2732 0
8799 1508 -2730 0
8799 1508 -2728 0
8799 1508 -2726 0
8799 1508 -2724 0
8799 1508 -2722 0
8799 1508 -2720 0
8799 1508 -2718 0
8799 1508 -2716 0
8799 1508 -2714 0
8799 1508 -2712 0
8799 1508 -2710 0
8799 1508 -2708 0
8799 1508 -2706 0
8799 1508 -2704 0
8799 1508 -2702 0
8799 1508 -2700 0
8799 1508 -2698 0
8799 1508 -2696 0
8799 1508 -2695 0
8799 1510 -3145 0
8799 1510 -2948 -3147 0
8799 1510 -2946 -3149 0
8799 1510 -2944 -3151 0
8799 1510 -2942 -3153 0
8799 1510 -2940 -3155 0
8799 1510 -2938 -3157 0
8799 1510 -2936 -3159 0
8799 1510 -2934 -3161 0
8799 1510 -2932 -3163 0
8799 1510 -2930 -3165 0
8799 1510 -2928 -3167 0
8799 1510 -2926 -3169 0
8799 1510 -2924 -3171 0
8799 1510 -2922 -3173 0
8799 1510 -2920 -3175 0
8799 1510 -2918 -3177 0
8799 1510 -2916 -3179 0
8799 1510 -2914 -3181 0
8799 1510 -2912 -3183 0
8799 1510 -2910 -3185 0
8799 1510 -2908 -3187 0
8799 1510 -2906 -3189 0
8799 1510 -2904 -3191 0
8799 1510 -2902 -3193 0
8799 1510 -2900 -3195 0
8799 1510 -2898 -3197 0
8799 1510 -2896 -3199 0
8799 1510 -2894 -3201 0
8799 1510 -2892 -3203 0
8799 1510 -2890 0
8799 1510 -2888 0
8799 1510 -2886 0
8799 1510 -2884 0
8799 1510 -2882 0
8799 1510 -2880 0
8799 1510 -2878 0
8799 1510 -2876 0
8799 1510 -2874 0
8799 1510 -2872 0
8799 1510 -2870 0
8799 1510 -2868 0
8799 1510 -2866 0
8799 1510 -2864 0
8799 1510 -2862 0
8799 1510 -2860 0
8799 1510 -2858 0
8799 1510 -2856 0
8799 1510 -2854 0
8799 1510 -2852 0
8799 1510 -2850 0
8799 1510 -2848 0
8799 1510 -2846 0
8799 1510 -2844 0
8799 1510 -2842 0
8799 1510 -2840 0
8799 1510 -2838 0
8799 1510 -2836 0
8799 1510 -2834 0
8799 1510 -2832 0
8799 1510 -2830 0
8799 1510 -2828 0
8799 1510 -2826 0
8799 1510 -2824 0
8799 1510 -2822 0
8799 1510 -2820 0
8799 1510 -2818 0
8799 1510 -2816 0
8799 1510 -2814 0
8799 1510 -2812 0
8799 1510 -2810 0
8799 1510 -2808 0
8799 1510 -2806 0
8799 1510 -2804 0
8799 1510 -2802 0
8799 1510 -2800 0
8799 1510 -2798 0
8799 1510 -2796 0
8799 1510 -2794 0
8799 1510 -2792 0
8799 1510 -2790 0
8799 1510 -2788 0
8799 1510 -2786 0
8799 1510 -2784 0
8799 1510 -2782 0
8799 1510 -2780 0
8799 1510 -2778 0
8799 1510 -2776 0
8799 1510 -2774 0
8799 1510 -2772 0
8799 1510 -2770 0
8799 1510 -2768 0
8799 1510 -2766 0
8799 1510 -2764 0
8799 1510 -2762 0
8799 1510 -2760 0
8799 1510 -2758 0
8799 1510 -2756 0
8799 1510 -2754 0
8799 1510 -2752 0
8799 1510 -2750 0
8799 1510 -2748 0
8799 1510 -2746 0
8799 1510 -2744 0
8799 1510 -2742 0
8799 1510 -2740 0
8799 1510 -2738 0
8799 1510 -2736 0
8799 1510 -2734 0
8799 1510 -2732 0
8799 1510 -2730 0
8799 1510 -2728 0
8799 1510 -2726 0
8799 1510 -2724 0
8799 1510 -2722 0
8799 1510 -2720 0
8799 1510 -2718 0
8799 1510 -2716 0
8799 1510 -2714 0
8799 1510 -2712 0
8799 1510 -2710 0
8799 1510 -2708 0
8799 1510 -2706 0
8799 1510 -2704 0
8799 1510 -2702 0
8799 1510 -2700 0
8799 1510 -2698 0
8799 1510 -2696 0
8799 1510 -2695 0
8799 1512 -3147 0
8799 1512 -2948 -3149 0
8799 1512 -2946 -3151 0
8799 1512 -2944 -3153 0
8799 1512 -2942 -3155 0
8799 1512 -2940 -3157 0
8799 1512 -2938 -3159 0
8799 1512 -2936 -3161 0
8799 1512 -2934 -3163 0
8799 1512 -2932 -3165 0
8799 1512 -2930 -3167 0
8799 1512 -2928 -3169 0
8799 1512 -2926 -3171 0
8799 1512 -2924 -3173 0
8799 1512 -2922 -3175 0
8799 1512 -2920 -3177 0
8799 1512 -2918 -3179 0
8799 1512 -2916 -3181 0
8799 1512 -2914 -3183 0
8799 1512 -2912 -3185 0
8799 1512 -2910 -3187 0
8799 1512 -2908 -3189 0
8799 1512 -2906 -3191 0
8799 1512 -2904 -3193 0
8799 1512 -2902 -3195 0
8799 1512 -2900 -3197 0
8799 1512 -2898 -3199 0
8799 1512 -2896 -3201 0
8799 1512 -2894 -3203 0
8799 1512 -2892 0
8799 1512 -2890 0
8799 1512 -2888 0
8799 1512 -2886 0
8799 1512 -2884 0
8799 1512 -2882 0
8799 1512 -2880 0
8799 1512 -2878 0
8799 1512 -2876 0
8799 1512 -2874 0
8799 1512 -2872 0
8799 1512 -2870 0
8799 1512 -2868 0
8799 1512 -2866 0
8799 1512 -2864 0
8799 1512 -2862 0
8799 1512 -2860 0
8799 1512 -2858 0
8799 1512 -2856 0
8799 1512 -2854 0
8799 1512 -2852 0
8799 1512 -2850 0
8799 1512 -2848 0
8799 1512 -2846 0
8799 1512 -2844 0
8799 1512 -2842 0
8799 1512 -2840 0
8799 1512 -2838 0
8799 1512 -2836 0
8799 1512 -2834 0
8799 1512 -2832 0
8799 1512 -2830 0
8799 1512 -2828 0
8799 1512 -2826 0
8799 1512 -2824 0
8799 1512 -2822 0
8799 1512 -2820 0
8799 1512 -2818 0
8799 1512 -2816 0
8799 1512 -2814 0
8799 1512 -2812 0
8799 1512 -2810 0
8799 1512 -2808 0
8799 1512 -2806 0
8799 1512 -2804 0
8799 1512 -2802 0
8799 1512 -2800 0
8799 1512 -2798 0
8799 1512 -2796 0
8799 1512 -2794 0
8799 1512 -2792 0
8799 1512 -2790 0
8799 1512 -2788 0
8799 1512 -2786 0
8799 1512 -2784 0
8799 1512 -2782 0
8799 1512 -2780 0
8799 1512 -2778 0
8799 1512 -2776 0
8799 1512 -2774 0
8799 1512 -2772 0
8799 1512 -2770 0
8799 1512 -2768 0
8799 1512 -2766 0
8799 1512 -2764 0
8799 1512 -2762 0
8799 1512 -2760 0
8799 1512 -2758 0
8799 1512 -2756 0
8799 1512 -2754 0
8799 1512 -2752 0
8799 1512 -2750 0
8799 1512 -2748 0
8799 1512 -2746 0
8799 1512 -2744 0
8799 1512 -2742 0
8799 1512 -2740 0
8799 1512 -2738 0
8799 1512 -2736 0
8799 1512 -2734 0
8799 1512 -2732 0
8799 1512 -2730 0
8799 1512 -2728 0
8799 1512 -2726 0
8799 1512 -2724 0
8799 1512 -2722 0
8799 1512 -2720 0
8799 1512 -2718 0
8799 1512 -2716 0
8799 1512 -2714 0
8799 1512 -2712 0
8799 1512 -2710 0
8799 1512 -2708 0
8799 1512 -2706 0
8799 1512 -2704 0
8799 1512 -2702 0
8799 1512 -2700 0
8799 1512 -2698 0
8799 1512 -2696 0
8799 1512 -2695 0
8799 1514 -3149 0
8799 1514 -2948 -3151 0
8799 1514 -2946 -3153 0
8799 1514 -2944 -3155 0
8799 1514 -2942 -3157 0
8799 1514 -2940 -3159 0
8799 1514 -2938 -3161 0
8799 1514 -2936 -3163 0
8799 1514 -2934 -3165 0
8799 1514 -2932 -3167 0
8799 1514 -2930 -3169 0
8799 1514 -2928 -3171 0
8799 1514 -2926 -3173 0
8799 1514 -2924 -3175 0
8799 1514 -2922 -3177 0
8799 1514 -2920 -3179 0
8799 1514 -2918 -3181 0
8799 1514 -2916 -3183 0
8799 1514 -2914 -3185 0
8799 1514 -2912 -3187 0
8799 1514 -2910 -3189 0
8799 1514 -2908 -3191 0
8799 1514 -2906 -3193 0
8799 1514 -2904 -3195 0
8799 1514 -2902 -3197 0
8799 1514 -2900 -3199 0
8799 1514 -2898 -3201 0
8799 1514 -2896 -3203 0
8799 1514 -2894 0
8799 1514 -2892 0
8799 1514 -2890 0
8799 1514 -2888 0
8799 1514 -2886 0
8799 1514 -2884 0
8799 1514 -2882 0
8799 1514 -2880 0
8799 1514 -2878 0
8799 1514 -2876 0
8799 1514 -2874 0
8799 1514 -2872 0
8799 1514 -2870 0
8799 1514 -2868 0
8799 1514 -2866 0
8799 1514 -2864 0
8799 1514 -2862 0
8799 1514 -2860 0
8799 1514 -2858 0
8799 1514 -2856 0
8799 1514 -2854 0
8799 1514 -2852 0
8799 1514 -2850 0
8799 1514 -2848 0
8799 1514 -2846 0
8799 1514 -2844 0
8799 1514 -2842 0
8799 1514 -2840 0
8799 1514 -2838 0
8799 1514 -2836 0
8799 1514 -2834 0
8799 1514 -2832 0
8799 1514 -2830 0
8799 1514 -2828 0
8799 1514 -2826 0
8799 1514 -2824 0
8799 1514 -2822 0
8799 1514 -2820 0
8799 1514 -2818 0
8799 1514 -2816 0
8799 1514 -2814 0
8799 1514 -2812 0
8799 1514 -2810 0
8799 1514 -2808 0
8799 1514 -2806 0
8799 1514 -2804 0
8799 1514 -2802 0
8799 1514 -2800 0
8799 1514 -2798 0
8799 1514 -2796 0
8799 1514 -2794 0
8799 1514 -2792 0
8799 1514 -2790 0
8799 1514 -2788 0
8799 1514 -2786 0
8799 1514 -2784 0
8799 1514 -2782 0
8799 1514 -2780 0
8799 1514 -2778 0
8799 1514 -2776 0
8799 1514 -2774 0
8799 1514 -2772 0
8799 1514 -2770 0
8799 1514 -2768 0
8799 1514 -2766 0
8799 1514 -2764 0
8799 1514 -2762 0
8799 1514 -2760 0
8799 1514 -2758 0
8799 1514 -2756 0
8799 1514 -2754 0
8799 1514 -2752 0
8799 1514 -2750 0
8799 1514 -2748 0
8799 1514 -2746 0
8799 1514 -2744 0
8799 1514 -2742 0
8799 1514 -2740 0
8799 1514 -2738 0
8799 1514 -2736 0
8799 1514 -2734 0
8799 1514 -2732 0
8799 1514 -2730 0
8799 1514 -2728 0
8799 1514 -2726 0
8799 1514 -2724 0
8799 1514 -2722 0
8799 1514 -2720 0
8799 1514 -2718 0
8799 1514 -2716 0
8799 1514 -2714 0
8799 1514 -2712 0
8799 1514 -2710 0
8799 1514 -2708 0
8799 1514 -2706 0
8799 1514 -2704 0
8799 1514 -2702 0
8799 1514 -2700 0
8799 1514 -2698 0
8799 1514 -2696 0
8799 1514 -2695 0
8799 1516 -3151 0
8799 1516 -2948 -3153 0
8799 1516 -2946 -3155 0
8799 1516 -2944 -3157 0
8799 1516 -2942 -3159 0
8799 1516 -2940 -3161 0
8799 1516 -2938 -3163 0
8799 1516 -2936 -3165 0
8799 1516 -2934 -3167 0
8799 1516 -2932 -3169 0
8799 1516 -2930 -3171 0
8799 1516 -2928 -3173 0
8799 1516 -2926 -3175 0
8799 1516 -2924 -3177 0
8799 1516 -2922 -3179 0
8799 1516 -2920 -3181 0
8799 1516 -2918 -3183 0
8799 1516 -2916 -3185 0
8799 1516 -2914 -3187 0
8799 1516 -2912 -3189 0
8799 1516 -2910 -3191 0
8799 1516 -2908 -3193 0
8799 1516 -2906 -3195 0
8799 1516 -2904 -3197 0
8799 1516 -2902 -3199 0
8799 1516 -2900 -3201 0
8799 1516 -2898 -3203 0
8799 1516 -2896 0
8799 1516 -2894 0
8799 1516 -2892 0
8799 1516 -2890 0
8799 1516 -2888 0
8799 1516 -2886 0
8799 1516 -2884 0
8799 1516 -2882 0
8799 1516 -2880 0
8799 1516 -2878 0
8799 1516 -2876 0
8799 1516 -2874 0
8799 1516 -2872 0
8799 1516 -2870 0
8799 1516 -2868 0
8799 1516 -2866 0
8799 1516 -2864 0
8799 1516 -2862 0
8799 1516 -2860 0
8799 1516 -2858 0
8799 1516 -2856 0
8799 1516 -2854 0
8799 1516 -2852 0
8799 1516 -2850 0
8799 1516 -2848 0
8799 1516 -2846 0
8799 1516 -2844 0
8799 1516 -2842 0
8799 1516 -2840 0
8799 1516 -2838 0
8799 1516 -2836 0
8799 1516 -2834 0
8799 1516 -2832 0
8799 1516 -2830 0
8799 1516 -2828 0
8799 1516 -2826 0
8799 1516 -2824 0
8799 1516 -2822 0
8799 1516 -2820 0
8799 1516 -2818 0
8799 1516 -2816 0
8799 1516 -2814 0
8799 1516 -2812 0
8799 1516 -2810 0
8799 1516 -2808 0
8799 1516 -2806 0
8799 1516 -2804 0
8799 1516 -2802 0
8799 1516 -2800 0
8799 1516 -2798 0
8799 1516 -2796 0
8799 1516 -2794 0
8799 1516 -2792 0
8799 1516 -2790 0
8799 1516 -2788 0
8799 1516 -2786 0
8799 1516 -2784 0
8799 1516 -2782 0
8799 1516 -2780 0
8799 1516 -2778 0
8799 1516 -2776 0
8799 1516 -2774 0
8799 1516 -2772 0
8799 1516 -2770 0
8799 1516 -2768 0
8799 1516 -2766 0
8799 1516 -2764 0
8799 1516 -2762 0
8799 1516 -2760 0
8799 1516 -2758 0
8799 1516 -2756 0
8799 1516 -2754 0
8799 1516 -2752 0
8799 1516 -2750 0
8799 1516 -2748 0
8799 1516 -2746 0
8799 1516 -2744 0
8799 1516 -2742 0
8799 1516 -2740 0
8799 1516 -2738 0
8799 1516 -2736 0
8799 1516 -2734 0
8799 1516 -2732 0
8799 1516 -2730 0
8799 1516 -2728 0
8799 1516 -2726 0
8799 1516 -2724 0
8799 1516 -2722 0
8799 1516 -2720 0
8799 1516 -2718 0
8799 1516 -2716 0
8799 1516 -2714 0
8799 1516 -2712 0
8799 1516 -2710 0
8799 1516 -2708 0
8799 1516 -2706 0
8799 1516 -2704 0
8799 1516 -2702 0
8799 1516 -2700 0
8799 1516 -2698 0
8799 1516 -2696 0
8799 1516 -2695 0
8799 1518 -3153 0
8799 1518 -2948 -3155 0
8799 1518 -2946 -3157 0
8799 1518 -2944 -3159 0
8799 1518 -2942 -3161 0
8799 1518 -2940 -3163 0
8799 1518 -2938 -3165 0
8799 1518 -2936 -3167 0
8799 1518 -2934 -3169 0
8799 1518 -2932 -3171 0
8799 1518 -2930 -3173 0
8799 1518 -2928 -3175 0
8799 1518 -2926 -3177 0
8799 1518 -2924 -3179 0
8799 1518 -2922 -3181 0
8799 1518 -2920 -3183 0
8799 1518 -2918 -3185 0
8799 1518 -2916 -3187 0
8799 1518 -2914 -3189 0
8799 1518 -2912 -3191 0
8799 1518 -2910 -3193 0
8799 1518 -2908 -3195 0
8799 1518 -2906 -3197 0
8799 1518 -2904 -3199 0
8799 1518 -2902 -3201 0
8799 1518 -2900 -3203 0
8799 1518 -2898 0
8799 1518 -2896 0
8799 1518 -2894 0
8799 1518 -2892 0
8799 1518 -2890 0
8799 1518 -2888 0
8799 1518 -2886 0
8799 1518 -2884 0
8799 1518 -2882 0
8799 1518 -2880 0
8799 1518 -2878 0
8799 1518 -2876 0
8799 1518 -2874 0
8799 1518 -2872 0
8799 1518 -2870 0
8799 1518 -2868 0
8799 1518 -2866 0
8799 1518 -2864 0
8799 1518 -2862 0
8799 1518 -2860 0
8799 1518 -2858 0
8799 1518 -2856 0
8799 1518 -2854 0
8799 1518 -2852 0
8799 1518 -2850 0
8799 1518 -2848 0
8799 1518 -2846 0
8799 1518 -2844 0
8799 1518 -2842 0
8799 1518 -2840 0
8799 1518 -2838 0
8799 1518 -2836 0
8799 1518 -2834 0
8799 1518 -2832 0
8799 1518 -2830 0
8799 1518 -2828 0
8799 1518 -2826 0
8799 1518 -2824 0
8799 1518 -2822 0
8799 1518 -2820 0
8799 1518 -2818 0
8799 1518 -2816 0
8799 1518 -2814 0
8799 1518 -2812 0
8799 1518 -2810 0
8799 1518 -2808 0
8799 1518 -2806 0
8799 1518 -2804 0
8799 1518 -2802 0
8799 1518 -2800 0
8799 1518 -2798 0
8799 1518 -2796 0
8799 1518 -2794 0
8799 1518 -2792 0
8799 1518 -2790 0
8799 1518 -2788 0
8799 1518 -2786 0
8799 1518 -2784 0
8799 1518 -2782 0
8799 1518 -2780 0
8799 1518 -2778 0
8799 1518 -2776 0
8799 1518 -2774 0
8799 1518 -2772 0
8799 1518 -2770 0
8799 1518 -2768 0
8799 1518 -2766 0
8799 1518 -2764 0
8799 1518 -2762 0
8799 1518 -2760 0
8799 1518 -2758 0
8799 1518 -2756 0
8799 1518 -2754 0
8799 1518 -2752 0
8799 1518 -2750 0
8799 1518 -2748 0
8799 1518 -2746 0
8799 1518 -2744 0
8799 1518 -2742 0
8799 1518 -2740 0
8799 1518 -2738 0
8799 1518 -2736 0
8799 1518 -2734 0
8799 1518 -2732 0
8799 1518 -2730 0
8799 1518 -2728 0
8799 1518 -2726 0
8799 1518 -2724 0
8799 1518 -2722 0
8799 1518 -2720 0
8799 1518 -2718 0
8799 1518 -2716 0
8799 1518 -2714 0
8799 1518 -2712 0
8799 1518 -2710 0
8799 1518 -2708 0
8799 1518 -2706 0
8799 1518 -2704 0
8799 1518 -2702 0
8799 1518 -2700 0
8799 1518 -2698 0
8799 1518 -2696 0
8799 1518 -2695 0
8799 1520 -3155 0
8799 1520 -2948 -3157 0
8799 1520 -2946 -3159 0
8799 1520 -2944 -3161 0
8799 1520 -2942 -3163 0
8799 1520 -2940 -3165 0
8799 1520 -2938 -3167 0
8799 1520 -2936 -3169 0
8799 1520 -2934 -3171 0
8799 1520 -2932 -3173 0
8799 1520 -2930 -3175 0
8799 1520 -2928 -3177 0
8799 1520 -2926 -3179 0
8799 1520 -2924 -3181 0
8799 1520 -2922 -3183 0
8799 1520 -2920 -3185 0
8799 1520 -2918 -3187 0
8799 1520 -2916 -3189 0
8799 1520 -2914 -3191 0
8799 1520 -2912 -3193 0
8799 1520 -2910 -3195 0
8799 1520 -2908 -3197 0
8799 1520 -2906 -3199 0
8799 1520 -2904 -3201 0
8799 1520 -2902 -3203 0
8799 1520 -2900 0
8799 1520 -2898 0
8799 1520 -2896 0
8799 1520 -2894 0
8799 1520 -2892 0
8799 1520 -2890 0
8799 1520 -2888 0
8799 1520 -2886 0
8799 1520 -2884 0
8799 1520 -2882 0
8799 1520 -2880 0
8799 1520 -2878 0
8799 1520 -2876 0
8799 1520 -2874 0
8799 1520 -2872 0
8799 1520 -2870 0
8799 1520 -2868 0
8799 1520 -2866 0
8799 1520 -2864 0
8799 1520 -2862 0
8799 1520 -2860 0
8799 1520 -2858 0
8799 1520 -2856 0
8799 1520 -2854 0
8799 1520 -2852 0
8799 1520 -2850 0
8799 1520 -2848 0
8799 1520 -2846 0
8799 1520 -2844 0
8799 1520 -2842 0
8799 1520 -2840 0
8799 1520 -2838 0
8799 1520 -2836 0
8799 1520 -2834 0
8799 1520 -2832 0
8799 1520 -2830 0
8799 1520 -2828 0
8799 1520 -2826 0
8799 1520 -2824 0
8799 1520 -2822 0
8799 1520 -2820 0
8799 1520 -2818 0
8799 1520 -2816 0
8799 1520 -2814 0
8799 1520 -2812 0
8799 1520 -2810 0
8799 1520 -2808 0
8799 1520 -2806 0
8799 1520 -2804 0
8799 1520 -2802 0
8799 1520 -2800 0
8799 1520 -2798 0
8799 1520 -2796 0
8799 1520 -2794 0
8799 1520 -2792 0
8799 1520 -2790 0
8799 1520 -2788 0
8799 1520 -2786 0
8799 1520 -2784 0
8799 1520 -2782 0
8799 1520 -2780 0
8799 1520 -2778 0
8799 1520 -2776 0
8799 1520 -2774 0
8799 1520 -2772 0
8799 1520 -2770 0
8799 1520 -2768 0
8799 1520 -2766 0
8799 1520 -2764 0
8799 1520 -2762 0
8799 1520 -2760 0
8799 1520 -2758 0
8799 1520 -2756 0
8799 1520 -2754 0
8799 1520 -2752 0
8799 1520 -2750 0
8799 1520 -2748 0
8799 1520 -2746 0
8799 1520 -2744 0
8799 1520 -2742 0
8799 1520 -2740 0
8799 1520 -2738 0
8799 1520 -2736 0
8799 1520 -2734 0
8799 1520 -2732 0
8799 1520 -2730 0
8799 1520 -2728 0
8799 1520 -2726 0
8799 1520 -2724 0
8799 1520 -2722 0
8799 1520 -2720 0
8799 1520 -2718 0
8799 1520 -2716 0
8799 1520 -2714 0
8799 1520 -2712 0
8799 1520 -2710 0
8799 1520 -2708 0
8799 1520 -2706 0
8799 1520 -2704 0
8799 1520 -2702 0
8799 1520 -2700 0
8799 1520 -2698 0
8799 1520 -2696 0
8799 1520 -2695 0
8799 1522 -3157 0
8799 1522 -2948 -3159 0
8799 1522 -2946 -3161 0
8799 1522 -2944 -3163 0
8799 1522 -2942 -3165 0
8799 1522 -2940 -3167 0
8799 1522 -2938 -3169 0
8799 1522 -2936 -3171 0
8799 1522 -2934 -3173 0
8799 1522 -2932 -3175 0
8799 1522 -2930 -3177 0
8799 1522 -2928 -3179 0
8799 1522 -2926 -3181 0
8799 1522 -2924 -3183 0
8799 1522 -2922 -3185 0
8799 1522 -2920 -3187 0
8799 1522 -2918 -3189 0
8799 1522 -2916 -3191 0
8799 1522 -2914 -3193 0
8799 1522 -2912 -3195 0
8799 1522 -2910 -3197 0
8799 1522 -2908 -3199 0
8799 1522 -2906 -3201 0
8799 1522 -2904 -3203 0
8799 1522 -2902 0
8799 1522 -2900 0
8799 1522 -2898 0
8799 1522 -2896 0
8799 1522 -2894 0
8799 1522 -2892 0
8799 1522 -2890 0
8799 1522 -2888 0
8799 1522 -2886 0
8799 1522 -2884 0
8799 1522 -2882 0
8799 1522 -2880 0
8799 1522 -2878 0
8799 1522 -2876 0
8799 1522 -2874 0
8799 1522 -2872 0
8799 1522 -2870 0
8799 1522 -2868 0
8799 1522 -2866 0
8799 1522 -2864 0
8799 1522 -2862 0
8799 1522 -2860 0
8799 1522 -2858 0
8799 1522 -2856 0
8799 1522 -2854 0
8799 1522 -2852 0
8799 1522 -2850 0
8799 1522 -2848 0
8799 1522 -2846 0
8799 1522 -2844 0
8799 1522 -2842 0
8799 1522 -2840 0
8799 1522 -2838 0
8799 1522 -2836 0
8799 1522 -2834 0
8799 1522 -2832 0
8799 1522 -2830 0
8799 1522 -2828 0
8799 1522 -2826 0
8799 1522 -2824 0
8799 1522 -2822 0
8799 1522 -2820 0
8799 1522 -2818 0
8799 1522 -2816 0
8799 1522 -2814 0
8799 1522 -2812 0
8799 1522 -2810 0
8799 1522 -2808 0
8799 1522 -2806 0
8799 1522 -2804 0
8799 1522 -2802 0
8799 1522 -2800 0
8799 1522 -2798 0
8799 1522 -2796 0
8799 1522 -2794 0
8799 1522 -2792 0
8799 1522 -2790 0
8799 1522 -2788 0
8799 1522 -2786 0
8799 1522 -2784 0
8799 1522 -2782 0
8799 1522 -2780 0
8799 1522 -2778 0
8799 1522 -2776 0
8799 1522 -2774 0
8799 1522 -2772 0
8799 1522 -2770 0
8799 1522 -2768 0
8799 1522 -2766 0
8799 1522 -2764 0
8799 1522 -2762 0
8799 1522 -2760 0
8799 1522 -2758 0
8799 1522 -2756 0
8799 1522 -2754 0
8799 1522 -2752 0
8799 1522 -2750 0
8799 1522 -2748 0
8799 1522 -2746 0
8799 1522 -2744 0
8799 1522 -2742 0
8799 1522 -2740 0
8799 1522 -2738 0
8799 1522 -2736 0
8799 1522 -2734 0
8799 1522 -2732 0
8799 1522 -2730 0
8799 1522 -2728 0
8799 1522 -2726 0
8799 1522 -2724 0
8799 1522 -2722 0
8799 1522 -2720 0
8799 1522 -2718 0
8799 1522 -2716 0
8799 1522 -2714 0
8799 1522 -2712 0
8799 1522 -2710 0
8799 1522 -2708 0
8799 1522 -2706 0
8799 1522 -2704 0
8799 1522 -2702 0
8799 1522 -2700 0
8799 1522 -2698 0
8799 1522 -2696 0
8799 1522 -2695 0
8799 1524 -3159 0
8799 1524 -2948 -3161 0
8799 1524 -2946 -3163 0
8799 1524 -2944 -3165 0
8799 1524 -2942 -3167 0
8799 1524 -2940 -3169 0
8799 1524 -2938 -3171 0
8799 1524 -2936 -3173 0
8799 1524 -2934 -3175 0
8799 1524 -2932 -3177 0
8799 1524 -2930 -3179 0
8799 1524 -2928 -3181 0
8799 1524 -2926 -3183 0
8799 1524 -2924 -3185 0
8799 1524 -2922 -3187 0
8799 1524 -2920 -3189 0
8799 1524 -2918 -3191 0
8799 1524 -2916 -3193 0
8799 1524 -2914 -3195 0
8799 1524 -2912 -3197 0
8799 1524 -2910 -3199 0
8799 1524 -2908 -3201 0
8799 1524 -2906 -3203 0
8799 1524 -2904 0
8799 1524 -2902 0
8799 1524 -2900 0
8799 1524 -2898 0
8799 1524 -2896 0
8799 1524 -2894 0
8799 1524 -2892 0
8799 1524 -2890 0
8799 1524 -2888 0
8799 1524 -2886 0
8799 1524 -2884 0
8799 1524 -2882 0
8799 1524 -2880 0
8799 1524 -2878 0
8799 1524 -2876 0
8799 1524 -2874 0
8799 1524 -2872 0
8799 1524 -2870 0
8799 1524 -2868 0
8799 1524 -2866 0
8799 1524 -2864 0
8799 1524 -2862 0
8799 1524 -2860 0
8799 1524 -2858 0
8799 1524 -2856 0
8799 1524 -2854 0
8799 1524 -2852 0
8799 1524 -2850 0
8799 1524 -2848 0
8799 1524 -2846 0
8799 1524 -2844 0
8799 1524 -2842 0
8799 1524 -2840 0
8799 1524 -2838 0
8799 1524 -2836 0
8799 1524 -2834 0
8799 1524 -2832 0
8799 1524 -2830 0
8799 1524 -2828 0
8799 1524 -2826 0
8799 1524 -2824 0
8799 1524 -2822 0
8799 1524 -2820 0
8799 1524 -2818 0
8799 1524 -2816 0
8799 1524 -2814 0
8799 1524 -2812 0
8799 1524 -2810 0
8799 1524 -2808 0
8799 1524 -2806 0
8799 1524 -2804 0
8799 1524 -2802 0
8799 1524 -2800 0
8799 1524 -2798 0
8799 1524 -2796 0
8799 1524 -2794 0
8799 1524 -2792 0
8799 1524 -2790 0
8799 1524 -2788 0
8799 1524 -2786 0
8799 1524 -2784 0
8799 1524 -2782 0
8799 1524 -2780 0
8799 1524 -2778 0
8799 1524 -2776 0
8799 1524 -2774 0
8799 1524 -2772 0
8799 1524 -2770 0
8799 1524 -2768 0
8799 1524 -2766 0
8799 1524 -2764 0
8799 1524 -2762 0
8799 1524 -2760 0
8799 1524 -2758 0
8799 1524 -2756 0
8799 1524 -2754 0
8799 1524 -2752 0
8799 1524 -2750 0
8799 1524 -2748 0
8799 1524 -2746 0
8799 1524 -2744 0
8799 1524 -2742 0
8799 1524 -2740 0
8799 1524 -2738 0
8799 1524 -2736 0
8799 1524 -2734 0
8799 1524 -2732 0
8799 1524 -2730 0
8799 1524 -2728 0
8799 1524 -2726 0
8799 1524 -2724 0
8799 1524 -2722 0
8799 1524 -2720 0
8799 1524 -2718 0
8799 1524 -2716 0
8799 1524 -2714 0
8799 1524 -2712 0
8799 1524 -2710 0
8799 1524 -2708 0
8799 1524 -2706 0
8799 1524 -2704 0
8799 1524 -2702 0
8799 1524 -2700 0
8799 1524 -2698 0
8799 1524 -2696 0
8799 1524 -2695 0
8799 1526 -3161 0
8799 1526 -2948 -3163 0
8799 1526 -2946 -3165 0
8799 1526 -2944 -3167 0
8799 1526 -2942 -3169 0
8799 1526 -2940 -3171 0
8799 1526 -2938 -3173 0
8799 1526 -2936 -3175 0
8799 1526 -2934 -3177 0
8799 1526 -2932 -3179 0
8799 1526 -2930 -3181 0
8799 1526 -2928 -3183 0
8799 1526 -2926 -3185 0
8799 1526 -2924 -3187 0
8799 1526 -2922 -3189 0
8799 1526 -2920 -3191 0
8799 1526 -2918 -3193 0
8799 1526 -2916 -3195 0
8799 1526 -2914 -3197 0
8799 1526 -2912 -3199 0
8799 1526 -2910 -3201 0
8799 1526 -2908 -3203 0
8799 1526 -2906 0
8799 1526 -2904 0
8799 1526 -2902 0
8799 1526 -2900 0
8799 1526 -2898 0
8799 1526 -2896 0
8799 1526 -2894 0
8799 1526 -2892 0
8799 1526 -2890 0
8799 1526 -2888 0
8799 1526 -2886 0
8799 1526 -2884 0
8799 1526 -2882 0
8799 1526 -2880 0
8799 1526 -2878 0
8799 1526 -2876 0
8799 1526 -2874 0
8799 1526 -2872 0
8799 1526 -2870 0
8799 1526 -2868 0
8799 1526 -2866 0
8799 1526 -2864 0
8799 1526 -2862 0
8799 1526 -2860 0
8799 1526 -2858 0
8799 1526 -2856 0
8799 1526 -2854 0
8799 1526 -2852 0
8799 1526 -2850 0
8799 1526 -2848 0
8799 1526 -2846 0
8799 1526 -2844 0
8799 1526 -2842 0
8799 1526 -2840 0
8799 1526 -2838 0
8799 1526 -2836 0
8799 1526 -2834 0
8799 1526 -2832 0
8799 1526 -2830 0
8799 1526 -2828 0
8799 1526 -2826 0
8799 1526 -2824 0
8799 1526 -2822 0
8799 1526 -2820 0
8799 1526 -2818 0
8799 1526 -2816 0
8799 1526 -2814 0
8799 1526 -2812 0
8799 1526 -2810 0
8799 1526 -2808 0
8799 1526 -2806 0
8799 1526 -2804 0
8799 1526 -2802 0
8799 1526 -2800 0
8799 1526 -2798 0
8799 1526 -2796 0
8799 1526 -2794 0
8799 1526 -2792 0
8799 1526 -2790 0
8799 1526 -2788 0
8799 1526 -2786 0
8799 1526 -2784 0
8799 1526 -2782 0
8799 1526 -2780 0
8799 1526 -2778 0
8799 1526 -2776 0
8799 1526 -2774 0
8799 1526 -2772 0
8799 1526 -2770 0
8799 1526 -2768 0
8799 1526 -2766 0
8799 1526 -2764 0
8799 1526 -2762 0
8799 1526 -2760 0
8799 1526 -2758 0
8799 1526 -2756 0
8799 1526 -2754 0
8799 1526 -2752 0
8799 1526 -2750 0
8799 1526 -2748 0
8799 1526 -2746 0
8799 1526 -2744 0
8799 1526 -2742 0
8799 1526 -2740 0
8799 1526 -2738 0
8799 1526 -2736 0
8799 1526 -2734 0
8799 1526 -2732 0
8799 1526 -2730 0
8799 1526 -2728 0
8799 1526 -2726 0
8799 1526 -2724 0
8799 1526 -2722 0
8799 1526 -2720 0
8799 1526 -2718 0
8799 1526 -2716 0
8799 1526 -2714 0
8799 1526 -2712 0
8799 1526 -2710 0
8799 1526 -2708 0
8799 1526 -2706 0
8799 1526 -2704 0
8799 1526 -2702 0
8799 1526 -2700 0
8799 1526 -2698 0
8799 1526 -2696 0
8799 1526 -2695 0
8799 1528 -3163 0
8799 1528 -2948 -3165 0
8799 1528 -2946 -3167 0
8799 1528 -2944 -3169 0
8799 1528 -2942 -3171 0
8799 1528 -2940 -3173 0
8799 1528 -2938 -3175 0
8799 1528 -2936 -3177 0
8799 1528 -2934 -3179 0
8799 1528 -2932 -3181 0
8799 1528 -2930 -3183 0
8799 1528 -2928 -3185 0
8799 1528 -2926 -3187 0
8799 1528 -2924 -3189 0
8799 1528 -2922 -3191 0
8799 1528 -2920 -3193 0
8799 1528 -2918 -3195 0
8799 1528 -2916 -3197 0
8799 1528 -2914 -3199 0
8799 1528 -2912 -3201 0
8799 1528 -2910 -3203 0
8799 1528 -2908 0
8799 1528 -2906 0
8799 1528 -2904 0
8799 1528 -2902 0
8799 1528 -2900 0
8799 1528 -2898 0
8799 1528 -2896 0
8799 1528 -2894 0
8799 1528 -2892 0
8799 1528 -2890 0
8799 1528 -2888 0
8799 1528 -2886 0
8799 1528 -2884 0
8799 1528 -2882 0
8799 1528 -2880 0
8799 1528 -2878 0
8799 1528 -2876 0
8799 1528 -2874 0
8799 1528 -2872 0
8799 1528 -2870 0
8799 1528 -2868 0
8799 1528 -2866 0
8799 1528 -2864 0
8799 1528 -2862 0
8799 1528 -2860 0
8799 1528 -2858 0
8799 1528 -2856 0
8799 1528 -2854 0
8799 1528 -2852 0
8799 1528 -2850 0
8799 1528 -2848 0
8799 1528 -2846 0
8799 1528 -2844 0
8799 1528 -2842 0
8799 1528 -2840 0
8799 1528 -2838 0
8799 1528 -2836 0
8799 1528 -2834 0
8799 1528 -2832 0
8799 1528 -2830 0
8799 1528 -2828 0
8799 1528 -2826 0
8799 1528 -2824 0
8799 1528 -2822 0
8799 1528 -2820 0
8799 1528 -2818 0
8799 1528 -2816 0
8799 1528 -2814 0
8799 1528 -2812 0
8799 1528 -2810 0
8799 1528 -2808 0
8799 1528 -2806 0
8799 1528 -2804 0
8799 1528 -2802 0
8799 1528 -2800 0
8799 1528 -2798 0
8799 1528 -2796 0
8799 1528 -2794 0
8799 1528 -2792 0
8799 1528 -2790 0
8799 1528 -2788 0
8799 1528 -2786 0
8799 1528 -2784 0
8799 1528 -2782 0
8799 1528 -2780 0
8799 1528 -2778 0
8799 1528 -2776 0
8799 1528 -2774 0
8799 1528 -2772 0
8799 1528 -2770 0
8799 1528 -2768 0
8799 1528 -2766 0
8799 1528 -2764 0
8799 1528 -2762 0
8799 1528 -2760 0
8799 1528 -2758 0
8799 1528 -2756 0
8799 1528 -2754 0
8799 1528 -2752 0
8799 1528 -2750 0
8799 1528 -2748 0
8799 1528 -2746 0
8799 1528 -2744 0
8799 1528 -2742 0
8799 1528 -2740 0
8799 1528 -2738 0
8799 1528 -2736 0
8799 1528 -2734 0
8799 1528 -2732 0
8799 1528 -2730 0
8799 1528 -2728 0
8799 1528 -2726 0
8799 1528 -2724 0
8799 1528 -2722 0
8799 1528 -2720 0
8799 1528 -2718 0
8799 1528 -2716 0
8799 1528 -2714 0
8799 1528 -2712 0
8799 1528 -2710 0
8799 1528 -2708 0
8799 1528 -2706 0
8799 1528 -2704 0
8799 1528 -2702 0
8799 1528 -2700 0
8799 1528 -2698 0
8799 1528 -2696 0
8799 1528 -2695 0
8799 1530 -3165 0
8799 1530 -2948 -3167 0
8799 1530 -2946 -3169 0
8799 1530 -2944 -3171 0
8799 1530 -2942 -3173 0
8799 1530 -2940 -3175 0
8799 1530 -2938 -3177 0
8799 1530 -2936 -3179 0
8799 1530 -2934 -3181 0
8799 1530 -2932 -3183 0
8799 1530 -2930 -3185 0
8799 1530 -2928 -3187 0
8799 1530 -2926 -3189 0
8799 1530 -2924 -3191 0
8799 1530 -2922 -3193 0
8799 1530 -2920 -3195 0
8799 1530 -2918 -3197 0
8799 1530 -2916 -3199 0
8799 1530 -2914 -3201 0
8799 1530 -2912 -3203 0
8799 1530 -2910 0
8799 1530 -2908 0
8799 1530 -2906 0
8799 1530 -2904 0
8799 1530 -2902 0
8799 1530 -2900 0
8799 1530 -2898 0
8799 1530 -2896 0
8799 1530 -2894 0
8799 1530 -2892 0
8799 1530 -2890 0
8799 1530 -2888 0
8799 1530 -2886 0
8799 1530 -2884 0
8799 1530 -2882 0
8799 1530 -2880 0
8799 1530 -2878 0
8799 1530 -2876 0
8799 1530 -2874 0
8799 1530 -2872 0
8799 1530 -2870 0
8799 1530 -2868 0
8799 1530 -2866 0
8799 1530 -2864 0
8799 1530 -2862 0
8799 1530 -2860 0
8799 1530 -2858 0
8799 1530 -2856 0
8799 1530 -2854 0
8799 1530 -2852 0
8799 1530 -2850 0
8799 1530 -2848 0
8799 1530 -2846 0
8799 1530 -2844 0
8799 1530 -2842 0
8799 1530 -2840 0
8799 1530 -2838 0
8799 1530 -2836 0
8799 1530 -2834 0
8799 1530 -2832 0
8799 1530 -2830 0
8799 1530 -2828 0
8799 1530 -2826 0
8799 1530 -2824 0
8799 1530 -2822 0
8799 1530 -2820 0
8799 1530 -2818 0
8799 1530 -2816 0
8799 1530 -2814 0
8799 1530 -2812 0
8799 1530 -2810 0
8799 1530 -2808 0
8799 1530 -2806 0
8799 1530 -2804 0
8799 1530 -2802 0
8799 1530 -2800 0
8799 1530 -2798 0
8799 1530 -2796 0
8799 1530 -2794 0
8799 1530 -2792 0
8799 1530 -2790 0
8799 1530 -2788 0
8799 1530 -2786 0
8799 1530 -2784 0
8799 1530 -2782 0
8799 1530 -2780 0
8799 1530 -2778 0
8799 1530 -2776 0
8799 1530 -2774 0
8799 1530 -2772 0
8799 1530 -2770 0
8799 1530 -2768 0
8799 1530 -2766 0
8799 1530 -2764 0
8799 1530 -2762 0
8799 1530 -2760 0
8799 1530 -2758 0
8799 1530 -2756 0
8799 1530 -2754 0
8799 1530 -2752 0
8799 1530 -2750 0
8799 1530 -2748 0
8799 1530 -2746 0
8799 1530 -2744 0
8799 1530 -2742 0
8799 1530 -2740 0
8799 1530 -2738 0
8799 1530 -2736 0
8799 1530 -2734 0
8799 1530 -2732 0
8799 1530 -2730 0
8799 1530 -2728 0
8799 1530 -2726 0
8799 1530 -2724 0
8799 1530 -2722 0
8799 1530 -2720 0
8799 1530 -2718 0
8799 1530 -2716 0
8799 1530 -2714 0
8799 1530 -2712 0
8799 1530 -2710 0
8799 1530 -2708 0
8799 1530 -2706 0
8799 1530 -2704 0
8799 1530 -2702 0
8799 1530 -2700 0
8799 1530 -2698 0
8799 1530 -2696 0
8799 1530 -2695 0
8799 1532 -3167 0
8799 1532 -2948 -3169 0
8799 1532 -2946 -3171 0
8799 1532 -2944 -3173 0
8799 1532 -2942 -3175 0
8799 1532 -2940 -3177 0
8799 1532 -2938 -3179 0
8799 1532 -2936 -3181 0
8799 1532 -2934 -3183 0
8799 1532 -2932 -3185 0
8799 1532 -2930 -3187 0
8799 1532 -2928 -3189 0
8799 1532 -2926 -3191 0
8799 1532 -2924 -3193 0
8799 1532 -2922 -3195 0
8799 1532 -2920 -3197 0
8799 1532 -2918 -3199 0
8799 1532 -2916 -3201 0
8799 1532 -2914 -3203 0
8799 1532 -2912 0
8799 1532 -2910 0
8799 1532 -2908 0
8799 1532 -2906 0
8799 1532 -2904 0
8799 1532 -2902 0
8799 1532 -2900 0
8799 1532 -2898 0
8799 1532 -2896 0
8799 1532 -2894 0
8799 1532 -2892 0
8799 1532 -2890 0
8799 1532 -2888 0
8799 1532 -2886 0
8799 1532 -2884 0
8799 1532 -2882 0
8799 1532 -2880 0
8799 1532 -2878 0
8799 1532 -2876 0
8799 1532 -2874 0
8799 1532 -2872 0
8799 1532 -2870 0
8799 1532 -2868 0
8799 1532 -2866 0
8799 1532 -2864 0
8799 1532 -2862 0
8799 1532 -2860 0
8799 1532 -2858 0
8799 1532 -2856 0
8799 1532 -2854 0
8799 1532 -2852 0
8799 1532 -2850 0
8799 1532 -2848 0
8799 1532 -2846 0
8799 1532 -2844 0
8799 1532 -2842 0
8799 1532 -2840 0
8799 1532 -2838 0
8799 1532 -2836 0
8799 1532 -2834 0
8799 1532 -2832 0
8799 1532 -2830 0
8799 1532 -2828 0
8799 1532 -2826 0
8799 1532 -2824 0
8799 1532 -2822 0
8799 1532 -2820 0
8799 1532 -2818 0
8799 1532 -2816 0
8799 1532 -2814 0
8799 1532 -2812 0
8799 1532 -2810 0
8799 1532 -2808 0
8799 1532 -2806 0
8799 1532 -2804 0
8799 1532 -2802 0
8799 1532 -2800 0
8799 1532 -2798 0
8799 1532 -2796 0
8799 1532 -2794 0
8799 1532 -2792 0
8799 1532 -2790 0
8799 1532 -2788 0
8799 1532 -2786 0
8799 1532 -2784 0
8799 1532 -2782 0
8799 1532 -2780 0
8799 1532 -2778 0
8799 1532 -2776 0
8799 1532 -2774 0
8799 1532 -2772 0
8799 1532 -2770 0
8799 1532 -2768 0
8799 1532 -2766 0
8799 1532 -2764 0
8799 1532 -2762 0
8799 1532 -2760 0
8799 1532 -2758 0
8799 1532 -2756 0
8799 1532 -2754 0
8799 1532 -2752 0
8799 1532 -2750 0
8799 1532 -2748 0
8799 1532 -2746 0
8799 1532 -2744 0
8799 1532 -2742 0
8799 1532 -2740 0
8799 1532 -2738 0
8799 1532 -2736 0
8799 1532 -2734 0
8799 1532 -2732 0
8799 1532 -2730 0
8799 1532 -2728 0
8799 1532 -2726 0
8799 1532 -2724 0
8799 1532 -2722 0
8799 1532 -2720 0
8799 1532 -2718 0
8799 1532 -2716 0
8799 1532 -2714 0
8799 1532 -2712 0
8799 1532 -2710 0
8799 1532 -2708 0
8799 1532 -2706 0
8799 1532 -2704 0
8799 1532 -2702 0
8799 1532 -2700 0
8799 1532 -2698 0
8799 1532 -2696 0
8799 1532 -2695 0
8799 1534 -3169 0
8799 1534 -2948 -3171 0
8799 1534 -2946 -3173 0
8799 1534 -2944 -3175 0
8799 1534 -2942 -3177 0
8799 1534 -2940 -3179 0
8799 1534 -2938 -3181 0
8799 1534 -2936 -3183 0
8799 1534 -2934 -3185 0
8799 1534 -2932 -3187 0
8799 1534 -2930 -3189 0
8799 1534 -2928 -3191 0
8799 1534 -2926 -3193 0
8799 1534 -2924 -3195 0
8799 1534 -2922 -3197 0
8799 1534 -2920 -3199 0
8799 1534 -2918 -3201 0
8799 1534 -2916 -3203 0
8799 1534 -2914 0
8799 1534 -2912 0
8799 1534 -2910 0
8799 1534 -2908 0
8799 1534 -2906 0
8799 1534 -2904 0
8799 1534 -2902 0
8799 1534 -2900 0
8799 1534 -2898 0
8799 1534 -2896 0
8799 1534 -2894 0
8799 1534 -2892 0
8799 1534 -2890 0
8799 1534 -2888 0
8799 1534 -2886 0
8799 1534 -2884 0
8799 1534 -2882 0
8799 1534 -2880 0
8799 1534 -2878 0
8799 1534 -2876 0
8799 1534 -2874 0
8799 1534 -2872 0
8799 1534 -2870 0
8799 1534 -2868 0
8799 1534 -2866 0
8799 1534 -2864 0
8799 1534 -2862 0
8799 1534 -2860 0
8799 1534 -2858 0
8799 1534 -2856 0
8799 1534 -2854 0
8799 1534 -2852 0
8799 1534 -2850 0
8799 1534 -2848 0
8799 1534 -2846 0
8799 1534 -2844 0
8799 1534 -2842 0
8799 1534 -2840 0
8799 1534 -2838 0
8799 1534 -2836 0
8799 1534 -2834 0
8799 1534 -2832 0
8799 1534 -2830 0
8799 1534 -2828 0
8799 1534 -2826 0
8799 1534 -2824 0
8799 1534 -2822 0
8799 1534 -2820 0
8799 1534 -2818 0
8799 1534 -2816 0
8799 1534 -2814 0
8799 1534 -2812 0
8799 1534 -2810 0
8799 1534 -2808 0
8799 1534 -2806 0
8799 1534 -2804 0
8799 1534 -2802 0
8799 1534 -2800 0
8799 1534 -2798 0
8799 1534 -2796 0
8799 1534 -2794 0
8799 1534 -2792 0
8799 1534 -2790 0
8799 1534 -2788 0
8799 1534 -2786 0
8799 1534 -2784 0
8799 1534 -2782 0
8799 1534 -2780 0
8799 1534 -2778 0
8799 1534 -2776 0
8799 1534 -2774 0
8799 1534 -2772 0
8799 1534 -2770 0
8799 1534 -2768 0
8799 1534 -2766 0
8799 1534 -2764 0
8799 1534 -2762 0
8799 1534 -2760 0
8799 1534 -2758 0
8799 1534 -2756 0
8799 1534 -2754 0
8799 1534 -2752 0
8799 1534 -2750 0
8799 1534 -2748 0
8799 1534 -2746 0
8799 1534 -2744 0
8799 1534 -2742 0
8799 1534 -2740 0
8799 1534 -2738 0
8799 1534 -2736 0
8799 1534 -2734 0
8799 1534 -2732 0
8799 1534 -2730 0
8799 1534 -2728 0
8799 1534 -2726 0
8799 1534 -2724 0
8799 1534 -2722 0
8799 1534 -2720 0
8799 1534 -2718 0
8799 1534 -2716 0
8799 1534 -2714 0
8799 1534 -2712 0
8799 1534 -2710 0
8799 1534 -2708 0
8799 1534 -2706 0
8799 1534 -2704 0
8799 1534 -2702 0
8799 1534 -2700 0
8799 1534 -2698 0
8799 1534 -2696 0
8799 1534 -2695 0
8799 1536 -3171 0
8799 1536 -2948 -3173 0
8799 1536 -2946 -3175 0
8799 1536 -2944 -3177 0
8799 1536 -2942 -3179 0
8799 1536 -2940 -3181 0
8799 1536 -2938 -3183 0
8799 1536 -2936 -3185 0
8799 1536 -2934 -3187 0
8799 1536 -2932 -3189 0
8799 1536 -2930 -3191 0
8799 1536 -2928 -3193 0
8799 1536 -2926 -3195 0
8799 1536 -2924 -3197 0
8799 1536 -2922 -3199 0
8799 1536 -2920 -3201 0
8799 1536 -2918 -3203 0
8799 1536 -2916 0
8799 1536 -2914 0
8799 1536 -2912 0
8799 1536 -2910 0
8799 1536 -2908 0
8799 1536 -2906 0
8799 1536 -2904 0
8799 1536 -2902 0
8799 1536 -2900 0
8799 1536 -2898 0
8799 1536 -2896 0
8799 1536 -2894 0
8799 1536 -2892 0
8799 1536 -2890 0
8799 1536 -2888 0
8799 1536 -2886 0
8799 1536 -2884 0
8799 1536 -2882 0
8799 1536 -2880 0
8799 1536 -2878 0
8799 1536 -2876 0
8799 1536 -2874 0
8799 1536 -2872 0
8799 1536 -2870 0
8799 1536 -2868 0
8799 1536 -2866 0
8799 1536 -2864 0
8799 1536 -2862 0
8799 1536 -2860 0
8799 1536 -2858 0
8799 1536 -2856 0
8799 1536 -2854 0
8799 1536 -2852 0
8799 1536 -2850 0
8799 1536 -2848 0
8799 1536 -2846 0
8799 1536 -2844 0
8799 1536 -2842 0
8799 1536 -2840 0
8799 1536 -2838 0
8799 1536 -2836 0
8799 1536 -2834 0
8799 1536 -2832 0
8799 1536 -2830 0
8799 1536 -2828 0
8799 1536 -2826 0
8799 1536 -2824 0
8799 1536 -2822 0
8799 1536 -2820 0
8799 1536 -2818 0
8799 1536 -2816 0
8799 1536 -2814 0
8799 1536 -2812 0
8799 1536 -2810 0
8799 1536 -2808 0
8799 1536 -2806 0
8799 1536 -2804 0
8799 1536 -2802 0
8799 1536 -2800 0
8799 1536 -2798 0
8799 1536 -2796 0
8799 1536 -2794 0
8799 1536 -2792 0
8799 1536 -2790 0
8799 1536 -2788 0
8799 1536 -2786 0
8799 1536 -2784 0
8799 1536 -2782 0
8799 1536 -2780 0
8799 1536 -2778 0
8799 1536 -2776 0
8799 1536 -2774 0
8799 1536 -2772 0
8799 1536 -2770 0
8799 1536 -2768 0
8799 1536 -2766 0
8799 1536 -2764 0
8799 1536 -2762 0
8799 1536 -2760 0
8799 1536 -2758 0
8799 1536 -2756 0
8799 1536 -2754 0
8799 1536 -2752 0
8799 1536 -2750 0
8799 1536 -2748 0
8799 1536 -2746 0
8799 1536 -2744 0
8799 1536 -2742 0
8799 1536 -2740 0
8799 1536 -2738 0
8799 1536 -2736 0
8799 1536 -2734 0
8799 1536 -2732 0
8799 1536 -2730 0
8799 1536 -2728 0
8799 1536 -2726 0
8799 1536 -2724 0
8799 1536 -2722 0
8799 1536 -2720 0
8799 1536 -2718 0
8799 1536 -2716 0
8799 1536 -2714 0
8799 1536 -2712 0
8799 1536 -2710 0
8799 1536 -2708 0
8799 1536 -2706 0
8799 1536 -2704 0
8799 1536 -2702 0
8799 1536 -2700 0
8799 1536 -2698 0
8799 1536 -2696 0
8799 1536 -2695 0
8799 1538 -3173 0
8799 1538 -2948 -3175 0
8799 1538 -2946 -3177 0
8799 1538 -2944 -3179 0
8799 1538 -2942 -3181 0
8799 1538 -2940 -3183 0
8799 1538 -2938 -3185 0
8799 1538 -2936 -3187 0
8799 1538 -2934 -3189 0
8799 1538 -2932 -3191 0
8799 1538 -2930 -3193 0
8799 1538 -2928 -3195 0
8799 1538 -2926 -3197 0
8799 1538 -2924 -3199 0
8799 1538 -2922 -3201 0
8799 1538 -2920 -3203 0
8799 1538 -2918 0
8799 1538 -2916 0
8799 1538 -2914 0
8799 1538 -2912 0
8799 1538 -2910 0
8799 1538 -2908 0
8799 1538 -2906 0
8799 1538 -2904 0
8799 1538 -2902 0
8799 1538 -2900 0
8799 1538 -2898 0
8799 1538 -2896 0
8799 1538 -2894 0
8799 1538 -2892 0
8799 1538 -2890 0
8799 1538 -2888 0
8799 1538 -2886 0
8799 1538 -2884 0
8799 1538 -2882 0
8799 1538 -2880 0
8799 1538 -2878 0
8799 1538 -2876 0
8799 1538 -2874 0
8799 1538 -2872 0
8799 1538 -2870 0
8799 1538 -2868 0
8799 1538 -2866 0
8799 1538 -2864 0
8799 1538 -2862 0
8799 1538 -2860 0
8799 1538 -2858 0
8799 1538 -2856 0
8799 1538 -2854 0
8799 1538 -2852 0
8799 1538 -2850 0
8799 1538 -2848 0
8799 1538 -2846 0
8799 1538 -2844 0
8799 1538 -2842 0
8799 1538 -2840 0
8799 1538 -2838 0
8799 1538 -2836 0
8799 1538 -2834 0
8799 1538 -2832 0
8799 1538 -2830 0
8799 1538 -2828 0
8799 1538 -2826 0
8799 1538 -2824 0
8799 1538 -2822 0
8799 1538 -2820 0
8799 1538 -2818 0
8799 1538 -2816 0
8799 1538 -2814 0
8799 1538 -2812 0
8799 1538 -2810 0
8799 1538 -2808 0
8799 1538 -2806 0
8799 1538 -2804 0
8799 1538 -2802 0
8799 1538 -2800 0
8799 1538 -2798 0
8799 1538 -2796 0
8799 1538 -2794 0
8799 1538 -2792 0
8799 1538 -2790 0
8799 1538 -2788 0
8799 1538 -2786 0
8799 1538 -2784 0
8799 1538 -2782 0
8799 1538 -2780 0
8799 1538 -2778 0
8799 1538 -2776 0
8799 1538 -2774 0
8799 1538 -2772 0
8799 1538 -2770 0
8799 1538 -2768 0
8799 1538 -2766 0
8799 1538 -2764 0
8799 1538 -2762 0
8799 1538 -2760 0
8799 1538 -2758 0
8799 1538 -2756 0
8799 1538 -2754 0
8799 1538 -2752 0
8799 1538 -2750 0
8799 1538 -2748 0
8799 1538 -2746 0
8799 1538 -2744 0
8799 1538 -2742 0
8799 1538 -2740 0
8799 1538 -2738 0
8799 1538 -2736 0
8799 1538 -2734 0
8799 1538 -2732 0
8799 1538 -2730 0
8799 1538 -2728 0
8799 1538 -2726 0
8799 1538 -2724 0
8799 1538 -2722 0
8799 1538 -2720 0
8799 1538 -2718 0
8799 1538 -2716 0
8799 1538 -2714 0
8799 1538 -2712 0
8799 1538 -2710 0
8799 1538 -2708 0
8799 1538 -2706 0
8799 1538 -2704 0
8799 1538 -2702 0
8799 1538 -2700 0
8799 1538 -2698 0
8799 1538 -2696 0
8799 1538 -2695 0
8799 1540 -3175 0
8799 1540 -2948 -3177 0
8799 1540 -2946 -3179 0
8799 1540 -2944 -3181 0
8799 1540 -2942 -3183 0
8799 1540 -2940 -3185 0
8799 1540 -2938 -3187 0
8799 1540 -2936 -3189 0
8799 1540 -2934 -3191 0
8799 1540 -2932 -3193 0
8799 1540 -2930 -3195 0
8799 1540 -2928 -3197 0
8799 1540 -2926 -3199 0
8799 1540 -2924 -3201 0
8799 1540 -2922 -3203 0
8799 1540 -2920 0
8799 1540 -2918 0
8799 1540 -2916 0
8799 1540 -2914 0
8799 1540 -2912 0
8799 1540 -2910 0
8799 1540 -2908 0
8799 1540 -2906 0
8799 1540 -2904 0
8799 1540 -2902 0
8799 1540 -2900 0
8799 1540 -2898 0
8799 1540 -2896 0
8799 1540 -2894 0
8799 1540 -2892 0
8799 1540 -2890 0
8799 1540 -2888 0
8799 1540 -2886 0
8799 1540 -2884 0
8799 1540 -2882 0
8799 1540 -2880 0
8799 1540 -2878 0
8799 1540 -2876 0
8799 1540 -2874 0
8799 1540 -2872 0
8799 1540 -2870 0
8799 1540 -2868 0
8799 1540 -2866 0
8799 1540 -2864 0
8799 1540 -2862 0
8799 1540 -2860 0
8799 1540 -2858 0
8799 1540 -2856 0
8799 1540 -2854 0
8799 1540 -2852 0
8799 1540 -2850 0
8799 1540 -2848 0
8799 1540 -2846 0
8799 1540 -2844 0
8799 1540 -2842 0
8799 1540 -2840 0
8799 1540 -2838 0
8799 1540 -2836 0
8799 1540 -2834 0
8799 1540 -2832 0
8799 1540 -2830 0
8799 1540 -2828 0
8799 1540 -2826 0
8799 1540 -2824 0
8799 1540 -2822 0
8799 1540 -2820 0
8799 1540 -2818 0
8799 1540 -2816 0
8799 1540 -2814 0
8799 1540 -2812 0
8799 1540 -2810 0
8799 1540 -2808 0
8799 1540 -2806 0
8799 1540 -2804 0
8799 1540 -2802 0
8799 1540 -2800 0
8799 1540 -2798 0
8799 1540 -2796 0
8799 1540 -2794 0
8799 1540 -2792 0
8799 1540 -2790 0
8799 1540 -2788 0
8799 1540 -2786 0
8799 1540 -2784 0
8799 1540 -2782 0
8799 1540 -2780 0
8799 1540 -2778 0
8799 1540 -2776 0
8799 1540 -2774 0
8799 1540 -2772 0
8799 1540 -2770 0
8799 1540 -2768 0
8799 1540 -2766 0
8799 1540 -2764 0
8799 1540 -2762 0
8799 1540 -2760 0
8799 1540 -2758 0
8799 1540 -2756 0
8799 1540 -2754 0
8799 1540 -2752 0
8799 1540 -2750 0
8799 1540 -2748 0
8799 1540 -2746 0
8799 1540 -2744 0
8799 1540 -2742 0
8799 1540 -2740 0
8799 1540 -2738 0
8799 1540 -2736 0
8799 1540 -2734 0
8799 1540 -2732 0
8799 1540 -2730 0
8799 1540 -2728 0
8799 1540 -2726 0
8799 1540 -2724 0
8799 1540 -2722 0
8799 1540 -2720 0
8799 1540 -2718 0
8799 1540 -2716 0
8799 1540 -2714 0
8799 1540 -2712 0
8799 1540 -2710 0
8799 1540 -2708 0
8799 1540 -2706 0
8799 1540 -2704 0
8799 1540 -2702 0
8799 1540 -2700 0
8799 1540 -2698 0
8799 1540 -2696 0
8799 1540 -2695 0
8799 1542 -3177 0
8799 1542 -2948 -3179 0
8799 1542 -2946 -3181 0
8799 1542 -2944 -3183 0
8799 1542 -2942 -3185 0
8799 1542 -2940 -3187 0
8799 1542 -2938 -3189 0
8799 1542 -2936 -3191 0
8799 1542 -2934 -3193 0
8799 1542 -2932 -3195 0
8799 1542 -2930 -3197 0
8799 1542 -2928 -3199 0
8799 1542 -2926 -3201 0
8799 1542 -2924 -3203 0
8799 1542 -2922 0
8799 1542 -2920 0
8799 1542 -2918 0
8799 1542 -2916 0
8799 1542 -2914 0
8799 1542 -2912 0
8799 1542 -2910 0
8799 1542 -2908 0
8799 1542 -2906 0
8799 1542 -2904 0
8799 1542 -2902 0
8799 1542 -2900 0
8799 1542 -2898 0
8799 1542 -2896 0
8799 1542 -2894 0
8799 1542 -2892 0
8799 1542 -2890 0
8799 1542 -2888 0
8799 1542 -2886 0
8799 1542 -2884 0
8799 1542 -2882 0
8799 1542 -2880 0
8799 1542 -2878 0
8799 1542 -2876 0
8799 1542 -2874 0
8799 1542 -2872 0
8799 1542 -2870 0
8799 1542 -2868 0
8799 1542 -2866 0
8799 1542 -2864 0
8799 1542 -2862 0
8799 1542 -2860 0
8799 1542 -2858 0
8799 1542 -2856 0
8799 1542 -2854 0
8799 1542 -2852 0
8799 1542 -2850 0
8799 1542 -2848 0
8799 1542 -2846 0
8799 1542 -2844 0
8799 1542 -2842 0
8799 1542 -2840 0
8799 1542 -2838 0
8799 1542 -2836 0
8799 1542 -2834 0
8799 1542 -2832 0
8799 1542 -2830 0
8799 1542 -2828 0
8799 1542 -2826 0
8799 1542 -2824 0
8799 1542 -2822 0
8799 1542 -2820 0
8799 1542 -2818 0
8799 1542 -2816 0
8799 1542 -2814 0
8799 1542 -2812 0
8799 1542 -2810 0
8799 1542 -2808 0
8799 1542 -2806 0
8799 1542 -2804 0
8799 1542 -2802 0
8799 1542 -2800 0
8799 1542 -2798 0
8799 1542 -2796 0
8799 1542 -2794 0
8799 1542 -2792 0
8799 1542 -2790 0
8799 1542 -2788 0
8799 1542 -2786 0
8799 1542 -2784 0
8799 1542 -2782 0
8799 1542 -2780 0
8799 1542 -2778 0
8799 1542 -2776 0
8799 1542 -2774 0
8799 1542 -2772 0
8799 1542 -2770 0
8799 1542 -2768 0
8799 1542 -2766 0
8799 1542 -2764 0
8799 1542 -2762 0
8799 1542 -2760 0
8799 1542 -2758 0
8799 1542 -2756 0
8799 1542 -2754 0
8799 1542 -2752 0
8799 1542 -2750 0
8799 1542 -2748 0
8799 1542 -2746 0
8799 1542 -2744 0
8799 1542 -2742 0
8799 1542 -2740 0
8799 1542 -2738 0
8799 1542 -2736 0
8799 1542 -2734 0
8799 1542 -2732 0
8799 1542 -2730 0
8799 1542 -2728 0
8799 1542 -2726 0
8799 1542 -2724 0
8799 1542 -2722 0
8799 1542 -2720 0
8799 1542 -2718 0
8799 1542 -2716 0
8799 1542 -2714 0
8799 1542 -2712 0
8799 1542 -2710 0
8799 1542 -2708 0
8799 1542 -2706 0
8799 1542 -2704 0
8799 1542 -2702 0
8799 1542 -2700 0
8799 1542 -2698 0
8799 1542 -2696 0
8799 1542 -2695 0
8799 1544 -3179 0
8799 1544 -2948 -3181 0
8799 1544 -2946 -3183 0
8799 1544 -2944 -3185 0
8799 1544 -2942 -3187 0
8799 1544 -2940 -3189 0
8799 1544 -2938 -3191 0
8799 1544 -2936 -3193 0
8799 1544 -2934 -3195 0
8799 1544 -2932 -3197 0
8799 1544 -2930 -3199 0
8799 1544 -2928 -3201 0
8799 1544 -2926 -3203 0
8799 1544 -2924 0
8799 1544 -2922 0
8799 1544 -2920 0
8799 1544 -2918 0
8799 1544 -2916 0
8799 1544 -2914 0
8799 1544 -2912 0
8799 1544 -2910 0
8799 1544 -2908 0
8799 1544 -2906 0
8799 1544 -2904 0
8799 1544 -2902 0
8799 1544 -2900 0
8799 1544 -2898 0
8799 1544 -2896 0
8799 1544 -2894 0
8799 1544 -2892 0
8799 1544 -2890 0
8799 1544 -2888 0
8799 1544 -2886 0
8799 1544 -2884 0
8799 1544 -2882 0
8799 1544 -2880 0
8799 1544 -2878 0
8799 1544 -2876 0
8799 1544 -2874 0
8799 1544 -2872 0
8799 1544 -2870 0
8799 1544 -2868 0
8799 1544 -2866 0
8799 1544 -2864 0
8799 1544 -2862 0
8799 1544 -2860 0
8799 1544 -2858 0
8799 1544 -2856 0
8799 1544 -2854 0
8799 1544 -2852 0
8799 1544 -2850 0
8799 1544 -2848 0
8799 1544 -2846 0
8799 1544 -2844 0
8799 1544 -2842 0
8799 1544 -2840 0
8799 1544 -2838 0
8799 1544 -2836 0
8799 1544 -2834 0
8799 1544 -2832 0
8799 1544 -2830 0
8799 1544 -2828 0
8799 1544 -2826 0
8799 1544 -2824 0
8799 1544 -2822 0
8799 1544 -2820 0
8799 1544 -2818 0
8799 1544 -2816 0
8799 1544 -2814 0
8799 1544 -2812 0
8799 1544 -2810 0
8799 1544 -2808 0
8799 1544 -2806 0
8799 1544 -2804 0
8799 1544 -2802 0
8799 1544 -2800 0
8799 1544 -2798 0
8799 1544 -2796 0
8799 1544 -2794 0
8799 1544 -2792 0
8799 1544 -2790 0
8799 1544 -2788 0
8799 1544 -2786 0
8799 1544 -2784 0
8799 1544 -2782 0
8799 1544 -2780 0
8799 1544 -2778 0
8799 1544 -2776 0
8799 1544 -2774 0
8799 1544 -2772 0
8799 1544 -2770 0
8799 1544 -2768 0
8799 1544 -2766 0
8799 1544 -2764 0
8799 1544 -2762 0
8799 1544 -2760 0
8799 1544 -2758 0
8799 1544 -2756 0
8799 1544 -2754 0
8799 1544 -2752 0
8799 1544 -2750 0
8799 1544 -2748 0
8799 1544 -2746 0
8799 1544 -2744 0
8799 1544 -2742 0
8799 1544 -2740 0
8799 1544 -2738 0
8799 1544 -2736 0
8799 1544 -2734 0
8799 1544 -2732 0
8799 1544 -2730 0
8799 1544 -2728 0
8799 1544 -2726 0
8799 1544 -2724 0
8799 1544 -2722 0
8799 1544 -2720 0
8799 1544 -2718 0
8799 1544 -2716 0
8799 1544 -2714 0
8799 1544 -2712 0
8799 1544 -2710 0
8799 1544 -2708 0
8799 1544 -2706 0
8799 1544 -2704 0
8799 1544 -2702 0
8799 1544 -2700 0
8799 1544 -2698 0
8799 1544 -2696 0
8799 1544 -2695 0
8799 1546 -3181 0
8799 1546 -2948 -3183 0
8799 1546 -2946 -3185 0
8799 1546 -2944 -3187 0
8799 1546 -2942 -3189 0
8799 1546 -2940 -3191 0
8799 1546 -2938 -3193 0
8799 1546 -2936 -3195 0
8799 1546 -2934 -3197 0
8799 1546 -2932 -3199 0
8799 1546 -2930 -3201 0
8799 1546 -2928 -3203 0
8799 1546 -2926 0
8799 1546 -2924 0
8799 1546 -2922 0
8799 1546 -2920 0
8799 1546 -2918 0
8799 1546 -2916 0
8799 1546 -2914 0
8799 1546 -2912 0
8799 1546 -2910 0
8799 1546 -2908 0
8799 1546 -2906 0
8799 1546 -2904 0
8799 1546 -2902 0
8799 1546 -2900 0
8799 1546 -2898 0
8799 1546 -2896 0
8799 1546 -2894 0
8799 1546 -2892 0
8799 1546 -2890 0
8799 1546 -2888 0
8799 1546 -2886 0
8799 1546 -2884 0
8799 1546 -2882 0
8799 1546 -2880 0
8799 1546 -2878 0
8799 1546 -2876 0
8799 1546 -2874 0
8799 1546 -2872 0
8799 1546 -2870 0
8799 1546 -2868 0
8799 1546 -2866 0
8799 1546 -2864 0
8799 1546 -2862 0
8799 1546 -2860 0
8799 1546 -2858 0
8799 1546 -2856 0
8799 1546 -2854 0
8799 1546 -2852 0
8799 1546 -2850 0
8799 1546 -2848 0
8799 1546 -2846 0
8799 1546 -2844 0
8799 1546 -2842 0
8799 1546 -2840 0
8799 1546 -2838 0
8799 1546 -2836 0
8799 1546 -2834 0
8799 1546 -2832 0
8799 1546 -2830 0
8799 1546 -2828 0
8799 1546 -2826 0
8799 1546 -2824 0
8799 1546 -2822 0
8799 1546 -2820 0
8799 1546 -2818 0
8799 1546 -2816 0
8799 1546 -2814 0
8799 1546 -2812 0
8799 1546 -2810 0
8799 1546 -2808 0
8799 1546 -2806 0
8799 1546 -2804 0
8799 1546 -2802 0
8799 1546 -2800 0
8799 1546 -2798 0
8799 1546 -2796 0
8799 1546 -2794 0
8799 1546 -2792 0
8799 1546 -2790 0
8799 1546 -2788 0
8799 1546 -2786 0
8799 1546 -2784 0
8799 1546 -2782 0
8799 1546 -2780 0
8799 1546 -2778 0
8799 1546 -2776 0
8799 1546 -2774 0
8799 1546 -2772 0
8799 1546 -2770 0
8799 1546 -2768 0
8799 1546 -2766 0
8799 1546 -2764 0
8799 1546 -2762 0
8799 1546 -2760 0
8799 1546 -2758 0
8799 1546 -2756 0
8799 1546 -2754 0
8799 1546 -2752 0
8799 1546 -2750 0
8799 1546 -2748 0
8799 1546 -2746 0
8799 1546 -2744 0
8799 1546 -2742 0
8799 1546 -2740 0
8799 1546 -2738 0
8799 1546 -2736 0
8799 1546 -2734 0
8799 1546 -2732 0
8799 1546 -2730 0
8799 1546 -2728 0
8799 1546 -2726 0
8799 1546 -2724 0
8799 1546 -2722 0
8799 1546 -2720 0
8799 1546 -2718 0
8799 1546 -2716 0
8799 1546 -2714 0
8799 1546 -2712 0
8799 1546 -2710 0
8799 1546 -2708 0
8799 1546 -2706 0
8799 1546 -2704 0
8799 1546 -2702 0
8799 1546 -2700 0
8799 1546 -2698 0
8799 1546 -2696 0
8799 1546 -2695 0
8799 1548 -3183 0
8799 1548 -2948 -3185 0
8799 1548 -2946 -3187 0
8799 1548 -2944 -3189 0
8799 1548 -2942 -3191 0
8799 1548 -2940 -3193 0
8799 1548 -2938 -3195 0
8799 1548 -2936 -3197 0
8799 1548 -2934 -3199 0
8799 1548 -2932 -3201 0
8799 1548 -2930 -3203 0
8799 1548 -2928 0
8799 1548 -2926 0
8799 1548 -2924 0
8799 1548 -2922 0
8799 1548 -2920 0
8799 1548 -2918 0
8799 1548 -2916 0
8799 1548 -2914 0
8799 1548 -2912 0
8799 1548 -2910 0
8799 1548 -2908 0
8799 1548 -2906 0
8799 1548 -2904 0
8799 1548 -2902 0
8799 1548 -2900 0
8799 1548 -2898 0
8799 1548 -2896 0
8799 1548 -2894 0
8799 1548 -2892 0
8799 1548 -2890 0
8799 1548 -2888 0
8799 1548 -2886 0
8799 1548 -2884 0
8799 1548 -2882 0
8799 1548 -2880 0
8799 1548 -2878 0
8799 1548 -2876 0
8799 1548 -2874 0
8799 1548 -2872 0
8799 1548 -2870 0
8799 1548 -2868 0
8799 1548 -2866 0
8799 1548 -2864 0
8799 1548 -2862 0
8799 1548 -2860 0
8799 1548 -2858 0
8799 1548 -2856 0
8799 1548 -2854 0
8799 1548 -2852 0
8799 1548 -2850 0
8799 1548 -2848 0
8799 1548 -2846 0
8799 1548 -2844 0
8799 1548 -2842 0
8799 1548 -2840 0
8799 1548 -2838 0
8799 1548 -2836 0
8799 1548 -2834 0
8799 1548 -2832 0
8799 1548 -2830 0
8799 1548 -2828 0
8799 1548 -2826 0
8799 1548 -2824 0
8799 1548 -2822 0
8799 1548 -2820 0
8799 1548 -2818 0
8799 1548 -2816 0
8799 1548 -2814 0
8799 1548 -2812 0
8799 1548 -2810 0
8799 1548 -2808 0
8799 1548 -2806 0
8799 1548 -2804 0
8799 1548 -2802 0
8799 1548 -2800 0
8799 1548 -2798 0
8799 1548 -2796 0
8799 1548 -2794 0
8799 1548 -2792 0
8799 1548 -2790 0
8799 1548 -2788 0
8799 1548 -2786 0
8799 1548 -2784 0
8799 1548 -2782 0
8799 1548 -2780 0
8799 1548 -2778 0
8799 1548 -2776 0
8799 1548 -2774 0
8799 1548 -2772 0
8799 1548 -2770 0
8799 1548 -2768 0
8799 1548 -2766 0
8799 1548 -2764 0
8799 1548 -2762 0
8799 1548 -2760 0
8799 1548 -2758 0
8799 1548 -2756 0
8799 1548 -2754 0
8799 1548 -2752 0
8799 1548 -2750 0
8799 1548 -2748 0
8799 1548 -2746 0
8799 1548 -2744 0
8799 1548 -2742 0
8799 1548 -2740 0
8799 1548 -2738 0
8799 1548 -2736 0
8799 1548 -2734 0
8799 1548 -2732 0
8799 1548 -2730 0
8799 1548 -2728 0
8799 1548 -2726 0
8799 1548 -2724 0
8799 1548 -2722 0
8799 1548 -2720 0
8799 1548 -2718 0
8799 1548 -2716 0
8799 1548 -2714 0
8799 1548 -2712 0
8799 1548 -2710 0
8799 1548 -2708 0
8799 1548 -2706 0
8799 1548 -2704 0
8799 1548 -2702 0
8799 1548 -2700 0
8799 1548 -2698 0
8799 1548 -2696 0
8799 1548 -2695 0
8799 1550 -3185 0
8799 1550 -2948 -3187 0
8799 1550 -2946 -3189 0
8799 1550 -2944 -3191 0
8799 1550 -2942 -3193 0
8799 1550 -2940 -3195 0
8799 1550 -2938 -3197 0
8799 1550 -2936 -3199 0
8799 1550 -2934 -3201 0
8799 1550 -2932 -3203 0
8799 1550 -2930 0
8799 1550 -2928 0
8799 1550 -2926 0
8799 1550 -2924 0
8799 1550 -2922 0
8799 1550 -2920 0
8799 1550 -2918 0
8799 1550 -2916 0
8799 1550 -2914 0
8799 1550 -2912 0
8799 1550 -2910 0
8799 1550 -2908 0
8799 1550 -2906 0
8799 1550 -2904 0
8799 1550 -2902 0
8799 1550 -2900 0
8799 1550 -2898 0
8799 1550 -2896 0
8799 1550 -2894 0
8799 1550 -2892 0
8799 1550 -2890 0
8799 1550 -2888 0
8799 1550 -2886 0
8799 1550 -2884 0
8799 1550 -2882 0
8799 1550 -2880 0
8799 1550 -2878 0
8799 1550 -2876 0
8799 1550 -2874 0
8799 1550 -2872 0
8799 1550 -2870 0
8799 1550 -2868 0
8799 1550 -2866 0
8799 1550 -2864 0
8799 1550 -2862 0
8799 1550 -2860 0
8799 1550 -2858 0
8799 1550 -2856 0
8799 1550 -2854 0
8799 1550 -2852 0
8799 1550 -2850 0
8799 1550 -2848 0
8799 1550 -2846 0
8799 1550 -2844 0
8799 1550 -2842 0
8799 1550 -2840 0
8799 1550 -2838 0
8799 1550 -2836 0
8799 1550 -2834 0
8799 1550 -2832 0
8799 1550 -2830 0
8799 1550 -2828 0
8799 1550 -2826 0
8799 1550 -2824 0
8799 1550 -2822 0
8799 1550 -2820 0
8799 1550 -2818 0
8799 1550 -2816 0
8799 1550 -2814 0
8799 1550 -2812 0
8799 1550 -2810 0
8799 1550 -2808 0
8799 1550 -2806 0
8799 1550 -2804 0
8799 1550 -2802 0
8799 1550 -2800 0
8799 1550 -2798 0
8799 1550 -2796 0
8799 1550 -2794 0
8799 1550 -2792 0
8799 1550 -2790 0
8799 1550 -2788 0
8799 1550 -2786 0
8799 1550 -2784 0
8799 1550 -2782 0
8799 1550 -2780 0
8799 1550 -2778 0
8799 1550 -2776 0
8799 1550 -2774 0
8799 1550 -2772 0
8799 1550 -2770 0
8799 1550 -2768 0
8799 1550 -2766 0
8799 1550 -2764 0
8799 1550 -2762 0
8799 1550 -2760 0
8799 1550 -2758 0
8799 1550 -2756 0
8799 1550 -2754 0
8799 1550 -2752 0
8799 1550 -2750 0
8799 1550 -2748 0
8799 1550 -2746 0
8799 1550 -2744 0
8799 1550 -2742 0
8799 1550 -2740 0
8799 1550 -2738 0
8799 1550 -2736 0
8799 1550 -2734 0
8799 1550 -2732 0
8799 1550 -2730 0
8799 1550 -2728 0
8799 1550 -2726 0
8799 1550 -2724 0
8799 1550 -2722 0
8799 1550 -2720 0
8799 1550 -2718 0
8799 1550 -2716 0
8799 1550 -2714 0
8799 1550 -2712 0
8799 1550 -2710 0
8799 1550 -2708 0
8799 1550 -2706 0
8799 1550 -2704 0
8799 1550 -2702 0
8799 1550 -2700 0
8799 1550 -2698 0
8799 1550 -2696 0
8799 1550 -2695 0
8799 1552 -3187 0
8799 1552 -2948 -3189 0
8799 1552 -2946 -3191 0
8799 1552 -2944 -3193 0
8799 1552 -2942 -3195 0
8799 1552 -2940 -3197 0
8799 1552 -2938 -3199 0
8799 1552 -2936 -3201 0
8799 1552 -2934 -3203 0
8799 1552 -2932 0
8799 1552 -2930 0
8799 1552 -2928 0
8799 1552 -2926 0
8799 1552 -2924 0
8799 1552 -2922 0
8799 1552 -2920 0
8799 1552 -2918 0
8799 1552 -2916 0
8799 1552 -2914 0
8799 1552 -2912 0
8799 1552 -2910 0
8799 1552 -2908 0
8799 1552 -2906 0
8799 1552 -2904 0
8799 1552 -2902 0
8799 1552 -2900 0
8799 1552 -2898 0
8799 1552 -2896 0
8799 1552 -2894 0
8799 1552 -2892 0
8799 1552 -2890 0
8799 1552 -2888 0
8799 1552 -2886 0
8799 1552 -2884 0
8799 1552 -2882 0
8799 1552 -2880 0
8799 1552 -2878 0
8799 1552 -2876 0
8799 1552 -2874 0
8799 1552 -2872 0
8799 1552 -2870 0
8799 1552 -2868 0
8799 1552 -2866 0
8799 1552 -2864 0
8799 1552 -2862 0
8799 1552 -2860 0
8799 1552 -2858 0
8799 1552 -2856 0
8799 1552 -2854 0
8799 1552 -2852 0
8799 1552 -2850 0
8799 1552 -2848 0
8799 1552 -2846 0
8799 1552 -2844 0
8799 1552 -2842 0
8799 1552 -2840 0
8799 1552 -2838 0
8799 1552 -2836 0
8799 1552 -2834 0
8799 1552 -2832 0
8799 1552 -2830 0
8799 1552 -2828 0
8799 1552 -2826 0
8799 1552 -2824 0
8799 1552 -2822 0
8799 1552 -2820 0
8799 1552 -2818 0
8799 1552 -2816 0
8799 1552 -2814 0
8799 1552 -2812 0
8799 1552 -2810 0
8799 1552 -2808 0
8799 1552 -2806 0
8799 1552 -2804 0
8799 1552 -2802 0
8799 1552 -2800 0
8799 1552 -2798 0
8799 1552 -2796 0
8799 1552 -2794 0
8799 1552 -2792 0
8799 1552 -2790 0
8799 1552 -2788 0
8799 1552 -2786 0
8799 1552 -2784 0
8799 1552 -2782 0
8799 1552 -2780 0
8799 1552 -2778 0
8799 1552 -2776 0
8799 1552 -2774 0
8799 1552 -2772 0
8799 1552 -2770 0
8799 1552 -2768 0
8799 1552 -2766 0
8799 1552 -2764 0
8799 1552 -2762 0
8799 1552 -2760 0
8799 1552 -2758 0
8799 1552 -2756 0
8799 1552 -2754 0
8799 1552 -2752 0
8799 1552 -2750 0
8799 1552 -2748 0
8799 1552 -2746 0
8799 1552 -2744 0
8799 1552 -2742 0
8799 1552 -2740 0
8799 1552 -2738 0
8799 1552 -2736 0
8799 1552 -2734 0
8799 1552 -2732 0
8799 1552 -2730 0
8799 1552 -2728 0
8799 1552 -2726 0
8799 1552 -2724 0
8799 1552 -2722 0
8799 1552 -2720 0
8799 1552 -2718 0
8799 1552 -2716 0
8799 1552 -2714 0
8799 1552 -2712 0
8799 1552 -2710 0
8799 1552 -2708 0
8799 1552 -2706 0
8799 1552 -2704 0
8799 1552 -2702 0
8799 1552 -2700 0
8799 1552 -2698 0
8799 1552 -2696 0
8799 1552 -2695 0
8799 1554 -3189 0
8799 1554 -2948 -3191 0
8799 1554 -2946 -3193 0
8799 1554 -2944 -3195 0
8799 1554 -2942 -3197 0
8799 1554 -2940 -3199 0
8799 1554 -2938 -3201 0
8799 1554 -2936 -3203 0
8799 1554 -2934 0
8799 1554 -2932 0
8799 1554 -2930 0
8799 1554 -2928 0
8799 1554 -2926 0
8799 1554 -2924 0
8799 1554 -2922 0
8799 1554 -2920 0
8799 1554 -2918 0
8799 1554 -2916 0
8799 1554 -2914 0
8799 1554 -2912 0
8799 1554 -2910 0
8799 1554 -2908 0
8799 1554 -2906 0
8799 1554 -2904 0
8799 1554 -2902 0
8799 1554 -2900 0
8799 1554 -2898 0
8799 1554 -2896 0
8799 1554 -2894 0
8799 1554 -2892 0
8799 1554 -2890 0
8799 1554 -2888 0
8799 1554 -2886 0
8799 1554 -2884 0
8799 1554 -2882 0
8799 1554 -2880 0
8799 1554 -2878 0
8799 1554 -2876 0
8799 1554 -2874 0
8799 1554 -2872 0
8799 1554 -2870 0
8799 1554 -2868 0
8799 1554 -2866 0
8799 1554 -2864 0
8799 1554 -2862 0
8799 1554 -2860 0
8799 1554 -2858 0
8799 1554 -2856 0
8799 1554 -2854 0
8799 1554 -2852 0
8799 1554 -2850 0
8799 1554 -2848 0
8799 1554 -2846 0
8799 1554 -2844 0
8799 1554 -2842 0
8799 1554 -2840 0
8799 1554 -2838 0
8799 1554 -2836 0
8799 1554 -2834 0
8799 1554 -2832 0
8799 1554 -2830 0
8799 1554 -2828 0
8799 1554 -2826 0
8799 1554 -2824 0
8799 1554 -2822 0
8799 1554 -2820 0
8799 1554 -2818 0
8799 1554 -2816 0
8799 1554 -2814 0
8799 1554 -2812 0
8799 1554 -2810 0
8799 1554 -2808 0
8799 1554 -2806 0
8799 1554 -2804 0
8799 1554 -2802 0
8799 1554 -2800 0
8799 1554 -2798 0
8799 1554 -2796 0
8799 1554 -2794 0
8799 1554 -2792 0
8799 1554 -2790 0
8799 1554 -2788 0
8799 1554 -2786 0
8799 1554 -2784 0
8799 1554 -2782 0
8799 1554 -2780 0
8799 1554 -2778 0
8799 1554 -2776 0
8799 1554 -2774 0
8799 1554 -2772 0
8799 1554 -2770 0
8799 1554 -2768 0
8799 1554 -2766 0
8799 1554 -2764 0
8799 1554 -2762 0
8799 1554 -2760 0
8799 1554 -2758 0
8799 1554 -2756 0
8799 1554 -2754 0
8799 1554 -2752 0
8799 1554 -2750 0
8799 1554 -2748 0
8799 1554 -2746 0
8799 1554 -2744 0
8799 1554 -2742 0
8799 1554 -2740 0
8799 1554 -2738 0
8799 1554 -2736 0
8799 1554 -2734 0
8799 1554 -2732 0
8799 1554 -2730 0
8799 1554 -2728 0
8799 1554 -2726 0
8799 1554 -2724 0
8799 1554 -2722 0
8799 1554 -2720 0
8799 1554 -2718 0
8799 1554 -2716 0
8799 1554 -2714 0
8799 1554 -2712 0
8799 1554 -2710 0
8799 1554 -2708 0
8799 1554 -2706 0
8799 1554 -2704 0
8799 1554 -2702 0
8799 1554 -2700 0
8799 1554 -2698 0
8799 1554 -2696 0
8799 1554 -2695 0
8799 1556 -3191 0
8799 1556 -2948 -3193 0
8799 1556 -2946 -3195 0
8799 1556 -2944 -3197 0
8799 1556 -2942 -3199 0
8799 1556 -2940 -3201 0
8799 1556 -2938 -3203 0
8799 1556 -2936 0
8799 1556 -2934 0
8799 1556 -2932 0
8799 1556 -2930 0
8799 1556 -2928 0
8799 1556 -2926 0
8799 1556 -2924 0
8799 1556 -2922 0
8799 1556 -2920 0
8799 1556 -2918 0
8799 1556 -2916 0
8799 1556 -2914 0
8799 1556 -2912 0
8799 1556 -2910 0
8799 1556 -2908 0
8799 1556 -2906 0
8799 1556 -2904 0
8799 1556 -2902 0
8799 1556 -2900 0
8799 1556 -2898 0
8799 1556 -2896 0
8799 1556 -2894 0
8799 1556 -2892 0
8799 1556 -2890 0
8799 1556 -2888 0
8799 1556 -2886 0
8799 1556 -2884 0
8799 1556 -2882 0
8799 1556 -2880 0
8799 1556 -2878 0
8799 1556 -2876 0
8799 1556 -2874 0
8799 1556 -2872 0
8799 1556 -2870 0
8799 1556 -2868 0
8799 1556 -2866 0
8799 1556 -2864 0
8799 1556 -2862 0
8799 1556 -2860 0
8799 1556 -2858 0
8799 1556 -2856 0
8799 1556 -2854 0
8799 1556 -2852 0
8799 1556 -2850 0
8799 1556 -2848 0
8799 1556 -2846 0
8799 1556 -2844 0
8799 1556 -2842 0
8799 1556 -2840 0
8799 1556 -2838 0
8799 1556 -2836 0
8799 1556 -2834 0
8799 1556 -2832 0
8799 1556 -2830 0
8799 1556 -2828 0
8799 1556 -2826 0
8799 1556 -2824 0
8799 1556 -2822 0
8799 1556 -2820 0
8799 1556 -2818 0
8799 1556 -2816 0
8799 1556 -2814 0
8799 1556 -2812 0
8799 1556 -2810 0
8799 1556 -2808 0
8799 1556 -2806 0
8799 1556 -2804 0
8799 1556 -2802 0
8799 1556 -2800 0
8799 1556 -2798 0
8799 1556 -2796 0
8799 1556 -2794 0
8799 1556 -2792 0
8799 1556 -2790 0
8799 1556 -2788 0
8799 1556 -2786 0
8799 1556 -2784 0
8799 1556 -2782 0
8799 1556 -2780 0
8799 1556 -2778 0
8799 1556 -2776 0
8799 1556 -2774 0
8799 1556 -2772 0
8799 1556 -2770 0
8799 1556 -2768 0
8799 1556 -2766 0
8799 1556 -2764 0
8799 1556 -2762 0
8799 1556 -2760 0
8799 1556 -2758 0
8799 1556 -2756 0
8799 1556 -2754 0
8799 1556 -2752 0
8799 1556 -2750 0
8799 1556 -2748 0
8799 1556 -2746 0
8799 1556 -2744 0
8799 1556 -2742 0
8799 1556 -2740 0
8799 1556 -2738 0
8799 1556 -2736 0
8799 1556 -2734 0
8799 1556 -2732 0
8799 1556 -2730 0
8799 1556 -2728 0
8799 1556 -2726 0
8799 1556 -2724 0
8799 1556 -2722 0
8799 1556 -2720 0
8799 1556 -2718 0
8799 1556 -2716 0
8799 1556 -2714 0
8799 1556 -2712 0
8799 1556 -2710 0
8799 1556 -2708 0
8799 1556 -2706 0
8799 1556 -2704 0
8799 1556 -2702 0
8799 1556 -2700 0
8799 1556 -2698 0
8799 1556 -2696 0
8799 1556 -2695 0
8799 1558 -3193 0
8799 1558 -2948 -3195 0
8799 1558 -2946 -3197 0
8799 1558 -2944 -3199 0
8799 1558 -2942 -3201 0
8799 1558 -2940 -3203 0
8799 1558 -2938 0
8799 1558 -2936 0
8799 1558 -2934 0
8799 1558 -2932 0
8799 1558 -2930 0
8799 1558 -2928 0
8799 1558 -2926 0
8799 1558 -2924 0
8799 1558 -2922 0
8799 1558 -2920 0
8799 1558 -2918 0
8799 1558 -2916 0
8799 1558 -2914 0
8799 1558 -2912 0
8799 1558 -2910 0
8799 1558 -2908 0
8799 1558 -2906 0
8799 1558 -2904 0
8799 1558 -2902 0
8799 1558 -2900 0
8799 1558 -2898 0
8799 1558 -2896 0
8799 1558 -2894 0
8799 1558 -2892 0
8799 1558 -2890 0
8799 1558 -2888 0
8799 1558 -2886 0
8799 1558 -2884 0
8799 1558 -2882 0
8799 1558 -2880 0
8799 1558 -2878 0
8799 1558 -2876 0
8799 1558 -2874 0
8799 1558 -2872 0
8799 1558 -2870 0
8799 1558 -2868 0
8799 1558 -2866 0
8799 1558 -2864 0
8799 1558 -2862 0
8799 1558 -2860 0
8799 1558 -2858 0
8799 1558 -2856 0
8799 1558 -2854 0
8799 1558 -2852 0
8799 1558 -2850 0
8799 1558 -2848 0
8799 1558 -2846 0
8799 1558 -2844 0
8799 1558 -2842 0
8799 1558 -2840 0
8799 1558 -2838 0
8799 1558 -2836 0
8799 1558 -2834 0
8799 1558 -2832 0
8799 1558 -2830 0
8799 1558 -2828 0
8799 1558 -2826 0
8799 1558 -2824 0
8799 1558 -2822 0
8799 1558 -2820 0
8799 1558 -2818 0
8799 1558 -2816 0
8799 1558 -2814 0
8799 1558 -2812 0
8799 1558 -2810 0
8799 1558 -2808 0
8799 1558 -2806 0
8799 1558 -2804 0
8799 1558 -2802 0
8799 1558 -2800 0
8799 1558 -2798 0
8799 1558 -2796 0
8799 1558 -2794 0
8799 1558 -2792 0
8799 1558 -2790 0
8799 1558 -2788 0
8799 1558 -2786 0
8799 1558 -2784 0
8799 1558 -2782 0
8799 1558 -2780 0
8799 1558 -2778 0
8799 1558 -2776 0
8799 1558 -2774 0
8799 1558 -2772 0
8799 1558 -2770 0
8799 1558 -2768 0
8799 1558 -2766 0
8799 1558 -2764 0
8799 1558 -2762 0
8799 1558 -2760 0
8799 1558 -2758 0
8799 1558 -2756 0
8799 1558 -2754 0
8799 1558 -2752 0
8799 1558 -2750 0
8799 1558 -2748 0
8799 1558 -2746 0
8799 1558 -2744 0
8799 1558 -2742 0
8799 1558 -2740 0
8799 1558 -2738 0
8799 1558 -2736 0
8799 1558 -2734 0
8799 1558 -2732 0
8799 1558 -2730 0
8799 1558 -2728 0
8799 1558 -2726 0
8799 1558 -2724 0
8799 1558 -2722 0
8799 1558 -2720 0
8799 1558 -2718 0
8799 1558 -2716 0
8799 1558 -2714 0
8799 1558 -2712 0
8799 1558 -2710 0
8799 1558 -2708 0
8799 1558 -2706 0
8799 1558 -2704 0
8799 1558 -2702 0
8799 1558 -2700 0
8799 1558 -2698 0
8799 1558 -2696 0
8799 1558 -2695 0
8799 1560 -3195 0
8799 1560 -2948 -3197 0
8799 1560 -2946 -3199 0
8799 1560 -2944 -3201 0
8799 1560 -2942 -3203 0
8799 1560 -2940 0
8799 1560 -2938 0
8799 1560 -2936 0
8799 1560 -2934 0
8799 1560 -2932 0
8799 1560 -2930 0
8799 1560 -2928 0
8799 1560 -2926 0
8799 1560 -2924 0
8799 1560 -2922 0
8799 1560 -2920 0
8799 1560 -2918 0
8799 1560 -2916 0
8799 1560 -2914 0
8799 1560 -2912 0
8799 1560 -2910 0
8799 1560 -2908 0
8799 1560 -2906 0
8799 1560 -2904 0
8799 1560 -2902 0
8799 1560 -2900 0
8799 1560 -2898 0
8799 1560 -2896 0
8799 1560 -2894 0
8799 1560 -2892 0
8799 1560 -2890 0
8799 1560 -2888 0
8799 1560 -2886 0
8799 1560 -2884 0
8799 1560 -2882 0
8799 1560 -2880 0
8799 1560 -2878 0
8799 1560 -2876 0
8799 1560 -2874 0
8799 1560 -2872 0
8799 1560 -2870 0
8799 1560 -2868 0
8799 1560 -2866 0
8799 1560 -2864 0
8799 1560 -2862 0
8799 1560 -2860 0
8799 1560 -2858 0
8799 1560 -2856 0
8799 1560 -2854 0
8799 1560 -2852 0
8799 1560 -2850 0
8799 1560 -2848 0
8799 1560 -2846 0
8799 1560 -2844 0
8799 1560 -2842 0
8799 1560 -2840 0
8799 1560 -2838 0
8799 1560 -2836 0
8799 1560 -2834 0
8799 1560 -2832 0
8799 1560 -2830 0
8799 1560 -2828 0
8799 1560 -2826 0
8799 1560 -2824 0
8799 1560 -2822 0
8799 1560 -2820 0
8799 1560 -2818 0
8799 1560 -2816 0
8799 1560 -2814 0
8799 1560 -2812 0
8799 1560 -2810 0
8799 1560 -2808 0
8799 1560 -2806 0
8799 1560 -2804 0
8799 1560 -2802 0
8799 1560 -2800 0
8799 1560 -2798 0
8799 1560 -2796 0
8799 1560 -2794 0
8799 1560 -2792 0
8799 1560 -2790 0
8799 1560 -2788 0
8799 1560 -2786 0
8799 1560 -2784 0
8799 1560 -2782 0
8799 1560 -2780 0
8799 1560 -2778 0
8799 1560 -2776 0
8799 1560 -2774 0
8799 1560 -2772 0
8799 1560 -2770 0
8799 1560 -2768 0
8799 1560 -2766 0
8799 1560 -2764 0
8799 1560 -2762 0
8799 1560 -2760 0
8799 1560 -2758 0
8799 1560 -2756 0
8799 1560 -2754 0
8799 1560 -2752 0
8799 1560 -2750 0
8799 1560 -2748 0
8799 1560 -2746 0
8799 1560 -2744 0
8799 1560 -2742 0
8799 1560 -2740 0
8799 1560 -2738 0
8799 1560 -2736 0
8799 1560 -2734 0
8799 1560 -2732 0
8799 1560 -2730 0
8799 1560 -2728 0
8799 1560 -2726 0
8799 1560 -2724 0
8799 1560 -2722 0
8799 1560 -2720 0
8799 1560 -2718 0
8799 1560 -2716 0
8799 1560 -2714 0
8799 1560 -2712 0
8799 1560 -2710 0
8799 1560 -2708 0
8799 1560 -2706 0
8799 1560 -2704 0
8799 1560 -2702 0
8799 1560 -2700 0
8799 1560 -2698 0
8799 1560 -2696 0
8799 1560 -2695 0
8799 1562 -3197 0
8799 1562 -2948 -3199 0
8799 1562 -2946 -3201 0
8799 1562 -2944 -3203 0
8799 1562 -2942 0
8799 1562 -2940 0
8799 1562 -2938 0
8799 1562 -2936 0
8799 1562 -2934 0
8799 1562 -2932 0
8799 1562 -2930 0
8799 1562 -2928 0
8799 1562 -2926 0
8799 1562 -2924 0
8799 1562 -2922 0
8799 1562 -2920 0
8799 1562 -2918 0
8799 1562 -2916 0
8799 1562 -2914 0
8799 1562 -2912 0
8799 1562 -2910 0
8799 1562 -2908 0
8799 1562 -2906 0
8799 1562 -2904 0
8799 1562 -2902 0
8799 1562 -2900 0
8799 1562 -2898 0
8799 1562 -2896 0
8799 1562 -2894 0
8799 1562 -2892 0
8799 1562 -2890 0
8799 1562 -2888 0
8799 1562 -2886 0
8799 1562 -2884 0
8799 1562 -2882 0
8799 1562 -2880 0
8799 1562 -2878 0
8799 1562 -2876 0
8799 1562 -2874 0
8799 1562 -2872 0
8799 1562 -2870 0
8799 1562 -2868 0
8799 1562 -2866 0
8799 1562 -2864 0
8799 1562 -2862 0
8799 1562 -2860 0
8799 1562 -2858 0
8799 1562 -2856 0
8799 1562 -2854 0
8799 1562 -2852 0
8799 1562 -2850 0
8799 1562 -2848 0
8799 1562 -2846 0
8799 1562 -2844 0
8799 1562 -2842 0
8799 1562 -2840 0
8799 1562 -2838 0
8799 1562 -2836 0
8799 1562 -2834 0
8799 1562 -2832 0
8799 1562 -2830 0
8799 1562 -2828 0
8799 1562 -2826 0
8799 1562 -2824 0
8799 1562 -2822 0
8799 1562 -2820 0
8799 1562 -2818 0
8799 1562 -2816 0
8799 1562 -2814 0
8799 1562 -2812 0
8799 1562 -2810 0
8799 1562 -2808 0
8799 1562 -2806 0
8799 1562 -2804 0
8799 1562 -2802 0
8799 1562 -2800 0
8799 1562 -2798 0
8799 1562 -2796 0
8799 1562 -2794 0
8799 1562 -2792 0
8799 1562 -2790 0
8799 1562 -2788 0
8799 1562 -2786 0
8799 1562 -2784 0
8799 1562 -2782 0
8799 1562 -2780 0
8799 1562 -2778 0
8799 1562 -2776 0
8799 1562 -2774 0
8799 1562 -2772 0
8799 1562 -2770 0
8799 1562 -2768 0
8799 1562 -2766 0
8799 1562 -2764 0
8799 1562 -2762 0
8799 1562 -2760 0
8799 1562 -2758 0
8799 1562 -2756 0
8799 1562 -2754 0
8799 1562 -2752 0
8799 1562 -2750 0
8799 1562 -2748 0
8799 1562 -2746 0
8799 1562 -2744 0
8799 1562 -2742 0
8799 1562 -2740 0
8799 1562 -2738 0
8799 1562 -2736 0
8799 1562 -2734 0
8799 1562 -2732 0
8799 1562 -2730 0
8799 1562 -2728 0
8799 1562 -2726 0
8799 1562 -2724 0
8799 1562 -2722 0
8799 1562 -2720 0
8799 1562 -2718 0
8799 1562 -2716 0
8799 1562 -2714 0
8799 1562 -2712 0
8799 1562 -2710 0
8799 1562 -2708 0
8799 1562 -2706 0
8799 1562 -2704 0
8799 1562 -2702 0
8799 1562 -2700 0
8799 1562 -2698 0
8799 1562 -2696 0
8799 1562 -2695 0
8799 1564 -3199 0
8799 1564 -2948 -3201 0
8799 1564 -2946 -3203 0
8799 1564 -2944 0
8799 1564 -2942 0
8799 1564 -2940 0
8799 1564 -2938 0
8799 1564 -2936 0
8799 1564 -2934 0
8799 1564 -2932 0
8799 1564 -2930 0
8799 1564 -2928 0
8799 1564 -2926 0
8799 1564 -2924 0
8799 1564 -2922 0
8799 1564 -2920 0
8799 1564 -2918 0
8799 1564 -2916 0
8799 1564 -2914 0
8799 1564 -2912 0
8799 1564 -2910 0
8799 1564 -2908 0
8799 1564 -2906 0
8799 1564 -2904 0
8799 1564 -2902 0
8799 1564 -2900 0
8799 1564 -2898 0
8799 1564 -2896 0
8799 1564 -2894 0
8799 1564 -2892 0
8799 1564 -2890 0
8799 1564 -2888 0
8799 1564 -2886 0
8799 1564 -2884 0
8799 1564 -2882 0
8799 1564 -2880 0
8799 1564 -2878 0
8799 1564 -2876 0
8799 1564 -2874 0
8799 1564 -2872 0
8799 1564 -2870 0
8799 1564 -2868 0
8799 1564 -2866 0
8799 1564 -2864 0
8799 1564 -2862 0
8799 1564 -2860 0
8799 1564 -2858 0
8799 1564 -2856 0
8799 1564 -2854 0
8799 1564 -2852 0
8799 1564 -2850 0
8799 1564 -2848 0
8799 1564 -2846 0
8799 1564 -2844 0
8799 1564 -2842 0
8799 1564 -2840 0
8799 1564 -2838 0
8799 1564 -2836 0
8799 1564 -2834 0
8799 1564 -2832 0
8799 1564 -2830 0
8799 1564 -2828 0
8799 1564 -2826 0
8799 1564 -2824 0
8799 1564 -2822 0
8799 1564 -2820 0
8799 1564 -2818 0
8799 1564 -2816 0
8799 1564 -2814 0
8799 1564 -2812 0
8799 1564 -2810 0
8799 1564 -2808 0
8799 1564 -2806 0
8799 1564 -2804 0
8799 1564 -2802 0
8799 1564 -2800 0
8799 1564 -2798 0
8799 1564 -2796 0
8799 1564 -2794 0
8799 1564 -2792 0
8799 1564 -2790 0
8799 1564 -2788 0
8799 1564 -2786 0
8799 1564 -2784 0
8799 1564 -2782 0
8799 1564 -2780 0
8799 1564 -2778 0
8799 1564 -2776 0
8799 1564 -2774 0
8799 1564 -2772 0
8799 1564 -2770 0
8799 1564 -2768 0
8799 1564 -2766 0
8799 1564 -2764 0
8799 1564 -2762 0
8799 1564 -2760 0
8799 1564 -2758 0
8799 1564 -2756 0
8799 1564 -2754 0
8799 1564 -2752 0
8799 1564 -2750 0
8799 1564 -2748 0
8799 1564 -2746 0
8799 1564 -2744 0
8799 1564 -2742 0
8799 1564 -2740 0
8799 1564 -2738 0
8799 1564 -2736 0
8799 1564 -2734 0
8799 1564 -2732 0
8799 1564 -2730 0
8799 1564 -2728 0
8799 1564 -2726 0
8799 1564 -2724 0
8799 1564 -2722 0
8799 1564 -2720 0
8799 1564 -2718 0
8799 1564 -2716 0
8799 1564 -2714 0
8799 1564 -2712 0
8799 1564 -2710 0
8799 1564 -2708 0
8799 1564 -2706 0
8799 1564 -2704 0
8799 1564 -2702 0
8799 1564 -2700 0
8799 1564 -2698 0
8799 1564 -2696 0
8799 1564 -2695 0
8799 1566 -3201 0
8799 1566 -2948 -3203 0
8799 1566 -2946 0
8799 1566 -2944 0
8799 1566 -2942 0
8799 1566 -2940 0
8799 1566 -2938 0
8799 1566 -2936 0
8799 1566 -2934 0
8799 1566 -2932 0
8799 1566 -2930 0
8799 1566 -2928 0
8799 1566 -2926 0
8799 1566 -2924 0
8799 1566 -2922 0
8799 1566 -2920 0
8799 1566 -2918 0
8799 1566 -2916 0
8799 1566 -2914 0
8799 1566 -2912 0
8799 1566 -2910 0
8799 1566 -2908 0
8799 1566 -2906 0
8799 1566 -2904 0
8799 1566 -2902 0
8799 1566 -2900 0
8799 1566 -2898 0
8799 1566 -2896 0
8799 1566 -2894 0
8799 1566 -2892 0
8799 1566 -2890 0
8799 1566 -2888 0
8799 1566 -2886 0
8799 1566 -2884 0
8799 1566 -2882 0
8799 1566 -2880 0
8799 1566 -2878 0
8799 1566 -2876 0
8799 1566 -2874 0
8799 1566 -2872 0
8799 1566 -2870 0
8799 1566 -2868 0
8799 1566 -2866 0
8799 1566 -2864 0
8799 1566 -2862 0
8799 1566 -2860 0
8799 1566 -2858 0
8799 1566 -2856 0
8799 1566 -2854 0
8799 1566 -2852 0
8799 1566 -2850 0
8799 1566 -2848 0
8799 1566 -2846 0
8799 1566 -2844 0
8799 1566 -2842 0
8799 1566 -2840 0
8799 1566 -2838 0
8799 1566 -2836 0
8799 1566 -2834 0
8799 1566 -2832 0
8799 1566 -2830 0
8799 1566 -2828 0
8799 1566 -2826 0
8799 1566 -2824 0
8799 1566 -2822 0
8799 1566 -2820 0
8799 1566 -2818 0
8799 1566 -2816 0
8799 1566 -2814 0
8799 1566 -2812 0
8799 1566 -2810 0
8799 1566 -2808 0
8799 1566 -2806 0
8799 1566 -2804 0
8799 1566 -2802 0
8799 1566 -2800 0
8799 1566 -2798 0
8799 1566 -2796 0
8799 1566 -2794 0
8799 1566 -2792 0
8799 1566 -2790 0
8799 1566 -2788 0
8799 1566 -2786 0
8799 1566 -2784 0
8799 1566 -2782 0
8799 1566 -2780 0
8799 1566 -2778 0
8799 1566 -2776 0
8799 1566 -2774 0
8799 1566 -2772 0
8799 1566 -2770 0
8799 1566 -2768 0
8799 1566 -2766 0
8799 1566 -2764 0
8799 1566 -2762 0
8799 1566 -2760 0
8799 1566 -2758 0
8799 1566 -2756 0
8799 1566 -2754 0
8799 1566 -2752 0
8799 1566 -2750 0
8799 1566 -2748 0
8799 1566 -2746 0
8799 1566 -2744 0
8799 1566 -2742 0
8799 1566 -2740 0
8799 1566 -2738 0
8799 1566 -2736 0
8799 1566 -2734 0
8799 1566 -2732 0
8799 1566 -2730 0
8799 1566 -2728 0
8799 1566 -2726 0
8799 1566 -2724 0
8799 1566 -2722 0
8799 1566 -2720 0
8799 1566 -2718 0
8799 1566 -2716 0
8799 1566 -2714 0
8799 1566 -2712 0
8799 1566 -2710 0
8799 1566 -2708 0
8799 1566 -2706 0
8799 1566 -2704 0
8799 1566 -2702 0
8799 1566 -2700 0
8799 1566 -2698 0
8799 1566 -2696 0
8799 1566 -2695 0
8799 1568 -3203 0
8799 1568 -2948 0
8799 1568 -2946 0
8799 1568 -2944 0
8799 1568 -2942 0
8799 1568 -2940 0
8799 1568 -2938 0
8799 1568 -2936 0
8799 1568 -2934 0
8799 1568 -2932 0
8799 1568 -2930 0
8799 1568 -2928 0
8799 1568 -2926 0
8799 1568 -2924 0
8799 1568 -2922 0
8799 1568 -2920 0
8799 1568 -2918 0
8799 1568 -2916 0
8799 1568 -2914 0
8799 1568 -2912 0
8799 1568 -2910 0
8799 1568 -2908 0
8799 1568 -2906 0
8799 1568 -2904 0
8799 1568 -2902 0
8799 1568 -2900 0
8799 1568 -2898 0
8799 1568 -2896 0
8799 1568 -2894 0
8799 1568 -2892 0
8799 1568 -2890 0
8799 1568 -2888 0
8799 1568 -2886 0
8799 1568 -2884 0
8799 1568 -2882 0
8799 1568 -2880 0
8799 1568 -2878 0
8799 1568 -2876 0
8799 1568 -2874 0
8799 1568 -2872 0
8799 1568 -2870 0
8799 1568 -2868 0
8799 1568 -2866 0
8799 1568 -2864 0
8799 1568 -2862 0
8799 1568 -2860 0
8799 1568 -2858 0
8799 1568 -2856 0
8799 1568 -2854 0
8799 1568 -2852 0
8799 1568 -2850 0
8799 1568 -2848 0
8799 1568 -2846 0
8799 1568 -2844 0
8799 1568 -2842 0
8799 1568 -2840 0
8799 1568 -2838 0
8799 1568 -2836 0
8799 1568 -2834 0
8799 1568 -2832 0
8799 1568 -2830 0
8799 1568 -2828 0
8799 1568 -2826 0
8799 1568 -2824 0
8799 1568 -2822 0
8799 1568 -2820 0
8799 1568 -2818 0
8799 1568 -2816 0
8799 1568 -2814 0
8799 1568 -2812 0
8799 1568 -2810 0
8799 1568 -2808 0
8799 1568 -2806 0
8799 1568 -2804 0
8799 1568 -2802 0
8799 1568 -2800 0
8799 1568 -2798 0
8799 1568 -2796 0
8799 1568 -2794 0
8799 1568 -2792 0
8799 1568 -2790 0
8799 1568 -2788 0
8799 1568 -2786 0
8799 1568 -2784 0
8799 1568 -2782 0
8799 1568 -2780 0
8799 1568 -2778 0
8799 1568 -2776 0
8799 1568 -2774 0
8799 1568 -2772 0
8799 1568 -2770 0
8799 1568 -2768 0
8799 1568 -2766 0
8799 1568 -2764 0
8799 1568 -2762 0
8799 1568 -2760 0
8799 1568 -2758 0
8799 1568 -2756 0
8799 1568 -2754 0
8799 1568 -2752 0
8799 1568 -2750 0
8799 1568 -2748 0
8799 1568 -2746 0
8799 1568 -2744 0
8799 1568 -2742 0
8799 1568 -2740 0
8799 1568 -2738 0
8799 1568 -2736 0
8799 1568 -2734 0
8799 1568 -2732 0
8799 1568 -2730 0
8799 1568 -2728 0
8799 1568 -2726 0
8799 1568 -2724 0
8799 1568 -2722 0
8799 1568 -2720 0
8799 1568 -2718 0
8799 1568 -2716 0
8799 1568 -2714 0
8799 1568 -2712 0
8799 1568 -2710 0
8799 1568 -2708 0
8799 1568 -2706 0
8799 1568 -2704 0
8799 1568 -2702 0
8799 1568 -2700 0
8799 1568 -2698 0
8799 1568 -2696 0
8799 1568 -2695 0
8799 1570 0
8799 1570 -2948 0
8799 1570 -2946 0
8799 1570 -2944 0
8799 1570 -2942 0
8799 1570 -2940 0
8799 1570 -2938 0
8799 1570 -2936 0
8799 1570 -2934 0
8799 1570 -2932 0
8799 1570 -2930 0
8799 1570 -2928 0
8799 1570 -2926 0
8799 1570 -2924 0
8799 1570 -2922 0
8799 1570 -2920 0
8799 1570 -2918 0
8799 1570 -2916 0
8799 1570 -2914 0
8799 1570 -2912 0
8799 1570 -2910 0
8799 1570 -2908 0
8799 1570 -2906 0
8799 1570 -2904 0
8799 1570 -2902 0
8799 1570 -2900 0
8799 1570 -2898 0
8799 1570 -2896 0
8799 1570 -2894 0
8799 1570 -2892 0
8799 1570 -2890 0
8799 1570 -2888 0
8799 1570 -2886 0
8799 1570 -2884 0
8799 1570 -2882 0
8799 1570 -2880 0
8799 1570 -2878 0
8799 1570 -2876 0
8799 1570 -2874 0
8799 1570 -2872 0
8799 1570 -2870 0
8799 1570 -2868 0
8799 1570 -2866 0
8799 1570 -2864 0
8799 1570 -2862 0
8799 1570 -2860 0
8799 1570 -2858 0
8799 1570 -2856 0
8799 1570 -2854 0
8799 1570 -2852 0
8799 1570 -2850 0
8799 1570 -2848 0
8799 1570 -2846 0
8799 1570 -2844 0
8799 1570 -2842 0
8799 1570 -2840 0
8799 1570 -2838 0
8799 1570 -2836 0
8799 1570 -2834 0
8799 1570 -2832 0
8799 1570 -2830 0
8799 1570 -2828 0
8799 1570 -2826 0
8799 1570 -2824 0
8799 1570 -2822 0
8799 1570 -2820 0
8799 1570 -2818 0
8799 1570 -2816 0
8799 1570 -2814 0
8799 1570 -2812 0
8799 1570 -2810 0
8799 1570 -2808 0
8799 1570 -2806 0
8799 1570 -2804 0
8799 1570 -2802 0
8799 1570 -2800 0
8799 1570 -2798 0
8799 1570 -2796 0
8799 1570 -2794 0
8799 1570 -2792 0
8799 1570 -2790 0
8799 1570 -2788 0
8799 1570 -2786 0
8799 1570 -2784 0
8799 1570 -2782 0
8799 1570 -2780 0
8799 1570 -2778 0
8799 1570 -2776 0
8799 1570 -2774 0
8799 1570 -2772 0
8799 1570 -2770 0
8799 1570 -2768 0
8799 1570 -2766 0
8799 1570 -2764 0
8799 1570 -2762 0
8799 1570 -2760 0
8799 1570 -2758 0
8799 1570 -2756 0
8799 1570 -2754 0
8799 1570 -2752 0
8799 1570 -2750 0
8799 1570 -2748 0
8799 1570 -2746 0
8799 1570 -2744 0
8799 1570 -2742 0
8799 1570 -2740 0
8799 1570 -2738 0
8799 1570 -2736 0
8799 1570 -2734 0
8799 1570 -2732 0
8799 1570 -2730 0
8799 1570 -2728 0
8799 1570 -2726 0
8799 1570 -2724 0
8799 1570 -2722 0
8799 1570 -2720 0
8799 1570 -2718 0
8799 1570 -2716 0
8799 1570 -2714 0
8799 1570 -2712 0
8799 1570 -2710 0
8799 1570 -2708 0
8799 1570 -2706 0
8799 1570 -2704 0
8799 1570 -2702 0
8799 1570 -2700 0
8799 1570 -2698 0
8799 1570 -2696 0
8799 1570 -2695 0
c ((256<=(aux404 + aux405 - shift(num_occupied_by_types_00001, -64)))=tv=SATLiteral(8800))
-8800 -3075 0
-8800 -2948 -3077 0
-8800 -2946 -3079 0
-8800 -2944 -3081 0
-8800 -2942 -3083 0
-8800 -2940 -3085 0
-8800 -2938 -3087 0
-8800 -2936 -3089 0
-8800 -2934 -3091 0
-8800 -2932 -3093 0
-8800 -2930 -3095 0
-8800 -2928 -3097 0
-8800 -2926 -3099 0
-8800 -2924 -3101 0
-8800 -2922 -3103 0
-8800 -2920 -3105 0
-8800 -2918 -3107 0
-8800 -2916 -3109 0
-8800 -2914 -3111 0
-8800 -2912 -3113 0
-8800 -2910 -3115 0
-8800 -2908 -3117 0
-8800 -2906 -3119 0
-8800 -2904 -3121 0
-8800 -2902 -3123 0
-8800 -2900 -3125 0
-8800 -2898 -3127 0
-8800 -2896 -3129 0
-8800 -2894 -3131 0
-8800 -2892 -3133 0
-8800 -2890 -3135 0
-8800 -2888 -3137 0
-8800 -2886 -3139 0
-8800 -2884 -3141 0
-8800 -2882 -3143 0
-8800 -2880 -3145 0
-8800 -2878 -3147 0
-8800 -2876 -3149 0
-8800 -2874 -3151 0
-8800 -2872 -3153 0
-8800 -2870 -3155 0
-8800 -2868 -3157 0
-8800 -2866 -3159 0
-8800 -2864 -3161 0
-8800 -2862 -3163 0
-8800 -2860 -3165 0
-8800 -2858 -3167 0
-8800 -2856 -3169 0
-8800 -2854 -3171 0
-8800 -2852 -3173 0
-8800 -2850 -3175 0
-8800 -2848 -3177 0
-8800 -2846 -3179 0
-8800 -2844 -3181 0
-8800 -2842 -3183 0
-8800 -2840 -3185 0
-8800 -2838 -3187 0
-8800 -2836 -3189 0
-8800 -2834 -3191 0
-8800 -2832 -3193 0
-8800 -2830 -3195 0
-8800 -2828 -3197 0
-8800 -2826 -3199 0
-8800 -2824 -3201 0
-8800 -2822 -3203 0
-8800 -2820 0
-8800 -2818 0
-8800 -2816 0
-8800 -2814 0
-8800 -2812 0
-8800 -2810 0
-8800 -2808 0
-8800 -2806 0
-8800 -2804 0
-8800 -2802 0
-8800 -2800 0
-8800 -2798 0
-8800 -2796 0
-8800 -2794 0
-8800 -2792 0
-8800 -2790 0
-8800 -2788 0
-8800 -2786 0
-8800 -2784 0
-8800 -2782 0
-8800 -2780 0
-8800 -2778 0
-8800 -2776 0
-8800 -2774 0
-8800 -2772 0
-8800 -2770 0
-8800 -2768 0
-8800 -2766 0
-8800 -2764 0
-8800 -2762 0
-8800 -2760 0
-8800 -2758 0
-8800 -2756 0
-8800 -2754 0
-8800 -2752 0
-8800 -2750 0
-8800 -2748 0
-8800 -2746 0
-8800 -2744 0
-8800 -2742 0
-8800 -2740 0
-8800 -2738 0
-8800 -2736 0
-8800 -2734 0
-8800 -2732 0
-8800 -2730 0
-8800 -2728 0
-8800 -2726 0
-8800 -2724 0
-8800 -2722 0
-8800 -2720 0
-8800 -2718 0
-8800 -2716 0
-8800 -2714 0
-8800 -2712 0
-8800 -2710 0
-8800 -2708 0
-8800 -2706 0
-8800 -2704 0
-8800 -2702 0
-8800 -2700 0
-8800 -2698 0
-8800 -2696 0
-8800 -2695 0
-8800 1445 -3077 0
-8800 1445 -2948 -3079 0
-8800 1445 -2946 -3081 0
-8800 1445 -2944 -3083 0
-8800 1445 -2942 -3085 0
-8800 1445 -2940 -3087 0
-8800 1445 -2938 -3089 0
-8800 1445 -2936 -3091 0
-8800 1445 -2934 -3093 0
-8800 1445 -2932 -3095 0
-8800 1445 -2930 -3097 0
-8800 1445 -2928 -3099 0
-8800 1445 -2926 -3101 0
-8800 1445 -2924 -3103 0
-8800 1445 -2922 -3105 0
-8800 1445 -2920 -3107 0
-8800 1445 -2918 -3109 0
-8800 1445 -2916 -3111 0
-8800 1445 -2914 -3113 0
-8800 1445 -2912 -3115 0
-8800 1445 -2910 -3117 0
-8800 1445 -2908 -3119 0
-8800 1445 -2906 -3121 0
-8800 1445 -2904 -3123 0
-8800 1445 -2902 -3125 0
-8800 1445 -2900 -3127 0
-8800 1445 -2898 -3129 0
-8800 1445 -2896 -3131 0
-8800 1445 -2894 -3133 0
-8800 1445 -2892 -3135 0
-8800 1445 -2890 -3137 0
-8800 1445 -2888 -3139 0
-8800 1445 -2886 -3141 0
-8800 1445 -2884 -3143 0
-8800 1445 -2882 -3145 0
-8800 1445 -2880 -3147 0
-8800 1445 -2878 -3149 0
-8800 1445 -2876 -3151 0
-8800 1445 -2874 -3153 0
-8800 1445 -2872 -3155 0
-8800 1445 -2870 -3157 0
-8800 1445 -2868 -3159 0
-8800 1445 -2866 -3161 0
-8800 1445 -2864 -3163 0
-8800 1445 -2862 -3165 0
-8800 1445 -2860 -3167 0
-8800 1445 -2858 -3169 0
-8800 1445 -2856 -3171 0
-8800 1445 -2854 -3173 0
-8800 1445 -2852 -3175 0
-8800 1445 -2850 -3177 0
-8800 1445 -2848 -3179 0
-8800 1445 -2846 -3181 0
-8800 1445 -2844 -3183 0
-8800 1445 -2842 -3185 0
-8800 1445 -2840 -3187 0
-8800 1445 -2838 -3189 0
-8800 1445 -2836 -3191 0
-8800 1445 -2834 -3193 0
-8800 1445 -2832 -3195 0
-8800 1445 -2830 -3197 0
-8800 1445 -2828 -3199 0
-8800 1445 -2826 -3201 0
-8800 1445 -2824 -3203 0
-8800 1445 -2822 0
-8800 1445 -2820 0
-8800 1445 -2818 0
-8800 1445 -2816 0
-8800 1445 -2814 0
-8800 1445 -2812 0
-8800 1445 -2810 0
-8800 1445 -2808 0
-8800 1445 -2806 0
-8800 1445 -2804 0
-8800 1445 -2802 0
-8800 1445 -2800 0
-8800 1445 -2798 0
-8800 1445 -2796 0
-8800 1445 -2794 0
-8800 1445 -2792 0
-8800 1445 -2790 0
-8800 1445 -2788 0
-8800 1445 -2786 0
-8800 1445 -2784 0
-8800 1445 -2782 0
-8800 1445 -2780 0
-8800 1445 -2778 0
-8800 1445 -2776 0
-8800 1445 -2774 0
-8800 1445 -2772 0
-8800 1445 -2770 0
-8800 1445 -2768 0
-8800 1445 -2766 0
-8800 1445 -2764 0
-8800 1445 -2762 0
-8800 1445 -2760 0
-8800 1445 -2758 0
-8800 1445 -2756 0
-8800 1445 -2754 0
-8800 1445 -2752 0
-8800 1445 -2750 0
-8800 1445 -2748 0
-8800 1445 -2746 0
-8800 1445 -2744 0
-8800 1445 -2742 0
-8800 1445 -2740 0
-8800 1445 -2738 0
-8800 1445 -2736 0
-8800 1445 -2734 0
-8800 1445 -2732 0
-8800 1445 -2730 0
-8800 1445 -2728 0
-8800 1445 -2726 0
-8800 1445 -2724 0
-8800 1445 -2722 0
-8800 1445 -2720 0
-8800 1445 -2718 0
-8800 1445 -2716 0
-8800 1445 -2714 0
-8800 1445 -2712 0
-8800 1445 -2710 0
-8800 1445 -2708 0
-8800 1445 -2706 0
-8800 1445 -2704 0
-8800 1445 -2702 0
-8800 1445 -2700 0
-8800 1445 -2698 0
-8800 1445 -2696 0
-8800 1445 -2695 0
-8800 1446 -3079 0
-8800 1446 -2948 -3081 0
-8800 1446 -2946 -3083 0
-8800 1446 -2944 -3085 0
-8800 1446 -2942 -3087 0
-8800 1446 -2940 -3089 0
-8800 1446 -2938 -3091 0
-8800 1446 -2936 -3093 0
-8800 1446 -2934 -3095 0
-8800 1446 -2932 -3097 0
-8800 1446 -2930 -3099 0
-8800 1446 -2928 -3101 0
-8800 1446 -2926 -3103 0
-8800 1446 -2924 -3105 0
-8800 1446 -2922 -3107 0
-8800 1446 -2920 -3109 0
-8800 1446 -2918 -3111 0
-8800 1446 -2916 -3113 0
-8800 1446 -2914 -3115 0
-8800 1446 -2912 -3117 0
-8800 1446 -2910 -3119 0
-8800 1446 -2908 -3121 0
-8800 1446 -2906 -3123 0
-8800 1446 -2904 -3125 0
-8800 1446 -2902 -3127 0
-8800 1446 -2900 -3129 0
-8800 1446 -2898 -3131 0
-8800 1446 -2896 -3133 0
-8800 1446 -2894 -3135 0
-8800 1446 -2892 -3137 0
-8800 1446 -2890 -3139 0
-8800 1446 -2888 -3141 0
-8800 1446 -2886 -3143 0
-8800 1446 -2884 -3145 0
-8800 1446 -2882 -3147 0
-8800 1446 -2880 -3149 0
-8800 1446 -2878 -3151 0
-8800 1446 -2876 -3153 0
-8800 1446 -2874 -3155 0
-8800 1446 -2872 -3157 0
-8800 1446 -2870 -3159 0
-8800 1446 -2868 -3161 0
-8800 1446 -2866 -3163 0
-8800 1446 -2864 -3165 0
-8800 1446 -2862 -3167 0
-8800 1446 -2860 -3169 0
-8800 1446 -2858 -3171 0
-8800 1446 -2856 -3173 0
-8800 1446 -2854 -3175 0
-8800 1446 -2852 -3177 0
-8800 1446 -2850 -3179 0
-8800 1446 -2848 -3181 0
-8800 1446 -2846 -3183 0
-8800 1446 -2844 -3185 0
-8800 1446 -2842 -3187 0
-8800 1446 -2840 -3189 0
-8800 1446 -2838 -3191 0
-8800 1446 -2836 -3193 0
-8800 1446 -2834 -3195 0
-8800 1446 -2832 -3197 0
-8800 1446 -2830 -3199 0
-8800 1446 -2828 -3201 0
-8800 1446 -2826 -3203 0
-8800 1446 -2824 0
-8800 1446 -2822 0
-8800 1446 -2820 0
-8800 1446 -2818 0
-8800 1446 -2816 0
-8800 1446 -2814 0
-8800 1446 -2812 0
-8800 1446 -2810 0
-8800 1446 -2808 0
-8800 1446 -2806 0
-8800 1446 -2804 0
-8800 1446 -2802 0
-8800 1446 -2800 0
-8800 1446 -2798 0
-8800 1446 -2796 0
-8800 1446 -2794 0
-8800 1446 -2792 0
-8800 1446 -2790 0
-8800 1446 -2788 0
-8800 1446 -2786 0
-8800 1446 -2784 0
-8800 1446 -2782 0
-8800 1446 -2780 0
-8800 1446 -2778 0
-8800 1446 -2776 0
-8800 1446 -2774 0
-8800 1446 -2772 0
-8800 1446 -2770 0
-8800 1446 -2768 0
-8800 1446 -2766 0
-8800 1446 -2764 0
-8800 1446 -2762 0
-8800 1446 -2760 0
-8800 1446 -2758 0
-8800 1446 -2756 0
-8800 1446 -2754 0
-8800 1446 -2752 0
-8800 1446 -2750 0
-8800 1446 -2748 0
-8800 1446 -2746 0
-8800 1446 -2744 0
-8800 1446 -2742 0
-8800 1446 -2740 0
-8800 1446 -2738 0
-8800 1446 -2736 0
-8800 1446 -2734 0
-8800 1446 -2732 0
-8800 1446 -2730 0
-8800 1446 -2728 0
-8800 1446 -2726 0
-8800 1446 -2724 0
-8800 1446 -2722 0
-8800 1446 -2720 0
-8800 1446 -2718 0
-8800 1446 -2716 0
-8800 1446 -2714 0
-8800 1446 -2712 0
-8800 1446 -2710 0
-8800 1446 -2708 0
-8800 1446 -2706 0
-8800 1446 -2704 0
-8800 1446 -2702 0
-8800 1446 -2700 0
-8800 1446 -2698 0
-8800 1446 -2696 0
-8800 1446 -2695 0
-8800 1448 -3081 0
-8800 1448 -2948 -3083 0
-8800 1448 -2946 -3085 0
-8800 1448 -2944 -3087 0
-8800 1448 -2942 -3089 0
-8800 1448 -2940 -3091 0
-8800 1448 -2938 -3093 0
-8800 1448 -2936 -3095 0
-8800 1448 -2934 -3097 0
-8800 1448 -2932 -3099 0
-8800 1448 -2930 -3101 0
-8800 1448 -2928 -3103 0
-8800 1448 -2926 -3105 0
-8800 1448 -2924 -3107 0
-8800 1448 -2922 -3109 0
-8800 1448 -2920 -3111 0
-8800 1448 -2918 -3113 0
-8800 1448 -2916 -3115 0
-8800 1448 -2914 -3117 0
-8800 1448 -2912 -3119 0
-8800 1448 -2910 -3121 0
-8800 1448 -2908 -3123 0
-8800 1448 -2906 -3125 0
-8800 1448 -2904 -3127 0
-8800 1448 -2902 -3129 0
-8800 1448 -2900 -3131 0
-8800 1448 -2898 -3133 0
-8800 1448 -2896 -3135 0
-8800 1448 -2894 -3137 0
-8800 1448 -2892 -3139 0
-8800 1448 -2890 -3141 0
-8800 1448 -2888 -3143 0
-8800 1448 -2886 -3145 0
-8800 1448 -2884 -3147 0
-8800 1448 -2882 -3149 0
-8800 1448 -2880 -3151 0
-8800 1448 -2878 -3153 0
-8800 1448 -2876 -3155 0
-8800 1448 -2874 -3157 0
-8800 1448 -2872 -3159 0
-8800 1448 -2870 -3161 0
-8800 1448 -2868 -3163 0
-8800 1448 -2866 -3165 0
-8800 1448 -2864 -3167 0
-8800 1448 -2862 -3169 0
-8800 1448 -2860 -3171 0
-8800 1448 -2858 -3173 0
-8800 1448 -2856 -3175 0
-8800 1448 -2854 -3177 0
-8800 1448 -2852 -3179 0
-8800 1448 -2850 -3181 0
-8800 1448 -2848 -3183 0
-8800 1448 -2846 -3185 0
-8800 1448 -2844 -3187 0
-8800 1448 -2842 -3189 0
-8800 1448 -2840 -3191 0
-8800 1448 -2838 -3193 0
-8800 1448 -2836 -3195 0
-8800 1448 -2834 -3197 0
-8800 1448 -2832 -3199 0
-8800 1448 -2830 -3201 0
-8800 1448 -2828 -3203 0
-8800 1448 -2826 0
-8800 1448 -2824 0
-8800 1448 -2822 0
-8800 1448 -2820 0
-8800 1448 -2818 0
-8800 1448 -2816 0
-8800 1448 -2814 0
-8800 1448 -2812 0
-8800 1448 -2810 0
-8800 1448 -2808 0
-8800 1448 -2806 0
-8800 1448 -2804 0
-8800 1448 -2802 0
-8800 1448 -2800 0
-8800 1448 -2798 0
-8800 1448 -2796 0
-8800 1448 -2794 0
-8800 1448 -2792 0
-8800 1448 -2790 0
-8800 1448 -2788 0
-8800 1448 -2786 0
-8800 1448 -2784 0
-8800 1448 -2782 0
-8800 1448 -2780 0
-8800 1448 -2778 0
-8800 1448 -2776 0
-8800 1448 -2774 0
-8800 1448 -2772 0
-8800 1448 -2770 0
-8800 1448 -2768 0
-8800 1448 -2766 0
-8800 1448 -2764 0
-8800 1448 -2762 0
-8800 1448 -2760 0
-8800 1448 -2758 0
-8800 1448 -2756 0
-8800 1448 -2754 0
-8800 1448 -2752 0
-8800 1448 -2750 0
-8800 1448 -2748 0
-8800 1448 -2746 0
-8800 1448 -2744 0
-8800 1448 -2742 0
-8800 1448 -2740 0
-8800 1448 -2738 0
-8800 1448 -2736 0
-8800 1448 -2734 0
-8800 1448 -2732 0
-8800 1448 -2730 0
-8800 1448 -2728 0
-8800 1448 -2726 0
-8800 1448 -2724 0
-8800 1448 -2722 0
-8800 1448 -2720 0
-8800 1448 -2718 0
-8800 1448 -2716 0
-8800 1448 -2714 0
-8800 1448 -2712 0
-8800 1448 -2710 0
-8800 1448 -2708 0
-8800 1448 -2706 0
-8800 1448 -2704 0
-8800 1448 -2702 0
-8800 1448 -2700 0
-8800 1448 -2698 0
-8800 1448 -2696 0
-8800 1448 -2695 0
-8800 1450 -3083 0
-8800 1450 -2948 -3085 0
-8800 1450 -2946 -3087 0
-8800 1450 -2944 -3089 0
-8800 1450 -2942 -3091 0
-8800 1450 -2940 -3093 0
-8800 1450 -2938 -3095 0
-8800 1450 -2936 -3097 0
-8800 1450 -2934 -3099 0
-8800 1450 -2932 -3101 0
-8800 1450 -2930 -3103 0
-8800 1450 -2928 -3105 0
-8800 1450 -2926 -3107 0
-8800 1450 -2924 -3109 0
-8800 1450 -2922 -3111 0
-8800 1450 -2920 -3113 0
-8800 1450 -2918 -3115 0
-8800 1450 -2916 -3117 0
-8800 1450 -2914 -3119 0
-8800 1450 -2912 -3121 0
-8800 1450 -2910 -3123 0
-8800 1450 -2908 -3125 0
-8800 1450 -2906 -3127 0
-8800 1450 -2904 -3129 0
-8800 1450 -2902 -3131 0
-8800 1450 -2900 -3133 0
-8800 1450 -2898 -3135 0
-8800 1450 -2896 -3137 0
-8800 1450 -2894 -3139 0
-8800 1450 -2892 -3141 0
-8800 1450 -2890 -3143 0
-8800 1450 -2888 -3145 0
-8800 1450 -2886 -3147 0
-8800 1450 -2884 -3149 0
-8800 1450 -2882 -3151 0
-8800 1450 -2880 -3153 0
-8800 1450 -2878 -3155 0
-8800 1450 -2876 -3157 0
-8800 1450 -2874 -3159 0
-8800 1450 -2872 -3161 0
-8800 1450 -2870 -3163 0
-8800 1450 -2868 -3165 0
-8800 1450 -2866 -3167 0
-8800 1450 -2864 -3169 0
-8800 1450 -2862 -3171 0
-8800 1450 -2860 -3173 0
-8800 1450 -2858 -3175 0
-8800 1450 -2856 -3177 0
-8800 1450 -2854 -3179 0
-8800 1450 -2852 -3181 0
-8800 1450 -2850 -3183 0
-8800 1450 -2848 -3185 0
-8800 1450 -2846 -3187 0
-8800 1450 -2844 -3189 0
-8800 1450 -2842 -3191 0
-8800 1450 -2840 -3193 0
-8800 1450 -2838 -3195 0
-8800 1450 -2836 -3197 0
-8800 1450 -2834 -3199 0
-8800 1450 -2832 -3201 0
-8800 1450 -2830 -3203 0
-8800 1450 -2828 0
-8800 1450 -2826 0
-8800 1450 -2824 0
-8800 1450 -2822 0
-8800 1450 -2820 0
-8800 1450 -2818 0
-8800 1450 -2816 0
-8800 1450 -2814 0
-8800 1450 -2812 0
-8800 1450 -2810 0
-8800 1450 -2808 0
-8800 1450 -2806 0
-8800 1450 -2804 0
-8800 1450 -2802 0
-8800 1450 -2800 0
-8800 1450 -2798 0
-8800 1450 -2796 0
-8800 1450 -2794 0
-8800 1450 -2792 0
-8800 1450 -2790 0
-8800 1450 -2788 0
-8800 1450 -2786 0
-8800 1450 -2784 0
-8800 1450 -2782 0
-8800 1450 -2780 0
-8800 1450 -2778 0
-8800 1450 -2776 0
-8800 1450 -2774 0
-8800 1450 -2772 0
-8800 1450 -2770 0
-8800 1450 -2768 0
-8800 1450 -2766 0
-8800 1450 -2764 0
-8800 1450 -2762 0
-8800 1450 -2760 0
-8800 1450 -2758 0
-8800 1450 -2756 0
-8800 1450 -2754 0
-8800 1450 -2752 0
-8800 1450 -2750 0
-8800 1450 -2748 0
-8800 1450 -2746 0
-8800 1450 -2744 0
-8800 1450 -2742 0
-8800 1450 -2740 0
-8800 1450 -2738 0
-8800 1450 -2736 0
-8800 1450 -2734 0
-8800 1450 -2732 0
-8800 1450 -2730 0
-8800 1450 -2728 0
-8800 1450 -2726 0
-8800 1450 -2724 0
-8800 1450 -2722 0
-8800 1450 -2720 0
-8800 1450 -2718 0
-8800 1450 -2716 0
-8800 1450 -2714 0
-8800 1450 -2712 0
-8800 1450 -2710 0
-8800 1450 -2708 0
-8800 1450 -2706 0
-8800 1450 -2704 0
-8800 1450 -2702 0
-8800 1450 -2700 0
-8800 1450 -2698 0
-8800 1450 -2696 0
-8800 1450 -2695 0
-8800 1452 -3085 0
-8800 1452 -2948 -3087 0
-8800 1452 -2946 -3089 0
-8800 1452 -2944 -3091 0
-8800 1452 -2942 -3093 0
-8800 1452 -2940 -3095 0
-8800 1452 -2938 -3097 0
-8800 1452 -2936 -3099 0
-8800 1452 -2934 -3101 0
-8800 1452 -2932 -3103 0
-8800 1452 -2930 -3105 0
-8800 1452 -2928 -3107 0
-8800 1452 -2926 -3109 0
-8800 1452 -2924 -3111 0
-8800 1452 -2922 -3113 0
-8800 1452 -2920 -3115 0
-8800 1452 -2918 -3117 0
-8800 1452 -2916 -3119 0
-8800 1452 -2914 -3121 0
-8800 1452 -2912 -3123 0
-8800 1452 -2910 -3125 0
-8800 1452 -2908 -3127 0
-8800 1452 -2906 -3129 0
-8800 1452 -2904 -3131 0
-8800 1452 -2902 -3133 0
-8800 1452 -2900 -3135 0
-8800 1452 -2898 -3137 0
-8800 1452 -2896 -3139 0
-8800 1452 -2894 -3141 0
-8800 1452 -2892 -3143 0
-8800 1452 -2890 -3145 0
-8800 1452 -2888 -3147 0
-8800 1452 -2886 -3149 0
-8800 1452 -2884 -3151 0
-8800 1452 -2882 -3153 0
-8800 1452 -2880 -3155 0
-8800 1452 -2878 -3157 0
-8800 1452 -2876 -3159 0
-8800 1452 -2874 -3161 0
-8800 1452 -2872 -3163 0
-8800 1452 -2870 -3165 0
-8800 1452 -2868 -3167 0
-8800 1452 -2866 -3169 0
-8800 1452 -2864 -3171 0
-8800 1452 -2862 -3173 0
-8800 1452 -2860 -3175 0
-8800 1452 -2858 -3177 0
-8800 1452 -2856 -3179 0
-8800 1452 -2854 -3181 0
-8800 1452 -2852 -3183 0
-8800 1452 -2850 -3185 0
-8800 1452 -2848 -3187 0
-8800 1452 -2846 -3189 0
-8800 1452 -2844 -3191 0
-8800 1452 -2842 -3193 0
-8800 1452 -2840 -3195 0
-8800 1452 -2838 -3197 0
-8800 1452 -2836 -3199 0
-8800 1452 -2834 -3201 0
-8800 1452 -2832 -3203 0
-8800 1452 -2830 0
-8800 1452 -2828 0
-8800 1452 -2826 0
-8800 1452 -2824 0
-8800 1452 -2822 0
-8800 1452 -2820 0
-8800 1452 -2818 0
-8800 1452 -2816 0
-8800 1452 -2814 0
-8800 1452 -2812 0
-8800 1452 -2810 0
-8800 1452 -2808 0
-8800 1452 -2806 0
-8800 1452 -2804 0
-8800 1452 -2802 0
-8800 1452 -2800 0
-8800 1452 -2798 0
-8800 1452 -2796 0
-8800 1452 -2794 0
-8800 1452 -2792 0
-8800 1452 -2790 0
-8800 1452 -2788 0
-8800 1452 -2786 0
-8800 1452 -2784 0
-8800 1452 -2782 0
-8800 1452 -2780 0
-8800 1452 -2778 0
-8800 1452 -2776 0
-8800 1452 -2774 0
-8800 1452 -2772 0
-8800 1452 -2770 0
-8800 1452 -2768 0
-8800 1452 -2766 0
-8800 1452 -2764 0
-8800 1452 -2762 0
-8800 1452 -2760 0
-8800 1452 -2758 0
-8800 1452 -2756 0
-8800 1452 -2754 0
-8800 1452 -2752 0
-8800 1452 -2750 0
-8800 1452 -2748 0
-8800 1452 -2746 0
-8800 1452 -2744 0
-8800 1452 -2742 0
-8800 1452 -2740 0
-8800 1452 -2738 0
-8800 1452 -2736 0
-8800 1452 -2734 0
-8800 1452 -2732 0
-8800 1452 -2730 0
-8800 1452 -2728 0
-8800 1452 -2726 0
-8800 1452 -2724 0
-8800 1452 -2722 0
-8800 1452 -2720 0
-8800 1452 -2718 0
-8800 1452 -2716 0
-8800 1452 -2714 0
-8800 1452 -2712 0
-8800 1452 -2710 0
-8800 1452 -2708 0
-8800 1452 -2706 0
-8800 1452 -2704 0
-8800 1452 -2702 0
-8800 1452 -2700 0
-8800 1452 -2698 0
-8800 1452 -2696 0
-8800 1452 -2695 0
-8800 1454 -3087 0
-8800 1454 -2948 -3089 0
-8800 1454 -2946 -3091 0
-8800 1454 -2944 -3093 0
-8800 1454 -2942 -3095 0
-8800 1454 -2940 -3097 0
-8800 1454 -2938 -3099 0
-8800 1454 -2936 -3101 0
-8800 1454 -2934 -3103 0
-8800 1454 -2932 -3105 0
-8800 1454 -2930 -3107 0
-8800 1454 -2928 -3109 0
-8800 1454 -2926 -3111 0
-8800 1454 -2924 -3113 0
-8800 1454 -2922 -3115 0
-8800 1454 -2920 -3117 0
-8800 1454 -2918 -3119 0
-8800 1454 -2916 -3121 0
-8800 1454 -2914 -3123 0
-8800 1454 -2912 -3125 0
-8800 1454 -2910 -3127 0
-8800 1454 -2908 -3129 0
-8800 1454 -2906 -3131 0
-8800 1454 -2904 -3133 0
-8800 1454 -2902 -3135 0
-8800 1454 -2900 -3137 0
-8800 1454 -2898 -3139 0
-8800 1454 -2896 -3141 0
-8800 1454 -2894 -3143 0
-8800 1454 -2892 -3145 0
-8800 1454 -2890 -3147 0
-8800 1454 -2888 -3149 0
-8800 1454 -2886 -3151 0
-8800 1454 -2884 -3153 0
-8800 1454 -2882 -3155 0
-8800 1454 -2880 -3157 0
-8800 1454 -2878 -3159 0
-8800 1454 -2876 -3161 0
-8800 1454 -2874 -3163 0
-8800 1454 -2872 -3165 0
-8800 1454 -2870 -3167 0
-8800 1454 -2868 -3169 0
-8800 1454 -2866 -3171 0
-8800 1454 -2864 -3173 0
-8800 1454 -2862 -3175 0
-8800 1454 -2860 -3177 0
-8800 1454 -2858 -3179 0
-8800 1454 -2856 -3181 0
-8800 1454 -2854 -3183 0
-8800 1454 -2852 -3185 0
-8800 1454 -2850 -3187 0
-8800 1454 -2848 -3189 0
-8800 1454 -2846 -3191 0
-8800 1454 -2844 -3193 0
-8800 1454 -2842 -3195 0
-8800 1454 -2840 -3197 0
-8800 1454 -2838 -3199 0
-8800 1454 -2836 -3201 0
-8800 1454 -2834 -3203 0
-8800 1454 -2832 0
-8800 1454 -2830 0
-8800 1454 -2828 0
-8800 1454 -2826 0
-8800 1454 -2824 0
-8800 1454 -2822 0
-8800 1454 -2820 0
-8800 1454 -2818 0
-8800 1454 -2816 0
-8800 1454 -2814 0
-8800 1454 -2812 0
-8800 1454 -2810 0
-8800 1454 -2808 0
-8800 1454 -2806 0
-8800 1454 -2804 0
-8800 1454 -2802 0
-8800 1454 -2800 0
-8800 1454 -2798 0
-8800 1454 -2796 0
-8800 1454 -2794 0
-8800 1454 -2792 0
-8800 1454 -2790 0
-8800 1454 -2788 0
-8800 1454 -2786 0
-8800 1454 -2784 0
-8800 1454 -2782 0
-8800 1454 -2780 0
-8800 1454 -2778 0
-8800 1454 -2776 0
-8800 1454 -2774 0
-8800 1454 -2772 0
-8800 1454 -2770 0
-8800 1454 -2768 0
-8800 1454 -2766 0
-8800 1454 -2764 0
-8800 1454 -2762 0
-8800 1454 -2760 0
-8800 1454 -2758 0
-8800 1454 -2756 0
-8800 1454 -2754 0
-8800 1454 -2752 0
-8800 1454 -2750 0
-8800 1454 -2748 0
-8800 1454 -2746 0
-8800 1454 -2744 0
-8800 1454 -2742 0
-8800 1454 -2740 0
-8800 1454 -2738 0
-8800 1454 -2736 0
-8800 1454 -2734 0
-8800 1454 -2732 0
-8800 1454 -2730 0
-8800 1454 -2728 0
-8800 1454 -2726 0
-8800 1454 -2724 0
-8800 1454 -2722 0
-8800 1454 -2720 0
-8800 1454 -2718 0
-8800 1454 -2716 0
-8800 1454 -2714 0
-8800 1454 -2712 0
-8800 1454 -2710 0
-8800 1454 -2708 0
-8800 1454 -2706 0
-8800 1454 -2704 0
-8800 1454 -2702 0
-8800 1454 -2700 0
-8800 1454 -2698 0
-8800 1454 -2696 0
-8800 1454 -2695 0
-8800 1456 -3089 0
-8800 1456 -2948 -3091 0
-8800 1456 -2946 -3093 0
-8800 1456 -2944 -3095 0
-8800 1456 -2942 -3097 0
-8800 1456 -2940 -3099 0
-8800 1456 -2938 -3101 0
-8800 1456 -2936 -3103 0
-8800 1456 -2934 -3105 0
-8800 1456 -2932 -3107 0
-8800 1456 -2930 -3109 0
-8800 1456 -2928 -3111 0
-8800 1456 -2926 -3113 0
-8800 1456 -2924 -3115 0
-8800 1456 -2922 -3117 0
-8800 1456 -2920 -3119 0
-8800 1456 -2918 -3121 0
-8800 1456 -2916 -3123 0
-8800 1456 -2914 -3125 0
-8800 1456 -2912 -3127 0
-8800 1456 -2910 -3129 0
-8800 1456 -2908 -3131 0
-8800 1456 -2906 -3133 0
-8800 1456 -2904 -3135 0
-8800 1456 -2902 -3137 0
-8800 1456 -2900 -3139 0
-8800 1456 -2898 -3141 0
-8800 1456 -2896 -3143 0
-8800 1456 -2894 -3145 0
-8800 1456 -2892 -3147 0
-8800 1456 -2890 -3149 0
-8800 1456 -2888 -3151 0
-8800 1456 -2886 -3153 0
-8800 1456 -2884 -3155 0
-8800 1456 -2882 -3157 0
-8800 1456 -2880 -3159 0
-8800 1456 -2878 -3161 0
-8800 1456 -2876 -3163 0
-8800 1456 -2874 -3165 0
-8800 1456 -2872 -3167 0
-8800 1456 -2870 -3169 0
-8800 1456 -2868 -3171 0
-8800 1456 -2866 -3173 0
-8800 1456 -2864 -3175 0
-8800 1456 -2862 -3177 0
-8800 1456 -2860 -3179 0
-8800 1456 -2858 -3181 0
-8800 1456 -2856 -3183 0
-8800 1456 -2854 -3185 0
-8800 1456 -2852 -3187 0
-8800 1456 -2850 -3189 0
-8800 1456 -2848 -3191 0
-8800 1456 -2846 -3193 0
-8800 1456 -2844 -3195 0
-8800 1456 -2842 -3197 0
-8800 1456 -2840 -3199 0
-8800 1456 -2838 -3201 0
-8800 1456 -2836 -3203 0
-8800 1456 -2834 0
-8800 1456 -2832 0
-8800 1456 -2830 0
-8800 1456 -2828 0
-8800 1456 -2826 0
-8800 1456 -2824 0
-8800 1456 -2822 0
-8800 1456 -2820 0
-8800 1456 -2818 0
-8800 1456 -2816 0
-8800 1456 -2814 0
-8800 1456 -2812 0
-8800 1456 -2810 0
-8800 1456 -2808 0
-8800 1456 -2806 0
-8800 1456 -2804 0
-8800 1456 -2802 0
-8800 1456 -2800 0
-8800 1456 -2798 0
-8800 1456 -2796 0
-8800 1456 -2794 0
-8800 1456 -2792 0
-8800 1456 -2790 0
-8800 1456 -2788 0
-8800 1456 -2786 0
-8800 1456 -2784 0
-8800 1456 -2782 0
-8800 1456 -2780 0
-8800 1456 -2778 0
-8800 1456 -2776 0
-8800 1456 -2774 0
-8800 1456 -2772 0
-8800 1456 -2770 0
-8800 1456 -2768 0
-8800 1456 -2766 0
-8800 1456 -2764 0
-8800 1456 -2762 0
-8800 1456 -2760 0
-8800 1456 -2758 0
-8800 1456 -2756 0
-8800 1456 -2754 0
-8800 1456 -2752 0
-8800 1456 -2750 0
-8800 1456 -2748 0
-8800 1456 -2746 0
-8800 1456 -2744 0
-8800 1456 -2742 0
-8800 1456 -2740 0
-8800 1456 -2738 0
-8800 1456 -2736 0
-8800 1456 -2734 0
-8800 1456 -2732 0
-8800 1456 -2730 0
-8800 1456 -2728 0
-8800 1456 -2726 0
-8800 1456 -2724 0
-8800 1456 -2722 0
-8800 1456 -2720 0
-8800 1456 -2718 0
-8800 1456 -2716 0
-8800 1456 -2714 0
-8800 1456 -2712 0
-8800 1456 -2710 0
-8800 1456 -2708 0
-8800 1456 -2706 0
-8800 1456 -2704 0
-8800 1456 -2702 0
-8800 1456 -2700 0
-8800 1456 -2698 0
-8800 1456 -2696 0
-8800 1456 -2695 0
-8800 1458 -3091 0
-8800 1458 -2948 -3093 0
-8800 1458 -2946 -3095 0
-8800 1458 -2944 -3097 0
-8800 1458 -2942 -3099 0
-8800 1458 -2940 -3101 0
-8800 1458 -2938 -3103 0
-8800 1458 -2936 -3105 0
-8800 1458 -2934 -3107 0
-8800 1458 -2932 -3109 0
-8800 1458 -2930 -3111 0
-8800 1458 -2928 -3113 0
-8800 1458 -2926 -3115 0
-8800 1458 -2924 -3117 0
-8800 1458 -2922 -3119 0
-8800 1458 -2920 -3121 0
-8800 1458 -2918 -3123 0
-8800 1458 -2916 -3125 0
-8800 1458 -2914 -3127 0
-8800 1458 -2912 -3129 0
-8800 1458 -2910 -3131 0
-8800 1458 -2908 -3133 0
-8800 1458 -2906 -3135 0
-8800 1458 -2904 -3137 0
-8800 1458 -2902 -3139 0
-8800 1458 -2900 -3141 0
-8800 1458 -2898 -3143 0
-8800 1458 -2896 -3145 0
-8800 1458 -2894 -3147 0
-8800 1458 -2892 -3149 0
-8800 1458 -2890 -3151 0
-8800 1458 -2888 -3153 0
-8800 1458 -2886 -3155 0
-8800 1458 -2884 -3157 0
-8800 1458 -2882 -3159 0
-8800 1458 -2880 -3161 0
-8800 1458 -2878 -3163 0
-8800 1458 -2876 -3165 0
-8800 1458 -2874 -3167 0
-8800 1458 -2872 -3169 0
-8800 1458 -2870 -3171 0
-8800 1458 -2868 -3173 0
-8800 1458 -2866 -3175 0
-8800 1458 -2864 -3177 0
-8800 1458 -2862 -3179 0
-8800 1458 -2860 -3181 0
-8800 1458 -2858 -3183 0
-8800 1458 -2856 -3185 0
-8800 1458 -2854 -3187 0
-8800 1458 -2852 -3189 0
-8800 1458 -2850 -3191 0
-8800 1458 -2848 -3193 0
-8800 1458 -2846 -3195 0
-8800 1458 -2844 -3197 0
-8800 1458 -2842 -3199 0
-8800 1458 -2840 -3201 0
-8800 1458 -2838 -3203 0
-8800 1458 -2836 0
-8800 1458 -2834 0
-8800 1458 -2832 0
-8800 1458 -2830 0
-8800 1458 -2828 0
-8800 1458 -2826 0
-8800 1458 -2824 0
-8800 1458 -2822 0
-8800 1458 -2820 0
-8800 1458 -2818 0
-8800 1458 -2816 0
-8800 1458 -2814 0
-8800 1458 -2812 0
-8800 1458 -2810 0
-8800 1458 -2808 0
-8800 1458 -2806 0
-8800 1458 -2804 0
-8800 1458 -2802 0
-8800 1458 -2800 0
-8800 1458 -2798 0
-8800 1458 -2796 0
-8800 1458 -2794 0
-8800 1458 -2792 0
-8800 1458 -2790 0
-8800 1458 -2788 0
-8800 1458 -2786 0
-8800 1458 -2784 0
-8800 1458 -2782 0
-8800 1458 -2780 0
-8800 1458 -2778 0
-8800 1458 -2776 0
-8800 1458 -2774 0
-8800 1458 -2772 0
-8800 1458 -2770 0
-8800 1458 -2768 0
-8800 1458 -2766 0
-8800 1458 -2764 0
-8800 1458 -2762 0
-8800 1458 -2760 0
-8800 1458 -2758 0
-8800 1458 -2756 0
-8800 1458 -2754 0
-8800 1458 -2752 0
-8800 1458 -2750 0
-8800 1458 -2748 0
-8800 1458 -2746 0
-8800 1458 -2744 0
-8800 1458 -2742 0
-8800 1458 -2740 0
-8800 1458 -2738 0
-8800 1458 -2736 0
-8800 1458 -2734 0
-8800 1458 -2732 0
-8800 1458 -2730 0
-8800 1458 -2728 0
-8800 1458 -2726 0
-8800 1458 -2724 0
-8800 1458 -2722 0
-8800 1458 -2720 0
-8800 1458 -2718 0
-8800 1458 -2716 0
-8800 1458 -2714 0
-8800 1458 -2712 0
-8800 1458 -2710 0
-8800 1458 -2708 0
-8800 1458 -2706 0
-8800 1458 -2704 0
-8800 1458 -2702 0
-8800 1458 -2700 0
-8800 1458 -2698 0
-8800 1458 -2696 0
-8800 1458 -2695 0
-8800 1460 -3093 0
-8800 1460 -2948 -3095 0
-8800 1460 -2946 -3097 0
-8800 1460 -2944 -3099 0
-8800 1460 -2942 -3101 0
-8800 1460 -2940 -3103 0
-8800 1460 -2938 -3105 0
-8800 1460 -2936 -3107 0
-8800 1460 -2934 -3109 0
-8800 1460 -2932 -3111 0
-8800 1460 -2930 -3113 0
-8800 1460 -2928 -3115 0
-8800 1460 -2926 -3117 0
-8800 1460 -2924 -3119 0
-8800 1460 -2922 -3121 0
-8800 1460 -2920 -3123 0
-8800 1460 -2918 -3125 0
-8800 1460 -2916 -3127 0
-8800 1460 -2914 -3129 0
-8800 1460 -2912 -3131 0
-8800 1460 -2910 -3133 0
-8800 1460 -2908 -3135 0
-8800 1460 -2906 -3137 0
-8800 1460 -2904 -3139 0
-8800 1460 -2902 -3141 0
-8800 1460 -2900 -3143 0
-8800 1460 -2898 -3145 0
-8800 1460 -2896 -3147 0
-8800 1460 -2894 -3149 0
-8800 1460 -2892 -3151 0
-8800 1460 -2890 -3153 0
-8800 1460 -2888 -3155 0
-8800 1460 -2886 -3157 0
-8800 1460 -2884 -3159 0
-8800 1460 -2882 -3161 0
-8800 1460 -2880 -3163 0
-8800 1460 -2878 -3165 0
-8800 1460 -2876 -3167 0
-8800 1460 -2874 -3169 0
-8800 1460 -2872 -3171 0
-8800 1460 -2870 -3173 0
-8800 1460 -2868 -3175 0
-8800 1460 -2866 -3177 0
-8800 1460 -2864 -3179 0
-8800 1460 -2862 -3181 0
-8800 1460 -2860 -3183 0
-8800 1460 -2858 -3185 0
-8800 1460 -2856 -3187 0
-8800 1460 -2854 -3189 0
-8800 1460 -2852 -3191 0
-8800 1460 -2850 -3193 0
-8800 1460 -2848 -3195 0
-8800 1460 -2846 -3197 0
-8800 1460 -2844 -3199 0
-8800 1460 -2842 -3201 0
-8800 1460 -2840 -3203 0
-8800 1460 -2838 0
-8800 1460 -2836 0
-8800 1460 -2834 0
-8800 1460 -2832 0
-8800 1460 -2830 0
-8800 1460 -2828 0
-8800 1460 -2826 0
-8800 1460 -2824 0
-8800 1460 -2822 0
-8800 1460 -2820 0
-8800 1460 -2818 0
-8800 1460 -2816 0
-8800 1460 -2814 0
-8800 1460 -2812 0
-8800 1460 -2810 0
-8800 1460 -2808 0
-8800 1460 -2806 0
-8800 1460 -2804 0
-8800 1460 -2802 0
-8800 1460 -2800 0
-8800 1460 -2798 0
-8800 1460 -2796 0
-8800 1460 -2794 0
-8800 1460 -2792 0
-8800 1460 -2790 0
-8800 1460 -2788 0
-8800 1460 -2786 0
-8800 1460 -2784 0
-8800 1460 -2782 0
-8800 1460 -2780 0
-8800 1460 -2778 0
-8800 1460 -2776 0
-8800 1460 -2774 0
-8800 1460 -2772 0
-8800 1460 -2770 0
-8800 1460 -2768 0
-8800 1460 -2766 0
-8800 1460 -2764 0
-8800 1460 -2762 0
-8800 1460 -2760 0
-8800 1460 -2758 0
-8800 1460 -2756 0
-8800 1460 -2754 0
-8800 1460 -2752 0
-8800 1460 -2750 0
-8800 1460 -2748 0
-8800 1460 -2746 0
-8800 1460 -2744 0
-8800 1460 -2742 0
-8800 1460 -2740 0
-8800 1460 -2738 0
-8800 1460 -2736 0
-8800 1460 -2734 0
-8800 1460 -2732 0
-8800 1460 -2730 0
-8800 1460 -2728 0
-8800 1460 -2726 0
-8800 1460 -2724 0
-8800 1460 -2722 0
-8800 1460 -2720 0
-8800 1460 -2718 0
-8800 1460 -2716 0
-8800 1460 -2714 0
-8800 1460 -2712 0
-8800 1460 -2710 0
-8800 1460 -2708 0
-8800 1460 -2706 0
-8800 1460 -2704 0
-8800 1460 -2702 0
-8800 1460 -2700 0
-8800 1460 -2698 0
-8800 1460 -2696 0
-8800 1460 -2695 0
-8800 1462 -3095 0
-8800 1462 -2948 -3097 0
-8800 1462 -2946 -3099 0
-8800 1462 -2944 -3101 0
-8800 1462 -2942 -3103 0
-8800 1462 -2940 -3105 0
-8800 1462 -2938 -3107 0
-8800 1462 -2936 -3109 0
-8800 1462 -2934 -3111 0
-8800 1462 -2932 -3113 0
-8800 1462 -2930 -3115 0
-8800 1462 -2928 -3117 0
-8800 1462 -2926 -3119 0
-8800 1462 -2924 -3121 0
-8800 1462 -2922 -3123 0
-8800 1462 -2920 -3125 0
-8800 1462 -2918 -3127 0
-8800 1462 -2916 -3129 0
-8800 1462 -2914 -3131 0
-8800 1462 -2912 -3133 0
-8800 1462 -2910 -3135 0
-8800 1462 -2908 -3137 0
-8800 1462 -2906 -3139 0
-8800 1462 -2904 -3141 0
-8800 1462 -2902 -3143 0
-8800 1462 -2900 -3145 0
-8800 1462 -2898 -3147 0
-8800 1462 -2896 -3149 0
-8800 1462 -2894 -3151 0
-8800 1462 -2892 -3153 0
-8800 1462 -2890 -3155 0
-8800 1462 -2888 -3157 0
-8800 1462 -2886 -3159 0
-8800 1462 -2884 -3161 0
-8800 1462 -2882 -3163 0
-8800 1462 -2880 -3165 0
-8800 1462 -2878 -3167 0
-8800 1462 -2876 -3169 0
-8800 1462 -2874 -3171 0
-8800 1462 -2872 -3173 0
-8800 1462 -2870 -3175 0
-8800 1462 -2868 -3177 0
-8800 1462 -2866 -3179 0
-8800 1462 -2864 -3181 0
-8800 1462 -2862 -3183 0
-8800 1462 -2860 -3185 0
-8800 1462 -2858 -3187 0
-8800 1462 -2856 -3189 0
-8800 1462 -2854 -3191 0
-8800 1462 -2852 -3193 0
-8800 1462 -2850 -3195 0
-8800 1462 -2848 -3197 0
-8800 1462 -2846 -3199 0
-8800 1462 -2844 -3201 0
-8800 1462 -2842 -3203 0
-8800 1462 -2840 0
-8800 1462 -2838 0
-8800 1462 -2836 0
-8800 1462 -2834 0
-8800 1462 -2832 0
-8800 1462 -2830 0
-8800 1462 -2828 0
-8800 1462 -2826 0
-8800 1462 -2824 0
-8800 1462 -2822 0
-8800 1462 -2820 0
-8800 1462 -2818 0
-8800 1462 -2816 0
-8800 1462 -2814 0
-8800 1462 -2812 0
-8800 1462 -2810 0
-8800 1462 -2808 0
-8800 1462 -2806 0
-8800 1462 -2804 0
-8800 1462 -2802 0
-8800 1462 -2800 0
-8800 1462 -2798 0
-8800 1462 -2796 0
-8800 1462 -2794 0
-8800 1462 -2792 0
-8800 1462 -2790 0
-8800 1462 -2788 0
-8800 1462 -2786 0
-8800 1462 -2784 0
-8800 1462 -2782 0
-8800 1462 -2780 0
-8800 1462 -2778 0
-8800 1462 -2776 0
-8800 1462 -2774 0
-8800 1462 -2772 0
-8800 1462 -2770 0
-8800 1462 -2768 0
-8800 1462 -2766 0
-8800 1462 -2764 0
-8800 1462 -2762 0
-8800 1462 -2760 0
-8800 1462 -2758 0
-8800 1462 -2756 0
-8800 1462 -2754 0
-8800 1462 -2752 0
-8800 1462 -2750 0
-8800 1462 -2748 0
-8800 1462 -2746 0
-8800 1462 -2744 0
-8800 1462 -2742 0
-8800 1462 -2740 0
-8800 1462 -2738 0
-8800 1462 -2736 0
-8800 1462 -2734 0
-8800 1462 -2732 0
-8800 1462 -2730 0
-8800 1462 -2728 0
-8800 1462 -2726 0
-8800 1462 -2724 0
-8800 1462 -2722 0
-8800 1462 -2720 0
-8800 1462 -2718 0
-8800 1462 -2716 0
-8800 1462 -2714 0
-8800 1462 -2712 0
-8800 1462 -2710 0
-8800 1462 -2708 0
-8800 1462 -2706 0
-8800 1462 -2704 0
-8800 1462 -2702 0
-8800 1462 -2700 0
-8800 1462 -2698 0
-8800 1462 -2696 0
-8800 1462 -2695 0
-8800 1464 -3097 0
-8800 1464 -2948 -3099 0
-8800 1464 -2946 -3101 0
-8800 1464 -2944 -3103 0
-8800 1464 -2942 -3105 0
-8800 1464 -2940 -3107 0
-8800 1464 -2938 -3109 0
-8800 1464 -2936 -3111 0
-8800 1464 -2934 -3113 0
-8800 1464 -2932 -3115 0
-8800 1464 -2930 -3117 0
-8800 1464 -2928 -3119 0
-8800 1464 -2926 -3121 0
-8800 1464 -2924 -3123 0
-8800 1464 -2922 -3125 0
-8800 1464 -2920 -3127 0
-8800 1464 -2918 -3129 0
-8800 1464 -2916 -3131 0
-8800 1464 -2914 -3133 0
-8800 1464 -2912 -3135 0
-8800 1464 -2910 -3137 0
-8800 1464 -2908 -3139 0
-8800 1464 -2906 -3141 0
-8800 1464 -2904 -3143 0
-8800 1464 -2902 -3145 0
-8800 1464 -2900 -3147 0
-8800 1464 -2898 -3149 0
-8800 1464 -2896 -3151 0
-8800 1464 -2894 -3153 0
-8800 1464 -2892 -3155 0
-8800 1464 -2890 -3157 0
-8800 1464 -2888 -3159 0
-8800 1464 -2886 -3161 0
-8800 1464 -2884 -3163 0
-8800 1464 -2882 -3165 0
-8800 1464 -2880 -3167 0
-8800 1464 -2878 -3169 0
-8800 1464 -2876 -3171 0
-8800 1464 -2874 -3173 0
-8800 1464 -2872 -3175 0
-8800 1464 -2870 -3177 0
-8800 1464 -2868 -3179 0
-8800 1464 -2866 -3181 0
-8800 1464 -2864 -3183 0
-8800 1464 -2862 -3185 0
-8800 1464 -2860 -3187 0
-8800 1464 -2858 -3189 0
-8800 1464 -2856 -3191 0
-8800 1464 -2854 -3193 0
-8800 1464 -2852 -3195 0
-8800 1464 -2850 -3197 0
-8800 1464 -2848 -3199 0
-8800 1464 -2846 -3201 0
-8800 1464 -2844 -3203 0
-8800 1464 -2842 0
-8800 1464 -2840 0
-8800 1464 -2838 0
-8800 1464 -2836 0
-8800 1464 -2834 0
-8800 1464 -2832 0
-8800 1464 -2830 0
-8800 1464 -2828 0
-8800 1464 -2826 0
-8800 1464 -2824 0
-8800 1464 -2822 0
-8800 1464 -2820 0
-8800 1464 -2818 0
-8800 1464 -2816 0
-8800 1464 -2814 0
-8800 1464 -2812 0
-8800 1464 -2810 0
-8800 1464 -2808 0
-8800 1464 -2806 0
-8800 1464 -2804 0
-8800 1464 -2802 0
-8800 1464 -2800 0
-8800 1464 -2798 0
-8800 1464 -2796 0
-8800 1464 -2794 0
-8800 1464 -2792 0
-8800 1464 -2790 0
-8800 1464 -2788 0
-8800 1464 -2786 0
-8800 1464 -2784 0
-8800 1464 -2782 0
-8800 1464 -2780 0
-8800 1464 -2778 0
-8800 1464 -2776 0
-8800 1464 -2774 0
-8800 1464 -2772 0
-8800 1464 -2770 0
-8800 1464 -2768 0
-8800 1464 -2766 0
-8800 1464 -2764 0
-8800 1464 -2762 0
-8800 1464 -2760 0
-8800 1464 -2758 0
-8800 1464 -2756 0
-8800 1464 -2754 0
-8800 1464 -2752 0
-8800 1464 -2750 0
-8800 1464 -2748 0
-8800 1464 -2746 0
-8800 1464 -2744 0
-8800 1464 -2742 0
-8800 1464 -2740 0
-8800 1464 -2738 0
-8800 1464 -2736 0
-8800 1464 -2734 0
-8800 1464 -2732 0
-8800 1464 -2730 0
-8800 1464 -2728 0
-8800 1464 -2726 0
-8800 1464 -2724 0
-8800 1464 -2722 0
-8800 1464 -2720 0
-8800 1464 -2718 0
-8800 1464 -2716 0
-8800 1464 -2714 0
-8800 1464 -2712 0
-8800 1464 -2710 0
-8800 1464 -2708 0
-8800 1464 -2706 0
-8800 1464 -2704 0
-8800 1464 -2702 0
-8800 1464 -2700 0
-8800 1464 -2698 0
-8800 1464 -2696 0
-8800 1464 -2695 0
-8800 1466 -3099 0
-8800 1466 -2948 -3101 0
-8800 1466 -2946 -3103 0
-8800 1466 -2944 -3105 0
-8800 1466 -2942 -3107 0
-8800 1466 -2940 -3109 0
-8800 1466 -2938 -3111 0
-8800 1466 -2936 -3113 0
-8800 1466 -2934 -3115 0
-8800 1466 -2932 -3117 0
-8800 1466 -2930 -3119 0
-8800 1466 -2928 -3121 0
-8800 1466 -2926 -3123 0
-8800 1466 -2924 -3125 0
-8800 1466 -2922 -3127 0
-8800 1466 -2920 -3129 0
-8800 1466 -2918 -3131 0
-8800 1466 -2916 -3133 0
-8800 1466 -2914 -3135 0
-8800 1466 -2912 -3137 0
-8800 1466 -2910 -3139 0
-8800 1466 -2908 -3141 0
-8800 1466 -2906 -3143 0
-8800 1466 -2904 -3145 0
-8800 1466 -2902 -3147 0
-8800 1466 -2900 -3149 0
-8800 1466 -2898 -3151 0
-8800 1466 -2896 -3153 0
-8800 1466 -2894 -3155 0
-8800 1466 -2892 -3157 0
-8800 1466 -2890 -3159 0
-8800 1466 -2888 -3161 0
-8800 1466 -2886 -3163 0
-8800 1466 -2884 -3165 0
-8800 1466 -2882 -3167 0
-8800 1466 -2880 -3169 0
-8800 1466 -2878 -3171 0
-8800 1466 -2876 -3173 0
-8800 1466 -2874 -3175 0
-8800 1466 -2872 -3177 0
-8800 1466 -2870 -3179 0
-8800 1466 -2868 -3181 0
-8800 1466 -2866 -3183 0
-8800 1466 -2864 -3185 0
-8800 1466 -2862 -3187 0
-8800 1466 -2860 -3189 0
-8800 1466 -2858 -3191 0
-8800 1466 -2856 -3193 0
-8800 1466 -2854 -3195 0
-8800 1466 -2852 -3197 0
-8800 1466 -2850 -3199 0
-8800 1466 -2848 -3201 0
-8800 1466 -2846 -3203 0
-8800 1466 -2844 0
-8800 1466 -2842 0
-8800 1466 -2840 0
-8800 1466 -2838 0
-8800 1466 -2836 0
-8800 1466 -2834 0
-8800 1466 -2832 0
-8800 1466 -2830 0
-8800 1466 -2828 0
-8800 1466 -2826 0
-8800 1466 -2824 0
-8800 1466 -2822 0
-8800 1466 -2820 0
-8800 1466 -2818 0
-8800 1466 -2816 0
-8800 1466 -2814 0
-8800 1466 -2812 0
-8800 1466 -2810 0
-8800 1466 -2808 0
-8800 1466 -2806 0
-8800 1466 -2804 0
-8800 1466 -2802 0
-8800 1466 -2800 0
-8800 1466 -2798 0
-8800 1466 -2796 0
-8800 1466 -2794 0
-8800 1466 -2792 0
-8800 1466 -2790 0
-8800 1466 -2788 0
-8800 1466 -2786 0
-8800 1466 -2784 0
-8800 1466 -2782 0
-8800 1466 -2780 0
-8800 1466 -2778 0
-8800 1466 -2776 0
-8800 1466 -2774 0
-8800 1466 -2772 0
-8800 1466 -2770 0
-8800 1466 -2768 0
-8800 1466 -2766 0
-8800 1466 -2764 0
-8800 1466 -2762 0
-8800 1466 -2760 0
-8800 1466 -2758 0
-8800 1466 -2756 0
-8800 1466 -2754 0
-8800 1466 -2752 0
-8800 1466 -2750 0
-8800 1466 -2748 0
-8800 1466 -2746 0
-8800 1466 -2744 0
-8800 1466 -2742 0
-8800 1466 -2740 0
-8800 1466 -2738 0
-8800 1466 -2736 0
-8800 1466 -2734 0
-8800 1466 -2732 0
-8800 1466 -2730 0
-8800 1466 -2728 0
-8800 1466 -2726 0
-8800 1466 -2724 0
-8800 1466 -2722 0
-8800 1466 -2720 0
-8800 1466 -2718 0
-8800 1466 -2716 0
-8800 1466 -2714 0
-8800 1466 -2712 0
-8800 1466 -2710 0
-8800 1466 -2708 0
-8800 1466 -2706 0
-8800 1466 -2704 0
-8800 1466 -2702 0
-8800 1466 -2700 0
-8800 1466 -2698 0
-8800 1466 -2696 0
-8800 1466 -2695 0
-8800 1468 -3101 0
-8800 1468 -2948 -3103 0
-8800 1468 -2946 -3105 0
-8800 1468 -2944 -3107 0
-8800 1468 -2942 -3109 0
-8800 1468 -2940 -3111 0
-8800 1468 -2938 -3113 0
-8800 1468 -2936 -3115 0
-8800 1468 -2934 -3117 0
-8800 1468 -2932 -3119 0
-8800 1468 -2930 -3121 0
-8800 1468 -2928 -3123 0
-8800 1468 -2926 -3125 0
-8800 1468 -2924 -3127 0
-8800 1468 -2922 -3129 0
-8800 1468 -2920 -3131 0
-8800 1468 -2918 -3133 0
-8800 1468 -2916 -3135 0
-8800 1468 -2914 -3137 0
-8800 1468 -2912 -3139 0
-8800 1468 -2910 -3141 0
-8800 1468 -2908 -3143 0
-8800 1468 -2906 -3145 0
-8800 1468 -2904 -3147 0
-8800 1468 -2902 -3149 0
-8800 1468 -2900 -3151 0
-8800 1468 -2898 -3153 0
-8800 1468 -2896 -3155 0
-8800 1468 -2894 -3157 0
-8800 1468 -2892 -3159 0
-8800 1468 -2890 -3161 0
-8800 1468 -2888 -3163 0
-8800 1468 -2886 -3165 0
-8800 1468 -2884 -3167 0
-8800 1468 -2882 -3169 0
-8800 1468 -2880 -3171 0
-8800 1468 -2878 -3173 0
-8800 1468 -2876 -3175 0
-8800 1468 -2874 -3177 0
-8800 1468 -2872 -3179 0
-8800 1468 -2870 -3181 0
-8800 1468 -2868 -3183 0
-8800 1468 -2866 -3185 0
-8800 1468 -2864 -3187 0
-8800 1468 -2862 -3189 0
-8800 1468 -2860 -3191 0
-8800 1468 -2858 -3193 0
-8800 1468 -2856 -3195 0
-8800 1468 -2854 -3197 0
-8800 1468 -2852 -3199 0
-8800 1468 -2850 -3201 0
-8800 1468 -2848 -3203 0
-8800 1468 -2846 0
-8800 1468 -2844 0
-8800 1468 -2842 0
-8800 1468 -2840 0
-8800 1468 -2838 0
-8800 1468 -2836 0
-8800 1468 -2834 0
-8800 1468 -2832 0
-8800 1468 -2830 0
-8800 1468 -2828 0
-8800 1468 -2826 0
-8800 1468 -2824 0
-8800 1468 -2822 0
-8800 1468 -2820 0
-8800 1468 -2818 0
-8800 1468 -2816 0
-8800 1468 -2814 0
-8800 1468 -2812 0
-8800 1468 -2810 0
-8800 1468 -2808 0
-8800 1468 -2806 0
-8800 1468 -2804 0
-8800 1468 -2802 0
-8800 1468 -2800 0
-8800 1468 -2798 0
-8800 1468 -2796 0
-8800 1468 -2794 0
-8800 1468 -2792 0
-8800 1468 -2790 0
-8800 1468 -2788 0
-8800 1468 -2786 0
-8800 1468 -2784 0
-8800 1468 -2782 0
-8800 1468 -2780 0
-8800 1468 -2778 0
-8800 1468 -2776 0
-8800 1468 -2774 0
-8800 1468 -2772 0
-8800 1468 -2770 0
-8800 1468 -2768 0
-8800 1468 -2766 0
-8800 1468 -2764 0
-8800 1468 -2762 0
-8800 1468 -2760 0
-8800 1468 -2758 0
-8800 1468 -2756 0
-8800 1468 -2754 0
-8800 1468 -2752 0
-8800 1468 -2750 0
-8800 1468 -2748 0
-8800 1468 -2746 0
-8800 1468 -2744 0
-8800 1468 -2742 0
-8800 1468 -2740 0
-8800 1468 -2738 0
-8800 1468 -2736 0
-8800 1468 -2734 0
-8800 1468 -2732 0
-8800 1468 -2730 0
-8800 1468 -2728 0
-8800 1468 -2726 0
-8800 1468 -2724 0
-8800 1468 -2722 0
-8800 1468 -2720 0
-8800 1468 -2718 0
-8800 1468 -2716 0
-8800 1468 -2714 0
-8800 1468 -2712 0
-8800 1468 -2710 0
-8800 1468 -2708 0
-8800 1468 -2706 0
-8800 1468 -2704 0
-8800 1468 -2702 0
-8800 1468 -2700 0
-8800 1468 -2698 0
-8800 1468 -2696 0
-8800 1468 -2695 0
-8800 1470 -3103 0
-8800 1470 -2948 -3105 0
-8800 1470 -2946 -3107 0
-8800 1470 -2944 -3109 0
-8800 1470 -2942 -3111 0
-8800 1470 -2940 -3113 0
-8800 1470 -2938 -3115 0
-8800 1470 -2936 -3117 0
-8800 1470 -2934 -3119 0
-8800 1470 -2932 -3121 0
-8800 1470 -2930 -3123 0
-8800 1470 -2928 -3125 0
-8800 1470 -2926 -3127 0
-8800 1470 -2924 -3129 0
-8800 1470 -2922 -3131 0
-8800 1470 -2920 -3133 0
-8800 1470 -2918 -3135 0
-8800 1470 -2916 -3137 0
-8800 1470 -2914 -3139 0
-8800 1470 -2912 -3141 0
-8800 1470 -2910 -3143 0
-8800 1470 -2908 -3145 0
-8800 1470 -2906 -3147 0
-8800 1470 -2904 -3149 0
-8800 1470 -2902 -3151 0
-8800 1470 -2900 -3153 0
-8800 1470 -2898 -3155 0
-8800 1470 -2896 -3157 0
-8800 1470 -2894 -3159 0
-8800 1470 -2892 -3161 0
-8800 1470 -2890 -3163 0
-8800 1470 -2888 -3165 0
-8800 1470 -2886 -3167 0
-8800 1470 -2884 -3169 0
-8800 1470 -2882 -3171 0
-8800 1470 -2880 -3173 0
-8800 1470 -2878 -3175 0
-8800 1470 -2876 -3177 0
-8800 1470 -2874 -3179 0
-8800 1470 -2872 -3181 0
-8800 1470 -2870 -3183 0
-8800 1470 -2868 -3185 0
-8800 1470 -2866 -3187 0
-8800 1470 -2864 -3189 0
-8800 1470 -2862 -3191 0
-8800 1470 -2860 -3193 0
-8800 1470 -2858 -3195 0
-8800 1470 -2856 -3197 0
-8800 1470 -2854 -3199 0
-8800 1470 -2852 -3201 0
-8800 1470 -2850 -3203 0
-8800 1470 -2848 0
-8800 1470 -2846 0
-8800 1470 -2844 0
-8800 1470 -2842 0
-8800 1470 -2840 0
-8800 1470 -2838 0
-8800 1470 -2836 0
-8800 1470 -2834 0
-8800 1470 -2832 0
-8800 1470 -2830 0
-8800 1470 -2828 0
-8800 1470 -2826 0
-8800 1470 -2824 0
-8800 1470 -2822 0
-8800 1470 -2820 0
-8800 1470 -2818 0
-8800 1470 -2816 0
-8800 1470 -2814 0
-8800 1470 -2812 0
-8800 1470 -2810 0
-8800 1470 -2808 0
-8800 1470 -2806 0
-8800 1470 -2804 0
-8800 1470 -2802 0
-8800 1470 -2800 0
-8800 1470 -2798 0
-8800 1470 -2796 0
-8800 1470 -2794 0
-8800 1470 -2792 0
-8800 1470 -2790 0
-8800 1470 -2788 0
-8800 1470 -2786 0
-8800 1470 -2784 0
-8800 1470 -2782 0
-8800 1470 -2780 0
-8800 1470 -2778 0
-8800 1470 -2776 0
-8800 1470 -2774 0
-8800 1470 -2772 0
-8800 1470 -2770 0
-8800 1470 -2768 0
-8800 1470 -2766 0
-8800 1470 -2764 0
-8800 1470 -2762 0
-8800 1470 -2760 0
-8800 1470 -2758 0
-8800 1470 -2756 0
-8800 1470 -2754 0
-8800 1470 -2752 0
-8800 1470 -2750 0
-8800 1470 -2748 0
-8800 1470 -2746 0
-8800 1470 -2744 0
-8800 1470 -2742 0
-8800 1470 -2740 0
-8800 1470 -2738 0
-8800 1470 -2736 0
-8800 1470 -2734 0
-8800 1470 -2732 0
-8800 1470 -2730 0
-8800 1470 -2728 0
-8800 1470 -2726 0
-8800 1470 -2724 0
-8800 1470 -2722 0
-8800 1470 -2720 0
-8800 1470 -2718 0
-8800 1470 -2716 0
-8800 1470 -2714 0
-8800 1470 -2712 0
-8800 1470 -2710 0
-8800 1470 -2708 0
-8800 1470 -2706 0
-8800 1470 -2704 0
-8800 1470 -2702 0
-8800 1470 -2700 0
-8800 1470 -2698 0
-8800 1470 -2696 0
-8800 1470 -2695 0
-8800 1472 -3105 0
-8800 1472 -2948 -3107 0
-8800 1472 -2946 -3109 0
-8800 1472 -2944 -3111 0
-8800 1472 -2942 -3113 0
-8800 1472 -2940 -3115 0
-8800 1472 -2938 -3117 0
-8800 1472 -2936 -3119 0
-8800 1472 -2934 -3121 0
-8800 1472 -2932 -3123 0
-8800 1472 -2930 -3125 0
-8800 1472 -2928 -3127 0
-8800 1472 -2926 -3129 0
-8800 1472 -2924 -3131 0
-8800 1472 -2922 -3133 0
-8800 1472 -2920 -3135 0
-8800 1472 -2918 -3137 0
-8800 1472 -2916 -3139 0
-8800 1472 -2914 -3141 0
-8800 1472 -2912 -3143 0
-8800 1472 -2910 -3145 0
-8800 1472 -2908 -3147 0
-8800 1472 -2906 -3149 0
-8800 1472 -2904 -3151 0
-8800 1472 -2902 -3153 0
-8800 1472 -2900 -3155 0
-8800 1472 -2898 -3157 0
-8800 1472 -2896 -3159 0
-8800 1472 -2894 -3161 0
-8800 1472 -2892 -3163 0
-8800 1472 -2890 -3165 0
-8800 1472 -2888 -3167 0
-8800 1472 -2886 -3169 0
-8800 1472 -2884 -3171 0
-8800 1472 -2882 -3173 0
-8800 1472 -2880 -3175 0
-8800 1472 -2878 -3177 0
-8800 1472 -2876 -3179 0
-8800 1472 -2874 -3181 0
-8800 1472 -2872 -3183 0
-8800 1472 -2870 -3185 0
-8800 1472 -2868 -3187 0
-8800 1472 -2866 -3189 0
-8800 1472 -2864 -3191 0
-8800 1472 -2862 -3193 0
-8800 1472 -2860 -3195 0
-8800 1472 -2858 -3197 0
-8800 1472 -2856 -3199 0
-8800 1472 -2854 -3201 0
-8800 1472 -2852 -3203 0
-8800 1472 -2850 0
-8800 1472 -2848 0
-8800 1472 -2846 0
-8800 1472 -2844 0
-8800 1472 -2842 0
-8800 1472 -2840 0
-8800 1472 -2838 0
-8800 1472 -2836 0
-8800 1472 -2834 0
-8800 1472 -2832 0
-8800 1472 -2830 0
-8800 1472 -2828 0
-8800 1472 -2826 0
-8800 1472 -2824 0
-8800 1472 -2822 0
-8800 1472 -2820 0
-8800 1472 -2818 0
-8800 1472 -2816 0
-8800 1472 -2814 0
-8800 1472 -2812 0
-8800 1472 -2810 0
-8800 1472 -2808 0
-8800 1472 -2806 0
-8800 1472 -2804 0
-8800 1472 -2802 0
-8800 1472 -2800 0
-8800 1472 -2798 0
-8800 1472 -2796 0
-8800 1472 -2794 0
-8800 1472 -2792 0
-8800 1472 -2790 0
-8800 1472 -2788 0
-8800 1472 -2786 0
-8800 1472 -2784 0
-8800 1472 -2782 0
-8800 1472 -2780 0
-8800 1472 -2778 0
-8800 1472 -2776 0
-8800 1472 -2774 0
-8800 1472 -2772 0
-8800 1472 -2770 0
-8800 1472 -2768 0
-8800 1472 -2766 0
-8800 1472 -2764 0
-8800 1472 -2762 0
-8800 1472 -2760 0
-8800 1472 -2758 0
-8800 1472 -2756 0
-8800 1472 -2754 0
-8800 1472 -2752 0
-8800 1472 -2750 0
-8800 1472 -2748 0
-8800 1472 -2746 0
-8800 1472 -2744 0
-8800 1472 -2742 0
-8800 1472 -2740 0
-8800 1472 -2738 0
-8800 1472 -2736 0
-8800 1472 -2734 0
-8800 1472 -2732 0
-8800 1472 -2730 0
-8800 1472 -2728 0
-8800 1472 -2726 0
-8800 1472 -2724 0
-8800 1472 -2722 0
-8800 1472 -2720 0
-8800 1472 -2718 0
-8800 1472 -2716 0
-8800 1472 -2714 0
-8800 1472 -2712 0
-8800 1472 -2710 0
-8800 1472 -2708 0
-8800 1472 -2706 0
-8800 1472 -2704 0
-8800 1472 -2702 0
-8800 1472 -2700 0
-8800 1472 -2698 0
-8800 1472 -2696 0
-8800 1472 -2695 0
-8800 1474 -3107 0
-8800 1474 -2948 -3109 0
-8800 1474 -2946 -3111 0
-8800 1474 -2944 -3113 0
-8800 1474 -2942 -3115 0
-8800 1474 -2940 -3117 0
-8800 1474 -2938 -3119 0
-8800 1474 -2936 -3121 0
-8800 1474 -2934 -3123 0
-8800 1474 -2932 -3125 0
-8800 1474 -2930 -3127 0
-8800 1474 -2928 -3129 0
-8800 1474 -2926 -3131 0
-8800 1474 -2924 -3133 0
-8800 1474 -2922 -3135 0
-8800 1474 -2920 -3137 0
-8800 1474 -2918 -3139 0
-8800 1474 -2916 -3141 0
-8800 1474 -2914 -3143 0
-8800 1474 -2912 -3145 0
-8800 1474 -2910 -3147 0
-8800 1474 -2908 -3149 0
-8800 1474 -2906 -3151 0
-8800 1474 -2904 -3153 0
-8800 1474 -2902 -3155 0
-8800 1474 -2900 -3157 0
-8800 1474 -2898 -3159 0
-8800 1474 -2896 -3161 0
-8800 1474 -2894 -3163 0
-8800 1474 -2892 -3165 0
-8800 1474 -2890 -3167 0
-8800 1474 -2888 -3169 0
-8800 1474 -2886 -3171 0
-8800 1474 -2884 -3173 0
-8800 1474 -2882 -3175 0
-8800 1474 -2880 -3177 0
-8800 1474 -2878 -3179 0
-8800 1474 -2876 -3181 0
-8800 1474 -2874 -3183 0
-8800 1474 -2872 -3185 0
-8800 1474 -2870 -3187 0
-8800 1474 -2868 -3189 0
-8800 1474 -2866 -3191 0
-8800 1474 -2864 -3193 0
-8800 1474 -2862 -3195 0
-8800 1474 -2860 -3197 0
-8800 1474 -2858 -3199 0
-8800 1474 -2856 -3201 0
-8800 1474 -2854 -3203 0
-8800 1474 -2852 0
-8800 1474 -2850 0
-8800 1474 -2848 0
-8800 1474 -2846 0
-8800 1474 -2844 0
-8800 1474 -2842 0
-8800 1474 -2840 0
-8800 1474 -2838 0
-8800 1474 -2836 0
-8800 1474 -2834 0
-8800 1474 -2832 0
-8800 1474 -2830 0
-8800 1474 -2828 0
-8800 1474 -2826 0
-8800 1474 -2824 0
-8800 1474 -2822 0
-8800 1474 -2820 0
-8800 1474 -2818 0
-8800 1474 -2816 0
-8800 1474 -2814 0
-8800 1474 -2812 0
-8800 1474 -2810 0
-8800 1474 -2808 0
-8800 1474 -2806 0
-8800 1474 -2804 0
-8800 1474 -2802 0
-8800 1474 -2800 0
-8800 1474 -2798 0
-8800 1474 -2796 0
-8800 1474 -2794 0
-8800 1474 -2792 0
-8800 1474 -2790 0
-8800 1474 -2788 0
-8800 1474 -2786 0
-8800 1474 -2784 0
-8800 1474 -2782 0
-8800 1474 -2780 0
-8800 1474 -2778 0
-8800 1474 -2776 0
-8800 1474 -2774 0
-8800 1474 -2772 0
-8800 1474 -2770 0
-8800 1474 -2768 0
-8800 1474 -2766 0
-8800 1474 -2764 0
-8800 1474 -2762 0
-8800 1474 -2760 0
-8800 1474 -2758 0
-8800 1474 -2756 0
-8800 1474 -2754 0
-8800 1474 -2752 0
-8800 1474 -2750 0
-8800 1474 -2748 0
-8800 1474 -2746 0
-8800 1474 -2744 0
-8800 1474 -2742 0
-8800 1474 -2740 0
-8800 1474 -2738 0
-8800 1474 -2736 0
-8800 1474 -2734 0
-8800 1474 -2732 0
-8800 1474 -2730 0
-8800 1474 -2728 0
-8800 1474 -2726 0
-8800 1474 -2724 0
-8800 1474 -2722 0
-8800 1474 -2720 0
-8800 1474 -2718 0
-8800 1474 -2716 0
-8800 1474 -2714 0
-8800 1474 -2712 0
-8800 1474 -2710 0
-8800 1474 -2708 0
-8800 1474 -2706 0
-8800 1474 -2704 0
-8800 1474 -2702 0
-8800 1474 -2700 0
-8800 1474 -2698 0
-8800 1474 -2696 0
-8800 1474 -2695 0
-8800 1476 -3109 0
-8800 1476 -2948 -3111 0
-8800 1476 -2946 -3113 0
-8800 1476 -2944 -3115 0
-8800 1476 -2942 -3117 0
-8800 1476 -2940 -3119 0
-8800 1476 -2938 -3121 0
-8800 1476 -2936 -3123 0
-8800 1476 -2934 -3125 0
-8800 1476 -2932 -3127 0
-8800 1476 -2930 -3129 0
-8800 1476 -2928 -3131 0
-8800 1476 -2926 -3133 0
-8800 1476 -2924 -3135 0
-8800 1476 -2922 -3137 0
-8800 1476 -2920 -3139 0
-8800 1476 -2918 -3141 0
-8800 1476 -2916 -3143 0
-8800 1476 -2914 -3145 0
-8800 1476 -2912 -3147 0
-8800 1476 -2910 -3149 0
-8800 1476 -2908 -3151 0
-8800 1476 -2906 -3153 0
-8800 1476 -2904 -3155 0
-8800 1476 -2902 -3157 0
-8800 1476 -2900 -3159 0
-8800 1476 -2898 -3161 0
-8800 1476 -2896 -3163 0
-8800 1476 -2894 -3165 0
-8800 1476 -2892 -3167 0
-8800 1476 -2890 -3169 0
-8800 1476 -2888 -3171 0
-8800 1476 -2886 -3173 0
-8800 1476 -2884 -3175 0
-8800 1476 -2882 -3177 0
-8800 1476 -2880 -3179 0
-8800 1476 -2878 -3181 0
-8800 1476 -2876 -3183 0
-8800 1476 -2874 -3185 0
-8800 1476 -2872 -3187 0
-8800 1476 -2870 -3189 0
-8800 1476 -2868 -3191 0
-8800 1476 -2866 -3193 0
-8800 1476 -2864 -3195 0
-8800 1476 -2862 -3197 0
-8800 1476 -2860 -3199 0
-8800 1476 -2858 -3201 0
-8800 1476 -2856 -3203 0
-8800 1476 -2854 0
-8800 1476 -2852 0
-8800 1476 -2850 0
-8800 1476 -2848 0
-8800 1476 -2846 0
-8800 1476 -2844 0
-8800 1476 -2842 0
-8800 1476 -2840 0
-8800 1476 -2838 0
-8800 1476 -2836 0
-8800 1476 -2834 0
-8800 1476 -2832 0
-8800 1476 -2830 0
-8800 1476 -2828 0
-8800 1476 -2826 0
-8800 1476 -2824 0
-8800 1476 -2822 0
-8800 1476 -2820 0
-8800 1476 -2818 0
-8800 1476 -2816 0
-8800 1476 -2814 0
-8800 1476 -2812 0
-8800 1476 -2810 0
-8800 1476 -2808 0
-8800 1476 -2806 0
-8800 1476 -2804 0
-8800 1476 -2802 0
-8800 1476 -2800 0
-8800 1476 -2798 0
-8800 1476 -2796 0
-8800 1476 -2794 0
-8800 1476 -2792 0
-8800 1476 -2790 0
-8800 1476 -2788 0
-8800 1476 -2786 0
-8800 1476 -2784 0
-8800 1476 -2782 0
-8800 1476 -2780 0
-8800 1476 -2778 0
-8800 1476 -2776 0
-8800 1476 -2774 0
-8800 1476 -2772 0
-8800 1476 -2770 0
-8800 1476 -2768 0
-8800 1476 -2766 0
-8800 1476 -2764 0
-8800 1476 -2762 0
-8800 1476 -2760 0
-8800 1476 -2758 0
-8800 1476 -2756 0
-8800 1476 -2754 0
-8800 1476 -2752 0
-8800 1476 -2750 0
-8800 1476 -2748 0
-8800 1476 -2746 0
-8800 1476 -2744 0
-8800 1476 -2742 0
-8800 1476 -2740 0
-8800 1476 -2738 0
-8800 1476 -2736 0
-8800 1476 -2734 0
-8800 1476 -2732 0
-8800 1476 -2730 0
-8800 1476 -2728 0
-8800 1476 -2726 0
-8800 1476 -2724 0
-8800 1476 -2722 0
-8800 1476 -2720 0
-8800 1476 -2718 0
-8800 1476 -2716 0
-8800 1476 -2714 0
-8800 1476 -2712 0
-8800 1476 -2710 0
-8800 1476 -2708 0
-8800 1476 -2706 0
-8800 1476 -2704 0
-8800 1476 -2702 0
-8800 1476 -2700 0
-8800 1476 -2698 0
-8800 1476 -2696 0
-8800 1476 -2695 0
-8800 1478 -3111 0
-8800 1478 -2948 -3113 0
-8800 1478 -2946 -3115 0
-8800 1478 -2944 -3117 0
-8800 1478 -2942 -3119 0
-8800 1478 -2940 -3121 0
-8800 1478 -2938 -3123 0
-8800 1478 -2936 -3125 0
-8800 1478 -2934 -3127 0
-8800 1478 -2932 -3129 0
-8800 1478 -2930 -3131 0
-8800 1478 -2928 -3133 0
-8800 1478 -2926 -3135 0
-8800 1478 -2924 -3137 0
-8800 1478 -2922 -3139 0
-8800 1478 -2920 -3141 0
-8800 1478 -2918 -3143 0
-8800 1478 -2916 -3145 0
-8800 1478 -2914 -3147 0
-8800 1478 -2912 -3149 0
-8800 1478 -2910 -3151 0
-8800 1478 -2908 -3153 0
-8800 1478 -2906 -3155 0
-8800 1478 -2904 -3157 0
-8800 1478 -2902 -3159 0
-8800 1478 -2900 -3161 0
-8800 1478 -2898 -3163 0
-8800 1478 -2896 -3165 0
-8800 1478 -2894 -3167 0
-8800 1478 -2892 -3169 0
-8800 1478 -2890 -3171 0
-8800 1478 -2888 -3173 0
-8800 1478 -2886 -3175 0
-8800 1478 -2884 -3177 0
-8800 1478 -2882 -3179 0
-8800 1478 -2880 -3181 0
-8800 1478 -2878 -3183 0
-8800 1478 -2876 -3185 0
-8800 1478 -2874 -3187 0
-8800 1478 -2872 -3189 0
-8800 1478 -2870 -3191 0
-8800 1478 -2868 -3193 0
-8800 1478 -2866 -3195 0
-8800 1478 -2864 -3197 0
-8800 1478 -2862 -3199 0
-8800 1478 -2860 -3201 0
-8800 1478 -2858 -3203 0
-8800 1478 -2856 0
-8800 1478 -2854 0
-8800 1478 -2852 0
-8800 1478 -2850 0
-8800 1478 -2848 0
-8800 1478 -2846 0
-8800 1478 -2844 0
-8800 1478 -2842 0
-8800 1478 -2840 0
-8800 1478 -2838 0
-8800 1478 -2836 0
-8800 1478 -2834 0
-8800 1478 -2832 0
-8800 1478 -2830 0
-8800 1478 -2828 0
-8800 1478 -2826 0
-8800 1478 -2824 0
-8800 1478 -2822 0
-8800 1478 -2820 0
-8800 1478 -2818 0
-8800 1478 -2816 0
-8800 1478 -2814 0
-8800 1478 -2812 0
-8800 1478 -2810 0
-8800 1478 -2808 0
-8800 1478 -2806 0
-8800 1478 -2804 0
-8800 1478 -2802 0
-8800 1478 -2800 0
-8800 1478 -2798 0
-8800 1478 -2796 0
-8800 1478 -2794 0
-8800 1478 -2792 0
-8800 1478 -2790 0
-8800 1478 -2788 0
-8800 1478 -2786 0
-8800 1478 -2784 0
-8800 1478 -2782 0
-8800 1478 -2780 0
-8800 1478 -2778 0
-8800 1478 -2776 0
-8800 1478 -2774 0
-8800 1478 -2772 0
-8800 1478 -2770 0
-8800 1478 -2768 0
-8800 1478 -2766 0
-8800 1478 -2764 0
-8800 1478 -2762 0
-8800 1478 -2760 0
-8800 1478 -2758 0
-8800 1478 -2756 0
-8800 1478 -2754 0
-8800 1478 -2752 0
-8800 1478 -2750 0
-8800 1478 -2748 0
-8800 1478 -2746 0
-8800 1478 -2744 0
-8800 1478 -2742 0
-8800 1478 -2740 0
-8800 1478 -2738 0
-8800 1478 -2736 0
-8800 1478 -2734 0
-8800 1478 -2732 0
-8800 1478 -2730 0
-8800 1478 -2728 0
-8800 1478 -2726 0
-8800 1478 -2724 0
-8800 1478 -2722 0
-8800 1478 -2720 0
-8800 1478 -2718 0
-8800 1478 -2716 0
-8800 1478 -2714 0
-8800 1478 -2712 0
-8800 1478 -2710 0
-8800 1478 -2708 0
-8800 1478 -2706 0
-8800 1478 -2704 0
-8800 1478 -2702 0
-8800 1478 -2700 0
-8800 1478 -2698 0
-8800 1478 -2696 0
-8800 1478 -2695 0
-8800 1480 -3113 0
-8800 1480 -2948 -3115 0
-8800 1480 -2946 -3117 0
-8800 1480 -2944 -3119 0
-8800 1480 -2942 -3121 0
-8800 1480 -2940 -3123 0
-8800 1480 -2938 -3125 0
-8800 1480 -2936 -3127 0
-8800 1480 -2934 -3129 0
-8800 1480 -2932 -3131 0
-8800 1480 -2930 -3133 0
-8800 1480 -2928 -3135 0
-8800 1480 -2926 -3137 0
-8800 1480 -2924 -3139 0
-8800 1480 -2922 -3141 0
-8800 1480 -2920 -3143 0
-8800 1480 -2918 -3145 0
-8800 1480 -2916 -3147 0
-8800 1480 -2914 -3149 0
-8800 1480 -2912 -3151 0
-8800 1480 -2910 -3153 0
-8800 1480 -2908 -3155 0
-8800 1480 -2906 -3157 0
-8800 1480 -2904 -3159 0
-8800 1480 -2902 -3161 0
-8800 1480 -2900 -3163 0
-8800 1480 -2898 -3165 0
-8800 1480 -2896 -3167 0
-8800 1480 -2894 -3169 0
-8800 1480 -2892 -3171 0
-8800 1480 -2890 -3173 0
-8800 1480 -2888 -3175 0
-8800 1480 -2886 -3177 0
-8800 1480 -2884 -3179 0
-8800 1480 -2882 -3181 0
-8800 1480 -2880 -3183 0
-8800 1480 -2878 -3185 0
-8800 1480 -2876 -3187 0
-8800 1480 -2874 -3189 0
-8800 1480 -2872 -3191 0
-8800 1480 -2870 -3193 0
-8800 1480 -2868 -3195 0
-8800 1480 -2866 -3197 0
-8800 1480 -2864 -3199 0
-8800 1480 -2862 -3201 0
-8800 1480 -2860 -3203 0
-8800 1480 -2858 0
-8800 1480 -2856 0
-8800 1480 -2854 0
-8800 1480 -2852 0
-8800 1480 -2850 0
-8800 1480 -2848 0
-8800 1480 -2846 0
-8800 1480 -2844 0
-8800 1480 -2842 0
-8800 1480 -2840 0
-8800 1480 -2838 0
-8800 1480 -2836 0
-8800 1480 -2834 0
-8800 1480 -2832 0
-8800 1480 -2830 0
-8800 1480 -2828 0
-8800 1480 -2826 0
-8800 1480 -2824 0
-8800 1480 -2822 0
-8800 1480 -2820 0
-8800 1480 -2818 0
-8800 1480 -2816 0
-8800 1480 -2814 0
-8800 1480 -2812 0
-8800 1480 -2810 0
-8800 1480 -2808 0
-8800 1480 -2806 0
-8800 1480 -2804 0
-8800 1480 -2802 0
-8800 1480 -2800 0
-8800 1480 -2798 0
-8800 1480 -2796 0
-8800 1480 -2794 0
-8800 1480 -2792 0
-8800 1480 -2790 0
-8800 1480 -2788 0
-8800 1480 -2786 0
-8800 1480 -2784 0
-8800 1480 -2782 0
-8800 1480 -2780 0
-8800 1480 -2778 0
-8800 1480 -2776 0
-8800 1480 -2774 0
-8800 1480 -2772 0
-8800 1480 -2770 0
-8800 1480 -2768 0
-8800 1480 -2766 0
-8800 1480 -2764 0
-8800 1480 -2762 0
-8800 1480 -2760 0
-8800 1480 -2758 0
-8800 1480 -2756 0
-8800 1480 -2754 0
-8800 1480 -2752 0
-8800 1480 -2750 0
-8800 1480 -2748 0
-8800 1480 -2746 0
-8800 1480 -2744 0
-8800 1480 -2742 0
-8800 1480 -2740 0
-8800 1480 -2738 0
-8800 1480 -2736 0
-8800 1480 -2734 0
-8800 1480 -2732 0
-8800 1480 -2730 0
-8800 1480 -2728 0
-8800 1480 -2726 0
-8800 1480 -2724 0
-8800 1480 -2722 0
-8800 1480 -2720 0
-8800 1480 -2718 0
-8800 1480 -2716 0
-8800 1480 -2714 0
-8800 1480 -2712 0
-8800 1480 -2710 0
-8800 1480 -2708 0
-8800 1480 -2706 0
-8800 1480 -2704 0
-8800 1480 -2702 0
-8800 1480 -2700 0
-8800 1480 -2698 0
-8800 1480 -2696 0
-8800 1480 -2695 0
-8800 1482 -3115 0
-8800 1482 -2948 -3117 0
-8800 1482 -2946 -3119 0
-8800 1482 -2944 -3121 0
-8800 1482 -2942 -3123 0
-8800 1482 -2940 -3125 0
-8800 1482 -2938 -3127 0
-8800 1482 -2936 -3129 0
-8800 1482 -2934 -3131 0
-8800 1482 -2932 -3133 0
-8800 1482 -2930 -3135 0
-8800 1482 -2928 -3137 0
-8800 1482 -2926 -3139 0
-8800 1482 -2924 -3141 0
-8800 1482 -2922 -3143 0
-8800 1482 -2920 -3145 0
-8800 1482 -2918 -3147 0
-8800 1482 -2916 -3149 0
-8800 1482 -2914 -3151 0
-8800 1482 -2912 -3153 0
-8800 1482 -2910 -3155 0
-8800 1482 -2908 -3157 0
-8800 1482 -2906 -3159 0
-8800 1482 -2904 -3161 0
-8800 1482 -2902 -3163 0
-8800 1482 -2900 -3165 0
-8800 1482 -2898 -3167 0
-8800 1482 -2896 -3169 0
-8800 1482 -2894 -3171 0
-8800 1482 -2892 -3173 0
-8800 1482 -2890 -3175 0
-8800 1482 -2888 -3177 0
-8800 1482 -2886 -3179 0
-8800 1482 -2884 -3181 0
-8800 1482 -2882 -3183 0
-8800 1482 -2880 -3185 0
-8800 1482 -2878 -3187 0
-8800 1482 -2876 -3189 0
-8800 1482 -2874 -3191 0
-8800 1482 -2872 -3193 0
-8800 1482 -2870 -3195 0
-8800 1482 -2868 -3197 0
-8800 1482 -2866 -3199 0
-8800 1482 -2864 -3201 0
-8800 1482 -2862 -3203 0
-8800 1482 -2860 0
-8800 1482 -2858 0
-8800 1482 -2856 0
-8800 1482 -2854 0
-8800 1482 -2852 0
-8800 1482 -2850 0
-8800 1482 -2848 0
-8800 1482 -2846 0
-8800 1482 -2844 0
-8800 1482 -2842 0
-8800 1482 -2840 0
-8800 1482 -2838 0
-8800 1482 -2836 0
-8800 1482 -2834 0
-8800 1482 -2832 0
-8800 1482 -2830 0
-8800 1482 -2828 0
-8800 1482 -2826 0
-8800 1482 -2824 0
-8800 1482 -2822 0
-8800 1482 -2820 0
-8800 1482 -2818 0
-8800 1482 -2816 0
-8800 1482 -2814 0
-8800 1482 -2812 0
-8800 1482 -2810 0
-8800 1482 -2808 0
-8800 1482 -2806 0
-8800 1482 -2804 0
-8800 1482 -2802 0
-8800 1482 -2800 0
-8800 1482 -2798 0
-8800 1482 -2796 0
-8800 1482 -2794 0
-8800 1482 -2792 0
-8800 1482 -2790 0
-8800 1482 -2788 0
-8800 1482 -2786 0
-8800 1482 -2784 0
-8800 1482 -2782 0
-8800 1482 -2780 0
-8800 1482 -2778 0
-8800 1482 -2776 0
-8800 1482 -2774 0
-8800 1482 -2772 0
-8800 1482 -2770 0
-8800 1482 -2768 0
-8800 1482 -2766 0
-8800 1482 -2764 0
-8800 1482 -2762 0
-8800 1482 -2760 0
-8800 1482 -2758 0
-8800 1482 -2756 0
-8800 1482 -2754 0
-8800 1482 -2752 0
-8800 1482 -2750 0
-8800 1482 -2748 0
-8800 1482 -2746 0
-8800 1482 -2744 0
-8800 1482 -2742 0
-8800 1482 -2740 0
-8800 1482 -2738 0
-8800 1482 -2736 0
-8800 1482 -2734 0
-8800 1482 -2732 0
-8800 1482 -2730 0
-8800 1482 -2728 0
-8800 1482 -2726 0
-8800 1482 -2724 0
-8800 1482 -2722 0
-8800 1482 -2720 0
-8800 1482 -2718 0
-8800 1482 -2716 0
-8800 1482 -2714 0
-8800 1482 -2712 0
-8800 1482 -2710 0
-8800 1482 -2708 0
-8800 1482 -2706 0
-8800 1482 -2704 0
-8800 1482 -2702 0
-8800 1482 -2700 0
-8800 1482 -2698 0
-8800 1482 -2696 0
-8800 1482 -2695 0
-8800 1484 -3117 0
-8800 1484 -2948 -3119 0
-8800 1484 -2946 -3121 0
-8800 1484 -2944 -3123 0
-8800 1484 -2942 -3125 0
-8800 1484 -2940 -3127 0
-8800 1484 -2938 -3129 0
-8800 1484 -2936 -3131 0
-8800 1484 -2934 -3133 0
-8800 1484 -2932 -3135 0
-8800 1484 -2930 -3137 0
-8800 1484 -2928 -3139 0
-8800 1484 -2926 -3141 0
-8800 1484 -2924 -3143 0
-8800 1484 -2922 -3145 0
-8800 1484 -2920 -3147 0
-8800 1484 -2918 -3149 0
-8800 1484 -2916 -3151 0
-8800 1484 -2914 -3153 0
-8800 1484 -2912 -3155 0
-8800 1484 -2910 -3157 0
-8800 1484 -2908 -3159 0
-8800 1484 -2906 -3161 0
-8800 1484 -2904 -3163 0
-8800 1484 -2902 -3165 0
-8800 1484 -2900 -3167 0
-8800 1484 -2898 -3169 0
-8800 1484 -2896 -3171 0
-8800 1484 -2894 -3173 0
-8800 1484 -2892 -3175 0
-8800 1484 -2890 -3177 0
-8800 1484 -2888 -3179 0
-8800 1484 -2886 -3181 0
-8800 1484 -2884 -3183 0
-8800 1484 -2882 -3185 0
-8800 1484 -2880 -3187 0
-8800 1484 -2878 -3189 0
-8800 1484 -2876 -3191 0
-8800 1484 -2874 -3193 0
-8800 1484 -2872 -3195 0
-8800 1484 -2870 -3197 0
-8800 1484 -2868 -3199 0
-8800 1484 -2866 -3201 0
-8800 1484 -2864 -3203 0
-8800 1484 -2862 0
-8800 1484 -2860 0
-8800 1484 -2858 0
-8800 1484 -2856 0
-8800 1484 -2854 0
-8800 1484 -2852 0
-8800 1484 -2850 0
-8800 1484 -2848 0
-8800 1484 -2846 0
-8800 1484 -2844 0
-8800 1484 -2842 0
-8800 1484 -2840 0
-8800 1484 -2838 0
-8800 1484 -2836 0
-8800 1484 -2834 0
-8800 1484 -2832 0
-8800 1484 -2830 0
-8800 1484 -2828 0
-8800 1484 -2826 0
-8800 1484 -2824 0
-8800 1484 -2822 0
-8800 1484 -2820 0
-8800 1484 -2818 0
-8800 1484 -2816 0
-8800 1484 -2814 0
-8800 1484 -2812 0
-8800 1484 -2810 0
-8800 1484 -2808 0
-8800 1484 -2806 0
-8800 1484 -2804 0
-8800 1484 -2802 0
-8800 1484 -2800 0
-8800 1484 -2798 0
-8800 1484 -2796 0
-8800 1484 -2794 0
-8800 1484 -2792 0
-8800 1484 -2790 0
-8800 1484 -2788 0
-8800 1484 -2786 0
-8800 1484 -2784 0
-8800 1484 -2782 0
-8800 1484 -2780 0
-8800 1484 -2778 0
-8800 1484 -2776 0
-8800 1484 -2774 0
-8800 1484 -2772 0
-8800 1484 -2770 0
-8800 1484 -2768 0
-8800 1484 -2766 0
-8800 1484 -2764 0
-8800 1484 -2762 0
-8800 1484 -2760 0
-8800 1484 -2758 0
-8800 1484 -2756 0
-8800 1484 -2754 0
-8800 1484 -2752 0
-8800 1484 -2750 0
-8800 1484 -2748 0
-8800 1484 -2746 0
-8800 1484 -2744 0
-8800 1484 -2742 0
-8800 1484 -2740 0
-8800 1484 -2738 0
-8800 1484 -2736 0
-8800 1484 -2734 0
-8800 1484 -2732 0
-8800 1484 -2730 0
-8800 1484 -2728 0
-8800 1484 -2726 0
-8800 1484 -2724 0
-8800 1484 -2722 0
-8800 1484 -2720 0
-8800 1484 -2718 0
-8800 1484 -2716 0
-8800 1484 -2714 0
-8800 1484 -2712 0
-8800 1484 -2710 0
-8800 1484 -2708 0
-8800 1484 -2706 0
-8800 1484 -2704 0
-8800 1484 -2702 0
-8800 1484 -2700 0
-8800 1484 -2698 0
-8800 1484 -2696 0
-8800 1484 -2695 0
-8800 1486 -3119 0
-8800 1486 -2948 -3121 0
-8800 1486 -2946 -3123 0
-8800 1486 -2944 -3125 0
-8800 1486 -2942 -3127 0
-8800 1486 -2940 -3129 0
-8800 1486 -2938 -3131 0
-8800 1486 -2936 -3133 0
-8800 1486 -2934 -3135 0
-8800 1486 -2932 -3137 0
-8800 1486 -2930 -3139 0
-8800 1486 -2928 -3141 0
-8800 1486 -2926 -3143 0
-8800 1486 -2924 -3145 0
-8800 1486 -2922 -3147 0
-8800 1486 -2920 -3149 0
-8800 1486 -2918 -3151 0
-8800 1486 -2916 -3153 0
-8800 1486 -2914 -3155 0
-8800 1486 -2912 -3157 0
-8800 1486 -2910 -3159 0
-8800 1486 -2908 -3161 0
-8800 1486 -2906 -3163 0
-8800 1486 -2904 -3165 0
-8800 1486 -2902 -3167 0
-8800 1486 -2900 -3169 0
-8800 1486 -2898 -3171 0
-8800 1486 -2896 -3173 0
-8800 1486 -2894 -3175 0
-8800 1486 -2892 -3177 0
-8800 1486 -2890 -3179 0
-8800 1486 -2888 -3181 0
-8800 1486 -2886 -3183 0
-8800 1486 -2884 -3185 0
-8800 1486 -2882 -3187 0
-8800 1486 -2880 -3189 0
-8800 1486 -2878 -3191 0
-8800 1486 -2876 -3193 0
-8800 1486 -2874 -3195 0
-8800 1486 -2872 -3197 0
-8800 1486 -2870 -3199 0
-8800 1486 -2868 -3201 0
-8800 1486 -2866 -3203 0
-8800 1486 -2864 0
-8800 1486 -2862 0
-8800 1486 -2860 0
-8800 1486 -2858 0
-8800 1486 -2856 0
-8800 1486 -2854 0
-8800 1486 -2852 0
-8800 1486 -2850 0
-8800 1486 -2848 0
-8800 1486 -2846 0
-8800 1486 -2844 0
-8800 1486 -2842 0
-8800 1486 -2840 0
-8800 1486 -2838 0
-8800 1486 -2836 0
-8800 1486 -2834 0
-8800 1486 -2832 0
-8800 1486 -2830 0
-8800 1486 -2828 0
-8800 1486 -2826 0
-8800 1486 -2824 0
-8800 1486 -2822 0
-8800 1486 -2820 0
-8800 1486 -2818 0
-8800 1486 -2816 0
-8800 1486 -2814 0
-8800 1486 -2812 0
-8800 1486 -2810 0
-8800 1486 -2808 0
-8800 1486 -2806 0
-8800 1486 -2804 0
-8800 1486 -2802 0
-8800 1486 -2800 0
-8800 1486 -2798 0
-8800 1486 -2796 0
-8800 1486 -2794 0
-8800 1486 -2792 0
-8800 1486 -2790 0
-8800 1486 -2788 0
-8800 1486 -2786 0
-8800 1486 -2784 0
-8800 1486 -2782 0
-8800 1486 -2780 0
-8800 1486 -2778 0
-8800 1486 -2776 0
-8800 1486 -2774 0
-8800 1486 -2772 0
-8800 1486 -2770 0
-8800 1486 -2768 0
-8800 1486 -2766 0
-8800 1486 -2764 0
-8800 1486 -2762 0
-8800 1486 -2760 0
-8800 1486 -2758 0
-8800 1486 -2756 0
-8800 1486 -2754 0
-8800 1486 -2752 0
-8800 1486 -2750 0
-8800 1486 -2748 0
-8800 1486 -2746 0
-8800 1486 -2744 0
-8800 1486 -2742 0
-8800 1486 -2740 0
-8800 1486 -2738 0
-8800 1486 -2736 0
-8800 1486 -2734 0
-8800 1486 -2732 0
-8800 1486 -2730 0
-8800 1486 -2728 0
-8800 1486 -2726 0
-8800 1486 -2724 0
-8800 1486 -2722 0
-8800 1486 -2720 0
-8800 1486 -2718 0
-8800 1486 -2716 0
-8800 1486 -2714 0
-8800 1486 -2712 0
-8800 1486 -2710 0
-8800 1486 -2708 0
-8800 1486 -2706 0
-8800 1486 -2704 0
-8800 1486 -2702 0
-8800 1486 -2700 0
-8800 1486 -2698 0
-8800 1486 -2696 0
-8800 1486 -2695 0
-8800 1488 -3121 0
-8800 1488 -2948 -3123 0
-8800 1488 -2946 -3125 0
-8800 1488 -2944 -3127 0
-8800 1488 -2942 -3129 0
-8800 1488 -2940 -3131 0
-8800 1488 -2938 -3133 0
-8800 1488 -2936 -3135 0
-8800 1488 -2934 -3137 0
-8800 1488 -2932 -3139 0
-8800 1488 -2930 -3141 0
-8800 1488 -2928 -3143 0
-8800 1488 -2926 -3145 0
-8800 1488 -2924 -3147 0
-8800 1488 -2922 -3149 0
-8800 1488 -2920 -3151 0
-8800 1488 -2918 -3153 0
-8800 1488 -2916 -3155 0
-8800 1488 -2914 -3157 0
-8800 1488 -2912 -3159 0
-8800 1488 -2910 -3161 0
-8800 1488 -2908 -3163 0
-8800 1488 -2906 -3165 0
-8800 1488 -2904 -3167 0
-8800 1488 -2902 -3169 0
-8800 1488 -2900 -3171 0
-8800 1488 -2898 -3173 0
-8800 1488 -2896 -3175 0
-8800 1488 -2894 -3177 0
-8800 1488 -2892 -3179 0
-8800 1488 -2890 -3181 0
-8800 1488 -2888 -3183 0
-8800 1488 -2886 -3185 0
-8800 1488 -2884 -3187 0
-8800 1488 -2882 -3189 0
-8800 1488 -2880 -3191 0
-8800 1488 -2878 -3193 0
-8800 1488 -2876 -3195 0
-8800 1488 -2874 -3197 0
-8800 1488 -2872 -3199 0
-8800 1488 -2870 -3201 0
-8800 1488 -2868 -3203 0
-8800 1488 -2866 0
-8800 1488 -2864 0
-8800 1488 -2862 0
-8800 1488 -2860 0
-8800 1488 -2858 0
-8800 1488 -2856 0
-8800 1488 -2854 0
-8800 1488 -2852 0
-8800 1488 -2850 0
-8800 1488 -2848 0
-8800 1488 -2846 0
-8800 1488 -2844 0
-8800 1488 -2842 0
-8800 1488 -2840 0
-8800 1488 -2838 0
-8800 1488 -2836 0
-8800 1488 -2834 0
-8800 1488 -2832 0
-8800 1488 -2830 0
-8800 1488 -2828 0
-8800 1488 -2826 0
-8800 1488 -2824 0
-8800 1488 -2822 0
-8800 1488 -2820 0
-8800 1488 -2818 0
-8800 1488 -2816 0
-8800 1488 -2814 0
-8800 1488 -2812 0
-8800 1488 -2810 0
-8800 1488 -2808 0
-8800 1488 -2806 0
-8800 1488 -2804 0
-8800 1488 -2802 0
-8800 1488 -2800 0
-8800 1488 -2798 0
-8800 1488 -2796 0
-8800 1488 -2794 0
-8800 1488 -2792 0
-8800 1488 -2790 0
-8800 1488 -2788 0
-8800 1488 -2786 0
-8800 1488 -2784 0
-8800 1488 -2782 0
-8800 1488 -2780 0
-8800 1488 -2778 0
-8800 1488 -2776 0
-8800 1488 -2774 0
-8800 1488 -2772 0
-8800 1488 -2770 0
-8800 1488 -2768 0
-8800 1488 -2766 0
-8800 1488 -2764 0
-8800 1488 -2762 0
-8800 1488 -2760 0
-8800 1488 -2758 0
-8800 1488 -2756 0
-8800 1488 -2754 0
-8800 1488 -2752 0
-8800 1488 -2750 0
-8800 1488 -2748 0
-8800 1488 -2746 0
-8800 1488 -2744 0
-8800 1488 -2742 0
-8800 1488 -2740 0
-8800 1488 -2738 0
-8800 1488 -2736 0
-8800 1488 -2734 0
-8800 1488 -2732 0
-8800 1488 -2730 0
-8800 1488 -2728 0
-8800 1488 -2726 0
-8800 1488 -2724 0
-8800 1488 -2722 0
-8800 1488 -2720 0
-8800 1488 -2718 0
-8800 1488 -2716 0
-8800 1488 -2714 0
-8800 1488 -2712 0
-8800 1488 -2710 0
-8800 1488 -2708 0
-8800 1488 -2706 0
-8800 1488 -2704 0
-8800 1488 -2702 0
-8800 1488 -2700 0
-8800 1488 -2698 0
-8800 1488 -2696 0
-8800 1488 -2695 0
-8800 1490 -3123 0
-8800 1490 -2948 -3125 0
-8800 1490 -2946 -3127 0
-8800 1490 -2944 -3129 0
-8800 1490 -2942 -3131 0
-8800 1490 -2940 -3133 0
-8800 1490 -2938 -3135 0
-8800 1490 -2936 -3137 0
-8800 1490 -2934 -3139 0
-8800 1490 -2932 -3141 0
-8800 1490 -2930 -3143 0
-8800 1490 -2928 -3145 0
-8800 1490 -2926 -3147 0
-8800 1490 -2924 -3149 0
-8800 1490 -2922 -3151 0
-8800 1490 -2920 -3153 0
-8800 1490 -2918 -3155 0
-8800 1490 -2916 -3157 0
-8800 1490 -2914 -3159 0
-8800 1490 -2912 -3161 0
-8800 1490 -2910 -3163 0
-8800 1490 -2908 -3165 0
-8800 1490 -2906 -3167 0
-8800 1490 -2904 -3169 0
-8800 1490 -2902 -3171 0
-8800 1490 -2900 -3173 0
-8800 1490 -2898 -3175 0
-8800 1490 -2896 -3177 0
-8800 1490 -2894 -3179 0
-8800 1490 -2892 -3181 0
-8800 1490 -2890 -3183 0
-8800 1490 -2888 -3185 0
-8800 1490 -2886 -3187 0
-8800 1490 -2884 -3189 0
-8800 1490 -2882 -3191 0
-8800 1490 -2880 -3193 0
-8800 1490 -2878 -3195 0
-8800 1490 -2876 -3197 0
-8800 1490 -2874 -3199 0
-8800 1490 -2872 -3201 0
-8800 1490 -2870 -3203 0
-8800 1490 -2868 0
-8800 1490 -2866 0
-8800 1490 -2864 0
-8800 1490 -2862 0
-8800 1490 -2860 0
-8800 1490 -2858 0
-8800 1490 -2856 0
-8800 1490 -2854 0
-8800 1490 -2852 0
-8800 1490 -2850 0
-8800 1490 -2848 0
-8800 1490 -2846 0
-8800 1490 -2844 0
-8800 1490 -2842 0
-8800 1490 -2840 0
-8800 1490 -2838 0
-8800 1490 -2836 0
-8800 1490 -2834 0
-8800 1490 -2832 0
-8800 1490 -2830 0
-8800 1490 -2828 0
-8800 1490 -2826 0
-8800 1490 -2824 0
-8800 1490 -2822 0
-8800 1490 -2820 0
-8800 1490 -2818 0
-8800 1490 -2816 0
-8800 1490 -2814 0
-8800 1490 -2812 0
-8800 1490 -2810 0
-8800 1490 -2808 0
-8800 1490 -2806 0
-8800 1490 -2804 0
-8800 1490 -2802 0
-8800 1490 -2800 0
-8800 1490 -2798 0
-8800 1490 -2796 0
-8800 1490 -2794 0
-8800 1490 -2792 0
-8800 1490 -2790 0
-8800 1490 -2788 0
-8800 1490 -2786 0
-8800 1490 -2784 0
-8800 1490 -2782 0
-8800 1490 -2780 0
-8800 1490 -2778 0
-8800 1490 -2776 0
-8800 1490 -2774 0
-8800 1490 -2772 0
-8800 1490 -2770 0
-8800 1490 -2768 0
-8800 1490 -2766 0
-8800 1490 -2764 0
-8800 1490 -2762 0
-8800 1490 -2760 0
-8800 1490 -2758 0
-8800 1490 -2756 0
-8800 1490 -2754 0
-8800 1490 -2752 0
-8800 1490 -2750 0
-8800 1490 -2748 0
-8800 1490 -2746 0
-8800 1490 -2744 0
-8800 1490 -2742 0
-8800 1490 -2740 0
-8800 1490 -2738 0
-8800 1490 -2736 0
-8800 1490 -2734 0
-8800 1490 -2732 0
-8800 1490 -2730 0
-8800 1490 -2728 0
-8800 1490 -2726 0
-8800 1490 -2724 0
-8800 1490 -2722 0
-8800 1490 -2720 0
-8800 1490 -2718 0
-8800 1490 -2716 0
-8800 1490 -2714 0
-8800 1490 -2712 0
-8800 1490 -2710 0
-8800 1490 -2708 0
-8800 1490 -2706 0
-8800 1490 -2704 0
-8800 1490 -2702 0
-8800 1490 -2700 0
-8800 1490 -2698 0
-8800 1490 -2696 0
-8800 1490 -2695 0
-8800 1492 -3125 0
-8800 1492 -2948 -3127 0
-8800 1492 -2946 -3129 0
-8800 1492 -2944 -3131 0
-8800 1492 -2942 -3133 0
-8800 1492 -2940 -3135 0
-8800 1492 -2938 -3137 0
-8800 1492 -2936 -3139 0
-8800 1492 -2934 -3141 0
-8800 1492 -2932 -3143 0
-8800 1492 -2930 -3145 0
-8800 1492 -2928 -3147 0
-8800 1492 -2926 -3149 0
-8800 1492 -2924 -3151 0
-8800 1492 -2922 -3153 0
-8800 1492 -2920 -3155 0
-8800 1492 -2918 -3157 0
-8800 1492 -2916 -3159 0
-8800 1492 -2914 -3161 0
-8800 1492 -2912 -3163 0
-8800 1492 -2910 -3165 0
-8800 1492 -2908 -3167 0
-8800 1492 -2906 -3169 0
-8800 1492 -2904 -3171 0
-8800 1492 -2902 -3173 0
-8800 1492 -2900 -3175 0
-8800 1492 -2898 -3177 0
-8800 1492 -2896 -3179 0
-8800 1492 -2894 -3181 0
-8800 1492 -2892 -3183 0
-8800 1492 -2890 -3185 0
-8800 1492 -2888 -3187 0
-8800 1492 -2886 -3189 0
-8800 1492 -2884 -3191 0
-8800 1492 -2882 -3193 0
-8800 1492 -2880 -3195 0
-8800 1492 -2878 -3197 0
-8800 1492 -2876 -3199 0
-8800 1492 -2874 -3201 0
-8800 1492 -2872 -3203 0
-8800 1492 -2870 0
-8800 1492 -2868 0
-8800 1492 -2866 0
-8800 1492 -2864 0
-8800 1492 -2862 0
-8800 1492 -2860 0
-8800 1492 -2858 0
-8800 1492 -2856 0
-8800 1492 -2854 0
-8800 1492 -2852 0
-8800 1492 -2850 0
-8800 1492 -2848 0
-8800 1492 -2846 0
-8800 1492 -2844 0
-8800 1492 -2842 0
-8800 1492 -2840 0
-8800 1492 -2838 0
-8800 1492 -2836 0
-8800 1492 -2834 0
-8800 1492 -2832 0
-8800 1492 -2830 0
-8800 1492 -2828 0
-8800 1492 -2826 0
-8800 1492 -2824 0
-8800 1492 -2822 0
-8800 1492 -2820 0
-8800 1492 -2818 0
-8800 1492 -2816 0
-8800 1492 -2814 0
-8800 1492 -2812 0
-8800 1492 -2810 0
-8800 1492 -2808 0
-8800 1492 -2806 0
-8800 1492 -2804 0
-8800 1492 -2802 0
-8800 1492 -2800 0
-8800 1492 -2798 0
-8800 1492 -2796 0
-8800 1492 -2794 0
-8800 1492 -2792 0
-8800 1492 -2790 0
-8800 1492 -2788 0
-8800 1492 -2786 0
-8800 1492 -2784 0
-8800 1492 -2782 0
-8800 1492 -2780 0
-8800 1492 -2778 0
-8800 1492 -2776 0
-8800 1492 -2774 0
-8800 1492 -2772 0
-8800 1492 -2770 0
-8800 1492 -2768 0
-8800 1492 -2766 0
-8800 1492 -2764 0
-8800 1492 -2762 0
-8800 1492 -2760 0
-8800 1492 -2758 0
-8800 1492 -2756 0
-8800 1492 -2754 0
-8800 1492 -2752 0
-8800 1492 -2750 0
-8800 1492 -2748 0
-8800 1492 -2746 0
-8800 1492 -2744 0
-8800 1492 -2742 0
-8800 1492 -2740 0
-8800 1492 -2738 0
-8800 1492 -2736 0
-8800 1492 -2734 0
-8800 1492 -2732 0
-8800 1492 -2730 0
-8800 1492 -2728 0
-8800 1492 -2726 0
-8800 1492 -2724 0
-8800 1492 -2722 0
-8800 1492 -2720 0
-8800 1492 -2718 0
-8800 1492 -2716 0
-8800 1492 -2714 0
-8800 1492 -2712 0
-8800 1492 -2710 0
-8800 1492 -2708 0
-8800 1492 -2706 0
-8800 1492 -2704 0
-8800 1492 -2702 0
-8800 1492 -2700 0
-8800 1492 -2698 0
-8800 1492 -2696 0
-8800 1492 -2695 0
-8800 1494 -3127 0
-8800 1494 -2948 -3129 0
-8800 1494 -2946 -3131 0
-8800 1494 -2944 -3133 0
-8800 1494 -2942 -3135 0
-8800 1494 -2940 -3137 0
-8800 1494 -2938 -3139 0
-8800 1494 -2936 -3141 0
-8800 1494 -2934 -3143 0
-8800 1494 -2932 -3145 0
-8800 1494 -2930 -3147 0
-8800 1494 -2928 -3149 0
-8800 1494 -2926 -3151 0
-8800 1494 -2924 -3153 0
-8800 1494 -2922 -3155 0
-8800 1494 -2920 -3157 0
-8800 1494 -2918 -3159 0
-8800 1494 -2916 -3161 0
-8800 1494 -2914 -3163 0
-8800 1494 -2912 -3165 0
-8800 1494 -2910 -3167 0
-8800 1494 -2908 -3169 0
-8800 1494 -2906 -3171 0
-8800 1494 -2904 -3173 0
-8800 1494 -2902 -3175 0
-8800 1494 -2900 -3177 0
-8800 1494 -2898 -3179 0
-8800 1494 -2896 -3181 0
-8800 1494 -2894 -3183 0
-8800 1494 -2892 -3185 0
-8800 1494 -2890 -3187 0
-8800 1494 -2888 -3189 0
-8800 1494 -2886 -3191 0
-8800 1494 -2884 -3193 0
-8800 1494 -2882 -3195 0
-8800 1494 -2880 -3197 0
-8800 1494 -2878 -3199 0
-8800 1494 -2876 -3201 0
-8800 1494 -2874 -3203 0
-8800 1494 -2872 0
-8800 1494 -2870 0
-8800 1494 -2868 0
-8800 1494 -2866 0
-8800 1494 -2864 0
-8800 1494 -2862 0
-8800 1494 -2860 0
-8800 1494 -2858 0
-8800 1494 -2856 0
-8800 1494 -2854 0
-8800 1494 -2852 0
-8800 1494 -2850 0
-8800 1494 -2848 0
-8800 1494 -2846 0
-8800 1494 -2844 0
-8800 1494 -2842 0
-8800 1494 -2840 0
-8800 1494 -2838 0
-8800 1494 -2836 0
-8800 1494 -2834 0
-8800 1494 -2832 0
-8800 1494 -2830 0
-8800 1494 -2828 0
-8800 1494 -2826 0
-8800 1494 -2824 0
-8800 1494 -2822 0
-8800 1494 -2820 0
-8800 1494 -2818 0
-8800 1494 -2816 0
-8800 1494 -2814 0
-8800 1494 -2812 0
-8800 1494 -2810 0
-8800 1494 -2808 0
-8800 1494 -2806 0
-8800 1494 -2804 0
-8800 1494 -2802 0
-8800 1494 -2800 0
-8800 1494 -2798 0
-8800 1494 -2796 0
-8800 1494 -2794 0
-8800 1494 -2792 0
-8800 1494 -2790 0
-8800 1494 -2788 0
-8800 1494 -2786 0
-8800 1494 -2784 0
-8800 1494 -2782 0
-8800 1494 -2780 0
-8800 1494 -2778 0
-8800 1494 -2776 0
-8800 1494 -2774 0
-8800 1494 -2772 0
-8800 1494 -2770 0
-8800 1494 -2768 0
-8800 1494 -2766 0
-8800 1494 -2764 0
-8800 1494 -2762 0
-8800 1494 -2760 0
-8800 1494 -2758 0
-8800 1494 -2756 0
-8800 1494 -2754 0
-8800 1494 -2752 0
-8800 1494 -2750 0
-8800 1494 -2748 0
-8800 1494 -2746 0
-8800 1494 -2744 0
-8800 1494 -2742 0
-8800 1494 -2740 0
-8800 1494 -2738 0
-8800 1494 -2736 0
-8800 1494 -2734 0
-8800 1494 -2732 0
-8800 1494 -2730 0
-8800 1494 -2728 0
-8800 1494 -2726 0
-8800 1494 -2724 0
-8800 1494 -2722 0
-8800 1494 -2720 0
-8800 1494 -2718 0
-8800 1494 -2716 0
-8800 1494 -2714 0
-8800 1494 -2712 0
-8800 1494 -2710 0
-8800 1494 -2708 0
-8800 1494 -2706 0
-8800 1494 -2704 0
-8800 1494 -2702 0
-8800 1494 -2700 0
-8800 1494 -2698 0
-8800 1494 -2696 0
-8800 1494 -2695 0
-8800 1496 -3129 0
-8800 1496 -2948 -3131 0
-8800 1496 -2946 -3133 0
-8800 1496 -2944 -3135 0
-8800 1496 -2942 -3137 0
-8800 1496 -2940 -3139 0
-8800 1496 -2938 -3141 0
-8800 1496 -2936 -3143 0
-8800 1496 -2934 -3145 0
-8800 1496 -2932 -3147 0
-8800 1496 -2930 -3149 0
-8800 1496 -2928 -3151 0
-8800 1496 -2926 -3153 0
-8800 1496 -2924 -3155 0
-8800 1496 -2922 -3157 0
-8800 1496 -2920 -3159 0
-8800 1496 -2918 -3161 0
-8800 1496 -2916 -3163 0
-8800 1496 -2914 -3165 0
-8800 1496 -2912 -3167 0
-8800 1496 -2910 -3169 0
-8800 1496 -2908 -3171 0
-8800 1496 -2906 -3173 0
-8800 1496 -2904 -3175 0
-8800 1496 -2902 -3177 0
-8800 1496 -2900 -3179 0
-8800 1496 -2898 -3181 0
-8800 1496 -2896 -3183 0
-8800 1496 -2894 -3185 0
-8800 1496 -2892 -3187 0
-8800 1496 -2890 -3189 0
-8800 1496 -2888 -3191 0
-8800 1496 -2886 -3193 0
-8800 1496 -2884 -3195 0
-8800 1496 -2882 -3197 0
-8800 1496 -2880 -3199 0
-8800 1496 -2878 -3201 0
-8800 1496 -2876 -3203 0
-8800 1496 -2874 0
-8800 1496 -2872 0
-8800 1496 -2870 0
-8800 1496 -2868 0
-8800 1496 -2866 0
-8800 1496 -2864 0
-8800 1496 -2862 0
-8800 1496 -2860 0
-8800 1496 -2858 0
-8800 1496 -2856 0
-8800 1496 -2854 0
-8800 1496 -2852 0
-8800 1496 -2850 0
-8800 1496 -2848 0
-8800 1496 -2846 0
-8800 1496 -2844 0
-8800 1496 -2842 0
-8800 1496 -2840 0
-8800 1496 -2838 0
-8800 1496 -2836 0
-8800 1496 -2834 0
-8800 1496 -2832 0
-8800 1496 -2830 0
-8800 1496 -2828 0
-8800 1496 -2826 0
-8800 1496 -2824 0
-8800 1496 -2822 0
-8800 1496 -2820 0
-8800 1496 -2818 0
-8800 1496 -2816 0
-8800 1496 -2814 0
-8800 1496 -2812 0
-8800 1496 -2810 0
-8800 1496 -2808 0
-8800 1496 -2806 0
-8800 1496 -2804 0
-8800 1496 -2802 0
-8800 1496 -2800 0
-8800 1496 -2798 0
-8800 1496 -2796 0
-8800 1496 -2794 0
-8800 1496 -2792 0
-8800 1496 -2790 0
-8800 1496 -2788 0
-8800 1496 -2786 0
-8800 1496 -2784 0
-8800 1496 -2782 0
-8800 1496 -2780 0
-8800 1496 -2778 0
-8800 1496 -2776 0
-8800 1496 -2774 0
-8800 1496 -2772 0
-8800 1496 -2770 0
-8800 1496 -2768 0
-8800 1496 -2766 0
-8800 1496 -2764 0
-8800 1496 -2762 0
-8800 1496 -2760 0
-8800 1496 -2758 0
-8800 1496 -2756 0
-8800 1496 -2754 0
-8800 1496 -2752 0
-8800 1496 -2750 0
-8800 1496 -2748 0
-8800 1496 -2746 0
-8800 1496 -2744 0
-8800 1496 -2742 0
-8800 1496 -2740 0
-8800 1496 -2738 0
-8800 1496 -2736 0
-8800 1496 -2734 0
-8800 1496 -2732 0
-8800 1496 -2730 0
-8800 1496 -2728 0
-8800 1496 -2726 0
-8800 1496 -2724 0
-8800 1496 -2722 0
-8800 1496 -2720 0
-8800 1496 -2718 0
-8800 1496 -2716 0
-8800 1496 -2714 0
-8800 1496 -2712 0
-8800 1496 -2710 0
-8800 1496 -2708 0
-8800 1496 -2706 0
-8800 1496 -2704 0
-8800 1496 -2702 0
-8800 1496 -2700 0
-8800 1496 -2698 0
-8800 1496 -2696 0
-8800 1496 -2695 0
-8800 1498 -3131 0
-8800 1498 -2948 -3133 0
-8800 1498 -2946 -3135 0
-8800 1498 -2944 -3137 0
-8800 1498 -2942 -3139 0
-8800 1498 -2940 -3141 0
-8800 1498 -2938 -3143 0
-8800 1498 -2936 -3145 0
-8800 1498 -2934 -3147 0
-8800 1498 -2932 -3149 0
-8800 1498 -2930 -3151 0
-8800 1498 -2928 -3153 0
-8800 1498 -2926 -3155 0
-8800 1498 -2924 -3157 0
-8800 1498 -2922 -3159 0
-8800 1498 -2920 -3161 0
-8800 1498 -2918 -3163 0
-8800 1498 -2916 -3165 0
-8800 1498 -2914 -3167 0
-8800 1498 -2912 -3169 0
-8800 1498 -2910 -3171 0
-8800 1498 -2908 -3173 0
-8800 1498 -2906 -3175 0
-8800 1498 -2904 -3177 0
-8800 1498 -2902 -3179 0
-8800 1498 -2900 -3181 0
-8800 1498 -2898 -3183 0
-8800 1498 -2896 -3185 0
-8800 1498 -2894 -3187 0
-8800 1498 -2892 -3189 0
-8800 1498 -2890 -3191 0
-8800 1498 -2888 -3193 0
-8800 1498 -2886 -3195 0
-8800 1498 -2884 -3197 0
-8800 1498 -2882 -3199 0
-8800 1498 -2880 -3201 0
-8800 1498 -2878 -3203 0
-8800 1498 -2876 0
-8800 1498 -2874 0
-8800 1498 -2872 0
-8800 1498 -2870 0
-8800 1498 -2868 0
-8800 1498 -2866 0
-8800 1498 -2864 0
-8800 1498 -2862 0
-8800 1498 -2860 0
-8800 1498 -2858 0
-8800 1498 -2856 0
-8800 1498 -2854 0
-8800 1498 -2852 0
-8800 1498 -2850 0
-8800 1498 -2848 0
-8800 1498 -2846 0
-8800 1498 -2844 0
-8800 1498 -2842 0
-8800 1498 -2840 0
-8800 1498 -2838 0
-8800 1498 -2836 0
-8800 1498 -2834 0
-8800 1498 -2832 0
-8800 1498 -2830 0
-8800 1498 -2828 0
-8800 1498 -2826 0
-8800 1498 -2824 0
-8800 1498 -2822 0
-8800 1498 -2820 0
-8800 1498 -2818 0
-8800 1498 -2816 0
-8800 1498 -2814 0
-8800 1498 -2812 0
-8800 1498 -2810 0
-8800 1498 -2808 0
-8800 1498 -2806 0
-8800 1498 -2804 0
-8800 1498 -2802 0
-8800 1498 -2800 0
-8800 1498 -2798 0
-8800 1498 -2796 0
-8800 1498 -2794 0
-8800 1498 -2792 0
-8800 1498 -2790 0
-8800 1498 -2788 0
-8800 1498 -2786 0
-8800 1498 -2784 0
-8800 1498 -2782 0
-8800 1498 -2780 0
-8800 1498 -2778 0
-8800 1498 -2776 0
-8800 1498 -2774 0
-8800 1498 -2772 0
-8800 1498 -2770 0
-8800 1498 -2768 0
-8800 1498 -2766 0
-8800 1498 -2764 0
-8800 1498 -2762 0
-8800 1498 -2760 0
-8800 1498 -2758 0
-8800 1498 -2756 0
-8800 1498 -2754 0
-8800 1498 -2752 0
-8800 1498 -2750 0
-8800 1498 -2748 0
-8800 1498 -2746 0
-8800 1498 -2744 0
-8800 1498 -2742 0
-8800 1498 -2740 0
-8800 1498 -2738 0
-8800 1498 -2736 0
-8800 1498 -2734 0
-8800 1498 -2732 0
-8800 1498 -2730 0
-8800 1498 -2728 0
-8800 1498 -2726 0
-8800 1498 -2724 0
-8800 1498 -2722 0
-8800 1498 -2720 0
-8800 1498 -2718 0
-8800 1498 -2716 0
-8800 1498 -2714 0
-8800 1498 -2712 0
-8800 1498 -2710 0
-8800 1498 -2708 0
-8800 1498 -2706 0
-8800 1498 -2704 0
-8800 1498 -2702 0
-8800 1498 -2700 0
-8800 1498 -2698 0
-8800 1498 -2696 0
-8800 1498 -2695 0
-8800 1500 -3133 0
-8800 1500 -2948 -3135 0
-8800 1500 -2946 -3137 0
-8800 1500 -2944 -3139 0
-8800 1500 -2942 -3141 0
-8800 1500 -2940 -3143 0
-8800 1500 -2938 -3145 0
-8800 1500 -2936 -3147 0
-8800 1500 -2934 -3149 0
-8800 1500 -2932 -3151 0
-8800 1500 -2930 -3153 0
-8800 1500 -2928 -3155 0
-8800 1500 -2926 -3157 0
-8800 1500 -2924 -3159 0
-8800 1500 -2922 -3161 0
-8800 1500 -2920 -3163 0
-8800 1500 -2918 -3165 0
-8800 1500 -2916 -3167 0
-8800 1500 -2914 -3169 0
-8800 1500 -2912 -3171 0
-8800 1500 -2910 -3173 0
-8800 1500 -2908 -3175 0
-8800 1500 -2906 -3177 0
-8800 1500 -2904 -3179 0
-8800 1500 -2902 -3181 0
-8800 1500 -2900 -3183 0
-8800 1500 -2898 -3185 0
-8800 1500 -2896 -3187 0
-8800 1500 -2894 -3189 0
-8800 1500 -2892 -3191 0
-8800 1500 -2890 -3193 0
-8800 1500 -2888 -3195 0
-8800 1500 -2886 -3197 0
-8800 1500 -2884 -3199 0
-8800 1500 -2882 -3201 0
-8800 1500 -2880 -3203 0
-8800 1500 -2878 0
-8800 1500 -2876 0
-8800 1500 -2874 0
-8800 1500 -2872 0
-8800 1500 -2870 0
-8800 1500 -2868 0
-8800 1500 -2866 0
-8800 1500 -2864 0
-8800 1500 -2862 0
-8800 1500 -2860 0
-8800 1500 -2858 0
-8800 1500 -2856 0
-8800 1500 -2854 0
-8800 1500 -2852 0
-8800 1500 -2850 0
-8800 1500 -2848 0
-8800 1500 -2846 0
-8800 1500 -2844 0
-8800 1500 -2842 0
-8800 1500 -2840 0
-8800 1500 -2838 0
-8800 1500 -2836 0
-8800 1500 -2834 0
-8800 1500 -2832 0
-8800 1500 -2830 0
-8800 1500 -2828 0
-8800 1500 -2826 0
-8800 1500 -2824 0
-8800 1500 -2822 0
-8800 1500 -2820 0
-8800 1500 -2818 0
-8800 1500 -2816 0
-8800 1500 -2814 0
-8800 1500 -2812 0
-8800 1500 -2810 0
-8800 1500 -2808 0
-8800 1500 -2806 0
-8800 1500 -2804 0
-8800 1500 -2802 0
-8800 1500 -2800 0
-8800 1500 -2798 0
-8800 1500 -2796 0
-8800 1500 -2794 0
-8800 1500 -2792 0
-8800 1500 -2790 0
-8800 1500 -2788 0
-8800 1500 -2786 0
-8800 1500 -2784 0
-8800 1500 -2782 0
-8800 1500 -2780 0
-8800 1500 -2778 0
-8800 1500 -2776 0
-8800 1500 -2774 0
-8800 1500 -2772 0
-8800 1500 -2770 0
-8800 1500 -2768 0
-8800 1500 -2766 0
-8800 1500 -2764 0
-8800 1500 -2762 0
-8800 1500 -2760 0
-8800 1500 -2758 0
-8800 1500 -2756 0
-8800 1500 -2754 0
-8800 1500 -2752 0
-8800 1500 -2750 0
-8800 1500 -2748 0
-8800 1500 -2746 0
-8800 1500 -2744 0
-8800 1500 -2742 0
-8800 1500 -2740 0
-8800 1500 -2738 0
-8800 1500 -2736 0
-8800 1500 -2734 0
-8800 1500 -2732 0
-8800 1500 -2730 0
-8800 1500 -2728 0
-8800 1500 -2726 0
-8800 1500 -2724 0
-8800 1500 -2722 0
-8800 1500 -2720 0
-8800 1500 -2718 0
-8800 1500 -2716 0
-8800 1500 -2714 0
-8800 1500 -2712 0
-8800 1500 -2710 0
-8800 1500 -2708 0
-8800 1500 -2706 0
-8800 1500 -2704 0
-8800 1500 -2702 0
-8800 1500 -2700 0
-8800 1500 -2698 0
-8800 1500 -2696 0
-8800 1500 -2695 0
-8800 1502 -3135 0
-8800 1502 -2948 -3137 0
-8800 1502 -2946 -3139 0
-8800 1502 -2944 -3141 0
-8800 1502 -2942 -3143 0
-8800 1502 -2940 -3145 0
-8800 1502 -2938 -3147 0
-8800 1502 -2936 -3149 0
-8800 1502 -2934 -3151 0
-8800 1502 -2932 -3153 0
-8800 1502 -2930 -3155 0
-8800 1502 -2928 -3157 0
-8800 1502 -2926 -3159 0
-8800 1502 -2924 -3161 0
-8800 1502 -2922 -3163 0
-8800 1502 -2920 -3165 0
-8800 1502 -2918 -3167 0
-8800 1502 -2916 -3169 0
-8800 1502 -2914 -3171 0
-8800 1502 -2912 -3173 0
-8800 1502 -2910 -3175 0
-8800 1502 -2908 -3177 0
-8800 1502 -2906 -3179 0
-8800 1502 -2904 -3181 0
-8800 1502 -2902 -3183 0
-8800 1502 -2900 -3185 0
-8800 1502 -2898 -3187 0
-8800 1502 -2896 -3189 0
-8800 1502 -2894 -3191 0
-8800 1502 -2892 -3193 0
-8800 1502 -2890 -3195 0
-8800 1502 -2888 -3197 0
-8800 1502 -2886 -3199 0
-8800 1502 -2884 -3201 0
-8800 1502 -2882 -3203 0
-8800 1502 -2880 0
-8800 1502 -2878 0
-8800 1502 -2876 0
-8800 1502 -2874 0
-8800 1502 -2872 0
-8800 1502 -2870 0
-8800 1502 -2868 0
-8800 1502 -2866 0
-8800 1502 -2864 0
-8800 1502 -2862 0
-8800 1502 -2860 0
-8800 1502 -2858 0
-8800 1502 -2856 0
-8800 1502 -2854 0
-8800 1502 -2852 0
-8800 1502 -2850 0
-8800 1502 -2848 0
-8800 1502 -2846 0
-8800 1502 -2844 0
-8800 1502 -2842 0
-8800 1502 -2840 0
-8800 1502 -2838 0
-8800 1502 -2836 0
-8800 1502 -2834 0
-8800 1502 -2832 0
-8800 1502 -2830 0
-8800 1502 -2828 0
-8800 1502 -2826 0
-8800 1502 -2824 0
-8800 1502 -2822 0
-8800 1502 -2820 0
-8800 1502 -2818 0
-8800 1502 -2816 0
-8800 1502 -2814 0
-8800 1502 -2812 0
-8800 1502 -2810 0
-8800 1502 -2808 0
-8800 1502 -2806 0
-8800 1502 -2804 0
-8800 1502 -2802 0
-8800 1502 -2800 0
-8800 1502 -2798 0
-8800 1502 -2796 0
-8800 1502 -2794 0
-8800 1502 -2792 0
-8800 1502 -2790 0
-8800 1502 -2788 0
-8800 1502 -2786 0
-8800 1502 -2784 0
-8800 1502 -2782 0
-8800 1502 -2780 0
-8800 1502 -2778 0
-8800 1502 -2776 0
-8800 1502 -2774 0
-8800 1502 -2772 0
-8800 1502 -2770 0
-8800 1502 -2768 0
-8800 1502 -2766 0
-8800 1502 -2764 0
-8800 1502 -2762 0
-8800 1502 -2760 0
-8800 1502 -2758 0
-8800 1502 -2756 0
-8800 1502 -2754 0
-8800 1502 -2752 0
-8800 1502 -2750 0
-8800 1502 -2748 0
-8800 1502 -2746 0
-8800 1502 -2744 0
-8800 1502 -2742 0
-8800 1502 -2740 0
-8800 1502 -2738 0
-8800 1502 -2736 0
-8800 1502 -2734 0
-8800 1502 -2732 0
-8800 1502 -2730 0
-8800 1502 -2728 0
-8800 1502 -2726 0
-8800 1502 -2724 0
-8800 1502 -2722 0
-8800 1502 -2720 0
-8800 1502 -2718 0
-8800 1502 -2716 0
-8800 1502 -2714 0
-8800 1502 -2712 0
-8800 1502 -2710 0
-8800 1502 -2708 0
-8800 1502 -2706 0
-8800 1502 -2704 0
-8800 1502 -2702 0
-8800 1502 -2700 0
-8800 1502 -2698 0
-8800 1502 -2696 0
-8800 1502 -2695 0
-8800 1504 -3137 0
-8800 1504 -2948 -3139 0
-8800 1504 -2946 -3141 0
-8800 1504 -2944 -3143 0
-8800 1504 -2942 -3145 0
-8800 1504 -2940 -3147 0
-8800 1504 -2938 -3149 0
-8800 1504 -2936 -3151 0
-8800 1504 -2934 -3153 0
-8800 1504 -2932 -3155 0
-8800 1504 -2930 -3157 0
-8800 1504 -2928 -3159 0
-8800 1504 -2926 -3161 0
-8800 1504 -2924 -3163 0
-8800 1504 -2922 -3165 0
-8800 1504 -2920 -3167 0
-8800 1504 -2918 -3169 0
-8800 1504 -2916 -3171 0
-8800 1504 -2914 -3173 0
-8800 1504 -2912 -3175 0
-8800 1504 -2910 -3177 0
-8800 1504 -2908 -3179 0
-8800 1504 -2906 -3181 0
-8800 1504 -2904 -3183 0
-8800 1504 -2902 -3185 0
-8800 1504 -2900 -3187 0
-8800 1504 -2898 -3189 0
-8800 1504 -2896 -3191 0
-8800 1504 -2894 -3193 0
-8800 1504 -2892 -3195 0
-8800 1504 -2890 -3197 0
-8800 1504 -2888 -3199 0
-8800 1504 -2886 -3201 0
-8800 1504 -2884 -3203 0
-8800 1504 -2882 0
-8800 1504 -2880 0
-8800 1504 -2878 0
-8800 1504 -2876 0
-8800 1504 -2874 0
-8800 1504 -2872 0
-8800 1504 -2870 0
-8800 1504 -2868 0
-8800 1504 -2866 0
-8800 1504 -2864 0
-8800 1504 -2862 0
-8800 1504 -2860 0
-8800 1504 -2858 0
-8800 1504 -2856 0
-8800 1504 -2854 0
-8800 1504 -2852 0
-8800 1504 -2850 0
-8800 1504 -2848 0
-8800 1504 -2846 0
-8800 1504 -2844 0
-8800 1504 -2842 0
-8800 1504 -2840 0
-8800 1504 -2838 0
-8800 1504 -2836 0
-8800 1504 -2834 0
-8800 1504 -2832 0
-8800 1504 -2830 0
-8800 1504 -2828 0
-8800 1504 -2826 0
-8800 1504 -2824 0
-8800 1504 -2822 0
-8800 1504 -2820 0
-8800 1504 -2818 0
-8800 1504 -2816 0
-8800 1504 -2814 0
-8800 1504 -2812 0
-8800 1504 -2810 0
-8800 1504 -2808 0
-8800 1504 -2806 0
-8800 1504 -2804 0
-8800 1504 -2802 0
-8800 1504 -2800 0
-8800 1504 -2798 0
-8800 1504 -2796 0
-8800 1504 -2794 0
-8800 1504 -2792 0
-8800 1504 -2790 0
-8800 1504 -2788 0
-8800 1504 -2786 0
-8800 1504 -2784 0
-8800 1504 -2782 0
-8800 1504 -2780 0
-8800 1504 -2778 0
-8800 1504 -2776 0
-8800 1504 -2774 0
-8800 1504 -2772 0
-8800 1504 -2770 0
-8800 1504 -2768 0
-8800 1504 -2766 0
-8800 1504 -2764 0
-8800 1504 -2762 0
-8800 1504 -2760 0
-8800 1504 -2758 0
-8800 1504 -2756 0
-8800 1504 -2754 0
-8800 1504 -2752 0
-8800 1504 -2750 0
-8800 1504 -2748 0
-8800 1504 -2746 0
-8800 1504 -2744 0
-8800 1504 -2742 0
-8800 1504 -2740 0
-8800 1504 -2738 0
-8800 1504 -2736 0
-8800 1504 -2734 0
-8800 1504 -2732 0
-8800 1504 -2730 0
-8800 1504 -2728 0
-8800 1504 -2726 0
-8800 1504 -2724 0
-8800 1504 -2722 0
-8800 1504 -2720 0
-8800 1504 -2718 0
-8800 1504 -2716 0
-8800 1504 -2714 0
-8800 1504 -2712 0
-8800 1504 -2710 0
-8800 1504 -2708 0
-8800 1504 -2706 0
-8800 1504 -2704 0
-8800 1504 -2702 0
-8800 1504 -2700 0
-8800 1504 -2698 0
-8800 1504 -2696 0
-8800 1504 -2695 0
-8800 1506 -3139 0
-8800 1506 -2948 -3141 0
-8800 1506 -2946 -3143 0
-8800 1506 -2944 -3145 0
-8800 1506 -2942 -3147 0
-8800 1506 -2940 -3149 0
-8800 1506 -2938 -3151 0
-8800 1506 -2936 -3153 0
-8800 1506 -2934 -3155 0
-8800 1506 -2932 -3157 0
-8800 1506 -2930 -3159 0
-8800 1506 -2928 -3161 0
-8800 1506 -2926 -3163 0
-8800 1506 -2924 -3165 0
-8800 1506 -2922 -3167 0
-8800 1506 -2920 -3169 0
-8800 1506 -2918 -3171 0
-8800 1506 -2916 -3173 0
-8800 1506 -2914 -3175 0
-8800 1506 -2912 -3177 0
-8800 1506 -2910 -3179 0
-8800 1506 -2908 -3181 0
-8800 1506 -2906 -3183 0
-8800 1506 -2904 -3185 0
-8800 1506 -2902 -3187 0
-8800 1506 -2900 -3189 0
-8800 1506 -2898 -3191 0
-8800 1506 -2896 -3193 0
-8800 1506 -2894 -3195 0
-8800 1506 -2892 -3197 0
-8800 1506 -2890 -3199 0
-8800 1506 -2888 -3201 0
-8800 1506 -2886 -3203 0
-8800 1506 -2884 0
-8800 1506 -2882 0
-8800 1506 -2880 0
-8800 1506 -2878 0
-8800 1506 -2876 0
-8800 1506 -2874 0
-8800 1506 -2872 0
-8800 1506 -2870 0
-8800 1506 -2868 0
-8800 1506 -2866 0
-8800 1506 -2864 0
-8800 1506 -2862 0
-8800 1506 -2860 0
-8800 1506 -2858 0
-8800 1506 -2856 0
-8800 1506 -2854 0
-8800 1506 -2852 0
-8800 1506 -2850 0
-8800 1506 -2848 0
-8800 1506 -2846 0
-8800 1506 -2844 0
-8800 1506 -2842 0
-8800 1506 -2840 0
-8800 1506 -2838 0
-8800 1506 -2836 0
-8800 1506 -2834 0
-8800 1506 -2832 0
-8800 1506 -2830 0
-8800 1506 -2828 0
-8800 1506 -2826 0
-8800 1506 -2824 0
-8800 1506 -2822 0
-8800 1506 -2820 0
-8800 1506 -2818 0
-8800 1506 -2816 0
-8800 1506 -2814 0
-8800 1506 -2812 0
-8800 1506 -2810 0
-8800 1506 -2808 0
-8800 1506 -2806 0
-8800 1506 -2804 0
-8800 1506 -2802 0
-8800 1506 -2800 0
-8800 1506 -2798 0
-8800 1506 -2796 0
-8800 1506 -2794 0
-8800 1506 -2792 0
-8800 1506 -2790 0
-8800 1506 -2788 0
-8800 1506 -2786 0
-8800 1506 -2784 0
-8800 1506 -2782 0
-8800 1506 -2780 0
-8800 1506 -2778 0
-8800 1506 -2776 0
-8800 1506 -2774 0
-8800 1506 -2772 0
-8800 1506 -2770 0
-8800 1506 -2768 0
-8800 1506 -2766 0
-8800 1506 -2764 0
-8800 1506 -2762 0
-8800 1506 -2760 0
-8800 1506 -2758 0
-8800 1506 -2756 0
-8800 1506 -2754 0
-8800 1506 -2752 0
-8800 1506 -2750 0
-8800 1506 -2748 0
-8800 1506 -2746 0
-8800 1506 -2744 0
-8800 1506 -2742 0
-8800 1506 -2740 0
-8800 1506 -2738 0
-8800 1506 -2736 0
-8800 1506 -2734 0
-8800 1506 -2732 0
-8800 1506 -2730 0
-8800 1506 -2728 0
-8800 1506 -2726 0
-8800 1506 -2724 0
-8800 1506 -2722 0
-8800 1506 -2720 0
-8800 1506 -2718 0
-8800 1506 -2716 0
-8800 1506 -2714 0
-8800 1506 -2712 0
-8800 1506 -2710 0
-8800 1506 -2708 0
-8800 1506 -2706 0
-8800 1506 -2704 0
-8800 1506 -2702 0
-8800 1506 -2700 0
-8800 1506 -2698 0
-8800 1506 -2696 0
-8800 1506 -2695 0
-8800 1508 -3141 0
-8800 1508 -2948 -3143 0
-8800 1508 -2946 -3145 0
-8800 1508 -2944 -3147 0
-8800 1508 -2942 -3149 0
-8800 1508 -2940 -3151 0
-8800 1508 -2938 -3153 0
-8800 1508 -2936 -3155 0
-8800 1508 -2934 -3157 0
-8800 1508 -2932 -3159 0
-8800 1508 -2930 -3161 0
-8800 1508 -2928 -3163 0
-8800 1508 -2926 -3165 0
-8800 1508 -2924 -3167 0
-8800 1508 -2922 -3169 0
-8800 1508 -2920 -3171 0
-8800 1508 -2918 -3173 0
-8800 1508 -2916 -3175 0
-8800 1508 -2914 -3177 0
-8800 1508 -2912 -3179 0
-8800 1508 -2910 -3181 0
-8800 1508 -2908 -3183 0
-8800 1508 -2906 -3185 0
-8800 1508 -2904 -3187 0
-8800 1508 -2902 -3189 0
-8800 1508 -2900 -3191 0
-8800 1508 -2898 -3193 0
-8800 1508 -2896 -3195 0
-8800 1508 -2894 -3197 0
-8800 1508 -2892 -3199 0
-8800 1508 -2890 -3201 0
-8800 1508 -2888 -3203 0
-8800 1508 -2886 0
-8800 1508 -2884 0
-8800 1508 -2882 0
-8800 1508 -2880 0
-8800 1508 -2878 0
-8800 1508 -2876 0
-8800 1508 -2874 0
-8800 1508 -2872 0
-8800 1508 -2870 0
-8800 1508 -2868 0
-8800 1508 -2866 0
-8800 1508 -2864 0
-8800 1508 -2862 0
-8800 1508 -2860 0
-8800 1508 -2858 0
-8800 1508 -2856 0
-8800 1508 -2854 0
-8800 1508 -2852 0
-8800 1508 -2850 0
-8800 1508 -2848 0
-8800 1508 -2846 0
-8800 1508 -2844 0
-8800 1508 -2842 0
-8800 1508 -2840 0
-8800 1508 -2838 0
-8800 1508 -2836 0
-8800 1508 -2834 0
-8800 1508 -2832 0
-8800 1508 -2830 0
-8800 1508 -2828 0
-8800 1508 -2826 0
-8800 1508 -2824 0
-8800 1508 -2822 0
-8800 1508 -2820 0
-8800 1508 -2818 0
-8800 1508 -2816 0
-8800 1508 -2814 0
-8800 1508 -2812 0
-8800 1508 -2810 0
-8800 1508 -2808 0
-8800 1508 -2806 0
-8800 1508 -2804 0
-8800 1508 -2802 0
-8800 1508 -2800 0
-8800 1508 -2798 0
-8800 1508 -2796 0
-8800 1508 -2794 0
-8800 1508 -2792 0
-8800 1508 -2790 0
-8800 1508 -2788 0
-8800 1508 -2786 0
-8800 1508 -2784 0
-8800 1508 -2782 0
-8800 1508 -2780 0
-8800 1508 -2778 0
-8800 1508 -2776 0
-8800 1508 -2774 0
-8800 1508 -2772 0
-8800 1508 -2770 0
-8800 1508 -2768 0
-8800 1508 -2766 0
-8800 1508 -2764 0
-8800 1508 -2762 0
-8800 1508 -2760 0
-8800 1508 -2758 0
-8800 1508 -2756 0
-8800 1508 -2754 0
-8800 1508 -2752 0
-8800 1508 -2750 0
-8800 1508 -2748 0
-8800 1508 -2746 0
-8800 1508 -2744 0
-8800 1508 -2742 0
-8800 1508 -2740 0
-8800 1508 -2738 0
-8800 1508 -2736 0
-8800 1508 -2734 0
-8800 1508 -2732 0
-8800 1508 -2730 0
-8800 1508 -2728 0
-8800 1508 -2726 0
-8800 1508 -2724 0
-8800 1508 -2722 0
-8800 1508 -2720 0
-8800 1508 -2718 0
-8800 1508 -2716 0
-8800 1508 -2714 0
-8800 1508 -2712 0
-8800 1508 -2710 0
-8800 1508 -2708 0
-8800 1508 -2706 0
-8800 1508 -2704 0
-8800 1508 -2702 0
-8800 1508 -2700 0
-8800 1508 -2698 0
-8800 1508 -2696 0
-8800 1508 -2695 0
-8800 1510 -3143 0
-8800 1510 -2948 -3145 0
-8800 1510 -2946 -3147 0
-8800 1510 -2944 -3149 0
-8800 1510 -2942 -3151 0
-8800 1510 -2940 -3153 0
-8800 1510 -2938 -3155 0
-8800 1510 -2936 -3157 0
-8800 1510 -2934 -3159 0
-8800 1510 -2932 -3161 0
-8800 1510 -2930 -3163 0
-8800 1510 -2928 -3165 0
-8800 1510 -2926 -3167 0
-8800 1510 -2924 -3169 0
-8800 1510 -2922 -3171 0
-8800 1510 -2920 -3173 0
-8800 1510 -2918 -3175 0
-8800 1510 -2916 -3177 0
-8800 1510 -2914 -3179 0
-8800 1510 -2912 -3181 0
-8800 1510 -2910 -3183 0
-8800 1510 -2908 -3185 0
-8800 1510 -2906 -3187 0
-8800 1510 -2904 -3189 0
-8800 1510 -2902 -3191 0
-8800 1510 -2900 -3193 0
-8800 1510 -2898 -3195 0
-8800 1510 -2896 -3197 0
-8800 1510 -2894 -3199 0
-8800 1510 -2892 -3201 0
-8800 1510 -2890 -3203 0
-8800 1510 -2888 0
-8800 1510 -2886 0
-8800 1510 -2884 0
-8800 1510 -2882 0
-8800 1510 -2880 0
-8800 1510 -2878 0
-8800 1510 -2876 0
-8800 1510 -2874 0
-8800 1510 -2872 0
-8800 1510 -2870 0
-8800 1510 -2868 0
-8800 1510 -2866 0
-8800 1510 -2864 0
-8800 1510 -2862 0
-8800 1510 -2860 0
-8800 1510 -2858 0
-8800 1510 -2856 0
-8800 1510 -2854 0
-8800 1510 -2852 0
-8800 1510 -2850 0
-8800 1510 -2848 0
-8800 1510 -2846 0
-8800 1510 -2844 0
-8800 1510 -2842 0
-8800 1510 -2840 0
-8800 1510 -2838 0
-8800 1510 -2836 0
-8800 1510 -2834 0
-8800 1510 -2832 0
-8800 1510 -2830 0
-8800 1510 -2828 0
-8800 1510 -2826 0
-8800 1510 -2824 0
-8800 1510 -2822 0
-8800 1510 -2820 0
-8800 1510 -2818 0
-8800 1510 -2816 0
-8800 1510 -2814 0
-8800 1510 -2812 0
-8800 1510 -2810 0
-8800 1510 -2808 0
-8800 1510 -2806 0
-8800 1510 -2804 0
-8800 1510 -2802 0
-8800 1510 -2800 0
-8800 1510 -2798 0
-8800 1510 -2796 0
-8800 1510 -2794 0
-8800 1510 -2792 0
-8800 1510 -2790 0
-8800 1510 -2788 0
-8800 1510 -2786 0
-8800 1510 -2784 0
-8800 1510 -2782 0
-8800 1510 -2780 0
-8800 1510 -2778 0
-8800 1510 -2776 0
-8800 1510 -2774 0
-8800 1510 -2772 0
-8800 1510 -2770 0
-8800 1510 -2768 0
-8800 1510 -2766 0
-8800 1510 -2764 0
-8800 1510 -2762 0
-8800 1510 -2760 0
-8800 1510 -2758 0
-8800 1510 -2756 0
-8800 1510 -2754 0
-8800 1510 -2752 0
-8800 1510 -2750 0
-8800 1510 -2748 0
-8800 1510 -2746 0
-8800 1510 -2744 0
-8800 1510 -2742 0
-8800 1510 -2740 0
-8800 1510 -2738 0
-8800 1510 -2736 0
-8800 1510 -2734 0
-8800 1510 -2732 0
-8800 1510 -2730 0
-8800 1510 -2728 0
-8800 1510 -2726 0
-8800 1510 -2724 0
-8800 1510 -2722 0
-8800 1510 -2720 0
-8800 1510 -2718 0
-8800 1510 -2716 0
-8800 1510 -2714 0
-8800 1510 -2712 0
-8800 1510 -2710 0
-8800 1510 -2708 0
-8800 1510 -2706 0
-8800 1510 -2704 0
-8800 1510 -2702 0
-8800 1510 -2700 0
-8800 1510 -2698 0
-8800 1510 -2696 0
-8800 1510 -2695 0
-8800 1512 -3145 0
-8800 1512 -2948 -3147 0
-8800 1512 -2946 -3149 0
-8800 1512 -2944 -3151 0
-8800 1512 -2942 -3153 0
-8800 1512 -2940 -3155 0
-8800 1512 -2938 -3157 0
-8800 1512 -2936 -3159 0
-8800 1512 -2934 -3161 0
-8800 1512 -2932 -3163 0
-8800 1512 -2930 -3165 0
-8800 1512 -2928 -3167 0
-8800 1512 -2926 -3169 0
-8800 1512 -2924 -3171 0
-8800 1512 -2922 -3173 0
-8800 1512 -2920 -3175 0
-8800 1512 -2918 -3177 0
-8800 1512 -2916 -3179 0
-8800 1512 -2914 -3181 0
-8800 1512 -2912 -3183 0
-8800 1512 -2910 -3185 0
-8800 1512 -2908 -3187 0
-8800 1512 -2906 -3189 0
-8800 1512 -2904 -3191 0
-8800 1512 -2902 -3193 0
-8800 1512 -2900 -3195 0
-8800 1512 -2898 -3197 0
-8800 1512 -2896 -3199 0
-8800 1512 -2894 -3201 0
-8800 1512 -2892 -3203 0
-8800 1512 -2890 0
-8800 1512 -2888 0
-8800 1512 -2886 0
-8800 1512 -2884 0
-8800 1512 -2882 0
-8800 1512 -2880 0
-8800 1512 -2878 0
-8800 1512 -2876 0
-8800 1512 -2874 0
-8800 1512 -2872 0
-8800 1512 -2870 0
-8800 1512 -2868 0
-8800 1512 -2866 0
-8800 1512 -2864 0
-8800 1512 -2862 0
-8800 1512 -2860 0
-8800 1512 -2858 0
-8800 1512 -2856 0
-8800 1512 -2854 0
-8800 1512 -2852 0
-8800 1512 -2850 0
-8800 1512 -2848 0
-8800 1512 -2846 0
-8800 1512 -2844 0
-8800 1512 -2842 0
-8800 1512 -2840 0
-8800 1512 -2838 0
-8800 1512 -2836 0
-8800 1512 -2834 0
-8800 1512 -2832 0
-8800 1512 -2830 0
-8800 1512 -2828 0
-8800 1512 -2826 0
-8800 1512 -2824 0
-8800 1512 -2822 0
-8800 1512 -2820 0
-8800 1512 -2818 0
-8800 1512 -2816 0
-8800 1512 -2814 0
-8800 1512 -2812 0
-8800 1512 -2810 0
-8800 1512 -2808 0
-8800 1512 -2806 0
-8800 1512 -2804 0
-8800 1512 -2802 0
-8800 1512 -2800 0
-8800 1512 -2798 0
-8800 1512 -2796 0
-8800 1512 -2794 0
-8800 1512 -2792 0
-8800 1512 -2790 0
-8800 1512 -2788 0
-8800 1512 -2786 0
-8800 1512 -2784 0
-8800 1512 -2782 0
-8800 1512 -2780 0
-8800 1512 -2778 0
-8800 1512 -2776 0
-8800 1512 -2774 0
-8800 1512 -2772 0
-8800 1512 -2770 0
-8800 1512 -2768 0
-8800 1512 -2766 0
-8800 1512 -2764 0
-8800 1512 -2762 0
-8800 1512 -2760 0
-8800 1512 -2758 0
-8800 1512 -2756 0
-8800 1512 -2754 0
-8800 1512 -2752 0
-8800 1512 -2750 0
-8800 1512 -2748 0
-8800 1512 -2746 0
-8800 1512 -2744 0
-8800 1512 -2742 0
-8800 1512 -2740 0
-8800 1512 -2738 0
-8800 1512 -2736 0
-8800 1512 -2734 0
-8800 1512 -2732 0
-8800 1512 -2730 0
-8800 1512 -2728 0
-8800 1512 -2726 0
-8800 1512 -2724 0
-8800 1512 -2722 0
-8800 1512 -2720 0
-8800 1512 -2718 0
-8800 1512 -2716 0
-8800 1512 -2714 0
-8800 1512 -2712 0
-8800 1512 -2710 0
-8800 1512 -2708 0
-8800 1512 -2706 0
-8800 1512 -2704 0
-8800 1512 -2702 0
-8800 1512 -2700 0
-8800 1512 -2698 0
-8800 1512 -2696 0
-8800 1512 -2695 0
-8800 1514 -3147 0
-8800 1514 -2948 -3149 0
-8800 1514 -2946 -3151 0
-8800 1514 -2944 -3153 0
-8800 1514 -2942 -3155 0
-8800 1514 -2940 -3157 0
-8800 1514 -2938 -3159 0
-8800 1514 -2936 -3161 0
-8800 1514 -2934 -3163 0
-8800 1514 -2932 -3165 0
-8800 1514 -2930 -3167 0
-8800 1514 -2928 -3169 0
-8800 1514 -2926 -3171 0
-8800 1514 -2924 -3173 0
-8800 1514 -2922 -3175 0
-8800 1514 -2920 -3177 0
-8800 1514 -2918 -3179 0
-8800 1514 -2916 -3181 0
-8800 1514 -2914 -3183 0
-8800 1514 -2912 -3185 0
-8800 1514 -2910 -3187 0
-8800 1514 -2908 -3189 0
-8800 1514 -2906 -3191 0
-8800 1514 -2904 -3193 0
-8800 1514 -2902 -3195 0
-8800 1514 -2900 -3197 0
-8800 1514 -2898 -3199 0
-8800 1514 -2896 -3201 0
-8800 1514 -2894 -3203 0
-8800 1514 -2892 0
-8800 1514 -2890 0
-8800 1514 -2888 0
-8800 1514 -2886 0
-8800 1514 -2884 0
-8800 1514 -2882 0
-8800 1514 -2880 0
-8800 1514 -2878 0
-8800 1514 -2876 0
-8800 1514 -2874 0
-8800 1514 -2872 0
-8800 1514 -2870 0
-8800 1514 -2868 0
-8800 1514 -2866 0
-8800 1514 -2864 0
-8800 1514 -2862 0
-8800 1514 -2860 0
-8800 1514 -2858 0
-8800 1514 -2856 0
-8800 1514 -2854 0
-8800 1514 -2852 0
-8800 1514 -2850 0
-8800 1514 -2848 0
-8800 1514 -2846 0
-8800 1514 -2844 0
-8800 1514 -2842 0
-8800 1514 -2840 0
-8800 1514 -2838 0
-8800 1514 -2836 0
-8800 1514 -2834 0
-8800 1514 -2832 0
-8800 1514 -2830 0
-8800 1514 -2828 0
-8800 1514 -2826 0
-8800 1514 -2824 0
-8800 1514 -2822 0
-8800 1514 -2820 0
-8800 1514 -2818 0
-8800 1514 -2816 0
-8800 1514 -2814 0
-8800 1514 -2812 0
-8800 1514 -2810 0
-8800 1514 -2808 0
-8800 1514 -2806 0
-8800 1514 -2804 0
-8800 1514 -2802 0
-8800 1514 -2800 0
-8800 1514 -2798 0
-8800 1514 -2796 0
-8800 1514 -2794 0
-8800 1514 -2792 0
-8800 1514 -2790 0
-8800 1514 -2788 0
-8800 1514 -2786 0
-8800 1514 -2784 0
-8800 1514 -2782 0
-8800 1514 -2780 0
-8800 1514 -2778 0
-8800 1514 -2776 0
-8800 1514 -2774 0
-8800 1514 -2772 0
-8800 1514 -2770 0
-8800 1514 -2768 0
-8800 1514 -2766 0
-8800 1514 -2764 0
-8800 1514 -2762 0
-8800 1514 -2760 0
-8800 1514 -2758 0
-8800 1514 -2756 0
-8800 1514 -2754 0
-8800 1514 -2752 0
-8800 1514 -2750 0
-8800 1514 -2748 0
-8800 1514 -2746 0
-8800 1514 -2744 0
-8800 1514 -2742 0
-8800 1514 -2740 0
-8800 1514 -2738 0
-8800 1514 -2736 0
-8800 1514 -2734 0
-8800 1514 -2732 0
-8800 1514 -2730 0
-8800 1514 -2728 0
-8800 1514 -2726 0
-8800 1514 -2724 0
-8800 1514 -2722 0
-8800 1514 -2720 0
-8800 1514 -2718 0
-8800 1514 -2716 0
-8800 1514 -2714 0
-8800 1514 -2712 0
-8800 1514 -2710 0
-8800 1514 -2708 0
-8800 1514 -2706 0
-8800 1514 -2704 0
-8800 1514 -2702 0
-8800 1514 -2700 0
-8800 1514 -2698 0
-8800 1514 -2696 0
-8800 1514 -2695 0
-8800 1516 -3149 0
-8800 1516 -2948 -3151 0
-8800 1516 -2946 -3153 0
-8800 1516 -2944 -3155 0
-8800 1516 -2942 -3157 0
-8800 1516 -2940 -3159 0
-8800 1516 -2938 -3161 0
-8800 1516 -2936 -3163 0
-8800 1516 -2934 -3165 0
-8800 1516 -2932 -3167 0
-8800 1516 -2930 -3169 0
-8800 1516 -2928 -3171 0
-8800 1516 -2926 -3173 0
-8800 1516 -2924 -3175 0
-8800 1516 -2922 -3177 0
-8800 1516 -2920 -3179 0
-8800 1516 -2918 -3181 0
-8800 1516 -2916 -3183 0
-8800 1516 -2914 -3185 0
-8800 1516 -2912 -3187 0
-8800 1516 -2910 -3189 0
-8800 1516 -2908 -3191 0
-8800 1516 -2906 -3193 0
-8800 1516 -2904 -3195 0
-8800 1516 -2902 -3197 0
-8800 1516 -2900 -3199 0
-8800 1516 -2898 -3201 0
-8800 1516 -2896 -3203 0
-8800 1516 -2894 0
-8800 1516 -2892 0
-8800 1516 -2890 0
-8800 1516 -2888 0
-8800 1516 -2886 0
-8800 1516 -2884 0
-8800 1516 -2882 0
-8800 1516 -2880 0
-8800 1516 -2878 0
-8800 1516 -2876 0
-8800 1516 -2874 0
-8800 1516 -2872 0
-8800 1516 -2870 0
-8800 1516 -2868 0
-8800 1516 -2866 0
-8800 1516 -2864 0
-8800 1516 -2862 0
-8800 1516 -2860 0
-8800 1516 -2858 0
-8800 1516 -2856 0
-8800 1516 -2854 0
-8800 1516 -2852 0
-8800 1516 -2850 0
-8800 1516 -2848 0
-8800 1516 -2846 0
-8800 1516 -2844 0
-8800 1516 -2842 0
-8800 1516 -2840 0
-8800 1516 -2838 0
-8800 1516 -2836 0
-8800 1516 -2834 0
-8800 1516 -2832 0
-8800 1516 -2830 0
-8800 1516 -2828 0
-8800 1516 -2826 0
-8800 1516 -2824 0
-8800 1516 -2822 0
-8800 1516 -2820 0
-8800 1516 -2818 0
-8800 1516 -2816 0
-8800 1516 -2814 0
-8800 1516 -2812 0
-8800 1516 -2810 0
-8800 1516 -2808 0
-8800 1516 -2806 0
-8800 1516 -2804 0
-8800 1516 -2802 0
-8800 1516 -2800 0
-8800 1516 -2798 0
-8800 1516 -2796 0
-8800 1516 -2794 0
-8800 1516 -2792 0
-8800 1516 -2790 0
-8800 1516 -2788 0
-8800 1516 -2786 0
-8800 1516 -2784 0
-8800 1516 -2782 0
-8800 1516 -2780 0
-8800 1516 -2778 0
-8800 1516 -2776 0
-8800 1516 -2774 0
-8800 1516 -2772 0
-8800 1516 -2770 0
-8800 1516 -2768 0
-8800 1516 -2766 0
-8800 1516 -2764 0
-8800 1516 -2762 0
-8800 1516 -2760 0
-8800 1516 -2758 0
-8800 1516 -2756 0
-8800 1516 -2754 0
-8800 1516 -2752 0
-8800 1516 -2750 0
-8800 1516 -2748 0
-8800 1516 -2746 0
-8800 1516 -2744 0
-8800 1516 -2742 0
-8800 1516 -2740 0
-8800 1516 -2738 0
-8800 1516 -2736 0
-8800 1516 -2734 0
-8800 1516 -2732 0
-8800 1516 -2730 0
-8800 1516 -2728 0
-8800 1516 -2726 0
-8800 1516 -2724 0
-8800 1516 -2722 0
-8800 1516 -2720 0
-8800 1516 -2718 0
-8800 1516 -2716 0
-8800 1516 -2714 0
-8800 1516 -2712 0
-8800 1516 -2710 0
-8800 1516 -2708 0
-8800 1516 -2706 0
-8800 1516 -2704 0
-8800 1516 -2702 0
-8800 1516 -2700 0
-8800 1516 -2698 0
-8800 1516 -2696 0
-8800 1516 -2695 0
-8800 1518 -3151 0
-8800 1518 -2948 -3153 0
-8800 1518 -2946 -3155 0
-8800 1518 -2944 -3157 0
-8800 1518 -2942 -3159 0
-8800 1518 -2940 -3161 0
-8800 1518 -2938 -3163 0
-8800 1518 -2936 -3165 0
-8800 1518 -2934 -3167 0
-8800 1518 -2932 -3169 0
-8800 1518 -2930 -3171 0
-8800 1518 -2928 -3173 0
-8800 1518 -2926 -3175 0
-8800 1518 -2924 -3177 0
-8800 1518 -2922 -3179 0
-8800 1518 -2920 -3181 0
-8800 1518 -2918 -3183 0
-8800 1518 -2916 -3185 0
-8800 1518 -2914 -3187 0
-8800 1518 -2912 -3189 0
-8800 1518 -2910 -3191 0
-8800 1518 -2908 -3193 0
-8800 1518 -2906 -3195 0
-8800 1518 -2904 -3197 0
-8800 1518 -2902 -3199 0
-8800 1518 -2900 -3201 0
-8800 1518 -2898 -3203 0
-8800 1518 -2896 0
-8800 1518 -2894 0
-8800 1518 -2892 0
-8800 1518 -2890 0
-8800 1518 -2888 0
-8800 1518 -2886 0
-8800 1518 -2884 0
-8800 1518 -2882 0
-8800 1518 -2880 0
-8800 1518 -2878 0
-8800 1518 -2876 0
-8800 1518 -2874 0
-8800 1518 -2872 0
-8800 1518 -2870 0
-8800 1518 -2868 0
-8800 1518 -2866 0
-8800 1518 -2864 0
-8800 1518 -2862 0
-8800 1518 -2860 0
-8800 1518 -2858 0
-8800 1518 -2856 0
-8800 1518 -2854 0
-8800 1518 -2852 0
-8800 1518 -2850 0
-8800 1518 -2848 0
-8800 1518 -2846 0
-8800 1518 -2844 0
-8800 1518 -2842 0
-8800 1518 -2840 0
-8800 1518 -2838 0
-8800 1518 -2836 0
-8800 1518 -2834 0
-8800 1518 -2832 0
-8800 1518 -2830 0
-8800 1518 -2828 0
-8800 1518 -2826 0
-8800 1518 -2824 0
-8800 1518 -2822 0
-8800 1518 -2820 0
-8800 1518 -2818 0
-8800 1518 -2816 0
-8800 1518 -2814 0
-8800 1518 -2812 0
-8800 1518 -2810 0
-8800 1518 -2808 0
-8800 1518 -2806 0
-8800 1518 -2804 0
-8800 1518 -2802 0
-8800 1518 -2800 0
-8800 1518 -2798 0
-8800 1518 -2796 0
-8800 1518 -2794 0
-8800 1518 -2792 0
-8800 1518 -2790 0
-8800 1518 -2788 0
-8800 1518 -2786 0
-8800 1518 -2784 0
-8800 1518 -2782 0
-8800 1518 -2780 0
-8800 1518 -2778 0
-8800 1518 -2776 0
-8800 1518 -2774 0
-8800 1518 -2772 0
-8800 1518 -2770 0
-8800 1518 -2768 0
-8800 1518 -2766 0
-8800 1518 -2764 0
-8800 1518 -2762 0
-8800 1518 -2760 0
-8800 1518 -2758 0
-8800 1518 -2756 0
-8800 1518 -2754 0
-8800 1518 -2752 0
-8800 1518 -2750 0
-8800 1518 -2748 0
-8800 1518 -2746 0
-8800 1518 -2744 0
-8800 1518 -2742 0
-8800 1518 -2740 0
-8800 1518 -2738 0
-8800 1518 -2736 0
-8800 1518 -2734 0
-8800 1518 -2732 0
-8800 1518 -2730 0
-8800 1518 -2728 0
-8800 1518 -2726 0
-8800 1518 -2724 0
-8800 1518 -2722 0
-8800 1518 -2720 0
-8800 1518 -2718 0
-8800 1518 -2716 0
-8800 1518 -2714 0
-8800 1518 -2712 0
-8800 1518 -2710 0
-8800 1518 -2708 0
-8800 1518 -2706 0
-8800 1518 -2704 0
-8800 1518 -2702 0
-8800 1518 -2700 0
-8800 1518 -2698 0
-8800 1518 -2696 0
-8800 1518 -2695 0
-8800 1520 -3153 0
-8800 1520 -2948 -3155 0
-8800 1520 -2946 -3157 0
-8800 1520 -2944 -3159 0
-8800 1520 -2942 -3161 0
-8800 1520 -2940 -3163 0
-8800 1520 -2938 -3165 0
-8800 1520 -2936 -3167 0
-8800 1520 -2934 -3169 0
-8800 1520 -2932 -3171 0
-8800 1520 -2930 -3173 0
-8800 1520 -2928 -3175 0
-8800 1520 -2926 -3177 0
-8800 1520 -2924 -3179 0
-8800 1520 -2922 -3181 0
-8800 1520 -2920 -3183 0
-8800 1520 -2918 -3185 0
-8800 1520 -2916 -3187 0
-8800 1520 -2914 -3189 0
-8800 1520 -2912 -3191 0
-8800 1520 -2910 -3193 0
-8800 1520 -2908 -3195 0
-8800 1520 -2906 -3197 0
-8800 1520 -2904 -3199 0
-8800 1520 -2902 -3201 0
-8800 1520 -2900 -3203 0
-8800 1520 -2898 0
-8800 1520 -2896 0
-8800 1520 -2894 0
-8800 1520 -2892 0
-8800 1520 -2890 0
-8800 1520 -2888 0
-8800 1520 -2886 0
-8800 1520 -2884 0
-8800 1520 -2882 0
-8800 1520 -2880 0
-8800 1520 -2878 0
-8800 1520 -2876 0
-8800 1520 -2874 0
-8800 1520 -2872 0
-8800 1520 -2870 0
-8800 1520 -2868 0
-8800 1520 -2866 0
-8800 1520 -2864 0
-8800 1520 -2862 0
-8800 1520 -2860 0
-8800 1520 -2858 0
-8800 1520 -2856 0
-8800 1520 -2854 0
-8800 1520 -2852 0
-8800 1520 -2850 0
-8800 1520 -2848 0
-8800 1520 -2846 0
-8800 1520 -2844 0
-8800 1520 -2842 0
-8800 1520 -2840 0
-8800 1520 -2838 0
-8800 1520 -2836 0
-8800 1520 -2834 0
-8800 1520 -2832 0
-8800 1520 -2830 0
-8800 1520 -2828 0
-8800 1520 -2826 0
-8800 1520 -2824 0
-8800 1520 -2822 0
-8800 1520 -2820 0
-8800 1520 -2818 0
-8800 1520 -2816 0
-8800 1520 -2814 0
-8800 1520 -2812 0
-8800 1520 -2810 0
-8800 1520 -2808 0
-8800 1520 -2806 0
-8800 1520 -2804 0
-8800 1520 -2802 0
-8800 1520 -2800 0
-8800 1520 -2798 0
-8800 1520 -2796 0
-8800 1520 -2794 0
-8800 1520 -2792 0
-8800 1520 -2790 0
-8800 1520 -2788 0
-8800 1520 -2786 0
-8800 1520 -2784 0
-8800 1520 -2782 0
-8800 1520 -2780 0
-8800 1520 -2778 0
-8800 1520 -2776 0
-8800 1520 -2774 0
-8800 1520 -2772 0
-8800 1520 -2770 0
-8800 1520 -2768 0
-8800 1520 -2766 0
-8800 1520 -2764 0
-8800 1520 -2762 0
-8800 1520 -2760 0
-8800 1520 -2758 0
-8800 1520 -2756 0
-8800 1520 -2754 0
-8800 1520 -2752 0
-8800 1520 -2750 0
-8800 1520 -2748 0
-8800 1520 -2746 0
-8800 1520 -2744 0
-8800 1520 -2742 0
-8800 1520 -2740 0
-8800 1520 -2738 0
-8800 1520 -2736 0
-8800 1520 -2734 0
-8800 1520 -2732 0
-8800 1520 -2730 0
-8800 1520 -2728 0
-8800 1520 -2726 0
-8800 1520 -2724 0
-8800 1520 -2722 0
-8800 1520 -2720 0
-8800 1520 -2718 0
-8800 1520 -2716 0
-8800 1520 -2714 0
-8800 1520 -2712 0
-8800 1520 -2710 0
-8800 1520 -2708 0
-8800 1520 -2706 0
-8800 1520 -2704 0
-8800 1520 -2702 0
-8800 1520 -2700 0
-8800 1520 -2698 0
-8800 1520 -2696 0
-8800 1520 -2695 0
-8800 1522 -3155 0
-8800 1522 -2948 -3157 0
-8800 1522 -2946 -3159 0
-8800 1522 -2944 -3161 0
-8800 1522 -2942 -3163 0
-8800 1522 -2940 -3165 0
-8800 1522 -2938 -3167 0
-8800 1522 -2936 -3169 0
-8800 1522 -2934 -3171 0
-8800 1522 -2932 -3173 0
-8800 1522 -2930 -3175 0
-8800 1522 -2928 -3177 0
-8800 1522 -2926 -3179 0
-8800 1522 -2924 -3181 0
-8800 1522 -2922 -3183 0
-8800 1522 -2920 -3185 0
-8800 1522 -2918 -3187 0
-8800 1522 -2916 -3189 0
-8800 1522 -2914 -3191 0
-8800 1522 -2912 -3193 0
-8800 1522 -2910 -3195 0
-8800 1522 -2908 -3197 0
-8800 1522 -2906 -3199 0
-8800 1522 -2904 -3201 0
-8800 1522 -2902 -3203 0
-8800 1522 -2900 0
-8800 1522 -2898 0
-8800 1522 -2896 0
-8800 1522 -2894 0
-8800 1522 -2892 0
-8800 1522 -2890 0
-8800 1522 -2888 0
-8800 1522 -2886 0
-8800 1522 -2884 0
-8800 1522 -2882 0
-8800 1522 -2880 0
-8800 1522 -2878 0
-8800 1522 -2876 0
-8800 1522 -2874 0
-8800 1522 -2872 0
-8800 1522 -2870 0
-8800 1522 -2868 0
-8800 1522 -2866 0
-8800 1522 -2864 0
-8800 1522 -2862 0
-8800 1522 -2860 0
-8800 1522 -2858 0
-8800 1522 -2856 0
-8800 1522 -2854 0
-8800 1522 -2852 0
-8800 1522 -2850 0
-8800 1522 -2848 0
-8800 1522 -2846 0
-8800 1522 -2844 0
-8800 1522 -2842 0
-8800 1522 -2840 0
-8800 1522 -2838 0
-8800 1522 -2836 0
-8800 1522 -2834 0
-8800 1522 -2832 0
-8800 1522 -2830 0
-8800 1522 -2828 0
-8800 1522 -2826 0
-8800 1522 -2824 0
-8800 1522 -2822 0
-8800 1522 -2820 0
-8800 1522 -2818 0
-8800 1522 -2816 0
-8800 1522 -2814 0
-8800 1522 -2812 0
-8800 1522 -2810 0
-8800 1522 -2808 0
-8800 1522 -2806 0
-8800 1522 -2804 0
-8800 1522 -2802 0
-8800 1522 -2800 0
-8800 1522 -2798 0
-8800 1522 -2796 0
-8800 1522 -2794 0
-8800 1522 -2792 0
-8800 1522 -2790 0
-8800 1522 -2788 0
-8800 1522 -2786 0
-8800 1522 -2784 0
-8800 1522 -2782 0
-8800 1522 -2780 0
-8800 1522 -2778 0
-8800 1522 -2776 0
-8800 1522 -2774 0
-8800 1522 -2772 0
-8800 1522 -2770 0
-8800 1522 -2768 0
-8800 1522 -2766 0
-8800 1522 -2764 0
-8800 1522 -2762 0
-8800 1522 -2760 0
-8800 1522 -2758 0
-8800 1522 -2756 0
-8800 1522 -2754 0
-8800 1522 -2752 0
-8800 1522 -2750 0
-8800 1522 -2748 0
-8800 1522 -2746 0
-8800 1522 -2744 0
-8800 1522 -2742 0
-8800 1522 -2740 0
-8800 1522 -2738 0
-8800 1522 -2736 0
-8800 1522 -2734 0
-8800 1522 -2732 0
-8800 1522 -2730 0
-8800 1522 -2728 0
-8800 1522 -2726 0
-8800 1522 -2724 0
-8800 1522 -2722 0
-8800 1522 -2720 0
-8800 1522 -2718 0
-8800 1522 -2716 0
-8800 1522 -2714 0
-8800 1522 -2712 0
-8800 1522 -2710 0
-8800 1522 -2708 0
-8800 1522 -2706 0
-8800 1522 -2704 0
-8800 1522 -2702 0
-8800 1522 -2700 0
-8800 1522 -2698 0
-8800 1522 -2696 0
-8800 1522 -2695 0
-8800 1524 -3157 0
-8800 1524 -2948 -3159 0
-8800 1524 -2946 -3161 0
-8800 1524 -2944 -3163 0
-8800 1524 -2942 -3165 0
-8800 1524 -2940 -3167 0
-8800 1524 -2938 -3169 0
-8800 1524 -2936 -3171 0
-8800 1524 -2934 -3173 0
-8800 1524 -2932 -3175 0
-8800 1524 -2930 -3177 0
-8800 1524 -2928 -3179 0
-8800 1524 -2926 -3181 0
-8800 1524 -2924 -3183 0
-8800 1524 -2922 -3185 0
-8800 1524 -2920 -3187 0
-8800 1524 -2918 -3189 0
-8800 1524 -2916 -3191 0
-8800 1524 -2914 -3193 0
-8800 1524 -2912 -3195 0
-8800 1524 -2910 -3197 0
-8800 1524 -2908 -3199 0
-8800 1524 -2906 -3201 0
-8800 1524 -2904 -3203 0
-8800 1524 -2902 0
-8800 1524 -2900 0
-8800 1524 -2898 0
-8800 1524 -2896 0
-8800 1524 -2894 0
-8800 1524 -2892 0
-8800 1524 -2890 0
-8800 1524 -2888 0
-8800 1524 -2886 0
-8800 1524 -2884 0
-8800 1524 -2882 0
-8800 1524 -2880 0
-8800 1524 -2878 0
-8800 1524 -2876 0
-8800 1524 -2874 0
-8800 1524 -2872 0
-8800 1524 -2870 0
-8800 1524 -2868 0
-8800 1524 -2866 0
-8800 1524 -2864 0
-8800 1524 -2862 0
-8800 1524 -2860 0
-8800 1524 -2858 0
-8800 1524 -2856 0
-8800 1524 -2854 0
-8800 1524 -2852 0
-8800 1524 -2850 0
-8800 1524 -2848 0
-8800 1524 -2846 0
-8800 1524 -2844 0
-8800 1524 -2842 0
-8800 1524 -2840 0
-8800 1524 -2838 0
-8800 1524 -2836 0
-8800 1524 -2834 0
-8800 1524 -2832 0
-8800 1524 -2830 0
-8800 1524 -2828 0
-8800 1524 -2826 0
-8800 1524 -2824 0
-8800 1524 -2822 0
-8800 1524 -2820 0
-8800 1524 -2818 0
-8800 1524 -2816 0
-8800 1524 -2814 0
-8800 1524 -2812 0
-8800 1524 -2810 0
-8800 1524 -2808 0
-8800 1524 -2806 0
-8800 1524 -2804 0
-8800 1524 -2802 0
-8800 1524 -2800 0
-8800 1524 -2798 0
-8800 1524 -2796 0
-8800 1524 -2794 0
-8800 1524 -2792 0
-8800 1524 -2790 0
-8800 1524 -2788 0
-8800 1524 -2786 0
-8800 1524 -2784 0
-8800 1524 -2782 0
-8800 1524 -2780 0
-8800 1524 -2778 0
-8800 1524 -2776 0
-8800 1524 -2774 0
-8800 1524 -2772 0
-8800 1524 -2770 0
-8800 1524 -2768 0
-8800 1524 -2766 0
-8800 1524 -2764 0
-8800 1524 -2762 0
-8800 1524 -2760 0
-8800 1524 -2758 0
-8800 1524 -2756 0
-8800 1524 -2754 0
-8800 1524 -2752 0
-8800 1524 -2750 0
-8800 1524 -2748 0
-8800 1524 -2746 0
-8800 1524 -2744 0
-8800 1524 -2742 0
-8800 1524 -2740 0
-8800 1524 -2738 0
-8800 1524 -2736 0
-8800 1524 -2734 0
-8800 1524 -2732 0
-8800 1524 -2730 0
-8800 1524 -2728 0
-8800 1524 -2726 0
-8800 1524 -2724 0
-8800 1524 -2722 0
-8800 1524 -2720 0
-8800 1524 -2718 0
-8800 1524 -2716 0
-8800 1524 -2714 0
-8800 1524 -2712 0
-8800 1524 -2710 0
-8800 1524 -2708 0
-8800 1524 -2706 0
-8800 1524 -2704 0
-8800 1524 -2702 0
-8800 1524 -2700 0
-8800 1524 -2698 0
-8800 1524 -2696 0
-8800 1524 -2695 0
-8800 1526 -3159 0
-8800 1526 -2948 -3161 0
-8800 1526 -2946 -3163 0
-8800 1526 -2944 -3165 0
-8800 1526 -2942 -3167 0
-8800 1526 -2940 -3169 0
-8800 1526 -2938 -3171 0
-8800 1526 -2936 -3173 0
-8800 1526 -2934 -3175 0
-8800 1526 -2932 -3177 0
-8800 1526 -2930 -3179 0
-8800 1526 -2928 -3181 0
-8800 1526 -2926 -3183 0
-8800 1526 -2924 -3185 0
-8800 1526 -2922 -3187 0
-8800 1526 -2920 -3189 0
-8800 1526 -2918 -3191 0
-8800 1526 -2916 -3193 0
-8800 1526 -2914 -3195 0
-8800 1526 -2912 -3197 0
-8800 1526 -2910 -3199 0
-8800 1526 -2908 -3201 0
-8800 1526 -2906 -3203 0
-8800 1526 -2904 0
-8800 1526 -2902 0
-8800 1526 -2900 0
-8800 1526 -2898 0
-8800 1526 -2896 0
-8800 1526 -2894 0
-8800 1526 -2892 0
-8800 1526 -2890 0
-8800 1526 -2888 0
-8800 1526 -2886 0
-8800 1526 -2884 0
-8800 1526 -2882 0
-8800 1526 -2880 0
-8800 1526 -2878 0
-8800 1526 -2876 0
-8800 1526 -2874 0
-8800 1526 -2872 0
-8800 1526 -2870 0
-8800 1526 -2868 0
-8800 1526 -2866 0
-8800 1526 -2864 0
-8800 1526 -2862 0
-8800 1526 -2860 0
-8800 1526 -2858 0
-8800 1526 -2856 0
-8800 1526 -2854 0
-8800 1526 -2852 0
-8800 1526 -2850 0
-8800 1526 -2848 0
-8800 1526 -2846 0
-8800 1526 -2844 0
-8800 1526 -2842 0
-8800 1526 -2840 0
-8800 1526 -2838 0
-8800 1526 -2836 0
-8800 1526 -2834 0
-8800 1526 -2832 0
-8800 1526 -2830 0
-8800 1526 -2828 0
-8800 1526 -2826 0
-8800 1526 -2824 0
-8800 1526 -2822 0
-8800 1526 -2820 0
-8800 1526 -2818 0
-8800 1526 -2816 0
-8800 1526 -2814 0
-8800 1526 -2812 0
-8800 1526 -2810 0
-8800 1526 -2808 0
-8800 1526 -2806 0
-8800 1526 -2804 0
-8800 1526 -2802 0
-8800 1526 -2800 0
-8800 1526 -2798 0
-8800 1526 -2796 0
-8800 1526 -2794 0
-8800 1526 -2792 0
-8800 1526 -2790 0
-8800 1526 -2788 0
-8800 1526 -2786 0
-8800 1526 -2784 0
-8800 1526 -2782 0
-8800 1526 -2780 0
-8800 1526 -2778 0
-8800 1526 -2776 0
-8800 1526 -2774 0
-8800 1526 -2772 0
-8800 1526 -2770 0
-8800 1526 -2768 0
-8800 1526 -2766 0
-8800 1526 -2764 0
-8800 1526 -2762 0
-8800 1526 -2760 0
-8800 1526 -2758 0
-8800 1526 -2756 0
-8800 1526 -2754 0
-8800 1526 -2752 0
-8800 1526 -2750 0
-8800 1526 -2748 0
-8800 1526 -2746 0
-8800 1526 -2744 0
-8800 1526 -2742 0
-8800 1526 -2740 0
-8800 1526 -2738 0
-8800 1526 -2736 0
-8800 1526 -2734 0
-8800 1526 -2732 0
-8800 1526 -2730 0
-8800 1526 -2728 0
-8800 1526 -2726 0
-8800 1526 -2724 0
-8800 1526 -2722 0
-8800 1526 -2720 0
-8800 1526 -2718 0
-8800 1526 -2716 0
-8800 1526 -2714 0
-8800 1526 -2712 0
-8800 1526 -2710 0
-8800 1526 -2708 0
-8800 1526 -2706 0
-8800 1526 -2704 0
-8800 1526 -2702 0
-8800 1526 -2700 0
-8800 1526 -2698 0
-8800 1526 -2696 0
-8800 1526 -2695 0
-8800 1528 -3161 0
-8800 1528 -2948 -3163 0
-8800 1528 -2946 -3165 0
-8800 1528 -2944 -3167 0
-8800 1528 -2942 -3169 0
-8800 1528 -2940 -3171 0
-8800 1528 -2938 -3173 0
-8800 1528 -2936 -3175 0
-8800 1528 -2934 -3177 0
-8800 1528 -2932 -3179 0
-8800 1528 -2930 -3181 0
-8800 1528 -2928 -3183 0
-8800 1528 -2926 -3185 0
-8800 1528 -2924 -3187 0
-8800 1528 -2922 -3189 0
-8800 1528 -2920 -3191 0
-8800 1528 -2918 -3193 0
-8800 1528 -2916 -3195 0
-8800 1528 -2914 -3197 0
-8800 1528 -2912 -3199 0
-8800 1528 -2910 -3201 0
-8800 1528 -2908 -3203 0
-8800 1528 -2906 0
-8800 1528 -2904 0
-8800 1528 -2902 0
-8800 1528 -2900 0
-8800 1528 -2898 0
-8800 1528 -2896 0
-8800 1528 -2894 0
-8800 1528 -2892 0
-8800 1528 -2890 0
-8800 1528 -2888 0
-8800 1528 -2886 0
-8800 1528 -2884 0
-8800 1528 -2882 0
-8800 1528 -2880 0
-8800 1528 -2878 0
-8800 1528 -2876 0
-8800 1528 -2874 0
-8800 1528 -2872 0
-8800 1528 -2870 0
-8800 1528 -2868 0
-8800 1528 -2866 0
-8800 1528 -2864 0
-8800 1528 -2862 0
-8800 1528 -2860 0
-8800 1528 -2858 0
-8800 1528 -2856 0
-8800 1528 -2854 0
-8800 1528 -2852 0
-8800 1528 -2850 0
-8800 1528 -2848 0
-8800 1528 -2846 0
-8800 1528 -2844 0
-8800 1528 -2842 0
-8800 1528 -2840 0
-8800 1528 -2838 0
-8800 1528 -2836 0
-8800 1528 -2834 0
-8800 1528 -2832 0
-8800 1528 -2830 0
-8800 1528 -2828 0
-8800 1528 -2826 0
-8800 1528 -2824 0
-8800 1528 -2822 0
-8800 1528 -2820 0
-8800 1528 -2818 0
-8800 1528 -2816 0
-8800 1528 -2814 0
-8800 1528 -2812 0
-8800 1528 -2810 0
-8800 1528 -2808 0
-8800 1528 -2806 0
-8800 1528 -2804 0
-8800 1528 -2802 0
-8800 1528 -2800 0
-8800 1528 -2798 0
-8800 1528 -2796 0
-8800 1528 -2794 0
-8800 1528 -2792 0
-8800 1528 -2790 0
-8800 1528 -2788 0
-8800 1528 -2786 0
-8800 1528 -2784 0
-8800 1528 -2782 0
-8800 1528 -2780 0
-8800 1528 -2778 0
-8800 1528 -2776 0
-8800 1528 -2774 0
-8800 1528 -2772 0
-8800 1528 -2770 0
-8800 1528 -2768 0
-8800 1528 -2766 0
-8800 1528 -2764 0
-8800 1528 -2762 0
-8800 1528 -2760 0
-8800 1528 -2758 0
-8800 1528 -2756 0
-8800 1528 -2754 0
-8800 1528 -2752 0
-8800 1528 -2750 0
-8800 1528 -2748 0
-8800 1528 -2746 0
-8800 1528 -2744 0
-8800 1528 -2742 0
-8800 1528 -2740 0
-8800 1528 -2738 0
-8800 1528 -2736 0
-8800 1528 -2734 0
-8800 1528 -2732 0
-8800 1528 -2730 0
-8800 1528 -2728 0
-8800 1528 -2726 0
-8800 1528 -2724 0
-8800 1528 -2722 0
-8800 1528 -2720 0
-8800 1528 -2718 0
-8800 1528 -2716 0
-8800 1528 -2714 0
-8800 1528 -2712 0
-8800 1528 -2710 0
-8800 1528 -2708 0
-8800 1528 -2706 0
-8800 1528 -2704 0
-8800 1528 -2702 0
-8800 1528 -2700 0
-8800 1528 -2698 0
-8800 1528 -2696 0
-8800 1528 -2695 0
-8800 1530 -3163 0
-8800 1530 -2948 -3165 0
-8800 1530 -2946 -3167 0
-8800 1530 -2944 -3169 0
-8800 1530 -2942 -3171 0
-8800 1530 -2940 -3173 0
-8800 1530 -2938 -3175 0
-8800 1530 -2936 -3177 0
-8800 1530 -2934 -3179 0
-8800 1530 -2932 -3181 0
-8800 1530 -2930 -3183 0
-8800 1530 -2928 -3185 0
-8800 1530 -2926 -3187 0
-8800 1530 -2924 -3189 0
-8800 1530 -2922 -3191 0
-8800 1530 -2920 -3193 0
-8800 1530 -2918 -3195 0
-8800 1530 -2916 -3197 0
-8800 1530 -2914 -3199 0
-8800 1530 -2912 -3201 0
-8800 1530 -2910 -3203 0
-8800 1530 -2908 0
-8800 1530 -2906 0
-8800 1530 -2904 0
-8800 1530 -2902 0
-8800 1530 -2900 0
-8800 1530 -2898 0
-8800 1530 -2896 0
-8800 1530 -2894 0
-8800 1530 -2892 0
-8800 1530 -2890 0
-8800 1530 -2888 0
-8800 1530 -2886 0
-8800 1530 -2884 0
-8800 1530 -2882 0
-8800 1530 -2880 0
-8800 1530 -2878 0
-8800 1530 -2876 0
-8800 1530 -2874 0
-8800 1530 -2872 0
-8800 1530 -2870 0
-8800 1530 -2868 0
-8800 1530 -2866 0
-8800 1530 -2864 0
-8800 1530 -2862 0
-8800 1530 -2860 0
-8800 1530 -2858 0
-8800 1530 -2856 0
-8800 1530 -2854 0
-8800 1530 -2852 0
-8800 1530 -2850 0
-8800 1530 -2848 0
-8800 1530 -2846 0
-8800 1530 -2844 0
-8800 1530 -2842 0
-8800 1530 -2840 0
-8800 1530 -2838 0
-8800 1530 -2836 0
-8800 1530 -2834 0
-8800 1530 -2832 0
-8800 1530 -2830 0
-8800 1530 -2828 0
-8800 1530 -2826 0
-8800 1530 -2824 0
-8800 1530 -2822 0
-8800 1530 -2820 0
-8800 1530 -2818 0
-8800 1530 -2816 0
-8800 1530 -2814 0
-8800 1530 -2812 0
-8800 1530 -2810 0
-8800 1530 -2808 0
-8800 1530 -2806 0
-8800 1530 -2804 0
-8800 1530 -2802 0
-8800 1530 -2800 0
-8800 1530 -2798 0
-8800 1530 -2796 0
-8800 1530 -2794 0
-8800 1530 -2792 0
-8800 1530 -2790 0
-8800 1530 -2788 0
-8800 1530 -2786 0
-8800 1530 -2784 0
-8800 1530 -2782 0
-8800 1530 -2780 0
-8800 1530 -2778 0
-8800 1530 -2776 0
-8800 1530 -2774 0
-8800 1530 -2772 0
-8800 1530 -2770 0
-8800 1530 -2768 0
-8800 1530 -2766 0
-8800 1530 -2764 0
-8800 1530 -2762 0
-8800 1530 -2760 0
-8800 1530 -2758 0
-8800 1530 -2756 0
-8800 1530 -2754 0
-8800 1530 -2752 0
-8800 1530 -2750 0
-8800 1530 -2748 0
-8800 1530 -2746 0
-8800 1530 -2744 0
-8800 1530 -2742 0
-8800 1530 -2740 0
-8800 1530 -2738 0
-8800 1530 -2736 0
-8800 1530 -2734 0
-8800 1530 -2732 0
-8800 1530 -2730 0
-8800 1530 -2728 0
-8800 1530 -2726 0
-8800 1530 -2724 0
-8800 1530 -2722 0
-8800 1530 -2720 0
-8800 1530 -2718 0
-8800 1530 -2716 0
-8800 1530 -2714 0
-8800 1530 -2712 0
-8800 1530 -2710 0
-8800 1530 -2708 0
-8800 1530 -2706 0
-8800 1530 -2704 0
-8800 1530 -2702 0
-8800 1530 -2700 0
-8800 1530 -2698 0
-8800 1530 -2696 0
-8800 1530 -2695 0
-8800 1532 -3165 0
-8800 1532 -2948 -3167 0
-8800 1532 -2946 -3169 0
-8800 1532 -2944 -3171 0
-8800 1532 -2942 -3173 0
-8800 1532 -2940 -3175 0
-8800 1532 -2938 -3177 0
-8800 1532 -2936 -3179 0
-8800 1532 -2934 -3181 0
-8800 1532 -2932 -3183 0
-8800 1532 -2930 -3185 0
-8800 1532 -2928 -3187 0
-8800 1532 -2926 -3189 0
-8800 1532 -2924 -3191 0
-8800 1532 -2922 -3193 0
-8800 1532 -2920 -3195 0
-8800 1532 -2918 -3197 0
-8800 1532 -2916 -3199 0
-8800 1532 -2914 -3201 0
-8800 1532 -2912 -3203 0
-8800 1532 -2910 0
-8800 1532 -2908 0
-8800 1532 -2906 0
-8800 1532 -2904 0
-8800 1532 -2902 0
-8800 1532 -2900 0
-8800 1532 -2898 0
-8800 1532 -2896 0
-8800 1532 -2894 0
-8800 1532 -2892 0
-8800 1532 -2890 0
-8800 1532 -2888 0
-8800 1532 -2886 0
-8800 1532 -2884 0
-8800 1532 -2882 0
-8800 1532 -2880 0
-8800 1532 -2878 0
-8800 1532 -2876 0
-8800 1532 -2874 0
-8800 1532 -2872 0
-8800 1532 -2870 0
-8800 1532 -2868 0
-8800 1532 -2866 0
-8800 1532 -2864 0
-8800 1532 -2862 0
-8800 1532 -2860 0
-8800 1532 -2858 0
-8800 1532 -2856 0
-8800 1532 -2854 0
-8800 1532 -2852 0
-8800 1532 -2850 0
-8800 1532 -2848 0
-8800 1532 -2846 0
-8800 1532 -2844 0
-8800 1532 -2842 0
-8800 1532 -2840 0
-8800 1532 -2838 0
-8800 1532 -2836 0
-8800 1532 -2834 0
-8800 1532 -2832 0
-8800 1532 -2830 0
-8800 1532 -2828 0
-8800 1532 -2826 0
-8800 1532 -2824 0
-8800 1532 -2822 0
-8800 1532 -2820 0
-8800 1532 -2818 0
-8800 1532 -2816 0
-8800 1532 -2814 0
-8800 1532 -2812 0
-8800 1532 -2810 0
-8800 1532 -2808 0
-8800 1532 -2806 0
-8800 1532 -2804 0
-8800 1532 -2802 0
-8800 1532 -2800 0
-8800 1532 -2798 0
-8800 1532 -2796 0
-8800 1532 -2794 0
-8800 1532 -2792 0
-8800 1532 -2790 0
-8800 1532 -2788 0
-8800 1532 -2786 0
-8800 1532 -2784 0
-8800 1532 -2782 0
-8800 1532 -2780 0
-8800 1532 -2778 0
-8800 1532 -2776 0
-8800 1532 -2774 0
-8800 1532 -2772 0
-8800 1532 -2770 0
-8800 1532 -2768 0
-8800 1532 -2766 0
-8800 1532 -2764 0
-8800 1532 -2762 0
-8800 1532 -2760 0
-8800 1532 -2758 0
-8800 1532 -2756 0
-8800 1532 -2754 0
-8800 1532 -2752 0
-8800 1532 -2750 0
-8800 1532 -2748 0
-8800 1532 -2746 0
-8800 1532 -2744 0
-8800 1532 -2742 0
-8800 1532 -2740 0
-8800 1532 -2738 0
-8800 1532 -2736 0
-8800 1532 -2734 0
-8800 1532 -2732 0
-8800 1532 -2730 0
-8800 1532 -2728 0
-8800 1532 -2726 0
-8800 1532 -2724 0
-8800 1532 -2722 0
-8800 1532 -2720 0
-8800 1532 -2718 0
-8800 1532 -2716 0
-8800 1532 -2714 0
-8800 1532 -2712 0
-8800 1532 -2710 0
-8800 1532 -2708 0
-8800 1532 -2706 0
-8800 1532 -2704 0
-8800 1532 -2702 0
-8800 1532 -2700 0
-8800 1532 -2698 0
-8800 1532 -2696 0
-8800 1532 -2695 0
-8800 1534 -3167 0
-8800 1534 -2948 -3169 0
-8800 1534 -2946 -3171 0
-8800 1534 -2944 -3173 0
-8800 1534 -2942 -3175 0
-8800 1534 -2940 -3177 0
-8800 1534 -2938 -3179 0
-8800 1534 -2936 -3181 0
-8800 1534 -2934 -3183 0
-8800 1534 -2932 -3185 0
-8800 1534 -2930 -3187 0
-8800 1534 -2928 -3189 0
-8800 1534 -2926 -3191 0
-8800 1534 -2924 -3193 0
-8800 1534 -2922 -3195 0
-8800 1534 -2920 -3197 0
-8800 1534 -2918 -3199 0
-8800 1534 -2916 -3201 0
-8800 1534 -2914 -3203 0
-8800 1534 -2912 0
-8800 1534 -2910 0
-8800 1534 -2908 0
-8800 1534 -2906 0
-8800 1534 -2904 0
-8800 1534 -2902 0
-8800 1534 -2900 0
-8800 1534 -2898 0
-8800 1534 -2896 0
-8800 1534 -2894 0
-8800 1534 -2892 0
-8800 1534 -2890 0
-8800 1534 -2888 0
-8800 1534 -2886 0
-8800 1534 -2884 0
-8800 1534 -2882 0
-8800 1534 -2880 0
-8800 1534 -2878 0
-8800 1534 -2876 0
-8800 1534 -2874 0
-8800 1534 -2872 0
-8800 1534 -2870 0
-8800 1534 -2868 0
-8800 1534 -2866 0
-8800 1534 -2864 0
-8800 1534 -2862 0
-8800 1534 -2860 0
-8800 1534 -2858 0
-8800 1534 -2856 0
-8800 1534 -2854 0
-8800 1534 -2852 0
-8800 1534 -2850 0
-8800 1534 -2848 0
-8800 1534 -2846 0
-8800 1534 -2844 0
-8800 1534 -2842 0
-8800 1534 -2840 0
-8800 1534 -2838 0
-8800 1534 -2836 0
-8800 1534 -2834 0
-8800 1534 -2832 0
-8800 1534 -2830 0
-8800 1534 -2828 0
-8800 1534 -2826 0
-8800 1534 -2824 0
-8800 1534 -2822 0
-8800 1534 -2820 0
-8800 1534 -2818 0
-8800 1534 -2816 0
-8800 1534 -2814 0
-8800 1534 -2812 0
-8800 1534 -2810 0
-8800 1534 -2808 0
-8800 1534 -2806 0
-8800 1534 -2804 0
-8800 1534 -2802 0
-8800 1534 -2800 0
-8800 1534 -2798 0
-8800 1534 -2796 0
-8800 1534 -2794 0
-8800 1534 -2792 0
-8800 1534 -2790 0
-8800 1534 -2788 0
-8800 1534 -2786 0
-8800 1534 -2784 0
-8800 1534 -2782 0
-8800 1534 -2780 0
-8800 1534 -2778 0
-8800 1534 -2776 0
-8800 1534 -2774 0
-8800 1534 -2772 0
-8800 1534 -2770 0
-8800 1534 -2768 0
-8800 1534 -2766 0
-8800 1534 -2764 0
-8800 1534 -2762 0
-8800 1534 -2760 0
-8800 1534 -2758 0
-8800 1534 -2756 0
-8800 1534 -2754 0
-8800 1534 -2752 0
-8800 1534 -2750 0
-8800 1534 -2748 0
-8800 1534 -2746 0
-8800 1534 -2744 0
-8800 1534 -2742 0
-8800 1534 -2740 0
-8800 1534 -2738 0
-8800 1534 -2736 0
-8800 1534 -2734 0
-8800 1534 -2732 0
-8800 1534 -2730 0
-8800 1534 -2728 0
-8800 1534 -2726 0
-8800 1534 -2724 0
-8800 1534 -2722 0
-8800 1534 -2720 0
-8800 1534 -2718 0
-8800 1534 -2716 0
-8800 1534 -2714 0
-8800 1534 -2712 0
-8800 1534 -2710 0
-8800 1534 -2708 0
-8800 1534 -2706 0
-8800 1534 -2704 0
-8800 1534 -2702 0
-8800 1534 -2700 0
-8800 1534 -2698 0
-8800 1534 -2696 0
-8800 1534 -2695 0
-8800 1536 -3169 0
-8800 1536 -2948 -3171 0
-8800 1536 -2946 -3173 0
-8800 1536 -2944 -3175 0
-8800 1536 -2942 -3177 0
-8800 1536 -2940 -3179 0
-8800 1536 -2938 -3181 0
-8800 1536 -2936 -3183 0
-8800 1536 -2934 -3185 0
-8800 1536 -2932 -3187 0
-8800 1536 -2930 -3189 0
-8800 1536 -2928 -3191 0
-8800 1536 -2926 -3193 0
-8800 1536 -2924 -3195 0
-8800 1536 -2922 -3197 0
-8800 1536 -2920 -3199 0
-8800 1536 -2918 -3201 0
-8800 1536 -2916 -3203 0
-8800 1536 -2914 0
-8800 1536 -2912 0
-8800 1536 -2910 0
-8800 1536 -2908 0
-8800 1536 -2906 0
-8800 1536 -2904 0
-8800 1536 -2902 0
-8800 1536 -2900 0
-8800 1536 -2898 0
-8800 1536 -2896 0
-8800 1536 -2894 0
-8800 1536 -2892 0
-8800 1536 -2890 0
-8800 1536 -2888 0
-8800 1536 -2886 0
-8800 1536 -2884 0
-8800 1536 -2882 0
-8800 1536 -2880 0
-8800 1536 -2878 0
-8800 1536 -2876 0
-8800 1536 -2874 0
-8800 1536 -2872 0
-8800 1536 -2870 0
-8800 1536 -2868 0
-8800 1536 -2866 0
-8800 1536 -2864 0
-8800 1536 -2862 0
-8800 1536 -2860 0
-8800 1536 -2858 0
-8800 1536 -2856 0
-8800 1536 -2854 0
-8800 1536 -2852 0
-8800 1536 -2850 0
-8800 1536 -2848 0
-8800 1536 -2846 0
-8800 1536 -2844 0
-8800 1536 -2842 0
-8800 1536 -2840 0
-8800 1536 -2838 0
-8800 1536 -2836 0
-8800 1536 -2834 0
-8800 1536 -2832 0
-8800 1536 -2830 0
-8800 1536 -2828 0
-8800 1536 -2826 0
-8800 1536 -2824 0
-8800 1536 -2822 0
-8800 1536 -2820 0
-8800 1536 -2818 0
-8800 1536 -2816 0
-8800 1536 -2814 0
-8800 1536 -2812 0
-8800 1536 -2810 0
-8800 1536 -2808 0
-8800 1536 -2806 0
-8800 1536 -2804 0
-8800 1536 -2802 0
-8800 1536 -2800 0
-8800 1536 -2798 0
-8800 1536 -2796 0
-8800 1536 -2794 0
-8800 1536 -2792 0
-8800 1536 -2790 0
-8800 1536 -2788 0
-8800 1536 -2786 0
-8800 1536 -2784 0
-8800 1536 -2782 0
-8800 1536 -2780 0
-8800 1536 -2778 0
-8800 1536 -2776 0
-8800 1536 -2774 0
-8800 1536 -2772 0
-8800 1536 -2770 0
-8800 1536 -2768 0
-8800 1536 -2766 0
-8800 1536 -2764 0
-8800 1536 -2762 0
-8800 1536 -2760 0
-8800 1536 -2758 0
-8800 1536 -2756 0
-8800 1536 -2754 0
-8800 1536 -2752 0
-8800 1536 -2750 0
-8800 1536 -2748 0
-8800 1536 -2746 0
-8800 1536 -2744 0
-8800 1536 -2742 0
-8800 1536 -2740 0
-8800 1536 -2738 0
-8800 1536 -2736 0
-8800 1536 -2734 0
-8800 1536 -2732 0
-8800 1536 -2730 0
-8800 1536 -2728 0
-8800 1536 -2726 0
-8800 1536 -2724 0
-8800 1536 -2722 0
-8800 1536 -2720 0
-8800 1536 -2718 0
-8800 1536 -2716 0
-8800 1536 -2714 0
-8800 1536 -2712 0
-8800 1536 -2710 0
-8800 1536 -2708 0
-8800 1536 -2706 0
-8800 1536 -2704 0
-8800 1536 -2702 0
-8800 1536 -2700 0
-8800 1536 -2698 0
-8800 1536 -2696 0
-8800 1536 -2695 0
-8800 1538 -3171 0
-8800 1538 -2948 -3173 0
-8800 1538 -2946 -3175 0
-8800 1538 -2944 -3177 0
-8800 1538 -2942 -3179 0
-8800 1538 -2940 -3181 0
-8800 1538 -2938 -3183 0
-8800 1538 -2936 -3185 0
-8800 1538 -2934 -3187 0
-8800 1538 -2932 -3189 0
-8800 1538 -2930 -3191 0
-8800 1538 -2928 -3193 0
-8800 1538 -2926 -3195 0
-8800 1538 -2924 -3197 0
-8800 1538 -2922 -3199 0
-8800 1538 -2920 -3201 0
-8800 1538 -2918 -3203 0
-8800 1538 -2916 0
-8800 1538 -2914 0
-8800 1538 -2912 0
-8800 1538 -2910 0
-8800 1538 -2908 0
-8800 1538 -2906 0
-8800 1538 -2904 0
-8800 1538 -2902 0
-8800 1538 -2900 0
-8800 1538 -2898 0
-8800 1538 -2896 0
-8800 1538 -2894 0
-8800 1538 -2892 0
-8800 1538 -2890 0
-8800 1538 -2888 0
-8800 1538 -2886 0
-8800 1538 -2884 0
-8800 1538 -2882 0
-8800 1538 -2880 0
-8800 1538 -2878 0
-8800 1538 -2876 0
-8800 1538 -2874 0
-8800 1538 -2872 0
-8800 1538 -2870 0
-8800 1538 -2868 0
-8800 1538 -2866 0
-8800 1538 -2864 0
-8800 1538 -2862 0
-8800 1538 -2860 0
-8800 1538 -2858 0
-8800 1538 -2856 0
-8800 1538 -2854 0
-8800 1538 -2852 0
-8800 1538 -2850 0
-8800 1538 -2848 0
-8800 1538 -2846 0
-8800 1538 -2844 0
-8800 1538 -2842 0
-8800 1538 -2840 0
-8800 1538 -2838 0
-8800 1538 -2836 0
-8800 1538 -2834 0
-8800 1538 -2832 0
-8800 1538 -2830 0
-8800 1538 -2828 0
-8800 1538 -2826 0
-8800 1538 -2824 0
-8800 1538 -2822 0
-8800 1538 -2820 0
-8800 1538 -2818 0
-8800 1538 -2816 0
-8800 1538 -2814 0
-8800 1538 -2812 0
-8800 1538 -2810 0
-8800 1538 -2808 0
-8800 1538 -2806 0
-8800 1538 -2804 0
-8800 1538 -2802 0
-8800 1538 -2800 0
-8800 1538 -2798 0
-8800 1538 -2796 0
-8800 1538 -2794 0
-8800 1538 -2792 0
-8800 1538 -2790 0
-8800 1538 -2788 0
-8800 1538 -2786 0
-8800 1538 -2784 0
-8800 1538 -2782 0
-8800 1538 -2780 0
-8800 1538 -2778 0
-8800 1538 -2776 0
-8800 1538 -2774 0
-8800 1538 -2772 0
-8800 1538 -2770 0
-8800 1538 -2768 0
-8800 1538 -2766 0
-8800 1538 -2764 0
-8800 1538 -2762 0
-8800 1538 -2760 0
-8800 1538 -2758 0
-8800 1538 -2756 0
-8800 1538 -2754 0
-8800 1538 -2752 0
-8800 1538 -2750 0
-8800 1538 -2748 0
-8800 1538 -2746 0
-8800 1538 -2744 0
-8800 1538 -2742 0
-8800 1538 -2740 0
-8800 1538 -2738 0
-8800 1538 -2736 0
-8800 1538 -2734 0
-8800 1538 -2732 0
-8800 1538 -2730 0
-8800 1538 -2728 0
-8800 1538 -2726 0
-8800 1538 -2724 0
-8800 1538 -2722 0
-8800 1538 -2720 0
-8800 1538 -2718 0
-8800 1538 -2716 0
-8800 1538 -2714 0
-8800 1538 -2712 0
-8800 1538 -2710 0
-8800 1538 -2708 0
-8800 1538 -2706 0
-8800 1538 -2704 0
-8800 1538 -2702 0
-8800 1538 -2700 0
-8800 1538 -2698 0
-8800 1538 -2696 0
-8800 1538 -2695 0
-8800 1540 -3173 0
-8800 1540 -2948 -3175 0
-8800 1540 -2946 -3177 0
-8800 1540 -2944 -3179 0
-8800 1540 -2942 -3181 0
-8800 1540 -2940 -3183 0
-8800 1540 -2938 -3185 0
-8800 1540 -2936 -3187 0
-8800 1540 -2934 -3189 0
-8800 1540 -2932 -3191 0
-8800 1540 -2930 -3193 0
-8800 1540 -2928 -3195 0
-8800 1540 -2926 -3197 0
-8800 1540 -2924 -3199 0
-8800 1540 -2922 -3201 0
-8800 1540 -2920 -3203 0
-8800 1540 -2918 0
-8800 1540 -2916 0
-8800 1540 -2914 0
-8800 1540 -2912 0
-8800 1540 -2910 0
-8800 1540 -2908 0
-8800 1540 -2906 0
-8800 1540 -2904 0
-8800 1540 -2902 0
-8800 1540 -2900 0
-8800 1540 -2898 0
-8800 1540 -2896 0
-8800 1540 -2894 0
-8800 1540 -2892 0
-8800 1540 -2890 0
-8800 1540 -2888 0
-8800 1540 -2886 0
-8800 1540 -2884 0
-8800 1540 -2882 0
-8800 1540 -2880 0
-8800 1540 -2878 0
-8800 1540 -2876 0
-8800 1540 -2874 0
-8800 1540 -2872 0
-8800 1540 -2870 0
-8800 1540 -2868 0
-8800 1540 -2866 0
-8800 1540 -2864 0
-8800 1540 -2862 0
-8800 1540 -2860 0
-8800 1540 -2858 0
-8800 1540 -2856 0
-8800 1540 -2854 0
-8800 1540 -2852 0
-8800 1540 -2850 0
-8800 1540 -2848 0
-8800 1540 -2846 0
-8800 1540 -2844 0
-8800 1540 -2842 0
-8800 1540 -2840 0
-8800 1540 -2838 0
-8800 1540 -2836 0
-8800 1540 -2834 0
-8800 1540 -2832 0
-8800 1540 -2830 0
-8800 1540 -2828 0
-8800 1540 -2826 0
-8800 1540 -2824 0
-8800 1540 -2822 0
-8800 1540 -2820 0
-8800 1540 -2818 0
-8800 1540 -2816 0
-8800 1540 -2814 0
-8800 1540 -2812 0
-8800 1540 -2810 0
-8800 1540 -2808 0
-8800 1540 -2806 0
-8800 1540 -2804 0
-8800 1540 -2802 0
-8800 1540 -2800 0
-8800 1540 -2798 0
-8800 1540 -2796 0
-8800 1540 -2794 0
-8800 1540 -2792 0
-8800 1540 -2790 0
-8800 1540 -2788 0
-8800 1540 -2786 0
-8800 1540 -2784 0
-8800 1540 -2782 0
-8800 1540 -2780 0
-8800 1540 -2778 0
-8800 1540 -2776 0
-8800 1540 -2774 0
-8800 1540 -2772 0
-8800 1540 -2770 0
-8800 1540 -2768 0
-8800 1540 -2766 0
-8800 1540 -2764 0
-8800 1540 -2762 0
-8800 1540 -2760 0
-8800 1540 -2758 0
-8800 1540 -2756 0
-8800 1540 -2754 0
-8800 1540 -2752 0
-8800 1540 -2750 0
-8800 1540 -2748 0
-8800 1540 -2746 0
-8800 1540 -2744 0
-8800 1540 -2742 0
-8800 1540 -2740 0
-8800 1540 -2738 0
-8800 1540 -2736 0
-8800 1540 -2734 0
-8800 1540 -2732 0
-8800 1540 -2730 0
-8800 1540 -2728 0
-8800 1540 -2726 0
-8800 1540 -2724 0
-8800 1540 -2722 0
-8800 1540 -2720 0
-8800 1540 -2718 0
-8800 1540 -2716 0
-8800 1540 -2714 0
-8800 1540 -2712 0
-8800 1540 -2710 0
-8800 1540 -2708 0
-8800 1540 -2706 0
-8800 1540 -2704 0
-8800 1540 -2702 0
-8800 1540 -2700 0
-8800 1540 -2698 0
-8800 1540 -2696 0
-8800 1540 -2695 0
-8800 1542 -3175 0
-8800 1542 -2948 -3177 0
-8800 1542 -2946 -3179 0
-8800 1542 -2944 -3181 0
-8800 1542 -2942 -3183 0
-8800 1542 -2940 -3185 0
-8800 1542 -2938 -3187 0
-8800 1542 -2936 -3189 0
-8800 1542 -2934 -3191 0
-8800 1542 -2932 -3193 0
-8800 1542 -2930 -3195 0
-8800 1542 -2928 -3197 0
-8800 1542 -2926 -3199 0
-8800 1542 -2924 -3201 0
-8800 1542 -2922 -3203 0
-8800 1542 -2920 0
-8800 1542 -2918 0
-8800 1542 -2916 0
-8800 1542 -2914 0
-8800 1542 -2912 0
-8800 1542 -2910 0
-8800 1542 -2908 0
-8800 1542 -2906 0
-8800 1542 -2904 0
-8800 1542 -2902 0
-8800 1542 -2900 0
-8800 1542 -2898 0
-8800 1542 -2896 0
-8800 1542 -2894 0
-8800 1542 -2892 0
-8800 1542 -2890 0
-8800 1542 -2888 0
-8800 1542 -2886 0
-8800 1542 -2884 0
-8800 1542 -2882 0
-8800 1542 -2880 0
-8800 1542 -2878 0
-8800 1542 -2876 0
-8800 1542 -2874 0
-8800 1542 -2872 0
-8800 1542 -2870 0
-8800 1542 -2868 0
-8800 1542 -2866 0
-8800 1542 -2864 0
-8800 1542 -2862 0
-8800 1542 -2860 0
-8800 1542 -2858 0
-8800 1542 -2856 0
-8800 1542 -2854 0
-8800 1542 -2852 0
-8800 1542 -2850 0
-8800 1542 -2848 0
-8800 1542 -2846 0
-8800 1542 -2844 0
-8800 1542 -2842 0
-8800 1542 -2840 0
-8800 1542 -2838 0
-8800 1542 -2836 0
-8800 1542 -2834 0
-8800 1542 -2832 0
-8800 1542 -2830 0
-8800 1542 -2828 0
-8800 1542 -2826 0
-8800 1542 -2824 0
-8800 1542 -2822 0
-8800 1542 -2820 0
-8800 1542 -2818 0
-8800 1542 -2816 0
-8800 1542 -2814 0
-8800 1542 -2812 0
-8800 1542 -2810 0
-8800 1542 -2808 0
-8800 1542 -2806 0
-8800 1542 -2804 0
-8800 1542 -2802 0
-8800 1542 -2800 0
-8800 1542 -2798 0
-8800 1542 -2796 0
-8800 1542 -2794 0
-8800 1542 -2792 0
-8800 1542 -2790 0
-8800 1542 -2788 0
-8800 1542 -2786 0
-8800 1542 -2784 0
-8800 1542 -2782 0
-8800 1542 -2780 0
-8800 1542 -2778 0
-8800 1542 -2776 0
-8800 1542 -2774 0
-8800 1542 -2772 0
-8800 1542 -2770 0
-8800 1542 -2768 0
-8800 1542 -2766 0
-8800 1542 -2764 0
-8800 1542 -2762 0
-8800 1542 -2760 0
-8800 1542 -2758 0
-8800 1542 -2756 0
-8800 1542 -2754 0
-8800 1542 -2752 0
-8800 1542 -2750 0
-8800 1542 -2748 0
-8800 1542 -2746 0
-8800 1542 -2744 0
-8800 1542 -2742 0
-8800 1542 -2740 0
-8800 1542 -2738 0
-8800 1542 -2736 0
-8800 1542 -2734 0
-8800 1542 -2732 0
-8800 1542 -2730 0
-8800 1542 -2728 0
-8800 1542 -2726 0
-8800 1542 -2724 0
-8800 1542 -2722 0
-8800 1542 -2720 0
-8800 1542 -2718 0
-8800 1542 -2716 0
-8800 1542 -2714 0
-8800 1542 -2712 0
-8800 1542 -2710 0
-8800 1542 -2708 0
-8800 1542 -2706 0
-8800 1542 -2704 0
-8800 1542 -2702 0
-8800 1542 -2700 0
-8800 1542 -2698 0
-8800 1542 -2696 0
-8800 1542 -2695 0
-8800 1544 -3177 0
-8800 1544 -2948 -3179 0
-8800 1544 -2946 -3181 0
-8800 1544 -2944 -3183 0
-8800 1544 -2942 -3185 0
-8800 1544 -2940 -3187 0
-8800 1544 -2938 -3189 0
-8800 1544 -2936 -3191 0
-8800 1544 -2934 -3193 0
-8800 1544 -2932 -3195 0
-8800 1544 -2930 -3197 0
-8800 1544 -2928 -3199 0
-8800 1544 -2926 -3201 0
-8800 1544 -2924 -3203 0
-8800 1544 -2922 0
-8800 1544 -2920 0
-8800 1544 -2918 0
-8800 1544 -2916 0
-8800 1544 -2914 0
-8800 1544 -2912 0
-8800 1544 -2910 0
-8800 1544 -2908 0
-8800 1544 -2906 0
-8800 1544 -2904 0
-8800 1544 -2902 0
-8800 1544 -2900 0
-8800 1544 -2898 0
-8800 1544 -2896 0
-8800 1544 -2894 0
-8800 1544 -2892 0
-8800 1544 -2890 0
-8800 1544 -2888 0
-8800 1544 -2886 0
-8800 1544 -2884 0
-8800 1544 -2882 0
-8800 1544 -2880 0
-8800 1544 -2878 0
-8800 1544 -2876 0
-8800 1544 -2874 0
-8800 1544 -2872 0
-8800 1544 -2870 0
-8800 1544 -2868 0
-8800 1544 -2866 0
-8800 1544 -2864 0
-8800 1544 -2862 0
-8800 1544 -2860 0
-8800 1544 -2858 0
-8800 1544 -2856 0
-8800 1544 -2854 0
-8800 1544 -2852 0
-8800 1544 -2850 0
-8800 1544 -2848 0
-8800 1544 -2846 0
-8800 1544 -2844 0
-8800 1544 -2842 0
-8800 1544 -2840 0
-8800 1544 -2838 0
-8800 1544 -2836 0
-8800 1544 -2834 0
-8800 1544 -2832 0
-8800 1544 -2830 0
-8800 1544 -2828 0
-8800 1544 -2826 0
-8800 1544 -2824 0
-8800 1544 -2822 0
-8800 1544 -2820 0
-8800 1544 -2818 0
-8800 1544 -2816 0
-8800 1544 -2814 0
-8800 1544 -2812 0
-8800 1544 -2810 0
-8800 1544 -2808 0
-8800 1544 -2806 0
-8800 1544 -2804 0
-8800 1544 -2802 0
-8800 1544 -2800 0
-8800 1544 -2798 0
-8800 1544 -2796 0
-8800 1544 -2794 0
-8800 1544 -2792 0
-8800 1544 -2790 0
-8800 1544 -2788 0
-8800 1544 -2786 0
-8800 1544 -2784 0
-8800 1544 -2782 0
-8800 1544 -2780 0
-8800 1544 -2778 0
-8800 1544 -2776 0
-8800 1544 -2774 0
-8800 1544 -2772 0
-8800 1544 -2770 0
-8800 1544 -2768 0
-8800 1544 -2766 0
-8800 1544 -2764 0
-8800 1544 -2762 0
-8800 1544 -2760 0
-8800 1544 -2758 0
-8800 1544 -2756 0
-8800 1544 -2754 0
-8800 1544 -2752 0
-8800 1544 -2750 0
-8800 1544 -2748 0
-8800 1544 -2746 0
-8800 1544 -2744 0
-8800 1544 -2742 0
-8800 1544 -2740 0
-8800 1544 -2738 0
-8800 1544 -2736 0
-8800 1544 -2734 0
-8800 1544 -2732 0
-8800 1544 -2730 0
-8800 1544 -2728 0
-8800 1544 -2726 0
-8800 1544 -2724 0
-8800 1544 -2722 0
-8800 1544 -2720 0
-8800 1544 -2718 0
-8800 1544 -2716 0
-8800 1544 -2714 0
-8800 1544 -2712 0
-8800 1544 -2710 0
-8800 1544 -2708 0
-8800 1544 -2706 0
-8800 1544 -2704 0
-8800 1544 -2702 0
-8800 1544 -2700 0
-8800 1544 -2698 0
-8800 1544 -2696 0
-8800 1544 -2695 0
-8800 1546 -3179 0
-8800 1546 -2948 -3181 0
-8800 1546 -2946 -3183 0
-8800 1546 -2944 -3185 0
-8800 1546 -2942 -3187 0
-8800 1546 -2940 -3189 0
-8800 1546 -2938 -3191 0
-8800 1546 -2936 -3193 0
-8800 1546 -2934 -3195 0
-8800 1546 -2932 -3197 0
-8800 1546 -2930 -3199 0
-8800 1546 -2928 -3201 0
-8800 1546 -2926 -3203 0
-8800 1546 -2924 0
-8800 1546 -2922 0
-8800 1546 -2920 0
-8800 1546 -2918 0
-8800 1546 -2916 0
-8800 1546 -2914 0
-8800 1546 -2912 0
-8800 1546 -2910 0
-8800 1546 -2908 0
-8800 1546 -2906 0
-8800 1546 -2904 0
-8800 1546 -2902 0
-8800 1546 -2900 0
-8800 1546 -2898 0
-8800 1546 -2896 0
-8800 1546 -2894 0
-8800 1546 -2892 0
-8800 1546 -2890 0
-8800 1546 -2888 0
-8800 1546 -2886 0
-8800 1546 -2884 0
-8800 1546 -2882 0
-8800 1546 -2880 0
-8800 1546 -2878 0
-8800 1546 -2876 0
-8800 1546 -2874 0
-8800 1546 -2872 0
-8800 1546 -2870 0
-8800 1546 -2868 0
-8800 1546 -2866 0
-8800 1546 -2864 0
-8800 1546 -2862 0
-8800 1546 -2860 0
-8800 1546 -2858 0
-8800 1546 -2856 0
-8800 1546 -2854 0
-8800 1546 -2852 0
-8800 1546 -2850 0
-8800 1546 -2848 0
-8800 1546 -2846 0
-8800 1546 -2844 0
-8800 1546 -2842 0
-8800 1546 -2840 0
-8800 1546 -2838 0
-8800 1546 -2836 0
-8800 1546 -2834 0
-8800 1546 -2832 0
-8800 1546 -2830 0
-8800 1546 -2828 0
-8800 1546 -2826 0
-8800 1546 -2824 0
-8800 1546 -2822 0
-8800 1546 -2820 0
-8800 1546 -2818 0
-8800 1546 -2816 0
-8800 1546 -2814 0
-8800 1546 -2812 0
-8800 1546 -2810 0
-8800 1546 -2808 0
-8800 1546 -2806 0
-8800 1546 -2804 0
-8800 1546 -2802 0
-8800 1546 -2800 0
-8800 1546 -2798 0
-8800 1546 -2796 0
-8800 1546 -2794 0
-8800 1546 -2792 0
-8800 1546 -2790 0
-8800 1546 -2788 0
-8800 1546 -2786 0
-8800 1546 -2784 0
-8800 1546 -2782 0
-8800 1546 -2780 0
-8800 1546 -2778 0
-8800 1546 -2776 0
-8800 1546 -2774 0
-8800 1546 -2772 0
-8800 1546 -2770 0
-8800 1546 -2768 0
-8800 1546 -2766 0
-8800 1546 -2764 0
-8800 1546 -2762 0
-8800 1546 -2760 0
-8800 1546 -2758 0
-8800 1546 -2756 0
-8800 1546 -2754 0
-8800 1546 -2752 0
-8800 1546 -2750 0
-8800 1546 -2748 0
-8800 1546 -2746 0
-8800 1546 -2744 0
-8800 1546 -2742 0
-8800 1546 -2740 0
-8800 1546 -2738 0
-8800 1546 -2736 0
-8800 1546 -2734 0
-8800 1546 -2732 0
-8800 1546 -2730 0
-8800 1546 -2728 0
-8800 1546 -2726 0
-8800 1546 -2724 0
-8800 1546 -2722 0
-8800 1546 -2720 0
-8800 1546 -2718 0
-8800 1546 -2716 0
-8800 1546 -2714 0
-8800 1546 -2712 0
-8800 1546 -2710 0
-8800 1546 -2708 0
-8800 1546 -2706 0
-8800 1546 -2704 0
-8800 1546 -2702 0
-8800 1546 -2700 0
-8800 1546 -2698 0
-8800 1546 -2696 0
-8800 1546 -2695 0
-8800 1548 -3181 0
-8800 1548 -2948 -3183 0
-8800 1548 -2946 -3185 0
-8800 1548 -2944 -3187 0
-8800 1548 -2942 -3189 0
-8800 1548 -2940 -3191 0
-8800 1548 -2938 -3193 0
-8800 1548 -2936 -3195 0
-8800 1548 -2934 -3197 0
-8800 1548 -2932 -3199 0
-8800 1548 -2930 -3201 0
-8800 1548 -2928 -3203 0
-8800 1548 -2926 0
-8800 1548 -2924 0
-8800 1548 -2922 0
-8800 1548 -2920 0
-8800 1548 -2918 0
-8800 1548 -2916 0
-8800 1548 -2914 0
-8800 1548 -2912 0
-8800 1548 -2910 0
-8800 1548 -2908 0
-8800 1548 -2906 0
-8800 1548 -2904 0
-8800 1548 -2902 0
-8800 1548 -2900 0
-8800 1548 -2898 0
-8800 1548 -2896 0
-8800 1548 -2894 0
-8800 1548 -2892 0
-8800 1548 -2890 0
-8800 1548 -2888 0
-8800 1548 -2886 0
-8800 1548 -2884 0
-8800 1548 -2882 0
-8800 1548 -2880 0
-8800 1548 -2878 0
-8800 1548 -2876 0
-8800 1548 -2874 0
-8800 1548 -2872 0
-8800 1548 -2870 0
-8800 1548 -2868 0
-8800 1548 -2866 0
-8800 1548 -2864 0
-8800 1548 -2862 0
-8800 1548 -2860 0
-8800 1548 -2858 0
-8800 1548 -2856 0
-8800 1548 -2854 0
-8800 1548 -2852 0
-8800 1548 -2850 0
-8800 1548 -2848 0
-8800 1548 -2846 0
-8800 1548 -2844 0
-8800 1548 -2842 0
-8800 1548 -2840 0
-8800 1548 -2838 0
-8800 1548 -2836 0
-8800 1548 -2834 0
-8800 1548 -2832 0
-8800 1548 -2830 0
-8800 1548 -2828 0
-8800 1548 -2826 0
-8800 1548 -2824 0
-8800 1548 -2822 0
-8800 1548 -2820 0
-8800 1548 -2818 0
-8800 1548 -2816 0
-8800 1548 -2814 0
-8800 1548 -2812 0
-8800 1548 -2810 0
-8800 1548 -2808 0
-8800 1548 -2806 0
-8800 1548 -2804 0
-8800 1548 -2802 0
-8800 1548 -2800 0
-8800 1548 -2798 0
-8800 1548 -2796 0
-8800 1548 -2794 0
-8800 1548 -2792 0
-8800 1548 -2790 0
-8800 1548 -2788 0
-8800 1548 -2786 0
-8800 1548 -2784 0
-8800 1548 -2782 0
-8800 1548 -2780 0
-8800 1548 -2778 0
-8800 1548 -2776 0
-8800 1548 -2774 0
-8800 1548 -2772 0
-8800 1548 -2770 0
-8800 1548 -2768 0
-8800 1548 -2766 0
-8800 1548 -2764 0
-8800 1548 -2762 0
-8800 1548 -2760 0
-8800 1548 -2758 0
-8800 1548 -2756 0
-8800 1548 -2754 0
-8800 1548 -2752 0
-8800 1548 -2750 0
-8800 1548 -2748 0
-8800 1548 -2746 0
-8800 1548 -2744 0
-8800 1548 -2742 0
-8800 1548 -2740 0
-8800 1548 -2738 0
-8800 1548 -2736 0
-8800 1548 -2734 0
-8800 1548 -2732 0
-8800 1548 -2730 0
-8800 1548 -2728 0
-8800 1548 -2726 0
-8800 1548 -2724 0
-8800 1548 -2722 0
-8800 1548 -2720 0
-8800 1548 -2718 0
-8800 1548 -2716 0
-8800 1548 -2714 0
-8800 1548 -2712 0
-8800 1548 -2710 0
-8800 1548 -2708 0
-8800 1548 -2706 0
-8800 1548 -2704 0
-8800 1548 -2702 0
-8800 1548 -2700 0
-8800 1548 -2698 0
-8800 1548 -2696 0
-8800 1548 -2695 0
-8800 1550 -3183 0
-8800 1550 -2948 -3185 0
-8800 1550 -2946 -3187 0
-8800 1550 -2944 -3189 0
-8800 1550 -2942 -3191 0
-8800 1550 -2940 -3193 0
-8800 1550 -2938 -3195 0
-8800 1550 -2936 -3197 0
-8800 1550 -2934 -3199 0
-8800 1550 -2932 -3201 0
-8800 1550 -2930 -3203 0
-8800 1550 -2928 0
-8800 1550 -2926 0
-8800 1550 -2924 0
-8800 1550 -2922 0
-8800 1550 -2920 0
-8800 1550 -2918 0
-8800 1550 -2916 0
-8800 1550 -2914 0
-8800 1550 -2912 0
-8800 1550 -2910 0
-8800 1550 -2908 0
-8800 1550 -2906 0
-8800 1550 -2904 0
-8800 1550 -2902 0
-8800 1550 -2900 0
-8800 1550 -2898 0
-8800 1550 -2896 0
-8800 1550 -2894 0
-8800 1550 -2892 0
-8800 1550 -2890 0
-8800 1550 -2888 0
-8800 1550 -2886 0
-8800 1550 -2884 0
-8800 1550 -2882 0
-8800 1550 -2880 0
-8800 1550 -2878 0
-8800 1550 -2876 0
-8800 1550 -2874 0
-8800 1550 -2872 0
-8800 1550 -2870 0
-8800 1550 -2868 0
-8800 1550 -2866 0
-8800 1550 -2864 0
-8800 1550 -2862 0
-8800 1550 -2860 0
-8800 1550 -2858 0
-8800 1550 -2856 0
-8800 1550 -2854 0
-8800 1550 -2852 0
-8800 1550 -2850 0
-8800 1550 -2848 0
-8800 1550 -2846 0
-8800 1550 -2844 0
-8800 1550 -2842 0
-8800 1550 -2840 0
-8800 1550 -2838 0
-8800 1550 -2836 0
-8800 1550 -2834 0
-8800 1550 -2832 0
-8800 1550 -2830 0
-8800 1550 -2828 0
-8800 1550 -2826 0
-8800 1550 -2824 0
-8800 1550 -2822 0
-8800 1550 -2820 0
-8800 1550 -2818 0
-8800 1550 -2816 0
-8800 1550 -2814 0
-8800 1550 -2812 0
-8800 1550 -2810 0
-8800 1550 -2808 0
-8800 1550 -2806 0
-8800 1550 -2804 0
-8800 1550 -2802 0
-8800 1550 -2800 0
-8800 1550 -2798 0
-8800 1550 -2796 0
-8800 1550 -2794 0
-8800 1550 -2792 0
-8800 1550 -2790 0
-8800 1550 -2788 0
-8800 1550 -2786 0
-8800 1550 -2784 0
-8800 1550 -2782 0
-8800 1550 -2780 0
-8800 1550 -2778 0
-8800 1550 -2776 0
-8800 1550 -2774 0
-8800 1550 -2772 0
-8800 1550 -2770 0
-8800 1550 -2768 0
-8800 1550 -2766 0
-8800 1550 -2764 0
-8800 1550 -2762 0
-8800 1550 -2760 0
-8800 1550 -2758 0
-8800 1550 -2756 0
-8800 1550 -2754 0
-8800 1550 -2752 0
-8800 1550 -2750 0
-8800 1550 -2748 0
-8800 1550 -2746 0
-8800 1550 -2744 0
-8800 1550 -2742 0
-8800 1550 -2740 0
-8800 1550 -2738 0
-8800 1550 -2736 0
-8800 1550 -2734 0
-8800 1550 -2732 0
-8800 1550 -2730 0
-8800 1550 -2728 0
-8800 1550 -2726 0
-8800 1550 -2724 0
-8800 1550 -2722 0
-8800 1550 -2720 0
-8800 1550 -2718 0
-8800 1550 -2716 0
-8800 1550 -2714 0
-8800 1550 -2712 0
-8800 1550 -2710 0
-8800 1550 -2708 0
-8800 1550 -2706 0
-8800 1550 -2704 0
-8800 1550 -2702 0
-8800 1550 -2700 0
-8800 1550 -2698 0
-8800 1550 -2696 0
-8800 1550 -2695 0
-8800 1552 -3185 0
-8800 1552 -2948 -3187 0
-8800 1552 -2946 -3189 0
-8800 1552 -2944 -3191 0
-8800 1552 -2942 -3193 0
-8800 1552 -2940 -3195 0
-8800 1552 -2938 -3197 0
-8800 1552 -2936 -3199 0
-8800 1552 -2934 -3201 0
-8800 1552 -2932 -3203 0
-8800 1552 -2930 0
-8800 1552 -2928 0
-8800 1552 -2926 0
-8800 1552 -2924 0
-8800 1552 -2922 0
-8800 1552 -2920 0
-8800 1552 -2918 0
-8800 1552 -2916 0
-8800 1552 -2914 0
-8800 1552 -2912 0
-8800 1552 -2910 0
-8800 1552 -2908 0
-8800 1552 -2906 0
-8800 1552 -2904 0
-8800 1552 -2902 0
-8800 1552 -2900 0
-8800 1552 -2898 0
-8800 1552 -2896 0
-8800 1552 -2894 0
-8800 1552 -2892 0
-8800 1552 -2890 0
-8800 1552 -2888 0
-8800 1552 -2886 0
-8800 1552 -2884 0
-8800 1552 -2882 0
-8800 1552 -2880 0
-8800 1552 -2878 0
-8800 1552 -2876 0
-8800 1552 -2874 0
-8800 1552 -2872 0
-8800 1552 -2870 0
-8800 1552 -2868 0
-8800 1552 -2866 0
-8800 1552 -2864 0
-8800 1552 -2862 0
-8800 1552 -2860 0
-8800 1552 -2858 0
-8800 1552 -2856 0
-8800 1552 -2854 0
-8800 1552 -2852 0
-8800 1552 -2850 0
-8800 1552 -2848 0
-8800 1552 -2846 0
-8800 1552 -2844 0
-8800 1552 -2842 0
-8800 1552 -2840 0
-8800 1552 -2838 0
-8800 1552 -2836 0
-8800 1552 -2834 0
-8800 1552 -2832 0
-8800 1552 -2830 0
-8800 1552 -2828 0
-8800 1552 -2826 0
-8800 1552 -2824 0
-8800 1552 -2822 0
-8800 1552 -2820 0
-8800 1552 -2818 0
-8800 1552 -2816 0
-8800 1552 -2814 0
-8800 1552 -2812 0
-8800 1552 -2810 0
-8800 1552 -2808 0
-8800 1552 -2806 0
-8800 1552 -2804 0
-8800 1552 -2802 0
-8800 1552 -2800 0
-8800 1552 -2798 0
-8800 1552 -2796 0
-8800 1552 -2794 0
-8800 1552 -2792 0
-8800 1552 -2790 0
-8800 1552 -2788 0
-8800 1552 -2786 0
-8800 1552 -2784 0
-8800 1552 -2782 0
-8800 1552 -2780 0
-8800 1552 -2778 0
-8800 1552 -2776 0
-8800 1552 -2774 0
-8800 1552 -2772 0
-8800 1552 -2770 0
-8800 1552 -2768 0
-8800 1552 -2766 0
-8800 1552 -2764 0
-8800 1552 -2762 0
-8800 1552 -2760 0
-8800 1552 -2758 0
-8800 1552 -2756 0
-8800 1552 -2754 0
-8800 1552 -2752 0
-8800 1552 -2750 0
-8800 1552 -2748 0
-8800 1552 -2746 0
-8800 1552 -2744 0
-8800 1552 -2742 0
-8800 1552 -2740 0
-8800 1552 -2738 0
-8800 1552 -2736 0
-8800 1552 -2734 0
-8800 1552 -2732 0
-8800 1552 -2730 0
-8800 1552 -2728 0
-8800 1552 -2726 0
-8800 1552 -2724 0
-8800 1552 -2722 0
-8800 1552 -2720 0
-8800 1552 -2718 0
-8800 1552 -2716 0
-8800 1552 -2714 0
-8800 1552 -2712 0
-8800 1552 -2710 0
-8800 1552 -2708 0
-8800 1552 -2706 0
-8800 1552 -2704 0
-8800 1552 -2702 0
-8800 1552 -2700 0
-8800 1552 -2698 0
-8800 1552 -2696 0
-8800 1552 -2695 0
-8800 1554 -3187 0
-8800 1554 -2948 -3189 0
-8800 1554 -2946 -3191 0
-8800 1554 -2944 -3193 0
-8800 1554 -2942 -3195 0
-8800 1554 -2940 -3197 0
-8800 1554 -2938 -3199 0
-8800 1554 -2936 -3201 0
-8800 1554 -2934 -3203 0
-8800 1554 -2932 0
-8800 1554 -2930 0
-8800 1554 -2928 0
-8800 1554 -2926 0
-8800 1554 -2924 0
-8800 1554 -2922 0
-8800 1554 -2920 0
-8800 1554 -2918 0
-8800 1554 -2916 0
-8800 1554 -2914 0
-8800 1554 -2912 0
-8800 1554 -2910 0
-8800 1554 -2908 0
-8800 1554 -2906 0
-8800 1554 -2904 0
-8800 1554 -2902 0
-8800 1554 -2900 0
-8800 1554 -2898 0
-8800 1554 -2896 0
-8800 1554 -2894 0
-8800 1554 -2892 0
-8800 1554 -2890 0
-8800 1554 -2888 0
-8800 1554 -2886 0
-8800 1554 -2884 0
-8800 1554 -2882 0
-8800 1554 -2880 0
-8800 1554 -2878 0
-8800 1554 -2876 0
-8800 1554 -2874 0
-8800 1554 -2872 0
-8800 1554 -2870 0
-8800 1554 -2868 0
-8800 1554 -2866 0
-8800 1554 -2864 0
-8800 1554 -2862 0
-8800 1554 -2860 0
-8800 1554 -2858 0
-8800 1554 -2856 0
-8800 1554 -2854 0
-8800 1554 -2852 0
-8800 1554 -2850 0
-8800 1554 -2848 0
-8800 1554 -2846 0
-8800 1554 -2844 0
-8800 1554 -2842 0
-8800 1554 -2840 0
-8800 1554 -2838 0
-8800 1554 -2836 0
-8800 1554 -2834 0
-8800 1554 -2832 0
-8800 1554 -2830 0
-8800 1554 -2828 0
-8800 1554 -2826 0
-8800 1554 -2824 0
-8800 1554 -2822 0
-8800 1554 -2820 0
-8800 1554 -2818 0
-8800 1554 -2816 0
-8800 1554 -2814 0
-8800 1554 -2812 0
-8800 1554 -2810 0
-8800 1554 -2808 0
-8800 1554 -2806 0
-8800 1554 -2804 0
-8800 1554 -2802 0
-8800 1554 -2800 0
-8800 1554 -2798 0
-8800 1554 -2796 0
-8800 1554 -2794 0
-8800 1554 -2792 0
-8800 1554 -2790 0
-8800 1554 -2788 0
-8800 1554 -2786 0
-8800 1554 -2784 0
-8800 1554 -2782 0
-8800 1554 -2780 0
-8800 1554 -2778 0
-8800 1554 -2776 0
-8800 1554 -2774 0
-8800 1554 -2772 0
-8800 1554 -2770 0
-8800 1554 -2768 0
-8800 1554 -2766 0
-8800 1554 -2764 0
-8800 1554 -2762 0
-8800 1554 -2760 0
-8800 1554 -2758 0
-8800 1554 -2756 0
-8800 1554 -2754 0
-8800 1554 -2752 0
-8800 1554 -2750 0
-8800 1554 -2748 0
-8800 1554 -2746 0
-8800 1554 -2744 0
-8800 1554 -2742 0
-8800 1554 -2740 0
-8800 1554 -2738 0
-8800 1554 -2736 0
-8800 1554 -2734 0
-8800 1554 -2732 0
-8800 1554 -2730 0
-8800 1554 -2728 0
-8800 1554 -2726 0
-8800 1554 -2724 0
-8800 1554 -2722 0
-8800 1554 -2720 0
-8800 1554 -2718 0
-8800 1554 -2716 0
-8800 1554 -2714 0
-8800 1554 -2712 0
-8800 1554 -2710 0
-8800 1554 -2708 0
-8800 1554 -2706 0
-8800 1554 -2704 0
-8800 1554 -2702 0
-8800 1554 -2700 0
-8800 1554 -2698 0
-8800 1554 -2696 0
-8800 1554 -2695 0
-8800 1556 -3189 0
-8800 1556 -2948 -3191 0
-8800 1556 -2946 -3193 0
-8800 1556 -2944 -3195 0
-8800 1556 -2942 -3197 0
-8800 1556 -2940 -3199 0
-8800 1556 -2938 -3201 0
-8800 1556 -2936 -3203 0
-8800 1556 -2934 0
-8800 1556 -2932 0
-8800 1556 -2930 0
-8800 1556 -2928 0
-8800 1556 -2926 0
-8800 1556 -2924 0
-8800 1556 -2922 0
-8800 1556 -2920 0
-8800 1556 -2918 0
-8800 1556 -2916 0
-8800 1556 -2914 0
-8800 1556 -2912 0
-8800 1556 -2910 0
-8800 1556 -2908 0
-8800 1556 -2906 0
-8800 1556 -2904 0
-8800 1556 -2902 0
-8800 1556 -2900 0
-8800 1556 -2898 0
-8800 1556 -2896 0
-8800 1556 -2894 0
-8800 1556 -2892 0
-8800 1556 -2890 0
-8800 1556 -2888 0
-8800 1556 -2886 0
-8800 1556 -2884 0
-8800 1556 -2882 0
-8800 1556 -2880 0
-8800 1556 -2878 0
-8800 1556 -2876 0
-8800 1556 -2874 0
-8800 1556 -2872 0
-8800 1556 -2870 0
-8800 1556 -2868 0
-8800 1556 -2866 0
-8800 1556 -2864 0
-8800 1556 -2862 0
-8800 1556 -2860 0
-8800 1556 -2858 0
-8800 1556 -2856 0
-8800 1556 -2854 0
-8800 1556 -2852 0
-8800 1556 -2850 0
-8800 1556 -2848 0
-8800 1556 -2846 0
-8800 1556 -2844 0
-8800 1556 -2842 0
-8800 1556 -2840 0
-8800 1556 -2838 0
-8800 1556 -2836 0
-8800 1556 -2834 0
-8800 1556 -2832 0
-8800 1556 -2830 0
-8800 1556 -2828 0
-8800 1556 -2826 0
-8800 1556 -2824 0
-8800 1556 -2822 0
-8800 1556 -2820 0
-8800 1556 -2818 0
-8800 1556 -2816 0
-8800 1556 -2814 0
-8800 1556 -2812 0
-8800 1556 -2810 0
-8800 1556 -2808 0
-8800 1556 -2806 0
-8800 1556 -2804 0
-8800 1556 -2802 0
-8800 1556 -2800 0
-8800 1556 -2798 0
-8800 1556 -2796 0
-8800 1556 -2794 0
-8800 1556 -2792 0
-8800 1556 -2790 0
-8800 1556 -2788 0
-8800 1556 -2786 0
-8800 1556 -2784 0
-8800 1556 -2782 0
-8800 1556 -2780 0
-8800 1556 -2778 0
-8800 1556 -2776 0
-8800 1556 -2774 0
-8800 1556 -2772 0
-8800 1556 -2770 0
-8800 1556 -2768 0
-8800 1556 -2766 0
-8800 1556 -2764 0
-8800 1556 -2762 0
-8800 1556 -2760 0
-8800 1556 -2758 0
-8800 1556 -2756 0
-8800 1556 -2754 0
-8800 1556 -2752 0
-8800 1556 -2750 0
-8800 1556 -2748 0
-8800 1556 -2746 0
-8800 1556 -2744 0
-8800 1556 -2742 0
-8800 1556 -2740 0
-8800 1556 -2738 0
-8800 1556 -2736 0
-8800 1556 -2734 0
-8800 1556 -2732 0
-8800 1556 -2730 0
-8800 1556 -2728 0
-8800 1556 -2726 0
-8800 1556 -2724 0
-8800 1556 -2722 0
-8800 1556 -2720 0
-8800 1556 -2718 0
-8800 1556 -2716 0
-8800 1556 -2714 0
-8800 1556 -2712 0
-8800 1556 -2710 0
-8800 1556 -2708 0
-8800 1556 -2706 0
-8800 1556 -2704 0
-8800 1556 -2702 0
-8800 1556 -2700 0
-8800 1556 -2698 0
-8800 1556 -2696 0
-8800 1556 -2695 0
-8800 1558 -3191 0
-8800 1558 -2948 -3193 0
-8800 1558 -2946 -3195 0
-8800 1558 -2944 -3197 0
-8800 1558 -2942 -3199 0
-8800 1558 -2940 -3201 0
-8800 1558 -2938 -3203 0
-8800 1558 -2936 0
-8800 1558 -2934 0
-8800 1558 -2932 0
-8800 1558 -2930 0
-8800 1558 -2928 0
-8800 1558 -2926 0
-8800 1558 -2924 0
-8800 1558 -2922 0
-8800 1558 -2920 0
-8800 1558 -2918 0
-8800 1558 -2916 0
-8800 1558 -2914 0
-8800 1558 -2912 0
-8800 1558 -2910 0
-8800 1558 -2908 0
-8800 1558 -2906 0
-8800 1558 -2904 0
-8800 1558 -2902 0
-8800 1558 -2900 0
-8800 1558 -2898 0
-8800 1558 -2896 0
-8800 1558 -2894 0
-8800 1558 -2892 0
-8800 1558 -2890 0
-8800 1558 -2888 0
-8800 1558 -2886 0
-8800 1558 -2884 0
-8800 1558 -2882 0
-8800 1558 -2880 0
-8800 1558 -2878 0
-8800 1558 -2876 0
-8800 1558 -2874 0
-8800 1558 -2872 0
-8800 1558 -2870 0
-8800 1558 -2868 0
-8800 1558 -2866 0
-8800 1558 -2864 0
-8800 1558 -2862 0
-8800 1558 -2860 0
-8800 1558 -2858 0
-8800 1558 -2856 0
-8800 1558 -2854 0
-8800 1558 -2852 0
-8800 1558 -2850 0
-8800 1558 -2848 0
-8800 1558 -2846 0
-8800 1558 -2844 0
-8800 1558 -2842 0
-8800 1558 -2840 0
-8800 1558 -2838 0
-8800 1558 -2836 0
-8800 1558 -2834 0
-8800 1558 -2832 0
-8800 1558 -2830 0
-8800 1558 -2828 0
-8800 1558 -2826 0
-8800 1558 -2824 0
-8800 1558 -2822 0
-8800 1558 -2820 0
-8800 1558 -2818 0
-8800 1558 -2816 0
-8800 1558 -2814 0
-8800 1558 -2812 0
-8800 1558 -2810 0
-8800 1558 -2808 0
-8800 1558 -2806 0
-8800 1558 -2804 0
-8800 1558 -2802 0
-8800 1558 -2800 0
-8800 1558 -2798 0
-8800 1558 -2796 0
-8800 1558 -2794 0
-8800 1558 -2792 0
-8800 1558 -2790 0
-8800 1558 -2788 0
-8800 1558 -2786 0
-8800 1558 -2784 0
-8800 1558 -2782 0
-8800 1558 -2780 0
-8800 1558 -2778 0
-8800 1558 -2776 0
-8800 1558 -2774 0
-8800 1558 -2772 0
-8800 1558 -2770 0
-8800 1558 -2768 0
-8800 1558 -2766 0
-8800 1558 -2764 0
-8800 1558 -2762 0
-8800 1558 -2760 0
-8800 1558 -2758 0
-8800 1558 -2756 0
-8800 1558 -2754 0
-8800 1558 -2752 0
-8800 1558 -2750 0
-8800 1558 -2748 0
-8800 1558 -2746 0
-8800 1558 -2744 0
-8800 1558 -2742 0
-8800 1558 -2740 0
-8800 1558 -2738 0
-8800 1558 -2736 0
-8800 1558 -2734 0
-8800 1558 -2732 0
-8800 1558 -2730 0
-8800 1558 -2728 0
-8800 1558 -2726 0
-8800 1558 -2724 0
-8800 1558 -2722 0
-8800 1558 -2720 0
-8800 1558 -2718 0
-8800 1558 -2716 0
-8800 1558 -2714 0
-8800 1558 -2712 0
-8800 1558 -2710 0
-8800 1558 -2708 0
-8800 1558 -2706 0
-8800 1558 -2704 0
-8800 1558 -2702 0
-8800 1558 -2700 0
-8800 1558 -2698 0
-8800 1558 -2696 0
-8800 1558 -2695 0
-8800 1560 -3193 0
-8800 1560 -2948 -3195 0
-8800 1560 -2946 -3197 0
-8800 1560 -2944 -3199 0
-8800 1560 -2942 -3201 0
-8800 1560 -2940 -3203 0
-8800 1560 -2938 0
-8800 1560 -2936 0
-8800 1560 -2934 0
-8800 1560 -2932 0
-8800 1560 -2930 0
-8800 1560 -2928 0
-8800 1560 -2926 0
-8800 1560 -2924 0
-8800 1560 -2922 0
-8800 1560 -2920 0
-8800 1560 -2918 0
-8800 1560 -2916 0
-8800 1560 -2914 0
-8800 1560 -2912 0
-8800 1560 -2910 0
-8800 1560 -2908 0
-8800 1560 -2906 0
-8800 1560 -2904 0
-8800 1560 -2902 0
-8800 1560 -2900 0
-8800 1560 -2898 0
-8800 1560 -2896 0
-8800 1560 -2894 0
-8800 1560 -2892 0
-8800 1560 -2890 0
-8800 1560 -2888 0
-8800 1560 -2886 0
-8800 1560 -2884 0
-8800 1560 -2882 0
-8800 1560 -2880 0
-8800 1560 -2878 0
-8800 1560 -2876 0
-8800 1560 -2874 0
-8800 1560 -2872 0
-8800 1560 -2870 0
-8800 1560 -2868 0
-8800 1560 -2866 0
-8800 1560 -2864 0
-8800 1560 -2862 0
-8800 1560 -2860 0
-8800 1560 -2858 0
-8800 1560 -2856 0
-8800 1560 -2854 0
-8800 1560 -2852 0
-8800 1560 -2850 0
-8800 1560 -2848 0
-8800 1560 -2846 0
-8800 1560 -2844 0
-8800 1560 -2842 0
-8800 1560 -2840 0
-8800 1560 -2838 0
-8800 1560 -2836 0
-8800 1560 -2834 0
-8800 1560 -2832 0
-8800 1560 -2830 0
-8800 1560 -2828 0
-8800 1560 -2826 0
-8800 1560 -2824 0
-8800 1560 -2822 0
-8800 1560 -2820 0
-8800 1560 -2818 0
-8800 1560 -2816 0
-8800 1560 -2814 0
-8800 1560 -2812 0
-8800 1560 -2810 0
-8800 1560 -2808 0
-8800 1560 -2806 0
-8800 1560 -2804 0
-8800 1560 -2802 0
-8800 1560 -2800 0
-8800 1560 -2798 0
-8800 1560 -2796 0
-8800 1560 -2794 0
-8800 1560 -2792 0
-8800 1560 -2790 0
-8800 1560 -2788 0
-8800 1560 -2786 0
-8800 1560 -2784 0
-8800 1560 -2782 0
-8800 1560 -2780 0
-8800 1560 -2778 0
-8800 1560 -2776 0
-8800 1560 -2774 0
-8800 1560 -2772 0
-8800 1560 -2770 0
-8800 1560 -2768 0
-8800 1560 -2766 0
-8800 1560 -2764 0
-8800 1560 -2762 0
-8800 1560 -2760 0
-8800 1560 -2758 0
-8800 1560 -2756 0
-8800 1560 -2754 0
-8800 1560 -2752 0
-8800 1560 -2750 0
-8800 1560 -2748 0
-8800 1560 -2746 0
-8800 1560 -2744 0
-8800 1560 -2742 0
-8800 1560 -2740 0
-8800 1560 -2738 0
-8800 1560 -2736 0
-8800 1560 -2734 0
-8800 1560 -2732 0
-8800 1560 -2730 0
-8800 1560 -2728 0
-8800 1560 -2726 0
-8800 1560 -2724 0
-8800 1560 -2722 0
-8800 1560 -2720 0
-8800 1560 -2718 0
-8800 1560 -2716 0
-8800 1560 -2714 0
-8800 1560 -2712 0
-8800 1560 -2710 0
-8800 1560 -2708 0
-8800 1560 -2706 0
-8800 1560 -2704 0
-8800 1560 -2702 0
-8800 1560 -2700 0
-8800 1560 -2698 0
-8800 1560 -2696 0
-8800 1560 -2695 0
-8800 1562 -3195 0
-8800 1562 -2948 -3197 0
-8800 1562 -2946 -3199 0
-8800 1562 -2944 -3201 0
-8800 1562 -2942 -3203 0
-8800 1562 -2940 0
-8800 1562 -2938 0
-8800 1562 -2936 0
-8800 1562 -2934 0
-8800 1562 -2932 0
-8800 1562 -2930 0
-8800 1562 -2928 0
-8800 1562 -2926 0
-8800 1562 -2924 0
-8800 1562 -2922 0
-8800 1562 -2920 0
-8800 1562 -2918 0
-8800 1562 -2916 0
-8800 1562 -2914 0
-8800 1562 -2912 0
-8800 1562 -2910 0
-8800 1562 -2908 0
-8800 1562 -2906 0
-8800 1562 -2904 0
-8800 1562 -2902 0
-8800 1562 -2900 0
-8800 1562 -2898 0
-8800 1562 -2896 0
-8800 1562 -2894 0
-8800 1562 -2892 0
-8800 1562 -2890 0
-8800 1562 -2888 0
-8800 1562 -2886 0
-8800 1562 -2884 0
-8800 1562 -2882 0
-8800 1562 -2880 0
-8800 1562 -2878 0
-8800 1562 -2876 0
-8800 1562 -2874 0
-8800 1562 -2872 0
-8800 1562 -2870 0
-8800 1562 -2868 0
-8800 1562 -2866 0
-8800 1562 -2864 0
-8800 1562 -2862 0
-8800 1562 -2860 0
-8800 1562 -2858 0
-8800 1562 -2856 0
-8800 1562 -2854 0
-8800 1562 -2852 0
-8800 1562 -2850 0
-8800 1562 -2848 0
-8800 1562 -2846 0
-8800 1562 -2844 0
-8800 1562 -2842 0
-8800 1562 -2840 0
-8800 1562 -2838 0
-8800 1562 -2836 0
-8800 1562 -2834 0
-8800 1562 -2832 0
-8800 1562 -2830 0
-8800 1562 -2828 0
-8800 1562 -2826 0
-8800 1562 -2824 0
-8800 1562 -2822 0
-8800 1562 -2820 0
-8800 1562 -2818 0
-8800 1562 -2816 0
-8800 1562 -2814 0
-8800 1562 -2812 0
-8800 1562 -2810 0
-8800 1562 -2808 0
-8800 1562 -2806 0
-8800 1562 -2804 0
-8800 1562 -2802 0
-8800 1562 -2800 0
-8800 1562 -2798 0
-8800 1562 -2796 0
-8800 1562 -2794 0
-8800 1562 -2792 0
-8800 1562 -2790 0
-8800 1562 -2788 0
-8800 1562 -2786 0
-8800 1562 -2784 0
-8800 1562 -2782 0
-8800 1562 -2780 0
-8800 1562 -2778 0
-8800 1562 -2776 0
-8800 1562 -2774 0
-8800 1562 -2772 0
-8800 1562 -2770 0
-8800 1562 -2768 0
-8800 1562 -2766 0
-8800 1562 -2764 0
-8800 1562 -2762 0
-8800 1562 -2760 0
-8800 1562 -2758 0
-8800 1562 -2756 0
-8800 1562 -2754 0
-8800 1562 -2752 0
-8800 1562 -2750 0
-8800 1562 -2748 0
-8800 1562 -2746 0
-8800 1562 -2744 0
-8800 1562 -2742 0
-8800 1562 -2740 0
-8800 1562 -2738 0
-8800 1562 -2736 0
-8800 1562 -2734 0
-8800 1562 -2732 0
-8800 1562 -2730 0
-8800 1562 -2728 0
-8800 1562 -2726 0
-8800 1562 -2724 0
-8800 1562 -2722 0
-8800 1562 -2720 0
-8800 1562 -2718 0
-8800 1562 -2716 0
-8800 1562 -2714 0
-8800 1562 -2712 0
-8800 1562 -2710 0
-8800 1562 -2708 0
-8800 1562 -2706 0
-8800 1562 -2704 0
-8800 1562 -2702 0
-8800 1562 -2700 0
-8800 1562 -2698 0
-8800 1562 -2696 0
-8800 1562 -2695 0
-8800 1564 -3197 0
-8800 1564 -2948 -3199 0
-8800 1564 -2946 -3201 0
-8800 1564 -2944 -3203 0
-8800 1564 -2942 0
-8800 1564 -2940 0
-8800 1564 -2938 0
-8800 1564 -2936 0
-8800 1564 -2934 0
-8800 1564 -2932 0
-8800 1564 -2930 0
-8800 1564 -2928 0
-8800 1564 -2926 0
-8800 1564 -2924 0
-8800 1564 -2922 0
-8800 1564 -2920 0
-8800 1564 -2918 0
-8800 1564 -2916 0
-8800 1564 -2914 0
-8800 1564 -2912 0
-8800 1564 -2910 0
-8800 1564 -2908 0
-8800 1564 -2906 0
-8800 1564 -2904 0
-8800 1564 -2902 0
-8800 1564 -2900 0
-8800 1564 -2898 0
-8800 1564 -2896 0
-8800 1564 -2894 0
-8800 1564 -2892 0
-8800 1564 -2890 0
-8800 1564 -2888 0
-8800 1564 -2886 0
-8800 1564 -2884 0
-8800 1564 -2882 0
-8800 1564 -2880 0
-8800 1564 -2878 0
-8800 1564 -2876 0
-8800 1564 -2874 0
-8800 1564 -2872 0
-8800 1564 -2870 0
-8800 1564 -2868 0
-8800 1564 -2866 0
-8800 1564 -2864 0
-8800 1564 -2862 0
-8800 1564 -2860 0
-8800 1564 -2858 0
-8800 1564 -2856 0
-8800 1564 -2854 0
-8800 1564 -2852 0
-8800 1564 -2850 0
-8800 1564 -2848 0
-8800 1564 -2846 0
-8800 1564 -2844 0
-8800 1564 -2842 0
-8800 1564 -2840 0
-8800 1564 -2838 0
-8800 1564 -2836 0
-8800 1564 -2834 0
-8800 1564 -2832 0
-8800 1564 -2830 0
-8800 1564 -2828 0
-8800 1564 -2826 0
-8800 1564 -2824 0
-8800 1564 -2822 0
-8800 1564 -2820 0
-8800 1564 -2818 0
-8800 1564 -2816 0
-8800 1564 -2814 0
-8800 1564 -2812 0
-8800 1564 -2810 0
-8800 1564 -2808 0
-8800 1564 -2806 0
-8800 1564 -2804 0
-8800 1564 -2802 0
-8800 1564 -2800 0
-8800 1564 -2798 0
-8800 1564 -2796 0
-8800 1564 -2794 0
-8800 1564 -2792 0
-8800 1564 -2790 0
-8800 1564 -2788 0
-8800 1564 -2786 0
-8800 1564 -2784 0
-8800 1564 -2782 0
-8800 1564 -2780 0
-8800 1564 -2778 0
-8800 1564 -2776 0
-8800 1564 -2774 0
-8800 1564 -2772 0
-8800 1564 -2770 0
-8800 1564 -2768 0
-8800 1564 -2766 0
-8800 1564 -2764 0
-8800 1564 -2762 0
-8800 1564 -2760 0
-8800 1564 -2758 0
-8800 1564 -2756 0
-8800 1564 -2754 0
-8800 1564 -2752 0
-8800 1564 -2750 0
-8800 1564 -2748 0
-8800 1564 -2746 0
-8800 1564 -2744 0
-8800 1564 -2742 0
-8800 1564 -2740 0
-8800 1564 -2738 0
-8800 1564 -2736 0
-8800 1564 -2734 0
-8800 1564 -2732 0
-8800 1564 -2730 0
-8800 1564 -2728 0
-8800 1564 -2726 0
-8800 1564 -2724 0
-8800 1564 -2722 0
-8800 1564 -2720 0
-8800 1564 -2718 0
-8800 1564 -2716 0
-8800 1564 -2714 0
-8800 1564 -2712 0
-8800 1564 -2710 0
-8800 1564 -2708 0
-8800 1564 -2706 0
-8800 1564 -2704 0
-8800 1564 -2702 0
-8800 1564 -2700 0
-8800 1564 -2698 0
-8800 1564 -2696 0
-8800 1564 -2695 0
-8800 1566 -3199 0
-8800 1566 -2948 -3201 0
-8800 1566 -2946 -3203 0
-8800 1566 -2944 0
-8800 1566 -2942 0
-8800 1566 -2940 0
-8800 1566 -2938 0
-8800 1566 -2936 0
-8800 1566 -2934 0
-8800 1566 -2932 0
-8800 1566 -2930 0
-8800 1566 -2928 0
-8800 1566 -2926 0
-8800 1566 -2924 0
-8800 1566 -2922 0
-8800 1566 -2920 0
-8800 1566 -2918 0
-8800 1566 -2916 0
-8800 1566 -2914 0
-8800 1566 -2912 0
-8800 1566 -2910 0
-8800 1566 -2908 0
-8800 1566 -2906 0
-8800 1566 -2904 0
-8800 1566 -2902 0
-8800 1566 -2900 0
-8800 1566 -2898 0
-8800 1566 -2896 0
-8800 1566 -2894 0
-8800 1566 -2892 0
-8800 1566 -2890 0
-8800 1566 -2888 0
-8800 1566 -2886 0
-8800 1566 -2884 0
-8800 1566 -2882 0
-8800 1566 -2880 0
-8800 1566 -2878 0
-8800 1566 -2876 0
-8800 1566 -2874 0
-8800 1566 -2872 0
-8800 1566 -2870 0
-8800 1566 -2868 0
-8800 1566 -2866 0
-8800 1566 -2864 0
-8800 1566 -2862 0
-8800 1566 -2860 0
-8800 1566 -2858 0
-8800 1566 -2856 0
-8800 1566 -2854 0
-8800 1566 -2852 0
-8800 1566 -2850 0
-8800 1566 -2848 0
-8800 1566 -2846 0
-8800 1566 -2844 0
-8800 1566 -2842 0
-8800 1566 -2840 0
-8800 1566 -2838 0
-8800 1566 -2836 0
-8800 1566 -2834 0
-8800 1566 -2832 0
-8800 1566 -2830 0
-8800 1566 -2828 0
-8800 1566 -2826 0
-8800 1566 -2824 0
-8800 1566 -2822 0
-8800 1566 -2820 0
-8800 1566 -2818 0
-8800 1566 -2816 0
-8800 1566 -2814 0
-8800 1566 -2812 0
-8800 1566 -2810 0
-8800 1566 -2808 0
-8800 1566 -2806 0
-8800 1566 -2804 0
-8800 1566 -2802 0
-8800 1566 -2800 0
-8800 1566 -2798 0
-8800 1566 -2796 0
-8800 1566 -2794 0
-8800 1566 -2792 0
-8800 1566 -2790 0
-8800 1566 -2788 0
-8800 1566 -2786 0
-8800 1566 -2784 0
-8800 1566 -2782 0
-8800 1566 -2780 0
-8800 1566 -2778 0
-8800 1566 -2776 0
-8800 1566 -2774 0
-8800 1566 -2772 0
-8800 1566 -2770 0
-8800 1566 -2768 0
-8800 1566 -2766 0
-8800 1566 -2764 0
-8800 1566 -2762 0
-8800 1566 -2760 0
-8800 1566 -2758 0
-8800 1566 -2756 0
-8800 1566 -2754 0
-8800 1566 -2752 0
-8800 1566 -2750 0
-8800 1566 -2748 0
-8800 1566 -2746 0
-8800 1566 -2744 0
-8800 1566 -2742 0
-8800 1566 -2740 0
-8800 1566 -2738 0
-8800 1566 -2736 0
-8800 1566 -2734 0
-8800 1566 -2732 0
-8800 1566 -2730 0
-8800 1566 -2728 0
-8800 1566 -2726 0
-8800 1566 -2724 0
-8800 1566 -2722 0
-8800 1566 -2720 0
-8800 1566 -2718 0
-8800 1566 -2716 0
-8800 1566 -2714 0
-8800 1566 -2712 0
-8800 1566 -2710 0
-8800 1566 -2708 0
-8800 1566 -2706 0
-8800 1566 -2704 0
-8800 1566 -2702 0
-8800 1566 -2700 0
-8800 1566 -2698 0
-8800 1566 -2696 0
-8800 1566 -2695 0
-8800 1568 -3201 0
-8800 1568 -2948 -3203 0
-8800 1568 -2946 0
-8800 1568 -2944 0
-8800 1568 -2942 0
-8800 1568 -2940 0
-8800 1568 -2938 0
-8800 1568 -2936 0
-8800 1568 -2934 0
-8800 1568 -2932 0
-8800 1568 -2930 0
-8800 1568 -2928 0
-8800 1568 -2926 0
-8800 1568 -2924 0
-8800 1568 -2922 0
-8800 1568 -2920 0
-8800 1568 -2918 0
-8800 1568 -2916 0
-8800 1568 -2914 0
-8800 1568 -2912 0
-8800 1568 -2910 0
-8800 1568 -2908 0
-8800 1568 -2906 0
-8800 1568 -2904 0
-8800 1568 -2902 0
-8800 1568 -2900 0
-8800 1568 -2898 0
-8800 1568 -2896 0
-8800 1568 -2894 0
-8800 1568 -2892 0
-8800 1568 -2890 0
-8800 1568 -2888 0
-8800 1568 -2886 0
-8800 1568 -2884 0
-8800 1568 -2882 0
-8800 1568 -2880 0
-8800 1568 -2878 0
-8800 1568 -2876 0
-8800 1568 -2874 0
-8800 1568 -2872 0
-8800 1568 -2870 0
-8800 1568 -2868 0
-8800 1568 -2866 0
-8800 1568 -2864 0
-8800 1568 -2862 0
-8800 1568 -2860 0
-8800 1568 -2858 0
-8800 1568 -2856 0
-8800 1568 -2854 0
-8800 1568 -2852 0
-8800 1568 -2850 0
-8800 1568 -2848 0
-8800 1568 -2846 0
-8800 1568 -2844 0
-8800 1568 -2842 0
-8800 1568 -2840 0
-8800 1568 -2838 0
-8800 1568 -2836 0
-8800 1568 -2834 0
-8800 1568 -2832 0
-8800 1568 -2830 0
-8800 1568 -2828 0
-8800 1568 -2826 0
-8800 1568 -2824 0
-8800 1568 -2822 0
-8800 1568 -2820 0
-8800 1568 -2818 0
-8800 1568 -2816 0
-8800 1568 -2814 0
-8800 1568 -2812 0
-8800 1568 -2810 0
-8800 1568 -2808 0
-8800 1568 -2806 0
-8800 1568 -2804 0
-8800 1568 -2802 0
-8800 1568 -2800 0
-8800 1568 -2798 0
-8800 1568 -2796 0
-8800 1568 -2794 0
-8800 1568 -2792 0
-8800 1568 -2790 0
-8800 1568 -2788 0
-8800 1568 -2786 0
-8800 1568 -2784 0
-8800 1568 -2782 0
-8800 1568 -2780 0
-8800 1568 -2778 0
-8800 1568 -2776 0
-8800 1568 -2774 0
-8800 1568 -2772 0
-8800 1568 -2770 0
-8800 1568 -2768 0
-8800 1568 -2766 0
-8800 1568 -2764 0
-8800 1568 -2762 0
-8800 1568 -2760 0
-8800 1568 -2758 0
-8800 1568 -2756 0
-8800 1568 -2754 0
-8800 1568 -2752 0
-8800 1568 -2750 0
-8800 1568 -2748 0
-8800 1568 -2746 0
-8800 1568 -2744 0
-8800 1568 -2742 0
-8800 1568 -2740 0
-8800 1568 -2738 0
-8800 1568 -2736 0
-8800 1568 -2734 0
-8800 1568 -2732 0
-8800 1568 -2730 0
-8800 1568 -2728 0
-8800 1568 -2726 0
-8800 1568 -2724 0
-8800 1568 -2722 0
-8800 1568 -2720 0
-8800 1568 -2718 0
-8800 1568 -2716 0
-8800 1568 -2714 0
-8800 1568 -2712 0
-8800 1568 -2710 0
-8800 1568 -2708 0
-8800 1568 -2706 0
-8800 1568 -2704 0
-8800 1568 -2702 0
-8800 1568 -2700 0
-8800 1568 -2698 0
-8800 1568 -2696 0
-8800 1568 -2695 0
-8800 1570 -3203 0
-8800 1570 -2948 0
-8800 1570 -2946 0
-8800 1570 -2944 0
-8800 1570 -2942 0
-8800 1570 -2940 0
-8800 1570 -2938 0
-8800 1570 -2936 0
-8800 1570 -2934 0
-8800 1570 -2932 0
-8800 1570 -2930 0
-8800 1570 -2928 0
-8800 1570 -2926 0
-8800 1570 -2924 0
-8800 1570 -2922 0
-8800 1570 -2920 0
-8800 1570 -2918 0
-8800 1570 -2916 0
-8800 1570 -2914 0
-8800 1570 -2912 0
-8800 1570 -2910 0
-8800 1570 -2908 0
-8800 1570 -2906 0
-8800 1570 -2904 0
-8800 1570 -2902 0
-8800 1570 -2900 0
-8800 1570 -2898 0
-8800 1570 -2896 0
-8800 1570 -2894 0
-8800 1570 -2892 0
-8800 1570 -2890 0
-8800 1570 -2888 0
-8800 1570 -2886 0
-8800 1570 -2884 0
-8800 1570 -2882 0
-8800 1570 -2880 0
-8800 1570 -2878 0
-8800 1570 -2876 0
-8800 1570 -2874 0
-8800 1570 -2872 0
-8800 1570 -2870 0
-8800 1570 -2868 0
-8800 1570 -2866 0
-8800 1570 -2864 0
-8800 1570 -2862 0
-8800 1570 -2860 0
-8800 1570 -2858 0
-8800 1570 -2856 0
-8800 1570 -2854 0
-8800 1570 -2852 0
-8800 1570 -2850 0
-8800 1570 -2848 0
-8800 1570 -2846 0
-8800 1570 -2844 0
-8800 1570 -2842 0
-8800 1570 -2840 0
-8800 1570 -2838 0
-8800 1570 -2836 0
-8800 1570 -2834 0
-8800 1570 -2832 0
-8800 1570 -2830 0
-8800 1570 -2828 0
-8800 1570 -2826 0
-8800 1570 -2824 0
-8800 1570 -2822 0
-8800 1570 -2820 0
-8800 1570 -2818 0
-8800 1570 -2816 0
-8800 1570 -2814 0
-8800 1570 -2812 0
-8800 1570 -2810 0
-8800 1570 -2808 0
-8800 1570 -2806 0
-8800 1570 -2804 0
-8800 1570 -2802 0
-8800 1570 -2800 0
-8800 1570 -2798 0
-8800 1570 -2796 0
-8800 1570 -2794 0
-8800 1570 -2792 0
-8800 1570 -2790 0
-8800 1570 -2788 0
-8800 1570 -2786 0
-8800 1570 -2784 0
-8800 1570 -2782 0
-8800 1570 -2780 0
-8800 1570 -2778 0
-8800 1570 -2776 0
-8800 1570 -2774 0
-8800 1570 -2772 0
-8800 1570 -2770 0
-8800 1570 -2768 0
-8800 1570 -2766 0
-8800 1570 -2764 0
-8800 1570 -2762 0
-8800 1570 -2760 0
-8800 1570 -2758 0
-8800 1570 -2756 0
-8800 1570 -2754 0
-8800 1570 -2752 0
-8800 1570 -2750 0
-8800 1570 -2748 0
-8800 1570 -2746 0
-8800 1570 -2744 0
-8800 1570 -2742 0
-8800 1570 -2740 0
-8800 1570 -2738 0
-8800 1570 -2736 0
-8800 1570 -2734 0
-8800 1570 -2732 0
-8800 1570 -2730 0
-8800 1570 -2728 0
-8800 1570 -2726 0
-8800 1570 -2724 0
-8800 1570 -2722 0
-8800 1570 -2720 0
-8800 1570 -2718 0
-8800 1570 -2716 0
-8800 1570 -2714 0
-8800 1570 -2712 0
-8800 1570 -2710 0
-8800 1570 -2708 0
-8800 1570 -2706 0
-8800 1570 -2704 0
-8800 1570 -2702 0
-8800 1570 -2700 0
-8800 1570 -2698 0
-8800 1570 -2696 0
-8800 1570 -2695 0
8800 2948 3203 0
8800 -1570 2946 3203 0
8800 -1570 2948 3201 0
8800 -1568 2944 3203 0
8800 -1568 2946 3201 0
8800 -1568 2948 3199 0
8800 -1566 2942 3203 0
8800 -1566 2944 3201 0
8800 -1566 2946 3199 0
8800 -1566 2948 3197 0
8800 -1564 2940 3203 0
8800 -1564 2942 3201 0
8800 -1564 2944 3199 0
8800 -1564 2946 3197 0
8800 -1564 2948 3195 0
8800 -1562 2938 3203 0
8800 -1562 2940 3201 0
8800 -1562 2942 3199 0
8800 -1562 2944 3197 0
8800 -1562 2946 3195 0
8800 -1562 2948 3193 0
8800 -1560 2936 3203 0
8800 -1560 2938 3201 0
8800 -1560 2940 3199 0
8800 -1560 2942 3197 0
8800 -1560 2944 3195 0
8800 -1560 2946 3193 0
8800 -1560 2948 3191 0
8800 -1558 2934 3203 0
8800 -1558 2936 3201 0
8800 -1558 2938 3199 0
8800 -1558 2940 3197 0
8800 -1558 2942 3195 0
8800 -1558 2944 3193 0
8800 -1558 2946 3191 0
8800 -1558 2948 3189 0
8800 -1556 2932 3203 0
8800 -1556 2934 3201 0
8800 -1556 2936 3199 0
8800 -1556 2938 3197 0
8800 -1556 2940 3195 0
8800 -1556 2942 3193 0
8800 -1556 2944 3191 0
8800 -1556 2946 3189 0
8800 -1556 2948 3187 0
8800 -1554 2930 3203 0
8800 -1554 2932 3201 0
8800 -1554 2934 3199 0
8800 -1554 2936 3197 0
8800 -1554 2938 3195 0
8800 -1554 2940 3193 0
8800 -1554 2942 3191 0
8800 -1554 2944 3189 0
8800 -1554 2946 3187 0
8800 -1554 2948 3185 0
8800 -1552 2928 3203 0
8800 -1552 2930 3201 0
8800 -1552 2932 3199 0
8800 -1552 2934 3197 0
8800 -1552 2936 3195 0
8800 -1552 2938 3193 0
8800 -1552 2940 3191 0
8800 -1552 2942 3189 0
8800 -1552 2944 3187 0
8800 -1552 2946 3185 0
8800 -1552 2948 3183 0
8800 -1550 2926 3203 0
8800 -1550 2928 3201 0
8800 -1550 2930 3199 0
8800 -1550 2932 3197 0
8800 -1550 2934 3195 0
8800 -1550 2936 3193 0
8800 -1550 2938 3191 0
8800 -1550 2940 3189 0
8800 -1550 2942 3187 0
8800 -1550 2944 3185 0
8800 -1550 2946 3183 0
8800 -1550 2948 3181 0
8800 -1548 2924 3203 0
8800 -1548 2926 3201 0
8800 -1548 2928 3199 0
8800 -1548 2930 3197 0
8800 -1548 2932 3195 0
8800 -1548 2934 3193 0
8800 -1548 2936 3191 0
8800 -1548 2938 3189 0
8800 -1548 2940 3187 0
8800 -1548 2942 3185 0
8800 -1548 2944 3183 0
8800 -1548 2946 3181 0
8800 -1548 2948 3179 0
8800 -1546 2922 3203 0
8800 -1546 2924 3201 0
8800 -1546 2926 3199 0
8800 -1546 2928 3197 0
8800 -1546 2930 3195 0
8800 -1546 2932 3193 0
8800 -1546 2934 3191 0
8800 -1546 2936 3189 0
8800 -1546 2938 3187 0
8800 -1546 2940 3185 0
8800 -1546 2942 3183 0
8800 -1546 2944 3181 0
8800 -1546 2946 3179 0
8800 -1546 2948 3177 0
8800 -1544 2920 3203 0
8800 -1544 2922 3201 0
8800 -1544 2924 3199 0
8800 -1544 2926 3197 0
8800 -1544 2928 3195 0
8800 -1544 2930 3193 0
8800 -1544 2932 3191 0
8800 -1544 2934 3189 0
8800 -1544 2936 3187 0
8800 -1544 2938 3185 0
8800 -1544 2940 3183 0
8800 -1544 2942 3181 0
8800 -1544 2944 3179 0
8800 -1544 2946 3177 0
8800 -1544 2948 3175 0
8800 -1542 2918 3203 0
8800 -1542 2920 3201 0
8800 -1542 2922 3199 0
8800 -1542 2924 3197 0
8800 -1542 2926 3195 0
8800 -1542 2928 3193 0
8800 -1542 2930 3191 0
8800 -1542 2932 3189 0
8800 -1542 2934 3187 0
8800 -1542 2936 3185 0
8800 -1542 2938 3183 0
8800 -1542 2940 3181 0
8800 -1542 2942 3179 0
8800 -1542 2944 3177 0
8800 -1542 2946 3175 0
8800 -1542 2948 3173 0
8800 -1540 2916 3203 0
8800 -1540 2918 3201 0
8800 -1540 2920 3199 0
8800 -1540 2922 3197 0
8800 -1540 2924 3195 0
8800 -1540 2926 3193 0
8800 -1540 2928 3191 0
8800 -1540 2930 3189 0
8800 -1540 2932 3187 0
8800 -1540 2934 3185 0
8800 -1540 2936 3183 0
8800 -1540 2938 3181 0
8800 -1540 2940 3179 0
8800 -1540 2942 3177 0
8800 -1540 2944 3175 0
8800 -1540 2946 3173 0
8800 -1540 2948 3171 0
8800 -1538 2914 3203 0
8800 -1538 2916 3201 0
8800 -1538 2918 3199 0
8800 -1538 2920 3197 0
8800 -1538 2922 3195 0
8800 -1538 2924 3193 0
8800 -1538 2926 3191 0
8800 -1538 2928 3189 0
8800 -1538 2930 3187 0
8800 -1538 2932 3185 0
8800 -1538 2934 3183 0
8800 -1538 2936 3181 0
8800 -1538 2938 3179 0
8800 -1538 2940 3177 0
8800 -1538 2942 3175 0
8800 -1538 2944 3173 0
8800 -1538 2946 3171 0
8800 -1538 2948 3169 0
8800 -1536 2912 3203 0
8800 -1536 2914 3201 0
8800 -1536 2916 3199 0
8800 -1536 2918 3197 0
8800 -1536 2920 3195 0
8800 -1536 2922 3193 0
8800 -1536 2924 3191 0
8800 -1536 2926 3189 0
8800 -1536 2928 3187 0
8800 -1536 2930 3185 0
8800 -1536 2932 3183 0
8800 -1536 2934 3181 0
8800 -1536 2936 3179 0
8800 -1536 2938 3177 0
8800 -1536 2940 3175 0
8800 -1536 2942 3173 0
8800 -1536 2944 3171 0
8800 -1536 2946 3169 0
8800 -1536 2948 3167 0
8800 -1534 2910 3203 0
8800 -1534 2912 3201 0
8800 -1534 2914 3199 0
8800 -1534 2916 3197 0
8800 -1534 2918 3195 0
8800 -1534 2920 3193 0
8800 -1534 2922 3191 0
8800 -1534 2924 3189 0
8800 -1534 2926 3187 0
8800 -1534 2928 3185 0
8800 -1534 2930 3183 0
8800 -1534 2932 3181 0
8800 -1534 2934 3179 0
8800 -1534 2936 3177 0
8800 -1534 2938 3175 0
8800 -1534 2940 3173 0
8800 -1534 2942 3171 0
8800 -1534 2944 3169 0
8800 -1534 2946 3167 0
8800 -1534 2948 3165 0
8800 -1532 2908 3203 0
8800 -1532 2910 3201 0
8800 -1532 2912 3199 0
8800 -1532 2914 3197 0
8800 -1532 2916 3195 0
8800 -1532 2918 3193 0
8800 -1532 2920 3191 0
8800 -1532 2922 3189 0
8800 -1532 2924 3187 0
8800 -1532 2926 3185 0
8800 -1532 2928 3183 0
8800 -1532 2930 3181 0
8800 -1532 2932 3179 0
8800 -1532 2934 3177 0
8800 -1532 2936 3175 0
8800 -1532 2938 3173 0
8800 -1532 2940 3171 0
8800 -1532 2942 3169 0
8800 -1532 2944 3167 0
8800 -1532 2946 3165 0
8800 -1532 2948 3163 0
8800 -1530 2906 3203 0
8800 -1530 2908 3201 0
8800 -1530 2910 3199 0
8800 -1530 2912 3197 0
8800 -1530 2914 3195 0
8800 -1530 2916 3193 0
8800 -1530 2918 3191 0
8800 -1530 2920 3189 0
8800 -1530 2922 3187 0
8800 -1530 2924 3185 0
8800 -1530 2926 3183 0
8800 -1530 2928 3181 0
8800 -1530 2930 3179 0
8800 -1530 2932 3177 0
8800 -1530 2934 3175 0
8800 -1530 2936 3173 0
8800 -1530 2938 3171 0
8800 -1530 2940 3169 0
8800 -1530 2942 3167 0
8800 -1530 2944 3165 0
8800 -1530 2946 3163 0
8800 -1530 2948 3161 0
8800 -1528 2904 3203 0
8800 -1528 2906 3201 0
8800 -1528 2908 3199 0
8800 -1528 2910 3197 0
8800 -1528 2912 3195 0
8800 -1528 2914 3193 0
8800 -1528 2916 3191 0
8800 -1528 2918 3189 0
8800 -1528 2920 3187 0
8800 -1528 2922 3185 0
8800 -1528 2924 3183 0
8800 -1528 2926 3181 0
8800 -1528 2928 3179 0
8800 -1528 2930 3177 0
8800 -1528 2932 3175 0
8800 -1528 2934 3173 0
8800 -1528 2936 3171 0
8800 -1528 2938 3169 0
8800 -1528 2940 3167 0
8800 -1528 2942 3165 0
8800 -1528 2944 3163 0
8800 -1528 2946 3161 0
8800 -1528 2948 3159 0
8800 -1526 2902 3203 0
8800 -1526 2904 3201 0
8800 -1526 2906 3199 0
8800 -1526 2908 3197 0
8800 -1526 2910 3195 0
8800 -1526 2912 3193 0
8800 -1526 2914 3191 0
8800 -1526 2916 3189 0
8800 -1526 2918 3187 0
8800 -1526 2920 3185 0
8800 -1526 2922 3183 0
8800 -1526 2924 3181 0
8800 -1526 2926 3179 0
8800 -1526 2928 3177 0
8800 -1526 2930 3175 0
8800 -1526 2932 3173 0
8800 -1526 2934 3171 0
8800 -1526 2936 3169 0
8800 -1526 2938 3167 0
8800 -1526 2940 3165 0
8800 -1526 2942 3163 0
8800 -1526 2944 3161 0
8800 -1526 2946 3159 0
8800 -1526 2948 3157 0
8800 -1524 2900 3203 0
8800 -1524 2902 3201 0
8800 -1524 2904 3199 0
8800 -1524 2906 3197 0
8800 -1524 2908 3195 0
8800 -1524 2910 3193 0
8800 -1524 2912 3191 0
8800 -1524 2914 3189 0
8800 -1524 2916 3187 0
8800 -1524 2918 3185 0
8800 -1524 2920 3183 0
8800 -1524 2922 3181 0
8800 -1524 2924 3179 0
8800 -1524 2926 3177 0
8800 -1524 2928 3175 0
8800 -1524 2930 3173 0
8800 -1524 2932 3171 0
8800 -1524 2934 3169 0
8800 -1524 2936 3167 0
8800 -1524 2938 3165 0
8800 -1524 2940 3163 0
8800 -1524 2942 3161 0
8800 -1524 2944 3159 0
8800 -1524 2946 3157 0
8800 -1524 2948 3155 0
8800 -1522 2898 3203 0
8800 -1522 2900 3201 0
8800 -1522 2902 3199 0
8800 -1522 2904 3197 0
8800 -1522 2906 3195 0
8800 -1522 2908 3193 0
8800 -1522 2910 3191 0
8800 -1522 2912 3189 0
8800 -1522 2914 3187 0
8800 -1522 2916 3185 0
8800 -1522 2918 3183 0
8800 -1522 2920 3181 0
8800 -1522 2922 3179 0
8800 -1522 2924 3177 0
8800 -1522 2926 3175 0
8800 -1522 2928 3173 0
8800 -1522 2930 3171 0
8800 -1522 2932 3169 0
8800 -1522 2934 3167 0
8800 -1522 2936 3165 0
8800 -1522 2938 3163 0
8800 -1522 2940 3161 0
8800 -1522 2942 3159 0
8800 -1522 2944 3157 0
8800 -1522 2946 3155 0
8800 -1522 2948 3153 0
8800 -1520 2896 3203 0
8800 -1520 2898 3201 0
8800 -1520 2900 3199 0
8800 -1520 2902 3197 0
8800 -1520 2904 3195 0
8800 -1520 2906 3193 0
8800 -1520 2908 3191 0
8800 -1520 2910 3189 0
8800 -1520 2912 3187 0
8800 -1520 2914 3185 0
8800 -1520 2916 3183 0
8800 -1520 2918 3181 0
8800 -1520 2920 3179 0
8800 -1520 2922 3177 0
8800 -1520 2924 3175 0
8800 -1520 2926 3173 0
8800 -1520 2928 3171 0
8800 -1520 2930 3169 0
8800 -1520 2932 3167 0
8800 -1520 2934 3165 0
8800 -1520 2936 3163 0
8800 -1520 2938 3161 0
8800 -1520 2940 3159 0
8800 -1520 2942 3157 0
8800 -1520 2944 3155 0
8800 -1520 2946 3153 0
8800 -1520 2948 3151 0
8800 -1518 2894 3203 0
8800 -1518 2896 3201 0
8800 -1518 2898 3199 0
8800 -1518 2900 3197 0
8800 -1518 2902 3195 0
8800 -1518 2904 3193 0
8800 -1518 2906 3191 0
8800 -1518 2908 3189 0
8800 -1518 2910 3187 0
8800 -1518 2912 3185 0
8800 -1518 2914 3183 0
8800 -1518 2916 3181 0
8800 -1518 2918 3179 0
8800 -1518 2920 3177 0
8800 -1518 2922 3175 0
8800 -1518 2924 3173 0
8800 -1518 2926 3171 0
8800 -1518 2928 3169 0
8800 -1518 2930 3167 0
8800 -1518 2932 3165 0
8800 -1518 2934 3163 0
8800 -1518 2936 3161 0
8800 -1518 2938 3159 0
8800 -1518 2940 3157 0
8800 -1518 2942 3155 0
8800 -1518 2944 3153 0
8800 -1518 2946 3151 0
8800 -1518 2948 3149 0
8800 -1516 2892 3203 0
8800 -1516 2894 3201 0
8800 -1516 2896 3199 0
8800 -1516 2898 3197 0
8800 -1516 2900 3195 0
8800 -1516 2902 3193 0
8800 -1516 2904 3191 0
8800 -1516 2906 3189 0
8800 -1516 2908 3187 0
8800 -1516 2910 3185 0
8800 -1516 2912 3183 0
8800 -1516 2914 3181 0
8800 -1516 2916 3179 0
8800 -1516 2918 3177 0
8800 -1516 2920 3175 0
8800 -1516 2922 3173 0
8800 -1516 2924 3171 0
8800 -1516 2926 3169 0
8800 -1516 2928 3167 0
8800 -1516 2930 3165 0
8800 -1516 2932 3163 0
8800 -1516 2934 3161 0
8800 -1516 2936 3159 0
8800 -1516 2938 3157 0
8800 -1516 2940 3155 0
8800 -1516 2942 3153 0
8800 -1516 2944 3151 0
8800 -1516 2946 3149 0
8800 -1516 2948 3147 0
8800 -1514 2890 3203 0
8800 -1514 2892 3201 0
8800 -1514 2894 3199 0
8800 -1514 2896 3197 0
8800 -1514 2898 3195 0
8800 -1514 2900 3193 0
8800 -1514 2902 3191 0
8800 -1514 2904 3189 0
8800 -1514 2906 3187 0
8800 -1514 2908 3185 0
8800 -1514 2910 3183 0
8800 -1514 2912 3181 0
8800 -1514 2914 3179 0
8800 -1514 2916 3177 0
8800 -1514 2918 3175 0
8800 -1514 2920 3173 0
8800 -1514 2922 3171 0
8800 -1514 2924 3169 0
8800 -1514 2926 3167 0
8800 -1514 2928 3165 0
8800 -1514 2930 3163 0
8800 -1514 2932 3161 0
8800 -1514 2934 3159 0
8800 -1514 2936 3157 0
8800 -1514 2938 3155 0
8800 -1514 2940 3153 0
8800 -1514 2942 3151 0
8800 -1514 2944 3149 0
8800 -1514 2946 3147 0
8800 -1514 2948 3145 0
8800 -1512 2888 3203 0
8800 -1512 2890 3201 0
8800 -1512 2892 3199 0
8800 -1512 2894 3197 0
8800 -1512 2896 3195 0
8800 -1512 2898 3193 0
8800 -1512 2900 3191 0
8800 -1512 2902 3189 0
8800 -1512 2904 3187 0
8800 -1512 2906 3185 0
8800 -1512 2908 3183 0
8800 -1512 2910 3181 0
8800 -1512 2912 3179 0
8800 -1512 2914 3177 0
8800 -1512 2916 3175 0
8800 -1512 2918 3173 0
8800 -1512 2920 3171 0
8800 -1512 2922 3169 0
8800 -1512 2924 3167 0
8800 -1512 2926 3165 0
8800 -1512 2928 3163 0
8800 -1512 2930 3161 0
8800 -1512 2932 3159 0
8800 -1512 2934 3157 0
8800 -1512 2936 3155 0
8800 -1512 2938 3153 0
8800 -1512 2940 3151 0
8800 -1512 2942 3149 0
8800 -1512 2944 3147 0
8800 -1512 2946 3145 0
8800 -1512 2948 3143 0
8800 -1510 2886 3203 0
8800 -1510 2888 3201 0
8800 -1510 2890 3199 0
8800 -1510 2892 3197 0
8800 -1510 2894 3195 0
8800 -1510 2896 3193 0
8800 -1510 2898 3191 0
8800 -1510 2900 3189 0
8800 -1510 2902 3187 0
8800 -1510 2904 3185 0
8800 -1510 2906 3183 0
8800 -1510 2908 3181 0
8800 -1510 2910 3179 0
8800 -1510 2912 3177 0
8800 -1510 2914 3175 0
8800 -1510 2916 3173 0
8800 -1510 2918 3171 0
8800 -1510 2920 3169 0
8800 -1510 2922 3167 0
8800 -1510 2924 3165 0
8800 -1510 2926 3163 0
8800 -1510 2928 3161 0
8800 -1510 2930 3159 0
8800 -1510 2932 3157 0
8800 -1510 2934 3155 0
8800 -1510 2936 3153 0
8800 -1510 2938 3151 0
8800 -1510 2940 3149 0
8800 -1510 2942 3147 0
8800 -1510 2944 3145 0
8800 -1510 2946 3143 0
8800 -1510 2948 3141 0
8800 -1508 2884 3203 0
8800 -1508 2886 3201 0
8800 -1508 2888 3199 0
8800 -1508 2890 3197 0
8800 -1508 2892 3195 0
8800 -1508 2894 3193 0
8800 -1508 2896 3191 0
8800 -1508 2898 3189 0
8800 -1508 2900 3187 0
8800 -1508 2902 3185 0
8800 -1508 2904 3183 0
8800 -1508 2906 3181 0
8800 -1508 2908 3179 0
8800 -1508 2910 3177 0
8800 -1508 2912 3175 0
8800 -1508 2914 3173 0
8800 -1508 2916 3171 0
8800 -1508 2918 3169 0
8800 -1508 2920 3167 0
8800 -1508 2922 3165 0
8800 -1508 2924 3163 0
8800 -1508 2926 3161 0
8800 -1508 2928 3159 0
8800 -1508 2930 3157 0
8800 -1508 2932 3155 0
8800 -1508 2934 3153 0
8800 -1508 2936 3151 0
8800 -1508 2938 3149 0
8800 -1508 2940 3147 0
8800 -1508 2942 3145 0
8800 -1508 2944 3143 0
8800 -1508 2946 3141 0
8800 -1508 2948 3139 0
8800 -1506 2882 3203 0
8800 -1506 2884 3201 0
8800 -1506 2886 3199 0
8800 -1506 2888 3197 0
8800 -1506 2890 3195 0
8800 -1506 2892 3193 0
8800 -1506 2894 3191 0
8800 -1506 2896 3189 0
8800 -1506 2898 3187 0
8800 -1506 2900 3185 0
8800 -1506 2902 3183 0
8800 -1506 2904 3181 0
8800 -1506 2906 3179 0
8800 -1506 2908 3177 0
8800 -1506 2910 3175 0
8800 -1506 2912 3173 0
8800 -1506 2914 3171 0
8800 -1506 2916 3169 0
8800 -1506 2918 3167 0
8800 -1506 2920 3165 0
8800 -1506 2922 3163 0
8800 -1506 2924 3161 0
8800 -1506 2926 3159 0
8800 -1506 2928 3157 0
8800 -1506 2930 3155 0
8800 -1506 2932 3153 0
8800 -1506 2934 3151 0
8800 -1506 2936 3149 0
8800 -1506 2938 3147 0
8800 -1506 2940 3145 0
8800 -1506 2942 3143 0
8800 -1506 2944 3141 0
8800 -1506 2946 3139 0
8800 -1506 2948 3137 0
8800 -1504 2880 3203 0
8800 -1504 2882 3201 0
8800 -1504 2884 3199 0
8800 -1504 2886 3197 0
8800 -1504 2888 3195 0
8800 -1504 2890 3193 0
8800 -1504 2892 3191 0
8800 -1504 2894 3189 0
8800 -1504 2896 3187 0
8800 -1504 2898 3185 0
8800 -1504 2900 3183 0
8800 -1504 2902 3181 0
8800 -1504 2904 3179 0
8800 -1504 2906 3177 0
8800 -1504 2908 3175 0
8800 -1504 2910 3173 0
8800 -1504 2912 3171 0
8800 -1504 2914 3169 0
8800 -1504 2916 3167 0
8800 -1504 2918 3165 0
8800 -1504 2920 3163 0
8800 -1504 2922 3161 0
8800 -1504 2924 3159 0
8800 -1504 2926 3157 0
8800 -1504 2928 3155 0
8800 -1504 2930 3153 0
8800 -1504 2932 3151 0
8800 -1504 2934 3149 0
8800 -1504 2936 3147 0
8800 -1504 2938 3145 0
8800 -1504 2940 3143 0
8800 -1504 2942 3141 0
8800 -1504 2944 3139 0
8800 -1504 2946 3137 0
8800 -1504 2948 3135 0
8800 -1502 2878 3203 0
8800 -1502 2880 3201 0
8800 -1502 2882 3199 0
8800 -1502 2884 3197 0
8800 -1502 2886 3195 0
8800 -1502 2888 3193 0
8800 -1502 2890 3191 0
8800 -1502 2892 3189 0
8800 -1502 2894 3187 0
8800 -1502 2896 3185 0
8800 -1502 2898 3183 0
8800 -1502 2900 3181 0
8800 -1502 2902 3179 0
8800 -1502 2904 3177 0
8800 -1502 2906 3175 0
8800 -1502 2908 3173 0
8800 -1502 2910 3171 0
8800 -1502 2912 3169 0
8800 -1502 2914 3167 0
8800 -1502 2916 3165 0
8800 -1502 2918 3163 0
8800 -1502 2920 3161 0
8800 -1502 2922 3159 0
8800 -1502 2924 3157 0
8800 -1502 2926 3155 0
8800 -1502 2928 3153 0
8800 -1502 2930 3151 0
8800 -1502 2932 3149 0
8800 -1502 2934 3147 0
8800 -1502 2936 3145 0
8800 -1502 2938 3143 0
8800 -1502 2940 3141 0
8800 -1502 2942 3139 0
8800 -1502 2944 3137 0
8800 -1502 2946 3135 0
8800 -1502 2948 3133 0
8800 -1500 2876 3203 0
8800 -1500 2878 3201 0
8800 -1500 2880 3199 0
8800 -1500 2882 3197 0
8800 -1500 2884 3195 0
8800 -1500 2886 3193 0
8800 -1500 2888 3191 0
8800 -1500 2890 3189 0
8800 -1500 2892 3187 0
8800 -1500 2894 3185 0
8800 -1500 2896 3183 0
8800 -1500 2898 3181 0
8800 -1500 2900 3179 0
8800 -1500 2902 3177 0
8800 -1500 2904 3175 0
8800 -1500 2906 3173 0
8800 -1500 2908 3171 0
8800 -1500 2910 3169 0
8800 -1500 2912 3167 0
8800 -1500 2914 3165 0
8800 -1500 2916 3163 0
8800 -1500 2918 3161 0
8800 -1500 2920 3159 0
8800 -1500 2922 3157 0
8800 -1500 2924 3155 0
8800 -1500 2926 3153 0
8800 -1500 2928 3151 0
8800 -1500 2930 3149 0
8800 -1500 2932 3147 0
8800 -1500 2934 3145 0
8800 -1500 2936 3143 0
8800 -1500 2938 3141 0
8800 -1500 2940 3139 0
8800 -1500 2942 3137 0
8800 -1500 2944 3135 0
8800 -1500 2946 3133 0
8800 -1500 2948 3131 0
8800 -1498 2874 3203 0
8800 -1498 2876 3201 0
8800 -1498 2878 3199 0
8800 -1498 2880 3197 0
8800 -1498 2882 3195 0
8800 -1498 2884 3193 0
8800 -1498 2886 3191 0
8800 -1498 2888 3189 0
8800 -1498 2890 3187 0
8800 -1498 2892 3185 0
8800 -1498 2894 3183 0
8800 -1498 2896 3181 0
8800 -1498 2898 3179 0
8800 -1498 2900 3177 0
8800 -1498 2902 3175 0
8800 -1498 2904 3173 0
8800 -1498 2906 3171 0
8800 -1498 2908 3169 0
8800 -1498 2910 3167 0
8800 -1498 2912 3165 0
8800 -1498 2914 3163 0
8800 -1498 2916 3161 0
8800 -1498 2918 3159 0
8800 -1498 2920 3157 0
8800 -1498 2922 3155 0
8800 -1498 2924 3153 0
8800 -1498 2926 3151 0
8800 -1498 2928 3149 0
8800 -1498 2930 3147 0
8800 -1498 2932 3145 0
8800 -1498 2934 3143 0
8800 -1498 2936 3141 0
8800 -1498 2938 3139 0
8800 -1498 2940 3137 0
8800 -1498 2942 3135 0
8800 -1498 2944 3133 0
8800 -1498 2946 3131 0
8800 -1498 2948 3129 0
8800 -1496 2872 3203 0
8800 -1496 2874 3201 0
8800 -1496 2876 3199 0
8800 -1496 2878 3197 0
8800 -1496 2880 3195 0
8800 -1496 2882 3193 0
8800 -1496 2884 3191 0
8800 -1496 2886 3189 0
8800 -1496 2888 3187 0
8800 -1496 2890 3185 0
8800 -1496 2892 3183 0
8800 -1496 2894 3181 0
8800 -1496 2896 3179 0
8800 -1496 2898 3177 0
8800 -1496 2900 3175 0
8800 -1496 2902 3173 0
8800 -1496 2904 3171 0
8800 -1496 2906 3169 0
8800 -1496 2908 3167 0
8800 -1496 2910 3165 0
8800 -1496 2912 3163 0
8800 -1496 2914 3161 0
8800 -1496 2916 3159 0
8800 -1496 2918 3157 0
8800 -1496 2920 3155 0
8800 -1496 2922 3153 0
8800 -1496 2924 3151 0
8800 -1496 2926 3149 0
8800 -1496 2928 3147 0
8800 -1496 2930 3145 0
8800 -1496 2932 3143 0
8800 -1496 2934 3141 0
8800 -1496 2936 3139 0
8800 -1496 2938 3137 0
8800 -1496 2940 3135 0
8800 -1496 2942 3133 0
8800 -1496 2944 3131 0
8800 -1496 2946 3129 0
8800 -1496 2948 3127 0
8800 -1494 2870 3203 0
8800 -1494 2872 3201 0
8800 -1494 2874 3199 0
8800 -1494 2876 3197 0
8800 -1494 2878 3195 0
8800 -1494 2880 3193 0
8800 -1494 2882 3191 0
8800 -1494 2884 3189 0
8800 -1494 2886 3187 0
8800 -1494 2888 3185 0
8800 -1494 2890 3183 0
8800 -1494 2892 3181 0
8800 -1494 2894 3179 0
8800 -1494 2896 3177 0
8800 -1494 2898 3175 0
8800 -1494 2900 3173 0
8800 -1494 2902 3171 0
8800 -1494 2904 3169 0
8800 -1494 2906 3167 0
8800 -1494 2908 3165 0
8800 -1494 2910 3163 0
8800 -1494 2912 3161 0
8800 -1494 2914 3159 0
8800 -1494 2916 3157 0
8800 -1494 2918 3155 0
8800 -1494 2920 3153 0
8800 -1494 2922 3151 0
8800 -1494 2924 3149 0
8800 -1494 2926 3147 0
8800 -1494 2928 3145 0
8800 -1494 2930 3143 0
8800 -1494 2932 3141 0
8800 -1494 2934 3139 0
8800 -1494 2936 3137 0
8800 -1494 2938 3135 0
8800 -1494 2940 3133 0
8800 -1494 2942 3131 0
8800 -1494 2944 3129 0
8800 -1494 2946 3127 0
8800 -1494 2948 3125 0
8800 -1492 2868 3203 0
8800 -1492 2870 3201 0
8800 -1492 2872 3199 0
8800 -1492 2874 3197 0
8800 -1492 2876 3195 0
8800 -1492 2878 3193 0
8800 -1492 2880 3191 0
8800 -1492 2882 3189 0
8800 -1492 2884 3187 0
8800 -1492 2886 3185 0
8800 -1492 2888 3183 0
8800 -1492 2890 3181 0
8800 -1492 2892 3179 0
8800 -1492 2894 3177 0
8800 -1492 2896 3175 0
8800 -1492 2898 3173 0
8800 -1492 2900 3171 0
8800 -1492 2902 3169 0
8800 -1492 2904 3167 0
8800 -1492 2906 3165 0
8800 -1492 2908 3163 0
8800 -1492 2910 3161 0
8800 -1492 2912 3159 0
8800 -1492 2914 3157 0
8800 -1492 2916 3155 0
8800 -1492 2918 3153 0
8800 -1492 2920 3151 0
8800 -1492 2922 3149 0
8800 -1492 2924 3147 0
8800 -1492 2926 3145 0
8800 -1492 2928 3143 0
8800 -1492 2930 3141 0
8800 -1492 2932 3139 0
8800 -1492 2934 3137 0
8800 -1492 2936 3135 0
8800 -1492 2938 3133 0
8800 -1492 2940 3131 0
8800 -1492 2942 3129 0
8800 -1492 2944 3127 0
8800 -1492 2946 3125 0
8800 -1492 2948 3123 0
8800 -1490 2866 3203 0
8800 -1490 2868 3201 0
8800 -1490 2870 3199 0
8800 -1490 2872 3197 0
8800 -1490 2874 3195 0
8800 -1490 2876 3193 0
8800 -1490 2878 3191 0
8800 -1490 2880 3189 0
8800 -1490 2882 3187 0
8800 -1490 2884 3185 0
8800 -1490 2886 3183 0
8800 -1490 2888 3181 0
8800 -1490 2890 3179 0
8800 -1490 2892 3177 0
8800 -1490 2894 3175 0
8800 -1490 2896 3173 0
8800 -1490 2898 3171 0
8800 -1490 2900 3169 0
8800 -1490 2902 3167 0
8800 -1490 2904 3165 0
8800 -1490 2906 3163 0
8800 -1490 2908 3161 0
8800 -1490 2910 3159 0
8800 -1490 2912 3157 0
8800 -1490 2914 3155 0
8800 -1490 2916 3153 0
8800 -1490 2918 3151 0
8800 -1490 2920 3149 0
8800 -1490 2922 3147 0
8800 -1490 2924 3145 0
8800 -1490 2926 3143 0
8800 -1490 2928 3141 0
8800 -1490 2930 3139 0
8800 -1490 2932 3137 0
8800 -1490 2934 3135 0
8800 -1490 2936 3133 0
8800 -1490 2938 3131 0
8800 -1490 2940 3129 0
8800 -1490 2942 3127 0
8800 -1490 2944 3125 0
8800 -1490 2946 3123 0
8800 -1490 2948 3121 0
8800 -1488 2864 3203 0
8800 -1488 2866 3201 0
8800 -1488 2868 3199 0
8800 -1488 2870 3197 0
8800 -1488 2872 3195 0
8800 -1488 2874 3193 0
8800 -1488 2876 3191 0
8800 -1488 2878 3189 0
8800 -1488 2880 3187 0
8800 -1488 2882 3185 0
8800 -1488 2884 3183 0
8800 -1488 2886 3181 0
8800 -1488 2888 3179 0
8800 -1488 2890 3177 0
8800 -1488 2892 3175 0
8800 -1488 2894 3173 0
8800 -1488 2896 3171 0
8800 -1488 2898 3169 0
8800 -1488 2900 3167 0
8800 -1488 2902 3165 0
8800 -1488 2904 3163 0
8800 -1488 2906 3161 0
8800 -1488 2908 3159 0
8800 -1488 2910 3157 0
8800 -1488 2912 3155 0
8800 -1488 2914 3153 0
8800 -1488 2916 3151 0
8800 -1488 2918 3149 0
8800 -1488 2920 3147 0
8800 -1488 2922 3145 0
8800 -1488 2924 3143 0
8800 -1488 2926 3141 0
8800 -1488 2928 3139 0
8800 -1488 2930 3137 0
8800 -1488 2932 3135 0
8800 -1488 2934 3133 0
8800 -1488 2936 3131 0
8800 -1488 2938 3129 0
8800 -1488 2940 3127 0
8800 -1488 2942 3125 0
8800 -1488 2944 3123 0
8800 -1488 2946 3121 0
8800 -1488 2948 3119 0
8800 -1486 2862 3203 0
8800 -1486 2864 3201 0
8800 -1486 2866 3199 0
8800 -1486 2868 3197 0
8800 -1486 2870 3195 0
8800 -1486 2872 3193 0
8800 -1486 2874 3191 0
8800 -1486 2876 3189 0
8800 -1486 2878 3187 0
8800 -1486 2880 3185 0
8800 -1486 2882 3183 0
8800 -1486 2884 3181 0
8800 -1486 2886 3179 0
8800 -1486 2888 3177 0
8800 -1486 2890 3175 0
8800 -1486 2892 3173 0
8800 -1486 2894 3171 0
8800 -1486 2896 3169 0
8800 -1486 2898 3167 0
8800 -1486 2900 3165 0
8800 -1486 2902 3163 0
8800 -1486 2904 3161 0
8800 -1486 2906 3159 0
8800 -1486 2908 3157 0
8800 -1486 2910 3155 0
8800 -1486 2912 3153 0
8800 -1486 2914 3151 0
8800 -1486 2916 3149 0
8800 -1486 2918 3147 0
8800 -1486 2920 3145 0
8800 -1486 2922 3143 0
8800 -1486 2924 3141 0
8800 -1486 2926 3139 0
8800 -1486 2928 3137 0
8800 -1486 2930 3135 0
8800 -1486 2932 3133 0
8800 -1486 2934 3131 0
8800 -1486 2936 3129 0
8800 -1486 2938 3127 0
8800 -1486 2940 3125 0
8800 -1486 2942 3123 0
8800 -1486 2944 3121 0
8800 -1486 2946 3119 0
8800 -1486 2948 3117 0
8800 -1484 2860 3203 0
8800 -1484 2862 3201 0
8800 -1484 2864 3199 0
8800 -1484 2866 3197 0
8800 -1484 2868 3195 0
8800 -1484 2870 3193 0
8800 -1484 2872 3191 0
8800 -1484 2874 3189 0
8800 -1484 2876 3187 0
8800 -1484 2878 3185 0
8800 -1484 2880 3183 0
8800 -1484 2882 3181 0
8800 -1484 2884 3179 0
8800 -1484 2886 3177 0
8800 -1484 2888 3175 0
8800 -1484 2890 3173 0
8800 -1484 2892 3171 0
8800 -1484 2894 3169 0
8800 -1484 2896 3167 0
8800 -1484 2898 3165 0
8800 -1484 2900 3163 0
8800 -1484 2902 3161 0
8800 -1484 2904 3159 0
8800 -1484 2906 3157 0
8800 -1484 2908 3155 0
8800 -1484 2910 3153 0
8800 -1484 2912 3151 0
8800 -1484 2914 3149 0
8800 -1484 2916 3147 0
8800 -1484 2918 3145 0
8800 -1484 2920 3143 0
8800 -1484 2922 3141 0
8800 -1484 2924 3139 0
8800 -1484 2926 3137 0
8800 -1484 2928 3135 0
8800 -1484 2930 3133 0
8800 -1484 2932 3131 0
8800 -1484 2934 3129 0
8800 -1484 2936 3127 0
8800 -1484 2938 3125 0
8800 -1484 2940 3123 0
8800 -1484 2942 3121 0
8800 -1484 2944 3119 0
8800 -1484 2946 3117 0
8800 -1484 2948 3115 0
8800 -1482 2858 3203 0
8800 -1482 2860 3201 0
8800 -1482 2862 3199 0
8800 -1482 2864 3197 0
8800 -1482 2866 3195 0
8800 -1482 2868 3193 0
8800 -1482 2870 3191 0
8800 -1482 2872 3189 0
8800 -1482 2874 3187 0
8800 -1482 2876 3185 0
8800 -1482 2878 3183 0
8800 -1482 2880 3181 0
8800 -1482 2882 3179 0
8800 -1482 2884 3177 0
8800 -1482 2886 3175 0
8800 -1482 2888 3173 0
8800 -1482 2890 3171 0
8800 -1482 2892 3169 0
8800 -1482 2894 3167 0
8800 -1482 2896 3165 0
8800 -1482 2898 3163 0
8800 -1482 2900 3161 0
8800 -1482 2902 3159 0
8800 -1482 2904 3157 0
8800 -1482 2906 3155 0
8800 -1482 2908 3153 0
8800 -1482 2910 3151 0
8800 -1482 2912 3149 0
8800 -1482 2914 3147 0
8800 -1482 2916 3145 0
8800 -1482 2918 3143 0
8800 -1482 2920 3141 0
8800 -1482 2922 3139 0
8800 -1482 2924 3137 0
8800 -1482 2926 3135 0
8800 -1482 2928 3133 0
8800 -1482 2930 3131 0
8800 -1482 2932 3129 0
8800 -1482 2934 3127 0
8800 -1482 2936 3125 0
8800 -1482 2938 3123 0
8800 -1482 2940 3121 0
8800 -1482 2942 3119 0
8800 -1482 2944 3117 0
8800 -1482 2946 3115 0
8800 -1482 2948 3113 0
8800 -1480 2856 3203 0
8800 -1480 2858 3201 0
8800 -1480 2860 3199 0
8800 -1480 2862 3197 0
8800 -1480 2864 3195 0
8800 -1480 2866 3193 0
8800 -1480 2868 3191 0
8800 -1480 2870 3189 0
8800 -1480 2872 3187 0
8800 -1480 2874 3185 0
8800 -1480 2876 3183 0
8800 -1480 2878 3181 0
8800 -1480 2880 3179 0
8800 -1480 2882 3177 0
8800 -1480 2884 3175 0
8800 -1480 2886 3173 0
8800 -1480 2888 3171 0
8800 -1480 2890 3169 0
8800 -1480 2892 3167 0
8800 -1480 2894 3165 0
8800 -1480 2896 3163 0
8800 -1480 2898 3161 0
8800 -1480 2900 3159 0
8800 -1480 2902 3157 0
8800 -1480 2904 3155 0
8800 -1480 2906 3153 0
8800 -1480 2908 3151 0
8800 -1480 2910 3149 0
8800 -1480 2912 3147 0
8800 -1480 2914 3145 0
8800 -1480 2916 3143 0
8800 -1480 2918 3141 0
8800 -1480 2920 3139 0
8800 -1480 2922 3137 0
8800 -1480 2924 3135 0
8800 -1480 2926 3133 0
8800 -1480 2928 3131 0
8800 -1480 2930 3129 0
8800 -1480 2932 3127 0
8800 -1480 2934 3125 0
8800 -1480 2936 3123 0
8800 -1480 2938 3121 0
8800 -1480 2940 3119 0
8800 -1480 2942 3117 0
8800 -1480 2944 3115 0
8800 -1480 2946 3113 0
8800 -1480 2948 3111 0
8800 -1478 2854 3203 0
8800 -1478 2856 3201 0
8800 -1478 2858 3199 0
8800 -1478 2860 3197 0
8800 -1478 2862 3195 0
8800 -1478 2864 3193 0
8800 -1478 2866 3191 0
8800 -1478 2868 3189 0
8800 -1478 2870 3187 0
8800 -1478 2872 3185 0
8800 -1478 2874 3183 0
8800 -1478 2876 3181 0
8800 -1478 2878 3179 0
8800 -1478 2880 3177 0
8800 -1478 2882 3175 0
8800 -1478 2884 3173 0
8800 -1478 2886 3171 0
8800 -1478 2888 3169 0
8800 -1478 2890 3167 0
8800 -1478 2892 3165 0
8800 -1478 2894 3163 0
8800 -1478 2896 3161 0
8800 -1478 2898 3159 0
8800 -1478 2900 3157 0
8800 -1478 2902 3155 0
8800 -1478 2904 3153 0
8800 -1478 2906 3151 0
8800 -1478 2908 3149 0
8800 -1478 2910 3147 0
8800 -1478 2912 3145 0
8800 -1478 2914 3143 0
8800 -1478 2916 3141 0
8800 -1478 2918 3139 0
8800 -1478 2920 3137 0
8800 -1478 2922 3135 0
8800 -1478 2924 3133 0
8800 -1478 2926 3131 0
8800 -1478 2928 3129 0
8800 -1478 2930 3127 0
8800 -1478 2932 3125 0
8800 -1478 2934 3123 0
8800 -1478 2936 3121 0
8800 -1478 2938 3119 0
8800 -1478 2940 3117 0
8800 -1478 2942 3115 0
8800 -1478 2944 3113 0
8800 -1478 2946 3111 0
8800 -1478 2948 3109 0
8800 -1476 2852 3203 0
8800 -1476 2854 3201 0
8800 -1476 2856 3199 0
8800 -1476 2858 3197 0
8800 -1476 2860 3195 0
8800 -1476 2862 3193 0
8800 -1476 2864 3191 0
8800 -1476 2866 3189 0
8800 -1476 2868 3187 0
8800 -1476 2870 3185 0
8800 -1476 2872 3183 0
8800 -1476 2874 3181 0
8800 -1476 2876 3179 0
8800 -1476 2878 3177 0
8800 -1476 2880 3175 0
8800 -1476 2882 3173 0
8800 -1476 2884 3171 0
8800 -1476 2886 3169 0
8800 -1476 2888 3167 0
8800 -1476 2890 3165 0
8800 -1476 2892 3163 0
8800 -1476 2894 3161 0
8800 -1476 2896 3159 0
8800 -1476 2898 3157 0
8800 -1476 2900 3155 0
8800 -1476 2902 3153 0
8800 -1476 2904 3151 0
8800 -1476 2906 3149 0
8800 -1476 2908 3147 0
8800 -1476 2910 3145 0
8800 -1476 2912 3143 0
8800 -1476 2914 3141 0
8800 -1476 2916 3139 0
8800 -1476 2918 3137 0
8800 -1476 2920 3135 0
8800 -1476 2922 3133 0
8800 -1476 2924 3131 0
8800 -1476 2926 3129 0
8800 -1476 2928 3127 0
8800 -1476 2930 3125 0
8800 -1476 2932 3123 0
8800 -1476 2934 3121 0
8800 -1476 2936 3119 0
8800 -1476 2938 3117 0
8800 -1476 2940 3115 0
8800 -1476 2942 3113 0
8800 -1476 2944 3111 0
8800 -1476 2946 3109 0
8800 -1476 2948 3107 0
8800 -1474 2850 3203 0
8800 -1474 2852 3201 0
8800 -1474 2854 3199 0
8800 -1474 2856 3197 0
8800 -1474 2858 3195 0
8800 -1474 2860 3193 0
8800 -1474 2862 3191 0
8800 -1474 2864 3189 0
8800 -1474 2866 3187 0
8800 -1474 2868 3185 0
8800 -1474 2870 3183 0
8800 -1474 2872 3181 0
8800 -1474 2874 3179 0
8800 -1474 2876 3177 0
8800 -1474 2878 3175 0
8800 -1474 2880 3173 0
8800 -1474 2882 3171 0
8800 -1474 2884 3169 0
8800 -1474 2886 3167 0
8800 -1474 2888 3165 0
8800 -1474 2890 3163 0
8800 -1474 2892 3161 0
8800 -1474 2894 3159 0
8800 -1474 2896 3157 0
8800 -1474 2898 3155 0
8800 -1474 2900 3153 0
8800 -1474 2902 3151 0
8800 -1474 2904 3149 0
8800 -1474 2906 3147 0
8800 -1474 2908 3145 0
8800 -1474 2910 3143 0
8800 -1474 2912 3141 0
8800 -1474 2914 3139 0
8800 -1474 2916 3137 0
8800 -1474 2918 3135 0
8800 -1474 2920 3133 0
8800 -1474 2922 3131 0
8800 -1474 2924 3129 0
8800 -1474 2926 3127 0
8800 -1474 2928 3125 0
8800 -1474 2930 3123 0
8800 -1474 2932 3121 0
8800 -1474 2934 3119 0
8800 -1474 2936 3117 0
8800 -1474 2938 3115 0
8800 -1474 2940 3113 0
8800 -1474 2942 3111 0
8800 -1474 2944 3109 0
8800 -1474 2946 3107 0
8800 -1474 2948 3105 0
8800 -1472 2848 3203 0
8800 -1472 2850 3201 0
8800 -1472 2852 3199 0
8800 -1472 2854 3197 0
8800 -1472 2856 3195 0
8800 -1472 2858 3193 0
8800 -1472 2860 3191 0
8800 -1472 2862 3189 0
8800 -1472 2864 3187 0
8800 -1472 2866 3185 0
8800 -1472 2868 3183 0
8800 -1472 2870 3181 0
8800 -1472 2872 3179 0
8800 -1472 2874 3177 0
8800 -1472 2876 3175 0
8800 -1472 2878 3173 0
8800 -1472 2880 3171 0
8800 -1472 2882 3169 0
8800 -1472 2884 3167 0
8800 -1472 2886 3165 0
8800 -1472 2888 3163 0
8800 -1472 2890 3161 0
8800 -1472 2892 3159 0
8800 -1472 2894 3157 0
8800 -1472 2896 3155 0
8800 -1472 2898 3153 0
8800 -1472 2900 3151 0
8800 -1472 2902 3149 0
8800 -1472 2904 3147 0
8800 -1472 2906 3145 0
8800 -1472 2908 3143 0
8800 -1472 2910 3141 0
8800 -1472 2912 3139 0
8800 -1472 2914 3137 0
8800 -1472 2916 3135 0
8800 -1472 2918 3133 0
8800 -1472 2920 3131 0
8800 -1472 2922 3129 0
8800 -1472 2924 3127 0
8800 -1472 2926 3125 0
8800 -1472 2928 3123 0
8800 -1472 2930 3121 0
8800 -1472 2932 3119 0
8800 -1472 2934 3117 0
8800 -1472 2936 3115 0
8800 -1472 2938 3113 0
8800 -1472 2940 3111 0
8800 -1472 2942 3109 0
8800 -1472 2944 3107 0
8800 -1472 2946 3105 0
8800 -1472 2948 3103 0
8800 -1470 2846 3203 0
8800 -1470 2848 3201 0
8800 -1470 2850 3199 0
8800 -1470 2852 3197 0
8800 -1470 2854 3195 0
8800 -1470 2856 3193 0
8800 -1470 2858 3191 0
8800 -1470 2860 3189 0
8800 -1470 2862 3187 0
8800 -1470 2864 3185 0
8800 -1470 2866 3183 0
8800 -1470 2868 3181 0
8800 -1470 2870 3179 0
8800 -1470 2872 3177 0
8800 -1470 2874 3175 0
8800 -1470 2876 3173 0
8800 -1470 2878 3171 0
8800 -1470 2880 3169 0
8800 -1470 2882 3167 0
8800 -1470 2884 3165 0
8800 -1470 2886 3163 0
8800 -1470 2888 3161 0
8800 -1470 2890 3159 0
8800 -1470 2892 3157 0
8800 -1470 2894 3155 0
8800 -1470 2896 3153 0
8800 -1470 2898 3151 0
8800 -1470 2900 3149 0
8800 -1470 2902 3147 0
8800 -1470 2904 3145 0
8800 -1470 2906 3143 0
8800 -1470 2908 3141 0
8800 -1470 2910 3139 0
8800 -1470 2912 3137 0
8800 -1470 2914 3135 0
8800 -1470 2916 3133 0
8800 -1470 2918 3131 0
8800 -1470 2920 3129 0
8800 -1470 2922 3127 0
8800 -1470 2924 3125 0
8800 -1470 2926 3123 0
8800 -1470 2928 3121 0
8800 -1470 2930 3119 0
8800 -1470 2932 3117 0
8800 -1470 2934 3115 0
8800 -1470 2936 3113 0
8800 -1470 2938 3111 0
8800 -1470 2940 3109 0
8800 -1470 2942 3107 0
8800 -1470 2944 3105 0
8800 -1470 2946 3103 0
8800 -1470 2948 3101 0
8800 -1468 2844 3203 0
8800 -1468 2846 3201 0
8800 -1468 2848 3199 0
8800 -1468 2850 3197 0
8800 -1468 2852 3195 0
8800 -1468 2854 3193 0
8800 -1468 2856 3191 0
8800 -1468 2858 3189 0
8800 -1468 2860 3187 0
8800 -1468 2862 3185 0
8800 -1468 2864 3183 0
8800 -1468 2866 3181 0
8800 -1468 2868 3179 0
8800 -1468 2870 3177 0
8800 -1468 2872 3175 0
8800 -1468 2874 3173 0
8800 -1468 2876 3171 0
8800 -1468 2878 3169 0
8800 -1468 2880 3167 0
8800 -1468 2882 3165 0
8800 -1468 2884 3163 0
8800 -1468 2886 3161 0
8800 -1468 2888 3159 0
8800 -1468 2890 3157 0
8800 -1468 2892 3155 0
8800 -1468 2894 3153 0
8800 -1468 2896 3151 0
8800 -1468 2898 3149 0
8800 -1468 2900 3147 0
8800 -1468 2902 3145 0
8800 -1468 2904 3143 0
8800 -1468 2906 3141 0
8800 -1468 2908 3139 0
8800 -1468 2910 3137 0
8800 -1468 2912 3135 0
8800 -1468 2914 3133 0
8800 -1468 2916 3131 0
8800 -1468 2918 3129 0
8800 -1468 2920 3127 0
8800 -1468 2922 3125 0
8800 -1468 2924 3123 0
8800 -1468 2926 3121 0
8800 -1468 2928 3119 0
8800 -1468 2930 3117 0
8800 -1468 2932 3115 0
8800 -1468 2934 3113 0
8800 -1468 2936 3111 0
8800 -1468 2938 3109 0
8800 -1468 2940 3107 0
8800 -1468 2942 3105 0
8800 -1468 2944 3103 0
8800 -1468 2946 3101 0
8800 -1468 2948 3099 0
8800 -1466 2842 3203 0
8800 -1466 2844 3201 0
8800 -1466 2846 3199 0
8800 -1466 2848 3197 0
8800 -1466 2850 3195 0
8800 -1466 2852 3193 0
8800 -1466 2854 3191 0
8800 -1466 2856 3189 0
8800 -1466 2858 3187 0
8800 -1466 2860 3185 0
8800 -1466 2862 3183 0
8800 -1466 2864 3181 0
8800 -1466 2866 3179 0
8800 -1466 2868 3177 0
8800 -1466 2870 3175 0
8800 -1466 2872 3173 0
8800 -1466 2874 3171 0
8800 -1466 2876 3169 0
8800 -1466 2878 3167 0
8800 -1466 2880 3165 0
8800 -1466 2882 3163 0
8800 -1466 2884 3161 0
8800 -1466 2886 3159 0
8800 -1466 2888 3157 0
8800 -1466 2890 3155 0
8800 -1466 2892 3153 0
8800 -1466 2894 3151 0
8800 -1466 2896 3149 0
8800 -1466 2898 3147 0
8800 -1466 2900 3145 0
8800 -1466 2902 3143 0
8800 -1466 2904 3141 0
8800 -1466 2906 3139 0
8800 -1466 2908 3137 0
8800 -1466 2910 3135 0
8800 -1466 2912 3133 0
8800 -1466 2914 3131 0
8800 -1466 2916 3129 0
8800 -1466 2918 3127 0
8800 -1466 2920 3125 0
8800 -1466 2922 3123 0
8800 -1466 2924 3121 0
8800 -1466 2926 3119 0
8800 -1466 2928 3117 0
8800 -1466 2930 3115 0
8800 -1466 2932 3113 0
8800 -1466 2934 3111 0
8800 -1466 2936 3109 0
8800 -1466 2938 3107 0
8800 -1466 2940 3105 0
8800 -1466 2942 3103 0
8800 -1466 2944 3101 0
8800 -1466 2946 3099 0
8800 -1466 2948 3097 0
8800 -1464 2840 3203 0
8800 -1464 2842 3201 0
8800 -1464 2844 3199 0
8800 -1464 2846 3197 0
8800 -1464 2848 3195 0
8800 -1464 2850 3193 0
8800 -1464 2852 3191 0
8800 -1464 2854 3189 0
8800 -1464 2856 3187 0
8800 -1464 2858 3185 0
8800 -1464 2860 3183 0
8800 -1464 2862 3181 0
8800 -1464 2864 3179 0
8800 -1464 2866 3177 0
8800 -1464 2868 3175 0
8800 -1464 2870 3173 0
8800 -1464 2872 3171 0
8800 -1464 2874 3169 0
8800 -1464 2876 3167 0
8800 -1464 2878 3165 0
8800 -1464 2880 3163 0
8800 -1464 2882 3161 0
8800 -1464 2884 3159 0
8800 -1464 2886 3157 0
8800 -1464 2888 3155 0
8800 -1464 2890 3153 0
8800 -1464 2892 3151 0
8800 -1464 2894 3149 0
8800 -1464 2896 3147 0
8800 -1464 2898 3145 0
8800 -1464 2900 3143 0
8800 -1464 2902 3141 0
8800 -1464 2904 3139 0
8800 -1464 2906 3137 0
8800 -1464 2908 3135 0
8800 -1464 2910 3133 0
8800 -1464 2912 3131 0
8800 -1464 2914 3129 0
8800 -1464 2916 3127 0
8800 -1464 2918 3125 0
8800 -1464 2920 3123 0
8800 -1464 2922 3121 0
8800 -1464 2924 3119 0
8800 -1464 2926 3117 0
8800 -1464 2928 3115 0
8800 -1464 2930 3113 0
8800 -1464 2932 3111 0
8800 -1464 2934 3109 0
8800 -1464 2936 3107 0
8800 -1464 2938 3105 0
8800 -1464 2940 3103 0
8800 -1464 2942 3101 0
8800 -1464 2944 3099 0
8800 -1464 2946 3097 0
8800 -1464 2948 3095 0
8800 -1462 2838 3203 0
8800 -1462 2840 3201 0
8800 -1462 2842 3199 0
8800 -1462 2844 3197 0
8800 -1462 2846 3195 0
8800 -1462 2848 3193 0
8800 -1462 2850 3191 0
8800 -1462 2852 3189 0
8800 -1462 2854 3187 0
8800 -1462 2856 3185 0
8800 -1462 2858 3183 0
8800 -1462 2860 3181 0
8800 -1462 2862 3179 0
8800 -1462 2864 3177 0
8800 -1462 2866 3175 0
8800 -1462 2868 3173 0
8800 -1462 2870 3171 0
8800 -1462 2872 3169 0
8800 -1462 2874 3167 0
8800 -1462 2876 3165 0
8800 -1462 2878 3163 0
8800 -1462 2880 3161 0
8800 -1462 2882 3159 0
8800 -1462 2884 3157 0
8800 -1462 2886 3155 0
8800 -1462 2888 3153 0
8800 -1462 2890 3151 0
8800 -1462 2892 3149 0
8800 -1462 2894 3147 0
8800 -1462 2896 3145 0
8800 -1462 2898 3143 0
8800 -1462 2900 3141 0
8800 -1462 2902 3139 0
8800 -1462 2904 3137 0
8800 -1462 2906 3135 0
8800 -1462 2908 3133 0
8800 -1462 2910 3131 0
8800 -1462 2912 3129 0
8800 -1462 2914 3127 0
8800 -1462 2916 3125 0
8800 -1462 2918 3123 0
8800 -1462 2920 3121 0
8800 -1462 2922 3119 0
8800 -1462 2924 3117 0
8800 -1462 2926 3115 0
8800 -1462 2928 3113 0
8800 -1462 2930 3111 0
8800 -1462 2932 3109 0
8800 -1462 2934 3107 0
8800 -1462 2936 3105 0
8800 -1462 2938 3103 0
8800 -1462 2940 3101 0
8800 -1462 2942 3099 0
8800 -1462 2944 3097 0
8800 -1462 2946 3095 0
8800 -1462 2948 3093 0
8800 -1460 2836 3203 0
8800 -1460 2838 3201 0
8800 -1460 2840 3199 0
8800 -1460 2842 3197 0
8800 -1460 2844 3195 0
8800 -1460 2846 3193 0
8800 -1460 2848 3191 0
8800 -1460 2850 3189 0
8800 -1460 2852 3187 0
8800 -1460 2854 3185 0
8800 -1460 2856 3183 0
8800 -1460 2858 3181 0
8800 -1460 2860 3179 0
8800 -1460 2862 3177 0
8800 -1460 2864 3175 0
8800 -1460 2866 3173 0
8800 -1460 2868 3171 0
8800 -1460 2870 3169 0
8800 -1460 2872 3167 0
8800 -1460 2874 3165 0
8800 -1460 2876 3163 0
8800 -1460 2878 3161 0
8800 -1460 2880 3159 0
8800 -1460 2882 3157 0
8800 -1460 2884 3155 0
8800 -1460 2886 3153 0
8800 -1460 2888 3151 0
8800 -1460 2890 3149 0
8800 -1460 2892 3147 0
8800 -1460 2894 3145 0
8800 -1460 2896 3143 0
8800 -1460 2898 3141 0
8800 -1460 2900 3139 0
8800 -1460 2902 3137 0
8800 -1460 2904 3135 0
8800 -1460 2906 3133 0
8800 -1460 2908 3131 0
8800 -1460 2910 3129 0
8800 -1460 2912 3127 0
8800 -1460 2914 3125 0
8800 -1460 2916 3123 0
8800 -1460 2918 3121 0
8800 -1460 2920 3119 0
8800 -1460 2922 3117 0
8800 -1460 2924 3115 0
8800 -1460 2926 3113 0
8800 -1460 2928 3111 0
8800 -1460 2930 3109 0
8800 -1460 2932 3107 0
8800 -1460 2934 3105 0
8800 -1460 2936 3103 0
8800 -1460 2938 3101 0
8800 -1460 2940 3099 0
8800 -1460 2942 3097 0
8800 -1460 2944 3095 0
8800 -1460 2946 3093 0
8800 -1460 2948 3091 0
8800 -1458 2834 3203 0
8800 -1458 2836 3201 0
8800 -1458 2838 3199 0
8800 -1458 2840 3197 0
8800 -1458 2842 3195 0
8800 -1458 2844 3193 0
8800 -1458 2846 3191 0
8800 -1458 2848 3189 0
8800 -1458 2850 3187 0
8800 -1458 2852 3185 0
8800 -1458 2854 3183 0
8800 -1458 2856 3181 0
8800 -1458 2858 3179 0
8800 -1458 2860 3177 0
8800 -1458 2862 3175 0
8800 -1458 2864 3173 0
8800 -1458 2866 3171 0
8800 -1458 2868 3169 0
8800 -1458 2870 3167 0
8800 -1458 2872 3165 0
8800 -1458 2874 3163 0
8800 -1458 2876 3161 0
8800 -1458 2878 3159 0
8800 -1458 2880 3157 0
8800 -1458 2882 3155 0
8800 -1458 2884 3153 0
8800 -1458 2886 3151 0
8800 -1458 2888 3149 0
8800 -1458 2890 3147 0
8800 -1458 2892 3145 0
8800 -1458 2894 3143 0
8800 -1458 2896 3141 0
8800 -1458 2898 3139 0
8800 -1458 2900 3137 0
8800 -1458 2902 3135 0
8800 -1458 2904 3133 0
8800 -1458 2906 3131 0
8800 -1458 2908 3129 0
8800 -1458 2910 3127 0
8800 -1458 2912 3125 0
8800 -1458 2914 3123 0
8800 -1458 2916 3121 0
8800 -1458 2918 3119 0
8800 -1458 2920 3117 0
8800 -1458 2922 3115 0
8800 -1458 2924 3113 0
8800 -1458 2926 3111 0
8800 -1458 2928 3109 0
8800 -1458 2930 3107 0
8800 -1458 2932 3105 0
8800 -1458 2934 3103 0
8800 -1458 2936 3101 0
8800 -1458 2938 3099 0
8800 -1458 2940 3097 0
8800 -1458 2942 3095 0
8800 -1458 2944 3093 0
8800 -1458 2946 3091 0
8800 -1458 2948 3089 0
8800 -1456 2832 3203 0
8800 -1456 2834 3201 0
8800 -1456 2836 3199 0
8800 -1456 2838 3197 0
8800 -1456 2840 3195 0
8800 -1456 2842 3193 0
8800 -1456 2844 3191 0
8800 -1456 2846 3189 0
8800 -1456 2848 3187 0
8800 -1456 2850 3185 0
8800 -1456 2852 3183 0
8800 -1456 2854 3181 0
8800 -1456 2856 3179 0
8800 -1456 2858 3177 0
8800 -1456 2860 3175 0
8800 -1456 2862 3173 0
8800 -1456 2864 3171 0
8800 -1456 2866 3169 0
8800 -1456 2868 3167 0
8800 -1456 2870 3165 0
8800 -1456 2872 3163 0
8800 -1456 2874 3161 0
8800 -1456 2876 3159 0
8800 -1456 2878 3157 0
8800 -1456 2880 3155 0
8800 -1456 2882 3153 0
8800 -1456 2884 3151 0
8800 -1456 2886 3149 0
8800 -1456 2888 3147 0
8800 -1456 2890 3145 0
8800 -1456 2892 3143 0
8800 -1456 2894 3141 0
8800 -1456 2896 3139 0
8800 -1456 2898 3137 0
8800 -1456 2900 3135 0
8800 -1456 2902 3133 0
8800 -1456 2904 3131 0
8800 -1456 2906 3129 0
8800 -1456 2908 3127 0
8800 -1456 2910 3125 0
8800 -1456 2912 3123 0
8800 -1456 2914 3121 0
8800 -1456 2916 3119 0
8800 -1456 2918 3117 0
8800 -1456 2920 3115 0
8800 -1456 2922 3113 0
8800 -1456 2924 3111 0
8800 -1456 2926 3109 0
8800 -1456 2928 3107 0
8800 -1456 2930 3105 0
8800 -1456 2932 3103 0
8800 -1456 2934 3101 0
8800 -1456 2936 3099 0
8800 -1456 2938 3097 0
8800 -1456 2940 3095 0
8800 -1456 2942 3093 0
8800 -1456 2944 3091 0
8800 -1456 2946 3089 0
8800 -1456 2948 3087 0
8800 -1454 2830 3203 0
8800 -1454 2832 3201 0
8800 -1454 2834 3199 0
8800 -1454 2836 3197 0
8800 -1454 2838 3195 0
8800 -1454 2840 3193 0
8800 -1454 2842 3191 0
8800 -1454 2844 3189 0
8800 -1454 2846 3187 0
8800 -1454 2848 3185 0
8800 -1454 2850 3183 0
8800 -1454 2852 3181 0
8800 -1454 2854 3179 0
8800 -1454 2856 3177 0
8800 -1454 2858 3175 0
8800 -1454 2860 3173 0
8800 -1454 2862 3171 0
8800 -1454 2864 3169 0
8800 -1454 2866 3167 0
8800 -1454 2868 3165 0
8800 -1454 2870 3163 0
8800 -1454 2872 3161 0
8800 -1454 2874 3159 0
8800 -1454 2876 3157 0
8800 -1454 2878 3155 0
8800 -1454 2880 3153 0
8800 -1454 2882 3151 0
8800 -1454 2884 3149 0
8800 -1454 2886 3147 0
8800 -1454 2888 3145 0
8800 -1454 2890 3143 0
8800 -1454 2892 3141 0
8800 -1454 2894 3139 0
8800 -1454 2896 3137 0
8800 -1454 2898 3135 0
8800 -1454 2900 3133 0
8800 -1454 2902 3131 0
8800 -1454 2904 3129 0
8800 -1454 2906 3127 0
8800 -1454 2908 3125 0
8800 -1454 2910 3123 0
8800 -1454 2912 3121 0
8800 -1454 2914 3119 0
8800 -1454 2916 3117 0
8800 -1454 2918 3115 0
8800 -1454 2920 3113 0
8800 -1454 2922 3111 0
8800 -1454 2924 3109 0
8800 -1454 2926 3107 0
8800 -1454 2928 3105 0
8800 -1454 2930 3103 0
8800 -1454 2932 3101 0
8800 -1454 2934 3099 0
8800 -1454 2936 3097 0
8800 -1454 2938 3095 0
8800 -1454 2940 3093 0
8800 -1454 2942 3091 0
8800 -1454 2944 3089 0
8800 -1454 2946 3087 0
8800 -1454 2948 3085 0
8800 -1452 2828 3203 0
8800 -1452 2830 3201 0
8800 -1452 2832 3199 0
8800 -1452 2834 3197 0
8800 -1452 2836 3195 0
8800 -1452 2838 3193 0
8800 -1452 2840 3191 0
8800 -1452 2842 3189 0
8800 -1452 2844 3187 0
8800 -1452 2846 3185 0
8800 -1452 2848 3183 0
8800 -1452 2850 3181 0
8800 -1452 2852 3179 0
8800 -1452 2854 3177 0
8800 -1452 2856 3175 0
8800 -1452 2858 3173 0
8800 -1452 2860 3171 0
8800 -1452 2862 3169 0
8800 -1452 2864 3167 0
8800 -1452 2866 3165 0
8800 -1452 2868 3163 0
8800 -1452 2870 3161 0
8800 -1452 2872 3159 0
8800 -1452 2874 3157 0
8800 -1452 2876 3155 0
8800 -1452 2878 3153 0
8800 -1452 2880 3151 0
8800 -1452 2882 3149 0
8800 -1452 2884 3147 0
8800 -1452 2886 3145 0
8800 -1452 2888 3143 0
8800 -1452 2890 3141 0
8800 -1452 2892 3139 0
8800 -1452 2894 3137 0
8800 -1452 2896 3135 0
8800 -1452 2898 3133 0
8800 -1452 2900 3131 0
8800 -1452 2902 3129 0
8800 -1452 2904 3127 0
8800 -1452 2906 3125 0
8800 -1452 2908 3123 0
8800 -1452 2910 3121 0
8800 -1452 2912 3119 0
8800 -1452 2914 3117 0
8800 -1452 2916 3115 0
8800 -1452 2918 3113 0
8800 -1452 2920 3111 0
8800 -1452 2922 3109 0
8800 -1452 2924 3107 0
8800 -1452 2926 3105 0
8800 -1452 2928 3103 0
8800 -1452 2930 3101 0
8800 -1452 2932 3099 0
8800 -1452 2934 3097 0
8800 -1452 2936 3095 0
8800 -1452 2938 3093 0
8800 -1452 2940 3091 0
8800 -1452 2942 3089 0
8800 -1452 2944 3087 0
8800 -1452 2946 3085 0
8800 -1452 2948 3083 0
8800 -1450 2826 3203 0
8800 -1450 2828 3201 0
8800 -1450 2830 3199 0
8800 -1450 2832 3197 0
8800 -1450 2834 3195 0
8800 -1450 2836 3193 0
8800 -1450 2838 3191 0
8800 -1450 2840 3189 0
8800 -1450 2842 3187 0
8800 -1450 2844 3185 0
8800 -1450 2846 3183 0
8800 -1450 2848 3181 0
8800 -1450 2850 3179 0
8800 -1450 2852 3177 0
8800 -1450 2854 3175 0
8800 -1450 2856 3173 0
8800 -1450 2858 3171 0
8800 -1450 2860 3169 0
8800 -1450 2862 3167 0
8800 -1450 2864 3165 0
8800 -1450 2866 3163 0
8800 -1450 2868 3161 0
8800 -1450 2870 3159 0
8800 -1450 2872 3157 0
8800 -1450 2874 3155 0
8800 -1450 2876 3153 0
8800 -1450 2878 3151 0
8800 -1450 2880 3149 0
8800 -1450 2882 3147 0
8800 -1450 2884 3145 0
8800 -1450 2886 3143 0
8800 -1450 2888 3141 0
8800 -1450 2890 3139 0
8800 -1450 2892 3137 0
8800 -1450 2894 3135 0
8800 -1450 2896 3133 0
8800 -1450 2898 3131 0
8800 -1450 2900 3129 0
8800 -1450 2902 3127 0
8800 -1450 2904 3125 0
8800 -1450 2906 3123 0
8800 -1450 2908 3121 0
8800 -1450 2910 3119 0
8800 -1450 2912 3117 0
8800 -1450 2914 3115 0
8800 -1450 2916 3113 0
8800 -1450 2918 3111 0
8800 -1450 2920 3109 0
8800 -1450 2922 3107 0
8800 -1450 2924 3105 0
8800 -1450 2926 3103 0
8800 -1450 2928 3101 0
8800 -1450 2930 3099 0
8800 -1450 2932 3097 0
8800 -1450 2934 3095 0
8800 -1450 2936 3093 0
8800 -1450 2938 3091 0
8800 -1450 2940 3089 0
8800 -1450 2942 3087 0
8800 -1450 2944 3085 0
8800 -1450 2946 3083 0
8800 -1450 2948 3081 0
8800 -1448 2824 3203 0
8800 -1448 2826 3201 0
8800 -1448 2828 3199 0
8800 -1448 2830 3197 0
8800 -1448 2832 3195 0
8800 -1448 2834 3193 0
8800 -1448 2836 3191 0
8800 -1448 2838 3189 0
8800 -1448 2840 3187 0
8800 -1448 2842 3185 0
8800 -1448 2844 3183 0
8800 -1448 2846 3181 0
8800 -1448 2848 3179 0
8800 -1448 2850 3177 0
8800 -1448 2852 3175 0
8800 -1448 2854 3173 0
8800 -1448 2856 3171 0
8800 -1448 2858 3169 0
8800 -1448 2860 3167 0
8800 -1448 2862 3165 0
8800 -1448 2864 3163 0
8800 -1448 2866 3161 0
8800 -1448 2868 3159 0
8800 -1448 2870 3157 0
8800 -1448 2872 3155 0
8800 -1448 2874 3153 0
8800 -1448 2876 3151 0
8800 -1448 2878 3149 0
8800 -1448 2880 3147 0
8800 -1448 2882 3145 0
8800 -1448 2884 3143 0
8800 -1448 2886 3141 0
8800 -1448 2888 3139 0
8800 -1448 2890 3137 0
8800 -1448 2892 3135 0
8800 -1448 2894 3133 0
8800 -1448 2896 3131 0
8800 -1448 2898 3129 0
8800 -1448 2900 3127 0
8800 -1448 2902 3125 0
8800 -1448 2904 3123 0
8800 -1448 2906 3121 0
8800 -1448 2908 3119 0
8800 -1448 2910 3117 0
8800 -1448 2912 3115 0
8800 -1448 2914 3113 0
8800 -1448 2916 3111 0
8800 -1448 2918 3109 0
8800 -1448 2920 3107 0
8800 -1448 2922 3105 0
8800 -1448 2924 3103 0
8800 -1448 2926 3101 0
8800 -1448 2928 3099 0
8800 -1448 2930 3097 0
8800 -1448 2932 3095 0
8800 -1448 2934 3093 0
8800 -1448 2936 3091 0
8800 -1448 2938 3089 0
8800 -1448 2940 3087 0
8800 -1448 2942 3085 0
8800 -1448 2944 3083 0
8800 -1448 2946 3081 0
8800 -1448 2948 3079 0
8800 -1446 2822 3203 0
8800 -1446 2824 3201 0
8800 -1446 2826 3199 0
8800 -1446 2828 3197 0
8800 -1446 2830 3195 0
8800 -1446 2832 3193 0
8800 -1446 2834 3191 0
8800 -1446 2836 3189 0
8800 -1446 2838 3187 0
8800 -1446 2840 3185 0
8800 -1446 2842 3183 0
8800 -1446 2844 3181 0
8800 -1446 2846 3179 0
8800 -1446 2848 3177 0
8800 -1446 2850 3175 0
8800 -1446 2852 3173 0
8800 -1446 2854 3171 0
8800 -1446 2856 3169 0
8800 -1446 2858 3167 0
8800 -1446 2860 3165 0
8800 -1446 2862 3163 0
8800 -1446 2864 3161 0
8800 -1446 2866 3159 0
8800 -1446 2868 3157 0
8800 -1446 2870 3155 0
8800 -1446 2872 3153 0
8800 -1446 2874 3151 0
8800 -1446 2876 3149 0
8800 -1446 2878 3147 0
8800 -1446 2880 3145 0
8800 -1446 2882 3143 0
8800 -1446 2884 3141 0
8800 -1446 2886 3139 0
8800 -1446 2888 3137 0
8800 -1446 2890 3135 0
8800 -1446 2892 3133 0
8800 -1446 2894 3131 0
8800 -1446 2896 3129 0
8800 -1446 2898 3127 0
8800 -1446 2900 3125 0
8800 -1446 2902 3123 0
8800 -1446 2904 3121 0
8800 -1446 2906 3119 0
8800 -1446 2908 3117 0
8800 -1446 2910 3115 0
8800 -1446 2912 3113 0
8800 -1446 2914 3111 0
8800 -1446 2916 3109 0
8800 -1446 2918 3107 0
8800 -1446 2920 3105 0
8800 -1446 2922 3103 0
8800 -1446 2924 3101 0
8800 -1446 2926 3099 0
8800 -1446 2928 3097 0
8800 -1446 2930 3095 0
8800 -1446 2932 3093 0
8800 -1446 2934 3091 0
8800 -1446 2936 3089 0
8800 -1446 2938 3087 0
8800 -1446 2940 3085 0
8800 -1446 2942 3083 0
8800 -1446 2944 3081 0
8800 -1446 2946 3079 0
8800 -1446 2948 3077 0
8800 -1445 2820 3203 0
8800 -1445 2822 3201 0
8800 -1445 2824 3199 0
8800 -1445 2826 3197 0
8800 -1445 2828 3195 0
8800 -1445 2830 3193 0
8800 -1445 2832 3191 0
8800 -1445 2834 3189 0
8800 -1445 2836 3187 0
8800 -1445 2838 3185 0
8800 -1445 2840 3183 0
8800 -1445 2842 3181 0
8800 -1445 2844 3179 0
8800 -1445 2846 3177 0
8800 -1445 2848 3175 0
8800 -1445 2850 3173 0
8800 -1445 2852 3171 0
8800 -1445 2854 3169 0
8800 -1445 2856 3167 0
8800 -1445 2858 3165 0
8800 -1445 2860 3163 0
8800 -1445 2862 3161 0
8800 -1445 2864 3159 0
8800 -1445 2866 3157 0
8800 -1445 2868 3155 0
8800 -1445 2870 3153 0
8800 -1445 2872 3151 0
8800 -1445 2874 3149 0
8800 -1445 2876 3147 0
8800 -1445 2878 3145 0
8800 -1445 2880 3143 0
8800 -1445 2882 3141 0
8800 -1445 2884 3139 0
8800 -1445 2886 3137 0
8800 -1445 2888 3135 0
8800 -1445 2890 3133 0
8800 -1445 2892 3131 0
8800 -1445 2894 3129 0
8800 -1445 2896 3127 0
8800 -1445 2898 3125 0
8800 -1445 2900 3123 0
8800 -1445 2902 3121 0
8800 -1445 2904 3119 0
8800 -1445 2906 3117 0
8800 -1445 2908 3115 0
8800 -1445 2910 3113 0
8800 -1445 2912 3111 0
8800 -1445 2914 3109 0
8800 -1445 2916 3107 0
8800 -1445 2918 3105 0
8800 -1445 2920 3103 0
8800 -1445 2922 3101 0
8800 -1445 2924 3099 0
8800 -1445 2926 3097 0
8800 -1445 2928 3095 0
8800 -1445 2930 3093 0
8800 -1445 2932 3091 0
8800 -1445 2934 3089 0
8800 -1445 2936 3087 0
8800 -1445 2938 3085 0
8800 -1445 2940 3083 0
8800 -1445 2942 3081 0
8800 -1445 2944 3079 0
8800 -1445 2946 3077 0
8800 -1445 2948 3075 0
c (((aux407 + aux408 + aux410)<=2)=tv=SATLiteral(8801))
-8801 3220 0
-8801 3211 3218 0
-8801 3212 3217 0
-8801 3208 3218 0
-8801 3208 3211 3217 0
-8801 3208 3212 0
-8801 3209 3217 0
-8801 3209 3211 0
-8801 3209 3212 0
8801 -3211 -3217 0
8801 -3209 -3212 -3217 0
8801 -3209 -3211 -3218 0
8801 -3208 -3217 0
8801 -3208 -3212 -3218 0
8801 -3208 -3211 -3220 0
c ((2<=(aux407 + aux408 + aux410))=tv=SATLiteral(8802))
-8802 -3209 -3211 -3217 0
-8802 -3208 -3212 -3217 0
-8802 -3208 -3211 -3218 0
8802 3218 0
8802 3211 3217 0
8802 3212 0
8802 3208 3217 0
8802 3208 3211 0
8802 3208 3212 0
8802 3209 0
8802 3209 3211 0
8802 3209 3212 0
c (((aux412 + aux413 + aux415)<=4)=tv=SATLiteral(8803))
-8803 3230 3241 0
-8803 3231 3239 0
-8803 3227 3241 0
-8803 3227 3230 3239 0
-8803 3227 3231 3237 0
-8803 3228 3239 0
-8803 3228 3230 3237 0
-8803 3228 3231 3236 0
8803 -3236 0
8803 -3231 -3237 0
8803 -3230 -3239 0
8803 -3228 -3237 0
8803 -3228 -3231 -3239 0
8803 -3228 -3230 -3241 0
8803 -3227 -3239 0
8803 -3227 -3231 -3241 0
8803 -3227 -3230 0
c ((4<=(aux412 + aux413 + aux415))=tv=SATLiteral(8804))
-8804 -3231 -3236 0
-8804 -3230 -3237 0
-8804 -3228 -3236 0
-8804 -3228 -3231 -3237 0
-8804 -3228 -3230 -3239 0
-8804 -3227 -3237 0
-8804 -3227 -3231 -3239 0
-8804 -3227 -3230 -3241 0
8804 3241 0
8804 3230 3239 0
8804 3231 3237 0
8804 3227 3239 0
8804 3227 3230 3237 0
8804 3227 3231 3236 0
8804 3228 3237 0
8804 3228 3230 3236 0
8804 3228 3231 0
c (((aux417 + aux418 + aux420)<=2)=tv=SATLiteral(8805))
-8805 3258 0
-8805 3249 3256 0
-8805 3250 3255 0
-8805 3246 3256 0
-8805 3246 3249 3255 0
-8805 3246 3250 0
-8805 3247 3255 0
-8805 3247 3249 0
-8805 3247 3250 0
8805 -3249 -3255 0
8805 -3247 -3250 -3255 0
8805 -3247 -3249 -3256 0
8805 -3246 -3255 0
8805 -3246 -3250 -3256 0
8805 -3246 -3249 -3258 0
c ((2<=(aux417 + aux418 + aux420))=tv=SATLiteral(8806))
-8806 -3247 -3249 -3255 0
-8806 -3246 -3250 -3255 0
-8806 -3246 -3249 -3256 0
8806 3256 0
8806 3249 3255 0
8806 3250 0
8806 3246 3255 0
8806 3246 3249 0
8806 3246 3250 0
8806 3247 0
8806 3247 3249 0
8806 3247 3250 0
c (((aux422 + aux423 + aux425)<=3)=tv=SATLiteral(8807))
-8807 3279 0
-8807 3268 3277 0
-8807 3269 3275 0
-8807 3265 3277 0
-8807 3265 3268 3275 0
-8807 3265 3269 3274 0
-8807 3266 3275 0
-8807 3266 3268 3274 0
-8807 3266 3269 0
8807 -3269 -3274 0
8807 -3268 -3275 0
8807 -3266 -3274 0
8807 -3266 -3269 -3275 0
8807 -3266 -3268 -3277 0
8807 -3265 -3275 0
8807 -3265 -3269 -3277 0
8807 -3265 -3268 -3279 0
c ((3<=(aux422 + aux423 + aux425))=tv=SATLiteral(8808))
-8808 -3268 -3274 0
-8808 -3266 -3269 -3274 0
-8808 -3266 -3268 -3275 0
-8808 -3265 -3274 0
-8808 -3265 -3269 -3275 0
-8808 -3265 -3268 -3277 0
8808 3277 0
8808 3268 3275 0
8808 3269 3274 0
8808 3265 3275 0
8808 3265 3268 3274 0
8808 3265 3269 0
8808 3266 3274 0
8808 3266 3268 0
8808 3266 3269 0
c (((aux427 + aux428 + aux430)<=2)=tv=SATLiteral(8809))
-8809 3296 0
-8809 3287 3294 0
-8809 3288 3293 0
-8809 3284 3294 0
-8809 3284 3287 3293 0
-8809 3284 3288 0
-8809 3285 3293 0
-8809 3285 3287 0
-8809 3285 3288 0
8809 -3287 -3293 0
8809 -3285 -3288 -3293 0
8809 -3285 -3287 -3294 0
8809 -3284 -3293 0
8809 -3284 -3288 -3294 0
8809 -3284 -3287 -3296 0
c ((2<=(aux427 + aux428 + aux430))=tv=SATLiteral(8810))
-8810 -3285 -3287 -3293 0
-8810 -3284 -3288 -3293 0
-8810 -3284 -3287 -3294 0
8810 3294 0
8810 3287 3293 0
8810 3288 0
8810 3284 3293 0
8810 3284 3287 0
8810 3284 3288 0
8810 3285 0
8810 3285 3287 0
8810 3285 3288 0
c (((aux432 + aux433 + aux435)<=1)=tv=SATLiteral(8811))
-8811 3313 0
-8811 3306 3312 0
-8811 3307 0
-8811 3303 3312 0
-8811 3303 3306 0
-8811 3303 3307 0
-8811 3304 0
-8811 3304 3306 0
-8811 3304 3307 0
8811 -3304 -3306 -3312 0
8811 -3303 -3307 -3312 0
8811 -3303 -3306 -3313 0
c ((1<=(aux432 + aux433 + aux435))=tv=SATLiteral(8812))
-8812 -3303 -3306 -3312 0
8812 3312 0
8812 3306 0
8812 3307 0
8812 3303 0
8812 3303 3306 0
8812 3303 3307 0
8812 3304 0
8812 3304 3306 0
8812 3304 3307 0
c (((aux437 + aux438 + aux440)<=4)=tv=SATLiteral(8813))
-8813 3325 3336 0
-8813 3326 3334 0
-8813 3322 3336 0
-8813 3322 3325 3334 0
-8813 3322 3326 3332 0
-8813 3323 3334 0
-8813 3323 3325 3332 0
-8813 3323 3326 3331 0
8813 -3331 0
8813 -3326 -3332 0
8813 -3325 -3334 0
8813 -3323 -3332 0
8813 -3323 -3326 -3334 0
8813 -3323 -3325 -3336 0
8813 -3322 -3334 0
8813 -3322 -3326 -3336 0
8813 -3322 -3325 0
c ((4<=(aux437 + aux438 + aux440))=tv=SATLiteral(8814))
-8814 -3326 -3331 0
-8814 -3325 -3332 0
-8814 -3323 -3331 0
-8814 -3323 -3326 -3332 0
-8814 -3323 -3325 -3334 0
-8814 -3322 -3332 0
-8814 -3322 -3326 -3334 0
-8814 -3322 -3325 -3336 0
8814 3336 0
8814 3325 3334 0
8814 3326 3332 0
8814 3322 3334 0
8814 3322 3325 3332 0
8814 3322 3326 3331 0
8814 3323 3332 0
8814 3323 3325 3331 0
8814 3323 3326 0
c (((aux442 + aux443 + aux445)<=2)=tv=SATLiteral(8815))
-8815 3353 0
-8815 3344 3351 0
-8815 3345 3350 0
-8815 3341 3351 0
-8815 3341 3344 3350 0
-8815 3341 3345 0
-8815 3342 3350 0
-8815 3342 3344 0
-8815 3342 3345 0
8815 -3344 -3350 0
8815 -3342 -3345 -3350 0
8815 -3342 -3344 -3351 0
8815 -3341 -3350 0
8815 -3341 -3345 -3351 0
8815 -3341 -3344 -3353 0
c ((2<=(aux442 + aux443 + aux445))=tv=SATLiteral(8816))
-8816 -3342 -3344 -3350 0
-8816 -3341 -3345 -3350 0
-8816 -3341 -3344 -3351 0
8816 3351 0
8816 3344 3350 0
8816 3345 0
8816 3341 3350 0
8816 3341 3344 0
8816 3341 3345 0
8816 3342 0
8816 3342 3344 0
8816 3342 3345 0
c (((aux447 + aux448 + aux450)<=5)=tv=SATLiteral(8817))
-8817 3364 3374 0
-8817 3360 3363 3374 0
-8817 3360 3364 3372 0
-8817 3361 3374 0
-8817 3361 3363 3372 0
-8817 3361 3364 3370 0
8817 -3370 0
8817 -3364 -3372 0
8817 -3363 -3374 0
8817 -3361 -3372 0
8817 -3361 -3364 -3374 0
8817 -3361 -3363 0
8817 -3360 -3374 0
8817 -3360 -3364 0
8817 -3360 -3363 0
c ((5<=(aux447 + aux448 + aux450))=tv=SATLiteral(8818))
-8818 -3369 0
-8818 -3364 -3370 0
-8818 -3363 -3372 0
-8818 -3361 -3370 0
-8818 -3361 -3364 -3372 0
-8818 -3361 -3363 -3374 0
-8818 -3360 -3372 0
-8818 -3360 -3364 -3374 0
-8818 -3360 -3363 0
8818 3363 3374 0
8818 3364 3372 0
8818 3360 3374 0
8818 3360 3363 3372 0
8818 3360 3364 3370 0
8818 3361 3372 0
8818 3361 3363 3370 0
8818 3361 3364 3369 0
c (((aux457 + aux458 + aux460)<=5)=tv=SATLiteral(8819))
-8819 3402 3412 0
-8819 3398 3401 3412 0
-8819 3398 3402 3410 0
-8819 3399 3412 0
-8819 3399 3401 3410 0
-8819 3399 3402 3408 0
8819 -3408 0
8819 -3402 -3410 0
8819 -3401 -3412 0
8819 -3399 -3410 0
8819 -3399 -3402 -3412 0
8819 -3399 -3401 0
8819 -3398 -3412 0
8819 -3398 -3402 0
8819 -3398 -3401 0
c ((5<=(aux457 + aux458 + aux460))=tv=SATLiteral(8820))
-8820 -3407 0
-8820 -3402 -3408 0
-8820 -3401 -3410 0
-8820 -3399 -3408 0
-8820 -3399 -3402 -3410 0
-8820 -3399 -3401 -3412 0
-8820 -3398 -3410 0
-8820 -3398 -3402 -3412 0
-8820 -3398 -3401 0
8820 3401 3412 0
8820 3402 3410 0
8820 3398 3412 0
8820 3398 3401 3410 0
8820 3398 3402 3408 0
8820 3399 3410 0
8820 3399 3401 3408 0
8820 3399 3402 3407 0
c (((aux462 + aux463 + aux465)<=1)=tv=SATLiteral(8821))
-8821 3427 0
-8821 3420 3426 0
-8821 3421 0
-8821 3417 3426 0
-8821 3417 3420 0
-8821 3417 3421 0
-8821 3418 0
-8821 3418 3420 0
-8821 3418 3421 0
8821 -3418 -3420 -3426 0
8821 -3417 -3421 -3426 0
8821 -3417 -3420 -3427 0
c ((1<=(aux462 + aux463 + aux465))=tv=SATLiteral(8822))
-8822 -3417 -3420 -3426 0
8822 3426 0
8822 3420 0
8822 3421 0
8822 3417 0
8822 3417 3420 0
8822 3417 3421 0
8822 3418 0
8822 3418 3420 0
8822 3418 3421 0
c (((aux467 + aux468 + aux470)<=2)=tv=SATLiteral(8823))
-8823 3448 0
-8823 3439 3446 0
-8823 3440 3445 0
-8823 3436 3446 0
-8823 3436 3439 3445 0
-8823 3436 3440 0
-8823 3437 3445 0
-8823 3437 3439 0
-8823 3437 3440 0
8823 -3439 -3445 0
8823 -3437 -3440 -3445 0
8823 -3437 -3439 -3446 0
8823 -3436 -3445 0
8823 -3436 -3440 -3446 0
8823 -3436 -3439 -3448 0
c ((2<=(aux467 + aux468 + aux470))=tv=SATLiteral(8824))
-8824 -3437 -3439 -3445 0
-8824 -3436 -3440 -3445 0
-8824 -3436 -3439 -3446 0
8824 3446 0
8824 3439 3445 0
8824 3440 0
8824 3436 3445 0
8824 3436 3439 0
8824 3436 3440 0
8824 3437 0
8824 3437 3439 0
8824 3437 3440 0
c (((aux472 + aux473 + aux475)<=1)=tv=SATLiteral(8825))
-8825 3465 0
-8825 3458 3464 0
-8825 3459 0
-8825 3455 3464 0
-8825 3455 3458 0
-8825 3455 3459 0
-8825 3456 0
-8825 3456 3458 0
-8825 3456 3459 0
8825 -3456 -3458 -3464 0
8825 -3455 -3459 -3464 0
8825 -3455 -3458 -3465 0
c ((1<=(aux472 + aux473 + aux475))=tv=SATLiteral(8826))
-8826 -3455 -3458 -3464 0
8826 3464 0
8826 3458 0
8826 3459 0
8826 3455 0
8826 3455 3458 0
8826 3455 3459 0
8826 3456 0
8826 3456 3458 0
8826 3456 3459 0
c (((aux477 + aux478 + aux480)<=2)=tv=SATLiteral(8827))
-8827 3486 0
-8827 3477 3484 0
-8827 3478 3483 0
-8827 3474 3484 0
-8827 3474 3477 3483 0
-8827 3474 3478 0
-8827 3475 3483 0
-8827 3475 3477 0
-8827 3475 3478 0
8827 -3477 -3483 0
8827 -3475 -3478 -3483 0
8827 -3475 -3477 -3484 0
8827 -3474 -3483 0
8827 -3474 -3478 -3484 0
8827 -3474 -3477 -3486 0
c ((2<=(aux477 + aux478 + aux480))=tv=SATLiteral(8828))
-8828 -3475 -3477 -3483 0
-8828 -3474 -3478 -3483 0
-8828 -3474 -3477 -3484 0
8828 3484 0
8828 3477 3483 0
8828 3478 0
8828 3474 3483 0
8828 3474 3477 0
8828 3474 3478 0
8828 3475 0
8828 3475 3477 0
8828 3475 3478 0
c (((aux482 + aux483 + aux485)<=4)=tv=SATLiteral(8829))
-8829 3496 3507 0
-8829 3497 3505 0
-8829 3493 3507 0
-8829 3493 3496 3505 0
-8829 3493 3497 3503 0
-8829 3494 3505 0
-8829 3494 3496 3503 0
-8829 3494 3497 3502 0
8829 -3502 0
8829 -3497 -3503 0
8829 -3496 -3505 0
8829 -3494 -3503 0
8829 -3494 -3497 -3505 0
8829 -3494 -3496 -3507 0
8829 -3493 -3505 0
8829 -3493 -3497 -3507 0
8829 -3493 -3496 0
c ((4<=(aux482 + aux483 + aux485))=tv=SATLiteral(8830))
-8830 -3497 -3502 0
-8830 -3496 -3503 0
-8830 -3494 -3502 0
-8830 -3494 -3497 -3503 0
-8830 -3494 -3496 -3505 0
-8830 -3493 -3503 0
-8830 -3493 -3497 -3505 0
-8830 -3493 -3496 -3507 0
8830 3507 0
8830 3496 3505 0
8830 3497 3503 0
8830 3493 3505 0
8830 3493 3496 3503 0
8830 3493 3497 3502 0
8830 3494 3503 0
8830 3494 3496 3502 0
8830 3494 3497 0
c ((( - shift(agrid_00001_00001, -4) + aux494 + aux496)<=3)=tv=SATLiteral(8831))
-8831 3530 0
-8831 -7 3528 0
-8831 -5 3526 0
-8831 -3 3525 0
-8831 -2 0
-8831 3519 3528 0
-8831 3519 -7 3526 0
-8831 3519 -5 3525 0
-8831 3519 -3 0
-8831 3519 -2 0
-8831 3520 3526 0
-8831 3520 -7 3525 0
-8831 3520 -5 0
-8831 3520 -3 0
-8831 3520 -2 0
8831 5 -3525 0
8831 7 -3526 0
8831 -3520 3 -3525 0
8831 -3520 5 -3526 0
8831 -3520 7 -3528 0
8831 -3519 2 -3525 0
8831 -3519 3 -3526 0
8831 -3519 5 -3528 0
8831 -3519 7 -3530 0
c ((3<=( - shift(agrid_00001_00001, -4) + aux494 + aux496))=tv=SATLiteral(8832))
-8832 7 -3525 0
-8832 -3520 5 -3525 0
-8832 -3520 7 -3526 0
-8832 -3519 3 -3525 0
-8832 -3519 5 -3526 0
-8832 -3519 7 -3528 0
8832 3528 0
8832 -7 3526 0
8832 -5 3525 0
8832 -3 0
8832 -2 0
8832 3519 3526 0
8832 3519 -7 3525 0
8832 3519 -5 0
8832 3519 -3 0
8832 3519 -2 0
8832 3520 3525 0
8832 3520 -7 0
8832 3520 -5 0
8832 3520 -3 0
8832 3520 -2 0
c (((aux506 + aux507 - shift(agrid_00002_00001, -4))<=3)=tv=SATLiteral(8833))
-8833 -58 0
-8833 3552 -59 0
-8833 3553 -61 0
-8833 3555 -63 0
-8833 3557 0
-8833 3547 -59 0
-8833 3547 3552 -61 0
-8833 3547 3553 -63 0
-8833 3547 3555 0
-8833 3547 3557 0
-8833 3548 -61 0
-8833 3548 3552 -63 0
-8833 3548 3553 0
-8833 3548 3555 0
-8833 3548 3557 0
-8833 3550 -63 0
-8833 3550 3552 0
-8833 3550 3553 0
-8833 3550 3555 0
-8833 3550 3557 0
8833 -3552 63 0
8833 -3550 -3553 63 0
8833 -3550 -3552 61 0
8833 -3548 -3555 63 0
8833 -3548 -3553 61 0
8833 -3548 -3552 59 0
8833 -3547 -3557 63 0
8833 -3547 -3555 61 0
8833 -3547 -3553 59 0
8833 -3547 -3552 58 0
c ((3<=(aux506 + aux507 - shift(agrid_00002_00001, -4)))=tv=SATLiteral(8834))
-8834 -3550 -3552 63 0
-8834 -3548 -3553 63 0
-8834 -3548 -3552 61 0
-8834 -3547 -3555 63 0
-8834 -3547 -3553 61 0
-8834 -3547 -3552 59 0
8834 -59 0
8834 3552 -61 0
8834 3553 -63 0
8834 3555 0
8834 3557 0
8834 3547 -61 0
8834 3547 3552 -63 0
8834 3547 3553 0
8834 3547 3555 0
8834 3547 3557 0
8834 3548 -63 0
8834 3548 3552 0
8834 3548 3553 0
8834 3548 3555 0
8834 3548 3557 0
8834 3550 0
8834 3550 3552 0
8834 3550 3553 0
8834 3550 3555 0
8834 3550 3557 0
c (((aux517 + aux518 - shift(agrid_00003_00001, -4))<=3)=tv=SATLiteral(8835))
-8835 -114 0
-8835 3583 -115 0
-8835 3584 -117 0
-8835 3586 -119 0
-8835 3588 0
-8835 3576 -115 0
-8835 3576 3583 -117 0
-8835 3576 3584 -119 0
-8835 3576 3586 0
-8835 3576 3588 0
-8835 3577 -117 0
-8835 3577 3583 -119 0
-8835 3577 3584 0
-8835 3577 3586 0
-8835 3577 3588 0
-8835 3579 -119 0
-8835 3579 3583 0
-8835 3579 3584 0
-8835 3579 3586 0
-8835 3579 3588 0
-8835 3581 0
-8835 3581 3583 0
-8835 3581 3584 0
-8835 3581 3586 0
-8835 3581 3588 0
8835 -3581 -3583 119 0
8835 -3579 -3584 119 0
8835 -3579 -3583 117 0
8835 -3577 -3586 119 0
8835 -3577 -3584 117 0
8835 -3577 -3583 115 0
8835 -3576 -3588 119 0
8835 -3576 -3586 117 0
8835 -3576 -3584 115 0
8835 -3576 -3583 114 0
c ((3<=(aux517 + aux518 - shift(agrid_00003_00001, -4)))=tv=SATLiteral(8836))
-8836 -3579 -3583 119 0
-8836 -3577 -3584 119 0
-8836 -3577 -3583 117 0
-8836 -3576 -3586 119 0
-8836 -3576 -3584 117 0
-8836 -3576 -3583 115 0
8836 -115 0
8836 3583 -117 0
8836 3584 -119 0
8836 3586 0
8836 3588 0
8836 3576 -117 0
8836 3576 3583 -119 0
8836 3576 3584 0
8836 3576 3586 0
8836 3576 3588 0
8836 3577 -119 0
8836 3577 3583 0
8836 3577 3584 0
8836 3577 3586 0
8836 3577 3588 0
8836 3579 0
8836 3579 3583 0
8836 3579 3584 0
8836 3579 3586 0
8836 3579 3588 0
8836 3581 0
8836 3581 3583 0
8836 3581 3584 0
8836 3581 3586 0
8836 3581 3588 0
c (((aux528 + aux529 - shift(agrid_00004_00001, -4))<=3)=tv=SATLiteral(8837))
-8837 3623 0
-8837 -175 3621 0
-8837 -173 3619 0
-8837 -171 3618 0
-8837 -170 0
-8837 3611 3621 0
-8837 3611 -175 3619 0
-8837 3611 -173 3618 0
-8837 3611 -171 0
-8837 3611 -170 0
-8837 3612 3619 0
-8837 3612 -175 3618 0
-8837 3612 -173 0
-8837 3612 -171 0
-8837 3612 -170 0
-8837 3614 3618 0
-8837 3614 -175 0
-8837 3614 -173 0
-8837 3614 -171 0
-8837 3614 -170 0
-8837 3616 0
-8837 3616 -175 0
-8837 3616 -173 0
-8837 3616 -171 0
-8837 3616 -170 0
8837 -3616 175 -3618 0
8837 -3614 173 -3618 0
8837 -3614 175 -3619 0
8837 -3612 171 -3618 0
8837 -3612 173 -3619 0
8837 -3612 175 -3621 0
8837 -3611 170 -3618 0
8837 -3611 171 -3619 0
8837 -3611 173 -3621 0
8837 -3611 175 -3623 0
c ((3<=(aux528 + aux529 - shift(agrid_00004_00001, -4)))=tv=SATLiteral(8838))
-8838 -3614 175 -3618 0
-8838 -3612 173 -3618 0
-8838 -3612 175 -3619 0
-8838 -3611 171 -3618 0
-8838 -3611 173 -3619 0
-8838 -3611 175 -3621 0
8838 3621 0
8838 -175 3619 0
8838 -173 3618 0
8838 -171 0
8838 -170 0
8838 3611 3619 0
8838 3611 -175 3618 0
8838 3611 -173 0
8838 3611 -171 0
8838 3611 -170 0
8838 3612 3618 0
8838 3612 -175 0
8838 3612 -173 0
8838 3612 -171 0
8838 3612 -170 0
8838 3614 0
8838 3614 -175 0
8838 3614 -173 0
8838 3614 -171 0
8838 3614 -170 0
8838 3616 0
8838 3616 -175 0
8838 3616 -173 0
8838 3616 -171 0
8838 3616 -170 0
c (((aux539 + aux540 - shift(agrid_00005_00001, -4))<=3)=tv=SATLiteral(8839))
-8839 3660 0
-8839 -231 3658 0
-8839 -229 3656 0
-8839 -227 3655 0
-8839 -226 0
-8839 3648 3658 0
-8839 3648 -231 3656 0
-8839 3648 -229 3655 0
-8839 3648 -227 0
-8839 3648 -226 0
-8839 3649 3656 0
-8839 3649 -231 3655 0
-8839 3649 -229 0
-8839 3649 -227 0
-8839 3649 -226 0
-8839 3651 3655 0
-8839 3651 -231 0
-8839 3651 -229 0
-8839 3651 -227 0
-8839 3651 -226 0
-8839 3653 0
-8839 3653 -231 0
-8839 3653 -229 0
-8839 3653 -227 0
-8839 3653 -226 0
8839 -3653 231 -3655 0
8839 -3651 229 -3655 0
8839 -3651 231 -3656 0
8839 -3649 227 -3655 0
8839 -3649 229 -3656 0
8839 -3649 231 -3658 0
8839 -3648 226 -3655 0
8839 -3648 227 -3656 0
8839 -3648 229 -3658 0
8839 -3648 231 -3660 0
c ((3<=(aux539 + aux540 - shift(agrid_00005_00001, -4)))=tv=SATLiteral(8840))
-8840 -3651 231 -3655 0
-8840 -3649 229 -3655 0
-8840 -3649 231 -3656 0
-8840 -3648 227 -3655 0
-8840 -3648 229 -3656 0
-8840 -3648 231 -3658 0
8840 3658 0
8840 -231 3656 0
8840 -229 3655 0
8840 -227 0
8840 -226 0
8840 3648 3656 0
8840 3648 -231 3655 0
8840 3648 -229 0
8840 3648 -227 0
8840 3648 -226 0
8840 3649 3655 0
8840 3649 -231 0
8840 3649 -229 0
8840 3649 -227 0
8840 3649 -226 0
8840 3651 0
8840 3651 -231 0
8840 3651 -229 0
8840 3651 -227 0
8840 3651 -226 0
8840 3653 0
8840 3653 -231 0
8840 3653 -229 0
8840 3653 -227 0
8840 3653 -226 0
c (((aux550 + aux551 - shift(agrid_00006_00001, -4))<=3)=tv=SATLiteral(8841))
-8841 -282 0
-8841 3688 -283 0
-8841 3689 -285 0
-8841 3691 -287 0
-8841 3693 0
-8841 3681 -283 0
-8841 3681 3688 -285 0
-8841 3681 3689 -287 0
-8841 3681 3691 0
-8841 3681 3693 0
-8841 3682 -285 0
-8841 3682 3688 -287 0
-8841 3682 3689 0
-8841 3682 3691 0
-8841 3682 3693 0
-8841 3684 -287 0
-8841 3684 3688 0
-8841 3684 3689 0
-8841 3684 3691 0
-8841 3684 3693 0
-8841 3686 0
-8841 3686 3688 0
-8841 3686 3689 0
-8841 3686 3691 0
-8841 3686 3693 0
8841 -3686 -3688 287 0
8841 -3684 -3689 287 0
8841 -3684 -3688 285 0
8841 -3682 -3691 287 0
8841 -3682 -3689 285 0
8841 -3682 -3688 283 0
8841 -3681 -3693 287 0
8841 -3681 -3691 285 0
8841 -3681 -3689 283 0
8841 -3681 -3688 282 0
c ((3<=(aux550 + aux551 - shift(agrid_00006_00001, -4)))=tv=SATLiteral(8842))
-8842 -3684 -3688 287 0
-8842 -3682 -3689 287 0
-8842 -3682 -3688 285 0
-8842 -3681 -3691 287 0
-8842 -3681 -3689 285 0
-8842 -3681 -3688 283 0
8842 -283 0
8842 3688 -285 0
8842 3689 -287 0
8842 3691 0
8842 3693 0
8842 3681 -285 0
8842 3681 3688 -287 0
8842 3681 3689 0
8842 3681 3691 0
8842 3681 3693 0
8842 3682 -287 0
8842 3682 3688 0
8842 3682 3689 0
8842 3682 3691 0
8842 3682 3693 0
8842 3684 0
8842 3684 3688 0
8842 3684 3689 0
8842 3684 3691 0
8842 3684 3693 0
8842 3686 0
8842 3686 3688 0
8842 3686 3689 0
8842 3686 3691 0
8842 3686 3693 0
c (((aux561 + aux562 - shift(agrid_00007_00001, -4))<=3)=tv=SATLiteral(8843))
-8843 -338 0
-8843 3715 -339 0
-8843 3716 -341 0
-8843 3718 -343 0
-8843 3720 0
-8843 3710 -339 0
-8843 3710 3715 -341 0
-8843 3710 3716 -343 0
-8843 3710 3718 0
-8843 3710 3720 0
-8843 3711 -341 0
-8843 3711 3715 -343 0
-8843 3711 3716 0
-8843 3711 3718 0
-8843 3711 3720 0
-8843 3713 -343 0
-8843 3713 3715 0
-8843 3713 3716 0
-8843 3713 3718 0
-8843 3713 3720 0
8843 -3715 343 0
8843 -3713 -3716 343 0
8843 -3713 -3715 341 0
8843 -3711 -3718 343 0
8843 -3711 -3716 341 0
8843 -3711 -3715 339 0
8843 -3710 -3720 343 0
8843 -3710 -3718 341 0
8843 -3710 -3716 339 0
8843 -3710 -3715 338 0
c ((3<=(aux561 + aux562 - shift(agrid_00007_00001, -4)))=tv=SATLiteral(8844))
-8844 -3713 -3715 343 0
-8844 -3711 -3716 343 0
-8844 -3711 -3715 341 0
-8844 -3710 -3718 343 0
-8844 -3710 -3716 341 0
-8844 -3710 -3715 339 0
8844 -339 0
8844 3715 -341 0
8844 3716 -343 0
8844 3718 0
8844 3720 0
8844 3710 -341 0
8844 3710 3715 -343 0
8844 3710 3716 0
8844 3710 3718 0
8844 3710 3720 0
8844 3711 -343 0
8844 3711 3715 0
8844 3711 3716 0
8844 3711 3718 0
8844 3711 3720 0
8844 3713 0
8844 3713 3715 0
8844 3713 3716 0
8844 3713 3718 0
8844 3713 3720 0
c ((( - shift(agrid_00008_00001, -4) + aux571 + aux573)<=3)=tv=SATLiteral(8845))
-8845 3743 0
-8845 -399 3741 0
-8845 -397 3739 0
-8845 -395 3738 0
-8845 -394 0
-8845 3732 3741 0
-8845 3732 -399 3739 0
-8845 3732 -397 3738 0
-8845 3732 -395 0
-8845 3732 -394 0
-8845 3733 3739 0
-8845 3733 -399 3738 0
-8845 3733 -397 0
-8845 3733 -395 0
-8845 3733 -394 0
8845 397 -3738 0
8845 399 -3739 0
8845 -3733 395 -3738 0
8845 -3733 397 -3739 0
8845 -3733 399 -3741 0
8845 -3732 394 -3738 0
8845 -3732 395 -3739 0
8845 -3732 397 -3741 0
8845 -3732 399 -3743 0
c ((3<=( - shift(agrid_00008_00001, -4) + aux571 + aux573))=tv=SATLiteral(8846))
-8846 399 -3738 0
-8846 -3733 397 -3738 0
-8846 -3733 399 -3739 0
-8846 -3732 395 -3738 0
-8846 -3732 397 -3739 0
-8846 -3732 399 -3741 0
8846 3741 0
8846 -399 3739 0
8846 -397 3738 0
8846 -395 0
8846 -394 0
8846 3732 3739 0
8846 3732 -399 3738 0
8846 3732 -397 0
8846 3732 -395 0
8846 3732 -394 0
8846 3733 3738 0
8846 3733 -399 0
8846 3733 -397 0
8846 3733 -395 0
8846 3733 -394 0
c ((( - shift(agrid_00001_00002, -4) + aux583 + aux584)<=3)=tv=SATLiteral(8847))
-8847 3770 0
-8847 -14 3768 0
-8847 -12 3766 0
-8847 -10 3765 0
-8847 -9 0
-8847 3760 3768 0
-8847 3760 -14 3766 0
-8847 3760 -12 3765 0
-8847 3760 -10 0
-8847 3760 -9 0
-8847 3761 3766 0
-8847 3761 -14 3765 0
-8847 3761 -12 0
-8847 3761 -10 0
-8847 3761 -9 0
-8847 3763 3765 0
-8847 3763 -14 0
-8847 3763 -12 0
-8847 3763 -10 0
-8847 3763 -9 0
8847 14 -3765 0
8847 -3763 12 -3765 0
8847 -3763 14 -3766 0
8847 -3761 10 -3765 0
8847 -3761 12 -3766 0
8847 -3761 14 -3768 0
8847 -3760 9 -3765 0
8847 -3760 10 -3766 0
8847 -3760 12 -3768 0
8847 -3760 14 -3770 0
c ((3<=( - shift(agrid_00001_00002, -4) + aux583 + aux584))=tv=SATLiteral(8848))
-8848 -3763 14 -3765 0
-8848 -3761 12 -3765 0
-8848 -3761 14 -3766 0
-8848 -3760 10 -3765 0
-8848 -3760 12 -3766 0
-8848 -3760 14 -3768 0
8848 3768 0
8848 -14 3766 0
8848 -12 3765 0
8848 -10 0
8848 -9 0
8848 3760 3766 0
8848 3760 -14 3765 0
8848 3760 -12 0
8848 3760 -10 0
8848 3760 -9 0
8848 3761 3765 0
8848 3761 -14 0
8848 3761 -12 0
8848 3761 -10 0
8848 3761 -9 0
8848 3763 0
8848 3763 -14 0
8848 3763 -12 0
8848 3763 -10 0
8848 3763 -9 0
c (((aux594 + aux595 - shift(agrid_00002_00002, -4))<=3)=tv=SATLiteral(8849))
-8849 -65 0
-8849 3796 -66 0
-8849 3797 -68 0
-8849 3799 -70 0
-8849 3801 0
-8849 3789 -66 0
-8849 3789 3796 -68 0
-8849 3789 3797 -70 0
-8849 3789 3799 0
-8849 3789 3801 0
-8849 3790 -68 0
-8849 3790 3796 -70 0
-8849 3790 3797 0
-8849 3790 3799 0
-8849 3790 3801 0
-8849 3792 -70 0
-8849 3792 3796 0
-8849 3792 3797 0
-8849 3792 3799 0
-8849 3792 3801 0
-8849 3794 0
-8849 3794 3796 0
-8849 3794 3797 0
-8849 3794 3799 0
-8849 3794 3801 0
8849 -3794 -3796 70 0
8849 -3792 -3797 70 0
8849 -3792 -3796 68 0
8849 -3790 -3799 70 0
8849 -3790 -3797 68 0
8849 -3790 -3796 66 0
8849 -3789 -3801 70 0
8849 -3789 -3799 68 0
8849 -3789 -3797 66 0
8849 -3789 -3796 65 0
c ((3<=(aux594 + aux595 - shift(agrid_00002_00002, -4)))=tv=SATLiteral(8850))
-8850 -3792 -3796 70 0
-8850 -3790 -3797 70 0
-8850 -3790 -3796 68 0
-8850 -3789 -3799 70 0
-8850 -3789 -3797 68 0
-8850 -3789 -3796 66 0
8850 -66 0
8850 3796 -68 0
8850 3797 -70 0
8850 3799 0
8850 3801 0
8850 3789 -68 0
8850 3789 3796 -70 0
8850 3789 3797 0
8850 3789 3799 0
8850 3789 3801 0
8850 3790 -70 0
8850 3790 3796 0
8850 3790 3797 0
8850 3790 3799 0
8850 3790 3801 0
8850 3792 0
8850 3792 3796 0
8850 3792 3797 0
8850 3792 3799 0
8850 3792 3801 0
8850 3794 0
8850 3794 3796 0
8850 3794 3797 0
8850 3794 3799 0
8850 3794 3801 0
c (((aux605 + aux606 - shift(agrid_00003_00002, -4))<=3)=tv=SATLiteral(8851))
-8851 3836 0
-8851 -126 3834 0
-8851 -124 3832 0
-8851 -122 3831 0
-8851 -121 0
-8851 3824 3834 0
-8851 3824 -126 3832 0
-8851 3824 -124 3831 0
-8851 3824 -122 0
-8851 3824 -121 0
-8851 3825 3832 0
-8851 3825 -126 3831 0
-8851 3825 -124 0
-8851 3825 -122 0
-8851 3825 -121 0
-8851 3827 3831 0
-8851 3827 -126 0
-8851 3827 -124 0
-8851 3827 -122 0
-8851 3827 -121 0
-8851 3829 0
-8851 3829 -126 0
-8851 3829 -124 0
-8851 3829 -122 0
-8851 3829 -121 0
8851 -3829 126 -3831 0
8851 -3827 124 -3831 0
8851 -3827 126 -3832 0
8851 -3825 122 -3831 0
8851 -3825 124 -3832 0
8851 -3825 126 -3834 0
8851 -3824 121 -3831 0
8851 -3824 122 -3832 0
8851 -3824 124 -3834 0
8851 -3824 126 -3836 0
c ((3<=(aux605 + aux606 - shift(agrid_00003_00002, -4)))=tv=SATLiteral(8852))
-8852 -3827 126 -3831 0
-8852 -3825 124 -3831 0
-8852 -3825 126 -3832 0
-8852 -3824 122 -3831 0
-8852 -3824 124 -3832 0
-8852 -3824 126 -3834 0
8852 3834 0
8852 -126 3832 0
8852 -124 3831 0
8852 -122 0
8852 -121 0
8852 3824 3832 0
8852 3824 -126 3831 0
8852 3824 -124 0
8852 3824 -122 0
8852 3824 -121 0
8852 3825 3831 0
8852 3825 -126 0
8852 3825 -124 0
8852 3825 -122 0
8852 3825 -121 0
8852 3827 0
8852 3827 -126 0
8852 3827 -124 0
8852 3827 -122 0
8852 3827 -121 0
8852 3829 0
8852 3829 -126 0
8852 3829 -124 0
8852 3829 -122 0
8852 3829 -121 0
c (((aux615 + aux617 - shift(agrid_00004_00002, -4))<=3)=tv=SATLiteral(8853))
-8853 3877 0
-8853 -182 3875 0
-8853 -180 3873 0
-8853 -178 3872 0
-8853 -177 0
-8853 3858 3875 0
-8853 3858 -182 3873 0
-8853 3858 -180 3872 0
-8853 3858 -178 0
-8853 3858 -177 0
-8853 3859 3873 0
-8853 3859 -182 3872 0
-8853 3859 -180 0
-8853 3859 -178 0
-8853 3859 -177 0
-8853 3861 3872 0
-8853 3861 -182 0
-8853 3861 -180 0
-8853 3861 -178 0
-8853 3861 -177 0
-8853 3863 0
-8853 3863 -182 0
-8853 3863 -180 0
-8853 3863 -178 0
-8853 3863 -177 0
8853 -3863 182 -3872 0
8853 -3861 180 -3872 0
8853 -3861 182 -3873 0
8853 -3859 178 -3872 0
8853 -3859 180 -3873 0
8853 -3859 182 -3875 0
8853 -3858 177 -3872 0
8853 -3858 178 -3873 0
8853 -3858 180 -3875 0
8853 -3858 182 -3877 0
c ((3<=(aux615 + aux617 - shift(agrid_00004_00002, -4)))=tv=SATLiteral(8854))
-8854 -3861 182 -3872 0
-8854 -3859 180 -3872 0
-8854 -3859 182 -3873 0
-8854 -3858 178 -3872 0
-8854 -3858 180 -3873 0
-8854 -3858 182 -3875 0
8854 3875 0
8854 -182 3873 0
8854 -180 3872 0
8854 -178 0
8854 -177 0
8854 3858 3873 0
8854 3858 -182 3872 0
8854 3858 -180 0
8854 3858 -178 0
8854 3858 -177 0
8854 3859 3872 0
8854 3859 -182 0
8854 3859 -180 0
8854 3859 -178 0
8854 3859 -177 0
8854 3861 0
8854 3861 -182 0
8854 3861 -180 0
8854 3861 -178 0
8854 3861 -177 0
8854 3863 0
8854 3863 -182 0
8854 3863 -180 0
8854 3863 -178 0
8854 3863 -177 0
c (((aux626 + aux628 - shift(agrid_00005_00002, -4))<=3)=tv=SATLiteral(8855))
-8855 3920 0
-8855 -238 3918 0
-8855 -236 3916 0
-8855 -234 3915 0
-8855 -233 0
-8855 3901 3918 0
-8855 3901 -238 3916 0
-8855 3901 -236 3915 0
-8855 3901 -234 0
-8855 3901 -233 0
-8855 3902 3916 0
-8855 3902 -238 3915 0
-8855 3902 -236 0
-8855 3902 -234 0
-8855 3902 -233 0
-8855 3904 3915 0
-8855 3904 -238 0
-8855 3904 -236 0
-8855 3904 -234 0
-8855 3904 -233 0
-8855 3906 0
-8855 3906 -238 0
-8855 3906 -236 0
-8855 3906 -234 0
-8855 3906 -233 0
8855 -3906 238 -3915 0
8855 -3904 236 -3915 0
8855 -3904 238 -3916 0
8855 -3902 234 -3915 0
8855 -3902 236 -3916 0
8855 -3902 238 -3918 0
8855 -3901 233 -3915 0
8855 -3901 234 -3916 0
8855 -3901 236 -3918 0
8855 -3901 238 -3920 0
c ((3<=(aux626 + aux628 - shift(agrid_00005_00002, -4)))=tv=SATLiteral(8856))
-8856 -3904 238 -3915 0
-8856 -3902 236 -3915 0
-8856 -3902 238 -3916 0
-8856 -3901 234 -3915 0
-8856 -3901 236 -3916 0
-8856 -3901 238 -3918 0
8856 3918 0
8856 -238 3916 0
8856 -236 3915 0
8856 -234 0
8856 -233 0
8856 3901 3916 0
8856 3901 -238 3915 0
8856 3901 -236 0
8856 3901 -234 0
8856 3901 -233 0
8856 3902 3915 0
8856 3902 -238 0
8856 3902 -236 0
8856 3902 -234 0
8856 3902 -233 0
8856 3904 0
8856 3904 -238 0
8856 3904 -236 0
8856 3904 -234 0
8856 3904 -233 0
8856 3906 0
8856 3906 -238 0
8856 3906 -236 0
8856 3906 -234 0
8856 3906 -233 0
c (((aux638 + aux639 - shift(agrid_00006_00002, -4))<=3)=tv=SATLiteral(8857))
-8857 3959 0
-8857 -294 3957 0
-8857 -292 3955 0
-8857 -290 3954 0
-8857 -289 0
-8857 3947 3957 0
-8857 3947 -294 3955 0
-8857 3947 -292 3954 0
-8857 3947 -290 0
-8857 3947 -289 0
-8857 3948 3955 0
-8857 3948 -294 3954 0
-8857 3948 -292 0
-8857 3948 -290 0
-8857 3948 -289 0
-8857 3950 3954 0
-8857 3950 -294 0
-8857 3950 -292 0
-8857 3950 -290 0
-8857 3950 -289 0
-8857 3952 0
-8857 3952 -294 0
-8857 3952 -292 0
-8857 3952 -290 0
-8857 3952 -289 0
8857 -3952 294 -3954 0
8857 -3950 292 -3954 0
8857 -3950 294 -3955 0
8857 -3948 290 -3954 0
8857 -3948 292 -3955 0
8857 -3948 294 -3957 0
8857 -3947 289 -3954 0
8857 -3947 290 -3955 0
8857 -3947 292 -3957 0
8857 -3947 294 -3959 0
c ((3<=(aux638 + aux639 - shift(agrid_00006_00002, -4)))=tv=SATLiteral(8858))
-8858 -3950 294 -3954 0
-8858 -3948 292 -3954 0
-8858 -3948 294 -3955 0
-8858 -3947 290 -3954 0
-8858 -3947 292 -3955 0
-8858 -3947 294 -3957 0
8858 3957 0
8858 -294 3955 0
8858 -292 3954 0
8858 -290 0
8858 -289 0
8858 3947 3955 0
8858 3947 -294 3954 0
8858 3947 -292 0
8858 3947 -290 0
8858 3947 -289 0
8858 3948 3954 0
8858 3948 -294 0
8858 3948 -292 0
8858 3948 -290 0
8858 3948 -289 0
8858 3950 0
8858 3950 -294 0
8858 3950 -292 0
8858 3950 -290 0
8858 3950 -289 0
8858 3952 0
8858 3952 -294 0
8858 3952 -292 0
8858 3952 -290 0
8858 3952 -289 0
c (((aux649 + aux650 - shift(agrid_00007_00002, -4))<=3)=tv=SATLiteral(8859))
-8859 -345 0
-8859 3987 -346 0
-8859 3988 -348 0
-8859 3990 -350 0
-8859 3992 0
-8859 3980 -346 0
-8859 3980 3987 -348 0
-8859 3980 3988 -350 0
-8859 3980 3990 0
-8859 3980 3992 0
-8859 3981 -348 0
-8859 3981 3987 -350 0
-8859 3981 3988 0
-8859 3981 3990 0
-8859 3981 3992 0
-8859 3983 -350 0
-8859 3983 3987 0
-8859 3983 3988 0
-8859 3983 3990 0
-8859 3983 3992 0
-8859 3985 0
-8859 3985 3987 0
-8859 3985 3988 0
-8859 3985 3990 0
-8859 3985 3992 0
8859 -3985 -3987 350 0
8859 -3983 -3988 350 0
8859 -3983 -3987 348 0
8859 -3981 -3990 350 0
8859 -3981 -3988 348 0
8859 -3981 -3987 346 0
8859 -3980 -3992 350 0
8859 -3980 -3990 348 0
8859 -3980 -3988 346 0
8859 -3980 -3987 345 0
c ((3<=(aux649 + aux650 - shift(agrid_00007_00002, -4)))=tv=SATLiteral(8860))
-8860 -3983 -3987 350 0
-8860 -3981 -3988 350 0
-8860 -3981 -3987 348 0
-8860 -3980 -3990 350 0
-8860 -3980 -3988 348 0
-8860 -3980 -3987 346 0
8860 -346 0
8860 3987 -348 0
8860 3988 -350 0
8860 3990 0
8860 3992 0
8860 3980 -348 0
8860 3980 3987 -350 0
8860 3980 3988 0
8860 3980 3990 0
8860 3980 3992 0
8860 3981 -350 0
8860 3981 3987 0
8860 3981 3988 0
8860 3981 3990 0
8860 3981 3992 0
8860 3983 0
8860 3983 3987 0
8860 3983 3988 0
8860 3983 3990 0
8860 3983 3992 0
8860 3985 0
8860 3985 3987 0
8860 3985 3988 0
8860 3985 3990 0
8860 3985 3992 0
c ((( - shift(agrid_00008_00002, -4) + aux660 + aux661)<=3)=tv=SATLiteral(8861))
-8861 4019 0
-8861 -406 4017 0
-8861 -404 4015 0
-8861 -402 4014 0
-8861 -401 0
-8861 4009 4017 0
-8861 4009 -406 4015 0
-8861 4009 -404 4014 0
-8861 4009 -402 0
-8861 4009 -401 0
-8861 4010 4015 0
-8861 4010 -406 4014 0
-8861 4010 -404 0
-8861 4010 -402 0
-8861 4010 -401 0
-8861 4012 4014 0
-8861 4012 -406 0
-8861 4012 -404 0
-8861 4012 -402 0
-8861 4012 -401 0
8861 406 -4014 0
8861 -4012 404 -4014 0
8861 -4012 406 -4015 0
8861 -4010 402 -4014 0
8861 -4010 404 -4015 0
8861 -4010 406 -4017 0
8861 -4009 401 -4014 0
8861 -4009 402 -4015 0
8861 -4009 404 -4017 0
8861 -4009 406 -4019 0
c ((3<=( - shift(agrid_00008_00002, -4) + aux660 + aux661))=tv=SATLiteral(8862))
-8862 -4012 406 -4014 0
-8862 -4010 404 -4014 0
-8862 -4010 406 -4015 0
-8862 -4009 402 -4014 0
-8862 -4009 404 -4015 0
-8862 -4009 406 -4017 0
8862 4017 0
8862 -406 4015 0
8862 -404 4014 0
8862 -402 0
8862 -401 0
8862 4009 4015 0
8862 4009 -406 4014 0
8862 4009 -404 0
8862 4009 -402 0
8862 4009 -401 0
8862 4010 4014 0
8862 4010 -406 0
8862 4010 -404 0
8862 4010 -402 0
8862 4010 -401 0
8862 4012 0
8862 4012 -406 0
8862 4012 -404 0
8862 4012 -402 0
8862 4012 -401 0
c ((( - shift(agrid_00001_00003, -4) + aux671 + aux672)<=3)=tv=SATLiteral(8863))
-8863 4050 0
-8863 4038 4048 0
-8863 4039 4046 0
-8863 4041 4045 0
-8863 4043 0
-8863 -21 4048 0
-8863 -21 4038 4046 0
-8863 -21 4039 4045 0
-8863 -21 4041 0
-8863 -21 4043 0
-8863 -19 4046 0
-8863 -19 4038 4045 0
-8863 -19 4039 0
-8863 -19 4041 0
-8863 -19 4043 0
-8863 -17 4045 0
-8863 -17 4038 0
-8863 -17 4039 0
-8863 -17 4041 0
-8863 -17 4043 0
-8863 -16 0
-8863 -16 4038 0
-8863 -16 4039 0
-8863 -16 4041 0
-8863 -16 4043 0
8863 16 -4038 -4045 0
8863 17 -4039 -4045 0
8863 17 -4038 -4046 0
8863 19 -4041 -4045 0
8863 19 -4039 -4046 0
8863 19 -4038 -4048 0
8863 21 -4043 -4045 0
8863 21 -4041 -4046 0
8863 21 -4039 -4048 0
8863 21 -4038 -4050 0
c ((3<=( - shift(agrid_00001_00003, -4) + aux671 + aux672))=tv=SATLiteral(8864))
-8864 17 -4038 -4045 0
-8864 19 -4039 -4045 0
-8864 19 -4038 -4046 0
-8864 21 -4041 -4045 0
-8864 21 -4039 -4046 0
-8864 21 -4038 -4048 0
8864 4048 0
8864 4038 4046 0
8864 4039 4045 0
8864 4041 0
8864 4043 0
8864 -21 4046 0
8864 -21 4038 4045 0
8864 -21 4039 0
8864 -21 4041 0
8864 -21 4043 0
8864 -19 4045 0
8864 -19 4038 0
8864 -19 4039 0
8864 -19 4041 0
8864 -19 4043 0
8864 -17 0
8864 -17 4038 0
8864 -17 4039 0
8864 -17 4041 0
8864 -17 4043 0
8864 -16 0
8864 -16 4038 0
8864 -16 4039 0
8864 -16 4041 0
8864 -16 4043 0
c (((aux682 + aux683 - shift(agrid_00002_00003, -4))<=3)=tv=SATLiteral(8865))
-8865 4085 0
-8865 -77 4083 0
-8865 -75 4081 0
-8865 -73 4080 0
-8865 -72 0
-8865 4073 4083 0
-8865 4073 -77 4081 0
-8865 4073 -75 4080 0
-8865 4073 -73 0
-8865 4073 -72 0
-8865 4074 4081 0
-8865 4074 -77 4080 0
-8865 4074 -75 0
-8865 4074 -73 0
-8865 4074 -72 0
-8865 4076 4080 0
-8865 4076 -77 0
-8865 4076 -75 0
-8865 4076 -73 0
-8865 4076 -72 0
-8865 4078 0
-8865 4078 -77 0
-8865 4078 -75 0
-8865 4078 -73 0
-8865 4078 -72 0
8865 -4078 77 -4080 0
8865 -4076 75 -4080 0
8865 -4076 77 -4081 0
8865 -4074 73 -4080 0
8865 -4074 75 -4081 0
8865 -4074 77 -4083 0
8865 -4073 72 -4080 0
8865 -4073 73 -4081 0
8865 -4073 75 -4083 0
8865 -4073 77 -4085 0
c ((3<=(aux682 + aux683 - shift(agrid_00002_00003, -4)))=tv=SATLiteral(8866))
-8866 -4076 77 -4080 0
-8866 -4074 75 -4080 0
-8866 -4074 77 -4081 0
-8866 -4073 73 -4080 0
-8866 -4073 75 -4081 0
-8866 -4073 77 -4083 0
8866 4083 0
8866 -77 4081 0
8866 -75 4080 0
8866 -73 0
8866 -72 0
8866 4073 4081 0
8866 4073 -77 4080 0
8866 4073 -75 0
8866 4073 -73 0
8866 4073 -72 0
8866 4074 4080 0
8866 4074 -77 0
8866 4074 -75 0
8866 4074 -73 0
8866 4074 -72 0
8866 4076 0
8866 4076 -77 0
8866 4076 -75 0
8866 4076 -73 0
8866 4076 -72 0
8866 4078 0
8866 4078 -77 0
8866 4078 -75 0
8866 4078 -73 0
8866 4078 -72 0
c (((aux692 + aux694 - shift(agrid_00003_00003, -4))<=3)=tv=SATLiteral(8867))
-8867 4126 0
-8867 -133 4124 0
-8867 -131 4122 0
-8867 -129 4121 0
-8867 -128 0
-8867 4107 4124 0
-8867 4107 -133 4122 0
-8867 4107 -131 4121 0
-8867 4107 -129 0
-8867 4107 -128 0
-8867 4108 4122 0
-8867 4108 -133 4121 0
-8867 4108 -131 0
-8867 4108 -129 0
-8867 4108 -128 0
-8867 4110 4121 0
-8867 4110 -133 0
-8867 4110 -131 0
-8867 4110 -129 0
-8867 4110 -128 0
-8867 4112 0
-8867 4112 -133 0
-8867 4112 -131 0
-8867 4112 -129 0
-8867 4112 -128 0
8867 -4112 133 -4121 0
8867 -4110 131 -4121 0
8867 -4110 133 -4122 0
8867 -4108 129 -4121 0
8867 -4108 131 -4122 0
8867 -4108 133 -4124 0
8867 -4107 128 -4121 0
8867 -4107 129 -4122 0
8867 -4107 131 -4124 0
8867 -4107 133 -4126 0
c ((3<=(aux692 + aux694 - shift(agrid_00003_00003, -4)))=tv=SATLiteral(8868))
-8868 -4110 133 -4121 0
-8868 -4108 131 -4121 0
-8868 -4108 133 -4122 0
-8868 -4107 129 -4121 0
-8868 -4107 131 -4122 0
-8868 -4107 133 -4124 0
8868 4124 0
8868 -133 4122 0
8868 -131 4121 0
8868 -129 0
8868 -128 0
8868 4107 4122 0
8868 4107 -133 4121 0
8868 4107 -131 0
8868 4107 -129 0
8868 4107 -128 0
8868 4108 4121 0
8868 4108 -133 0
8868 4108 -131 0
8868 4108 -129 0
8868 4108 -128 0
8868 4110 0
8868 4110 -133 0
8868 4110 -131 0
8868 4110 -129 0
8868 4110 -128 0
8868 4112 0
8868 4112 -133 0
8868 4112 -131 0
8868 4112 -129 0
8868 4112 -128 0
c (((aux703 + aux705 - shift(agrid_00004_00003, -4))<=3)=tv=SATLiteral(8869))
-8869 4173 0
-8869 -189 4171 0
-8869 -187 4169 0
-8869 -185 4168 0
-8869 -184 0
-8869 4154 4171 0
-8869 4154 -189 4169 0
-8869 4154 -187 4168 0
-8869 4154 -185 0
-8869 4154 -184 0
-8869 4155 4169 0
-8869 4155 -189 4168 0
-8869 4155 -187 0
-8869 4155 -185 0
-8869 4155 -184 0
-8869 4157 4168 0
-8869 4157 -189 0
-8869 4157 -187 0
-8869 4157 -185 0
-8869 4157 -184 0
-8869 4159 0
-8869 4159 -189 0
-8869 4159 -187 0
-8869 4159 -185 0
-8869 4159 -184 0
8869 -4159 189 -4168 0
8869 -4157 187 -4168 0
8869 -4157 189 -4169 0
8869 -4155 185 -4168 0
8869 -4155 187 -4169 0
8869 -4155 189 -4171 0
8869 -4154 184 -4168 0
8869 -4154 185 -4169 0
8869 -4154 187 -4171 0
8869 -4154 189 -4173 0
c ((3<=(aux703 + aux705 - shift(agrid_00004_00003, -4)))=tv=SATLiteral(8870))
-8870 -4157 189 -4168 0
-8870 -4155 187 -4168 0
-8870 -4155 189 -4169 0
-8870 -4154 185 -4168 0
-8870 -4154 187 -4169 0
-8870 -4154 189 -4171 0
8870 4171 0
8870 -189 4169 0
8870 -187 4168 0
8870 -185 0
8870 -184 0
8870 4154 4169 0
8870 4154 -189 4168 0
8870 4154 -187 0
8870 4154 -185 0
8870 4154 -184 0
8870 4155 4168 0
8870 4155 -189 0
8870 4155 -187 0
8870 4155 -185 0
8870 4155 -184 0
8870 4157 0
8870 4157 -189 0
8870 4157 -187 0
8870 4157 -185 0
8870 4157 -184 0
8870 4159 0
8870 4159 -189 0
8870 4159 -187 0
8870 4159 -185 0
8870 4159 -184 0
c (((aux714 + aux716 - shift(agrid_00005_00003, -4))<=3)=tv=SATLiteral(8871))
-8871 4222 0
-8871 -245 4220 0
-8871 -243 4218 0
-8871 -241 4217 0
-8871 -240 0
-8871 4203 4220 0
-8871 4203 -245 4218 0
-8871 4203 -243 4217 0
-8871 4203 -241 0
-8871 4203 -240 0
-8871 4204 4218 0
-8871 4204 -245 4217 0
-8871 4204 -243 0
-8871 4204 -241 0
-8871 4204 -240 0
-8871 4206 4217 0
-8871 4206 -245 0
-8871 4206 -243 0
-8871 4206 -241 0
-8871 4206 -240 0
-8871 4208 0
-8871 4208 -245 0
-8871 4208 -243 0
-8871 4208 -241 0
-8871 4208 -240 0
8871 -4208 245 -4217 0
8871 -4206 243 -4217 0
8871 -4206 245 -4218 0
8871 -4204 241 -4217 0
8871 -4204 243 -4218 0
8871 -4204 245 -4220 0
8871 -4203 240 -4217 0
8871 -4203 241 -4218 0
8871 -4203 243 -4220 0
8871 -4203 245 -4222 0
c ((3<=(aux714 + aux716 - shift(agrid_00005_00003, -4)))=tv=SATLiteral(8872))
-8872 -4206 245 -4217 0
-8872 -4204 243 -4217 0
-8872 -4204 245 -4218 0
-8872 -4203 241 -4217 0
-8872 -4203 243 -4218 0
-8872 -4203 245 -4220 0
8872 4220 0
8872 -245 4218 0
8872 -243 4217 0
8872 -241 0
8872 -240 0
8872 4203 4218 0
8872 4203 -245 4217 0
8872 4203 -243 0
8872 4203 -241 0
8872 4203 -240 0
8872 4204 4217 0
8872 4204 -245 0
8872 4204 -243 0
8872 4204 -241 0
8872 4204 -240 0
8872 4206 0
8872 4206 -245 0
8872 4206 -243 0
8872 4206 -241 0
8872 4206 -240 0
8872 4208 0
8872 4208 -245 0
8872 4208 -243 0
8872 4208 -241 0
8872 4208 -240 0
c (((aux725 + aux727 - shift(agrid_00006_00003, -4))<=3)=tv=SATLiteral(8873))
-8873 4267 0
-8873 -301 4265 0
-8873 -299 4263 0
-8873 -297 4262 0
-8873 -296 0
-8873 4248 4265 0
-8873 4248 -301 4263 0
-8873 4248 -299 4262 0
-8873 4248 -297 0
-8873 4248 -296 0
-8873 4249 4263 0
-8873 4249 -301 4262 0
-8873 4249 -299 0
-8873 4249 -297 0
-8873 4249 -296 0
-8873 4251 4262 0
-8873 4251 -301 0
-8873 4251 -299 0
-8873 4251 -297 0
-8873 4251 -296 0
-8873 4253 0
-8873 4253 -301 0
-8873 4253 -299 0
-8873 4253 -297 0
-8873 4253 -296 0
8873 -4253 301 -4262 0
8873 -4251 299 -4262 0
8873 -4251 301 -4263 0
8873 -4249 297 -4262 0
8873 -4249 299 -4263 0
8873 -4249 301 -4265 0
8873 -4248 296 -4262 0
8873 -4248 297 -4263 0
8873 -4248 299 -4265 0
8873 -4248 301 -4267 0
c ((3<=(aux725 + aux727 - shift(agrid_00006_00003, -4)))=tv=SATLiteral(8874))
-8874 -4251 301 -4262 0
-8874 -4249 299 -4262 0
-8874 -4249 301 -4263 0
-8874 -4248 297 -4262 0
-8874 -4248 299 -4263 0
-8874 -4248 301 -4265 0
8874 4265 0
8874 -301 4263 0
8874 -299 4262 0
8874 -297 0
8874 -296 0
8874 4248 4263 0
8874 4248 -301 4262 0
8874 4248 -299 0
8874 4248 -297 0
8874 4248 -296 0
8874 4249 4262 0
8874 4249 -301 0
8874 4249 -299 0
8874 4249 -297 0
8874 4249 -296 0
8874 4251 0
8874 4251 -301 0
8874 4251 -299 0
8874 4251 -297 0
8874 4251 -296 0
8874 4253 0
8874 4253 -301 0
8874 4253 -299 0
8874 4253 -297 0
8874 4253 -296 0
c (((aux737 + aux738 - shift(agrid_00007_00003, -4))<=3)=tv=SATLiteral(8875))
-8875 4306 0
-8875 -357 4304 0
-8875 -355 4302 0
-8875 -353 4301 0
-8875 -352 0
-8875 4294 4304 0
-8875 4294 -357 4302 0
-8875 4294 -355 4301 0
-8875 4294 -353 0
-8875 4294 -352 0
-8875 4295 4302 0
-8875 4295 -357 4301 0
-8875 4295 -355 0
-8875 4295 -353 0
-8875 4295 -352 0
-8875 4297 4301 0
-8875 4297 -357 0
-8875 4297 -355 0
-8875 4297 -353 0
-8875 4297 -352 0
-8875 4299 0
-8875 4299 -357 0
-8875 4299 -355 0
-8875 4299 -353 0
-8875 4299 -352 0
8875 -4299 357 -4301 0
8875 -4297 355 -4301 0
8875 -4297 357 -4302 0
8875 -4295 353 -4301 0
8875 -4295 355 -4302 0
8875 -4295 357 -4304 0
8875 -4294 352 -4301 0
8875 -4294 353 -4302 0
8875 -4294 355 -4304 0
8875 -4294 357 -4306 0
c ((3<=(aux737 + aux738 - shift(agrid_00007_00003, -4)))=tv=SATLiteral(8876))
-8876 -4297 357 -4301 0
-8876 -4295 355 -4301 0
-8876 -4295 357 -4302 0
-8876 -4294 353 -4301 0
-8876 -4294 355 -4302 0
-8876 -4294 357 -4304 0
8876 4304 0
8876 -357 4302 0
8876 -355 4301 0
8876 -353 0
8876 -352 0
8876 4294 4302 0
8876 4294 -357 4301 0
8876 4294 -355 0
8876 4294 -353 0
8876 4294 -352 0
8876 4295 4301 0
8876 4295 -357 0
8876 4295 -355 0
8876 4295 -353 0
8876 4295 -352 0
8876 4297 0
8876 4297 -357 0
8876 4297 -355 0
8876 4297 -353 0
8876 4297 -352 0
8876 4299 0
8876 4299 -357 0
8876 4299 -355 0
8876 4299 -353 0
8876 4299 -352 0
c ((( - shift(agrid_00008_00003, -4) + aux748 + aux749)<=3)=tv=SATLiteral(8877))
-8877 4339 0
-8877 4327 4337 0
-8877 4328 4335 0
-8877 4330 4334 0
-8877 4332 0
-8877 -413 4337 0
-8877 -413 4327 4335 0
-8877 -413 4328 4334 0
-8877 -413 4330 0
-8877 -413 4332 0
-8877 -411 4335 0
-8877 -411 4327 4334 0
-8877 -411 4328 0
-8877 -411 4330 0
-8877 -411 4332 0
-8877 -409 4334 0
-8877 -409 4327 0
-8877 -409 4328 0
-8877 -409 4330 0
-8877 -409 4332 0
-8877 -408 0
-8877 -408 4327 0
-8877 -408 4328 0
-8877 -408 4330 0
-8877 -408 4332 0
8877 408 -4327 -4334 0
8877 409 -4328 -4334 0
8877 409 -4327 -4335 0
8877 411 -4330 -4334 0
8877 411 -4328 -4335 0
8877 411 -4327 -4337 0
8877 413 -4332 -4334 0
8877 413 -4330 -4335 0
8877 413 -4328 -4337 0
8877 413 -4327 -4339 0
c ((3<=( - shift(agrid_00008_00003, -4) + aux748 + aux749))=tv=SATLiteral(8878))
-8878 409 -4327 -4334 0
-8878 411 -4328 -4334 0
-8878 411 -4327 -4335 0
-8878 413 -4330 -4334 0
-8878 413 -4328 -4335 0
-8878 413 -4327 -4337 0
8878 4337 0
8878 4327 4335 0
8878 4328 4334 0
8878 4330 0
8878 4332 0
8878 -413 4335 0
8878 -413 4327 4334 0
8878 -413 4328 0
8878 -413 4330 0
8878 -413 4332 0
8878 -411 4334 0
8878 -411 4327 0
8878 -411 4328 0
8878 -411 4330 0
8878 -411 4332 0
8878 -409 0
8878 -409 4327 0
8878 -409 4328 0
8878 -409 4330 0
8878 -409 4332 0
8878 -408 0
8878 -408 4327 0
8878 -408 4328 0
8878 -408 4330 0
8878 -408 4332 0
c ((( - shift(agrid_00001_00004, -4) + aux759 + aux760)<=3)=tv=SATLiteral(8879))
-8879 4374 0
-8879 4362 4372 0
-8879 4363 4370 0
-8879 4365 4369 0
-8879 4367 0
-8879 -28 4372 0
-8879 -28 4362 4370 0
-8879 -28 4363 4369 0
-8879 -28 4365 0
-8879 -28 4367 0
-8879 -26 4370 0
-8879 -26 4362 4369 0
-8879 -26 4363 0
-8879 -26 4365 0
-8879 -26 4367 0
-8879 -24 4369 0
-8879 -24 4362 0
-8879 -24 4363 0
-8879 -24 4365 0
-8879 -24 4367 0
-8879 -23 0
-8879 -23 4362 0
-8879 -23 4363 0
-8879 -23 4365 0
-8879 -23 4367 0
8879 23 -4362 -4369 0
8879 24 -4363 -4369 0
8879 24 -4362 -4370 0
8879 26 -4365 -4369 0
8879 26 -4363 -4370 0
8879 26 -4362 -4372 0
8879 28 -4367 -4369 0
8879 28 -4365 -4370 0
8879 28 -4363 -4372 0
8879 28 -4362 -4374 0
c ((3<=( - shift(agrid_00001_00004, -4) + aux759 + aux760))=tv=SATLiteral(8880))
-8880 24 -4362 -4369 0
-8880 26 -4363 -4369 0
-8880 26 -4362 -4370 0
-8880 28 -4365 -4369 0
-8880 28 -4363 -4370 0
-8880 28 -4362 -4372 0
8880 4372 0
8880 4362 4370 0
8880 4363 4369 0
8880 4365 0
8880 4367 0
8880 -28 4370 0
8880 -28 4362 4369 0
8880 -28 4363 0
8880 -28 4365 0
8880 -28 4367 0
8880 -26 4369 0
8880 -26 4362 0
8880 -26 4363 0
8880 -26 4365 0
8880 -26 4367 0
8880 -24 0
8880 -24 4362 0
8880 -24 4363 0
8880 -24 4365 0
8880 -24 4367 0
8880 -23 0
8880 -23 4362 0
8880 -23 4363 0
8880 -23 4365 0
8880 -23 4367 0
c (((aux769 + aux771 - shift(agrid_00002_00004, -4))<=3)=tv=SATLiteral(8881))
-8881 4415 0
-8881 -84 4413 0
-8881 -82 4411 0
-8881 -80 4410 0
-8881 -79 0
-8881 4396 4413 0
-8881 4396 -84 4411 0
-8881 4396 -82 4410 0
-8881 4396 -80 0
-8881 4396 -79 0
-8881 4397 4411 0
-8881 4397 -84 4410 0
-8881 4397 -82 0
-8881 4397 -80 0
-8881 4397 -79 0
-8881 4399 4410 0
-8881 4399 -84 0
-8881 4399 -82 0
-8881 4399 -80 0
-8881 4399 -79 0
-8881 4401 0
-8881 4401 -84 0
-8881 4401 -82 0
-8881 4401 -80 0
-8881 4401 -79 0
8881 -4401 84 -4410 0
8881 -4399 82 -4410 0
8881 -4399 84 -4411 0
8881 -4397 80 -4410 0
8881 -4397 82 -4411 0
8881 -4397 84 -4413 0
8881 -4396 79 -4410 0
8881 -4396 80 -4411 0
8881 -4396 82 -4413 0
8881 -4396 84 -4415 0
c ((3<=(aux769 + aux771 - shift(agrid_00002_00004, -4)))=tv=SATLiteral(8882))
-8882 -4399 84 -4410 0
-8882 -4397 82 -4410 0
-8882 -4397 84 -4411 0
-8882 -4396 80 -4410 0
-8882 -4396 82 -4411 0
-8882 -4396 84 -4413 0
8882 4413 0
8882 -84 4411 0
8882 -82 4410 0
8882 -80 0
8882 -79 0
8882 4396 4411 0
8882 4396 -84 4410 0
8882 4396 -82 0
8882 4396 -80 0
8882 4396 -79 0
8882 4397 4410 0
8882 4397 -84 0
8882 4397 -82 0
8882 4397 -80 0
8882 4397 -79 0
8882 4399 0
8882 4399 -84 0
8882 4399 -82 0
8882 4399 -80 0
8882 4399 -79 0
8882 4401 0
8882 4401 -84 0
8882 4401 -82 0
8882 4401 -80 0
8882 4401 -79 0
c (((aux780 + aux782 - shift(agrid_00003_00004, -4))<=3)=tv=SATLiteral(8883))
-8883 4462 0
-8883 -140 4460 0
-8883 -138 4458 0
-8883 -136 4457 0
-8883 -135 0
-8883 4443 4460 0
-8883 4443 -140 4458 0
-8883 4443 -138 4457 0
-8883 4443 -136 0
-8883 4443 -135 0
-8883 4444 4458 0
-8883 4444 -140 4457 0
-8883 4444 -138 0
-8883 4444 -136 0
-8883 4444 -135 0
-8883 4446 4457 0
-8883 4446 -140 0
-8883 4446 -138 0
-8883 4446 -136 0
-8883 4446 -135 0
-8883 4448 0
-8883 4448 -140 0
-8883 4448 -138 0
-8883 4448 -136 0
-8883 4448 -135 0
8883 -4448 140 -4457 0
8883 -4446 138 -4457 0
8883 -4446 140 -4458 0
8883 -4444 136 -4457 0
8883 -4444 138 -4458 0
8883 -4444 140 -4460 0
8883 -4443 135 -4457 0
8883 -4443 136 -4458 0
8883 -4443 138 -4460 0
8883 -4443 140 -4462 0
c ((3<=(aux780 + aux782 - shift(agrid_00003_00004, -4)))=tv=SATLiteral(8884))
-8884 -4446 140 -4457 0
-8884 -4444 138 -4457 0
-8884 -4444 140 -4458 0
-8884 -4443 136 -4457 0
-8884 -4443 138 -4458 0
-8884 -4443 140 -4460 0
8884 4460 0
8884 -140 4458 0
8884 -138 4457 0
8884 -136 0
8884 -135 0
8884 4443 4458 0
8884 4443 -140 4457 0
8884 4443 -138 0
8884 4443 -136 0
8884 4443 -135 0
8884 4444 4457 0
8884 4444 -140 0
8884 4444 -138 0
8884 4444 -136 0
8884 4444 -135 0
8884 4446 0
8884 4446 -140 0
8884 4446 -138 0
8884 4446 -136 0
8884 4446 -135 0
8884 4448 0
8884 4448 -140 0
8884 4448 -138 0
8884 4448 -136 0
8884 4448 -135 0
c (((aux790 + aux791 + aux793)<=3)=tv=SATLiteral(8885))
-8885 4515 0
-8885 4496 4513 0
-8885 4497 4511 0
-8885 4499 4510 0
-8885 4501 0
-8885 4489 4513 0
-8885 4489 4496 4511 0
-8885 4489 4497 4510 0
-8885 4489 4499 0
-8885 4489 4501 0
-8885 4490 4511 0
-8885 4490 4496 4510 0
-8885 4490 4497 0
-8885 4490 4499 0
-8885 4490 4501 0
-8885 4492 4510 0
-8885 4492 4496 0
-8885 4492 4497 0
-8885 4492 4499 0
-8885 4492 4501 0
-8885 4494 0
-8885 4494 4496 0
-8885 4494 4497 0
-8885 4494 4499 0
-8885 4494 4501 0
8885 -4494 -4496 -4510 0
8885 -4492 -4497 -4510 0
8885 -4492 -4496 -4511 0
8885 -4490 -4499 -4510 0
8885 -4490 -4497 -4511 0
8885 -4490 -4496 -4513 0
8885 -4489 -4501 -4510 0
8885 -4489 -4499 -4511 0
8885 -4489 -4497 -4513 0
8885 -4489 -4496 -4515 0
c ((3<=(aux790 + aux791 + aux793))=tv=SATLiteral(8886))
-8886 -4492 -4496 -4510 0
-8886 -4490 -4497 -4510 0
-8886 -4490 -4496 -4511 0
-8886 -4489 -4499 -4510 0
-8886 -4489 -4497 -4511 0
-8886 -4489 -4496 -4513 0
8886 4513 0
8886 4496 4511 0
8886 4497 4510 0
8886 4499 0
8886 4501 0
8886 4489 4511 0
8886 4489 4496 4510 0
8886 4489 4497 0
8886 4489 4499 0
8886 4489 4501 0
8886 4490 4510 0
8886 4490 4496 0
8886 4490 4497 0
8886 4490 4499 0
8886 4490 4501 0
8886 4492 0
8886 4492 4496 0
8886 4492 4497 0
8886 4492 4499 0
8886 4492 4501 0
8886 4494 0
8886 4494 4496 0
8886 4494 4497 0
8886 4494 4499 0
8886 4494 4501 0
c (((aux801 + aux802 + aux804)<=3)=tv=SATLiteral(8887))
-8887 4570 0
-8887 4551 4568 0
-8887 4552 4566 0
-8887 4554 4565 0
-8887 4556 0
-8887 4544 4568 0
-8887 4544 4551 4566 0
-8887 4544 4552 4565 0
-8887 4544 4554 0
-8887 4544 4556 0
-8887 4545 4566 0
-8887 4545 4551 4565 0
-8887 4545 4552 0
-8887 4545 4554 0
-8887 4545 4556 0
-8887 4547 4565 0
-8887 4547 4551 0
-8887 4547 4552 0
-8887 4547 4554 0
-8887 4547 4556 0
-8887 4549 0
-8887 4549 4551 0
-8887 4549 4552 0
-8887 4549 4554 0
-8887 4549 4556 0
8887 -4549 -4551 -4565 0
8887 -4547 -4552 -4565 0
8887 -4547 -4551 -4566 0
8887 -4545 -4554 -4565 0
8887 -4545 -4552 -4566 0
8887 -4545 -4551 -4568 0
8887 -4544 -4556 -4565 0
8887 -4544 -4554 -4566 0
8887 -4544 -4552 -4568 0
8887 -4544 -4551 -4570 0
c ((3<=(aux801 + aux802 + aux804))=tv=SATLiteral(8888))
-8888 -4547 -4551 -4565 0
-8888 -4545 -4552 -4565 0
-8888 -4545 -4551 -4566 0
-8888 -4544 -4554 -4565 0
-8888 -4544 -4552 -4566 0
-8888 -4544 -4551 -4568 0
8888 4568 0
8888 4551 4566 0
8888 4552 4565 0
8888 4554 0
8888 4556 0
8888 4544 4566 0
8888 4544 4551 4565 0
8888 4544 4552 0
8888 4544 4554 0
8888 4544 4556 0
8888 4545 4565 0
8888 4545 4551 0
8888 4545 4552 0
8888 4545 4554 0
8888 4545 4556 0
8888 4547 0
8888 4547 4551 0
8888 4547 4552 0
8888 4547 4554 0
8888 4547 4556 0
8888 4549 0
8888 4549 4551 0
8888 4549 4552 0
8888 4549 4554 0
8888 4549 4556 0
c (((aux813 + aux815 - shift(agrid_00006_00004, -4))<=3)=tv=SATLiteral(8889))
-8889 4621 0
-8889 -308 4619 0
-8889 -306 4617 0
-8889 -304 4616 0
-8889 -303 0
-8889 4602 4619 0
-8889 4602 -308 4617 0
-8889 4602 -306 4616 0
-8889 4602 -304 0
-8889 4602 -303 0
-8889 4603 4617 0
-8889 4603 -308 4616 0
-8889 4603 -306 0
-8889 4603 -304 0
-8889 4603 -303 0
-8889 4605 4616 0
-8889 4605 -308 0
-8889 4605 -306 0
-8889 4605 -304 0
-8889 4605 -303 0
-8889 4607 0
-8889 4607 -308 0
-8889 4607 -306 0
-8889 4607 -304 0
-8889 4607 -303 0
8889 -4607 308 -4616 0
8889 -4605 306 -4616 0
8889 -4605 308 -4617 0
8889 -4603 304 -4616 0
8889 -4603 306 -4617 0
8889 -4603 308 -4619 0
8889 -4602 303 -4616 0
8889 -4602 304 -4617 0
8889 -4602 306 -4619 0
8889 -4602 308 -4621 0
c ((3<=(aux813 + aux815 - shift(agrid_00006_00004, -4)))=tv=SATLiteral(8890))
-8890 -4605 308 -4616 0
-8890 -4603 306 -4616 0
-8890 -4603 308 -4617 0
-8890 -4602 304 -4616 0
-8890 -4602 306 -4617 0
-8890 -4602 308 -4619 0
8890 4619 0
8890 -308 4617 0
8890 -306 4616 0
8890 -304 0
8890 -303 0
8890 4602 4617 0
8890 4602 -308 4616 0
8890 4602 -306 0
8890 4602 -304 0
8890 4602 -303 0
8890 4603 4616 0
8890 4603 -308 0
8890 4603 -306 0
8890 4603 -304 0
8890 4603 -303 0
8890 4605 0
8890 4605 -308 0
8890 4605 -306 0
8890 4605 -304 0
8890 4605 -303 0
8890 4607 0
8890 4607 -308 0
8890 4607 -306 0
8890 4607 -304 0
8890 4607 -303 0
c (((aux824 + aux826 - shift(agrid_00007_00004, -4))<=3)=tv=SATLiteral(8891))
-8891 4666 0
-8891 -364 4664 0
-8891 -362 4662 0
-8891 -360 4661 0
-8891 -359 0
-8891 4647 4664 0
-8891 4647 -364 4662 0
-8891 4647 -362 4661 0
-8891 4647 -360 0
-8891 4647 -359 0
-8891 4648 4662 0
-8891 4648 -364 4661 0
-8891 4648 -362 0
-8891 4648 -360 0
-8891 4648 -359 0
-8891 4650 4661 0
-8891 4650 -364 0
-8891 4650 -362 0
-8891 4650 -360 0
-8891 4650 -359 0
-8891 4652 0
-8891 4652 -364 0
-8891 4652 -362 0
-8891 4652 -360 0
-8891 4652 -359 0
8891 -4652 364 -4661 0
8891 -4650 362 -4661 0
8891 -4650 364 -4662 0
8891 -4648 360 -4661 0
8891 -4648 362 -4662 0
8891 -4648 364 -4664 0
8891 -4647 359 -4661 0
8891 -4647 360 -4662 0
8891 -4647 362 -4664 0
8891 -4647 364 -4666 0
c ((3<=(aux824 + aux826 - shift(agrid_00007_00004, -4)))=tv=SATLiteral(8892))
-8892 -4650 364 -4661 0
-8892 -4648 362 -4661 0
-8892 -4648 364 -4662 0
-8892 -4647 360 -4661 0
-8892 -4647 362 -4662 0
-8892 -4647 364 -4664 0
8892 4664 0
8892 -364 4662 0
8892 -362 4661 0
8892 -360 0
8892 -359 0
8892 4647 4662 0
8892 4647 -364 4661 0
8892 4647 -362 0
8892 4647 -360 0
8892 4647 -359 0
8892 4648 4661 0
8892 4648 -364 0
8892 4648 -362 0
8892 4648 -360 0
8892 4648 -359 0
8892 4650 0
8892 4650 -364 0
8892 4650 -362 0
8892 4650 -360 0
8892 4650 -359 0
8892 4652 0
8892 4652 -364 0
8892 4652 -362 0
8892 4652 -360 0
8892 4652 -359 0
c ((( - shift(agrid_00008_00004, -4) + aux836 + aux837)<=3)=tv=SATLiteral(8893))
-8893 4705 0
-8893 4693 4703 0
-8893 4694 4701 0
-8893 4696 4700 0
-8893 4698 0
-8893 -420 4703 0
-8893 -420 4693 4701 0
-8893 -420 4694 4700 0
-8893 -420 4696 0
-8893 -420 4698 0
-8893 -418 4701 0
-8893 -418 4693 4700 0
-8893 -418 4694 0
-8893 -418 4696 0
-8893 -418 4698 0
-8893 -416 4700 0
-8893 -416 4693 0
-8893 -416 4694 0
-8893 -416 4696 0
-8893 -416 4698 0
-8893 -415 0
-8893 -415 4693 0
-8893 -415 4694 0
-8893 -415 4696 0
-8893 -415 4698 0
8893 415 -4693 -4700 0
8893 416 -4694 -4700 0
8893 416 -4693 -4701 0
8893 418 -4696 -4700 0
8893 418 -4694 -4701 0
8893 418 -4693 -4703 0
8893 420 -4698 -4700 0
8893 420 -4696 -4701 0
8893 420 -4694 -4703 0
8893 420 -4693 -4705 0
c ((3<=( - shift(agrid_00008_00004, -4) + aux836 + aux837))=tv=SATLiteral(8894))
-8894 416 -4693 -4700 0
-8894 418 -4694 -4700 0
-8894 418 -4693 -4701 0
-8894 420 -4696 -4700 0
-8894 420 -4694 -4701 0
-8894 420 -4693 -4703 0
8894 4703 0
8894 4693 4701 0
8894 4694 4700 0
8894 4696 0
8894 4698 0
8894 -420 4701 0
8894 -420 4693 4700 0
8894 -420 4694 0
8894 -420 4696 0
8894 -420 4698 0
8894 -418 4700 0
8894 -418 4693 0
8894 -418 4694 0
8894 -418 4696 0
8894 -418 4698 0
8894 -416 0
8894 -416 4693 0
8894 -416 4694 0
8894 -416 4696 0
8894 -416 4698 0
8894 -415 0
8894 -415 4693 0
8894 -415 4694 0
8894 -415 4696 0
8894 -415 4698 0
c ((( - shift(agrid_00001_00005, -4) + aux847 + aux848)<=3)=tv=SATLiteral(8895))
-8895 4742 0
-8895 4730 4740 0
-8895 4731 4738 0
-8895 4733 4737 0
-8895 4735 0
-8895 -35 4740 0
-8895 -35 4730 4738 0
-8895 -35 4731 4737 0
-8895 -35 4733 0
-8895 -35 4735 0
-8895 -33 4738 0
-8895 -33 4730 4737 0
-8895 -33 4731 0
-8895 -33 4733 0
-8895 -33 4735 0
-8895 -31 4737 0
-8895 -31 4730 0
-8895 -31 4731 0
-8895 -31 4733 0
-8895 -31 4735 0
-8895 -30 0
-8895 -30 4730 0
-8895 -30 4731 0
-8895 -30 4733 0
-8895 -30 4735 0
8895 30 -4730 -4737 0
8895 31 -4731 -4737 0
8895 31 -4730 -4738 0
8895 33 -4733 -4737 0
8895 33 -4731 -4738 0
8895 33 -4730 -4740 0
8895 35 -4735 -4737 0
8895 35 -4733 -4738 0
8895 35 -4731 -4740 0
8895 35 -4730 -4742 0
c ((3<=( - shift(agrid_00001_00005, -4) + aux847 + aux848))=tv=SATLiteral(8896))
-8896 31 -4730 -4737 0
-8896 33 -4731 -4737 0
-8896 33 -4730 -4738 0
-8896 35 -4733 -4737 0
-8896 35 -4731 -4738 0
-8896 35 -4730 -4740 0
8896 4740 0
8896 4730 4738 0
8896 4731 4737 0
8896 4733 0
8896 4735 0
8896 -35 4738 0
8896 -35 4730 4737 0
8896 -35 4731 0
8896 -35 4733 0
8896 -35 4735 0
8896 -33 4737 0
8896 -33 4730 0
8896 -33 4731 0
8896 -33 4733 0
8896 -33 4735 0
8896 -31 0
8896 -31 4730 0
8896 -31 4731 0
8896 -31 4733 0
8896 -31 4735 0
8896 -30 0
8896 -30 4730 0
8896 -30 4731 0
8896 -30 4733 0
8896 -30 4735 0
c (((aux857 + aux859 - shift(agrid_00002_00005, -4))<=3)=tv=SATLiteral(8897))
-8897 4783 0
-8897 -91 4781 0
-8897 -89 4779 0
-8897 -87 4778 0
-8897 -86 0
-8897 4764 4781 0
-8897 4764 -91 4779 0
-8897 4764 -89 4778 0
-8897 4764 -87 0
-8897 4764 -86 0
-8897 4765 4779 0
-8897 4765 -91 4778 0
-8897 4765 -89 0
-8897 4765 -87 0
-8897 4765 -86 0
-8897 4767 4778 0
-8897 4767 -91 0
-8897 4767 -89 0
-8897 4767 -87 0
-8897 4767 -86 0
-8897 4769 0
-8897 4769 -91 0
-8897 4769 -89 0
-8897 4769 -87 0
-8897 4769 -86 0
8897 -4769 91 -4778 0
8897 -4767 89 -4778 0
8897 -4767 91 -4779 0
8897 -4765 87 -4778 0
8897 -4765 89 -4779 0
8897 -4765 91 -4781 0
8897 -4764 86 -4778 0
8897 -4764 87 -4779 0
8897 -4764 89 -4781 0
8897 -4764 91 -4783 0
c ((3<=(aux857 + aux859 - shift(agrid_00002_00005, -4)))=tv=SATLiteral(8898))
-8898 -4767 91 -4778 0
-8898 -4765 89 -4778 0
-8898 -4765 91 -4779 0
-8898 -4764 87 -4778 0
-8898 -4764 89 -4779 0
-8898 -4764 91 -4781 0
8898 4781 0
8898 -91 4779 0
8898 -89 4778 0
8898 -87 0
8898 -86 0
8898 4764 4779 0
8898 4764 -91 4778 0
8898 4764 -89 0
8898 4764 -87 0
8898 4764 -86 0
8898 4765 4778 0
8898 4765 -91 0
8898 4765 -89 0
8898 4765 -87 0
8898 4765 -86 0
8898 4767 0
8898 4767 -91 0
8898 4767 -89 0
8898 4767 -87 0
8898 4767 -86 0
8898 4769 0
8898 4769 -91 0
8898 4769 -89 0
8898 4769 -87 0
8898 4769 -86 0
c (((aux868 + aux870 - shift(agrid_00003_00005, -4))<=3)=tv=SATLiteral(8899))
-8899 4830 0
-8899 -147 4828 0
-8899 -145 4826 0
-8899 -143 4825 0
-8899 -142 0
-8899 4811 4828 0
-8899 4811 -147 4826 0
-8899 4811 -145 4825 0
-8899 4811 -143 0
-8899 4811 -142 0
-8899 4812 4826 0
-8899 4812 -147 4825 0
-8899 4812 -145 0
-8899 4812 -143 0
-8899 4812 -142 0
-8899 4814 4825 0
-8899 4814 -147 0
-8899 4814 -145 0
-8899 4814 -143 0
-8899 4814 -142 0
-8899 4816 0
-8899 4816 -147 0
-8899 4816 -145 0
-8899 4816 -143 0
-8899 4816 -142 0
8899 -4816 147 -4825 0
8899 -4814 145 -4825 0
8899 -4814 147 -4826 0
8899 -4812 143 -4825 0
8899 -4812 145 -4826 0
8899 -4812 147 -4828 0
8899 -4811 142 -4825 0
8899 -4811 143 -4826 0
8899 -4811 145 -4828 0
8899 -4811 147 -4830 0
c ((3<=(aux868 + aux870 - shift(agrid_00003_00005, -4)))=tv=SATLiteral(8900))
-8900 -4814 147 -4825 0
-8900 -4812 145 -4825 0
-8900 -4812 147 -4826 0
-8900 -4811 143 -4825 0
-8900 -4811 145 -4826 0
-8900 -4811 147 -4828 0
8900 4828 0
8900 -147 4826 0
8900 -145 4825 0
8900 -143 0
8900 -142 0
8900 4811 4826 0
8900 4811 -147 4825 0
8900 4811 -145 0
8900 4811 -143 0
8900 4811 -142 0
8900 4812 4825 0
8900 4812 -147 0
8900 4812 -145 0
8900 4812 -143 0
8900 4812 -142 0
8900 4814 0
8900 4814 -147 0
8900 4814 -145 0
8900 4814 -143 0
8900 4814 -142 0
8900 4816 0
8900 4816 -147 0
8900 4816 -145 0
8900 4816 -143 0
8900 4816 -142 0
c (((aux878 + aux879 + aux881)<=3)=tv=SATLiteral(8901))
-8901 4883 0
-8901 4864 4881 0
-8901 4865 4879 0
-8901 4867 4878 0
-8901 4869 0
-8901 4857 4881 0
-8901 4857 4864 4879 0
-8901 4857 4865 4878 0
-8901 4857 4867 0
-8901 4857 4869 0
-8901 4858 4879 0
-8901 4858 4864 4878 0
-8901 4858 4865 0
-8901 4858 4867 0
-8901 4858 4869 0
-8901 4860 4878 0
-8901 4860 4864 0
-8901 4860 4865 0
-8901 4860 4867 0
-8901 4860 4869 0
-8901 4862 0
-8901 4862 4864 0
-8901 4862 4865 0
-8901 4862 4867 0
-8901 4862 4869 0
8901 -4862 -4864 -4878 0
8901 -4860 -4865 -4878 0
8901 -4860 -4864 -4879 0
8901 -4858 -4867 -4878 0
8901 -4858 -4865 -4879 0
8901 -4858 -4864 -4881 0
8901 -4857 -4869 -4878 0
8901 -4857 -4867 -4879 0
8901 -4857 -4865 -4881 0
8901 -4857 -4864 -4883 0
c ((3<=(aux878 + aux879 + aux881))=tv=SATLiteral(8902))
-8902 -4860 -4864 -4878 0
-8902 -4858 -4865 -4878 0
-8902 -4858 -4864 -4879 0
-8902 -4857 -4867 -4878 0
-8902 -4857 -4865 -4879 0
-8902 -4857 -4864 -4881 0
8902 4881 0
8902 4864 4879 0
8902 4865 4878 0
8902 4867 0
8902 4869 0
8902 4857 4879 0
8902 4857 4864 4878 0
8902 4857 4865 0
8902 4857 4867 0
8902 4857 4869 0
8902 4858 4878 0
8902 4858 4864 0
8902 4858 4865 0
8902 4858 4867 0
8902 4858 4869 0
8902 4860 0
8902 4860 4864 0
8902 4860 4865 0
8902 4860 4867 0
8902 4860 4869 0
8902 4862 0
8902 4862 4864 0
8902 4862 4865 0
8902 4862 4867 0
8902 4862 4869 0
c (((aux889 + aux890 + aux892)<=3)=tv=SATLiteral(8903))
-8903 4938 0
-8903 4919 4936 0
-8903 4920 4934 0
-8903 4922 4933 0
-8903 4924 0
-8903 4912 4936 0
-8903 4912 4919 4934 0
-8903 4912 4920 4933 0
-8903 4912 4922 0
-8903 4912 4924 0
-8903 4913 4934 0
-8903 4913 4919 4933 0
-8903 4913 4920 0
-8903 4913 4922 0
-8903 4913 4924 0
-8903 4915 4933 0
-8903 4915 4919 0
-8903 4915 4920 0
-8903 4915 4922 0
-8903 4915 4924 0
-8903 4917 0
-8903 4917 4919 0
-8903 4917 4920 0
-8903 4917 4922 0
-8903 4917 4924 0
8903 -4917 -4919 -4933 0
8903 -4915 -4920 -4933 0
8903 -4915 -4919 -4934 0
8903 -4913 -4922 -4933 0
8903 -4913 -4920 -4934 0
8903 -4913 -4919 -4936 0
8903 -4912 -4924 -4933 0
8903 -4912 -4922 -4934 0
8903 -4912 -4920 -4936 0
8903 -4912 -4919 -4938 0
c ((3<=(aux889 + aux890 + aux892))=tv=SATLiteral(8904))
-8904 -4915 -4919 -4933 0
-8904 -4913 -4920 -4933 0
-8904 -4913 -4919 -4934 0
-8904 -4912 -4922 -4933 0
-8904 -4912 -4920 -4934 0
-8904 -4912 -4919 -4936 0
8904 4936 0
8904 4919 4934 0
8904 4920 4933 0
8904 4922 0
8904 4924 0
8904 4912 4934 0
8904 4912 4919 4933 0
8904 4912 4920 0
8904 4912 4922 0
8904 4912 4924 0
8904 4913 4933 0
8904 4913 4919 0
8904 4913 4920 0
8904 4913 4922 0
8904 4913 4924 0
8904 4915 0
8904 4915 4919 0
8904 4915 4920 0
8904 4915 4922 0
8904 4915 4924 0
8904 4917 0
8904 4917 4919 0
8904 4917 4920 0
8904 4917 4922 0
8904 4917 4924 0
c (((aux901 + aux903 - shift(agrid_00006_00005, -4))<=3)=tv=SATLiteral(8905))
-8905 4989 0
-8905 -315 4987 0
-8905 -313 4985 0
-8905 -311 4984 0
-8905 -310 0
-8905 4970 4987 0
-8905 4970 -315 4985 0
-8905 4970 -313 4984 0
-8905 4970 -311 0
-8905 4970 -310 0
-8905 4971 4985 0
-8905 4971 -315 4984 0
-8905 4971 -313 0
-8905 4971 -311 0
-8905 4971 -310 0
-8905 4973 4984 0
-8905 4973 -315 0
-8905 4973 -313 0
-8905 4973 -311 0
-8905 4973 -310 0
-8905 4975 0
-8905 4975 -315 0
-8905 4975 -313 0
-8905 4975 -311 0
-8905 4975 -310 0
8905 -4975 315 -4984 0
8905 -4973 313 -4984 0
8905 -4973 315 -4985 0
8905 -4971 311 -4984 0
8905 -4971 313 -4985 0
8905 -4971 315 -4987 0
8905 -4970 310 -4984 0
8905 -4970 311 -4985 0
8905 -4970 313 -4987 0
8905 -4970 315 -4989 0
c ((3<=(aux901 + aux903 - shift(agrid_00006_00005, -4)))=tv=SATLiteral(8906))
-8906 -4973 315 -4984 0
-8906 -4971 313 -4984 0
-8906 -4971 315 -4985 0
-8906 -4970 311 -4984 0
-8906 -4970 313 -4985 0
-8906 -4970 315 -4987 0
8906 4987 0
8906 -315 4985 0
8906 -313 4984 0
8906 -311 0
8906 -310 0
8906 4970 4985 0
8906 4970 -315 4984 0
8906 4970 -313 0
8906 4970 -311 0
8906 4970 -310 0
8906 4971 4984 0
8906 4971 -315 0
8906 4971 -313 0
8906 4971 -311 0
8906 4971 -310 0
8906 4973 0
8906 4973 -315 0
8906 4973 -313 0
8906 4973 -311 0
8906 4973 -310 0
8906 4975 0
8906 4975 -315 0
8906 4975 -313 0
8906 4975 -311 0
8906 4975 -310 0
c (((aux912 + aux914 - shift(agrid_00007_00005, -4))<=3)=tv=SATLiteral(8907))
-8907 5034 0
-8907 -371 5032 0
-8907 -369 5030 0
-8907 -367 5029 0
-8907 -366 0
-8907 5015 5032 0
-8907 5015 -371 5030 0
-8907 5015 -369 5029 0
-8907 5015 -367 0
-8907 5015 -366 0
-8907 5016 5030 0
-8907 5016 -371 5029 0
-8907 5016 -369 0
-8907 5016 -367 0
-8907 5016 -366 0
-8907 5018 5029 0
-8907 5018 -371 0
-8907 5018 -369 0
-8907 5018 -367 0
-8907 5018 -366 0
-8907 5020 0
-8907 5020 -371 0
-8907 5020 -369 0
-8907 5020 -367 0
-8907 5020 -366 0
8907 -5020 371 -5029 0
8907 -5018 369 -5029 0
8907 -5018 371 -5030 0
8907 -5016 367 -5029 0
8907 -5016 369 -5030 0
8907 -5016 371 -5032 0
8907 -5015 366 -5029 0
8907 -5015 367 -5030 0
8907 -5015 369 -5032 0
8907 -5015 371 -5034 0
c ((3<=(aux912 + aux914 - shift(agrid_00007_00005, -4)))=tv=SATLiteral(8908))
-8908 -5018 371 -5029 0
-8908 -5016 369 -5029 0
-8908 -5016 371 -5030 0
-8908 -5015 367 -5029 0
-8908 -5015 369 -5030 0
-8908 -5015 371 -5032 0
8908 5032 0
8908 -371 5030 0
8908 -369 5029 0
8908 -367 0
8908 -366 0
8908 5015 5030 0
8908 5015 -371 5029 0
8908 5015 -369 0
8908 5015 -367 0
8908 5015 -366 0
8908 5016 5029 0
8908 5016 -371 0
8908 5016 -369 0
8908 5016 -367 0
8908 5016 -366 0
8908 5018 0
8908 5018 -371 0
8908 5018 -369 0
8908 5018 -367 0
8908 5018 -366 0
8908 5020 0
8908 5020 -371 0
8908 5020 -369 0
8908 5020 -367 0
8908 5020 -366 0
c ((( - shift(agrid_00008_00005, -4) + aux924 + aux925)<=3)=tv=SATLiteral(8909))
-8909 5073 0
-8909 5061 5071 0
-8909 5062 5069 0
-8909 5064 5068 0
-8909 5066 0
-8909 -427 5071 0
-8909 -427 5061 5069 0
-8909 -427 5062 5068 0
-8909 -427 5064 0
-8909 -427 5066 0
-8909 -425 5069 0
-8909 -425 5061 5068 0
-8909 -425 5062 0
-8909 -425 5064 0
-8909 -425 5066 0
-8909 -423 5068 0
-8909 -423 5061 0
-8909 -423 5062 0
-8909 -423 5064 0
-8909 -423 5066 0
-8909 -422 0
-8909 -422 5061 0
-8909 -422 5062 0
-8909 -422 5064 0
-8909 -422 5066 0
8909 422 -5061 -5068 0
8909 423 -5062 -5068 0
8909 423 -5061 -5069 0
8909 425 -5064 -5068 0
8909 425 -5062 -5069 0
8909 425 -5061 -5071 0
8909 427 -5066 -5068 0
8909 427 -5064 -5069 0
8909 427 -5062 -5071 0
8909 427 -5061 -5073 0
c ((3<=( - shift(agrid_00008_00005, -4) + aux924 + aux925))=tv=SATLiteral(8910))
-8910 423 -5061 -5068 0
-8910 425 -5062 -5068 0
-8910 425 -5061 -5069 0
-8910 427 -5064 -5068 0
-8910 427 -5062 -5069 0
-8910 427 -5061 -5071 0
8910 5071 0
8910 5061 5069 0
8910 5062 5068 0
8910 5064 0
8910 5066 0
8910 -427 5069 0
8910 -427 5061 5068 0
8910 -427 5062 0
8910 -427 5064 0
8910 -427 5066 0
8910 -425 5068 0
8910 -425 5061 0
8910 -425 5062 0
8910 -425 5064 0
8910 -425 5066 0
8910 -423 0
8910 -423 5061 0
8910 -423 5062 0
8910 -423 5064 0
8910 -423 5066 0
8910 -422 0
8910 -422 5061 0
8910 -422 5062 0
8910 -422 5064 0
8910 -422 5066 0
c ((( - shift(agrid_00001_00006, -4) + aux935 + aux936)<=3)=tv=SATLiteral(8911))
-8911 5106 0
-8911 5094 5104 0
-8911 5095 5102 0
-8911 5097 5101 0
-8911 5099 0
-8911 -42 5104 0
-8911 -42 5094 5102 0
-8911 -42 5095 5101 0
-8911 -42 5097 0
-8911 -42 5099 0
-8911 -40 5102 0
-8911 -40 5094 5101 0
-8911 -40 5095 0
-8911 -40 5097 0
-8911 -40 5099 0
-8911 -38 5101 0
-8911 -38 5094 0
-8911 -38 5095 0
-8911 -38 5097 0
-8911 -38 5099 0
-8911 -37 0
-8911 -37 5094 0
-8911 -37 5095 0
-8911 -37 5097 0
-8911 -37 5099 0
8911 37 -5094 -5101 0
8911 38 -5095 -5101 0
8911 38 -5094 -5102 0
8911 40 -5097 -5101 0
8911 40 -5095 -5102 0
8911 40 -5094 -5104 0
8911 42 -5099 -5101 0
8911 42 -5097 -5102 0
8911 42 -5095 -5104 0
8911 42 -5094 -5106 0
c ((3<=( - shift(agrid_00001_00006, -4) + aux935 + aux936))=tv=SATLiteral(8912))
-8912 38 -5094 -5101 0
-8912 40 -5095 -5101 0
-8912 40 -5094 -5102 0
-8912 42 -5097 -5101 0
-8912 42 -5095 -5102 0
-8912 42 -5094 -5104 0
8912 5104 0
8912 5094 5102 0
8912 5095 5101 0
8912 5097 0
8912 5099 0
8912 -42 5102 0
8912 -42 5094 5101 0
8912 -42 5095 0
8912 -42 5097 0
8912 -42 5099 0
8912 -40 5101 0
8912 -40 5094 0
8912 -40 5095 0
8912 -40 5097 0
8912 -40 5099 0
8912 -38 0
8912 -38 5094 0
8912 -38 5095 0
8912 -38 5097 0
8912 -38 5099 0
8912 -37 0
8912 -37 5094 0
8912 -37 5095 0
8912 -37 5097 0
8912 -37 5099 0
c (((aux946 + aux947 - shift(agrid_00002_00006, -4))<=3)=tv=SATLiteral(8913))
-8913 5141 0
-8913 -98 5139 0
-8913 -96 5137 0
-8913 -94 5136 0
-8913 -93 0
-8913 5129 5139 0
-8913 5129 -98 5137 0
-8913 5129 -96 5136 0
-8913 5129 -94 0
-8913 5129 -93 0
-8913 5130 5137 0
-8913 5130 -98 5136 0
-8913 5130 -96 0
-8913 5130 -94 0
-8913 5130 -93 0
-8913 5132 5136 0
-8913 5132 -98 0
-8913 5132 -96 0
-8913 5132 -94 0
-8913 5132 -93 0
-8913 5134 0
-8913 5134 -98 0
-8913 5134 -96 0
-8913 5134 -94 0
-8913 5134 -93 0
8913 -5134 98 -5136 0
8913 -5132 96 -5136 0
8913 -5132 98 -5137 0
8913 -5130 94 -5136 0
8913 -5130 96 -5137 0
8913 -5130 98 -5139 0
8913 -5129 93 -5136 0
8913 -5129 94 -5137 0
8913 -5129 96 -5139 0
8913 -5129 98 -5141 0
c ((3<=(aux946 + aux947 - shift(agrid_00002_00006, -4)))=tv=SATLiteral(8914))
-8914 -5132 98 -5136 0
-8914 -5130 96 -5136 0
-8914 -5130 98 -5137 0
-8914 -5129 94 -5136 0
-8914 -5129 96 -5137 0
-8914 -5129 98 -5139 0
8914 5139 0
8914 -98 5137 0
8914 -96 5136 0
8914 -94 0
8914 -93 0
8914 5129 5137 0
8914 5129 -98 5136 0
8914 5129 -96 0
8914 5129 -94 0
8914 5129 -93 0
8914 5130 5136 0
8914 5130 -98 0
8914 5130 -96 0
8914 5130 -94 0
8914 5130 -93 0
8914 5132 0
8914 5132 -98 0
8914 5132 -96 0
8914 5132 -94 0
8914 5132 -93 0
8914 5134 0
8914 5134 -98 0
8914 5134 -96 0
8914 5134 -94 0
8914 5134 -93 0
c (((aux956 + aux958 - shift(agrid_00003_00006, -4))<=3)=tv=SATLiteral(8915))
-8915 5182 0
-8915 -154 5180 0
-8915 -152 5178 0
-8915 -150 5177 0
-8915 -149 0
-8915 5163 5180 0
-8915 5163 -154 5178 0
-8915 5163 -152 5177 0
-8915 5163 -150 0
-8915 5163 -149 0
-8915 5164 5178 0
-8915 5164 -154 5177 0
-8915 5164 -152 0
-8915 5164 -150 0
-8915 5164 -149 0
-8915 5166 5177 0
-8915 5166 -154 0
-8915 5166 -152 0
-8915 5166 -150 0
-8915 5166 -149 0
-8915 5168 0
-8915 5168 -154 0
-8915 5168 -152 0
-8915 5168 -150 0
-8915 5168 -149 0
8915 -5168 154 -5177 0
8915 -5166 152 -5177 0
8915 -5166 154 -5178 0
8915 -5164 150 -5177 0
8915 -5164 152 -5178 0
8915 -5164 154 -5180 0
8915 -5163 149 -5177 0
8915 -5163 150 -5178 0
8915 -5163 152 -5180 0
8915 -5163 154 -5182 0
c ((3<=(aux956 + aux958 - shift(agrid_00003_00006, -4)))=tv=SATLiteral(8916))
-8916 -5166 154 -5177 0
-8916 -5164 152 -5177 0
-8916 -5164 154 -5178 0
-8916 -5163 150 -5177 0
-8916 -5163 152 -5178 0
-8916 -5163 154 -5180 0
8916 5180 0
8916 -154 5178 0
8916 -152 5177 0
8916 -150 0
8916 -149 0
8916 5163 5178 0
8916 5163 -154 5177 0
8916 5163 -152 0
8916 5163 -150 0
8916 5163 -149 0
8916 5164 5177 0
8916 5164 -154 0
8916 5164 -152 0
8916 5164 -150 0
8916 5164 -149 0
8916 5166 0
8916 5166 -154 0
8916 5166 -152 0
8916 5166 -150 0
8916 5166 -149 0
8916 5168 0
8916 5168 -154 0
8916 5168 -152 0
8916 5168 -150 0
8916 5168 -149 0
c (((aux967 + aux969 - shift(agrid_00004_00006, -4))<=3)=tv=SATLiteral(8917))
-8917 5229 0
-8917 -210 5227 0
-8917 -208 5225 0
-8917 -206 5224 0
-8917 -205 0
-8917 5210 5227 0
-8917 5210 -210 5225 0
-8917 5210 -208 5224 0
-8917 5210 -206 0
-8917 5210 -205 0
-8917 5211 5225 0
-8917 5211 -210 5224 0
-8917 5211 -208 0
-8917 5211 -206 0
-8917 5211 -205 0
-8917 5213 5224 0
-8917 5213 -210 0
-8917 5213 -208 0
-8917 5213 -206 0
-8917 5213 -205 0
-8917 5215 0
-8917 5215 -210 0
-8917 5215 -208 0
-8917 5215 -206 0
-8917 5215 -205 0
8917 -5215 210 -5224 0
8917 -5213 208 -5224 0
8917 -5213 210 -5225 0
8917 -5211 206 -5224 0
8917 -5211 208 -5225 0
8917 -5211 210 -5227 0
8917 -5210 205 -5224 0
8917 -5210 206 -5225 0
8917 -5210 208 -5227 0
8917 -5210 210 -5229 0
c ((3<=(aux967 + aux969 - shift(agrid_00004_00006, -4)))=tv=SATLiteral(8918))
-8918 -5213 210 -5224 0
-8918 -5211 208 -5224 0
-8918 -5211 210 -5225 0
-8918 -5210 206 -5224 0
-8918 -5210 208 -5225 0
-8918 -5210 210 -5227 0
8918 5227 0
8918 -210 5225 0
8918 -208 5224 0
8918 -206 0
8918 -205 0
8918 5210 5225 0
8918 5210 -210 5224 0
8918 5210 -208 0
8918 5210 -206 0
8918 5210 -205 0
8918 5211 5224 0
8918 5211 -210 0
8918 5211 -208 0
8918 5211 -206 0
8918 5211 -205 0
8918 5213 0
8918 5213 -210 0
8918 5213 -208 0
8918 5213 -206 0
8918 5213 -205 0
8918 5215 0
8918 5215 -210 0
8918 5215 -208 0
8918 5215 -206 0
8918 5215 -205 0
c (((aux978 + aux980 - shift(agrid_00005_00006, -4))<=3)=tv=SATLiteral(8919))
-8919 5278 0
-8919 -266 5276 0
-8919 -264 5274 0
-8919 -262 5273 0
-8919 -261 0
-8919 5259 5276 0
-8919 5259 -266 5274 0
-8919 5259 -264 5273 0
-8919 5259 -262 0
-8919 5259 -261 0
-8919 5260 5274 0
-8919 5260 -266 5273 0
-8919 5260 -264 0
-8919 5260 -262 0
-8919 5260 -261 0
-8919 5262 5273 0
-8919 5262 -266 0
-8919 5262 -264 0
-8919 5262 -262 0
-8919 5262 -261 0
-8919 5264 0
-8919 5264 -266 0
-8919 5264 -264 0
-8919 5264 -262 0
-8919 5264 -261 0
8919 -5264 266 -5273 0
8919 -5262 264 -5273 0
8919 -5262 266 -5274 0
8919 -5260 262 -5273 0
8919 -5260 264 -5274 0
8919 -5260 266 -5276 0
8919 -5259 261 -5273 0
8919 -5259 262 -5274 0
8919 -5259 264 -5276 0
8919 -5259 266 -5278 0
c ((3<=(aux978 + aux980 - shift(agrid_00005_00006, -4)))=tv=SATLiteral(8920))
-8920 -5262 266 -5273 0
-8920 -5260 264 -5273 0
-8920 -5260 266 -5274 0
-8920 -5259 262 -5273 0
-8920 -5259 264 -5274 0
-8920 -5259 266 -5276 0
8920 5276 0
8920 -266 5274 0
8920 -264 5273 0
8920 -262 0
8920 -261 0
8920 5259 5274 0
8920 5259 -266 5273 0
8920 5259 -264 0
8920 5259 -262 0
8920 5259 -261 0
8920 5260 5273 0
8920 5260 -266 0
8920 5260 -264 0
8920 5260 -262 0
8920 5260 -261 0
8920 5262 0
8920 5262 -266 0
8920 5262 -264 0
8920 5262 -262 0
8920 5262 -261 0
8920 5264 0
8920 5264 -266 0
8920 5264 -264 0
8920 5264 -262 0
8920 5264 -261 0
c (((aux989 + aux991 - shift(agrid_00006_00006, -4))<=3)=tv=SATLiteral(8921))
-8921 5323 0
-8921 -322 5321 0
-8921 -320 5319 0
-8921 -318 5318 0
-8921 -317 0
-8921 5304 5321 0
-8921 5304 -322 5319 0
-8921 5304 -320 5318 0
-8921 5304 -318 0
-8921 5304 -317 0
-8921 5305 5319 0
-8921 5305 -322 5318 0
-8921 5305 -320 0
-8921 5305 -318 0
-8921 5305 -317 0
-8921 5307 5318 0
-8921 5307 -322 0
-8921 5307 -320 0
-8921 5307 -318 0
-8921 5307 -317 0
-8921 5309 0
-8921 5309 -322 0
-8921 5309 -320 0
-8921 5309 -318 0
-8921 5309 -317 0
8921 -5309 322 -5318 0
8921 -5307 320 -5318 0
8921 -5307 322 -5319 0
8921 -5305 318 -5318 0
8921 -5305 320 -5319 0
8921 -5305 322 -5321 0
8921 -5304 317 -5318 0
8921 -5304 318 -5319 0
8921 -5304 320 -5321 0
8921 -5304 322 -5323 0
c ((3<=(aux989 + aux991 - shift(agrid_00006_00006, -4)))=tv=SATLiteral(8922))
-8922 -5307 322 -5318 0
-8922 -5305 320 -5318 0
-8922 -5305 322 -5319 0
-8922 -5304 318 -5318 0
-8922 -5304 320 -5319 0
-8922 -5304 322 -5321 0
8922 5321 0
8922 -322 5319 0
8922 -320 5318 0
8922 -318 0
8922 -317 0
8922 5304 5319 0
8922 5304 -322 5318 0
8922 5304 -320 0
8922 5304 -318 0
8922 5304 -317 0
8922 5305 5318 0
8922 5305 -322 0
8922 5305 -320 0
8922 5305 -318 0
8922 5305 -317 0
8922 5307 0
8922 5307 -322 0
8922 5307 -320 0
8922 5307 -318 0
8922 5307 -317 0
8922 5309 0
8922 5309 -322 0
8922 5309 -320 0
8922 5309 -318 0
8922 5309 -317 0
c (((aux1001 + aux1002 - shift(agrid_00007_00006, -4))<=3)=tv=SATLiteral(8923))
-8923 5362 0
-8923 -378 5360 0
-8923 -376 5358 0
-8923 -374 5357 0
-8923 -373 0
-8923 5350 5360 0
-8923 5350 -378 5358 0
-8923 5350 -376 5357 0
-8923 5350 -374 0
-8923 5350 -373 0
-8923 5351 5358 0
-8923 5351 -378 5357 0
-8923 5351 -376 0
-8923 5351 -374 0
-8923 5351 -373 0
-8923 5353 5357 0
-8923 5353 -378 0
-8923 5353 -376 0
-8923 5353 -374 0
-8923 5353 -373 0
-8923 5355 0
-8923 5355 -378 0
-8923 5355 -376 0
-8923 5355 -374 0
-8923 5355 -373 0
8923 -5355 378 -5357 0
8923 -5353 376 -5357 0
8923 -5353 378 -5358 0
8923 -5351 374 -5357 0
8923 -5351 376 -5358 0
8923 -5351 378 -5360 0
8923 -5350 373 -5357 0
8923 -5350 374 -5358 0
8923 -5350 376 -5360 0
8923 -5350 378 -5362 0
c ((3<=(aux1001 + aux1002 - shift(agrid_00007_00006, -4)))=tv=SATLiteral(8924))
-8924 -5353 378 -5357 0
-8924 -5351 376 -5357 0
-8924 -5351 378 -5358 0
-8924 -5350 374 -5357 0
-8924 -5350 376 -5358 0
-8924 -5350 378 -5360 0
8924 5360 0
8924 -378 5358 0
8924 -376 5357 0
8924 -374 0
8924 -373 0
8924 5350 5358 0
8924 5350 -378 5357 0
8924 5350 -376 0
8924 5350 -374 0
8924 5350 -373 0
8924 5351 5357 0
8924 5351 -378 0
8924 5351 -376 0
8924 5351 -374 0
8924 5351 -373 0
8924 5353 0
8924 5353 -378 0
8924 5353 -376 0
8924 5353 -374 0
8924 5353 -373 0
8924 5355 0
8924 5355 -378 0
8924 5355 -376 0
8924 5355 -374 0
8924 5355 -373 0
c ((( - shift(agrid_00008_00006, -4) + aux1012 + aux1013)<=3)=tv=SATLiteral(8925))
-8925 5395 0
-8925 5383 5393 0
-8925 5384 5391 0
-8925 5386 5390 0
-8925 5388 0
-8925 -434 5393 0
-8925 -434 5383 5391 0
-8925 -434 5384 5390 0
-8925 -434 5386 0
-8925 -434 5388 0
-8925 -432 5391 0
-8925 -432 5383 5390 0
-8925 -432 5384 0
-8925 -432 5386 0
-8925 -432 5388 0
-8925 -430 5390 0
-8925 -430 5383 0
-8925 -430 5384 0
-8925 -430 5386 0
-8925 -430 5388 0
-8925 -429 0
-8925 -429 5383 0
-8925 -429 5384 0
-8925 -429 5386 0
-8925 -429 5388 0
8925 429 -5383 -5390 0
8925 430 -5384 -5390 0
8925 430 -5383 -5391 0
8925 432 -5386 -5390 0
8925 432 -5384 -5391 0
8925 432 -5383 -5393 0
8925 434 -5388 -5390 0
8925 434 -5386 -5391 0
8925 434 -5384 -5393 0
8925 434 -5383 -5395 0
c ((3<=( - shift(agrid_00008_00006, -4) + aux1012 + aux1013))=tv=SATLiteral(8926))
-8926 430 -5383 -5390 0
-8926 432 -5384 -5390 0
-8926 432 -5383 -5391 0
-8926 434 -5386 -5390 0
-8926 434 -5384 -5391 0
-8926 434 -5383 -5393 0
8926 5393 0
8926 5383 5391 0
8926 5384 5390 0
8926 5386 0
8926 5388 0
8926 -434 5391 0
8926 -434 5383 5390 0
8926 -434 5384 0
8926 -434 5386 0
8926 -434 5388 0
8926 -432 5390 0
8926 -432 5383 0
8926 -432 5384 0
8926 -432 5386 0
8926 -432 5388 0
8926 -430 0
8926 -430 5383 0
8926 -430 5384 0
8926 -430 5386 0
8926 -430 5388 0
8926 -429 0
8926 -429 5383 0
8926 -429 5384 0
8926 -429 5386 0
8926 -429 5388 0
c ((( - shift(agrid_00001_00007, -4) + aux1023 + aux1024)<=3)=tv=SATLiteral(8927))
-8927 5422 0
-8927 -49 5420 0
-8927 -47 5418 0
-8927 -45 5417 0
-8927 -44 0
-8927 5412 5420 0
-8927 5412 -49 5418 0
-8927 5412 -47 5417 0
-8927 5412 -45 0
-8927 5412 -44 0
-8927 5413 5418 0
-8927 5413 -49 5417 0
-8927 5413 -47 0
-8927 5413 -45 0
-8927 5413 -44 0
-8927 5415 5417 0
-8927 5415 -49 0
-8927 5415 -47 0
-8927 5415 -45 0
-8927 5415 -44 0
8927 49 -5417 0
8927 -5415 47 -5417 0
8927 -5415 49 -5418 0
8927 -5413 45 -5417 0
8927 -5413 47 -5418 0
8927 -5413 49 -5420 0
8927 -5412 44 -5417 0
8927 -5412 45 -5418 0
8927 -5412 47 -5420 0
8927 -5412 49 -5422 0
c ((3<=( - shift(agrid_00001_00007, -4) + aux1023 + aux1024))=tv=SATLiteral(8928))
-8928 -5415 49 -5417 0
-8928 -5413 47 -5417 0
-8928 -5413 49 -5418 0
-8928 -5412 45 -5417 0
-8928 -5412 47 -5418 0
-8928 -5412 49 -5420 0
8928 5420 0
8928 -49 5418 0
8928 -47 5417 0
8928 -45 0
8928 -44 0
8928 5412 5418 0
8928 5412 -49 5417 0
8928 5412 -47 0
8928 5412 -45 0
8928 5412 -44 0
8928 5413 5417 0
8928 5413 -49 0
8928 5413 -47 0
8928 5413 -45 0
8928 5413 -44 0
8928 5415 0
8928 5415 -49 0
8928 5415 -47 0
8928 5415 -45 0
8928 5415 -44 0
c (((aux1034 + aux1035 - shift(agrid_00002_00007, -4))<=3)=tv=SATLiteral(8929))
-8929 -100 0
-8929 5448 -101 0
-8929 5449 -103 0
-8929 5451 -105 0
-8929 5453 0
-8929 5441 -101 0
-8929 5441 5448 -103 0
-8929 5441 5449 -105 0
-8929 5441 5451 0
-8929 5441 5453 0
-8929 5442 -103 0
-8929 5442 5448 -105 0
-8929 5442 5449 0
-8929 5442 5451 0
-8929 5442 5453 0
-8929 5444 -105 0
-8929 5444 5448 0
-8929 5444 5449 0
-8929 5444 5451 0
-8929 5444 5453 0
-8929 5446 0
-8929 5446 5448 0
-8929 5446 5449 0
-8929 5446 5451 0
-8929 5446 5453 0
8929 -5446 -5448 105 0
8929 -5444 -5449 105 0
8929 -5444 -5448 103 0
8929 -5442 -5451 105 0
8929 -5442 -5449 103 0
8929 -5442 -5448 101 0
8929 -5441 -5453 105 0
8929 -5441 -5451 103 0
8929 -5441 -5449 101 0
8929 -5441 -5448 100 0
c ((3<=(aux1034 + aux1035 - shift(agrid_00002_00007, -4)))=tv=SATLiteral(8930))
-8930 -5444 -5448 105 0
-8930 -5442 -5449 105 0
-8930 -5442 -5448 103 0
-8930 -5441 -5451 105 0
-8930 -5441 -5449 103 0
-8930 -5441 -5448 101 0
8930 -101 0
8930 5448 -103 0
8930 5449 -105 0
8930 5451 0
8930 5453 0
8930 5441 -103 0
8930 5441 5448 -105 0
8930 5441 5449 0
8930 5441 5451 0
8930 5441 5453 0
8930 5442 -105 0
8930 5442 5448 0
8930 5442 5449 0
8930 5442 5451 0
8930 5442 5453 0
8930 5444 0
8930 5444 5448 0
8930 5444 5449 0
8930 5444 5451 0
8930 5444 5453 0
8930 5446 0
8930 5446 5448 0
8930 5446 5449 0
8930 5446 5451 0
8930 5446 5453 0
c (((aux1045 + aux1046 - shift(agrid_00003_00007, -4))<=3)=tv=SATLiteral(8931))
-8931 5488 0
-8931 -161 5486 0
-8931 -159 5484 0
-8931 -157 5483 0
-8931 -156 0
-8931 5476 5486 0
-8931 5476 -161 5484 0
-8931 5476 -159 5483 0
-8931 5476 -157 0
-8931 5476 -156 0
-8931 5477 5484 0
-8931 5477 -161 5483 0
-8931 5477 -159 0
-8931 5477 -157 0
-8931 5477 -156 0
-8931 5479 5483 0
-8931 5479 -161 0
-8931 5479 -159 0
-8931 5479 -157 0
-8931 5479 -156 0
-8931 5481 0
-8931 5481 -161 0
-8931 5481 -159 0
-8931 5481 -157 0
-8931 5481 -156 0
8931 -5481 161 -5483 0
8931 -5479 159 -5483 0
8931 -5479 161 -5484 0
8931 -5477 157 -5483 0
8931 -5477 159 -5484 0
8931 -5477 161 -5486 0
8931 -5476 156 -5483 0
8931 -5476 157 -5484 0
8931 -5476 159 -5486 0
8931 -5476 161 -5488 0
c ((3<=(aux1045 + aux1046 - shift(agrid_00003_00007, -4)))=tv=SATLiteral(8932))
-8932 -5479 161 -5483 0
-8932 -5477 159 -5483 0
-8932 -5477 161 -5484 0
-8932 -5476 157 -5483 0
-8932 -5476 159 -5484 0
-8932 -5476 161 -5486 0
8932 5486 0
8932 -161 5484 0
8932 -159 5483 0
8932 -157 0
8932 -156 0
8932 5476 5484 0
8932 5476 -161 5483 0
8932 5476 -159 0
8932 5476 -157 0
8932 5476 -156 0
8932 5477 5483 0
8932 5477 -161 0
8932 5477 -159 0
8932 5477 -157 0
8932 5477 -156 0
8932 5479 0
8932 5479 -161 0
8932 5479 -159 0
8932 5479 -157 0
8932 5479 -156 0
8932 5481 0
8932 5481 -161 0
8932 5481 -159 0
8932 5481 -157 0
8932 5481 -156 0
c (((aux1055 + aux1057 - shift(agrid_00004_00007, -4))<=3)=tv=SATLiteral(8933))
-8933 5529 0
-8933 -217 5527 0
-8933 -215 5525 0
-8933 -213 5524 0
-8933 -212 0
-8933 5510 5527 0
-8933 5510 -217 5525 0
-8933 5510 -215 5524 0
-8933 5510 -213 0
-8933 5510 -212 0
-8933 5511 5525 0
-8933 5511 -217 5524 0
-8933 5511 -215 0
-8933 5511 -213 0
-8933 5511 -212 0
-8933 5513 5524 0
-8933 5513 -217 0
-8933 5513 -215 0
-8933 5513 -213 0
-8933 5513 -212 0
-8933 5515 0
-8933 5515 -217 0
-8933 5515 -215 0
-8933 5515 -213 0
-8933 5515 -212 0
8933 -5515 217 -5524 0
8933 -5513 215 -5524 0
8933 -5513 217 -5525 0
8933 -5511 213 -5524 0
8933 -5511 215 -5525 0
8933 -5511 217 -5527 0
8933 -5510 212 -5524 0
8933 -5510 213 -5525 0
8933 -5510 215 -5527 0
8933 -5510 217 -5529 0
c ((3<=(aux1055 + aux1057 - shift(agrid_00004_00007, -4)))=tv=SATLiteral(8934))
-8934 -5513 217 -5524 0
-8934 -5511 215 -5524 0
-8934 -5511 217 -5525 0
-8934 -5510 213 -5524 0
-8934 -5510 215 -5525 0
-8934 -5510 217 -5527 0
8934 5527 0
8934 -217 5525 0
8934 -215 5524 0
8934 -213 0
8934 -212 0
8934 5510 5525 0
8934 5510 -217 5524 0
8934 5510 -215 0
8934 5510 -213 0
8934 5510 -212 0
8934 5511 5524 0
8934 5511 -217 0
8934 5511 -215 0
8934 5511 -213 0
8934 5511 -212 0
8934 5513 0
8934 5513 -217 0
8934 5513 -215 0
8934 5513 -213 0
8934 5513 -212 0
8934 5515 0
8934 5515 -217 0
8934 5515 -215 0
8934 5515 -213 0
8934 5515 -212 0
c (((aux1066 + aux1068 - shift(agrid_00005_00007, -4))<=3)=tv=SATLiteral(8935))
-8935 5572 0
-8935 -273 5570 0
-8935 -271 5568 0
-8935 -269 5567 0
-8935 -268 0
-8935 5553 5570 0
-8935 5553 -273 5568 0
-8935 5553 -271 5567 0
-8935 5553 -269 0
-8935 5553 -268 0
-8935 5554 5568 0
-8935 5554 -273 5567 0
-8935 5554 -271 0
-8935 5554 -269 0
-8935 5554 -268 0
-8935 5556 5567 0
-8935 5556 -273 0
-8935 5556 -271 0
-8935 5556 -269 0
-8935 5556 -268 0
-8935 5558 0
-8935 5558 -273 0
-8935 5558 -271 0
-8935 5558 -269 0
-8935 5558 -268 0
8935 -5558 273 -5567 0
8935 -5556 271 -5567 0
8935 -5556 273 -5568 0
8935 -5554 269 -5567 0
8935 -5554 271 -5568 0
8935 -5554 273 -5570 0
8935 -5553 268 -5567 0
8935 -5553 269 -5568 0
8935 -5553 271 -5570 0
8935 -5553 273 -5572 0
c ((3<=(aux1066 + aux1068 - shift(agrid_00005_00007, -4)))=tv=SATLiteral(8936))
-8936 -5556 273 -5567 0
-8936 -5554 271 -5567 0
-8936 -5554 273 -5568 0
-8936 -5553 269 -5567 0
-8936 -5553 271 -5568 0
-8936 -5553 273 -5570 0
8936 5570 0
8936 -273 5568 0
8936 -271 5567 0
8936 -269 0
8936 -268 0
8936 5553 5568 0
8936 5553 -273 5567 0
8936 5553 -271 0
8936 5553 -269 0
8936 5553 -268 0
8936 5554 5567 0
8936 5554 -273 0
8936 5554 -271 0
8936 5554 -269 0
8936 5554 -268 0
8936 5556 0
8936 5556 -273 0
8936 5556 -271 0
8936 5556 -269 0
8936 5556 -268 0
8936 5558 0
8936 5558 -273 0
8936 5558 -271 0
8936 5558 -269 0
8936 5558 -268 0
c ((( - shift(agrid_00006_00007, -4) + aux1078 + aux1079)<=3)=tv=SATLiteral(8937))
-8937 5611 0
-8937 5599 5609 0
-8937 5600 5607 0
-8937 5602 5606 0
-8937 5604 0
-8937 -329 5609 0
-8937 -329 5599 5607 0
-8937 -329 5600 5606 0
-8937 -329 5602 0
-8937 -329 5604 0
-8937 -327 5607 0
-8937 -327 5599 5606 0
-8937 -327 5600 0
-8937 -327 5602 0
-8937 -327 5604 0
-8937 -325 5606 0
-8937 -325 5599 0
-8937 -325 5600 0
-8937 -325 5602 0
-8937 -325 5604 0
-8937 -324 0
-8937 -324 5599 0
-8937 -324 5600 0
-8937 -324 5602 0
-8937 -324 5604 0
8937 324 -5599 -5606 0
8937 325 -5600 -5606 0
8937 325 -5599 -5607 0
8937 327 -5602 -5606 0
8937 327 -5600 -5607 0
8937 327 -5599 -5609 0
8937 329 -5604 -5606 0
8937 329 -5602 -5607 0
8937 329 -5600 -5609 0
8937 329 -5599 -5611 0
c ((3<=( - shift(agrid_00006_00007, -4) + aux1078 + aux1079))=tv=SATLiteral(8938))
-8938 325 -5599 -5606 0
-8938 327 -5600 -5606 0
-8938 327 -5599 -5607 0
-8938 329 -5602 -5606 0
-8938 329 -5600 -5607 0
-8938 329 -5599 -5609 0
8938 5609 0
8938 5599 5607 0
8938 5600 5606 0
8938 5602 0
8938 5604 0
8938 -329 5607 0
8938 -329 5599 5606 0
8938 -329 5600 0
8938 -329 5602 0
8938 -329 5604 0
8938 -327 5606 0
8938 -327 5599 0
8938 -327 5600 0
8938 -327 5602 0
8938 -327 5604 0
8938 -325 0
8938 -325 5599 0
8938 -325 5600 0
8938 -325 5602 0
8938 -325 5604 0
8938 -324 0
8938 -324 5599 0
8938 -324 5600 0
8938 -324 5602 0
8938 -324 5604 0
c (((aux1089 + aux1090 - shift(agrid_00007_00007, -4))<=3)=tv=SATLiteral(8939))
-8939 -380 0
-8939 5639 -381 0
-8939 5640 -383 0
-8939 5642 -385 0
-8939 5644 0
-8939 5632 -381 0
-8939 5632 5639 -383 0
-8939 5632 5640 -385 0
-8939 5632 5642 0
-8939 5632 5644 0
-8939 5633 -383 0
-8939 5633 5639 -385 0
-8939 5633 5640 0
-8939 5633 5642 0
-8939 5633 5644 0
-8939 5635 -385 0
-8939 5635 5639 0
-8939 5635 5640 0
-8939 5635 5642 0
-8939 5635 5644 0
-8939 5637 0
-8939 5637 5639 0
-8939 5637 5640 0
-8939 5637 5642 0
-8939 5637 5644 0
8939 -5637 -5639 385 0
8939 -5635 -5640 385 0
8939 -5635 -5639 383 0
8939 -5633 -5642 385 0
8939 -5633 -5640 383 0
8939 -5633 -5639 381 0
8939 -5632 -5644 385 0
8939 -5632 -5642 383 0
8939 -5632 -5640 381 0
8939 -5632 -5639 380 0
c ((3<=(aux1089 + aux1090 - shift(agrid_00007_00007, -4)))=tv=SATLiteral(8940))
-8940 -5635 -5639 385 0
-8940 -5633 -5640 385 0
-8940 -5633 -5639 383 0
-8940 -5632 -5642 385 0
-8940 -5632 -5640 383 0
-8940 -5632 -5639 381 0
8940 -381 0
8940 5639 -383 0
8940 5640 -385 0
8940 5642 0
8940 5644 0
8940 5632 -383 0
8940 5632 5639 -385 0
8940 5632 5640 0
8940 5632 5642 0
8940 5632 5644 0
8940 5633 -385 0
8940 5633 5639 0
8940 5633 5640 0
8940 5633 5642 0
8940 5633 5644 0
8940 5635 0
8940 5635 5639 0
8940 5635 5640 0
8940 5635 5642 0
8940 5635 5644 0
8940 5637 0
8940 5637 5639 0
8940 5637 5640 0
8940 5637 5642 0
8940 5637 5644 0
c ((( - shift(agrid_00008_00007, -4) + aux1100 + aux1101)<=3)=tv=SATLiteral(8941))
-8941 5671 0
-8941 -441 5669 0
-8941 -439 5667 0
-8941 -437 5666 0
-8941 -436 0
-8941 5661 5669 0
-8941 5661 -441 5667 0
-8941 5661 -439 5666 0
-8941 5661 -437 0
-8941 5661 -436 0
-8941 5662 5667 0
-8941 5662 -441 5666 0
-8941 5662 -439 0
-8941 5662 -437 0
-8941 5662 -436 0
-8941 5664 5666 0
-8941 5664 -441 0
-8941 5664 -439 0
-8941 5664 -437 0
-8941 5664 -436 0
8941 441 -5666 0
8941 -5664 439 -5666 0
8941 -5664 441 -5667 0
8941 -5662 437 -5666 0
8941 -5662 439 -5667 0
8941 -5662 441 -5669 0
8941 -5661 436 -5666 0
8941 -5661 437 -5667 0
8941 -5661 439 -5669 0
8941 -5661 441 -5671 0
c ((3<=( - shift(agrid_00008_00007, -4) + aux1100 + aux1101))=tv=SATLiteral(8942))
-8942 -5664 441 -5666 0
-8942 -5662 439 -5666 0
-8942 -5662 441 -5667 0
-8942 -5661 437 -5666 0
-8942 -5661 439 -5667 0
-8942 -5661 441 -5669 0
8942 5669 0
8942 -441 5667 0
8942 -439 5666 0
8942 -437 0
8942 -436 0
8942 5661 5667 0
8942 5661 -441 5666 0
8942 5661 -439 0
8942 5661 -437 0
8942 5661 -436 0
8942 5662 5666 0
8942 5662 -441 0
8942 5662 -439 0
8942 5662 -437 0
8942 5662 -436 0
8942 5664 0
8942 5664 -441 0
8942 5664 -439 0
8942 5664 -437 0
8942 5664 -436 0
c ((( - shift(agrid_00001_00008, -4) + aux1110 + aux1112)<=3)=tv=SATLiteral(8943))
-8943 5694 0
-8943 -56 5692 0
-8943 -54 5690 0
-8943 -52 5689 0
-8943 -51 0
-8943 5683 5692 0
-8943 5683 -56 5690 0
-8943 5683 -54 5689 0
-8943 5683 -52 0
-8943 5683 -51 0
-8943 5684 5690 0
-8943 5684 -56 5689 0
-8943 5684 -54 0
-8943 5684 -52 0
-8943 5684 -51 0
8943 54 -5689 0
8943 56 -5690 0
8943 -5684 52 -5689 0
8943 -5684 54 -5690 0
8943 -5684 56 -5692 0
8943 -5683 51 -5689 0
8943 -5683 52 -5690 0
8943 -5683 54 -5692 0
8943 -5683 56 -5694 0
c ((3<=( - shift(agrid_00001_00008, -4) + aux1110 + aux1112))=tv=SATLiteral(8944))
-8944 56 -5689 0
-8944 -5684 54 -5689 0
-8944 -5684 56 -5690 0
-8944 -5683 52 -5689 0
-8944 -5683 54 -5690 0
-8944 -5683 56 -5692 0
8944 5692 0
8944 -56 5690 0
8944 -54 5689 0
8944 -52 0
8944 -51 0
8944 5683 5690 0
8944 5683 -56 5689 0
8944 5683 -54 0
8944 5683 -52 0
8944 5683 -51 0
8944 5684 5689 0
8944 5684 -56 0
8944 5684 -54 0
8944 5684 -52 0
8944 5684 -51 0
c (((aux1122 + aux1123 - shift(agrid_00002_00008, -4))<=3)=tv=SATLiteral(8945))
-8945 -107 0
-8945 5716 -108 0
-8945 5717 -110 0
-8945 5719 -112 0
-8945 5721 0
-8945 5711 -108 0
-8945 5711 5716 -110 0
-8945 5711 5717 -112 0
-8945 5711 5719 0
-8945 5711 5721 0
-8945 5712 -110 0
-8945 5712 5716 -112 0
-8945 5712 5717 0
-8945 5712 5719 0
-8945 5712 5721 0
-8945 5714 -112 0
-8945 5714 5716 0
-8945 5714 5717 0
-8945 5714 5719 0
-8945 5714 5721 0
8945 -5716 112 0
8945 -5714 -5717 112 0
8945 -5714 -5716 110 0
8945 -5712 -5719 112 0
8945 -5712 -5717 110 0
8945 -5712 -5716 108 0
8945 -5711 -5721 112 0
8945 -5711 -5719 110 0
8945 -5711 -5717 108 0
8945 -5711 -5716 107 0
c ((3<=(aux1122 + aux1123 - shift(agrid_00002_00008, -4)))=tv=SATLiteral(8946))
-8946 -5714 -5716 112 0
-8946 -5712 -5717 112 0
-8946 -5712 -5716 110 0
-8946 -5711 -5719 112 0
-8946 -5711 -5717 110 0
-8946 -5711 -5716 108 0
8946 -108 0
8946 5716 -110 0
8946 5717 -112 0
8946 5719 0
8946 5721 0
8946 5711 -110 0
8946 5711 5716 -112 0
8946 5711 5717 0
8946 5711 5719 0
8946 5711 5721 0
8946 5712 -112 0
8946 5712 5716 0
8946 5712 5717 0
8946 5712 5719 0
8946 5712 5721 0
8946 5714 0
8946 5714 5716 0
8946 5714 5717 0
8946 5714 5719 0
8946 5714 5721 0
c (((aux1133 + aux1134 - shift(agrid_00003_00008, -4))<=3)=tv=SATLiteral(8947))
-8947 -163 0
-8947 5747 -164 0
-8947 5748 -166 0
-8947 5750 -168 0
-8947 5752 0
-8947 5740 -164 0
-8947 5740 5747 -166 0
-8947 5740 5748 -168 0
-8947 5740 5750 0
-8947 5740 5752 0
-8947 5741 -166 0
-8947 5741 5747 -168 0
-8947 5741 5748 0
-8947 5741 5750 0
-8947 5741 5752 0
-8947 5743 -168 0
-8947 5743 5747 0
-8947 5743 5748 0
-8947 5743 5750 0
-8947 5743 5752 0
-8947 5745 0
-8947 5745 5747 0
-8947 5745 5748 0
-8947 5745 5750 0
-8947 5745 5752 0
8947 -5745 -5747 168 0
8947 -5743 -5748 168 0
8947 -5743 -5747 166 0
8947 -5741 -5750 168 0
8947 -5741 -5748 166 0
8947 -5741 -5747 164 0
8947 -5740 -5752 168 0
8947 -5740 -5750 166 0
8947 -5740 -5748 164 0
8947 -5740 -5747 163 0
c ((3<=(aux1133 + aux1134 - shift(agrid_00003_00008, -4)))=tv=SATLiteral(8948))
-8948 -5743 -5747 168 0
-8948 -5741 -5748 168 0
-8948 -5741 -5747 166 0
-8948 -5740 -5750 168 0
-8948 -5740 -5748 166 0
-8948 -5740 -5747 164 0
8948 -164 0
8948 5747 -166 0
8948 5748 -168 0
8948 5750 0
8948 5752 0
8948 5740 -166 0
8948 5740 5747 -168 0
8948 5740 5748 0
8948 5740 5750 0
8948 5740 5752 0
8948 5741 -168 0
8948 5741 5747 0
8948 5741 5748 0
8948 5741 5750 0
8948 5741 5752 0
8948 5743 0
8948 5743 5747 0
8948 5743 5748 0
8948 5743 5750 0
8948 5743 5752 0
8948 5745 0
8948 5745 5747 0
8948 5745 5748 0
8948 5745 5750 0
8948 5745 5752 0
c (((aux1144 + aux1145 - shift(agrid_00004_00008, -4))<=3)=tv=SATLiteral(8949))
-8949 5787 0
-8949 -224 5785 0
-8949 -222 5783 0
-8949 -220 5782 0
-8949 -219 0
-8949 5775 5785 0
-8949 5775 -224 5783 0
-8949 5775 -222 5782 0
-8949 5775 -220 0
-8949 5775 -219 0
-8949 5776 5783 0
-8949 5776 -224 5782 0
-8949 5776 -222 0
-8949 5776 -220 0
-8949 5776 -219 0
-8949 5778 5782 0
-8949 5778 -224 0
-8949 5778 -222 0
-8949 5778 -220 0
-8949 5778 -219 0
-8949 5780 0
-8949 5780 -224 0
-8949 5780 -222 0
-8949 5780 -220 0
-8949 5780 -219 0
8949 -5780 224 -5782 0
8949 -5778 222 -5782 0
8949 -5778 224 -5783 0
8949 -5776 220 -5782 0
8949 -5776 222 -5783 0
8949 -5776 224 -5785 0
8949 -5775 219 -5782 0
8949 -5775 220 -5783 0
8949 -5775 222 -5785 0
8949 -5775 224 -5787 0
c ((3<=(aux1144 + aux1145 - shift(agrid_00004_00008, -4)))=tv=SATLiteral(8950))
-8950 -5778 224 -5782 0
-8950 -5776 222 -5782 0
-8950 -5776 224 -5783 0
-8950 -5775 220 -5782 0
-8950 -5775 222 -5783 0
-8950 -5775 224 -5785 0
8950 5785 0
8950 -224 5783 0
8950 -222 5782 0
8950 -220 0
8950 -219 0
8950 5775 5783 0
8950 5775 -224 5782 0
8950 5775 -222 0
8950 5775 -220 0
8950 5775 -219 0
8950 5776 5782 0
8950 5776 -224 0
8950 5776 -222 0
8950 5776 -220 0
8950 5776 -219 0
8950 5778 0
8950 5778 -224 0
8950 5778 -222 0
8950 5778 -220 0
8950 5778 -219 0
8950 5780 0
8950 5780 -224 0
8950 5780 -222 0
8950 5780 -220 0
8950 5780 -219 0
c (((aux1155 + aux1156 - shift(agrid_00005_00008, -4))<=3)=tv=SATLiteral(8951))
-8951 5824 0
-8951 -280 5822 0
-8951 -278 5820 0
-8951 -276 5819 0
-8951 -275 0
-8951 5812 5822 0
-8951 5812 -280 5820 0
-8951 5812 -278 5819 0
-8951 5812 -276 0
-8951 5812 -275 0
-8951 5813 5820 0
-8951 5813 -280 5819 0
-8951 5813 -278 0
-8951 5813 -276 0
-8951 5813 -275 0
-8951 5815 5819 0
-8951 5815 -280 0
-8951 5815 -278 0
-8951 5815 -276 0
-8951 5815 -275 0
-8951 5817 0
-8951 5817 -280 0
-8951 5817 -278 0
-8951 5817 -276 0
-8951 5817 -275 0
8951 -5817 280 -5819 0
8951 -5815 278 -5819 0
8951 -5815 280 -5820 0
8951 -5813 276 -5819 0
8951 -5813 278 -5820 0
8951 -5813 280 -5822 0
8951 -5812 275 -5819 0
8951 -5812 276 -5820 0
8951 -5812 278 -5822 0
8951 -5812 280 -5824 0
c ((3<=(aux1155 + aux1156 - shift(agrid_00005_00008, -4)))=tv=SATLiteral(8952))
-8952 -5815 280 -5819 0
-8952 -5813 278 -5819 0
-8952 -5813 280 -5820 0
-8952 -5812 276 -5819 0
-8952 -5812 278 -5820 0
-8952 -5812 280 -5822 0
8952 5822 0
8952 -280 5820 0
8952 -278 5819 0
8952 -276 0
8952 -275 0
8952 5812 5820 0
8952 5812 -280 5819 0
8952 5812 -278 0
8952 5812 -276 0
8952 5812 -275 0
8952 5813 5819 0
8952 5813 -280 0
8952 5813 -278 0
8952 5813 -276 0
8952 5813 -275 0
8952 5815 0
8952 5815 -280 0
8952 5815 -278 0
8952 5815 -276 0
8952 5815 -275 0
8952 5817 0
8952 5817 -280 0
8952 5817 -278 0
8952 5817 -276 0
8952 5817 -275 0
c ((( - shift(agrid_00006_00008, -4) + aux1166 + aux1167)<=3)=tv=SATLiteral(8953))
-8953 5857 0
-8953 5845 5855 0
-8953 5846 5853 0
-8953 5848 5852 0
-8953 5850 0
-8953 -336 5855 0
-8953 -336 5845 5853 0
-8953 -336 5846 5852 0
-8953 -336 5848 0
-8953 -336 5850 0
-8953 -334 5853 0
-8953 -334 5845 5852 0
-8953 -334 5846 0
-8953 -334 5848 0
-8953 -334 5850 0
-8953 -332 5852 0
-8953 -332 5845 0
-8953 -332 5846 0
-8953 -332 5848 0
-8953 -332 5850 0
-8953 -331 0
-8953 -331 5845 0
-8953 -331 5846 0
-8953 -331 5848 0
-8953 -331 5850 0
8953 331 -5845 -5852 0
8953 332 -5846 -5852 0
8953 332 -5845 -5853 0
8953 334 -5848 -5852 0
8953 334 -5846 -5853 0
8953 334 -5845 -5855 0
8953 336 -5850 -5852 0
8953 336 -5848 -5853 0
8953 336 -5846 -5855 0
8953 336 -5845 -5857 0
c ((3<=( - shift(agrid_00006_00008, -4) + aux1166 + aux1167))=tv=SATLiteral(8954))
-8954 332 -5845 -5852 0
-8954 334 -5846 -5852 0
-8954 334 -5845 -5853 0
-8954 336 -5848 -5852 0
-8954 336 -5846 -5853 0
-8954 336 -5845 -5855 0
8954 5855 0
8954 5845 5853 0
8954 5846 5852 0
8954 5848 0
8954 5850 0
8954 -336 5853 0
8954 -336 5845 5852 0
8954 -336 5846 0
8954 -336 5848 0
8954 -336 5850 0
8954 -334 5852 0
8954 -334 5845 0
8954 -334 5846 0
8954 -334 5848 0
8954 -334 5850 0
8954 -332 0
8954 -332 5845 0
8954 -332 5846 0
8954 -332 5848 0
8954 -332 5850 0
8954 -331 0
8954 -331 5845 0
8954 -331 5846 0
8954 -331 5848 0
8954 -331 5850 0
c (((aux1177 + aux1178 - shift(agrid_00007_00008, -4))<=3)=tv=SATLiteral(8955))
-8955 -387 0
-8955 5879 -388 0
-8955 5880 -390 0
-8955 5882 -392 0
-8955 5884 0
-8955 5874 -388 0
-8955 5874 5879 -390 0
-8955 5874 5880 -392 0
-8955 5874 5882 0
-8955 5874 5884 0
-8955 5875 -390 0
-8955 5875 5879 -392 0
-8955 5875 5880 0
-8955 5875 5882 0
-8955 5875 5884 0
-8955 5877 -392 0
-8955 5877 5879 0
-8955 5877 5880 0
-8955 5877 5882 0
-8955 5877 5884 0
8955 -5879 392 0
8955 -5877 -5880 392 0
8955 -5877 -5879 390 0
8955 -5875 -5882 392 0
8955 -5875 -5880 390 0
8955 -5875 -5879 388 0
8955 -5874 -5884 392 0
8955 -5874 -5882 390 0
8955 -5874 -5880 388 0
8955 -5874 -5879 387 0
c ((3<=(aux1177 + aux1178 - shift(agrid_00007_00008, -4)))=tv=SATLiteral(8956))
-8956 -5877 -5879 392 0
-8956 -5875 -5880 392 0
-8956 -5875 -5879 390 0
-8956 -5874 -5882 392 0
-8956 -5874 -5880 390 0
-8956 -5874 -5879 388 0
8956 -388 0
8956 5879 -390 0
8956 5880 -392 0
8956 5882 0
8956 5884 0
8956 5874 -390 0
8956 5874 5879 -392 0
8956 5874 5880 0
8956 5874 5882 0
8956 5874 5884 0
8956 5875 -392 0
8956 5875 5879 0
8956 5875 5880 0
8956 5875 5882 0
8956 5875 5884 0
8956 5877 0
8956 5877 5879 0
8956 5877 5880 0
8956 5877 5882 0
8956 5877 5884 0
c ((( - shift(agrid_00008_00008, -4) + aux1187 + aux1189)<=3)=tv=SATLiteral(8957))
-8957 5907 0
-8957 -448 5905 0
-8957 -446 5903 0
-8957 -444 5902 0
-8957 -443 0
-8957 5896 5905 0
-8957 5896 -448 5903 0
-8957 5896 -446 5902 0
-8957 5896 -444 0
-8957 5896 -443 0
-8957 5897 5903 0
-8957 5897 -448 5902 0
-8957 5897 -446 0
-8957 5897 -444 0
-8957 5897 -443 0
8957 446 -5902 0
8957 448 -5903 0
8957 -5897 444 -5902 0
8957 -5897 446 -5903 0
8957 -5897 448 -5905 0
8957 -5896 443 -5902 0
8957 -5896 444 -5903 0
8957 -5896 446 -5905 0
8957 -5896 448 -5907 0
c ((3<=( - shift(agrid_00008_00008, -4) + aux1187 + aux1189))=tv=SATLiteral(8958))
-8958 448 -5902 0
-8958 -5897 446 -5902 0
-8958 -5897 448 -5903 0
-8958 -5896 444 -5902 0
-8958 -5896 446 -5903 0
-8958 -5896 448 -5905 0
8958 5905 0
8958 -448 5903 0
8958 -446 5902 0
8958 -444 0
8958 -443 0
8958 5896 5903 0
8958 5896 -448 5902 0
8958 5896 -446 0
8958 5896 -444 0
8958 5896 -443 0
8958 5897 5902 0
8958 5897 -448 0
8958 5897 -446 0
8958 5897 -444 0
8958 5897 -443 0
c ((-shift(num_occupied_by_types_00004, -64))=tv=aux403)
-1826 -2693 0
-1828 2694 0
-1830 2692 0
-1832 2690 0
-1834 2688 0
-1836 2686 0
-1838 2684 0
-1840 2682 0
-1842 2680 0
-1844 2678 0
-1846 2676 0
-1848 2674 0
-1850 2672 0
-1852 2670 0
-1854 2668 0
-1856 2666 0
-1858 2664 0
-1860 2662 0
-1862 2660 0
-1864 2658 0
-1866 2656 0
-1868 2654 0
-1870 2652 0
-1872 2650 0
-1874 2648 0
-1876 2646 0
-1878 2644 0
-1880 2642 0
-1882 2640 0
-1884 2638 0
-1886 2636 0
-1888 2634 0
-1890 2632 0
-1892 2630 0
-1894 2628 0
-1896 2626 0
-1898 2624 0
-1900 2622 0
-1902 2620 0
-1904 2618 0
-1906 2616 0
-1908 2614 0
-1910 2612 0
-1912 2610 0
-1914 2608 0
-1916 2606 0
-1918 2604 0
-1920 2602 0
-1922 2600 0
-1924 2598 0
-1926 2596 0
-1928 2594 0
-1930 2592 0
-1932 2590 0
-1934 2588 0
-1936 2586 0
-1938 2584 0
-1940 2582 0
-1942 2580 0
-1944 2578 0
-1946 2576 0
-1948 2574 0
-1950 2572 0
-1952 2570 0
1951 2568 0
-2568 -1951 0
-2570 1952 0
-2572 1950 0
-2574 1948 0
-2576 1946 0
-2578 1944 0
-2580 1942 0
-2582 1940 0
-2584 1938 0
-2586 1936 0
-2588 1934 0
-2590 1932 0
-2592 1930 0
-2594 1928 0
-2596 1926 0
-2598 1924 0
-2600 1922 0
-2602 1920 0
-2604 1918 0
-2606 1916 0
-2608 1914 0
-2610 1912 0
-2612 1910 0
-2614 1908 0
-2616 1906 0
-2618 1904 0
-2620 1902 0
-2622 1900 0
-2624 1898 0
-2626 1896 0
-2628 1894 0
-2630 1892 0
-2632 1890 0
-2634 1888 0
-2636 1886 0
-2638 1884 0
-2640 1882 0
-2642 1880 0
-2644 1878 0
-2646 1876 0
-2648 1874 0
-2650 1872 0
-2652 1870 0
-2654 1868 0
-2656 1866 0
-2658 1864 0
-2660 1862 0
-2662 1860 0
-2664 1858 0
-2666 1856 0
-2668 1854 0
-2670 1852 0
-2672 1850 0
-2674 1848 0
-2676 1846 0
-2678 1844 0
-2680 1842 0
-2682 1840 0
-2684 1838 0
-2686 1836 0
-2688 1834 0
-2690 1832 0
-2692 1830 0
-2694 1828 0
2693 1826 0
c (SATLiteral(-1)=aux487)
3510 0
c (SATLiteral(-1)=aux498)
3533 0
c (SATLiteral(-1)=aux508)
3559 0
c (SATLiteral(-1)=aux519)
3590 0
c (SATLiteral(-1)=aux530)
3627 0
c (SATLiteral(-1)=aux541)
3664 0
c (SATLiteral(-1)=aux552)
3695 0
c (aux567=aux568)
-3726 3727 0
-3727 3726 0
c (aux577=aux578)
-3748 3749 0
-3749 3748 0
c (SATLiteral(-1)=aux585)
3772 0
c (SATLiteral(-1)=aux597)
3804 0
c (aux607=aux608)
-3840 3841 0
-3841 3840 0
c (SATLiteral(-1)=aux618)
3883 0
c (SATLiteral(-1)=aux629)
3926 0
c (SATLiteral(-1)=aux640)
3963 0
c (SATLiteral(-1)=aux651)
3994 0
c (SATLiteral(-1)=aux663)
4022 0
c (SATLiteral(-1)=aux674)
4053 0
c (aux684=aux685)
-4089 4090 0
-4090 4089 0
c (SATLiteral(-1)=aux695)
4132 0
c (SATLiteral(-1)=aux706)
4181 0
c (SATLiteral(-1)=aux717)
4230 0
c (SATLiteral(-1)=aux728)
4273 0
c (SATLiteral(-1)=aux739)
4310 0
c (SATLiteral(-1)=aux751)
4342 0
c (SATLiteral(-1)=aux761)
4378 0
c (SATLiteral(-1)=aux772)
4421 0
c (SATLiteral(1208) <-> SATLiteral(4470))
-1208 4470 0
1208 -4470 0
c (SATLiteral(657) <-> SATLiteral(4525))
-657 4525 0
657 -4525 0
c (SATLiteral(-1)=aux805)
4580 0
c (aux816=aux817)
-4629 4630 0
-4630 4629 0
c (SATLiteral(-1)=aux828)
4673 0
c (SATLiteral(-1)=aux838)
4709 0
c (SATLiteral(-1)=aux849)
4746 0
c (SATLiteral(-1)=aux860)
4789 0
c (SATLiteral(636) <-> SATLiteral(4838))
-636 4838 0
636 -4838 0
c (SATLiteral(660) <-> SATLiteral(4893))
-660 4893 0
660 -4893 0
c (SATLiteral(-1)=aux893)
4948 0
c (aux904=aux905)
-4997 4998 0
-4998 4997 0
c (SATLiteral(-1)=aux916)
5041 0
c (SATLiteral(-1)=aux926)
5077 0
c (SATLiteral(-1)=aux937)
5108 0
c (aux948=aux949)
-5145 5146 0
-5146 5145 0
c (SATLiteral(-1)=aux959)
5188 0
c (SATLiteral(-1)=aux970)
5237 0
c (SATLiteral(-1)=aux981)
5286 0
c (SATLiteral(-1)=aux992)
5329 0
c (aux1003=aux1005)
-5366 5368 0
-5368 5366 0
c (aux1014=aux1015)
-5397 5398 0
-5398 5397 0
c (aux1025=aux1027)
-5424 5426 0
-5426 5424 0
c (SATLiteral(-1)=aux1037)
5456 0
c (aux1047=aux1048)
-5492 5493 0
-5493 5492 0
c (SATLiteral(-1)=aux1058)
5535 0
c (SATLiteral(-1)=aux1069)
5578 0
c (SATLiteral(-1)=aux1080)
5615 0
c (SATLiteral(-1)=aux1091)
5646 0
c (aux1103=aux1104)
-5674 5675 0
-5675 5674 0
c (SATLiteral(-1)=aux1113)
5696 0
c (SATLiteral(-1)=aux1124)
5723 0
c (SATLiteral(-1)=aux1135)
5754 0
c (SATLiteral(-1)=aux1147)
5792 0
c (aux1157=aux1159)
-5828 5830 0
-5830 5828 0
c (aux1171=aux1172)
-5862 5863 0
-5863 5862 0
c (aux1183=aux1184)
-5890 5891 0
-5891 5890 0
c ((SATLiteral(8799) /\ SATLiteral(8800))=tv=SATLiteral(2166))
2166 -8799 -8800 0
8799 -2166 0
8800 -2166 0
c ((SATLiteral(-269) /\ SATLiteral(-497) /\ SATLiteral(517) /\ SATLiteral(-506) /\ SATLiteral(-508))=tv=SATLiteral(2167))
2167 269 497 -517 506 508 0
-269 -2167 0
-497 -2167 0
517 -2167 0
-506 -2167 0
-508 -2167 0
c ((SATLiteral(8801) /\ SATLiteral(8802))=tv=SATLiteral(2168))
2168 -8801 -8802 0
8801 -2168 0
8802 -2168 0
c ((SATLiteral(8803) /\ SATLiteral(8804))=tv=SATLiteral(2169))
2169 -8803 -8804 0
8803 -2169 0
8804 -2169 0
c ((SATLiteral(8805) /\ SATLiteral(8806))=tv=SATLiteral(2170))
2170 -8805 -8806 0
8805 -2170 0
8806 -2170 0
c ((SATLiteral(8807) /\ SATLiteral(8808))=tv=SATLiteral(2171))
2171 -8807 -8808 0
8807 -2171 0
8808 -2171 0
c ((SATLiteral(8809) /\ SATLiteral(8810))=tv=SATLiteral(2172))
2172 -8809 -8810 0
8809 -2172 0
8810 -2172 0
c ((SATLiteral(8811) /\ SATLiteral(8812))=tv=SATLiteral(2173))
2173 -8811 -8812 0
8811 -2173 0
8812 -2173 0
c ((SATLiteral(8813) /\ SATLiteral(8814))=tv=SATLiteral(2174))
2174 -8813 -8814 0
8813 -2174 0
8814 -2174 0
c ((SATLiteral(8815) /\ SATLiteral(8816))=tv=SATLiteral(2175))
2175 -8815 -8816 0
8815 -2175 0
8816 -2175 0
c ((SATLiteral(8817) /\ SATLiteral(8818))=tv=SATLiteral(2176))
2176 -8817 -8818 0
8817 -2176 0
8818 -2176 0
c (((aux452 + aux453 + aux455)<=0)=tv=SATLiteral(2177))
-2177 3388 0
-2177 3382 0
-2177 3383 0
-2177 3379 0
-2177 3379 3382 0
-2177 3379 3383 0
-2177 3380 0
-2177 3380 3382 0
-2177 3380 3383 0
2177 -3379 -3382 -3388 0
c ((SATLiteral(8819) /\ SATLiteral(8820))=tv=SATLiteral(2178))
2178 -8819 -8820 0
8819 -2178 0
8820 -2178 0
c ((SATLiteral(8821) /\ SATLiteral(8822))=tv=SATLiteral(2179))
2179 -8821 -8822 0
8821 -2179 0
8822 -2179 0
c ((SATLiteral(8823) /\ SATLiteral(8824))=tv=SATLiteral(2180))
2180 -8823 -8824 0
8823 -2180 0
8824 -2180 0
c ((SATLiteral(8825) /\ SATLiteral(8826))=tv=SATLiteral(2181))
2181 -8825 -8826 0
8825 -2181 0
8826 -2181 0
c ((SATLiteral(8827) /\ SATLiteral(8828))=tv=SATLiteral(2182))
2182 -8827 -8828 0
8827 -2182 0
8828 -2182 0
c ((SATLiteral(8829) /\ SATLiteral(8830))=tv=SATLiteral(2183))
2183 -8829 -8830 0
8829 -2183 0
8830 -2183 0
c ((SATLiteral(461) -> SATLiteral(-472))=tv=SATLiteral(2184))
-2184 -461 -472 0
461 2184 0
472 2184 0
c ((SATLiteral(461) -> SATLiteral(1))=tv=SATLiteral(2185))
-2185 -461 1 0
461 2185 0
-1 2185 0
c ((SATLiteral(461) -> SATLiteral(1))=tv=SATLiteral(2186))
-2186 -461 1 0
461 2186 0
-1 2186 0
c ((SATLiteral(461) -> SATLiteral(1))=tv=SATLiteral(2187))
-2187 -461 1 0
461 2187 0
-1 2187 0
c ((SATLiteral(471) -> SATLiteral(-482))=tv=SATLiteral(2188))
-2188 -471 -482 0
471 2188 0
482 2188 0
c ((SATLiteral(471) -> SATLiteral(1))=tv=SATLiteral(2189))
-2189 -471 1 0
471 2189 0
-1 2189 0
c ((SATLiteral(471) -> SATLiteral(1))=tv=SATLiteral(2190))
-2190 -471 1 0
471 2190 0
-1 2190 0
c ((SATLiteral(471) -> SATLiteral(-462))=tv=SATLiteral(2191))
-2191 -471 -462 0
471 2191 0
462 2191 0
c ((SATLiteral(481) -> SATLiteral(-492))=tv=SATLiteral(2192))
-2192 -481 -492 0
481 2192 0
492 2192 0
c ((SATLiteral(481) -> SATLiteral(1))=tv=SATLiteral(2193))
-2193 -481 1 0
481 2193 0
-1 2193 0
c ((SATLiteral(481) -> SATLiteral(1))=tv=SATLiteral(2194))
-2194 -481 1 0
481 2194 0
-1 2194 0
c ((SATLiteral(481) -> SATLiteral(-472))=tv=SATLiteral(2195))
-2195 -481 -472 0
481 2195 0
472 2195 0
c ((SATLiteral(491) -> SATLiteral(-502))=tv=SATLiteral(2196))
-2196 -491 -502 0
491 2196 0
502 2196 0
c ((SATLiteral(491) -> SATLiteral(1))=tv=SATLiteral(2197))
-2197 -491 1 0
491 2197 0
-1 2197 0
c ((SATLiteral(491) -> SATLiteral(1))=tv=SATLiteral(2198))
-2198 -491 1 0
491 2198 0
-1 2198 0
c ((SATLiteral(491) -> SATLiteral(-482))=tv=SATLiteral(2199))
-2199 -491 -482 0
491 2199 0
482 2199 0
c ((SATLiteral(501) -> SATLiteral(-512))=tv=SATLiteral(2200))
-2200 -501 -512 0
501 2200 0
512 2200 0
c ((SATLiteral(501) -> SATLiteral(1))=tv=SATLiteral(2201))
-2201 -501 1 0
501 2201 0
-1 2201 0
c ((SATLiteral(501) -> SATLiteral(1))=tv=SATLiteral(2202))
-2202 -501 1 0
501 2202 0
-1 2202 0
c ((SATLiteral(501) -> SATLiteral(-492))=tv=SATLiteral(2203))
-2203 -501 -492 0
501 2203 0
492 2203 0
c ((SATLiteral(511) -> SATLiteral(-522))=tv=SATLiteral(2204))
-2204 -511 -522 0
511 2204 0
522 2204 0
c ((SATLiteral(511) -> SATLiteral(1))=tv=SATLiteral(2205))
-2205 -511 1 0
511 2205 0
-1 2205 0
c ((SATLiteral(511) -> SATLiteral(1))=tv=SATLiteral(2206))
-2206 -511 1 0
511 2206 0
-1 2206 0
c ((SATLiteral(511) -> SATLiteral(-502))=tv=SATLiteral(2207))
-2207 -511 -502 0
511 2207 0
502 2207 0
c ((SATLiteral(521) -> SATLiteral(-532))=tv=SATLiteral(2208))
-2208 -521 -532 0
521 2208 0
532 2208 0
c ((SATLiteral(521) -> SATLiteral(1))=tv=SATLiteral(2209))
-2209 -521 1 0
521 2209 0
-1 2209 0
c ((SATLiteral(521) -> SATLiteral(1))=tv=SATLiteral(2210))
-2210 -521 1 0
521 2210 0
-1 2210 0
c ((SATLiteral(521) -> SATLiteral(-512))=tv=SATLiteral(2211))
-2211 -521 -512 0
521 2211 0
512 2211 0
c ((SATLiteral(531) -> SATLiteral(1))=tv=SATLiteral(2212))
-2212 -531 1 0
531 2212 0
-1 2212 0
c ((SATLiteral(531) -> SATLiteral(1))=tv=SATLiteral(2213))
-2213 -531 1 0
531 2213 0
-1 2213 0
c ((SATLiteral(531) -> SATLiteral(1))=tv=SATLiteral(2214))
-2214 -531 1 0
531 2214 0
-1 2214 0
c ((SATLiteral(531) -> SATLiteral(-522))=tv=SATLiteral(2215))
-2215 -531 -522 0
531 2215 0
522 2215 0
c ((SATLiteral(462) -> SATLiteral(-473))=tv=SATLiteral(2216))
-2216 -462 -473 0
462 2216 0
473 2216 0
c ((SATLiteral(462) -> SATLiteral(-471))=tv=SATLiteral(2217))
-2217 -462 -471 0
462 2217 0
471 2217 0
c ((SATLiteral(462) -> SATLiteral(1))=tv=SATLiteral(2218))
-2218 -462 1 0
462 2218 0
-1 2218 0
c ((SATLiteral(462) -> SATLiteral(1))=tv=SATLiteral(2219))
-2219 -462 1 0
462 2219 0
-1 2219 0
c ((SATLiteral(472) -> SATLiteral(-483))=tv=SATLiteral(2220))
-2220 -472 -483 0
472 2220 0
483 2220 0
c ((SATLiteral(472) -> SATLiteral(-481))=tv=SATLiteral(2221))
-2221 -472 -481 0
472 2221 0
481 2221 0
c ((SATLiteral(472) -> SATLiteral(-461))=tv=SATLiteral(2222))
-2222 -472 -461 0
472 2222 0
461 2222 0
c ((SATLiteral(472) -> SATLiteral(-463))=tv=SATLiteral(2223))
-2223 -472 -463 0
472 2223 0
463 2223 0
c ((SATLiteral(482) -> SATLiteral(-493))=tv=SATLiteral(2224))
-2224 -482 -493 0
482 2224 0
493 2224 0
c ((SATLiteral(482) -> SATLiteral(-491))=tv=SATLiteral(2225))
-2225 -482 -491 0
482 2225 0
491 2225 0
c ((SATLiteral(482) -> SATLiteral(-471))=tv=SATLiteral(2226))
-2226 -482 -471 0
482 2226 0
471 2226 0
c ((SATLiteral(482) -> SATLiteral(-473))=tv=SATLiteral(2227))
-2227 -482 -473 0
482 2227 0
473 2227 0
c ((SATLiteral(492) -> SATLiteral(-503))=tv=SATLiteral(2228))
-2228 -492 -503 0
492 2228 0
503 2228 0
c ((SATLiteral(492) -> SATLiteral(-501))=tv=SATLiteral(2229))
-2229 -492 -501 0
492 2229 0
501 2229 0
c ((SATLiteral(492) -> SATLiteral(-481))=tv=SATLiteral(2230))
-2230 -492 -481 0
492 2230 0
481 2230 0
c ((SATLiteral(492) -> SATLiteral(-483))=tv=SATLiteral(2231))
-2231 -492 -483 0
492 2231 0
483 2231 0
c ((SATLiteral(502) -> SATLiteral(-513))=tv=SATLiteral(2232))
-2232 -502 -513 0
502 2232 0
513 2232 0
c ((SATLiteral(502) -> SATLiteral(-511))=tv=SATLiteral(2233))
-2233 -502 -511 0
502 2233 0
511 2233 0
c ((SATLiteral(502) -> SATLiteral(-491))=tv=SATLiteral(2234))
-2234 -502 -491 0
502 2234 0
491 2234 0
c ((SATLiteral(502) -> SATLiteral(-493))=tv=SATLiteral(2235))
-2235 -502 -493 0
502 2235 0
493 2235 0
c ((SATLiteral(512) -> SATLiteral(-523))=tv=SATLiteral(2236))
-2236 -512 -523 0
512 2236 0
523 2236 0
c ((SATLiteral(512) -> SATLiteral(-521))=tv=SATLiteral(2237))
-2237 -512 -521 0
512 2237 0
521 2237 0
c ((SATLiteral(512) -> SATLiteral(-501))=tv=SATLiteral(2238))
-2238 -512 -501 0
512 2238 0
501 2238 0
c ((SATLiteral(512) -> SATLiteral(-503))=tv=SATLiteral(2239))
-2239 -512 -503 0
512 2239 0
503 2239 0
c ((SATLiteral(522) -> SATLiteral(-533))=tv=SATLiteral(2240))
-2240 -522 -533 0
522 2240 0
533 2240 0
c ((SATLiteral(522) -> SATLiteral(-531))=tv=SATLiteral(2241))
-2241 -522 -531 0
522 2241 0
531 2241 0
c ((SATLiteral(522) -> SATLiteral(-511))=tv=SATLiteral(2242))
-2242 -522 -511 0
522 2242 0
511 2242 0
c ((SATLiteral(522) -> SATLiteral(-513))=tv=SATLiteral(2243))
-2243 -522 -513 0
522 2243 0
513 2243 0
c ((SATLiteral(532) -> SATLiteral(1))=tv=SATLiteral(2244))
-2244 -532 1 0
532 2244 0
-1 2244 0
c ((SATLiteral(532) -> SATLiteral(1))=tv=SATLiteral(2245))
-2245 -532 1 0
532 2245 0
-1 2245 0
c ((SATLiteral(532) -> SATLiteral(-521))=tv=SATLiteral(2246))
-2246 -532 -521 0
532 2246 0
521 2246 0
c ((SATLiteral(532) -> SATLiteral(-523))=tv=SATLiteral(2247))
-2247 -532 -523 0
532 2247 0
523 2247 0
c ((SATLiteral(463) -> SATLiteral(-474))=tv=SATLiteral(2248))
-2248 -463 -474 0
463 2248 0
474 2248 0
c ((SATLiteral(463) -> SATLiteral(-472))=tv=SATLiteral(2249))
-2249 -463 -472 0
463 2249 0
472 2249 0
c ((SATLiteral(463) -> SATLiteral(1))=tv=SATLiteral(2250))
-2250 -463 1 0
463 2250 0
-1 2250 0
c ((SATLiteral(463) -> SATLiteral(1))=tv=SATLiteral(2251))
-2251 -463 1 0
463 2251 0
-1 2251 0
c ((SATLiteral(473) -> SATLiteral(-484))=tv=SATLiteral(2252))
-2252 -473 -484 0
473 2252 0
484 2252 0
c ((SATLiteral(473) -> SATLiteral(-482))=tv=SATLiteral(2253))
-2253 -473 -482 0
473 2253 0
482 2253 0
c ((SATLiteral(473) -> SATLiteral(-462))=tv=SATLiteral(2254))
-2254 -473 -462 0
473 2254 0
462 2254 0
c ((SATLiteral(473) -> SATLiteral(-464))=tv=SATLiteral(2255))
-2255 -473 -464 0
473 2255 0
464 2255 0
c ((SATLiteral(483) -> SATLiteral(-494))=tv=SATLiteral(2256))
-2256 -483 -494 0
483 2256 0
494 2256 0
c ((SATLiteral(483) -> SATLiteral(-492))=tv=SATLiteral(2257))
-2257 -483 -492 0
483 2257 0
492 2257 0
c ((SATLiteral(483) -> SATLiteral(-472))=tv=SATLiteral(2258))
-2258 -483 -472 0
483 2258 0
472 2258 0
c ((SATLiteral(483) -> SATLiteral(-474))=tv=SATLiteral(2259))
-2259 -483 -474 0
483 2259 0
474 2259 0
c ((SATLiteral(493) -> SATLiteral(-504))=tv=SATLiteral(2260))
-2260 -493 -504 0
493 2260 0
504 2260 0
c ((SATLiteral(493) -> SATLiteral(-502))=tv=SATLiteral(2261))
-2261 -493 -502 0
493 2261 0
502 2261 0
c ((SATLiteral(493) -> SATLiteral(-482))=tv=SATLiteral(2262))
-2262 -493 -482 0
493 2262 0
482 2262 0
c ((SATLiteral(493) -> SATLiteral(-484))=tv=SATLiteral(2263))
-2263 -493 -484 0
493 2263 0
484 2263 0
c ((SATLiteral(503) -> SATLiteral(-514))=tv=SATLiteral(2264))
-2264 -503 -514 0
503 2264 0
514 2264 0
c ((SATLiteral(503) -> SATLiteral(-512))=tv=SATLiteral(2265))
-2265 -503 -512 0
503 2265 0
512 2265 0
c ((SATLiteral(503) -> SATLiteral(-492))=tv=SATLiteral(2266))
-2266 -503 -492 0
503 2266 0
492 2266 0
c ((SATLiteral(503) -> SATLiteral(-494))=tv=SATLiteral(2267))
-2267 -503 -494 0
503 2267 0
494 2267 0
c ((SATLiteral(513) -> SATLiteral(-524))=tv=SATLiteral(2268))
-2268 -513 -524 0
513 2268 0
524 2268 0
c ((SATLiteral(513) -> SATLiteral(-522))=tv=SATLiteral(2269))
-2269 -513 -522 0
513 2269 0
522 2269 0
c ((SATLiteral(513) -> SATLiteral(-502))=tv=SATLiteral(2270))
-2270 -513 -502 0
513 2270 0
502 2270 0
c ((SATLiteral(513) -> SATLiteral(-504))=tv=SATLiteral(2271))
-2271 -513 -504 0
513 2271 0
504 2271 0
c ((SATLiteral(523) -> SATLiteral(-534))=tv=SATLiteral(2272))
-2272 -523 -534 0
523 2272 0
534 2272 0
c ((SATLiteral(523) -> SATLiteral(-532))=tv=SATLiteral(2273))
-2273 -523 -532 0
523 2273 0
532 2273 0
c ((SATLiteral(523) -> SATLiteral(-512))=tv=SATLiteral(2274))
-2274 -523 -512 0
523 2274 0
512 2274 0
c ((SATLiteral(523) -> SATLiteral(-514))=tv=SATLiteral(2275))
-2275 -523 -514 0
523 2275 0
514 2275 0
c ((SATLiteral(533) -> SATLiteral(1))=tv=SATLiteral(2276))
-2276 -533 1 0
533 2276 0
-1 2276 0
c ((SATLiteral(533) -> SATLiteral(1))=tv=SATLiteral(2277))
-2277 -533 1 0
533 2277 0
-1 2277 0
c ((SATLiteral(533) -> SATLiteral(-522))=tv=SATLiteral(2278))
-2278 -533 -522 0
533 2278 0
522 2278 0
c ((SATLiteral(533) -> SATLiteral(-524))=tv=SATLiteral(2279))
-2279 -533 -524 0
533 2279 0
524 2279 0
c ((SATLiteral(464) -> SATLiteral(-475))=tv=SATLiteral(2280))
-2280 -464 -475 0
464 2280 0
475 2280 0
c ((SATLiteral(464) -> SATLiteral(-473))=tv=SATLiteral(2281))
-2281 -464 -473 0
464 2281 0
473 2281 0
c ((SATLiteral(464) -> SATLiteral(1))=tv=SATLiteral(2282))
-2282 -464 1 0
464 2282 0
-1 2282 0
c ((SATLiteral(464) -> SATLiteral(1))=tv=SATLiteral(2283))
-2283 -464 1 0
464 2283 0
-1 2283 0
c ((SATLiteral(474) -> SATLiteral(-485))=tv=SATLiteral(2284))
-2284 -474 -485 0
474 2284 0
485 2284 0
c ((SATLiteral(474) -> SATLiteral(-483))=tv=SATLiteral(2285))
-2285 -474 -483 0
474 2285 0
483 2285 0
c ((SATLiteral(474) -> SATLiteral(-463))=tv=SATLiteral(2286))
-2286 -474 -463 0
474 2286 0
463 2286 0
c ((SATLiteral(474) -> SATLiteral(-465))=tv=SATLiteral(2287))
-2287 -474 -465 0
474 2287 0
465 2287 0
c ((SATLiteral(484) -> SATLiteral(-495))=tv=SATLiteral(2288))
-2288 -484 -495 0
484 2288 0
495 2288 0
c ((SATLiteral(484) -> SATLiteral(-493))=tv=SATLiteral(2289))
-2289 -484 -493 0
484 2289 0
493 2289 0
c ((SATLiteral(484) -> SATLiteral(-473))=tv=SATLiteral(2290))
-2290 -484 -473 0
484 2290 0
473 2290 0
c ((SATLiteral(484) -> SATLiteral(-475))=tv=SATLiteral(2291))
-2291 -484 -475 0
484 2291 0
475 2291 0
c ((SATLiteral(494) -> SATLiteral(-505))=tv=SATLiteral(2292))
-2292 -494 -505 0
494 2292 0
505 2292 0
c ((SATLiteral(494) -> SATLiteral(-503))=tv=SATLiteral(2293))
-2293 -494 -503 0
494 2293 0
503 2293 0
c ((SATLiteral(494) -> SATLiteral(-483))=tv=SATLiteral(2294))
-2294 -494 -483 0
494 2294 0
483 2294 0
c ((SATLiteral(494) -> SATLiteral(-485))=tv=SATLiteral(2295))
-2295 -494 -485 0
494 2295 0
485 2295 0
c ((SATLiteral(504) -> SATLiteral(-515))=tv=SATLiteral(2296))
-2296 -504 -515 0
504 2296 0
515 2296 0
c ((SATLiteral(504) -> SATLiteral(-513))=tv=SATLiteral(2297))
-2297 -504 -513 0
504 2297 0
513 2297 0
c ((SATLiteral(504) -> SATLiteral(-493))=tv=SATLiteral(2298))
-2298 -504 -493 0
504 2298 0
493 2298 0
c ((SATLiteral(504) -> SATLiteral(-495))=tv=SATLiteral(2299))
-2299 -504 -495 0
504 2299 0
495 2299 0
c ((SATLiteral(514) -> SATLiteral(-525))=tv=SATLiteral(2300))
-2300 -514 -525 0
514 2300 0
525 2300 0
c ((SATLiteral(514) -> SATLiteral(-523))=tv=SATLiteral(2301))
-2301 -514 -523 0
514 2301 0
523 2301 0
c ((SATLiteral(514) -> SATLiteral(-503))=tv=SATLiteral(2302))
-2302 -514 -503 0
514 2302 0
503 2302 0
c ((SATLiteral(514) -> SATLiteral(-505))=tv=SATLiteral(2303))
-2303 -514 -505 0
514 2303 0
505 2303 0
c ((SATLiteral(524) -> SATLiteral(-535))=tv=SATLiteral(2304))
-2304 -524 -535 0
524 2304 0
535 2304 0
c ((SATLiteral(524) -> SATLiteral(-533))=tv=SATLiteral(2305))
-2305 -524 -533 0
524 2305 0
533 2305 0
c ((SATLiteral(524) -> SATLiteral(-513))=tv=SATLiteral(2306))
-2306 -524 -513 0
524 2306 0
513 2306 0
c ((SATLiteral(524) -> SATLiteral(-515))=tv=SATLiteral(2307))
-2307 -524 -515 0
524 2307 0
515 2307 0
c ((SATLiteral(534) -> SATLiteral(1))=tv=SATLiteral(2308))
-2308 -534 1 0
534 2308 0
-1 2308 0
c ((SATLiteral(534) -> SATLiteral(1))=tv=SATLiteral(2309))
-2309 -534 1 0
534 2309 0
-1 2309 0
c ((SATLiteral(534) -> SATLiteral(-523))=tv=SATLiteral(2310))
-2310 -534 -523 0
534 2310 0
523 2310 0
c ((SATLiteral(534) -> SATLiteral(-525))=tv=SATLiteral(2311))
-2311 -534 -525 0
534 2311 0
525 2311 0
c ((SATLiteral(465) -> SATLiteral(-476))=tv=SATLiteral(2312))
-2312 -465 -476 0
465 2312 0
476 2312 0
c ((SATLiteral(465) -> SATLiteral(-474))=tv=SATLiteral(2313))
-2313 -465 -474 0
465 2313 0
474 2313 0
c ((SATLiteral(465) -> SATLiteral(1))=tv=SATLiteral(2314))
-2314 -465 1 0
465 2314 0
-1 2314 0
c ((SATLiteral(465) -> SATLiteral(1))=tv=SATLiteral(2315))
-2315 -465 1 0
465 2315 0
-1 2315 0
c ((SATLiteral(475) -> SATLiteral(-486))=tv=SATLiteral(2316))
-2316 -475 -486 0
475 2316 0
486 2316 0
c ((SATLiteral(475) -> SATLiteral(-484))=tv=SATLiteral(2317))
-2317 -475 -484 0
475 2317 0
484 2317 0
c ((SATLiteral(475) -> SATLiteral(-464))=tv=SATLiteral(2318))
-2318 -475 -464 0
475 2318 0
464 2318 0
c ((SATLiteral(475) -> SATLiteral(-466))=tv=SATLiteral(2319))
-2319 -475 -466 0
475 2319 0
466 2319 0
c ((SATLiteral(485) -> SATLiteral(-496))=tv=SATLiteral(2320))
-2320 -485 -496 0
485 2320 0
496 2320 0
c ((SATLiteral(485) -> SATLiteral(-494))=tv=SATLiteral(2321))
-2321 -485 -494 0
485 2321 0
494 2321 0
c ((SATLiteral(485) -> SATLiteral(-474))=tv=SATLiteral(2322))
-2322 -485 -474 0
485 2322 0
474 2322 0
c ((SATLiteral(485) -> SATLiteral(-476))=tv=SATLiteral(2323))
-2323 -485 -476 0
485 2323 0
476 2323 0
c ((SATLiteral(495) -> SATLiteral(-506))=tv=SATLiteral(2324))
-2324 -495 -506 0
495 2324 0
506 2324 0
c ((SATLiteral(495) -> SATLiteral(-504))=tv=SATLiteral(2325))
-2325 -495 -504 0
495 2325 0
504 2325 0
c ((SATLiteral(495) -> SATLiteral(-484))=tv=SATLiteral(2326))
-2326 -495 -484 0
495 2326 0
484 2326 0
c ((SATLiteral(495) -> SATLiteral(-486))=tv=SATLiteral(2327))
-2327 -495 -486 0
495 2327 0
486 2327 0
c ((SATLiteral(505) -> SATLiteral(-516))=tv=SATLiteral(2328))
-2328 -505 -516 0
505 2328 0
516 2328 0
c ((SATLiteral(505) -> SATLiteral(-514))=tv=SATLiteral(2329))
-2329 -505 -514 0
505 2329 0
514 2329 0
c ((SATLiteral(505) -> SATLiteral(-494))=tv=SATLiteral(2330))
-2330 -505 -494 0
505 2330 0
494 2330 0
c ((SATLiteral(505) -> SATLiteral(-496))=tv=SATLiteral(2331))
-2331 -505 -496 0
505 2331 0
496 2331 0
c ((SATLiteral(515) -> SATLiteral(-526))=tv=SATLiteral(2332))
-2332 -515 -526 0
515 2332 0
526 2332 0
c ((SATLiteral(515) -> SATLiteral(-524))=tv=SATLiteral(2333))
-2333 -515 -524 0
515 2333 0
524 2333 0
c ((SATLiteral(515) -> SATLiteral(-504))=tv=SATLiteral(2334))
-2334 -515 -504 0
515 2334 0
504 2334 0
c ((SATLiteral(515) -> SATLiteral(-506))=tv=SATLiteral(2335))
-2335 -515 -506 0
515 2335 0
506 2335 0
c ((SATLiteral(525) -> SATLiteral(-536))=tv=SATLiteral(2336))
-2336 -525 -536 0
525 2336 0
536 2336 0
c ((SATLiteral(525) -> SATLiteral(-534))=tv=SATLiteral(2337))
-2337 -525 -534 0
525 2337 0
534 2337 0
c ((SATLiteral(525) -> SATLiteral(-514))=tv=SATLiteral(2338))
-2338 -525 -514 0
525 2338 0
514 2338 0
c ((SATLiteral(525) -> SATLiteral(-516))=tv=SATLiteral(2339))
-2339 -525 -516 0
525 2339 0
516 2339 0
c ((SATLiteral(535) -> SATLiteral(1))=tv=SATLiteral(2340))
-2340 -535 1 0
535 2340 0
-1 2340 0
c ((SATLiteral(535) -> SATLiteral(1))=tv=SATLiteral(2341))
-2341 -535 1 0
535 2341 0
-1 2341 0
c ((SATLiteral(535) -> SATLiteral(-524))=tv=SATLiteral(2342))
-2342 -535 -524 0
535 2342 0
524 2342 0
c ((SATLiteral(535) -> SATLiteral(-526))=tv=SATLiteral(2343))
-2343 -535 -526 0
535 2343 0
526 2343 0
c ((SATLiteral(466) -> SATLiteral(-477))=tv=SATLiteral(2344))
-2344 -466 -477 0
466 2344 0
477 2344 0
c ((SATLiteral(466) -> SATLiteral(-475))=tv=SATLiteral(2345))
-2345 -466 -475 0
466 2345 0
475 2345 0
c ((SATLiteral(466) -> SATLiteral(1))=tv=SATLiteral(2346))
-2346 -466 1 0
466 2346 0
-1 2346 0
c ((SATLiteral(466) -> SATLiteral(1))=tv=SATLiteral(2347))
-2347 -466 1 0
466 2347 0
-1 2347 0
c ((SATLiteral(476) -> SATLiteral(-487))=tv=SATLiteral(2348))
-2348 -476 -487 0
476 2348 0
487 2348 0
c ((SATLiteral(476) -> SATLiteral(-485))=tv=SATLiteral(2349))
-2349 -476 -485 0
476 2349 0
485 2349 0
c ((SATLiteral(476) -> SATLiteral(-465))=tv=SATLiteral(2350))
-2350 -476 -465 0
476 2350 0
465 2350 0
c ((SATLiteral(476) -> SATLiteral(-467))=tv=SATLiteral(2351))
-2351 -476 -467 0
476 2351 0
467 2351 0
c ((SATLiteral(486) -> SATLiteral(-497))=tv=SATLiteral(2352))
-2352 -486 -497 0
486 2352 0
497 2352 0
c ((SATLiteral(486) -> SATLiteral(-495))=tv=SATLiteral(2353))
-2353 -486 -495 0
486 2353 0
495 2353 0
c ((SATLiteral(486) -> SATLiteral(-475))=tv=SATLiteral(2354))
-2354 -486 -475 0
486 2354 0
475 2354 0
c ((SATLiteral(486) -> SATLiteral(-477))=tv=SATLiteral(2355))
-2355 -486 -477 0
486 2355 0
477 2355 0
c ((SATLiteral(496) -> SATLiteral(-507))=tv=SATLiteral(2356))
-2356 -496 -507 0
496 2356 0
507 2356 0
c ((SATLiteral(496) -> SATLiteral(-505))=tv=SATLiteral(2357))
-2357 -496 -505 0
496 2357 0
505 2357 0
c ((SATLiteral(496) -> SATLiteral(-485))=tv=SATLiteral(2358))
-2358 -496 -485 0
496 2358 0
485 2358 0
c ((SATLiteral(496) -> SATLiteral(-487))=tv=SATLiteral(2359))
-2359 -496 -487 0
496 2359 0
487 2359 0
c ((SATLiteral(506) -> SATLiteral(-517))=tv=SATLiteral(2360))
-2360 -506 -517 0
506 2360 0
517 2360 0
c ((SATLiteral(506) -> SATLiteral(-515))=tv=SATLiteral(2361))
-2361 -506 -515 0
506 2361 0
515 2361 0
c ((SATLiteral(506) -> SATLiteral(-495))=tv=SATLiteral(2362))
-2362 -506 -495 0
506 2362 0
495 2362 0
c ((SATLiteral(506) -> SATLiteral(-497))=tv=SATLiteral(2363))
-2363 -506 -497 0
506 2363 0
497 2363 0
c ((SATLiteral(516) -> SATLiteral(-527))=tv=SATLiteral(2364))
-2364 -516 -527 0
516 2364 0
527 2364 0
c ((SATLiteral(516) -> SATLiteral(-525))=tv=SATLiteral(2365))
-2365 -516 -525 0
516 2365 0
525 2365 0
c ((SATLiteral(516) -> SATLiteral(-505))=tv=SATLiteral(2366))
-2366 -516 -505 0
516 2366 0
505 2366 0
c ((SATLiteral(516) -> SATLiteral(-507))=tv=SATLiteral(2367))
-2367 -516 -507 0
516 2367 0
507 2367 0
c ((SATLiteral(526) -> SATLiteral(-537))=tv=SATLiteral(2368))
-2368 -526 -537 0
526 2368 0
537 2368 0
c ((SATLiteral(526) -> SATLiteral(-535))=tv=SATLiteral(2369))
-2369 -526 -535 0
526 2369 0
535 2369 0
c ((SATLiteral(526) -> SATLiteral(-515))=tv=SATLiteral(2370))
-2370 -526 -515 0
526 2370 0
515 2370 0
c ((SATLiteral(526) -> SATLiteral(-517))=tv=SATLiteral(2371))
-2371 -526 -517 0
526 2371 0
517 2371 0
c ((SATLiteral(536) -> SATLiteral(1))=tv=SATLiteral(2372))
-2372 -536 1 0
536 2372 0
-1 2372 0
c ((SATLiteral(536) -> SATLiteral(1))=tv=SATLiteral(2373))
-2373 -536 1 0
536 2373 0
-1 2373 0
c ((SATLiteral(536) -> SATLiteral(-525))=tv=SATLiteral(2374))
-2374 -536 -525 0
536 2374 0
525 2374 0
c ((SATLiteral(536) -> SATLiteral(-527))=tv=SATLiteral(2375))
-2375 -536 -527 0
536 2375 0
527 2375 0
c ((SATLiteral(467) -> SATLiteral(-478))=tv=SATLiteral(2376))
-2376 -467 -478 0
467 2376 0
478 2376 0
c ((SATLiteral(467) -> SATLiteral(-476))=tv=SATLiteral(2377))
-2377 -467 -476 0
467 2377 0
476 2377 0
c ((SATLiteral(467) -> SATLiteral(1))=tv=SATLiteral(2378))
-2378 -467 1 0
467 2378 0
-1 2378 0
c ((SATLiteral(467) -> SATLiteral(1))=tv=SATLiteral(2379))
-2379 -467 1 0
467 2379 0
-1 2379 0
c ((SATLiteral(477) -> SATLiteral(-488))=tv=SATLiteral(2380))
-2380 -477 -488 0
477 2380 0
488 2380 0
c ((SATLiteral(477) -> SATLiteral(-486))=tv=SATLiteral(2381))
-2381 -477 -486 0
477 2381 0
486 2381 0
c ((SATLiteral(477) -> SATLiteral(-466))=tv=SATLiteral(2382))
-2382 -477 -466 0
477 2382 0
466 2382 0
c ((SATLiteral(477) -> SATLiteral(-468))=tv=SATLiteral(2383))
-2383 -477 -468 0
477 2383 0
468 2383 0
c ((SATLiteral(487) -> SATLiteral(-498))=tv=SATLiteral(2384))
-2384 -487 -498 0
487 2384 0
498 2384 0
c ((SATLiteral(487) -> SATLiteral(-496))=tv=SATLiteral(2385))
-2385 -487 -496 0
487 2385 0
496 2385 0
c ((SATLiteral(487) -> SATLiteral(-476))=tv=SATLiteral(2386))
-2386 -487 -476 0
487 2386 0
476 2386 0
c ((SATLiteral(487) -> SATLiteral(-478))=tv=SATLiteral(2387))
-2387 -487 -478 0
487 2387 0
478 2387 0
c ((SATLiteral(497) -> SATLiteral(-508))=tv=SATLiteral(2388))
-2388 -497 -508 0
497 2388 0
508 2388 0
c ((SATLiteral(497) -> SATLiteral(-506))=tv=SATLiteral(2389))
-2389 -497 -506 0
497 2389 0
506 2389 0
c ((SATLiteral(497) -> SATLiteral(-486))=tv=SATLiteral(2390))
-2390 -497 -486 0
497 2390 0
486 2390 0
c ((SATLiteral(497) -> SATLiteral(-488))=tv=SATLiteral(2391))
-2391 -497 -488 0
497 2391 0
488 2391 0
c ((SATLiteral(507) -> SATLiteral(-518))=tv=SATLiteral(2392))
-2392 -507 -518 0
507 2392 0
518 2392 0
c ((SATLiteral(507) -> SATLiteral(-516))=tv=SATLiteral(2393))
-2393 -507 -516 0
507 2393 0
516 2393 0
c ((SATLiteral(507) -> SATLiteral(-496))=tv=SATLiteral(2394))
-2394 -507 -496 0
507 2394 0
496 2394 0
c ((SATLiteral(507) -> SATLiteral(-498))=tv=SATLiteral(2395))
-2395 -507 -498 0
507 2395 0
498 2395 0
c ((SATLiteral(517) -> SATLiteral(-528))=tv=SATLiteral(2396))
-2396 -517 -528 0
517 2396 0
528 2396 0
c ((SATLiteral(517) -> SATLiteral(-526))=tv=SATLiteral(2397))
-2397 -517 -526 0
517 2397 0
526 2397 0
c ((SATLiteral(517) -> SATLiteral(-506))=tv=SATLiteral(2398))
-2398 -517 -506 0
517 2398 0
506 2398 0
c ((SATLiteral(517) -> SATLiteral(-508))=tv=SATLiteral(2399))
-2399 -517 -508 0
517 2399 0
508 2399 0
c ((SATLiteral(527) -> SATLiteral(-538))=tv=SATLiteral(2400))
-2400 -527 -538 0
527 2400 0
538 2400 0
c ((SATLiteral(527) -> SATLiteral(-536))=tv=SATLiteral(2401))
-2401 -527 -536 0
527 2401 0
536 2401 0
c ((SATLiteral(527) -> SATLiteral(-516))=tv=SATLiteral(2402))
-2402 -527 -516 0
527 2402 0
516 2402 0
c ((SATLiteral(527) -> SATLiteral(-518))=tv=SATLiteral(2403))
-2403 -527 -518 0
527 2403 0
518 2403 0
c ((SATLiteral(537) -> SATLiteral(1))=tv=SATLiteral(2404))
-2404 -537 1 0
537 2404 0
-1 2404 0
c ((SATLiteral(537) -> SATLiteral(1))=tv=SATLiteral(2405))
-2405 -537 1 0
537 2405 0
-1 2405 0
c ((SATLiteral(537) -> SATLiteral(-526))=tv=SATLiteral(2406))
-2406 -537 -526 0
537 2406 0
526 2406 0
c ((SATLiteral(537) -> SATLiteral(-528))=tv=SATLiteral(2407))
-2407 -537 -528 0
537 2407 0
528 2407 0
c ((SATLiteral(468) -> SATLiteral(1))=tv=SATLiteral(2408))
-2408 -468 1 0
468 2408 0
-1 2408 0
c ((SATLiteral(468) -> SATLiteral(-477))=tv=SATLiteral(2409))
-2409 -468 -477 0
468 2409 0
477 2409 0
c ((SATLiteral(468) -> SATLiteral(1))=tv=SATLiteral(2410))
-2410 -468 1 0
468 2410 0
-1 2410 0
c ((SATLiteral(468) -> SATLiteral(1))=tv=SATLiteral(2411))
-2411 -468 1 0
468 2411 0
-1 2411 0
c ((SATLiteral(478) -> SATLiteral(1))=tv=SATLiteral(2412))
-2412 -478 1 0
478 2412 0
-1 2412 0
c ((SATLiteral(478) -> SATLiteral(-487))=tv=SATLiteral(2413))
-2413 -478 -487 0
478 2413 0
487 2413 0
c ((SATLiteral(478) -> SATLiteral(-467))=tv=SATLiteral(2414))
-2414 -478 -467 0
478 2414 0
467 2414 0
c ((SATLiteral(478) -> SATLiteral(1))=tv=SATLiteral(2415))
-2415 -478 1 0
478 2415 0
-1 2415 0
c ((SATLiteral(488) -> SATLiteral(1))=tv=SATLiteral(2416))
-2416 -488 1 0
488 2416 0
-1 2416 0
c ((SATLiteral(488) -> SATLiteral(-497))=tv=SATLiteral(2417))
-2417 -488 -497 0
488 2417 0
497 2417 0
c ((SATLiteral(488) -> SATLiteral(-477))=tv=SATLiteral(2418))
-2418 -488 -477 0
488 2418 0
477 2418 0
c ((SATLiteral(488) -> SATLiteral(1))=tv=SATLiteral(2419))
-2419 -488 1 0
488 2419 0
-1 2419 0
c ((SATLiteral(498) -> SATLiteral(1))=tv=SATLiteral(2420))
-2420 -498 1 0
498 2420 0
-1 2420 0
c ((SATLiteral(498) -> SATLiteral(-507))=tv=SATLiteral(2421))
-2421 -498 -507 0
498 2421 0
507 2421 0
c ((SATLiteral(498) -> SATLiteral(-487))=tv=SATLiteral(2422))
-2422 -498 -487 0
498 2422 0
487 2422 0
c ((SATLiteral(498) -> SATLiteral(1))=tv=SATLiteral(2423))
-2423 -498 1 0
498 2423 0
-1 2423 0
c ((SATLiteral(508) -> SATLiteral(1))=tv=SATLiteral(2424))
-2424 -508 1 0
508 2424 0
-1 2424 0
c ((SATLiteral(508) -> SATLiteral(-517))=tv=SATLiteral(2425))
-2425 -508 -517 0
508 2425 0
517 2425 0
c ((SATLiteral(508) -> SATLiteral(-497))=tv=SATLiteral(2426))
-2426 -508 -497 0
508 2426 0
497 2426 0
c ((SATLiteral(508) -> SATLiteral(1))=tv=SATLiteral(2427))
-2427 -508 1 0
508 2427 0
-1 2427 0
c ((SATLiteral(518) -> SATLiteral(1))=tv=SATLiteral(2428))
-2428 -518 1 0
518 2428 0
-1 2428 0
c ((SATLiteral(518) -> SATLiteral(-527))=tv=SATLiteral(2429))
-2429 -518 -527 0
518 2429 0
527 2429 0
c ((SATLiteral(518) -> SATLiteral(-507))=tv=SATLiteral(2430))
-2430 -518 -507 0
518 2430 0
507 2430 0
c ((SATLiteral(518) -> SATLiteral(1))=tv=SATLiteral(2431))
-2431 -518 1 0
518 2431 0
-1 2431 0
c ((SATLiteral(528) -> SATLiteral(1))=tv=SATLiteral(2432))
-2432 -528 1 0
528 2432 0
-1 2432 0
c ((SATLiteral(528) -> SATLiteral(-537))=tv=SATLiteral(2433))
-2433 -528 -537 0
528 2433 0
537 2433 0
c ((SATLiteral(528) -> SATLiteral(-517))=tv=SATLiteral(2434))
-2434 -528 -517 0
528 2434 0
517 2434 0
c ((SATLiteral(528) -> SATLiteral(1))=tv=SATLiteral(2435))
-2435 -528 1 0
528 2435 0
-1 2435 0
c ((SATLiteral(538) -> SATLiteral(1))=tv=SATLiteral(2436))
-2436 -538 1 0
538 2436 0
-1 2436 0
c ((SATLiteral(538) -> SATLiteral(1))=tv=SATLiteral(2437))
-2437 -538 1 0
538 2437 0
-1 2437 0
c ((SATLiteral(538) -> SATLiteral(-527))=tv=SATLiteral(2438))
-2438 -538 -527 0
538 2438 0
527 2438 0
c ((SATLiteral(538) -> SATLiteral(1))=tv=SATLiteral(2439))
-2439 -538 1 0
538 2439 0
-1 2439 0
c ((SATLiteral(8831) /\ SATLiteral(8832))=tv=SATLiteral(2440))
2440 -8831 -8832 0
8831 -2440 0
8832 -2440 0
c ((SATLiteral(461) -> SATLiteral(2440))=tv=SATLiteral(2441))
-2441 -461 2440 0
461 2441 0
-2440 2441 0
c ((SATLiteral(8833) /\ SATLiteral(8834))=tv=SATLiteral(2442))
2442 -8833 -8834 0
8833 -2442 0
8834 -2442 0
c ((SATLiteral(471) -> SATLiteral(2442))=tv=SATLiteral(2443))
-2443 -471 2442 0
471 2443 0
-2442 2443 0
c ((SATLiteral(8835) /\ SATLiteral(8836))=tv=SATLiteral(2444))
2444 -8835 -8836 0
8835 -2444 0
8836 -2444 0
c ((SATLiteral(481) -> SATLiteral(2444))=tv=SATLiteral(2445))
-2445 -481 2444 0
481 2445 0
-2444 2445 0
c ((SATLiteral(8837) /\ SATLiteral(8838))=tv=SATLiteral(2446))
2446 -8837 -8838 0
8837 -2446 0
8838 -2446 0
c ((SATLiteral(491) -> SATLiteral(2446))=tv=SATLiteral(2447))
-2447 -491 2446 0
491 2447 0
-2446 2447 0
c ((SATLiteral(8839) /\ SATLiteral(8840))=tv=SATLiteral(2448))
2448 -8839 -8840 0
8839 -2448 0
8840 -2448 0
c ((SATLiteral(501) -> SATLiteral(2448))=tv=SATLiteral(2449))
-2449 -501 2448 0
501 2449 0
-2448 2449 0
c ((SATLiteral(8841) /\ SATLiteral(8842))=tv=SATLiteral(2450))
2450 -8841 -8842 0
8841 -2450 0
8842 -2450 0
c ((SATLiteral(511) -> SATLiteral(2450))=tv=SATLiteral(2451))
-2451 -511 2450 0
511 2451 0
-2450 2451 0
c ((SATLiteral(8843) /\ SATLiteral(8844))=tv=SATLiteral(2452))
2452 -8843 -8844 0
8843 -2452 0
8844 -2452 0
c ((SATLiteral(521) -> SATLiteral(2452))=tv=SATLiteral(2453))
-2453 -521 2452 0
521 2453 0
-2452 2453 0
c ((SATLiteral(8845) /\ SATLiteral(8846))=tv=SATLiteral(2454))
2454 -8845 -8846 0
8845 -2454 0
8846 -2454 0
c ((SATLiteral(531) -> SATLiteral(2454))=tv=SATLiteral(2455))
-2455 -531 2454 0
531 2455 0
-2454 2455 0
c ((SATLiteral(8847) /\ SATLiteral(8848))=tv=SATLiteral(2456))
2456 -8847 -8848 0
8847 -2456 0
8848 -2456 0
c ((SATLiteral(462) -> SATLiteral(2456))=tv=SATLiteral(2457))
-2457 -462 2456 0
462 2457 0
-2456 2457 0
c ((SATLiteral(8849) /\ SATLiteral(8850))=tv=SATLiteral(2458))
2458 -8849 -8850 0
8849 -2458 0
8850 -2458 0
c ((SATLiteral(472) -> SATLiteral(2458))=tv=SATLiteral(2459))
-2459 -472 2458 0
472 2459 0
-2458 2459 0
c ((SATLiteral(8851) /\ SATLiteral(8852))=tv=SATLiteral(2460))
2460 -8851 -8852 0
8851 -2460 0
8852 -2460 0
c ((SATLiteral(482) -> SATLiteral(2460))=tv=SATLiteral(2461))
-2461 -482 2460 0
482 2461 0
-2460 2461 0
c ((SATLiteral(8853) /\ SATLiteral(8854))=tv=SATLiteral(2462))
2462 -8853 -8854 0
8853 -2462 0
8854 -2462 0
c ((SATLiteral(492) -> SATLiteral(2462))=tv=SATLiteral(2463))
-2463 -492 2462 0
492 2463 0
-2462 2463 0
c ((SATLiteral(8855) /\ SATLiteral(8856))=tv=SATLiteral(2464))
2464 -8855 -8856 0
8855 -2464 0
8856 -2464 0
c ((SATLiteral(502) -> SATLiteral(2464))=tv=SATLiteral(2465))
-2465 -502 2464 0
502 2465 0
-2464 2465 0
c ((SATLiteral(8857) /\ SATLiteral(8858))=tv=SATLiteral(2466))
2466 -8857 -8858 0
8857 -2466 0
8858 -2466 0
c ((SATLiteral(512) -> SATLiteral(2466))=tv=SATLiteral(2467))
-2467 -512 2466 0
512 2467 0
-2466 2467 0
c ((SATLiteral(8859) /\ SATLiteral(8860))=tv=SATLiteral(2468))
2468 -8859 -8860 0
8859 -2468 0
8860 -2468 0
c ((SATLiteral(522) -> SATLiteral(2468))=tv=SATLiteral(2469))
-2469 -522 2468 0
522 2469 0
-2468 2469 0
c ((SATLiteral(8861) /\ SATLiteral(8862))=tv=SATLiteral(2470))
2470 -8861 -8862 0
8861 -2470 0
8862 -2470 0
c ((SATLiteral(532) -> SATLiteral(2470))=tv=SATLiteral(2471))
-2471 -532 2470 0
532 2471 0
-2470 2471 0
c ((SATLiteral(8863) /\ SATLiteral(8864))=tv=SATLiteral(2472))
2472 -8863 -8864 0
8863 -2472 0
8864 -2472 0
c ((SATLiteral(463) -> SATLiteral(2472))=tv=SATLiteral(2473))
-2473 -463 2472 0
463 2473 0
-2472 2473 0
c ((SATLiteral(8865) /\ SATLiteral(8866))=tv=SATLiteral(2474))
2474 -8865 -8866 0
8865 -2474 0
8866 -2474 0
c ((SATLiteral(473) -> SATLiteral(2474))=tv=SATLiteral(2475))
-2475 -473 2474 0
473 2475 0
-2474 2475 0
c ((SATLiteral(8867) /\ SATLiteral(8868))=tv=SATLiteral(2476))
2476 -8867 -8868 0
8867 -2476 0
8868 -2476 0
c ((SATLiteral(483) -> SATLiteral(2476))=tv=SATLiteral(2477))
-2477 -483 2476 0
483 2477 0
-2476 2477 0
c ((SATLiteral(8869) /\ SATLiteral(8870))=tv=SATLiteral(2478))
2478 -8869 -8870 0
8869 -2478 0
8870 -2478 0
c ((SATLiteral(493) -> SATLiteral(2478))=tv=SATLiteral(2479))
-2479 -493 2478 0
493 2479 0
-2478 2479 0
c ((SATLiteral(8871) /\ SATLiteral(8872))=tv=SATLiteral(2480))
2480 -8871 -8872 0
8871 -2480 0
8872 -2480 0
c ((SATLiteral(503) -> SATLiteral(2480))=tv=SATLiteral(2481))
-2481 -503 2480 0
503 2481 0
-2480 2481 0
c ((SATLiteral(8873) /\ SATLiteral(8874))=tv=SATLiteral(2482))
2482 -8873 -8874 0
8873 -2482 0
8874 -2482 0
c ((SATLiteral(513) -> SATLiteral(2482))=tv=SATLiteral(2483))
-2483 -513 2482 0
513 2483 0
-2482 2483 0
c ((SATLiteral(8875) /\ SATLiteral(8876))=tv=SATLiteral(2484))
2484 -8875 -8876 0
8875 -2484 0
8876 -2484 0
c ((SATLiteral(523) -> SATLiteral(2484))=tv=SATLiteral(2485))
-2485 -523 2484 0
523 2485 0
-2484 2485 0
c ((SATLiteral(8877) /\ SATLiteral(8878))=tv=SATLiteral(2486))
2486 -8877 -8878 0
8877 -2486 0
8878 -2486 0
c ((SATLiteral(533) -> SATLiteral(2486))=tv=SATLiteral(2487))
-2487 -533 2486 0
533 2487 0
-2486 2487 0
c ((SATLiteral(8879) /\ SATLiteral(8880))=tv=SATLiteral(2488))
2488 -8879 -8880 0
8879 -2488 0
8880 -2488 0
c ((SATLiteral(464) -> SATLiteral(2488))=tv=SATLiteral(2489))
-2489 -464 2488 0
464 2489 0
-2488 2489 0
c ((SATLiteral(8881) /\ SATLiteral(8882))=tv=SATLiteral(2490))
2490 -8881 -8882 0
8881 -2490 0
8882 -2490 0
c ((SATLiteral(474) -> SATLiteral(2490))=tv=SATLiteral(2491))
-2491 -474 2490 0
474 2491 0
-2490 2491 0
c ((SATLiteral(8883) /\ SATLiteral(8884))=tv=SATLiteral(2492))
2492 -8883 -8884 0
8883 -2492 0
8884 -2492 0
c ((SATLiteral(484) -> SATLiteral(2492))=tv=SATLiteral(2493))
-2493 -484 2492 0
484 2493 0
-2492 2493 0
c ((SATLiteral(8885) /\ SATLiteral(8886))=tv=SATLiteral(2494))
2494 -8885 -8886 0
8885 -2494 0
8886 -2494 0
c ((SATLiteral(494) -> SATLiteral(2494))=tv=SATLiteral(2495))
-2495 -494 2494 0
494 2495 0
-2494 2495 0
c ((SATLiteral(8887) /\ SATLiteral(8888))=tv=SATLiteral(2496))
2496 -8887 -8888 0
8887 -2496 0
8888 -2496 0
c ((SATLiteral(504) -> SATLiteral(2496))=tv=SATLiteral(2497))
-2497 -504 2496 0
504 2497 0
-2496 2497 0
c ((SATLiteral(8889) /\ SATLiteral(8890))=tv=SATLiteral(2498))
2498 -8889 -8890 0
8889 -2498 0
8890 -2498 0
c ((SATLiteral(514) -> SATLiteral(2498))=tv=SATLiteral(2499))
-2499 -514 2498 0
514 2499 0
-2498 2499 0
c ((SATLiteral(8891) /\ SATLiteral(8892))=tv=SATLiteral(2500))
2500 -8891 -8892 0
8891 -2500 0
8892 -2500 0
c ((SATLiteral(524) -> SATLiteral(2500))=tv=SATLiteral(2501))
-2501 -524 2500 0
524 2501 0
-2500 2501 0
c ((SATLiteral(8893) /\ SATLiteral(8894))=tv=SATLiteral(2502))
2502 -8893 -8894 0
8893 -2502 0
8894 -2502 0
c ((SATLiteral(534) -> SATLiteral(2502))=tv=SATLiteral(2503))
-2503 -534 2502 0
534 2503 0
-2502 2503 0
c ((SATLiteral(8895) /\ SATLiteral(8896))=tv=SATLiteral(2504))
2504 -8895 -8896 0
8895 -2504 0
8896 -2504 0
c ((SATLiteral(465) -> SATLiteral(2504))=tv=SATLiteral(2505))
-2505 -465 2504 0
465 2505 0
-2504 2505 0
c ((SATLiteral(8897) /\ SATLiteral(8898))=tv=SATLiteral(2506))
2506 -8897 -8898 0
8897 -2506 0
8898 -2506 0
c ((SATLiteral(475) -> SATLiteral(2506))=tv=SATLiteral(2507))
-2507 -475 2506 0
475 2507 0
-2506 2507 0
c ((SATLiteral(8899) /\ SATLiteral(8900))=tv=SATLiteral(2508))
2508 -8899 -8900 0
8899 -2508 0
8900 -2508 0
c ((SATLiteral(485) -> SATLiteral(2508))=tv=SATLiteral(2509))
-2509 -485 2508 0
485 2509 0
-2508 2509 0
c ((SATLiteral(8901) /\ SATLiteral(8902))=tv=SATLiteral(2510))
2510 -8901 -8902 0
8901 -2510 0
8902 -2510 0
c ((SATLiteral(495) -> SATLiteral(2510))=tv=SATLiteral(2511))
-2511 -495 2510 0
495 2511 0
-2510 2511 0
c ((SATLiteral(8903) /\ SATLiteral(8904))=tv=SATLiteral(2512))
2512 -8903 -8904 0
8903 -2512 0
8904 -2512 0
c ((SATLiteral(505) -> SATLiteral(2512))=tv=SATLiteral(2513))
-2513 -505 2512 0
505 2513 0
-2512 2513 0
c ((SATLiteral(8905) /\ SATLiteral(8906))=tv=SATLiteral(2514))
2514 -8905 -8906 0
8905 -2514 0
8906 -2514 0
c ((SATLiteral(515) -> SATLiteral(2514))=tv=SATLiteral(2515))
-2515 -515 2514 0
515 2515 0
-2514 2515 0
c ((SATLiteral(8907) /\ SATLiteral(8908))=tv=SATLiteral(2516))
2516 -8907 -8908 0
8907 -2516 0
8908 -2516 0
c ((SATLiteral(525) -> SATLiteral(2516))=tv=SATLiteral(2517))
-2517 -525 2516 0
525 2517 0
-2516 2517 0
c ((SATLiteral(8909) /\ SATLiteral(8910))=tv=SATLiteral(2518))
2518 -8909 -8910 0
8909 -2518 0
8910 -2518 0
c ((SATLiteral(535) -> SATLiteral(2518))=tv=SATLiteral(2519))
-2519 -535 2518 0
535 2519 0
-2518 2519 0
c ((SATLiteral(8911) /\ SATLiteral(8912))=tv=SATLiteral(2520))
2520 -8911 -8912 0
8911 -2520 0
8912 -2520 0
c ((SATLiteral(466) -> SATLiteral(2520))=tv=SATLiteral(2521))
-2521 -466 2520 0
466 2521 0
-2520 2521 0
c ((SATLiteral(8913) /\ SATLiteral(8914))=tv=SATLiteral(2522))
2522 -8913 -8914 0
8913 -2522 0
8914 -2522 0
c ((SATLiteral(476) -> SATLiteral(2522))=tv=SATLiteral(2523))
-2523 -476 2522 0
476 2523 0
-2522 2523 0
c ((SATLiteral(8915) /\ SATLiteral(8916))=tv=SATLiteral(2524))
2524 -8915 -8916 0
8915 -2524 0
8916 -2524 0
c ((SATLiteral(486) -> SATLiteral(2524))=tv=SATLiteral(2525))
-2525 -486 2524 0
486 2525 0
-2524 2525 0
c ((SATLiteral(8917) /\ SATLiteral(8918))=tv=SATLiteral(2526))
2526 -8917 -8918 0
8917 -2526 0
8918 -2526 0
c ((SATLiteral(496) -> SATLiteral(2526))=tv=SATLiteral(2527))
-2527 -496 2526 0
496 2527 0
-2526 2527 0
c ((SATLiteral(8919) /\ SATLiteral(8920))=tv=SATLiteral(2528))
2528 -8919 -8920 0
8919 -2528 0
8920 -2528 0
c ((SATLiteral(506) -> SATLiteral(2528))=tv=SATLiteral(2529))
-2529 -506 2528 0
506 2529 0
-2528 2529 0
c ((SATLiteral(8921) /\ SATLiteral(8922))=tv=SATLiteral(2530))
2530 -8921 -8922 0
8921 -2530 0
8922 -2530 0
c ((SATLiteral(516) -> SATLiteral(2530))=tv=SATLiteral(2531))
-2531 -516 2530 0
516 2531 0
-2530 2531 0
c ((SATLiteral(8923) /\ SATLiteral(8924))=tv=SATLiteral(2532))
2532 -8923 -8924 0
8923 -2532 0
8924 -2532 0
c ((SATLiteral(526) -> SATLiteral(2532))=tv=SATLiteral(2533))
-2533 -526 2532 0
526 2533 0
-2532 2533 0
c ((SATLiteral(8925) /\ SATLiteral(8926))=tv=SATLiteral(2534))
2534 -8925 -8926 0
8925 -2534 0
8926 -2534 0
c ((SATLiteral(536) -> SATLiteral(2534))=tv=SATLiteral(2535))
-2535 -536 2534 0
536 2535 0
-2534 2535 0
c ((SATLiteral(8927) /\ SATLiteral(8928))=tv=SATLiteral(2536))
2536 -8927 -8928 0
8927 -2536 0
8928 -2536 0
c ((SATLiteral(467) -> SATLiteral(2536))=tv=SATLiteral(2537))
-2537 -467 2536 0
467 2537 0
-2536 2537 0
c ((SATLiteral(8929) /\ SATLiteral(8930))=tv=SATLiteral(2538))
2538 -8929 -8930 0
8929 -2538 0
8930 -2538 0
c ((SATLiteral(477) -> SATLiteral(2538))=tv=SATLiteral(2539))
-2539 -477 2538 0
477 2539 0
-2538 2539 0
c ((SATLiteral(8931) /\ SATLiteral(8932))=tv=SATLiteral(2540))
2540 -8931 -8932 0
8931 -2540 0
8932 -2540 0
c ((SATLiteral(487) -> SATLiteral(2540))=tv=SATLiteral(2541))
-2541 -487 2540 0
487 2541 0
-2540 2541 0
c ((SATLiteral(8933) /\ SATLiteral(8934))=tv=SATLiteral(2542))
2542 -8933 -8934 0
8933 -2542 0
8934 -2542 0
c ((SATLiteral(497) -> SATLiteral(2542))=tv=SATLiteral(2543))
-2543 -497 2542 0
497 2543 0
-2542 2543 0
c ((SATLiteral(8935) /\ SATLiteral(8936))=tv=SATLiteral(2544))
2544 -8935 -8936 0
8935 -2544 0
8936 -2544 0
c ((SATLiteral(507) -> SATLiteral(2544))=tv=SATLiteral(2545))
-2545 -507 2544 0
507 2545 0
-2544 2545 0
c ((SATLiteral(8937) /\ SATLiteral(8938))=tv=SATLiteral(2546))
2546 -8937 -8938 0
8937 -2546 0
8938 -2546 0
c ((SATLiteral(517) -> SATLiteral(2546))=tv=SATLiteral(2547))
-2547 -517 2546 0
517 2547 0
-2546 2547 0
c ((SATLiteral(8939) /\ SATLiteral(8940))=tv=SATLiteral(2548))
2548 -8939 -8940 0
8939 -2548 0
8940 -2548 0
c ((SATLiteral(527) -> SATLiteral(2548))=tv=SATLiteral(2549))
-2549 -527 2548 0
527 2549 0
-2548 2549 0
c ((SATLiteral(8941) /\ SATLiteral(8942))=tv=SATLiteral(2550))
2550 -8941 -8942 0
8941 -2550 0
8942 -2550 0
c ((SATLiteral(537) -> SATLiteral(2550))=tv=SATLiteral(2551))
-2551 -537 2550 0
537 2551 0
-2550 2551 0
c ((SATLiteral(8943) /\ SATLiteral(8944))=tv=SATLiteral(2552))
2552 -8943 -8944 0
8943 -2552 0
8944 -2552 0
c ((SATLiteral(468) -> SATLiteral(2552))=tv=SATLiteral(2553))
-2553 -468 2552 0
468 2553 0
-2552 2553 0
c ((SATLiteral(8945) /\ SATLiteral(8946))=tv=SATLiteral(2554))
2554 -8945 -8946 0
8945 -2554 0
8946 -2554 0
c ((SATLiteral(478) -> SATLiteral(2554))=tv=SATLiteral(2555))
-2555 -478 2554 0
478 2555 0
-2554 2555 0
c ((SATLiteral(8947) /\ SATLiteral(8948))=tv=SATLiteral(2556))
2556 -8947 -8948 0
8947 -2556 0
8948 -2556 0
c ((SATLiteral(488) -> SATLiteral(2556))=tv=SATLiteral(2557))
-2557 -488 2556 0
488 2557 0
-2556 2557 0
c ((SATLiteral(8949) /\ SATLiteral(8950))=tv=SATLiteral(2558))
2558 -8949 -8950 0
8949 -2558 0
8950 -2558 0
c ((SATLiteral(498) -> SATLiteral(2558))=tv=SATLiteral(2559))
-2559 -498 2558 0
498 2559 0
-2558 2559 0
c ((SATLiteral(8951) /\ SATLiteral(8952))=tv=SATLiteral(2560))
2560 -8951 -8952 0
8951 -2560 0
8952 -2560 0
c ((SATLiteral(508) -> SATLiteral(2560))=tv=SATLiteral(2561))
-2561 -508 2560 0
508 2561 0
-2560 2561 0
c ((SATLiteral(8953) /\ SATLiteral(8954))=tv=SATLiteral(2562))
2562 -8953 -8954 0
8953 -2562 0
8954 -2562 0
c ((SATLiteral(518) -> SATLiteral(2562))=tv=SATLiteral(2563))
-2563 -518 2562 0
518 2563 0
-2562 2563 0
c ((SATLiteral(8955) /\ SATLiteral(8956))=tv=SATLiteral(2564))
2564 -8955 -8956 0
8955 -2564 0
8956 -2564 0
c ((SATLiteral(528) -> SATLiteral(2564))=tv=SATLiteral(2565))
-2565 -528 2564 0
528 2565 0
-2564 2565 0
c ((SATLiteral(8957) /\ SATLiteral(8958))=tv=SATLiteral(2566))
2566 -8957 -8958 0
8957 -2566 0
8958 -2566 0
c ((SATLiteral(538) -> SATLiteral(2566))=tv=SATLiteral(2567))
-2567 -538 2566 0
538 2567 0
-2566 2567 0
c (SATLiteral(1973) -> SATLiteral(2166))
-1973 2166 0
c (SATLiteral(-2040) \/ SATLiteral(16))
-2040 16 0
c (SATLiteral(-2076) \/ SATLiteral(2167))
-2076 2167 0
c (SATLiteral(1969) -> SATLiteral(1453))
-1969 1453 0
c (SATLiteral(1970) -> SATLiteral(1584))
-1970 1584 0
c (SATLiteral(1971) -> SATLiteral(1711))
-1971 1711 0
c (SATLiteral(1972) -> SATLiteral(1834))
-1972 1834 0
c (SATLiteral(1961) -> SATLiteral(2168))
-1961 2168 0
c (SATLiteral(1962) -> SATLiteral(2169))
-1962 2169 0
c (SATLiteral(1963) -> SATLiteral(2170))
-1963 2170 0
c (SATLiteral(1964) -> SATLiteral(2171))
-1964 2171 0
c (SATLiteral(1965) -> SATLiteral(2172))
-1965 2172 0
c (SATLiteral(1966) -> SATLiteral(2173))
-1966 2173 0
c (SATLiteral(1967) -> SATLiteral(2174))
-1967 2174 0
c (SATLiteral(1968) -> SATLiteral(2175))
-1968 2175 0
c (SATLiteral(1953) -> SATLiteral(2176))
-1953 2176 0
c (SATLiteral(1954) -> SATLiteral(2177))
-1954 2177 0
c (SATLiteral(1955) -> SATLiteral(2178))
-1955 2178 0
c (SATLiteral(1956) -> SATLiteral(2179))
-1956 2179 0
c (SATLiteral(1957) -> SATLiteral(2180))
-1957 2180 0
c (SATLiteral(1958) -> SATLiteral(2181))
-1958 2181 0
c (SATLiteral(1959) -> SATLiteral(2182))
-1959 2182 0
c (SATLiteral(1960) -> SATLiteral(2183))
-1960 2183 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c (SATLiteral(-2)=SATLiteral(461))
-2 -461 0
2 461 0
461 2 0
-461 -2 0
c (SATLiteral(471)=SATLiteral(-58))
471 58 0
-471 -58 0
-58 -471 0
58 471 0
c (SATLiteral(-114)=SATLiteral(481))
-114 -481 0
114 481 0
481 114 0
-481 -114 0
c (SATLiteral(-170)=SATLiteral(491))
-170 -491 0
170 491 0
491 170 0
-491 -170 0
c (SATLiteral(-226)=SATLiteral(501))
-226 -501 0
226 501 0
501 226 0
-501 -226 0
c (SATLiteral(-282)=SATLiteral(511))
-282 -511 0
282 511 0
511 282 0
-511 -282 0
c (SATLiteral(521)=SATLiteral(-338))
521 338 0
-521 -338 0
-338 -521 0
338 521 0
c (SATLiteral(-394)=SATLiteral(531))
-394 -531 0
394 531 0
531 394 0
-531 -394 0
c (SATLiteral(-9)=SATLiteral(462))
-9 -462 0
9 462 0
462 9 0
-462 -9 0
c (SATLiteral(472)=SATLiteral(-65))
472 65 0
-472 -65 0
-65 -472 0
65 472 0
c (SATLiteral(-121)=SATLiteral(482))
-121 -482 0
121 482 0
482 121 0
-482 -121 0
c (SATLiteral(-177)=SATLiteral(492))
-177 -492 0
177 492 0
492 177 0
-492 -177 0
c (SATLiteral(-233)=SATLiteral(502))
-233 -502 0
233 502 0
502 233 0
-502 -233 0
c (SATLiteral(-289)=SATLiteral(512))
-289 -512 0
289 512 0
512 289 0
-512 -289 0
c (SATLiteral(522)=SATLiteral(-345))
522 345 0
-522 -345 0
-345 -522 0
345 522 0
c (SATLiteral(-401)=SATLiteral(532))
-401 -532 0
401 532 0
532 401 0
-532 -401 0
c (SATLiteral(-16)=SATLiteral(463))
-16 -463 0
16 463 0
463 16 0
-463 -16 0
c (SATLiteral(473)=SATLiteral(-72))
473 72 0
-473 -72 0
-72 -473 0
72 473 0
c (SATLiteral(-128)=SATLiteral(483))
-128 -483 0
128 483 0
483 128 0
-483 -128 0
c (SATLiteral(-184)=SATLiteral(493))
-184 -493 0
184 493 0
493 184 0
-493 -184 0
c (SATLiteral(-240)=SATLiteral(503))
-240 -503 0
240 503 0
503 240 0
-503 -240 0
c (SATLiteral(-296)=SATLiteral(513))
-296 -513 0
296 513 0
513 296 0
-513 -296 0
c (SATLiteral(523)=SATLiteral(-352))
523 352 0
-523 -352 0
-352 -523 0
352 523 0
c (SATLiteral(-408)=SATLiteral(533))
-408 -533 0
408 533 0
533 408 0
-533 -408 0
c (SATLiteral(-23)=SATLiteral(464))
-23 -464 0
23 464 0
464 23 0
-464 -23 0
c (SATLiteral(474)=SATLiteral(-79))
474 79 0
-474 -79 0
-79 -474 0
79 474 0
c (SATLiteral(-135)=SATLiteral(484))
-135 -484 0
135 484 0
484 135 0
-484 -135 0
c (SATLiteral(-191)=SATLiteral(494))
-191 -494 0
191 494 0
494 191 0
-494 -191 0
c (SATLiteral(-247)=SATLiteral(504))
-247 -504 0
247 504 0
504 247 0
-504 -247 0
c (SATLiteral(-303)=SATLiteral(514))
-303 -514 0
303 514 0
514 303 0
-514 -303 0
c (SATLiteral(524)=SATLiteral(-359))
524 359 0
-524 -359 0
-359 -524 0
359 524 0
c (SATLiteral(-415)=SATLiteral(534))
-415 -534 0
415 534 0
534 415 0
-534 -415 0
c (SATLiteral(-30)=SATLiteral(465))
-30 -465 0
30 465 0
465 30 0
-465 -30 0
c (SATLiteral(475)=SATLiteral(-86))
475 86 0
-475 -86 0
-86 -475 0
86 475 0
c (SATLiteral(-142)=SATLiteral(485))
-142 -485 0
142 485 0
485 142 0
-485 -142 0
c (SATLiteral(-198)=SATLiteral(495))
-198 -495 0
198 495 0
495 198 0
-495 -198 0
c (SATLiteral(-254)=SATLiteral(505))
-254 -505 0
254 505 0
505 254 0
-505 -254 0
c (SATLiteral(-310)=SATLiteral(515))
-310 -515 0
310 515 0
515 310 0
-515 -310 0
c (SATLiteral(525)=SATLiteral(-366))
525 366 0
-525 -366 0
-366 -525 0
366 525 0
c (SATLiteral(-422)=SATLiteral(535))
-422 -535 0
422 535 0
535 422 0
-535 -422 0
c (SATLiteral(-37)=SATLiteral(466))
-37 -466 0
37 466 0
466 37 0
-466 -37 0
c (SATLiteral(476)=SATLiteral(-93))
476 93 0
-476 -93 0
-93 -476 0
93 476 0
c (SATLiteral(-149)=SATLiteral(486))
-149 -486 0
149 486 0
486 149 0
-486 -149 0
c (SATLiteral(-205)=SATLiteral(496))
-205 -496 0
205 496 0
496 205 0
-496 -205 0
c (SATLiteral(-261)=SATLiteral(506))
-261 -506 0
261 506 0
506 261 0
-506 -261 0
c (SATLiteral(-317)=SATLiteral(516))
-317 -516 0
317 516 0
516 317 0
-516 -317 0
c (SATLiteral(526)=SATLiteral(-373))
526 373 0
-526 -373 0
-373 -526 0
373 526 0
c (SATLiteral(-429)=SATLiteral(536))
-429 -536 0
429 536 0
536 429 0
-536 -429 0
c (SATLiteral(-44)=SATLiteral(467))
-44 -467 0
44 467 0
467 44 0
-467 -44 0
c (SATLiteral(477)=SATLiteral(-100))
477 100 0
-477 -100 0
-100 -477 0
100 477 0
c (SATLiteral(-156)=SATLiteral(487))
-156 -487 0
156 487 0
487 156 0
-487 -156 0
c (SATLiteral(-212)=SATLiteral(497))
-212 -497 0
212 497 0
497 212 0
-497 -212 0
c (SATLiteral(-268)=SATLiteral(507))
-268 -507 0
268 507 0
507 268 0
-507 -268 0
c (SATLiteral(-324)=SATLiteral(517))
-324 -517 0
324 517 0
517 324 0
-517 -324 0
c (SATLiteral(527)=SATLiteral(-380))
527 380 0
-527 -380 0
-380 -527 0
380 527 0
c (SATLiteral(-436)=SATLiteral(537))
-436 -537 0
436 537 0
537 436 0
-537 -436 0
c (SATLiteral(-51)=SATLiteral(468))
-51 -468 0
51 468 0
468 51 0
-468 -51 0
c (SATLiteral(478)=SATLiteral(-107))
478 107 0
-478 -107 0
-107 -478 0
107 478 0
c (SATLiteral(-163)=SATLiteral(488))
-163 -488 0
163 488 0
488 163 0
-488 -163 0
c (SATLiteral(-219)=SATLiteral(498))
-219 -498 0
219 498 0
498 219 0
-498 -219 0
c (SATLiteral(-275)=SATLiteral(508))
-275 -508 0
275 508 0
508 275 0
-508 -275 0
c (SATLiteral(-331)=SATLiteral(518))
-331 -518 0
331 518 0
518 331 0
-518 -331 0
c (SATLiteral(528)=SATLiteral(-387))
528 387 0
-528 -387 0
-387 -528 0
387 528 0
c (SATLiteral(-443)=SATLiteral(538))
-443 -538 0
443 538 0
538 443 0
-538 -443 0
c (SATLiteral(1974) -> SATLiteral(2184))
-1974 2184 0
c (SATLiteral(1974) -> SATLiteral(2185))
-1974 2185 0
c (SATLiteral(1974) -> SATLiteral(2186))
-1974 2186 0
c (SATLiteral(1974) -> SATLiteral(2187))
-1974 2187 0
c (SATLiteral(1982) -> SATLiteral(2188))
-1982 2188 0
c (SATLiteral(1982) -> SATLiteral(2189))
-1982 2189 0
c (SATLiteral(1982) -> SATLiteral(2190))
-1982 2190 0
c (SATLiteral(1982) -> SATLiteral(2191))
-1982 2191 0
c (SATLiteral(1990) -> SATLiteral(2192))
-1990 2192 0
c (SATLiteral(1990) -> SATLiteral(2193))
-1990 2193 0
c (SATLiteral(1990) -> SATLiteral(2194))
-1990 2194 0
c (SATLiteral(1990) -> SATLiteral(2195))
-1990 2195 0
c (SATLiteral(1998) -> SATLiteral(2196))
-1998 2196 0
c (SATLiteral(1998) -> SATLiteral(2197))
-1998 2197 0
c (SATLiteral(1998) -> SATLiteral(2198))
-1998 2198 0
c (SATLiteral(1998) -> SATLiteral(2199))
-1998 2199 0
c (SATLiteral(2006) -> SATLiteral(2200))
-2006 2200 0
c (SATLiteral(2006) -> SATLiteral(2201))
-2006 2201 0
c (SATLiteral(2006) -> SATLiteral(2202))
-2006 2202 0
c (SATLiteral(2006) -> SATLiteral(2203))
-2006 2203 0
c (SATLiteral(2014) -> SATLiteral(2204))
-2014 2204 0
c (SATLiteral(2014) -> SATLiteral(2205))
-2014 2205 0
c (SATLiteral(2014) -> SATLiteral(2206))
-2014 2206 0
c (SATLiteral(2014) -> SATLiteral(2207))
-2014 2207 0
c (SATLiteral(2022) -> SATLiteral(2208))
-2022 2208 0
c (SATLiteral(2022) -> SATLiteral(2209))
-2022 2209 0
c (SATLiteral(2022) -> SATLiteral(2210))
-2022 2210 0
c (SATLiteral(2022) -> SATLiteral(2211))
-2022 2211 0
c (SATLiteral(2030) -> SATLiteral(2212))
-2030 2212 0
c (SATLiteral(2030) -> SATLiteral(2213))
-2030 2213 0
c (SATLiteral(2030) -> SATLiteral(2214))
-2030 2214 0
c (SATLiteral(2030) -> SATLiteral(2215))
-2030 2215 0
c (SATLiteral(1975) -> SATLiteral(2216))
-1975 2216 0
c (SATLiteral(1975) -> SATLiteral(2217))
-1975 2217 0
c (SATLiteral(1975) -> SATLiteral(2218))
-1975 2218 0
c (SATLiteral(1975) -> SATLiteral(2219))
-1975 2219 0
c (SATLiteral(1983) -> SATLiteral(2220))
-1983 2220 0
c (SATLiteral(1983) -> SATLiteral(2221))
-1983 2221 0
c (SATLiteral(1983) -> SATLiteral(2222))
-1983 2222 0
c (SATLiteral(1983) -> SATLiteral(2223))
-1983 2223 0
c (SATLiteral(1991) -> SATLiteral(2224))
-1991 2224 0
c (SATLiteral(1991) -> SATLiteral(2225))
-1991 2225 0
c (SATLiteral(1991) -> SATLiteral(2226))
-1991 2226 0
c (SATLiteral(1991) -> SATLiteral(2227))
-1991 2227 0
c (SATLiteral(1999) -> SATLiteral(2228))
-1999 2228 0
c (SATLiteral(1999) -> SATLiteral(2229))
-1999 2229 0
c (SATLiteral(1999) -> SATLiteral(2230))
-1999 2230 0
c (SATLiteral(1999) -> SATLiteral(2231))
-1999 2231 0
c (SATLiteral(2007) -> SATLiteral(2232))
-2007 2232 0
c (SATLiteral(2007) -> SATLiteral(2233))
-2007 2233 0
c (SATLiteral(2007) -> SATLiteral(2234))
-2007 2234 0
c (SATLiteral(2007) -> SATLiteral(2235))
-2007 2235 0
c (SATLiteral(2015) -> SATLiteral(2236))
-2015 2236 0
c (SATLiteral(2015) -> SATLiteral(2237))
-2015 2237 0
c (SATLiteral(2015) -> SATLiteral(2238))
-2015 2238 0
c (SATLiteral(2015) -> SATLiteral(2239))
-2015 2239 0
c (SATLiteral(2023) -> SATLiteral(2240))
-2023 2240 0
c (SATLiteral(2023) -> SATLiteral(2241))
-2023 2241 0
c (SATLiteral(2023) -> SATLiteral(2242))
-2023 2242 0
c (SATLiteral(2023) -> SATLiteral(2243))
-2023 2243 0
c (SATLiteral(2031) -> SATLiteral(2244))
-2031 2244 0
c (SATLiteral(2031) -> SATLiteral(2245))
-2031 2245 0
c (SATLiteral(2031) -> SATLiteral(2246))
-2031 2246 0
c (SATLiteral(2031) -> SATLiteral(2247))
-2031 2247 0
c (SATLiteral(1976) -> SATLiteral(2248))
-1976 2248 0
c (SATLiteral(1976) -> SATLiteral(2249))
-1976 2249 0
c (SATLiteral(1976) -> SATLiteral(2250))
-1976 2250 0
c (SATLiteral(1976) -> SATLiteral(2251))
-1976 2251 0
c (SATLiteral(1984) -> SATLiteral(2252))
-1984 2252 0
c (SATLiteral(1984) -> SATLiteral(2253))
-1984 2253 0
c (SATLiteral(1984) -> SATLiteral(2254))
-1984 2254 0
c (SATLiteral(1984) -> SATLiteral(2255))
-1984 2255 0
c (SATLiteral(1992) -> SATLiteral(2256))
-1992 2256 0
c (SATLiteral(1992) -> SATLiteral(2257))
-1992 2257 0
c (SATLiteral(1992) -> SATLiteral(2258))
-1992 2258 0
c (SATLiteral(1992) -> SATLiteral(2259))
-1992 2259 0
c (SATLiteral(2000) -> SATLiteral(2260))
-2000 2260 0
c (SATLiteral(2000) -> SATLiteral(2261))
-2000 2261 0
c (SATLiteral(2000) -> SATLiteral(2262))
-2000 2262 0
c (SATLiteral(2000) -> SATLiteral(2263))
-2000 2263 0
c (SATLiteral(2008) -> SATLiteral(2264))
-2008 2264 0
c (SATLiteral(2008) -> SATLiteral(2265))
-2008 2265 0
c (SATLiteral(2008) -> SATLiteral(2266))
-2008 2266 0
c (SATLiteral(2008) -> SATLiteral(2267))
-2008 2267 0
c (SATLiteral(2016) -> SATLiteral(2268))
-2016 2268 0
c (SATLiteral(2016) -> SATLiteral(2269))
-2016 2269 0
c (SATLiteral(2016) -> SATLiteral(2270))
-2016 2270 0
c (SATLiteral(2016) -> SATLiteral(2271))
-2016 2271 0
c (SATLiteral(2024) -> SATLiteral(2272))
-2024 2272 0
c (SATLiteral(2024) -> SATLiteral(2273))
-2024 2273 0
c (SATLiteral(2024) -> SATLiteral(2274))
-2024 2274 0
c (SATLiteral(2024) -> SATLiteral(2275))
-2024 2275 0
c (SATLiteral(2032) -> SATLiteral(2276))
-2032 2276 0
c (SATLiteral(2032) -> SATLiteral(2277))
-2032 2277 0
c (SATLiteral(2032) -> SATLiteral(2278))
-2032 2278 0
c (SATLiteral(2032) -> SATLiteral(2279))
-2032 2279 0
c (SATLiteral(1977) -> SATLiteral(2280))
-1977 2280 0
c (SATLiteral(1977) -> SATLiteral(2281))
-1977 2281 0
c (SATLiteral(1977) -> SATLiteral(2282))
-1977 2282 0
c (SATLiteral(1977) -> SATLiteral(2283))
-1977 2283 0
c (SATLiteral(1985) -> SATLiteral(2284))
-1985 2284 0
c (SATLiteral(1985) -> SATLiteral(2285))
-1985 2285 0
c (SATLiteral(1985) -> SATLiteral(2286))
-1985 2286 0
c (SATLiteral(1985) -> SATLiteral(2287))
-1985 2287 0
c (SATLiteral(1993) -> SATLiteral(2288))
-1993 2288 0
c (SATLiteral(1993) -> SATLiteral(2289))
-1993 2289 0
c (SATLiteral(1993) -> SATLiteral(2290))
-1993 2290 0
c (SATLiteral(1993) -> SATLiteral(2291))
-1993 2291 0
c (SATLiteral(2001) -> SATLiteral(2292))
-2001 2292 0
c (SATLiteral(2001) -> SATLiteral(2293))
-2001 2293 0
c (SATLiteral(2001) -> SATLiteral(2294))
-2001 2294 0
c (SATLiteral(2001) -> SATLiteral(2295))
-2001 2295 0
c (SATLiteral(2009) -> SATLiteral(2296))
-2009 2296 0
c (SATLiteral(2009) -> SATLiteral(2297))
-2009 2297 0
c (SATLiteral(2009) -> SATLiteral(2298))
-2009 2298 0
c (SATLiteral(2009) -> SATLiteral(2299))
-2009 2299 0
c (SATLiteral(2017) -> SATLiteral(2300))
-2017 2300 0
c (SATLiteral(2017) -> SATLiteral(2301))
-2017 2301 0
c (SATLiteral(2017) -> SATLiteral(2302))
-2017 2302 0
c (SATLiteral(2017) -> SATLiteral(2303))
-2017 2303 0
c (SATLiteral(2025) -> SATLiteral(2304))
-2025 2304 0
c (SATLiteral(2025) -> SATLiteral(2305))
-2025 2305 0
c (SATLiteral(2025) -> SATLiteral(2306))
-2025 2306 0
c (SATLiteral(2025) -> SATLiteral(2307))
-2025 2307 0
c (SATLiteral(2033) -> SATLiteral(2308))
-2033 2308 0
c (SATLiteral(2033) -> SATLiteral(2309))
-2033 2309 0
c (SATLiteral(2033) -> SATLiteral(2310))
-2033 2310 0
c (SATLiteral(2033) -> SATLiteral(2311))
-2033 2311 0
c (SATLiteral(1978) -> SATLiteral(2312))
-1978 2312 0
c (SATLiteral(1978) -> SATLiteral(2313))
-1978 2313 0
c (SATLiteral(1978) -> SATLiteral(2314))
-1978 2314 0
c (SATLiteral(1978) -> SATLiteral(2315))
-1978 2315 0
c (SATLiteral(1986) -> SATLiteral(2316))
-1986 2316 0
c (SATLiteral(1986) -> SATLiteral(2317))
-1986 2317 0
c (SATLiteral(1986) -> SATLiteral(2318))
-1986 2318 0
c (SATLiteral(1986) -> SATLiteral(2319))
-1986 2319 0
c (SATLiteral(1994) -> SATLiteral(2320))
-1994 2320 0
c (SATLiteral(1994) -> SATLiteral(2321))
-1994 2321 0
c (SATLiteral(1994) -> SATLiteral(2322))
-1994 2322 0
c (SATLiteral(1994) -> SATLiteral(2323))
-1994 2323 0
c (SATLiteral(2002) -> SATLiteral(2324))
-2002 2324 0
c (SATLiteral(2002) -> SATLiteral(2325))
-2002 2325 0
c (SATLiteral(2002) -> SATLiteral(2326))
-2002 2326 0
c (SATLiteral(2002) -> SATLiteral(2327))
-2002 2327 0
c (SATLiteral(2010) -> SATLiteral(2328))
-2010 2328 0
c (SATLiteral(2010) -> SATLiteral(2329))
-2010 2329 0
c (SATLiteral(2010) -> SATLiteral(2330))
-2010 2330 0
c (SATLiteral(2010) -> SATLiteral(2331))
-2010 2331 0
c (SATLiteral(2018) -> SATLiteral(2332))
-2018 2332 0
c (SATLiteral(2018) -> SATLiteral(2333))
-2018 2333 0
c (SATLiteral(2018) -> SATLiteral(2334))
-2018 2334 0
c (SATLiteral(2018) -> SATLiteral(2335))
-2018 2335 0
c (SATLiteral(2026) -> SATLiteral(2336))
-2026 2336 0
c (SATLiteral(2026) -> SATLiteral(2337))
-2026 2337 0
c (SATLiteral(2026) -> SATLiteral(2338))
-2026 2338 0
c (SATLiteral(2026) -> SATLiteral(2339))
-2026 2339 0
c (SATLiteral(2034) -> SATLiteral(2340))
-2034 2340 0
c (SATLiteral(2034) -> SATLiteral(2341))
-2034 2341 0
c (SATLiteral(2034) -> SATLiteral(2342))
-2034 2342 0
c (SATLiteral(2034) -> SATLiteral(2343))
-2034 2343 0
c (SATLiteral(1979) -> SATLiteral(2344))
-1979 2344 0
c (SATLiteral(1979) -> SATLiteral(2345))
-1979 2345 0
c (SATLiteral(1979) -> SATLiteral(2346))
-1979 2346 0
c (SATLiteral(1979) -> SATLiteral(2347))
-1979 2347 0
c (SATLiteral(1987) -> SATLiteral(2348))
-1987 2348 0
c (SATLiteral(1987) -> SATLiteral(2349))
-1987 2349 0
c (SATLiteral(1987) -> SATLiteral(2350))
-1987 2350 0
c (SATLiteral(1987) -> SATLiteral(2351))
-1987 2351 0
c (SATLiteral(1995) -> SATLiteral(2352))
-1995 2352 0
c (SATLiteral(1995) -> SATLiteral(2353))
-1995 2353 0
c (SATLiteral(1995) -> SATLiteral(2354))
-1995 2354 0
c (SATLiteral(1995) -> SATLiteral(2355))
-1995 2355 0
c (SATLiteral(2003) -> SATLiteral(2356))
-2003 2356 0
c (SATLiteral(2003) -> SATLiteral(2357))
-2003 2357 0
c (SATLiteral(2003) -> SATLiteral(2358))
-2003 2358 0
c (SATLiteral(2003) -> SATLiteral(2359))
-2003 2359 0
c (SATLiteral(2011) -> SATLiteral(2360))
-2011 2360 0
c (SATLiteral(2011) -> SATLiteral(2361))
-2011 2361 0
c (SATLiteral(2011) -> SATLiteral(2362))
-2011 2362 0
c (SATLiteral(2011) -> SATLiteral(2363))
-2011 2363 0
c (SATLiteral(2019) -> SATLiteral(2364))
-2019 2364 0
c (SATLiteral(2019) -> SATLiteral(2365))
-2019 2365 0
c (SATLiteral(2019) -> SATLiteral(2366))
-2019 2366 0
c (SATLiteral(2019) -> SATLiteral(2367))
-2019 2367 0
c (SATLiteral(2027) -> SATLiteral(2368))
-2027 2368 0
c (SATLiteral(2027) -> SATLiteral(2369))
-2027 2369 0
c (SATLiteral(2027) -> SATLiteral(2370))
-2027 2370 0
c (SATLiteral(2027) -> SATLiteral(2371))
-2027 2371 0
c (SATLiteral(2035) -> SATLiteral(2372))
-2035 2372 0
c (SATLiteral(2035) -> SATLiteral(2373))
-2035 2373 0
c (SATLiteral(2035) -> SATLiteral(2374))
-2035 2374 0
c (SATLiteral(2035) -> SATLiteral(2375))
-2035 2375 0
c (SATLiteral(1980) -> SATLiteral(2376))
-1980 2376 0
c (SATLiteral(1980) -> SATLiteral(2377))
-1980 2377 0
c (SATLiteral(1980) -> SATLiteral(2378))
-1980 2378 0
c (SATLiteral(1980) -> SATLiteral(2379))
-1980 2379 0
c (SATLiteral(1988) -> SATLiteral(2380))
-1988 2380 0
c (SATLiteral(1988) -> SATLiteral(2381))
-1988 2381 0
c (SATLiteral(1988) -> SATLiteral(2382))
-1988 2382 0
c (SATLiteral(1988) -> SATLiteral(2383))
-1988 2383 0
c (SATLiteral(1996) -> SATLiteral(2384))
-1996 2384 0
c (SATLiteral(1996) -> SATLiteral(2385))
-1996 2385 0
c (SATLiteral(1996) -> SATLiteral(2386))
-1996 2386 0
c (SATLiteral(1996) -> SATLiteral(2387))
-1996 2387 0
c (SATLiteral(2004) -> SATLiteral(2388))
-2004 2388 0
c (SATLiteral(2004) -> SATLiteral(2389))
-2004 2389 0
c (SATLiteral(2004) -> SATLiteral(2390))
-2004 2390 0
c (SATLiteral(2004) -> SATLiteral(2391))
-2004 2391 0
c (SATLiteral(2012) -> SATLiteral(2392))
-2012 2392 0
c (SATLiteral(2012) -> SATLiteral(2393))
-2012 2393 0
c (SATLiteral(2012) -> SATLiteral(2394))
-2012 2394 0
c (SATLiteral(2012) -> SATLiteral(2395))
-2012 2395 0
c (SATLiteral(2020) -> SATLiteral(2396))
-2020 2396 0
c (SATLiteral(2020) -> SATLiteral(2397))
-2020 2397 0
c (SATLiteral(2020) -> SATLiteral(2398))
-2020 2398 0
c (SATLiteral(2020) -> SATLiteral(2399))
-2020 2399 0
c (SATLiteral(2028) -> SATLiteral(2400))
-2028 2400 0
c (SATLiteral(2028) -> SATLiteral(2401))
-2028 2401 0
c (SATLiteral(2028) -> SATLiteral(2402))
-2028 2402 0
c (SATLiteral(2028) -> SATLiteral(2403))
-2028 2403 0
c (SATLiteral(2036) -> SATLiteral(2404))
-2036 2404 0
c (SATLiteral(2036) -> SATLiteral(2405))
-2036 2405 0
c (SATLiteral(2036) -> SATLiteral(2406))
-2036 2406 0
c (SATLiteral(2036) -> SATLiteral(2407))
-2036 2407 0
c (SATLiteral(1981) -> SATLiteral(2408))
-1981 2408 0
c (SATLiteral(1981) -> SATLiteral(2409))
-1981 2409 0
c (SATLiteral(1981) -> SATLiteral(2410))
-1981 2410 0
c (SATLiteral(1981) -> SATLiteral(2411))
-1981 2411 0
c (SATLiteral(1989) -> SATLiteral(2412))
-1989 2412 0
c (SATLiteral(1989) -> SATLiteral(2413))
-1989 2413 0
c (SATLiteral(1989) -> SATLiteral(2414))
-1989 2414 0
c (SATLiteral(1989) -> SATLiteral(2415))
-1989 2415 0
c (SATLiteral(1997) -> SATLiteral(2416))
-1997 2416 0
c (SATLiteral(1997) -> SATLiteral(2417))
-1997 2417 0
c (SATLiteral(1997) -> SATLiteral(2418))
-1997 2418 0
c (SATLiteral(1997) -> SATLiteral(2419))
-1997 2419 0
c (SATLiteral(2005) -> SATLiteral(2420))
-2005 2420 0
c (SATLiteral(2005) -> SATLiteral(2421))
-2005 2421 0
c (SATLiteral(2005) -> SATLiteral(2422))
-2005 2422 0
c (SATLiteral(2005) -> SATLiteral(2423))
-2005 2423 0
c (SATLiteral(2013) -> SATLiteral(2424))
-2013 2424 0
c (SATLiteral(2013) -> SATLiteral(2425))
-2013 2425 0
c (SATLiteral(2013) -> SATLiteral(2426))
-2013 2426 0
c (SATLiteral(2013) -> SATLiteral(2427))
-2013 2427 0
c (SATLiteral(2021) -> SATLiteral(2428))
-2021 2428 0
c (SATLiteral(2021) -> SATLiteral(2429))
-2021 2429 0
c (SATLiteral(2021) -> SATLiteral(2430))
-2021 2430 0
c (SATLiteral(2021) -> SATLiteral(2431))
-2021 2431 0
c (SATLiteral(2029) -> SATLiteral(2432))
-2029 2432 0
c (SATLiteral(2029) -> SATLiteral(2433))
-2029 2433 0
c (SATLiteral(2029) -> SATLiteral(2434))
-2029 2434 0
c (SATLiteral(2029) -> SATLiteral(2435))
-2029 2435 0
c (SATLiteral(2037) -> SATLiteral(2436))
-2037 2436 0
c (SATLiteral(2037) -> SATLiteral(2437))
-2037 2437 0
c (SATLiteral(2037) -> SATLiteral(2438))
-2037 2438 0
c (SATLiteral(2037) -> SATLiteral(2439))
-2037 2439 0
c ((SATLiteral(461) /\ SATLiteral(462))=tv=SATLiteral(550))
550 -461 -462 0
461 -550 0
462 -550 0
c ((SATLiteral(471) /\ SATLiteral(472))=tv=SATLiteral(574))
574 -471 -472 0
471 -574 0
472 -574 0
c ((SATLiteral(481) /\ SATLiteral(482))=tv=SATLiteral(598))
598 -481 -482 0
481 -598 0
482 -598 0
c ((SATLiteral(491) /\ SATLiteral(492))=tv=SATLiteral(622))
622 -491 -492 0
491 -622 0
492 -622 0
c ((SATLiteral(501) /\ SATLiteral(502))=tv=SATLiteral(646))
646 -501 -502 0
501 -646 0
502 -646 0
c ((SATLiteral(511) /\ SATLiteral(512))=tv=SATLiteral(670))
670 -511 -512 0
511 -670 0
512 -670 0
c ((SATLiteral(521) /\ SATLiteral(522))=tv=SATLiteral(694))
694 -521 -522 0
521 -694 0
522 -694 0
c ((SATLiteral(531) /\ SATLiteral(532))=tv=SATLiteral(718))
718 -531 -532 0
531 -718 0
532 -718 0
c ((SATLiteral(462) /\ SATLiteral(463))=tv=SATLiteral(553))
553 -462 -463 0
462 -553 0
463 -553 0
c ((SATLiteral(472) /\ SATLiteral(473))=tv=SATLiteral(577))
577 -472 -473 0
472 -577 0
473 -577 0
c ((SATLiteral(482) /\ SATLiteral(483))=tv=SATLiteral(601))
601 -482 -483 0
482 -601 0
483 -601 0
c ((SATLiteral(492) /\ SATLiteral(493))=tv=SATLiteral(625))
625 -492 -493 0
492 -625 0
493 -625 0
c ((SATLiteral(502) /\ SATLiteral(503))=tv=SATLiteral(649))
649 -502 -503 0
502 -649 0
503 -649 0
c ((SATLiteral(512) /\ SATLiteral(513))=tv=SATLiteral(673))
673 -512 -513 0
512 -673 0
513 -673 0
c ((SATLiteral(522) /\ SATLiteral(523))=tv=SATLiteral(697))
697 -522 -523 0
522 -697 0
523 -697 0
c ((SATLiteral(532) /\ SATLiteral(533))=tv=SATLiteral(721))
721 -532 -533 0
532 -721 0
533 -721 0
c ((SATLiteral(463) /\ SATLiteral(464))=tv=SATLiteral(556))
556 -463 -464 0
463 -556 0
464 -556 0
c ((SATLiteral(473) /\ SATLiteral(474))=tv=SATLiteral(580))
580 -473 -474 0
473 -580 0
474 -580 0
c ((SATLiteral(483) /\ SATLiteral(484))=tv=SATLiteral(604))
604 -483 -484 0
483 -604 0
484 -604 0
c ((SATLiteral(493) /\ SATLiteral(494))=tv=SATLiteral(628))
628 -493 -494 0
493 -628 0
494 -628 0
c ((SATLiteral(503) /\ SATLiteral(504))=tv=SATLiteral(652))
652 -503 -504 0
503 -652 0
504 -652 0
c ((SATLiteral(513) /\ SATLiteral(514))=tv=SATLiteral(676))
676 -513 -514 0
513 -676 0
514 -676 0
c ((SATLiteral(523) /\ SATLiteral(524))=tv=SATLiteral(700))
700 -523 -524 0
523 -700 0
524 -700 0
c ((SATLiteral(533) /\ SATLiteral(534))=tv=SATLiteral(724))
724 -533 -534 0
533 -724 0
534 -724 0
c ((SATLiteral(464) /\ SATLiteral(465))=tv=SATLiteral(559))
559 -464 -465 0
464 -559 0
465 -559 0
c ((SATLiteral(474) /\ SATLiteral(475))=tv=SATLiteral(583))
583 -474 -475 0
474 -583 0
475 -583 0
c ((SATLiteral(484) /\ SATLiteral(485))=tv=SATLiteral(607))
607 -484 -485 0
484 -607 0
485 -607 0
c ((SATLiteral(494) /\ SATLiteral(495))=tv=SATLiteral(631))
631 -494 -495 0
494 -631 0
495 -631 0
c ((SATLiteral(504) /\ SATLiteral(505))=tv=SATLiteral(655))
655 -504 -505 0
504 -655 0
505 -655 0
c ((SATLiteral(514) /\ SATLiteral(515))=tv=SATLiteral(679))
679 -514 -515 0
514 -679 0
515 -679 0
c ((SATLiteral(524) /\ SATLiteral(525))=tv=SATLiteral(703))
703 -524 -525 0
524 -703 0
525 -703 0
c ((SATLiteral(534) /\ SATLiteral(535))=tv=SATLiteral(727))
727 -534 -535 0
534 -727 0
535 -727 0
c ((SATLiteral(465) /\ SATLiteral(466))=tv=SATLiteral(562))
562 -465 -466 0
465 -562 0
466 -562 0
c ((SATLiteral(475) /\ SATLiteral(476))=tv=SATLiteral(586))
586 -475 -476 0
475 -586 0
476 -586 0
c ((SATLiteral(485) /\ SATLiteral(486))=tv=SATLiteral(610))
610 -485 -486 0
485 -610 0
486 -610 0
c ((SATLiteral(495) /\ SATLiteral(496))=tv=SATLiteral(634))
634 -495 -496 0
495 -634 0
496 -634 0
c ((SATLiteral(505) /\ SATLiteral(506))=tv=SATLiteral(658))
658 -505 -506 0
505 -658 0
506 -658 0
c ((SATLiteral(515) /\ SATLiteral(516))=tv=SATLiteral(682))
682 -515 -516 0
515 -682 0
516 -682 0
c ((SATLiteral(525) /\ SATLiteral(526))=tv=SATLiteral(706))
706 -525 -526 0
525 -706 0
526 -706 0
c ((SATLiteral(535) /\ SATLiteral(536))=tv=SATLiteral(730))
730 -535 -536 0
535 -730 0
536 -730 0
c ((SATLiteral(466) /\ SATLiteral(467))=tv=SATLiteral(565))
565 -466 -467 0
466 -565 0
467 -565 0
c ((SATLiteral(476) /\ SATLiteral(477))=tv=SATLiteral(589))
589 -476 -477 0
476 -589 0
477 -589 0
c ((SATLiteral(486) /\ SATLiteral(487))=tv=SATLiteral(613))
613 -486 -487 0
486 -613 0
487 -613 0
c ((SATLiteral(496) /\ SATLiteral(497))=tv=SATLiteral(637))
637 -496 -497 0
496 -637 0
497 -637 0
c ((SATLiteral(506) /\ SATLiteral(507))=tv=SATLiteral(661))
661 -506 -507 0
506 -661 0
507 -661 0
c ((SATLiteral(516) /\ SATLiteral(517))=tv=SATLiteral(685))
685 -516 -517 0
516 -685 0
517 -685 0
c ((SATLiteral(526) /\ SATLiteral(527))=tv=SATLiteral(709))
709 -526 -527 0
526 -709 0
527 -709 0
c ((SATLiteral(536) /\ SATLiteral(537))=tv=SATLiteral(733))
733 -536 -537 0
536 -733 0
537 -733 0
c ((SATLiteral(467) /\ SATLiteral(468))=tv=SATLiteral(568))
568 -467 -468 0
467 -568 0
468 -568 0
c ((SATLiteral(477) /\ SATLiteral(478))=tv=SATLiteral(592))
592 -477 -478 0
477 -592 0
478 -592 0
c ((SATLiteral(487) /\ SATLiteral(488))=tv=SATLiteral(616))
616 -487 -488 0
487 -616 0
488 -616 0
c ((SATLiteral(497) /\ SATLiteral(498))=tv=SATLiteral(640))
640 -497 -498 0
497 -640 0
498 -640 0
c ((SATLiteral(507) /\ SATLiteral(508))=tv=SATLiteral(664))
664 -507 -508 0
507 -664 0
508 -664 0
c ((SATLiteral(517) /\ SATLiteral(518))=tv=SATLiteral(688))
688 -517 -518 0
517 -688 0
518 -688 0
c ((SATLiteral(527) /\ SATLiteral(528))=tv=SATLiteral(712))
712 -527 -528 0
527 -712 0
528 -712 0
c ((SATLiteral(537) /\ SATLiteral(538))=tv=SATLiteral(736))
736 -537 -538 0
537 -736 0
538 -736 0
c ((SATLiteral(468) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -468 1 0
468 1 0
-1 1 0
c ((SATLiteral(478) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -478 1 0
478 1 0
-1 1 0
c ((SATLiteral(488) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -488 1 0
488 1 0
-1 1 0
c ((SATLiteral(498) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -498 1 0
498 1 0
-1 1 0
c ((SATLiteral(508) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -508 1 0
508 1 0
-1 1 0
c ((SATLiteral(518) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -518 1 0
518 1 0
-1 1 0
c ((SATLiteral(528) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -528 1 0
528 1 0
-1 1 0
c ((SATLiteral(538) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -538 1 0
538 1 0
-1 1 0
c ((SATLiteral(550) /\ SATLiteral(463))=tv=SATLiteral(551))
551 -550 -463 0
550 -551 0
463 -551 0
c ((SATLiteral(551) /\ SATLiteral(464))=tv=SATLiteral(552))
552 -551 -464 0
551 -552 0
464 -552 0
c ((SATLiteral(473) /\ SATLiteral(574))=tv=SATLiteral(575))
575 -473 -574 0
473 -575 0
574 -575 0
c ((SATLiteral(474) /\ SATLiteral(575))=tv=SATLiteral(576))
576 -474 -575 0
474 -576 0
575 -576 0
c ((SATLiteral(598) /\ SATLiteral(483))=tv=SATLiteral(599))
599 -598 -483 0
598 -599 0
483 -599 0
c ((SATLiteral(599) /\ SATLiteral(484))=tv=SATLiteral(600))
600 -599 -484 0
599 -600 0
484 -600 0
c ((SATLiteral(622) /\ SATLiteral(493))=tv=SATLiteral(623))
623 -622 -493 0
622 -623 0
493 -623 0
c ((SATLiteral(623) /\ SATLiteral(494))=tv=SATLiteral(624))
624 -623 -494 0
623 -624 0
494 -624 0
c ((SATLiteral(646) /\ SATLiteral(503))=tv=SATLiteral(647))
647 -646 -503 0
646 -647 0
503 -647 0
c ((SATLiteral(647) /\ SATLiteral(504))=tv=SATLiteral(648))
648 -647 -504 0
647 -648 0
504 -648 0
c ((SATLiteral(513) /\ SATLiteral(670))=tv=SATLiteral(671))
671 -513 -670 0
513 -671 0
670 -671 0
c ((SATLiteral(514) /\ SATLiteral(671))=tv=SATLiteral(672))
672 -514 -671 0
514 -672 0
671 -672 0
c ((SATLiteral(523) /\ SATLiteral(694))=tv=SATLiteral(695))
695 -523 -694 0
523 -695 0
694 -695 0
c ((SATLiteral(524) /\ SATLiteral(695))=tv=SATLiteral(696))
696 -524 -695 0
524 -696 0
695 -696 0
c ((SATLiteral(533) /\ SATLiteral(718))=tv=SATLiteral(719))
719 -533 -718 0
533 -719 0
718 -719 0
c ((SATLiteral(534) /\ SATLiteral(719))=tv=SATLiteral(720))
720 -534 -719 0
534 -720 0
719 -720 0
c ((SATLiteral(553) /\ SATLiteral(464))=tv=SATLiteral(554))
554 -553 -464 0
553 -554 0
464 -554 0
c ((SATLiteral(554) /\ SATLiteral(465))=tv=SATLiteral(555))
555 -554 -465 0
554 -555 0
465 -555 0
c ((SATLiteral(474) /\ SATLiteral(577))=tv=SATLiteral(578))
578 -474 -577 0
474 -578 0
577 -578 0
c ((SATLiteral(475) /\ SATLiteral(578))=tv=SATLiteral(579))
579 -475 -578 0
475 -579 0
578 -579 0
c ((SATLiteral(484) /\ SATLiteral(601))=tv=SATLiteral(602))
602 -484 -601 0
484 -602 0
601 -602 0
c ((SATLiteral(485) /\ SATLiteral(602))=tv=SATLiteral(603))
603 -485 -602 0
485 -603 0
602 -603 0
c ((SATLiteral(625) /\ SATLiteral(494))=tv=SATLiteral(626))
626 -625 -494 0
625 -626 0
494 -626 0
c ((SATLiteral(626) /\ SATLiteral(495))=tv=SATLiteral(627))
627 -626 -495 0
626 -627 0
495 -627 0
c ((SATLiteral(649) /\ SATLiteral(504))=tv=SATLiteral(650))
650 -649 -504 0
649 -650 0
504 -650 0
c ((SATLiteral(650) /\ SATLiteral(505))=tv=SATLiteral(651))
651 -650 -505 0
650 -651 0
505 -651 0
c ((SATLiteral(673) /\ SATLiteral(514))=tv=SATLiteral(674))
674 -673 -514 0
673 -674 0
514 -674 0
c ((SATLiteral(674) /\ SATLiteral(515))=tv=SATLiteral(675))
675 -674 -515 0
674 -675 0
515 -675 0
c ((SATLiteral(697) /\ SATLiteral(524))=tv=SATLiteral(698))
698 -697 -524 0
697 -698 0
524 -698 0
c ((SATLiteral(698) /\ SATLiteral(525))=tv=SATLiteral(699))
699 -698 -525 0
698 -699 0
525 -699 0
c ((SATLiteral(721) /\ SATLiteral(534))=tv=SATLiteral(722))
722 -721 -534 0
721 -722 0
534 -722 0
c ((SATLiteral(722) /\ SATLiteral(535))=tv=SATLiteral(723))
723 -722 -535 0
722 -723 0
535 -723 0
c ((SATLiteral(556) /\ SATLiteral(465))=tv=SATLiteral(557))
557 -556 -465 0
556 -557 0
465 -557 0
c ((SATLiteral(557) /\ SATLiteral(466))=tv=SATLiteral(558))
558 -557 -466 0
557 -558 0
466 -558 0
c ((SATLiteral(475) /\ SATLiteral(580))=tv=SATLiteral(581))
581 -475 -580 0
475 -581 0
580 -581 0
c ((SATLiteral(476) /\ SATLiteral(581))=tv=SATLiteral(582))
582 -476 -581 0
476 -582 0
581 -582 0
c ((SATLiteral(485) /\ SATLiteral(604))=tv=SATLiteral(605))
605 -485 -604 0
485 -605 0
604 -605 0
c ((SATLiteral(486) /\ SATLiteral(605))=tv=SATLiteral(606))
606 -486 -605 0
486 -606 0
605 -606 0
c ((SATLiteral(628) /\ SATLiteral(495))=tv=SATLiteral(629))
629 -628 -495 0
628 -629 0
495 -629 0
c ((SATLiteral(629) /\ SATLiteral(496))=tv=SATLiteral(630))
630 -629 -496 0
629 -630 0
496 -630 0
c ((SATLiteral(652) /\ SATLiteral(505))=tv=SATLiteral(653))
653 -652 -505 0
652 -653 0
505 -653 0
c ((SATLiteral(653) /\ SATLiteral(506))=tv=SATLiteral(654))
654 -653 -506 0
653 -654 0
506 -654 0
c ((SATLiteral(676) /\ SATLiteral(515))=tv=SATLiteral(677))
677 -676 -515 0
676 -677 0
515 -677 0
c ((SATLiteral(677) /\ SATLiteral(516))=tv=SATLiteral(678))
678 -677 -516 0
677 -678 0
516 -678 0
c ((SATLiteral(525) /\ SATLiteral(700))=tv=SATLiteral(701))
701 -525 -700 0
525 -701 0
700 -701 0
c ((SATLiteral(526) /\ SATLiteral(701))=tv=SATLiteral(702))
702 -526 -701 0
526 -702 0
701 -702 0
c ((SATLiteral(724) /\ SATLiteral(535))=tv=SATLiteral(725))
725 -724 -535 0
724 -725 0
535 -725 0
c ((SATLiteral(725) /\ SATLiteral(536))=tv=SATLiteral(726))
726 -725 -536 0
725 -726 0
536 -726 0
c ((SATLiteral(466) /\ SATLiteral(559))=tv=SATLiteral(560))
560 -466 -559 0
466 -560 0
559 -560 0
c ((SATLiteral(467) /\ SATLiteral(560))=tv=SATLiteral(561))
561 -467 -560 0
467 -561 0
560 -561 0
c ((SATLiteral(476) /\ SATLiteral(583))=tv=SATLiteral(584))
584 -476 -583 0
476 -584 0
583 -584 0
c ((SATLiteral(477) /\ SATLiteral(584))=tv=SATLiteral(585))
585 -477 -584 0
477 -585 0
584 -585 0
c ((SATLiteral(486) /\ SATLiteral(607))=tv=SATLiteral(608))
608 -486 -607 0
486 -608 0
607 -608 0
c ((SATLiteral(487) /\ SATLiteral(608))=tv=SATLiteral(609))
609 -487 -608 0
487 -609 0
608 -609 0
c ((SATLiteral(496) /\ SATLiteral(631))=tv=SATLiteral(632))
632 -496 -631 0
496 -632 0
631 -632 0
c ((SATLiteral(497) /\ SATLiteral(632))=tv=SATLiteral(633))
633 -497 -632 0
497 -633 0
632 -633 0
c ((SATLiteral(655) /\ SATLiteral(506))=tv=SATLiteral(656))
656 -655 -506 0
655 -656 0
506 -656 0
c ((SATLiteral(656) /\ SATLiteral(507))=tv=SATLiteral(657))
657 -656 -507 0
656 -657 0
507 -657 0
c ((SATLiteral(679) /\ SATLiteral(516))=tv=SATLiteral(680))
680 -679 -516 0
679 -680 0
516 -680 0
c ((SATLiteral(680) /\ SATLiteral(517))=tv=SATLiteral(681))
681 -680 -517 0
680 -681 0
517 -681 0
c ((SATLiteral(526) /\ SATLiteral(703))=tv=SATLiteral(704))
704 -526 -703 0
526 -704 0
703 -704 0
c ((SATLiteral(527) /\ SATLiteral(704))=tv=SATLiteral(705))
705 -527 -704 0
527 -705 0
704 -705 0
c ((SATLiteral(536) /\ SATLiteral(727))=tv=SATLiteral(728))
728 -536 -727 0
536 -728 0
727 -728 0
c ((SATLiteral(537) /\ SATLiteral(728))=tv=SATLiteral(729))
729 -537 -728 0
537 -729 0
728 -729 0
c ((SATLiteral(562) /\ SATLiteral(467))=tv=SATLiteral(563))
563 -562 -467 0
562 -563 0
467 -563 0
c ((SATLiteral(563) /\ SATLiteral(468))=tv=SATLiteral(564))
564 -563 -468 0
563 -564 0
468 -564 0
c ((SATLiteral(586) /\ SATLiteral(477))=tv=SATLiteral(587))
587 -586 -477 0
586 -587 0
477 -587 0
c ((SATLiteral(587) /\ SATLiteral(478))=tv=SATLiteral(588))
588 -587 -478 0
587 -588 0
478 -588 0
c ((SATLiteral(487) /\ SATLiteral(610))=tv=SATLiteral(611))
611 -487 -610 0
487 -611 0
610 -611 0
c ((SATLiteral(488) /\ SATLiteral(611))=tv=SATLiteral(612))
612 -488 -611 0
488 -612 0
611 -612 0
c ((SATLiteral(497) /\ SATLiteral(634))=tv=SATLiteral(635))
635 -497 -634 0
497 -635 0
634 -635 0
c ((SATLiteral(498) /\ SATLiteral(635))=tv=SATLiteral(636))
636 -498 -635 0
498 -636 0
635 -636 0
c ((SATLiteral(507) /\ SATLiteral(658))=tv=SATLiteral(659))
659 -507 -658 0
507 -659 0
658 -659 0
c ((SATLiteral(508) /\ SATLiteral(659))=tv=SATLiteral(660))
660 -508 -659 0
508 -660 0
659 -660 0
c ((SATLiteral(682) /\ SATLiteral(517))=tv=SATLiteral(683))
683 -682 -517 0
682 -683 0
517 -683 0
c ((SATLiteral(683) /\ SATLiteral(518))=tv=SATLiteral(684))
684 -683 -518 0
683 -684 0
518 -684 0
c ((SATLiteral(527) /\ SATLiteral(706))=tv=SATLiteral(707))
707 -527 -706 0
527 -707 0
706 -707 0
c ((SATLiteral(528) /\ SATLiteral(707))=tv=SATLiteral(708))
708 -528 -707 0
528 -708 0
707 -708 0
c ((SATLiteral(537) /\ SATLiteral(730))=tv=SATLiteral(731))
731 -537 -730 0
537 -731 0
730 -731 0
c ((SATLiteral(538) /\ SATLiteral(731))=tv=SATLiteral(732))
732 -538 -731 0
538 -732 0
731 -732 0
c ((SATLiteral(565) /\ SATLiteral(468))=tv=SATLiteral(566))
566 -565 -468 0
565 -566 0
468 -566 0
c ((SATLiteral(478) /\ SATLiteral(589))=tv=SATLiteral(590))
590 -478 -589 0
478 -590 0
589 -590 0
c ((SATLiteral(613) /\ SATLiteral(488))=tv=SATLiteral(614))
614 -613 -488 0
613 -614 0
488 -614 0
c ((SATLiteral(637) /\ SATLiteral(498))=tv=SATLiteral(638))
638 -637 -498 0
637 -638 0
498 -638 0
c ((SATLiteral(661) /\ SATLiteral(508))=tv=SATLiteral(662))
662 -661 -508 0
661 -662 0
508 -662 0
c ((SATLiteral(518) /\ SATLiteral(685))=tv=SATLiteral(686))
686 -518 -685 0
518 -686 0
685 -686 0
c ((SATLiteral(528) /\ SATLiteral(709))=tv=SATLiteral(710))
710 -528 -709 0
528 -710 0
709 -710 0
c ((SATLiteral(538) /\ SATLiteral(733))=tv=SATLiteral(734))
734 -538 -733 0
538 -734 0
733 -734 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c ((SATLiteral(-1) /\ SATLiteral(461))=tv=SATLiteral(-1))
-1 1 -461 0
-1 1 0
461 1 0
c ((SATLiteral(-1) /\ SATLiteral(471))=tv=SATLiteral(-1))
-1 1 -471 0
-1 1 0
471 1 0
c ((SATLiteral(-1) /\ SATLiteral(481))=tv=SATLiteral(-1))
-1 1 -481 0
-1 1 0
481 1 0
c ((SATLiteral(-1) /\ SATLiteral(491))=tv=SATLiteral(-1))
-1 1 -491 0
-1 1 0
491 1 0
c ((SATLiteral(-1) /\ SATLiteral(501))=tv=SATLiteral(-1))
-1 1 -501 0
-1 1 0
501 1 0
c ((SATLiteral(-1) /\ SATLiteral(511))=tv=SATLiteral(-1))
-1 1 -511 0
-1 1 0
511 1 0
c ((SATLiteral(-1) /\ SATLiteral(521))=tv=SATLiteral(-1))
-1 1 -521 0
-1 1 0
521 1 0
c ((SATLiteral(-1) /\ SATLiteral(531))=tv=SATLiteral(-1))
-1 1 -531 0
-1 1 0
531 1 0
c ((SATLiteral(461) /\ SATLiteral(462))=tv=SATLiteral(937))
937 -461 -462 0
461 -937 0
462 -937 0
c ((SATLiteral(471) /\ SATLiteral(472))=tv=SATLiteral(961))
961 -471 -472 0
471 -961 0
472 -961 0
c ((SATLiteral(481) /\ SATLiteral(482))=tv=SATLiteral(985))
985 -481 -482 0
481 -985 0
482 -985 0
c ((SATLiteral(491) /\ SATLiteral(492))=tv=SATLiteral(1009))
1009 -491 -492 0
491 -1009 0
492 -1009 0
c ((SATLiteral(501) /\ SATLiteral(502))=tv=SATLiteral(1033))
1033 -501 -502 0
501 -1033 0
502 -1033 0
c ((SATLiteral(511) /\ SATLiteral(512))=tv=SATLiteral(1057))
1057 -511 -512 0
511 -1057 0
512 -1057 0
c ((SATLiteral(521) /\ SATLiteral(522))=tv=SATLiteral(1081))
1081 -521 -522 0
521 -1081 0
522 -1081 0
c ((SATLiteral(531) /\ SATLiteral(532))=tv=SATLiteral(1105))
1105 -531 -532 0
531 -1105 0
532 -1105 0
c ((SATLiteral(462) /\ SATLiteral(463))=tv=SATLiteral(940))
940 -462 -463 0
462 -940 0
463 -940 0
c ((SATLiteral(472) /\ SATLiteral(473))=tv=SATLiteral(964))
964 -472 -473 0
472 -964 0
473 -964 0
c ((SATLiteral(482) /\ SATLiteral(483))=tv=SATLiteral(988))
988 -482 -483 0
482 -988 0
483 -988 0
c ((SATLiteral(492) /\ SATLiteral(493))=tv=SATLiteral(1012))
1012 -492 -493 0
492 -1012 0
493 -1012 0
c ((SATLiteral(502) /\ SATLiteral(503))=tv=SATLiteral(1036))
1036 -502 -503 0
502 -1036 0
503 -1036 0
c ((SATLiteral(512) /\ SATLiteral(513))=tv=SATLiteral(1060))
1060 -512 -513 0
512 -1060 0
513 -1060 0
c ((SATLiteral(522) /\ SATLiteral(523))=tv=SATLiteral(1084))
1084 -522 -523 0
522 -1084 0
523 -1084 0
c ((SATLiteral(532) /\ SATLiteral(533))=tv=SATLiteral(1108))
1108 -532 -533 0
532 -1108 0
533 -1108 0
c ((SATLiteral(463) /\ SATLiteral(464))=tv=SATLiteral(943))
943 -463 -464 0
463 -943 0
464 -943 0
c ((SATLiteral(473) /\ SATLiteral(474))=tv=SATLiteral(967))
967 -473 -474 0
473 -967 0
474 -967 0
c ((SATLiteral(483) /\ SATLiteral(484))=tv=SATLiteral(991))
991 -483 -484 0
483 -991 0
484 -991 0
c ((SATLiteral(493) /\ SATLiteral(494))=tv=SATLiteral(1015))
1015 -493 -494 0
493 -1015 0
494 -1015 0
c ((SATLiteral(503) /\ SATLiteral(504))=tv=SATLiteral(1039))
1039 -503 -504 0
503 -1039 0
504 -1039 0
c ((SATLiteral(513) /\ SATLiteral(514))=tv=SATLiteral(1063))
1063 -513 -514 0
513 -1063 0
514 -1063 0
c ((SATLiteral(523) /\ SATLiteral(524))=tv=SATLiteral(1087))
1087 -523 -524 0
523 -1087 0
524 -1087 0
c ((SATLiteral(533) /\ SATLiteral(534))=tv=SATLiteral(1111))
1111 -533 -534 0
533 -1111 0
534 -1111 0
c ((SATLiteral(464) /\ SATLiteral(465))=tv=SATLiteral(946))
946 -464 -465 0
464 -946 0
465 -946 0
c ((SATLiteral(474) /\ SATLiteral(475))=tv=SATLiteral(970))
970 -474 -475 0
474 -970 0
475 -970 0
c ((SATLiteral(484) /\ SATLiteral(485))=tv=SATLiteral(994))
994 -484 -485 0
484 -994 0
485 -994 0
c ((SATLiteral(494) /\ SATLiteral(495))=tv=SATLiteral(1018))
1018 -494 -495 0
494 -1018 0
495 -1018 0
c ((SATLiteral(504) /\ SATLiteral(505))=tv=SATLiteral(1042))
1042 -504 -505 0
504 -1042 0
505 -1042 0
c ((SATLiteral(514) /\ SATLiteral(515))=tv=SATLiteral(1066))
1066 -514 -515 0
514 -1066 0
515 -1066 0
c ((SATLiteral(524) /\ SATLiteral(525))=tv=SATLiteral(1090))
1090 -524 -525 0
524 -1090 0
525 -1090 0
c ((SATLiteral(534) /\ SATLiteral(535))=tv=SATLiteral(1114))
1114 -534 -535 0
534 -1114 0
535 -1114 0
c ((SATLiteral(465) /\ SATLiteral(466))=tv=SATLiteral(949))
949 -465 -466 0
465 -949 0
466 -949 0
c ((SATLiteral(475) /\ SATLiteral(476))=tv=SATLiteral(973))
973 -475 -476 0
475 -973 0
476 -973 0
c ((SATLiteral(485) /\ SATLiteral(486))=tv=SATLiteral(997))
997 -485 -486 0
485 -997 0
486 -997 0
c ((SATLiteral(495) /\ SATLiteral(496))=tv=SATLiteral(1021))
1021 -495 -496 0
495 -1021 0
496 -1021 0
c ((SATLiteral(505) /\ SATLiteral(506))=tv=SATLiteral(1045))
1045 -505 -506 0
505 -1045 0
506 -1045 0
c ((SATLiteral(515) /\ SATLiteral(516))=tv=SATLiteral(1069))
1069 -515 -516 0
515 -1069 0
516 -1069 0
c ((SATLiteral(525) /\ SATLiteral(526))=tv=SATLiteral(1093))
1093 -525 -526 0
525 -1093 0
526 -1093 0
c ((SATLiteral(535) /\ SATLiteral(536))=tv=SATLiteral(1117))
1117 -535 -536 0
535 -1117 0
536 -1117 0
c ((SATLiteral(466) /\ SATLiteral(467))=tv=SATLiteral(952))
952 -466 -467 0
466 -952 0
467 -952 0
c ((SATLiteral(476) /\ SATLiteral(477))=tv=SATLiteral(976))
976 -476 -477 0
476 -976 0
477 -976 0
c ((SATLiteral(486) /\ SATLiteral(487))=tv=SATLiteral(1000))
1000 -486 -487 0
486 -1000 0
487 -1000 0
c ((SATLiteral(496) /\ SATLiteral(497))=tv=SATLiteral(1024))
1024 -496 -497 0
496 -1024 0
497 -1024 0
c ((SATLiteral(506) /\ SATLiteral(507))=tv=SATLiteral(1048))
1048 -506 -507 0
506 -1048 0
507 -1048 0
c ((SATLiteral(516) /\ SATLiteral(517))=tv=SATLiteral(1072))
1072 -516 -517 0
516 -1072 0
517 -1072 0
c ((SATLiteral(526) /\ SATLiteral(527))=tv=SATLiteral(1096))
1096 -526 -527 0
526 -1096 0
527 -1096 0
c ((SATLiteral(536) /\ SATLiteral(537))=tv=SATLiteral(1120))
1120 -536 -537 0
536 -1120 0
537 -1120 0
c ((SATLiteral(467) /\ SATLiteral(468))=tv=SATLiteral(955))
955 -467 -468 0
467 -955 0
468 -955 0
c ((SATLiteral(477) /\ SATLiteral(478))=tv=SATLiteral(979))
979 -477 -478 0
477 -979 0
478 -979 0
c ((SATLiteral(487) /\ SATLiteral(488))=tv=SATLiteral(1003))
1003 -487 -488 0
487 -1003 0
488 -1003 0
c ((SATLiteral(497) /\ SATLiteral(498))=tv=SATLiteral(1027))
1027 -497 -498 0
497 -1027 0
498 -1027 0
c ((SATLiteral(507) /\ SATLiteral(508))=tv=SATLiteral(1051))
1051 -507 -508 0
507 -1051 0
508 -1051 0
c ((SATLiteral(517) /\ SATLiteral(518))=tv=SATLiteral(1075))
1075 -517 -518 0
517 -1075 0
518 -1075 0
c ((SATLiteral(527) /\ SATLiteral(528))=tv=SATLiteral(1099))
1099 -527 -528 0
527 -1099 0
528 -1099 0
c ((SATLiteral(537) /\ SATLiteral(538))=tv=SATLiteral(1123))
1123 -537 -538 0
537 -1123 0
538 -1123 0
c ((SATLiteral(940) /\ SATLiteral(461))=tv=SATLiteral(941))
941 -940 -461 0
940 -941 0
461 -941 0
c ((SATLiteral(471) /\ SATLiteral(964))=tv=SATLiteral(965))
965 -471 -964 0
471 -965 0
964 -965 0
c ((SATLiteral(481) /\ SATLiteral(988))=tv=SATLiteral(989))
989 -481 -988 0
481 -989 0
988 -989 0
c ((SATLiteral(1012) /\ SATLiteral(491))=tv=SATLiteral(1013))
1013 -1012 -491 0
1012 -1013 0
491 -1013 0
c ((SATLiteral(1036) /\ SATLiteral(501))=tv=SATLiteral(1037))
1037 -1036 -501 0
1036 -1037 0
501 -1037 0
c ((SATLiteral(1060) /\ SATLiteral(511))=tv=SATLiteral(1061))
1061 -1060 -511 0
1060 -1061 0
511 -1061 0
c ((SATLiteral(521) /\ SATLiteral(1084))=tv=SATLiteral(1085))
1085 -521 -1084 0
521 -1085 0
1084 -1085 0
c ((SATLiteral(1108) /\ SATLiteral(531))=tv=SATLiteral(1109))
1109 -1108 -531 0
1108 -1109 0
531 -1109 0
c ((SATLiteral(943) /\ SATLiteral(462))=tv=SATLiteral(944))
944 -943 -462 0
943 -944 0
462 -944 0
c ((SATLiteral(944) /\ SATLiteral(461))=tv=SATLiteral(945))
945 -944 -461 0
944 -945 0
461 -945 0
c ((SATLiteral(472) /\ SATLiteral(967))=tv=SATLiteral(968))
968 -472 -967 0
472 -968 0
967 -968 0
c ((SATLiteral(471) /\ SATLiteral(968))=tv=SATLiteral(969))
969 -471 -968 0
471 -969 0
968 -969 0
c ((SATLiteral(482) /\ SATLiteral(991))=tv=SATLiteral(992))
992 -482 -991 0
482 -992 0
991 -992 0
c ((SATLiteral(481) /\ SATLiteral(992))=tv=SATLiteral(993))
993 -481 -992 0
481 -993 0
992 -993 0
c ((SATLiteral(492) /\ SATLiteral(1015))=tv=SATLiteral(1016))
1016 -492 -1015 0
492 -1016 0
1015 -1016 0
c ((SATLiteral(491) /\ SATLiteral(1016))=tv=SATLiteral(1017))
1017 -491 -1016 0
491 -1017 0
1016 -1017 0
c ((SATLiteral(1039) /\ SATLiteral(502))=tv=SATLiteral(1040))
1040 -1039 -502 0
1039 -1040 0
502 -1040 0
c ((SATLiteral(1040) /\ SATLiteral(501))=tv=SATLiteral(1041))
1041 -1040 -501 0
1040 -1041 0
501 -1041 0
c ((SATLiteral(1063) /\ SATLiteral(512))=tv=SATLiteral(1064))
1064 -1063 -512 0
1063 -1064 0
512 -1064 0
c ((SATLiteral(1064) /\ SATLiteral(511))=tv=SATLiteral(1065))
1065 -1064 -511 0
1064 -1065 0
511 -1065 0
c ((SATLiteral(522) /\ SATLiteral(1087))=tv=SATLiteral(1088))
1088 -522 -1087 0
522 -1088 0
1087 -1088 0
c ((SATLiteral(521) /\ SATLiteral(1088))=tv=SATLiteral(1089))
1089 -521 -1088 0
521 -1089 0
1088 -1089 0
c ((SATLiteral(1111) /\ SATLiteral(532))=tv=SATLiteral(1112))
1112 -1111 -532 0
1111 -1112 0
532 -1112 0
c ((SATLiteral(1112) /\ SATLiteral(531))=tv=SATLiteral(1113))
1113 -1112 -531 0
1112 -1113 0
531 -1113 0
c ((SATLiteral(463) /\ SATLiteral(946))=tv=SATLiteral(947))
947 -463 -946 0
463 -947 0
946 -947 0
c ((SATLiteral(462) /\ SATLiteral(947))=tv=SATLiteral(948))
948 -462 -947 0
462 -948 0
947 -948 0
c ((SATLiteral(473) /\ SATLiteral(970))=tv=SATLiteral(971))
971 -473 -970 0
473 -971 0
970 -971 0
c ((SATLiteral(472) /\ SATLiteral(971))=tv=SATLiteral(972))
972 -472 -971 0
472 -972 0
971 -972 0
c ((SATLiteral(483) /\ SATLiteral(994))=tv=SATLiteral(995))
995 -483 -994 0
483 -995 0
994 -995 0
c ((SATLiteral(482) /\ SATLiteral(995))=tv=SATLiteral(996))
996 -482 -995 0
482 -996 0
995 -996 0
c ((SATLiteral(493) /\ SATLiteral(1018))=tv=SATLiteral(1019))
1019 -493 -1018 0
493 -1019 0
1018 -1019 0
c ((SATLiteral(492) /\ SATLiteral(1019))=tv=SATLiteral(1020))
1020 -492 -1019 0
492 -1020 0
1019 -1020 0
c ((SATLiteral(1042) /\ SATLiteral(503))=tv=SATLiteral(1043))
1043 -1042 -503 0
1042 -1043 0
503 -1043 0
c ((SATLiteral(1043) /\ SATLiteral(502))=tv=SATLiteral(1044))
1044 -1043 -502 0
1043 -1044 0
502 -1044 0
c ((SATLiteral(1066) /\ SATLiteral(513))=tv=SATLiteral(1067))
1067 -1066 -513 0
1066 -1067 0
513 -1067 0
c ((SATLiteral(1067) /\ SATLiteral(512))=tv=SATLiteral(1068))
1068 -1067 -512 0
1067 -1068 0
512 -1068 0
c ((SATLiteral(523) /\ SATLiteral(1090))=tv=SATLiteral(1091))
1091 -523 -1090 0
523 -1091 0
1090 -1091 0
c ((SATLiteral(522) /\ SATLiteral(1091))=tv=SATLiteral(1092))
1092 -522 -1091 0
522 -1092 0
1091 -1092 0
c ((SATLiteral(533) /\ SATLiteral(1114))=tv=SATLiteral(1115))
1115 -533 -1114 0
533 -1115 0
1114 -1115 0
c ((SATLiteral(532) /\ SATLiteral(1115))=tv=SATLiteral(1116))
1116 -532 -1115 0
532 -1116 0
1115 -1116 0
c ((SATLiteral(949) /\ SATLiteral(464))=tv=SATLiteral(950))
950 -949 -464 0
949 -950 0
464 -950 0
c ((SATLiteral(950) /\ SATLiteral(463))=tv=SATLiteral(951))
951 -950 -463 0
950 -951 0
463 -951 0
c ((SATLiteral(973) /\ SATLiteral(474))=tv=SATLiteral(974))
974 -973 -474 0
973 -974 0
474 -974 0
c ((SATLiteral(974) /\ SATLiteral(473))=tv=SATLiteral(975))
975 -974 -473 0
974 -975 0
473 -975 0
c ((SATLiteral(997) /\ SATLiteral(484))=tv=SATLiteral(998))
998 -997 -484 0
997 -998 0
484 -998 0
c ((SATLiteral(998) /\ SATLiteral(483))=tv=SATLiteral(999))
999 -998 -483 0
998 -999 0
483 -999 0
c ((SATLiteral(494) /\ SATLiteral(1021))=tv=SATLiteral(1022))
1022 -494 -1021 0
494 -1022 0
1021 -1022 0
c ((SATLiteral(493) /\ SATLiteral(1022))=tv=SATLiteral(1023))
1023 -493 -1022 0
493 -1023 0
1022 -1023 0
c ((SATLiteral(504) /\ SATLiteral(1045))=tv=SATLiteral(1046))
1046 -504 -1045 0
504 -1046 0
1045 -1046 0
c ((SATLiteral(503) /\ SATLiteral(1046))=tv=SATLiteral(1047))
1047 -503 -1046 0
503 -1047 0
1046 -1047 0
c ((SATLiteral(1069) /\ SATLiteral(514))=tv=SATLiteral(1070))
1070 -1069 -514 0
1069 -1070 0
514 -1070 0
c ((SATLiteral(1070) /\ SATLiteral(513))=tv=SATLiteral(1071))
1071 -1070 -513 0
1070 -1071 0
513 -1071 0
c ((SATLiteral(524) /\ SATLiteral(1093))=tv=SATLiteral(1094))
1094 -524 -1093 0
524 -1094 0
1093 -1094 0
c ((SATLiteral(523) /\ SATLiteral(1094))=tv=SATLiteral(1095))
1095 -523 -1094 0
523 -1095 0
1094 -1095 0
c ((SATLiteral(534) /\ SATLiteral(1117))=tv=SATLiteral(1118))
1118 -534 -1117 0
534 -1118 0
1117 -1118 0
c ((SATLiteral(533) /\ SATLiteral(1118))=tv=SATLiteral(1119))
1119 -533 -1118 0
533 -1119 0
1118 -1119 0
c ((SATLiteral(952) /\ SATLiteral(465))=tv=SATLiteral(953))
953 -952 -465 0
952 -953 0
465 -953 0
c ((SATLiteral(953) /\ SATLiteral(464))=tv=SATLiteral(954))
954 -953 -464 0
953 -954 0
464 -954 0
c ((SATLiteral(475) /\ SATLiteral(976))=tv=SATLiteral(977))
977 -475 -976 0
475 -977 0
976 -977 0
c ((SATLiteral(474) /\ SATLiteral(977))=tv=SATLiteral(978))
978 -474 -977 0
474 -978 0
977 -978 0
c ((SATLiteral(1000) /\ SATLiteral(485))=tv=SATLiteral(1001))
1001 -1000 -485 0
1000 -1001 0
485 -1001 0
c ((SATLiteral(1001) /\ SATLiteral(484))=tv=SATLiteral(1002))
1002 -1001 -484 0
1001 -1002 0
484 -1002 0
c ((SATLiteral(1024) /\ SATLiteral(495))=tv=SATLiteral(1025))
1025 -1024 -495 0
1024 -1025 0
495 -1025 0
c ((SATLiteral(1025) /\ SATLiteral(494))=tv=SATLiteral(1026))
1026 -1025 -494 0
1025 -1026 0
494 -1026 0
c ((SATLiteral(1048) /\ SATLiteral(505))=tv=SATLiteral(1049))
1049 -1048 -505 0
1048 -1049 0
505 -1049 0
c ((SATLiteral(1049) /\ SATLiteral(504))=tv=SATLiteral(1050))
1050 -1049 -504 0
1049 -1050 0
504 -1050 0
c ((SATLiteral(1072) /\ SATLiteral(515))=tv=SATLiteral(1073))
1073 -1072 -515 0
1072 -1073 0
515 -1073 0
c ((SATLiteral(1073) /\ SATLiteral(514))=tv=SATLiteral(1074))
1074 -1073 -514 0
1073 -1074 0
514 -1074 0
c ((SATLiteral(525) /\ SATLiteral(1096))=tv=SATLiteral(1097))
1097 -525 -1096 0
525 -1097 0
1096 -1097 0
c ((SATLiteral(524) /\ SATLiteral(1097))=tv=SATLiteral(1098))
1098 -524 -1097 0
524 -1098 0
1097 -1098 0
c ((SATLiteral(535) /\ SATLiteral(1120))=tv=SATLiteral(1121))
1121 -535 -1120 0
535 -1121 0
1120 -1121 0
c ((SATLiteral(534) /\ SATLiteral(1121))=tv=SATLiteral(1122))
1122 -534 -1121 0
534 -1122 0
1121 -1122 0
c ((SATLiteral(955) /\ SATLiteral(466))=tv=SATLiteral(956))
956 -955 -466 0
955 -956 0
466 -956 0
c ((SATLiteral(956) /\ SATLiteral(465))=tv=SATLiteral(957))
957 -956 -465 0
956 -957 0
465 -957 0
c ((SATLiteral(476) /\ SATLiteral(979))=tv=SATLiteral(980))
980 -476 -979 0
476 -980 0
979 -980 0
c ((SATLiteral(475) /\ SATLiteral(980))=tv=SATLiteral(981))
981 -475 -980 0
475 -981 0
980 -981 0
c ((SATLiteral(486) /\ SATLiteral(1003))=tv=SATLiteral(1004))
1004 -486 -1003 0
486 -1004 0
1003 -1004 0
c ((SATLiteral(485) /\ SATLiteral(1004))=tv=SATLiteral(1005))
1005 -485 -1004 0
485 -1005 0
1004 -1005 0
c ((SATLiteral(1027) /\ SATLiteral(496))=tv=SATLiteral(1028))
1028 -1027 -496 0
1027 -1028 0
496 -1028 0
c ((SATLiteral(1028) /\ SATLiteral(495))=tv=SATLiteral(1029))
1029 -1028 -495 0
1028 -1029 0
495 -1029 0
c ((SATLiteral(1051) /\ SATLiteral(506))=tv=SATLiteral(1052))
1052 -1051 -506 0
1051 -1052 0
506 -1052 0
c ((SATLiteral(1052) /\ SATLiteral(505))=tv=SATLiteral(1053))
1053 -1052 -505 0
1052 -1053 0
505 -1053 0
c ((SATLiteral(1075) /\ SATLiteral(516))=tv=SATLiteral(1076))
1076 -1075 -516 0
1075 -1076 0
516 -1076 0
c ((SATLiteral(1076) /\ SATLiteral(515))=tv=SATLiteral(1077))
1077 -1076 -515 0
1076 -1077 0
515 -1077 0
c ((SATLiteral(526) /\ SATLiteral(1099))=tv=SATLiteral(1100))
1100 -526 -1099 0
526 -1100 0
1099 -1100 0
c ((SATLiteral(525) /\ SATLiteral(1100))=tv=SATLiteral(1101))
1101 -525 -1100 0
525 -1101 0
1100 -1101 0
c ((SATLiteral(1123) /\ SATLiteral(536))=tv=SATLiteral(1124))
1124 -1123 -536 0
1123 -1124 0
536 -1124 0
c ((SATLiteral(1124) /\ SATLiteral(535))=tv=SATLiteral(1125))
1125 -1124 -535 0
1124 -1125 0
535 -1125 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c ((SATLiteral(471) /\ SATLiteral(461))=tv=SATLiteral(742))
742 -471 -461 0
471 -742 0
461 -742 0
c ((SATLiteral(471) /\ SATLiteral(481))=tv=SATLiteral(766))
766 -471 -481 0
471 -766 0
481 -766 0
c ((SATLiteral(481) /\ SATLiteral(491))=tv=SATLiteral(790))
790 -481 -491 0
481 -790 0
491 -790 0
c ((SATLiteral(491) /\ SATLiteral(501))=tv=SATLiteral(814))
814 -491 -501 0
491 -814 0
501 -814 0
c ((SATLiteral(501) /\ SATLiteral(511))=tv=SATLiteral(838))
838 -501 -511 0
501 -838 0
511 -838 0
c ((SATLiteral(521) /\ SATLiteral(511))=tv=SATLiteral(862))
862 -521 -511 0
521 -862 0
511 -862 0
c ((SATLiteral(521) /\ SATLiteral(531))=tv=SATLiteral(886))
886 -521 -531 0
521 -886 0
531 -886 0
c ((SATLiteral(531) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -531 1 0
531 1 0
-1 1 0
c ((SATLiteral(472) /\ SATLiteral(462))=tv=SATLiteral(745))
745 -472 -462 0
472 -745 0
462 -745 0
c ((SATLiteral(472) /\ SATLiteral(482))=tv=SATLiteral(769))
769 -472 -482 0
472 -769 0
482 -769 0
c ((SATLiteral(482) /\ SATLiteral(492))=tv=SATLiteral(793))
793 -482 -492 0
482 -793 0
492 -793 0
c ((SATLiteral(492) /\ SATLiteral(502))=tv=SATLiteral(817))
817 -492 -502 0
492 -817 0
502 -817 0
c ((SATLiteral(502) /\ SATLiteral(512))=tv=SATLiteral(841))
841 -502 -512 0
502 -841 0
512 -841 0
c ((SATLiteral(522) /\ SATLiteral(512))=tv=SATLiteral(865))
865 -522 -512 0
522 -865 0
512 -865 0
c ((SATLiteral(522) /\ SATLiteral(532))=tv=SATLiteral(889))
889 -522 -532 0
522 -889 0
532 -889 0
c ((SATLiteral(532) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -532 1 0
532 1 0
-1 1 0
c ((SATLiteral(473) /\ SATLiteral(463))=tv=SATLiteral(748))
748 -473 -463 0
473 -748 0
463 -748 0
c ((SATLiteral(473) /\ SATLiteral(483))=tv=SATLiteral(772))
772 -473 -483 0
473 -772 0
483 -772 0
c ((SATLiteral(483) /\ SATLiteral(493))=tv=SATLiteral(796))
796 -483 -493 0
483 -796 0
493 -796 0
c ((SATLiteral(493) /\ SATLiteral(503))=tv=SATLiteral(820))
820 -493 -503 0
493 -820 0
503 -820 0
c ((SATLiteral(503) /\ SATLiteral(513))=tv=SATLiteral(844))
844 -503 -513 0
503 -844 0
513 -844 0
c ((SATLiteral(523) /\ SATLiteral(513))=tv=SATLiteral(868))
868 -523 -513 0
523 -868 0
513 -868 0
c ((SATLiteral(523) /\ SATLiteral(533))=tv=SATLiteral(892))
892 -523 -533 0
523 -892 0
533 -892 0
c ((SATLiteral(533) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -533 1 0
533 1 0
-1 1 0
c ((SATLiteral(474) /\ SATLiteral(464))=tv=SATLiteral(751))
751 -474 -464 0
474 -751 0
464 -751 0
c ((SATLiteral(474) /\ SATLiteral(484))=tv=SATLiteral(775))
775 -474 -484 0
474 -775 0
484 -775 0
c ((SATLiteral(484) /\ SATLiteral(494))=tv=SATLiteral(799))
799 -484 -494 0
484 -799 0
494 -799 0
c ((SATLiteral(494) /\ SATLiteral(504))=tv=SATLiteral(823))
823 -494 -504 0
494 -823 0
504 -823 0
c ((SATLiteral(504) /\ SATLiteral(514))=tv=SATLiteral(847))
847 -504 -514 0
504 -847 0
514 -847 0
c ((SATLiteral(524) /\ SATLiteral(514))=tv=SATLiteral(871))
871 -524 -514 0
524 -871 0
514 -871 0
c ((SATLiteral(524) /\ SATLiteral(534))=tv=SATLiteral(895))
895 -524 -534 0
524 -895 0
534 -895 0
c ((SATLiteral(534) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -534 1 0
534 1 0
-1 1 0
c ((SATLiteral(475) /\ SATLiteral(465))=tv=SATLiteral(754))
754 -475 -465 0
475 -754 0
465 -754 0
c ((SATLiteral(475) /\ SATLiteral(485))=tv=SATLiteral(778))
778 -475 -485 0
475 -778 0
485 -778 0
c ((SATLiteral(485) /\ SATLiteral(495))=tv=SATLiteral(802))
802 -485 -495 0
485 -802 0
495 -802 0
c ((SATLiteral(495) /\ SATLiteral(505))=tv=SATLiteral(826))
826 -495 -505 0
495 -826 0
505 -826 0
c ((SATLiteral(505) /\ SATLiteral(515))=tv=SATLiteral(850))
850 -505 -515 0
505 -850 0
515 -850 0
c ((SATLiteral(525) /\ SATLiteral(515))=tv=SATLiteral(874))
874 -525 -515 0
525 -874 0
515 -874 0
c ((SATLiteral(525) /\ SATLiteral(535))=tv=SATLiteral(898))
898 -525 -535 0
525 -898 0
535 -898 0
c ((SATLiteral(535) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -535 1 0
535 1 0
-1 1 0
c ((SATLiteral(476) /\ SATLiteral(466))=tv=SATLiteral(757))
757 -476 -466 0
476 -757 0
466 -757 0
c ((SATLiteral(476) /\ SATLiteral(486))=tv=SATLiteral(781))
781 -476 -486 0
476 -781 0
486 -781 0
c ((SATLiteral(486) /\ SATLiteral(496))=tv=SATLiteral(805))
805 -486 -496 0
486 -805 0
496 -805 0
c ((SATLiteral(496) /\ SATLiteral(506))=tv=SATLiteral(829))
829 -496 -506 0
496 -829 0
506 -829 0
c ((SATLiteral(506) /\ SATLiteral(516))=tv=SATLiteral(853))
853 -506 -516 0
506 -853 0
516 -853 0
c ((SATLiteral(526) /\ SATLiteral(516))=tv=SATLiteral(877))
877 -526 -516 0
526 -877 0
516 -877 0
c ((SATLiteral(526) /\ SATLiteral(536))=tv=SATLiteral(901))
901 -526 -536 0
526 -901 0
536 -901 0
c ((SATLiteral(536) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -536 1 0
536 1 0
-1 1 0
c ((SATLiteral(477) /\ SATLiteral(467))=tv=SATLiteral(760))
760 -477 -467 0
477 -760 0
467 -760 0
c ((SATLiteral(477) /\ SATLiteral(487))=tv=SATLiteral(784))
784 -477 -487 0
477 -784 0
487 -784 0
c ((SATLiteral(487) /\ SATLiteral(497))=tv=SATLiteral(808))
808 -487 -497 0
487 -808 0
497 -808 0
c ((SATLiteral(497) /\ SATLiteral(507))=tv=SATLiteral(832))
832 -497 -507 0
497 -832 0
507 -832 0
c ((SATLiteral(507) /\ SATLiteral(517))=tv=SATLiteral(856))
856 -507 -517 0
507 -856 0
517 -856 0
c ((SATLiteral(527) /\ SATLiteral(517))=tv=SATLiteral(880))
880 -527 -517 0
527 -880 0
517 -880 0
c ((SATLiteral(527) /\ SATLiteral(537))=tv=SATLiteral(904))
904 -527 -537 0
527 -904 0
537 -904 0
c ((SATLiteral(537) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -537 1 0
537 1 0
-1 1 0
c ((SATLiteral(478) /\ SATLiteral(468))=tv=SATLiteral(763))
763 -478 -468 0
478 -763 0
468 -763 0
c ((SATLiteral(478) /\ SATLiteral(488))=tv=SATLiteral(787))
787 -478 -488 0
478 -787 0
488 -787 0
c ((SATLiteral(488) /\ SATLiteral(498))=tv=SATLiteral(811))
811 -488 -498 0
488 -811 0
498 -811 0
c ((SATLiteral(498) /\ SATLiteral(508))=tv=SATLiteral(835))
835 -498 -508 0
498 -835 0
508 -835 0
c ((SATLiteral(508) /\ SATLiteral(518))=tv=SATLiteral(859))
859 -508 -518 0
508 -859 0
518 -859 0
c ((SATLiteral(528) /\ SATLiteral(518))=tv=SATLiteral(883))
883 -528 -518 0
528 -883 0
518 -883 0
c ((SATLiteral(528) /\ SATLiteral(538))=tv=SATLiteral(907))
907 -528 -538 0
528 -907 0
538 -907 0
c ((SATLiteral(538) /\ SATLiteral(-1))=tv=SATLiteral(-1))
-1 -538 1 0
538 1 0
-1 1 0
c ((SATLiteral(531) /\ SATLiteral(862))=tv=SATLiteral(863))
863 -531 -862 0
531 -863 0
862 -863 0
c ((SATLiteral(481) /\ SATLiteral(742))=tv=SATLiteral(743))
743 -481 -742 0
481 -743 0
742 -743 0
c ((SATLiteral(491) /\ SATLiteral(743))=tv=SATLiteral(744))
744 -491 -743 0
491 -744 0
743 -744 0
c ((SATLiteral(491) /\ SATLiteral(766))=tv=SATLiteral(767))
767 -491 -766 0
491 -767 0
766 -767 0
c ((SATLiteral(501) /\ SATLiteral(767))=tv=SATLiteral(768))
768 -501 -767 0
501 -768 0
767 -768 0
c ((SATLiteral(501) /\ SATLiteral(790))=tv=SATLiteral(791))
791 -501 -790 0
501 -791 0
790 -791 0
c ((SATLiteral(791) /\ SATLiteral(511))=tv=SATLiteral(792))
792 -791 -511 0
791 -792 0
511 -792 0
c ((SATLiteral(814) /\ SATLiteral(511))=tv=SATLiteral(815))
815 -814 -511 0
814 -815 0
511 -815 0
c ((SATLiteral(521) /\ SATLiteral(815))=tv=SATLiteral(816))
816 -521 -815 0
521 -816 0
815 -816 0
c ((SATLiteral(521) /\ SATLiteral(838))=tv=SATLiteral(839))
839 -521 -838 0
521 -839 0
838 -839 0
c ((SATLiteral(531) /\ SATLiteral(839))=tv=SATLiteral(840))
840 -531 -839 0
531 -840 0
839 -840 0
c ((SATLiteral(532) /\ SATLiteral(865))=tv=SATLiteral(866))
866 -532 -865 0
532 -866 0
865 -866 0
c ((SATLiteral(745) /\ SATLiteral(482))=tv=SATLiteral(746))
746 -745 -482 0
745 -746 0
482 -746 0
c ((SATLiteral(746) /\ SATLiteral(492))=tv=SATLiteral(747))
747 -746 -492 0
746 -747 0
492 -747 0
c ((SATLiteral(769) /\ SATLiteral(492))=tv=SATLiteral(770))
770 -769 -492 0
769 -770 0
492 -770 0
c ((SATLiteral(770) /\ SATLiteral(502))=tv=SATLiteral(771))
771 -770 -502 0
770 -771 0
502 -771 0
c ((SATLiteral(502) /\ SATLiteral(793))=tv=SATLiteral(794))
794 -502 -793 0
502 -794 0
793 -794 0
c ((SATLiteral(512) /\ SATLiteral(794))=tv=SATLiteral(795))
795 -512 -794 0
512 -795 0
794 -795 0
c ((SATLiteral(512) /\ SATLiteral(817))=tv=SATLiteral(818))
818 -512 -817 0
512 -818 0
817 -818 0
c ((SATLiteral(522) /\ SATLiteral(818))=tv=SATLiteral(819))
819 -522 -818 0
522 -819 0
818 -819 0
c ((SATLiteral(522) /\ SATLiteral(841))=tv=SATLiteral(842))
842 -522 -841 0
522 -842 0
841 -842 0
c ((SATLiteral(532) /\ SATLiteral(842))=tv=SATLiteral(843))
843 -532 -842 0
532 -843 0
842 -843 0
c ((SATLiteral(533) /\ SATLiteral(868))=tv=SATLiteral(869))
869 -533 -868 0
533 -869 0
868 -869 0
c ((SATLiteral(483) /\ SATLiteral(748))=tv=SATLiteral(749))
749 -483 -748 0
483 -749 0
748 -749 0
c ((SATLiteral(749) /\ SATLiteral(493))=tv=SATLiteral(750))
750 -749 -493 0
749 -750 0
493 -750 0
c ((SATLiteral(772) /\ SATLiteral(493))=tv=SATLiteral(773))
773 -772 -493 0
772 -773 0
493 -773 0
c ((SATLiteral(773) /\ SATLiteral(503))=tv=SATLiteral(774))
774 -773 -503 0
773 -774 0
503 -774 0
c ((SATLiteral(796) /\ SATLiteral(503))=tv=SATLiteral(797))
797 -796 -503 0
796 -797 0
503 -797 0
c ((SATLiteral(797) /\ SATLiteral(513))=tv=SATLiteral(798))
798 -797 -513 0
797 -798 0
513 -798 0
c ((SATLiteral(820) /\ SATLiteral(513))=tv=SATLiteral(821))
821 -820 -513 0
820 -821 0
513 -821 0
c ((SATLiteral(523) /\ SATLiteral(821))=tv=SATLiteral(822))
822 -523 -821 0
523 -822 0
821 -822 0
c ((SATLiteral(844) /\ SATLiteral(523))=tv=SATLiteral(845))
845 -844 -523 0
844 -845 0
523 -845 0
c ((SATLiteral(845) /\ SATLiteral(533))=tv=SATLiteral(846))
846 -845 -533 0
845 -846 0
533 -846 0
c ((SATLiteral(871) /\ SATLiteral(534))=tv=SATLiteral(872))
872 -871 -534 0
871 -872 0
534 -872 0
c ((SATLiteral(484) /\ SATLiteral(751))=tv=SATLiteral(752))
752 -484 -751 0
484 -752 0
751 -752 0
c ((SATLiteral(494) /\ SATLiteral(752))=tv=SATLiteral(753))
753 -494 -752 0
494 -753 0
752 -753 0
c ((SATLiteral(775) /\ SATLiteral(494))=tv=SATLiteral(776))
776 -775 -494 0
775 -776 0
494 -776 0
c ((SATLiteral(776) /\ SATLiteral(504))=tv=SATLiteral(777))
777 -776 -504 0
776 -777 0
504 -777 0
c ((SATLiteral(799) /\ SATLiteral(504))=tv=SATLiteral(800))
800 -799 -504 0
799 -800 0
504 -800 0
c ((SATLiteral(800) /\ SATLiteral(514))=tv=SATLiteral(801))
801 -800 -514 0
800 -801 0
514 -801 0
c ((SATLiteral(823) /\ SATLiteral(514))=tv=SATLiteral(824))
824 -823 -514 0
823 -824 0
514 -824 0
c ((SATLiteral(524) /\ SATLiteral(824))=tv=SATLiteral(825))
825 -524 -824 0
524 -825 0
824 -825 0
c ((SATLiteral(524) /\ SATLiteral(847))=tv=SATLiteral(848))
848 -524 -847 0
524 -848 0
847 -848 0
c ((SATLiteral(848) /\ SATLiteral(534))=tv=SATLiteral(849))
849 -848 -534 0
848 -849 0
534 -849 0
c ((SATLiteral(535) /\ SATLiteral(874))=tv=SATLiteral(875))
875 -535 -874 0
535 -875 0
874 -875 0
c ((SATLiteral(485) /\ SATLiteral(754))=tv=SATLiteral(755))
755 -485 -754 0
485 -755 0
754 -755 0
c ((SATLiteral(495) /\ SATLiteral(755))=tv=SATLiteral(756))
756 -495 -755 0
495 -756 0
755 -756 0
c ((SATLiteral(495) /\ SATLiteral(778))=tv=SATLiteral(779))
779 -495 -778 0
495 -779 0
778 -779 0
c ((SATLiteral(779) /\ SATLiteral(505))=tv=SATLiteral(780))
780 -779 -505 0
779 -780 0
505 -780 0
c ((SATLiteral(802) /\ SATLiteral(505))=tv=SATLiteral(803))
803 -802 -505 0
802 -803 0
505 -803 0
c ((SATLiteral(803) /\ SATLiteral(515))=tv=SATLiteral(804))
804 -803 -515 0
803 -804 0
515 -804 0
c ((SATLiteral(826) /\ SATLiteral(515))=tv=SATLiteral(827))
827 -826 -515 0
826 -827 0
515 -827 0
c ((SATLiteral(525) /\ SATLiteral(827))=tv=SATLiteral(828))
828 -525 -827 0
525 -828 0
827 -828 0
c ((SATLiteral(525) /\ SATLiteral(850))=tv=SATLiteral(851))
851 -525 -850 0
525 -851 0
850 -851 0
c ((SATLiteral(535) /\ SATLiteral(851))=tv=SATLiteral(852))
852 -535 -851 0
535 -852 0
851 -852 0
c ((SATLiteral(536) /\ SATLiteral(877))=tv=SATLiteral(878))
878 -536 -877 0
536 -878 0
877 -878 0
c ((SATLiteral(486) /\ SATLiteral(757))=tv=SATLiteral(758))
758 -486 -757 0
486 -758 0
757 -758 0
c ((SATLiteral(496) /\ SATLiteral(758))=tv=SATLiteral(759))
759 -496 -758 0
496 -759 0
758 -759 0
c ((SATLiteral(496) /\ SATLiteral(781))=tv=SATLiteral(782))
782 -496 -781 0
496 -782 0
781 -782 0
c ((SATLiteral(506) /\ SATLiteral(782))=tv=SATLiteral(783))
783 -506 -782 0
506 -783 0
782 -783 0
c ((SATLiteral(506) /\ SATLiteral(805))=tv=SATLiteral(806))
806 -506 -805 0
506 -806 0
805 -806 0
c ((SATLiteral(806) /\ SATLiteral(516))=tv=SATLiteral(807))
807 -806 -516 0
806 -807 0
516 -807 0
c ((SATLiteral(829) /\ SATLiteral(516))=tv=SATLiteral(830))
830 -829 -516 0
829 -830 0
516 -830 0
c ((SATLiteral(526) /\ SATLiteral(830))=tv=SATLiteral(831))
831 -526 -830 0
526 -831 0
830 -831 0
c ((SATLiteral(526) /\ SATLiteral(853))=tv=SATLiteral(854))
854 -526 -853 0
526 -854 0
853 -854 0
c ((SATLiteral(536) /\ SATLiteral(854))=tv=SATLiteral(855))
855 -536 -854 0
536 -855 0
854 -855 0
c ((SATLiteral(537) /\ SATLiteral(880))=tv=SATLiteral(881))
881 -537 -880 0
537 -881 0
880 -881 0
c ((SATLiteral(760) /\ SATLiteral(487))=tv=SATLiteral(761))
761 -760 -487 0
760 -761 0
487 -761 0
c ((SATLiteral(761) /\ SATLiteral(497))=tv=SATLiteral(762))
762 -761 -497 0
761 -762 0
497 -762 0
c ((SATLiteral(784) /\ SATLiteral(497))=tv=SATLiteral(785))
785 -784 -497 0
784 -785 0
497 -785 0
c ((SATLiteral(785) /\ SATLiteral(507))=tv=SATLiteral(786))
786 -785 -507 0
785 -786 0
507 -786 0
c ((SATLiteral(808) /\ SATLiteral(507))=tv=SATLiteral(809))
809 -808 -507 0
808 -809 0
507 -809 0
c ((SATLiteral(809) /\ SATLiteral(517))=tv=SATLiteral(810))
810 -809 -517 0
809 -810 0
517 -810 0
c ((SATLiteral(517) /\ SATLiteral(832))=tv=SATLiteral(833))
833 -517 -832 0
517 -833 0
832 -833 0
c ((SATLiteral(527) /\ SATLiteral(833))=tv=SATLiteral(834))
834 -527 -833 0
527 -834 0
833 -834 0
c ((SATLiteral(527) /\ SATLiteral(856))=tv=SATLiteral(857))
857 -527 -856 0
527 -857 0
856 -857 0
c ((SATLiteral(537) /\ SATLiteral(857))=tv=SATLiteral(858))
858 -537 -857 0
537 -858 0
857 -858 0
c ((SATLiteral(883) /\ SATLiteral(538))=tv=SATLiteral(884))
884 -883 -538 0
883 -884 0
538 -884 0
c ((SATLiteral(488) /\ SATLiteral(763))=tv=SATLiteral(764))
764 -488 -763 0
488 -764 0
763 -764 0
c ((SATLiteral(764) /\ SATLiteral(498))=tv=SATLiteral(765))
765 -764 -498 0
764 -765 0
498 -765 0
c ((SATLiteral(787) /\ SATLiteral(498))=tv=SATLiteral(788))
788 -787 -498 0
787 -788 0
498 -788 0
c ((SATLiteral(788) /\ SATLiteral(508))=tv=SATLiteral(789))
789 -788 -508 0
788 -789 0
508 -789 0
c ((SATLiteral(811) /\ SATLiteral(508))=tv=SATLiteral(812))
812 -811 -508 0
811 -812 0
508 -812 0
c ((SATLiteral(812) /\ SATLiteral(518))=tv=SATLiteral(813))
813 -812 -518 0
812 -813 0
518 -813 0
c ((SATLiteral(835) /\ SATLiteral(518))=tv=SATLiteral(836))
836 -835 -518 0
835 -836 0
518 -836 0
c ((SATLiteral(528) /\ SATLiteral(836))=tv=SATLiteral(837))
837 -528 -836 0
528 -837 0
836 -837 0
c ((SATLiteral(859) /\ SATLiteral(528))=tv=SATLiteral(860))
860 -859 -528 0
859 -860 0
528 -860 0
c ((SATLiteral(860) /\ SATLiteral(538))=tv=SATLiteral(861))
861 -860 -538 0
860 -861 0
538 -861 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c ((SATLiteral(-1) /\ SATLiteral(461))=tv=SATLiteral(-1))
-1 1 -461 0
-1 1 0
461 1 0
c ((SATLiteral(471) /\ SATLiteral(461))=tv=SATLiteral(1150))
1150 -471 -461 0
471 -1150 0
461 -1150 0
c ((SATLiteral(471) /\ SATLiteral(481))=tv=SATLiteral(1174))
1174 -471 -481 0
471 -1174 0
481 -1174 0
c ((SATLiteral(481) /\ SATLiteral(491))=tv=SATLiteral(1198))
1198 -481 -491 0
481 -1198 0
491 -1198 0
c ((SATLiteral(491) /\ SATLiteral(501))=tv=SATLiteral(1222))
1222 -491 -501 0
491 -1222 0
501 -1222 0
c ((SATLiteral(501) /\ SATLiteral(511))=tv=SATLiteral(1246))
1246 -501 -511 0
501 -1246 0
511 -1246 0
c ((SATLiteral(521) /\ SATLiteral(511))=tv=SATLiteral(1270))
1270 -521 -511 0
521 -1270 0
511 -1270 0
c ((SATLiteral(521) /\ SATLiteral(531))=tv=SATLiteral(1294))
1294 -521 -531 0
521 -1294 0
531 -1294 0
c ((SATLiteral(-1) /\ SATLiteral(462))=tv=SATLiteral(-1))
-1 1 -462 0
-1 1 0
462 1 0
c ((SATLiteral(472) /\ SATLiteral(462))=tv=SATLiteral(1153))
1153 -472 -462 0
472 -1153 0
462 -1153 0
c ((SATLiteral(472) /\ SATLiteral(482))=tv=SATLiteral(1177))
1177 -472 -482 0
472 -1177 0
482 -1177 0
c ((SATLiteral(482) /\ SATLiteral(492))=tv=SATLiteral(1201))
1201 -482 -492 0
482 -1201 0
492 -1201 0
c ((SATLiteral(492) /\ SATLiteral(502))=tv=SATLiteral(1225))
1225 -492 -502 0
492 -1225 0
502 -1225 0
c ((SATLiteral(502) /\ SATLiteral(512))=tv=SATLiteral(1249))
1249 -502 -512 0
502 -1249 0
512 -1249 0
c ((SATLiteral(522) /\ SATLiteral(512))=tv=SATLiteral(1273))
1273 -522 -512 0
522 -1273 0
512 -1273 0
c ((SATLiteral(522) /\ SATLiteral(532))=tv=SATLiteral(1297))
1297 -522 -532 0
522 -1297 0
532 -1297 0
c ((SATLiteral(-1) /\ SATLiteral(463))=tv=SATLiteral(-1))
-1 1 -463 0
-1 1 0
463 1 0
c ((SATLiteral(473) /\ SATLiteral(463))=tv=SATLiteral(1156))
1156 -473 -463 0
473 -1156 0
463 -1156 0
c ((SATLiteral(473) /\ SATLiteral(483))=tv=SATLiteral(1180))
1180 -473 -483 0
473 -1180 0
483 -1180 0
c ((SATLiteral(483) /\ SATLiteral(493))=tv=SATLiteral(1204))
1204 -483 -493 0
483 -1204 0
493 -1204 0
c ((SATLiteral(493) /\ SATLiteral(503))=tv=SATLiteral(1228))
1228 -493 -503 0
493 -1228 0
503 -1228 0
c ((SATLiteral(503) /\ SATLiteral(513))=tv=SATLiteral(1252))
1252 -503 -513 0
503 -1252 0
513 -1252 0
c ((SATLiteral(523) /\ SATLiteral(513))=tv=SATLiteral(1276))
1276 -523 -513 0
523 -1276 0
513 -1276 0
c ((SATLiteral(523) /\ SATLiteral(533))=tv=SATLiteral(1300))
1300 -523 -533 0
523 -1300 0
533 -1300 0
c ((SATLiteral(-1) /\ SATLiteral(464))=tv=SATLiteral(-1))
-1 1 -464 0
-1 1 0
464 1 0
c ((SATLiteral(474) /\ SATLiteral(464))=tv=SATLiteral(1159))
1159 -474 -464 0
474 -1159 0
464 -1159 0
c ((SATLiteral(474) /\ SATLiteral(484))=tv=SATLiteral(1183))
1183 -474 -484 0
474 -1183 0
484 -1183 0
c ((SATLiteral(484) /\ SATLiteral(494))=tv=SATLiteral(1207))
1207 -484 -494 0
484 -1207 0
494 -1207 0
c ((SATLiteral(494) /\ SATLiteral(504))=tv=SATLiteral(1231))
1231 -494 -504 0
494 -1231 0
504 -1231 0
c ((SATLiteral(504) /\ SATLiteral(514))=tv=SATLiteral(1255))
1255 -504 -514 0
504 -1255 0
514 -1255 0
c ((SATLiteral(524) /\ SATLiteral(514))=tv=SATLiteral(1279))
1279 -524 -514 0
524 -1279 0
514 -1279 0
c ((SATLiteral(524) /\ SATLiteral(534))=tv=SATLiteral(1303))
1303 -524 -534 0
524 -1303 0
534 -1303 0
c ((SATLiteral(-1) /\ SATLiteral(465))=tv=SATLiteral(-1))
-1 1 -465 0
-1 1 0
465 1 0
c ((SATLiteral(475) /\ SATLiteral(465))=tv=SATLiteral(1162))
1162 -475 -465 0
475 -1162 0
465 -1162 0
c ((SATLiteral(475) /\ SATLiteral(485))=tv=SATLiteral(1186))
1186 -475 -485 0
475 -1186 0
485 -1186 0
c ((SATLiteral(485) /\ SATLiteral(495))=tv=SATLiteral(1210))
1210 -485 -495 0
485 -1210 0
495 -1210 0
c ((SATLiteral(495) /\ SATLiteral(505))=tv=SATLiteral(1234))
1234 -495 -505 0
495 -1234 0
505 -1234 0
c ((SATLiteral(505) /\ SATLiteral(515))=tv=SATLiteral(1258))
1258 -505 -515 0
505 -1258 0
515 -1258 0
c ((SATLiteral(525) /\ SATLiteral(515))=tv=SATLiteral(1282))
1282 -525 -515 0
525 -1282 0
515 -1282 0
c ((SATLiteral(525) /\ SATLiteral(535))=tv=SATLiteral(1306))
1306 -525 -535 0
525 -1306 0
535 -1306 0
c ((SATLiteral(-1) /\ SATLiteral(466))=tv=SATLiteral(-1))
-1 1 -466 0
-1 1 0
466 1 0
c ((SATLiteral(476) /\ SATLiteral(466))=tv=SATLiteral(1165))
1165 -476 -466 0
476 -1165 0
466 -1165 0
c ((SATLiteral(476) /\ SATLiteral(486))=tv=SATLiteral(1189))
1189 -476 -486 0
476 -1189 0
486 -1189 0
c ((SATLiteral(486) /\ SATLiteral(496))=tv=SATLiteral(1213))
1213 -486 -496 0
486 -1213 0
496 -1213 0
c ((SATLiteral(496) /\ SATLiteral(506))=tv=SATLiteral(1237))
1237 -496 -506 0
496 -1237 0
506 -1237 0
c ((SATLiteral(506) /\ SATLiteral(516))=tv=SATLiteral(1261))
1261 -506 -516 0
506 -1261 0
516 -1261 0
c ((SATLiteral(526) /\ SATLiteral(516))=tv=SATLiteral(1285))
1285 -526 -516 0
526 -1285 0
516 -1285 0
c ((SATLiteral(526) /\ SATLiteral(536))=tv=SATLiteral(1309))
1309 -526 -536 0
526 -1309 0
536 -1309 0
c ((SATLiteral(-1) /\ SATLiteral(467))=tv=SATLiteral(-1))
-1 1 -467 0
-1 1 0
467 1 0
c ((SATLiteral(477) /\ SATLiteral(467))=tv=SATLiteral(1168))
1168 -477 -467 0
477 -1168 0
467 -1168 0
c ((SATLiteral(477) /\ SATLiteral(487))=tv=SATLiteral(1192))
1192 -477 -487 0
477 -1192 0
487 -1192 0
c ((SATLiteral(487) /\ SATLiteral(497))=tv=SATLiteral(1216))
1216 -487 -497 0
487 -1216 0
497 -1216 0
c ((SATLiteral(497) /\ SATLiteral(507))=tv=SATLiteral(1240))
1240 -497 -507 0
497 -1240 0
507 -1240 0
c ((SATLiteral(507) /\ SATLiteral(517))=tv=SATLiteral(1264))
1264 -507 -517 0
507 -1264 0
517 -1264 0
c ((SATLiteral(527) /\ SATLiteral(517))=tv=SATLiteral(1288))
1288 -527 -517 0
527 -1288 0
517 -1288 0
c ((SATLiteral(527) /\ SATLiteral(537))=tv=SATLiteral(1312))
1312 -527 -537 0
527 -1312 0
537 -1312 0
c ((SATLiteral(-1) /\ SATLiteral(468))=tv=SATLiteral(-1))
-1 1 -468 0
-1 1 0
468 1 0
c ((SATLiteral(478) /\ SATLiteral(468))=tv=SATLiteral(1171))
1171 -478 -468 0
478 -1171 0
468 -1171 0
c ((SATLiteral(478) /\ SATLiteral(488))=tv=SATLiteral(1195))
1195 -478 -488 0
478 -1195 0
488 -1195 0
c ((SATLiteral(488) /\ SATLiteral(498))=tv=SATLiteral(1219))
1219 -488 -498 0
488 -1219 0
498 -1219 0
c ((SATLiteral(498) /\ SATLiteral(508))=tv=SATLiteral(1243))
1243 -498 -508 0
498 -1243 0
508 -1243 0
c ((SATLiteral(508) /\ SATLiteral(518))=tv=SATLiteral(1267))
1267 -508 -518 0
508 -1267 0
518 -1267 0
c ((SATLiteral(528) /\ SATLiteral(518))=tv=SATLiteral(1291))
1291 -528 -518 0
528 -1291 0
518 -1291 0
c ((SATLiteral(528) /\ SATLiteral(538))=tv=SATLiteral(1315))
1315 -528 -538 0
528 -1315 0
538 -1315 0
c ((SATLiteral(1174) /\ SATLiteral(461))=tv=SATLiteral(1175))
1175 -1174 -461 0
1174 -1175 0
461 -1175 0
c ((SATLiteral(471) /\ SATLiteral(1198))=tv=SATLiteral(1199))
1199 -471 -1198 0
471 -1199 0
1198 -1199 0
c ((SATLiteral(1199) /\ SATLiteral(461))=tv=SATLiteral(1200))
1200 -1199 -461 0
1199 -1200 0
461 -1200 0
c ((SATLiteral(481) /\ SATLiteral(1222))=tv=SATLiteral(1223))
1223 -481 -1222 0
481 -1223 0
1222 -1223 0
c ((SATLiteral(471) /\ SATLiteral(1223))=tv=SATLiteral(1224))
1224 -471 -1223 0
471 -1224 0
1223 -1224 0
c ((SATLiteral(491) /\ SATLiteral(1246))=tv=SATLiteral(1247))
1247 -491 -1246 0
491 -1247 0
1246 -1247 0
c ((SATLiteral(481) /\ SATLiteral(1247))=tv=SATLiteral(1248))
1248 -481 -1247 0
481 -1248 0
1247 -1248 0
c ((SATLiteral(1270) /\ SATLiteral(501))=tv=SATLiteral(1271))
1271 -1270 -501 0
1270 -1271 0
501 -1271 0
c ((SATLiteral(1271) /\ SATLiteral(491))=tv=SATLiteral(1272))
1272 -1271 -491 0
1271 -1272 0
491 -1272 0
c ((SATLiteral(1294) /\ SATLiteral(511))=tv=SATLiteral(1295))
1295 -1294 -511 0
1294 -1295 0
511 -1295 0
c ((SATLiteral(1295) /\ SATLiteral(501))=tv=SATLiteral(1296))
1296 -1295 -501 0
1295 -1296 0
501 -1296 0
c ((SATLiteral(462) /\ SATLiteral(1177))=tv=SATLiteral(1178))
1178 -462 -1177 0
462 -1178 0
1177 -1178 0
c ((SATLiteral(472) /\ SATLiteral(1201))=tv=SATLiteral(1202))
1202 -472 -1201 0
472 -1202 0
1201 -1202 0
c ((SATLiteral(1202) /\ SATLiteral(462))=tv=SATLiteral(1203))
1203 -1202 -462 0
1202 -1203 0
462 -1203 0
c ((SATLiteral(482) /\ SATLiteral(1225))=tv=SATLiteral(1226))
1226 -482 -1225 0
482 -1226 0
1225 -1226 0
c ((SATLiteral(472) /\ SATLiteral(1226))=tv=SATLiteral(1227))
1227 -472 -1226 0
472 -1227 0
1226 -1227 0
c ((SATLiteral(492) /\ SATLiteral(1249))=tv=SATLiteral(1250))
1250 -492 -1249 0
492 -1250 0
1249 -1250 0
c ((SATLiteral(482) /\ SATLiteral(1250))=tv=SATLiteral(1251))
1251 -482 -1250 0
482 -1251 0
1250 -1251 0
c ((SATLiteral(1273) /\ SATLiteral(502))=tv=SATLiteral(1274))
1274 -1273 -502 0
1273 -1274 0
502 -1274 0
c ((SATLiteral(492) /\ SATLiteral(1274))=tv=SATLiteral(1275))
1275 -492 -1274 0
492 -1275 0
1274 -1275 0
c ((SATLiteral(1297) /\ SATLiteral(512))=tv=SATLiteral(1298))
1298 -1297 -512 0
1297 -1298 0
512 -1298 0
c ((SATLiteral(1298) /\ SATLiteral(502))=tv=SATLiteral(1299))
1299 -1298 -502 0
1298 -1299 0
502 -1299 0
c ((SATLiteral(1180) /\ SATLiteral(463))=tv=SATLiteral(1181))
1181 -1180 -463 0
1180 -1181 0
463 -1181 0
c ((SATLiteral(1204) /\ SATLiteral(473))=tv=SATLiteral(1205))
1205 -1204 -473 0
1204 -1205 0
473 -1205 0
c ((SATLiteral(1205) /\ SATLiteral(463))=tv=SATLiteral(1206))
1206 -1205 -463 0
1205 -1206 0
463 -1206 0
c ((SATLiteral(483) /\ SATLiteral(1228))=tv=SATLiteral(1229))
1229 -483 -1228 0
483 -1229 0
1228 -1229 0
c ((SATLiteral(473) /\ SATLiteral(1229))=tv=SATLiteral(1230))
1230 -473 -1229 0
473 -1230 0
1229 -1230 0
c ((SATLiteral(493) /\ SATLiteral(1252))=tv=SATLiteral(1253))
1253 -493 -1252 0
493 -1253 0
1252 -1253 0
c ((SATLiteral(483) /\ SATLiteral(1253))=tv=SATLiteral(1254))
1254 -483 -1253 0
483 -1254 0
1253 -1254 0
c ((SATLiteral(503) /\ SATLiteral(1276))=tv=SATLiteral(1277))
1277 -503 -1276 0
503 -1277 0
1276 -1277 0
c ((SATLiteral(493) /\ SATLiteral(1277))=tv=SATLiteral(1278))
1278 -493 -1277 0
493 -1278 0
1277 -1278 0
c ((SATLiteral(1300) /\ SATLiteral(513))=tv=SATLiteral(1301))
1301 -1300 -513 0
1300 -1301 0
513 -1301 0
c ((SATLiteral(503) /\ SATLiteral(1301))=tv=SATLiteral(1302))
1302 -503 -1301 0
503 -1302 0
1301 -1302 0
c ((SATLiteral(1183) /\ SATLiteral(464))=tv=SATLiteral(1184))
1184 -1183 -464 0
1183 -1184 0
464 -1184 0
c ((SATLiteral(474) /\ SATLiteral(1207))=tv=SATLiteral(1208))
1208 -474 -1207 0
474 -1208 0
1207 -1208 0
c ((SATLiteral(1208) /\ SATLiteral(464))=tv=SATLiteral(1209))
1209 -1208 -464 0
1208 -1209 0
464 -1209 0
c ((SATLiteral(1231) /\ SATLiteral(484))=tv=SATLiteral(1232))
1232 -1231 -484 0
1231 -1232 0
484 -1232 0
c ((SATLiteral(474) /\ SATLiteral(1232))=tv=SATLiteral(1233))
1233 -474 -1232 0
474 -1233 0
1232 -1233 0
c ((SATLiteral(1255) /\ SATLiteral(494))=tv=SATLiteral(1256))
1256 -1255 -494 0
1255 -1256 0
494 -1256 0
c ((SATLiteral(1256) /\ SATLiteral(484))=tv=SATLiteral(1257))
1257 -1256 -484 0
1256 -1257 0
484 -1257 0
c ((SATLiteral(1279) /\ SATLiteral(504))=tv=SATLiteral(1280))
1280 -1279 -504 0
1279 -1280 0
504 -1280 0
c ((SATLiteral(1280) /\ SATLiteral(494))=tv=SATLiteral(1281))
1281 -1280 -494 0
1280 -1281 0
494 -1281 0
c ((SATLiteral(1303) /\ SATLiteral(514))=tv=SATLiteral(1304))
1304 -1303 -514 0
1303 -1304 0
514 -1304 0
c ((SATLiteral(1304) /\ SATLiteral(504))=tv=SATLiteral(1305))
1305 -1304 -504 0
1304 -1305 0
504 -1305 0
c ((SATLiteral(1186) /\ SATLiteral(465))=tv=SATLiteral(1187))
1187 -1186 -465 0
1186 -1187 0
465 -1187 0
c ((SATLiteral(475) /\ SATLiteral(1210))=tv=SATLiteral(1211))
1211 -475 -1210 0
475 -1211 0
1210 -1211 0
c ((SATLiteral(1211) /\ SATLiteral(465))=tv=SATLiteral(1212))
1212 -1211 -465 0
1211 -1212 0
465 -1212 0
c ((SATLiteral(485) /\ SATLiteral(1234))=tv=SATLiteral(1235))
1235 -485 -1234 0
485 -1235 0
1234 -1235 0
c ((SATLiteral(475) /\ SATLiteral(1235))=tv=SATLiteral(1236))
1236 -475 -1235 0
475 -1236 0
1235 -1236 0
c ((SATLiteral(1258) /\ SATLiteral(495))=tv=SATLiteral(1259))
1259 -1258 -495 0
1258 -1259 0
495 -1259 0
c ((SATLiteral(485) /\ SATLiteral(1259))=tv=SATLiteral(1260))
1260 -485 -1259 0
485 -1260 0
1259 -1260 0
c ((SATLiteral(1282) /\ SATLiteral(505))=tv=SATLiteral(1283))
1283 -1282 -505 0
1282 -1283 0
505 -1283 0
c ((SATLiteral(1283) /\ SATLiteral(495))=tv=SATLiteral(1284))
1284 -1283 -495 0
1283 -1284 0
495 -1284 0
c ((SATLiteral(1306) /\ SATLiteral(515))=tv=SATLiteral(1307))
1307 -1306 -515 0
1306 -1307 0
515 -1307 0
c ((SATLiteral(1307) /\ SATLiteral(505))=tv=SATLiteral(1308))
1308 -1307 -505 0
1307 -1308 0
505 -1308 0
c ((SATLiteral(1189) /\ SATLiteral(466))=tv=SATLiteral(1190))
1190 -1189 -466 0
1189 -1190 0
466 -1190 0
c ((SATLiteral(476) /\ SATLiteral(1213))=tv=SATLiteral(1214))
1214 -476 -1213 0
476 -1214 0
1213 -1214 0
c ((SATLiteral(1214) /\ SATLiteral(466))=tv=SATLiteral(1215))
1215 -1214 -466 0
1214 -1215 0
466 -1215 0
c ((SATLiteral(486) /\ SATLiteral(1237))=tv=SATLiteral(1238))
1238 -486 -1237 0
486 -1238 0
1237 -1238 0
c ((SATLiteral(476) /\ SATLiteral(1238))=tv=SATLiteral(1239))
1239 -476 -1238 0
476 -1239 0
1238 -1239 0
c ((SATLiteral(496) /\ SATLiteral(1261))=tv=SATLiteral(1262))
1262 -496 -1261 0
496 -1262 0
1261 -1262 0
c ((SATLiteral(486) /\ SATLiteral(1262))=tv=SATLiteral(1263))
1263 -486 -1262 0
486 -1263 0
1262 -1263 0
c ((SATLiteral(1285) /\ SATLiteral(506))=tv=SATLiteral(1286))
1286 -1285 -506 0
1285 -1286 0
506 -1286 0
c ((SATLiteral(1286) /\ SATLiteral(496))=tv=SATLiteral(1287))
1287 -1286 -496 0
1286 -1287 0
496 -1287 0
c ((SATLiteral(1309) /\ SATLiteral(516))=tv=SATLiteral(1310))
1310 -1309 -516 0
1309 -1310 0
516 -1310 0
c ((SATLiteral(1310) /\ SATLiteral(506))=tv=SATLiteral(1311))
1311 -1310 -506 0
1310 -1311 0
506 -1311 0
c ((SATLiteral(467) /\ SATLiteral(1192))=tv=SATLiteral(1193))
1193 -467 -1192 0
467 -1193 0
1192 -1193 0
c ((SATLiteral(477) /\ SATLiteral(1216))=tv=SATLiteral(1217))
1217 -477 -1216 0
477 -1217 0
1216 -1217 0
c ((SATLiteral(467) /\ SATLiteral(1217))=tv=SATLiteral(1218))
1218 -467 -1217 0
467 -1218 0
1217 -1218 0
c ((SATLiteral(487) /\ SATLiteral(1240))=tv=SATLiteral(1241))
1241 -487 -1240 0
487 -1241 0
1240 -1241 0
c ((SATLiteral(477) /\ SATLiteral(1241))=tv=SATLiteral(1242))
1242 -477 -1241 0
477 -1242 0
1241 -1242 0
c ((SATLiteral(497) /\ SATLiteral(1264))=tv=SATLiteral(1265))
1265 -497 -1264 0
497 -1265 0
1264 -1265 0
c ((SATLiteral(487) /\ SATLiteral(1265))=tv=SATLiteral(1266))
1266 -487 -1265 0
487 -1266 0
1265 -1266 0
c ((SATLiteral(1288) /\ SATLiteral(507))=tv=SATLiteral(1289))
1289 -1288 -507 0
1288 -1289 0
507 -1289 0
c ((SATLiteral(497) /\ SATLiteral(1289))=tv=SATLiteral(1290))
1290 -497 -1289 0
497 -1290 0
1289 -1290 0
c ((SATLiteral(1312) /\ SATLiteral(517))=tv=SATLiteral(1313))
1313 -1312 -517 0
1312 -1313 0
517 -1313 0
c ((SATLiteral(1313) /\ SATLiteral(507))=tv=SATLiteral(1314))
1314 -1313 -507 0
1313 -1314 0
507 -1314 0
c ((SATLiteral(1195) /\ SATLiteral(468))=tv=SATLiteral(1196))
1196 -1195 -468 0
1195 -1196 0
468 -1196 0
c ((SATLiteral(478) /\ SATLiteral(1219))=tv=SATLiteral(1220))
1220 -478 -1219 0
478 -1220 0
1219 -1220 0
c ((SATLiteral(1220) /\ SATLiteral(468))=tv=SATLiteral(1221))
1221 -1220 -468 0
1220 -1221 0
468 -1221 0
c ((SATLiteral(1243) /\ SATLiteral(488))=tv=SATLiteral(1244))
1244 -1243 -488 0
1243 -1244 0
488 -1244 0
c ((SATLiteral(1244) /\ SATLiteral(478))=tv=SATLiteral(1245))
1245 -1244 -478 0
1244 -1245 0
478 -1245 0
c ((SATLiteral(498) /\ SATLiteral(1267))=tv=SATLiteral(1268))
1268 -498 -1267 0
498 -1268 0
1267 -1268 0
c ((SATLiteral(488) /\ SATLiteral(1268))=tv=SATLiteral(1269))
1269 -488 -1268 0
488 -1269 0
1268 -1269 0
c ((SATLiteral(508) /\ SATLiteral(1291))=tv=SATLiteral(1292))
1292 -508 -1291 0
508 -1292 0
1291 -1292 0
c ((SATLiteral(498) /\ SATLiteral(1292))=tv=SATLiteral(1293))
1293 -498 -1292 0
498 -1293 0
1292 -1293 0
c ((SATLiteral(1315) /\ SATLiteral(518))=tv=SATLiteral(1316))
1316 -1315 -518 0
1315 -1316 0
518 -1316 0
c ((SATLiteral(508) /\ SATLiteral(1316))=tv=SATLiteral(1317))
1317 -508 -1316 0
508 -1317 0
1316 -1317 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c SATLiteral(1)
1 0
c (SATLiteral(2102) -> SATLiteral(2441))
-2102 2441 0
c (SATLiteral(2110) -> SATLiteral(2443))
-2110 2443 0
c (SATLiteral(2118) -> SATLiteral(2445))
-2118 2445 0
c (SATLiteral(2126) -> SATLiteral(2447))
-2126 2447 0
c (SATLiteral(2134) -> SATLiteral(2449))
-2134 2449 0
c (SATLiteral(2142) -> SATLiteral(2451))
-2142 2451 0
c (SATLiteral(2150) -> SATLiteral(2453))
-2150 2453 0
c (SATLiteral(2158) -> SATLiteral(2455))
-2158 2455 0
c (SATLiteral(2103) -> SATLiteral(2457))
-2103 2457 0
c (SATLiteral(2111) -> SATLiteral(2459))
-2111 2459 0
c (SATLiteral(2119) -> SATLiteral(2461))
-2119 2461 0
c (SATLiteral(2127) -> SATLiteral(2463))
-2127 2463 0
c (SATLiteral(2135) -> SATLiteral(2465))
-2135 2465 0
c (SATLiteral(2143) -> SATLiteral(2467))
-2143 2467 0
c (SATLiteral(2151) -> SATLiteral(2469))
-2151 2469 0
c (SATLiteral(2159) -> SATLiteral(2471))
-2159 2471 0
c (SATLiteral(2104) -> SATLiteral(2473))
-2104 2473 0
c (SATLiteral(2112) -> SATLiteral(2475))
-2112 2475 0
c (SATLiteral(2120) -> SATLiteral(2477))
-2120 2477 0
c (SATLiteral(2128) -> SATLiteral(2479))
-2128 2479 0
c (SATLiteral(2136) -> SATLiteral(2481))
-2136 2481 0
c (SATLiteral(2144) -> SATLiteral(2483))
-2144 2483 0
c (SATLiteral(2152) -> SATLiteral(2485))
-2152 2485 0
c (SATLiteral(2160) -> SATLiteral(2487))
-2160 2487 0
c (SATLiteral(2105) -> SATLiteral(2489))
-2105 2489 0
c (SATLiteral(2113) -> SATLiteral(2491))
-2113 2491 0
c (SATLiteral(2121) -> SATLiteral(2493))
-2121 2493 0
c (SATLiteral(2129) -> SATLiteral(2495))
-2129 2495 0
c (SATLiteral(2137) -> SATLiteral(2497))
-2137 2497 0
c (SATLiteral(2145) -> SATLiteral(2499))
-2145 2499 0
c (SATLiteral(2153) -> SATLiteral(2501))
-2153 2501 0
c (SATLiteral(2161) -> SATLiteral(2503))
-2161 2503 0
c (SATLiteral(2106) -> SATLiteral(2505))
-2106 2505 0
c (SATLiteral(2114) -> SATLiteral(2507))
-2114 2507 0
c (SATLiteral(2122) -> SATLiteral(2509))
-2122 2509 0
c (SATLiteral(2130) -> SATLiteral(2511))
-2130 2511 0
c (SATLiteral(2138) -> SATLiteral(2513))
-2138 2513 0
c (SATLiteral(2146) -> SATLiteral(2515))
-2146 2515 0
c (SATLiteral(2154) -> SATLiteral(2517))
-2154 2517 0
c (SATLiteral(2162) -> SATLiteral(2519))
-2162 2519 0
c (SATLiteral(2107) -> SATLiteral(2521))
-2107 2521 0
c (SATLiteral(2115) -> SATLiteral(2523))
-2115 2523 0
c (SATLiteral(2123) -> SATLiteral(2525))
-2123 2525 0
c (SATLiteral(2131) -> SATLiteral(2527))
-2131 2527 0
c (SATLiteral(2139) -> SATLiteral(2529))
-2139 2529 0
c (SATLiteral(2147) -> SATLiteral(2531))
-2147 2531 0
c (SATLiteral(2155) -> SATLiteral(2533))
-2155 2533 0
c (SATLiteral(2163) -> SATLiteral(2535))
-2163 2535 0
c (SATLiteral(2108) -> SATLiteral(2537))
-2108 2537 0
c (SATLiteral(2116) -> SATLiteral(2539))
-2116 2539 0
c (SATLiteral(2124) -> SATLiteral(2541))
-2124 2541 0
c (SATLiteral(2132) -> SATLiteral(2543))
-2132 2543 0
c (SATLiteral(2140) -> SATLiteral(2545))
-2140 2545 0
c (SATLiteral(2148) -> SATLiteral(2547))
-2148 2547 0
c (SATLiteral(2156) -> SATLiteral(2549))
-2156 2549 0
c (SATLiteral(2164) -> SATLiteral(2551))
-2164 2551 0
c (SATLiteral(2109) -> SATLiteral(2553))
-2109 2553 0
c (SATLiteral(2117) -> SATLiteral(2555))
-2117 2555 0
c (SATLiteral(2125) -> SATLiteral(2557))
-2125 2557 0
c (SATLiteral(2133) -> SATLiteral(2559))
-2133 2559 0
c (SATLiteral(2141) -> SATLiteral(2561))
-2141 2561 0
c (SATLiteral(2149) -> SATLiteral(2563))
-2149 2563 0
c (SATLiteral(2157) -> SATLiteral(2565))
-2157 2565 0
c (SATLiteral(2165) -> SATLiteral(2567))
-2165 2567 0
c ((aux403 - aux404 - shift(num_occupied_by_types_00003, -64))<=0)
-1824 -2695 0
-1822 -2696 0
-1820 -2698 0
-1818 -2700 0
-1816 -2702 0
-1814 -2704 0
-1812 -2706 0
-1810 -2708 0
-1808 -2710 0
-1806 -2712 0
-1804 -2714 0
-1802 -2716 0
-1800 -2718 0
-1798 -2720 0
-1796 -2722 0
-1794 -2724 0
-1792 -2726 0
-1790 -2728 0
-1788 -2730 0
-1786 -2732 0
-1784 -2734 0
-1782 -2736 0
-1780 -2738 0
-1778 -2740 0
-1776 -2742 0
-1774 -2744 0
-1772 -2746 0
-1770 -2748 0
-1768 -2750 0
-1766 -2752 0
-1764 -2754 0
-1762 -2756 0
-1760 -2758 0
-1758 -2760 0
-1756 -2762 0
-1754 -2764 0
-1752 -2766 0
-1750 -2768 0
-1748 -2770 0
-1746 -2772 0
-1744 -2774 0
-1742 -2776 0
-1740 -2778 0
-1738 -2780 0
-1736 -2782 0
-1734 -2784 0
-1732 -2786 0
-1730 -2788 0
-1728 -2790 0
-1726 -2792 0
-1724 -2794 0
-1722 -2796 0
-1720 -2798 0
-1718 -2800 0
-1716 -2802 0
-1714 -2804 0
-1712 -2806 0
-1710 -2808 0
-1708 -2810 0
-1706 -2812 0
-1704 -2814 0
-1702 -2816 0
-1700 -2818 0
-1699 -2820 0
2568 -2695 0
2568 -1824 -2696 0
2568 -1822 -2698 0
2568 -1820 -2700 0
2568 -1818 -2702 0
2568 -1816 -2704 0
2568 -1814 -2706 0
2568 -1812 -2708 0
2568 -1810 -2710 0
2568 -1808 -2712 0
2568 -1806 -2714 0
2568 -1804 -2716 0
2568 -1802 -2718 0
2568 -1800 -2720 0
2568 -1798 -2722 0
2568 -1796 -2724 0
2568 -1794 -2726 0
2568 -1792 -2728 0
2568 -1790 -2730 0
2568 -1788 -2732 0
2568 -1786 -2734 0
2568 -1784 -2736 0
2568 -1782 -2738 0
2568 -1780 -2740 0
2568 -1778 -2742 0
2568 -1776 -2744 0
2568 -1774 -2746 0
2568 -1772 -2748 0
2568 -1770 -2750 0
2568 -1768 -2752 0
2568 -1766 -2754 0
2568 -1764 -2756 0
2568 -1762 -2758 0
2568 -1760 -2760 0
2568 -1758 -2762 0
2568 -1756 -2764 0
2568 -1754 -2766 0
2568 -1752 -2768 0
2568 -1750 -2770 0
2568 -1748 -2772 0
2568 -1746 -2774 0
2568 -1744 -2776 0
2568 -1742 -2778 0
2568 -1740 -2780 0
2568 -1738 -2782 0
2568 -1736 -2784 0
2568 -1734 -2786 0
2568 -1732 -2788 0
2568 -1730 -2790 0
2568 -1728 -2792 0
2568 -1726 -2794 0
2568 -1724 -2796 0
2568 -1722 -2798 0
2568 -1720 -2800 0
2568 -1718 -2802 0
2568 -1716 -2804 0
2568 -1714 -2806 0
2568 -1712 -2808 0
2568 -1710 -2810 0
2568 -1708 -2812 0
2568 -1706 -2814 0
2568 -1704 -2816 0
2568 -1702 -2818 0
2568 -1700 -2820 0
2568 -1699 -2822 0
2569 -2696 0
2569 -1824 -2698 0
2569 -1822 -2700 0
2569 -1820 -2702 0
2569 -1818 -2704 0
2569 -1816 -2706 0
2569 -1814 -2708 0
2569 -1812 -2710 0
2569 -1810 -2712 0
2569 -1808 -2714 0
2569 -1806 -2716 0
2569 -1804 -2718 0
2569 -1802 -2720 0
2569 -1800 -2722 0
2569 -1798 -2724 0
2569 -1796 -2726 0
2569 -1794 -2728 0
2569 -1792 -2730 0
2569 -1790 -2732 0
2569 -1788 -2734 0
2569 -1786 -2736 0
2569 -1784 -2738 0
2569 -1782 -2740 0
2569 -1780 -2742 0
2569 -1778 -2744 0
2569 -1776 -2746 0
2569 -1774 -2748 0
2569 -1772 -2750 0
2569 -1770 -2752 0
2569 -1768 -2754 0
2569 -1766 -2756 0
2569 -1764 -2758 0
2569 -1762 -2760 0
2569 -1760 -2762 0
2569 -1758 -2764 0
2569 -1756 -2766 0
2569 -1754 -2768 0
2569 -1752 -2770 0
2569 -1750 -2772 0
2569 -1748 -2774 0
2569 -1746 -2776 0
2569 -1744 -2778 0
2569 -1742 -2780 0
2569 -1740 -2782 0
2569 -1738 -2784 0
2569 -1736 -2786 0
2569 -1734 -2788 0
2569 -1732 -2790 0
2569 -1730 -2792 0
2569 -1728 -2794 0
2569 -1726 -2796 0
2569 -1724 -2798 0
2569 -1722 -2800 0
2569 -1720 -2802 0
2569 -1718 -2804 0
2569 -1716 -2806 0
2569 -1714 -2808 0
2569 -1712 -2810 0
2569 -1710 -2812 0
2569 -1708 -2814 0
2569 -1706 -2816 0
2569 -1704 -2818 0
2569 -1702 -2820 0
2569 -1700 -2822 0
2569 -1699 -2824 0
2571 -2698 0
2571 -1824 -2700 0
2571 -1822 -2702 0
2571 -1820 -2704 0
2571 -1818 -2706 0
2571 -1816 -2708 0
2571 -1814 -2710 0
2571 -1812 -2712 0
2571 -1810 -2714 0
2571 -1808 -2716 0
2571 -1806 -2718 0
2571 -1804 -2720 0
2571 -1802 -2722 0
2571 -1800 -2724 0
2571 -1798 -2726 0
2571 -1796 -2728 0
2571 -1794 -2730 0
2571 -1792 -2732 0
2571 -1790 -2734 0
2571 -1788 -2736 0
2571 -1786 -2738 0
2571 -1784 -2740 0
2571 -1782 -2742 0
2571 -1780 -2744 0
2571 -1778 -2746 0
2571 -1776 -2748 0
2571 -1774 -2750 0
2571 -1772 -2752 0
2571 -1770 -2754 0
2571 -1768 -2756 0
2571 -1766 -2758 0
2571 -1764 -2760 0
2571 -1762 -2762 0
2571 -1760 -2764 0
2571 -1758 -2766 0
2571 -1756 -2768 0
2571 -1754 -2770 0
2571 -1752 -2772 0
2571 -1750 -2774 0
2571 -1748 -2776 0
2571 -1746 -2778 0
2571 -1744 -2780 0
2571 -1742 -2782 0
2571 -1740 -2784 0
2571 -1738 -2786 0
2571 -1736 -2788 0
2571 -1734 -2790 0
2571 -1732 -2792 0
2571 -1730 -2794 0
2571 -1728 -2796 0
2571 -1726 -2798 0
2571 -1724 -2800 0
2571 -1722 -2802 0
2571 -1720 -2804 0
2571 -1718 -2806 0
2571 -1716 -2808 0
2571 -1714 -2810 0
2571 -1712 -2812 0
2571 -1710 -2814 0
2571 -1708 -2816 0
2571 -1706 -2818 0
2571 -1704 -2820 0
2571 -1702 -2822 0
2571 -1700 -2824 0
2571 -1699 -2826 0
2573 -2700 0
2573 -1824 -2702 0
2573 -1822 -2704 0
2573 -1820 -2706 0
2573 -1818 -2708 0
2573 -1816 -2710 0
2573 -1814 -2712 0
2573 -1812 -2714 0
2573 -1810 -2716 0
2573 -1808 -2718 0
2573 -1806 -2720 0
2573 -1804 -2722 0
2573 -1802 -2724 0
2573 -1800 -2726 0
2573 -1798 -2728 0
2573 -1796 -2730 0
2573 -1794 -2732 0
2573 -1792 -2734 0
2573 -1790 -2736 0
2573 -1788 -2738 0
2573 -1786 -2740 0
2573 -1784 -2742 0
2573 -1782 -2744 0
2573 -1780 -2746 0
2573 -1778 -2748 0
2573 -1776 -2750 0
2573 -1774 -2752 0
2573 -1772 -2754 0
2573 -1770 -2756 0
2573 -1768 -2758 0
2573 -1766 -2760 0
2573 -1764 -2762 0
2573 -1762 -2764 0
2573 -1760 -2766 0
2573 -1758 -2768 0
2573 -1756 -2770 0
2573 -1754 -2772 0
2573 -1752 -2774 0
2573 -1750 -2776 0
2573 -1748 -2778 0
2573 -1746 -2780 0
2573 -1744 -2782 0
2573 -1742 -2784 0
2573 -1740 -2786 0
2573 -1738 -2788 0
2573 -1736 -2790 0
2573 -1734 -2792 0
2573 -1732 -2794 0
2573 -1730 -2796 0
2573 -1728 -2798 0
2573 -1726 -2800 0
2573 -1724 -2802 0
2573 -1722 -2804 0
2573 -1720 -2806 0
2573 -1718 -2808 0
2573 -1716 -2810 0
2573 -1714 -2812 0
2573 -1712 -2814 0
2573 -1710 -2816 0
2573 -1708 -2818 0
2573 -1706 -2820 0
2573 -1704 -2822 0
2573 -1702 -2824 0
2573 -1700 -2826 0
2573 -1699 -2828 0
2575 -2702 0
2575 -1824 -2704 0
2575 -1822 -2706 0
2575 -1820 -2708 0
2575 -1818 -2710 0
2575 -1816 -2712 0
2575 -1814 -2714 0
2575 -1812 -2716 0
2575 -1810 -2718 0
2575 -1808 -2720 0
2575 -1806 -2722 0
2575 -1804 -2724 0
2575 -1802 -2726 0
2575 -1800 -2728 0
2575 -1798 -2730 0
2575 -1796 -2732 0
2575 -1794 -2734 0
2575 -1792 -2736 0
2575 -1790 -2738 0
2575 -1788 -2740 0
2575 -1786 -2742 0
2575 -1784 -2744 0
2575 -1782 -2746 0
2575 -1780 -2748 0
2575 -1778 -2750 0
2575 -1776 -2752 0
2575 -1774 -2754 0
2575 -1772 -2756 0
2575 -1770 -2758 0
2575 -1768 -2760 0
2575 -1766 -2762 0
2575 -1764 -2764 0
2575 -1762 -2766 0
2575 -1760 -2768 0
2575 -1758 -2770 0
2575 -1756 -2772 0
2575 -1754 -2774 0
2575 -1752 -2776 0
2575 -1750 -2778 0
2575 -1748 -2780 0
2575 -1746 -2782 0
2575 -1744 -2784 0
2575 -1742 -2786 0
2575 -1740 -2788 0
2575 -1738 -2790 0
2575 -1736 -2792 0
2575 -1734 -2794 0
2575 -1732 -2796 0
2575 -1730 -2798 0
2575 -1728 -2800 0
2575 -1726 -2802 0
2575 -1724 -2804 0
2575 -1722 -2806 0
2575 -1720 -2808 0
2575 -1718 -2810 0
2575 -1716 -2812 0
2575 -1714 -2814 0
2575 -1712 -2816 0
2575 -1710 -2818 0
2575 -1708 -2820 0
2575 -1706 -2822 0
2575 -1704 -2824 0
2575 -1702 -2826 0
2575 -1700 -2828 0
2575 -1699 -2830 0
2577 -2704 0
2577 -1824 -2706 0
2577 -1822 -2708 0
2577 -1820 -2710 0
2577 -1818 -2712 0
2577 -1816 -2714 0
2577 -1814 -2716 0
2577 -1812 -2718 0
2577 -1810 -2720 0
2577 -1808 -2722 0
2577 -1806 -2724 0
2577 -1804 -2726 0
2577 -1802 -2728 0
2577 -1800 -2730 0
2577 -1798 -2732 0
2577 -1796 -2734 0
2577 -1794 -2736 0
2577 -1792 -2738 0
2577 -1790 -2740 0
2577 -1788 -2742 0
2577 -1786 -2744 0
2577 -1784 -2746 0
2577 -1782 -2748 0
2577 -1780 -2750 0
2577 -1778 -2752 0
2577 -1776 -2754 0
2577 -1774 -2756 0
2577 -1772 -2758 0
2577 -1770 -2760 0
2577 -1768 -2762 0
2577 -1766 -2764 0
2577 -1764 -2766 0
2577 -1762 -2768 0
2577 -1760 -2770 0
2577 -1758 -2772 0
2577 -1756 -2774 0
2577 -1754 -2776 0
2577 -1752 -2778 0
2577 -1750 -2780 0
2577 -1748 -2782 0
2577 -1746 -2784 0
2577 -1744 -2786 0
2577 -1742 -2788 0
2577 -1740 -2790 0
2577 -1738 -2792 0
2577 -1736 -2794 0
2577 -1734 -2796 0
2577 -1732 -2798 0
2577 -1730 -2800 0
2577 -1728 -2802 0
2577 -1726 -2804 0
2577 -1724 -2806 0
2577 -1722 -2808 0
2577 -1720 -2810 0
2577 -1718 -2812 0
2577 -1716 -2814 0
2577 -1714 -2816 0
2577 -1712 -2818 0
2577 -1710 -2820 0
2577 -1708 -2822 0
2577 -1706 -2824 0
2577 -1704 -2826 0
2577 -1702 -2828 0
2577 -1700 -2830 0
2577 -1699 -2832 0
2579 -2706 0
2579 -1824 -2708 0
2579 -1822 -2710 0
2579 -1820 -2712 0
2579 -1818 -2714 0
2579 -1816 -2716 0
2579 -1814 -2718 0
2579 -1812 -2720 0
2579 -1810 -2722 0
2579 -1808 -2724 0
2579 -1806 -2726 0
2579 -1804 -2728 0
2579 -1802 -2730 0
2579 -1800 -2732 0
2579 -1798 -2734 0
2579 -1796 -2736 0
2579 -1794 -2738 0
2579 -1792 -2740 0
2579 -1790 -2742 0
2579 -1788 -2744 0
2579 -1786 -2746 0
2579 -1784 -2748 0
2579 -1782 -2750 0
2579 -1780 -2752 0
2579 -1778 -2754 0
2579 -1776 -2756 0
2579 -1774 -2758 0
2579 -1772 -2760 0
2579 -1770 -2762 0
2579 -1768 -2764 0
2579 -1766 -2766 0
2579 -1764 -2768 0
2579 -1762 -2770 0
2579 -1760 -2772 0
2579 -1758 -2774 0
2579 -1756 -2776 0
2579 -1754 -2778 0
2579 -1752 -2780 0
2579 -1750 -2782 0
2579 -1748 -2784 0
2579 -1746 -2786 0
2579 -1744 -2788 0
2579 -1742 -2790 0
2579 -1740 -2792 0
2579 -1738 -2794 0
2579 -1736 -2796 0
2579 -1734 -2798 0
2579 -1732 -2800 0
2579 -1730 -2802 0
2579 -1728 -2804 0
2579 -1726 -2806 0
2579 -1724 -2808 0
2579 -1722 -2810 0
2579 -1720 -2812 0
2579 -1718 -2814 0
2579 -1716 -2816 0
2579 -1714 -2818 0
2579 -1712 -2820 0
2579 -1710 -2822 0
2579 -1708 -2824 0
2579 -1706 -2826 0
2579 -1704 -2828 0
2579 -1702 -2830 0
2579 -1700 -2832 0
2579 -1699 -2834 0
2581 -2708 0
2581 -1824 -2710 0
2581 -1822 -2712 0
2581 -1820 -2714 0
2581 -1818 -2716 0
2581 -1816 -2718 0
2581 -1814 -2720 0
2581 -1812 -2722 0
2581 -1810 -2724 0
2581 -1808 -2726 0
2581 -1806 -2728 0
2581 -1804 -2730 0
2581 -1802 -2732 0
2581 -1800 -2734 0
2581 -1798 -2736 0
2581 -1796 -2738 0
2581 -1794 -2740 0
2581 -1792 -2742 0
2581 -1790 -2744 0
2581 -1788 -2746 0
2581 -1786 -2748 0
2581 -1784 -2750 0
2581 -1782 -2752 0
2581 -1780 -2754 0
2581 -1778 -2756 0
2581 -1776 -2758 0
2581 -1774 -2760 0
2581 -1772 -2762 0
2581 -1770 -2764 0
2581 -1768 -2766 0
2581 -1766 -2768 0
2581 -1764 -2770 0
2581 -1762 -2772 0
2581 -1760 -2774 0
2581 -1758 -2776 0
2581 -1756 -2778 0
2581 -1754 -2780 0
2581 -1752 -2782 0
2581 -1750 -2784 0
2581 -1748 -2786 0
2581 -1746 -2788 0
2581 -1744 -2790 0
2581 -1742 -2792 0
2581 -1740 -2794 0
2581 -1738 -2796 0
2581 -1736 -2798 0
2581 -1734 -2800 0
2581 -1732 -2802 0
2581 -1730 -2804 0
2581 -1728 -2806 0
2581 -1726 -2808 0
2581 -1724 -2810 0
2581 -1722 -2812 0
2581 -1720 -2814 0
2581 -1718 -2816 0
2581 -1716 -2818 0
2581 -1714 -2820 0
2581 -1712 -2822 0
2581 -1710 -2824 0
2581 -1708 -2826 0
2581 -1706 -2828 0
2581 -1704 -2830 0
2581 -1702 -2832 0
2581 -1700 -2834 0
2581 -1699 -2836 0
2583 -2710 0
2583 -1824 -2712 0
2583 -1822 -2714 0
2583 -1820 -2716 0
2583 -1818 -2718 0
2583 -1816 -2720 0
2583 -1814 -2722 0
2583 -1812 -2724 0
2583 -1810 -2726 0
2583 -1808 -2728 0
2583 -1806 -2730 0
2583 -1804 -2732 0
2583 -1802 -2734 0
2583 -1800 -2736 0
2583 -1798 -2738 0
2583 -1796 -2740 0
2583 -1794 -2742 0
2583 -1792 -2744 0
2583 -1790 -2746 0
2583 -1788 -2748 0
2583 -1786 -2750 0
2583 -1784 -2752 0
2583 -1782 -2754 0
2583 -1780 -2756 0
2583 -1778 -2758 0
2583 -1776 -2760 0
2583 -1774 -2762 0
2583 -1772 -2764 0
2583 -1770 -2766 0
2583 -1768 -2768 0
2583 -1766 -2770 0
2583 -1764 -2772 0
2583 -1762 -2774 0
2583 -1760 -2776 0
2583 -1758 -2778 0
2583 -1756 -2780 0
2583 -1754 -2782 0
2583 -1752 -2784 0
2583 -1750 -2786 0
2583 -1748 -2788 0
2583 -1746 -2790 0
2583 -1744 -2792 0
2583 -1742 -2794 0
2583 -1740 -2796 0
2583 -1738 -2798 0
2583 -1736 -2800 0
2583 -1734 -2802 0
2583 -1732 -2804 0
2583 -1730 -2806 0
2583 -1728 -2808 0
2583 -1726 -2810 0
2583 -1724 -2812 0
2583 -1722 -2814 0
2583 -1720 -2816 0
2583 -1718 -2818 0
2583 -1716 -2820 0
2583 -1714 -2822 0
2583 -1712 -2824 0
2583 -1710 -2826 0
2583 -1708 -2828 0
2583 -1706 -2830 0
2583 -1704 -2832 0
2583 -1702 -2834 0
2583 -1700 -2836 0
2583 -1699 -2838 0
2585 -2712 0
2585 -1824 -2714 0
2585 -1822 -2716 0
2585 -1820 -2718 0
2585 -1818 -2720 0
2585 -1816 -2722 0
2585 -1814 -2724 0
2585 -1812 -2726 0
2585 -1810 -2728 0
2585 -1808 -2730 0
2585 -1806 -2732 0
2585 -1804 -2734 0
2585 -1802 -2736 0
2585 -1800 -2738 0
2585 -1798 -2740 0
2585 -1796 -2742 0
2585 -1794 -2744 0
2585 -1792 -2746 0
2585 -1790 -2748 0
2585 -1788 -2750 0
2585 -1786 -2752 0
2585 -1784 -2754 0
2585 -1782 -2756 0
2585 -1780 -2758 0
2585 -1778 -2760 0
2585 -1776 -2762 0
2585 -1774 -2764 0
2585 -1772 -2766 0
2585 -1770 -2768 0
2585 -1768 -2770 0
2585 -1766 -2772 0
2585 -1764 -2774 0
2585 -1762 -2776 0
2585 -1760 -2778 0
2585 -1758 -2780 0
2585 -1756 -2782 0
2585 -1754 -2784 0
2585 -1752 -2786 0
2585 -1750 -2788 0
2585 -1748 -2790 0
2585 -1746 -2792 0
2585 -1744 -2794 0
2585 -1742 -2796 0
2585 -1740 -2798 0
2585 -1738 -2800 0
2585 -1736 -2802 0
2585 -1734 -2804 0
2585 -1732 -2806 0
2585 -1730 -2808 0
2585 -1728 -2810 0
2585 -1726 -2812 0
2585 -1724 -2814 0
2585 -1722 -2816 0
2585 -1720 -2818 0
2585 -1718 -2820 0
2585 -1716 -2822 0
2585 -1714 -2824 0
2585 -1712 -2826 0
2585 -1710 -2828 0
2585 -1708 -2830 0
2585 -1706 -2832 0
2585 -1704 -2834 0
2585 -1702 -2836 0
2585 -1700 -2838 0
2585 -1699 -2840 0
2587 -2714 0
2587 -1824 -2716 0
2587 -1822 -2718 0
2587 -1820 -2720 0
2587 -1818 -2722 0
2587 -1816 -2724 0
2587 -1814 -2726 0
2587 -1812 -2728 0
2587 -1810 -2730 0
2587 -1808 -2732 0
2587 -1806 -2734 0
2587 -1804 -2736 0
2587 -1802 -2738 0
2587 -1800 -2740 0
2587 -1798 -2742 0
2587 -1796 -2744 0
2587 -1794 -2746 0
2587 -1792 -2748 0
2587 -1790 -2750 0
2587 -1788 -2752 0
2587 -1786 -2754 0
2587 -1784 -2756 0
2587 -1782 -2758 0
2587 -1780 -2760 0
2587 -1778 -2762 0
2587 -1776 -2764 0
2587 -1774 -2766 0
2587 -1772 -2768 0
2587 -1770 -2770 0
2587 -1768 -2772 0
2587 -1766 -2774 0
2587 -1764 -2776 0
2587 -1762 -2778 0
2587 -1760 -2780 0
2587 -1758 -2782 0
2587 -1756 -2784 0
2587 -1754 -2786 0
2587 -1752 -2788 0
2587 -1750 -2790 0
2587 -1748 -2792 0
2587 -1746 -2794 0
2587 -1744 -2796 0
2587 -1742 -2798 0
2587 -1740 -2800 0
2587 -1738 -2802 0
2587 -1736 -2804 0
2587 -1734 -2806 0
2587 -1732 -2808 0
2587 -1730 -2810 0
2587 -1728 -2812 0
2587 -1726 -2814 0
2587 -1724 -2816 0
2587 -1722 -2818 0
2587 -1720 -2820 0
2587 -1718 -2822 0
2587 -1716 -2824 0
2587 -1714 -2826 0
2587 -1712 -2828 0
2587 -1710 -2830 0
2587 -1708 -2832 0
2587 -1706 -2834 0
2587 -1704 -2836 0
2587 -1702 -2838 0
2587 -1700 -2840 0
2587 -1699 -2842 0
2589 -2716 0
2589 -1824 -2718 0
2589 -1822 -2720 0
2589 -1820 -2722 0
2589 -1818 -2724 0
2589 -1816 -2726 0
2589 -1814 -2728 0
2589 -1812 -2730 0
2589 -1810 -2732 0
2589 -1808 -2734 0
2589 -1806 -2736 0
2589 -1804 -2738 0
2589 -1802 -2740 0
2589 -1800 -2742 0
2589 -1798 -2744 0
2589 -1796 -2746 0
2589 -1794 -2748 0
2589 -1792 -2750 0
2589 -1790 -2752 0
2589 -1788 -2754 0
2589 -1786 -2756 0
2589 -1784 -2758 0
2589 -1782 -2760 0
2589 -1780 -2762 0
2589 -1778 -2764 0
2589 -1776 -2766 0
2589 -1774 -2768 0
2589 -1772 -2770 0
2589 -1770 -2772 0
2589 -1768 -2774 0
2589 -1766 -2776 0
2589 -1764 -2778 0
2589 -1762 -2780 0
2589 -1760 -2782 0
2589 -1758 -2784 0
2589 -1756 -2786 0
2589 -1754 -2788 0
2589 -1752 -2790 0
2589 -1750 -2792 0
2589 -1748 -2794 0
2589 -1746 -2796 0
2589 -1744 -2798 0
2589 -1742 -2800 0
2589 -1740 -2802 0
2589 -1738 -2804 0
2589 -1736 -2806 0
2589 -1734 -2808 0
2589 -1732 -2810 0
2589 -1730 -2812 0
2589 -1728 -2814 0
2589 -1726 -2816 0
2589 -1724 -2818 0
2589 -1722 -2820 0
2589 -1720 -2822 0
2589 -1718 -2824 0
2589 -1716 -2826 0
2589 -1714 -2828 0
2589 -1712 -2830 0
2589 -1710 -2832 0
2589 -1708 -2834 0
2589 -1706 -2836 0
2589 -1704 -2838 0
2589 -1702 -2840 0
2589 -1700 -2842 0
2589 -1699 -2844 0
2591 -2718 0
2591 -1824 -2720 0
2591 -1822 -2722 0
2591 -1820 -2724 0
2591 -1818 -2726 0
2591 -1816 -2728 0
2591 -1814 -2730 0
2591 -1812 -2732 0
2591 -1810 -2734 0
2591 -1808 -2736 0
2591 -1806 -2738 0
2591 -1804 -2740 0
2591 -1802 -2742 0
2591 -1800 -2744 0
2591 -1798 -2746 0
2591 -1796 -2748 0
2591 -1794 -2750 0
2591 -1792 -2752 0
2591 -1790 -2754 0
2591 -1788 -2756 0
2591 -1786 -2758 0
2591 -1784 -2760 0
2591 -1782 -2762 0
2591 -1780 -2764 0
2591 -1778 -2766 0
2591 -1776 -2768 0
2591 -1774 -2770 0
2591 -1772 -2772 0
2591 -1770 -2774 0
2591 -1768 -2776 0
2591 -1766 -2778 0
2591 -1764 -2780 0
2591 -1762 -2782 0
2591 -1760 -2784 0
2591 -1758 -2786 0
2591 -1756 -2788 0
2591 -1754 -2790 0
2591 -1752 -2792 0
2591 -1750 -2794 0
2591 -1748 -2796 0
2591 -1746 -2798 0
2591 -1744 -2800 0
2591 -1742 -2802 0
2591 -1740 -2804 0
2591 -1738 -2806 0
2591 -1736 -2808 0
2591 -1734 -2810 0
2591 -1732 -2812 0
2591 -1730 -2814 0
2591 -1728 -2816 0
2591 -1726 -2818 0
2591 -1724 -2820 0
2591 -1722 -2822 0
2591 -1720 -2824 0
2591 -1718 -2826 0
2591 -1716 -2828 0
2591 -1714 -2830 0
2591 -1712 -2832 0
2591 -1710 -2834 0
2591 -1708 -2836 0
2591 -1706 -2838 0
2591 -1704 -2840 0
2591 -1702 -2842 0
2591 -1700 -2844 0
2591 -1699 -2846 0
2593 -2720 0
2593 -1824 -2722 0
2593 -1822 -2724 0
2593 -1820 -2726 0
2593 -1818 -2728 0
2593 -1816 -2730 0
2593 -1814 -2732 0
2593 -1812 -2734 0
2593 -1810 -2736 0
2593 -1808 -2738 0
2593 -1806 -2740 0
2593 -1804 -2742 0
2593 -1802 -2744 0
2593 -1800 -2746 0
2593 -1798 -2748 0
2593 -1796 -2750 0
2593 -1794 -2752 0
2593 -1792 -2754 0
2593 -1790 -2756 0
2593 -1788 -2758 0
2593 -1786 -2760 0
2593 -1784 -2762 0
2593 -1782 -2764 0
2593 -1780 -2766 0
2593 -1778 -2768 0
2593 -1776 -2770 0
2593 -1774 -2772 0
2593 -1772 -2774 0
2593 -1770 -2776 0
2593 -1768 -2778 0
2593 -1766 -2780 0
2593 -1764 -2782 0
2593 -1762 -2784 0
2593 -1760 -2786 0
2593 -1758 -2788 0
2593 -1756 -2790 0
2593 -1754 -2792 0
2593 -1752 -2794 0
2593 -1750 -2796 0
2593 -1748 -2798 0
2593 -1746 -2800 0
2593 -1744 -2802 0
2593 -1742 -2804 0
2593 -1740 -2806 0
2593 -1738 -2808 0
2593 -1736 -2810 0
2593 -1734 -2812 0
2593 -1732 -2814 0
2593 -1730 -2816 0
2593 -1728 -2818 0
2593 -1726 -2820 0
2593 -1724 -2822 0
2593 -1722 -2824 0
2593 -1720 -2826 0
2593 -1718 -2828 0
2593 -1716 -2830 0
2593 -1714 -2832 0
2593 -1712 -2834 0
2593 -1710 -2836 0
2593 -1708 -2838 0
2593 -1706 -2840 0
2593 -1704 -2842 0
2593 -1702 -2844 0
2593 -1700 -2846 0
2593 -1699 -2848 0
2595 -2722 0
2595 -1824 -2724 0
2595 -1822 -2726 0
2595 -1820 -2728 0
2595 -1818 -2730 0
2595 -1816 -2732 0
2595 -1814 -2734 0
2595 -1812 -2736 0
2595 -1810 -2738 0
2595 -1808 -2740 0
2595 -1806 -2742 0
2595 -1804 -2744 0
2595 -1802 -2746 0
2595 -1800 -2748 0
2595 -1798 -2750 0
2595 -1796 -2752 0
2595 -1794 -2754 0
2595 -1792 -2756 0
2595 -1790 -2758 0
2595 -1788 -2760 0
2595 -1786 -2762 0
2595 -1784 -2764 0
2595 -1782 -2766 0
2595 -1780 -2768 0
2595 -1778 -2770 0
2595 -1776 -2772 0
2595 -1774 -2774 0
2595 -1772 -2776 0
2595 -1770 -2778 0
2595 -1768 -2780 0
2595 -1766 -2782 0
2595 -1764 -2784 0
2595 -1762 -2786 0
2595 -1760 -2788 0
2595 -1758 -2790 0
2595 -1756 -2792 0
2595 -1754 -2794 0
2595 -1752 -2796 0
2595 -1750 -2798 0
2595 -1748 -2800 0
2595 -1746 -2802 0
2595 -1744 -2804 0
2595 -1742 -2806 0
2595 -1740 -2808 0
2595 -1738 -2810 0
2595 -1736 -2812 0
2595 -1734 -2814 0
2595 -1732 -2816 0
2595 -1730 -2818 0
2595 -1728 -2820 0
2595 -1726 -2822 0
2595 -1724 -2824 0
2595 -1722 -2826 0
2595 -1720 -2828 0
2595 -1718 -2830 0
2595 -1716 -2832 0
2595 -1714 -2834 0
2595 -1712 -2836 0
2595 -1710 -2838 0
2595 -1708 -2840 0
2595 -1706 -2842 0
2595 -1704 -2844 0
2595 -1702 -2846 0
2595 -1700 -2848 0
2595 -1699 -2850 0
2597 -2724 0
2597 -1824 -2726 0
2597 -1822 -2728 0
2597 -1820 -2730 0
2597 -1818 -2732 0
2597 -1816 -2734 0
2597 -1814 -2736 0
2597 -1812 -2738 0
2597 -1810 -2740 0
2597 -1808 -2742 0
2597 -1806 -2744 0
2597 -1804 -2746 0
2597 -1802 -2748 0
2597 -1800 -2750 0
2597 -1798 -2752 0
2597 -1796 -2754 0
2597 -1794 -2756 0
2597 -1792 -2758 0
2597 -1790 -2760 0
2597 -1788 -2762 0
2597 -1786 -2764 0
2597 -1784 -2766 0
2597 -1782 -2768 0
2597 -1780 -2770 0
2597 -1778 -2772 0
2597 -1776 -2774 0
2597 -1774 -2776 0
2597 -1772 -2778 0
2597 -1770 -2780 0
2597 -1768 -2782 0
2597 -1766 -2784 0
2597 -1764 -2786 0
2597 -1762 -2788 0
2597 -1760 -2790 0
2597 -1758 -2792 0
2597 -1756 -2794 0
2597 -1754 -2796 0
2597 -1752 -2798 0
2597 -1750 -2800 0
2597 -1748 -2802 0
2597 -1746 -2804 0
2597 -1744 -2806 0
2597 -1742 -2808 0
2597 -1740 -2810 0
2597 -1738 -2812 0
2597 -1736 -2814 0
2597 -1734 -2816 0
2597 -1732 -2818 0
2597 -1730 -2820 0
2597 -1728 -2822 0
2597 -1726 -2824 0
2597 -1724 -2826 0
2597 -1722 -2828 0
2597 -1720 -2830 0
2597 -1718 -2832 0
2597 -1716 -2834 0
2597 -1714 -2836 0
2597 -1712 -2838 0
2597 -1710 -2840 0
2597 -1708 -2842 0
2597 -1706 -2844 0
2597 -1704 -2846 0
2597 -1702 -2848 0
2597 -1700 -2850 0
2597 -1699 -2852 0
2599 -2726 0
2599 -1824 -2728 0
2599 -1822 -2730 0
2599 -1820 -2732 0
2599 -1818 -2734 0
2599 -1816 -2736 0
2599 -1814 -2738 0
2599 -1812 -2740 0
2599 -1810 -2742 0
2599 -1808 -2744 0
2599 -1806 -2746 0
2599 -1804 -2748 0
2599 -1802 -2750 0
2599 -1800 -2752 0
2599 -1798 -2754 0
2599 -1796 -2756 0
2599 -1794 -2758 0
2599 -1792 -2760 0
2599 -1790 -2762 0
2599 -1788 -2764 0
2599 -1786 -2766 0
2599 -1784 -2768 0
2599 -1782 -2770 0
2599 -1780 -2772 0
2599 -1778 -2774 0
2599 -1776 -2776 0
2599 -1774 -2778 0
2599 -1772 -2780 0
2599 -1770 -2782 0
2599 -1768 -2784 0
2599 -1766 -2786 0
2599 -1764 -2788 0
2599 -1762 -2790 0
2599 -1760 -2792 0
2599 -1758 -2794 0
2599 -1756 -2796 0
2599 -1754 -2798 0
2599 -1752 -2800 0
2599 -1750 -2802 0
2599 -1748 -2804 0
2599 -1746 -2806 0
2599 -1744 -2808 0
2599 -1742 -2810 0
2599 -1740 -2812 0
2599 -1738 -2814 0
2599 -1736 -2816 0
2599 -1734 -2818 0
2599 -1732 -2820 0
2599 -1730 -2822 0
2599 -1728 -2824 0
2599 -1726 -2826 0
2599 -1724 -2828 0
2599 -1722 -2830 0
2599 -1720 -2832 0
2599 -1718 -2834 0
2599 -1716 -2836 0
2599 -1714 -2838 0
2599 -1712 -2840 0
2599 -1710 -2842 0
2599 -1708 -2844 0
2599 -1706 -2846 0
2599 -1704 -2848 0
2599 -1702 -2850 0
2599 -1700 -2852 0
2599 -1699 -2854 0
2601 -2728 0
2601 -1824 -2730 0
2601 -1822 -2732 0
2601 -1820 -2734 0
2601 -1818 -2736 0
2601 -1816 -2738 0
2601 -1814 -2740 0
2601 -1812 -2742 0
2601 -1810 -2744 0
2601 -1808 -2746 0
2601 -1806 -2748 0
2601 -1804 -2750 0
2601 -1802 -2752 0
2601 -1800 -2754 0
2601 -1798 -2756 0
2601 -1796 -2758 0
2601 -1794 -2760 0
2601 -1792 -2762 0
2601 -1790 -2764 0
2601 -1788 -2766 0
2601 -1786 -2768 0
2601 -1784 -2770 0
2601 -1782 -2772 0
2601 -1780 -2774 0
2601 -1778 -2776 0
2601 -1776 -2778 0
2601 -1774 -2780 0
2601 -1772 -2782 0
2601 -1770 -2784 0
2601 -1768 -2786 0
2601 -1766 -2788 0
2601 -1764 -2790 0
2601 -1762 -2792 0
2601 -1760 -2794 0
2601 -1758 -2796 0
2601 -1756 -2798 0
2601 -1754 -2800 0
2601 -1752 -2802 0
2601 -1750 -2804 0
2601 -1748 -2806 0
2601 -1746 -2808 0
2601 -1744 -2810 0
2601 -1742 -2812 0
2601 -1740 -2814 0
2601 -1738 -2816 0
2601 -1736 -2818 0
2601 -1734 -2820 0
2601 -1732 -2822 0
2601 -1730 -2824 0
2601 -1728 -2826 0
2601 -1726 -2828 0
2601 -1724 -2830 0
2601 -1722 -2832 0
2601 -1720 -2834 0
2601 -1718 -2836 0
2601 -1716 -2838 0
2601 -1714 -2840 0
2601 -1712 -2842 0
2601 -1710 -2844 0
2601 -1708 -2846 0
2601 -1706 -2848 0
2601 -1704 -2850 0
2601 -1702 -2852 0
2601 -1700 -2854 0
2601 -1699 -2856 0
2603 -2730 0
2603 -1824 -2732 0
2603 -1822 -2734 0
2603 -1820 -2736 0
2603 -1818 -2738 0
2603 -1816 -2740 0
2603 -1814 -2742 0
2603 -1812 -2744 0
2603 -1810 -2746 0
2603 -1808 -2748 0
2603 -1806 -2750 0
2603 -1804 -2752 0
2603 -1802 -2754 0
2603 -1800 -2756 0
2603 -1798 -2758 0
2603 -1796 -2760 0
2603 -1794 -2762 0
2603 -1792 -2764 0
2603 -1790 -2766 0
2603 -1788 -2768 0
2603 -1786 -2770 0
2603 -1784 -2772 0
2603 -1782 -2774 0
2603 -1780 -2776 0
2603 -1778 -2778 0
2603 -1776 -2780 0
2603 -1774 -2782 0
2603 -1772 -2784 0
2603 -1770 -2786 0
2603 -1768 -2788 0
2603 -1766 -2790 0
2603 -1764 -2792 0
2603 -1762 -2794 0
2603 -1760 -2796 0
2603 -1758 -2798 0
2603 -1756 -2800 0
2603 -1754 -2802 0
2603 -1752 -2804 0
2603 -1750 -2806 0
2603 -1748 -2808 0
2603 -1746 -2810 0
2603 -1744 -2812 0
2603 -1742 -2814 0
2603 -1740 -2816 0
2603 -1738 -2818 0
2603 -1736 -2820 0
2603 -1734 -2822 0
2603 -1732 -2824 0
2603 -1730 -2826 0
2603 -1728 -2828 0
2603 -1726 -2830 0
2603 -1724 -2832 0
2603 -1722 -2834 0
2603 -1720 -2836 0
2603 -1718 -2838 0
2603 -1716 -2840 0
2603 -1714 -2842 0
2603 -1712 -2844 0
2603 -1710 -2846 0
2603 -1708 -2848 0
2603 -1706 -2850 0
2603 -1704 -2852 0
2603 -1702 -2854 0
2603 -1700 -2856 0
2603 -1699 -2858 0
2605 -2732 0
2605 -1824 -2734 0
2605 -1822 -2736 0
2605 -1820 -2738 0
2605 -1818 -2740 0
2605 -1816 -2742 0
2605 -1814 -2744 0
2605 -1812 -2746 0
2605 -1810 -2748 0
2605 -1808 -2750 0
2605 -1806 -2752 0
2605 -1804 -2754 0
2605 -1802 -2756 0
2605 -1800 -2758 0
2605 -1798 -2760 0
2605 -1796 -2762 0
2605 -1794 -2764 0
2605 -1792 -2766 0
2605 -1790 -2768 0
2605 -1788 -2770 0
2605 -1786 -2772 0
2605 -1784 -2774 0
2605 -1782 -2776 0
2605 -1780 -2778 0
2605 -1778 -2780 0
2605 -1776 -2782 0
2605 -1774 -2784 0
2605 -1772 -2786 0
2605 -1770 -2788 0
2605 -1768 -2790 0
2605 -1766 -2792 0
2605 -1764 -2794 0
2605 -1762 -2796 0
2605 -1760 -2798 0
2605 -1758 -2800 0
2605 -1756 -2802 0
2605 -1754 -2804 0
2605 -1752 -2806 0
2605 -1750 -2808 0
2605 -1748 -2810 0
2605 -1746 -2812 0
2605 -1744 -2814 0
2605 -1742 -2816 0
2605 -1740 -2818 0
2605 -1738 -2820 0
2605 -1736 -2822 0
2605 -1734 -2824 0
2605 -1732 -2826 0
2605 -1730 -2828 0
2605 -1728 -2830 0
2605 -1726 -2832 0
2605 -1724 -2834 0
2605 -1722 -2836 0
2605 -1720 -2838 0
2605 -1718 -2840 0
2605 -1716 -2842 0
2605 -1714 -2844 0
2605 -1712 -2846 0
2605 -1710 -2848 0
2605 -1708 -2850 0
2605 -1706 -2852 0
2605 -1704 -2854 0
2605 -1702 -2856 0
2605 -1700 -2858 0
2605 -1699 -2860 0
2607 -2734 0
2607 -1824 -2736 0
2607 -1822 -2738 0
2607 -1820 -2740 0
2607 -1818 -2742 0
2607 -1816 -2744 0
2607 -1814 -2746 0
2607 -1812 -2748 0
2607 -1810 -2750 0
2607 -1808 -2752 0
2607 -1806 -2754 0
2607 -1804 -2756 0
2607 -1802 -2758 0
2607 -1800 -2760 0
2607 -1798 -2762 0
2607 -1796 -2764 0
2607 -1794 -2766 0
2607 -1792 -2768 0
2607 -1790 -2770 0
2607 -1788 -2772 0
2607 -1786 -2774 0
2607 -1784 -2776 0
2607 -1782 -2778 0
2607 -1780 -2780 0
2607 -1778 -2782 0
2607 -1776 -2784 0
2607 -1774 -2786 0
2607 -1772 -2788 0
2607 -1770 -2790 0
2607 -1768 -2792 0
2607 -1766 -2794 0
2607 -1764 -2796 0
2607 -1762 -2798 0
2607 -1760 -2800 0
2607 -1758 -2802 0
2607 -1756 -2804 0
2607 -1754 -2806 0
2607 -1752 -2808 0
2607 -1750 -2810 0
2607 -1748 -2812 0
2607 -1746 -2814 0
2607 -1744 -2816 0
2607 -1742 -2818 0
2607 -1740 -2820 0
2607 -1738 -2822 0
2607 -1736 -2824 0
2607 -1734 -2826 0
2607 -1732 -2828 0
2607 -1730 -2830 0
2607 -1728 -2832 0
2607 -1726 -2834 0
2607 -1724 -2836 0
2607 -1722 -2838 0
2607 -1720 -2840 0
2607 -1718 -2842 0
2607 -1716 -2844 0
2607 -1714 -2846 0
2607 -1712 -2848 0
2607 -1710 -2850 0
2607 -1708 -2852 0
2607 -1706 -2854 0
2607 -1704 -2856 0
2607 -1702 -2858 0
2607 -1700 -2860 0
2607 -1699 -2862 0
2609 -2736 0
2609 -1824 -2738 0
2609 -1822 -2740 0
2609 -1820 -2742 0
2609 -1818 -2744 0
2609 -1816 -2746 0
2609 -1814 -2748 0
2609 -1812 -2750 0
2609 -1810 -2752 0
2609 -1808 -2754 0
2609 -1806 -2756 0
2609 -1804 -2758 0
2609 -1802 -2760 0
2609 -1800 -2762 0
2609 -1798 -2764 0
2609 -1796 -2766 0
2609 -1794 -2768 0
2609 -1792 -2770 0
2609 -1790 -2772 0
2609 -1788 -2774 0
2609 -1786 -2776 0
2609 -1784 -2778 0
2609 -1782 -2780 0
2609 -1780 -2782 0
2609 -1778 -2784 0
2609 -1776 -2786 0
2609 -1774 -2788 0
2609 -1772 -2790 0
2609 -1770 -2792 0
2609 -1768 -2794 0
2609 -1766 -2796 0
2609 -1764 -2798 0
2609 -1762 -2800 0
2609 -1760 -2802 0
2609 -1758 -2804 0
2609 -1756 -2806 0
2609 -1754 -2808 0
2609 -1752 -2810 0
2609 -1750 -2812 0
2609 -1748 -2814 0
2609 -1746 -2816 0
2609 -1744 -2818 0
2609 -1742 -2820 0
2609 -1740 -2822 0
2609 -1738 -2824 0
2609 -1736 -2826 0
2609 -1734 -2828 0
2609 -1732 -2830 0
2609 -1730 -2832 0
2609 -1728 -2834 0
2609 -1726 -2836 0
2609 -1724 -2838 0
2609 -1722 -2840 0
2609 -1720 -2842 0
2609 -1718 -2844 0
2609 -1716 -2846 0
2609 -1714 -2848 0
2609 -1712 -2850 0
2609 -1710 -2852 0
2609 -1708 -2854 0
2609 -1706 -2856 0
2609 -1704 -2858 0
2609 -1702 -2860 0
2609 -1700 -2862 0
2609 -1699 -2864 0
2611 -2738 0
2611 -1824 -2740 0
2611 -1822 -2742 0
2611 -1820 -2744 0
2611 -1818 -2746 0
2611 -1816 -2748 0
2611 -1814 -2750 0
2611 -1812 -2752 0
2611 -1810 -2754 0
2611 -1808 -2756 0
2611 -1806 -2758 0
2611 -1804 -2760 0
2611 -1802 -2762 0
2611 -1800 -2764 0
2611 -1798 -2766 0
2611 -1796 -2768 0
2611 -1794 -2770 0
2611 -1792 -2772 0
2611 -1790 -2774 0
2611 -1788 -2776 0
2611 -1786 -2778 0
2611 -1784 -2780 0
2611 -1782 -2782 0
2611 -1780 -2784 0
2611 -1778 -2786 0
2611 -1776 -2788 0
2611 -1774 -2790 0
2611 -1772 -2792 0
2611 -1770 -2794 0
2611 -1768 -2796 0
2611 -1766 -2798 0
2611 -1764 -2800 0
2611 -1762 -2802 0
2611 -1760 -2804 0
2611 -1758 -2806 0
2611 -1756 -2808 0
2611 -1754 -2810 0
2611 -1752 -2812 0
2611 -1750 -2814 0
2611 -1748 -2816 0
2611 -1746 -2818 0
2611 -1744 -2820 0
2611 -1742 -2822 0
2611 -1740 -2824 0
2611 -1738 -2826 0
2611 -1736 -2828 0
2611 -1734 -2830 0
2611 -1732 -2832 0
2611 -1730 -2834 0
2611 -1728 -2836 0
2611 -1726 -2838 0
2611 -1724 -2840 0
2611 -1722 -2842 0
2611 -1720 -2844 0
2611 -1718 -2846 0
2611 -1716 -2848 0
2611 -1714 -2850 0
2611 -1712 -2852 0
2611 -1710 -2854 0
2611 -1708 -2856 0
2611 -1706 -2858 0
2611 -1704 -2860 0
2611 -1702 -2862 0
2611 -1700 -2864 0
2611 -1699 -2866 0
2613 -2740 0
2613 -1824 -2742 0
2613 -1822 -2744 0
2613 -1820 -2746 0
2613 -1818 -2748 0
2613 -1816 -2750 0
2613 -1814 -2752 0
2613 -1812 -2754 0
2613 -1810 -2756 0
2613 -1808 -2758 0
2613 -1806 -2760 0
2613 -1804 -2762 0
2613 -1802 -2764 0
2613 -1800 -2766 0
2613 -1798 -2768 0
2613 -1796 -2770 0
2613 -1794 -2772 0
2613 -1792 -2774 0
2613 -1790 -2776 0
2613 -1788 -2778 0
2613 -1786 -2780 0
2613 -1784 -2782 0
2613 -1782 -2784 0
2613 -1780 -2786 0
2613 -1778 -2788 0
2613 -1776 -2790 0
2613 -1774 -2792 0
2613 -1772 -2794 0
2613 -1770 -2796 0
2613 -1768 -2798 0
2613 -1766 -2800 0
2613 -1764 -2802 0
2613 -1762 -2804 0
2613 -1760 -2806 0
2613 -1758 -2808 0
2613 -1756 -2810 0
2613 -1754 -2812 0
2613 -1752 -2814 0
2613 -1750 -2816 0
2613 -1748 -2818 0
2613 -1746 -2820 0
2613 -1744 -2822 0
2613 -1742 -2824 0
2613 -1740 -2826 0
2613 -1738 -2828 0
2613 -1736 -2830 0
2613 -1734 -2832 0
2613 -1732 -2834 0
2613 -1730 -2836 0
2613 -1728 -2838 0
2613 -1726 -2840 0
2613 -1724 -2842 0
2613 -1722 -2844 0
2613 -1720 -2846 0
2613 -1718 -2848 0
2613 -1716 -2850 0
2613 -1714 -2852 0
2613 -1712 -2854 0
2613 -1710 -2856 0
2613 -1708 -2858 0
2613 -1706 -2860 0
2613 -1704 -2862 0
2613 -1702 -2864 0
2613 -1700 -2866 0
2613 -1699 -2868 0
2615 -2742 0
2615 -1824 -2744 0
2615 -1822 -2746 0
2615 -1820 -2748 0
2615 -1818 -2750 0
2615 -1816 -2752 0
2615 -1814 -2754 0
2615 -1812 -2756 0
2615 -1810 -2758 0
2615 -1808 -2760 0
2615 -1806 -2762 0
2615 -1804 -2764 0
2615 -1802 -2766 0
2615 -1800 -2768 0
2615 -1798 -2770 0
2615 -1796 -2772 0
2615 -1794 -2774 0
2615 -1792 -2776 0
2615 -1790 -2778 0
2615 -1788 -2780 0
2615 -1786 -2782 0
2615 -1784 -2784 0
2615 -1782 -2786 0
2615 -1780 -2788 0
2615 -1778 -2790 0
2615 -1776 -2792 0
2615 -1774 -2794 0
2615 -1772 -2796 0
2615 -1770 -2798 0
2615 -1768 -2800 0
2615 -1766 -2802 0
2615 -1764 -2804 0
2615 -1762 -2806 0
2615 -1760 -2808 0
2615 -1758 -2810 0
2615 -1756 -2812 0
2615 -1754 -2814 0
2615 -1752 -2816 0
2615 -1750 -2818 0
2615 -1748 -2820 0
2615 -1746 -2822 0
2615 -1744 -2824 0
2615 -1742 -2826 0
2615 -1740 -2828 0
2615 -1738 -2830 0
2615 -1736 -2832 0
2615 -1734 -2834 0
2615 -1732 -2836 0
2615 -1730 -2838 0
2615 -1728 -2840 0
2615 -1726 -2842 0
2615 -1724 -2844 0
2615 -1722 -2846 0
2615 -1720 -2848 0
2615 -1718 -2850 0
2615 -1716 -2852 0
2615 -1714 -2854 0
2615 -1712 -2856 0
2615 -1710 -2858 0
2615 -1708 -2860 0
2615 -1706 -2862 0
2615 -1704 -2864 0
2615 -1702 -2866 0
2615 -1700 -2868 0
2615 -1699 -2870 0
2617 -2744 0
2617 -1824 -2746 0
2617 -1822 -2748 0
2617 -1820 -2750 0
2617 -1818 -2752 0
2617 -1816 -2754 0
2617 -1814 -2756 0
2617 -1812 -2758 0
2617 -1810 -2760 0
2617 -1808 -2762 0
2617 -1806 -2764 0
2617 -1804 -2766 0
2617 -1802 -2768 0
2617 -1800 -2770 0
2617 -1798 -2772 0
2617 -1796 -2774 0
2617 -1794 -2776 0
2617 -1792 -2778 0
2617 -1790 -2780 0
2617 -1788 -2782 0
2617 -1786 -2784 0
2617 -1784 -2786 0
2617 -1782 -2788 0
2617 -1780 -2790 0
2617 -1778 -2792 0
2617 -1776 -2794 0
2617 -1774 -2796 0
2617 -1772 -2798 0
2617 -1770 -2800 0
2617 -1768 -2802 0
2617 -1766 -2804 0
2617 -1764 -2806 0
2617 -1762 -2808 0
2617 -1760 -2810 0
2617 -1758 -2812 0
2617 -1756 -2814 0
2617 -1754 -2816 0
2617 -1752 -2818 0
2617 -1750 -2820 0
2617 -1748 -2822 0
2617 -1746 -2824 0
2617 -1744 -2826 0
2617 -1742 -2828 0
2617 -1740 -2830 0
2617 -1738 -2832 0
2617 -1736 -2834 0
2617 -1734 -2836 0
2617 -1732 -2838 0
2617 -1730 -2840 0
2617 -1728 -2842 0
2617 -1726 -2844 0
2617 -1724 -2846 0
2617 -1722 -2848 0
2617 -1720 -2850 0
2617 -1718 -2852 0
2617 -1716 -2854 0
2617 -1714 -2856 0
2617 -1712 -2858 0
2617 -1710 -2860 0
2617 -1708 -2862 0
2617 -1706 -2864 0
2617 -1704 -2866 0
2617 -1702 -2868 0
2617 -1700 -2870 0
2617 -1699 -2872 0
2619 -2746 0
2619 -1824 -2748 0
2619 -1822 -2750 0
2619 -1820 -2752 0
2619 -1818 -2754 0
2619 -1816 -2756 0
2619 -1814 -2758 0
2619 -1812 -2760 0
2619 -1810 -2762 0
2619 -1808 -2764 0
2619 -1806 -2766 0
2619 -1804 -2768 0
2619 -1802 -2770 0
2619 -1800 -2772 0
2619 -1798 -2774 0
2619 -1796 -2776 0
2619 -1794 -2778 0
2619 -1792 -2780 0
2619 -1790 -2782 0
2619 -1788 -2784 0
2619 -1786 -2786 0
2619 -1784 -2788 0
2619 -1782 -2790 0
2619 -1780 -2792 0
2619 -1778 -2794 0
2619 -1776 -2796 0
2619 -1774 -2798 0
2619 -1772 -2800 0
2619 -1770 -2802 0
2619 -1768 -2804 0
2619 -1766 -2806 0
2619 -1764 -2808 0
2619 -1762 -2810 0
2619 -1760 -2812 0
2619 -1758 -2814 0
2619 -1756 -2816 0
2619 -1754 -2818 0
2619 -1752 -2820 0
2619 -1750 -2822 0
2619 -1748 -2824 0
2619 -1746 -2826 0
2619 -1744 -2828 0
2619 -1742 -2830 0
2619 -1740 -2832 0
2619 -1738 -2834 0
2619 -1736 -2836 0
2619 -1734 -2838 0
2619 -1732 -2840 0
2619 -1730 -2842 0
2619 -1728 -2844 0
2619 -1726 -2846 0
2619 -1724 -2848 0
2619 -1722 -2850 0
2619 -1720 -2852 0
2619 -1718 -2854 0
2619 -1716 -2856 0
2619 -1714 -2858 0
2619 -1712 -2860 0
2619 -1710 -2862 0
2619 -1708 -2864 0
2619 -1706 -2866 0
2619 -1704 -2868 0
2619 -1702 -2870 0
2619 -1700 -2872 0
2619 -1699 -2874 0
2621 -2748 0
2621 -1824 -2750 0
2621 -1822 -2752 0
2621 -1820 -2754 0
2621 -1818 -2756 0
2621 -1816 -2758 0
2621 -1814 -2760 0
2621 -1812 -2762 0
2621 -1810 -2764 0
2621 -1808 -2766 0
2621 -1806 -2768 0
2621 -1804 -2770 0
2621 -1802 -2772 0
2621 -1800 -2774 0
2621 -1798 -2776 0
2621 -1796 -2778 0
2621 -1794 -2780 0
2621 -1792 -2782 0
2621 -1790 -2784 0
2621 -1788 -2786 0
2621 -1786 -2788 0
2621 -1784 -2790 0
2621 -1782 -2792 0
2621 -1780 -2794 0
2621 -1778 -2796 0
2621 -1776 -2798 0
2621 -1774 -2800 0
2621 -1772 -2802 0
2621 -1770 -2804 0
2621 -1768 -2806 0
2621 -1766 -2808 0
2621 -1764 -2810 0
2621 -1762 -2812 0
2621 -1760 -2814 0
2621 -1758 -2816 0
2621 -1756 -2818 0
2621 -1754 -2820 0
2621 -1752 -2822 0
2621 -1750 -2824 0
2621 -1748 -2826 0
2621 -1746 -2828 0
2621 -1744 -2830 0
2621 -1742 -2832 0
2621 -1740 -2834 0
2621 -1738 -2836 0
2621 -1736 -2838 0
2621 -1734 -2840 0
2621 -1732 -2842 0
2621 -1730 -2844 0
2621 -1728 -2846 0
2621 -1726 -2848 0
2621 -1724 -2850 0
2621 -1722 -2852 0
2621 -1720 -2854 0
2621 -1718 -2856 0
2621 -1716 -2858 0
2621 -1714 -2860 0
2621 -1712 -2862 0
2621 -1710 -2864 0
2621 -1708 -2866 0
2621 -1706 -2868 0
2621 -1704 -2870 0
2621 -1702 -2872 0
2621 -1700 -2874 0
2621 -1699 -2876 0
2623 -2750 0
2623 -1824 -2752 0
2623 -1822 -2754 0
2623 -1820 -2756 0
2623 -1818 -2758 0
2623 -1816 -2760 0
2623 -1814 -2762 0
2623 -1812 -2764 0
2623 -1810 -2766 0
2623 -1808 -2768 0
2623 -1806 -2770 0
2623 -1804 -2772 0
2623 -1802 -2774 0
2623 -1800 -2776 0
2623 -1798 -2778 0
2623 -1796 -2780 0
2623 -1794 -2782 0
2623 -1792 -2784 0
2623 -1790 -2786 0
2623 -1788 -2788 0
2623 -1786 -2790 0
2623 -1784 -2792 0
2623 -1782 -2794 0
2623 -1780 -2796 0
2623 -1778 -2798 0
2623 -1776 -2800 0
2623 -1774 -2802 0
2623 -1772 -2804 0
2623 -1770 -2806 0
2623 -1768 -2808 0
2623 -1766 -2810 0
2623 -1764 -2812 0
2623 -1762 -2814 0
2623 -1760 -2816 0
2623 -1758 -2818 0
2623 -1756 -2820 0
2623 -1754 -2822 0
2623 -1752 -2824 0
2623 -1750 -2826 0
2623 -1748 -2828 0
2623 -1746 -2830 0
2623 -1744 -2832 0
2623 -1742 -2834 0
2623 -1740 -2836 0
2623 -1738 -2838 0
2623 -1736 -2840 0
2623 -1734 -2842 0
2623 -1732 -2844 0
2623 -1730 -2846 0
2623 -1728 -2848 0
2623 -1726 -2850 0
2623 -1724 -2852 0
2623 -1722 -2854 0
2623 -1720 -2856 0
2623 -1718 -2858 0
2623 -1716 -2860 0
2623 -1714 -2862 0
2623 -1712 -2864 0
2623 -1710 -2866 0
2623 -1708 -2868 0
2623 -1706 -2870 0
2623 -1704 -2872 0
2623 -1702 -2874 0
2623 -1700 -2876 0
2623 -1699 -2878 0
2625 -2752 0
2625 -1824 -2754 0
2625 -1822 -2756 0
2625 -1820 -2758 0
2625 -1818 -2760 0
2625 -1816 -2762 0
2625 -1814 -2764 0
2625 -1812 -2766 0
2625 -1810 -2768 0
2625 -1808 -2770 0
2625 -1806 -2772 0
2625 -1804 -2774 0
2625 -1802 -2776 0
2625 -1800 -2778 0
2625 -1798 -2780 0
2625 -1796 -2782 0
2625 -1794 -2784 0
2625 -1792 -2786 0
2625 -1790 -2788 0
2625 -1788 -2790 0
2625 -1786 -2792 0
2625 -1784 -2794 0
2625 -1782 -2796 0
2625 -1780 -2798 0
2625 -1778 -2800 0
2625 -1776 -2802 0
2625 -1774 -2804 0
2625 -1772 -2806 0
2625 -1770 -2808 0
2625 -1768 -2810 0
2625 -1766 -2812 0
2625 -1764 -2814 0
2625 -1762 -2816 0
2625 -1760 -2818 0
2625 -1758 -2820 0
2625 -1756 -2822 0
2625 -1754 -2824 0
2625 -1752 -2826 0
2625 -1750 -2828 0
2625 -1748 -2830 0
2625 -1746 -2832 0
2625 -1744 -2834 0
2625 -1742 -2836 0
2625 -1740 -2838 0
2625 -1738 -2840 0
2625 -1736 -2842 0
2625 -1734 -2844 0
2625 -1732 -2846 0
2625 -1730 -2848 0
2625 -1728 -2850 0
2625 -1726 -2852 0
2625 -1724 -2854 0
2625 -1722 -2856 0
2625 -1720 -2858 0
2625 -1718 -2860 0
2625 -1716 -2862 0
2625 -1714 -2864 0
2625 -1712 -2866 0
2625 -1710 -2868 0
2625 -1708 -2870 0
2625 -1706 -2872 0
2625 -1704 -2874 0
2625 -1702 -2876 0
2625 -1700 -2878 0
2625 -1699 -2880 0
2627 -2754 0
2627 -1824 -2756 0
2627 -1822 -2758 0
2627 -1820 -2760 0
2627 -1818 -2762 0
2627 -1816 -2764 0
2627 -1814 -2766 0
2627 -1812 -2768 0
2627 -1810 -2770 0
2627 -1808 -2772 0
2627 -1806 -2774 0
2627 -1804 -2776 0
2627 -1802 -2778 0
2627 -1800 -2780 0
2627 -1798 -2782 0
2627 -1796 -2784 0
2627 -1794 -2786 0
2627 -1792 -2788 0
2627 -1790 -2790 0
2627 -1788 -2792 0
2627 -1786 -2794 0
2627 -1784 -2796 0
2627 -1782 -2798 0
2627 -1780 -2800 0
2627 -1778 -2802 0
2627 -1776 -2804 0
2627 -1774 -2806 0
2627 -1772 -2808 0
2627 -1770 -2810 0
2627 -1768 -2812 0
2627 -1766 -2814 0
2627 -1764 -2816 0
2627 -1762 -2818 0
2627 -1760 -2820 0
2627 -1758 -2822 0
2627 -1756 -2824 0
2627 -1754 -2826 0
2627 -1752 -2828 0
2627 -1750 -2830 0
2627 -1748 -2832 0
2627 -1746 -2834 0
2627 -1744 -2836 0
2627 -1742 -2838 0
2627 -1740 -2840 0
2627 -1738 -2842 0
2627 -1736 -2844 0
2627 -1734 -2846 0
2627 -1732 -2848 0
2627 -1730 -2850 0
2627 -1728 -2852 0
2627 -1726 -2854 0
2627 -1724 -2856 0
2627 -1722 -2858 0
2627 -1720 -2860 0
2627 -1718 -2862 0
2627 -1716 -2864 0
2627 -1714 -2866 0
2627 -1712 -2868 0
2627 -1710 -2870 0
2627 -1708 -2872 0
2627 -1706 -2874 0
2627 -1704 -2876 0
2627 -1702 -2878 0
2627 -1700 -2880 0
2627 -1699 -2882 0
2629 -2756 0
2629 -1824 -2758 0
2629 -1822 -2760 0
2629 -1820 -2762 0
2629 -1818 -2764 0
2629 -1816 -2766 0
2629 -1814 -2768 0
2629 -1812 -2770 0
2629 -1810 -2772 0
2629 -1808 -2774 0
2629 -1806 -2776 0
2629 -1804 -2778 0
2629 -1802 -2780 0
2629 -1800 -2782 0
2629 -1798 -2784 0
2629 -1796 -2786 0
2629 -1794 -2788 0
2629 -1792 -2790 0
2629 -1790 -2792 0
2629 -1788 -2794 0
2629 -1786 -2796 0
2629 -1784 -2798 0
2629 -1782 -2800 0
2629 -1780 -2802 0
2629 -1778 -2804 0
2629 -1776 -2806 0
2629 -1774 -2808 0
2629 -1772 -2810 0
2629 -1770 -2812 0
2629 -1768 -2814 0
2629 -1766 -2816 0
2629 -1764 -2818 0
2629 -1762 -2820 0
2629 -1760 -2822 0
2629 -1758 -2824 0
2629 -1756 -2826 0
2629 -1754 -2828 0
2629 -1752 -2830 0
2629 -1750 -2832 0
2629 -1748 -2834 0
2629 -1746 -2836 0
2629 -1744 -2838 0
2629 -1742 -2840 0
2629 -1740 -2842 0
2629 -1738 -2844 0
2629 -1736 -2846 0
2629 -1734 -2848 0
2629 -1732 -2850 0
2629 -1730 -2852 0
2629 -1728 -2854 0
2629 -1726 -2856 0
2629 -1724 -2858 0
2629 -1722 -2860 0
2629 -1720 -2862 0
2629 -1718 -2864 0
2629 -1716 -2866 0
2629 -1714 -2868 0
2629 -1712 -2870 0
2629 -1710 -2872 0
2629 -1708 -2874 0
2629 -1706 -2876 0
2629 -1704 -2878 0
2629 -1702 -2880 0
2629 -1700 -2882 0
2629 -1699 -2884 0
2631 -2758 0
2631 -1824 -2760 0
2631 -1822 -2762 0
2631 -1820 -2764 0
2631 -1818 -2766 0
2631 -1816 -2768 0
2631 -1814 -2770 0
2631 -1812 -2772 0
2631 -1810 -2774 0
2631 -1808 -2776 0
2631 -1806 -2778 0
2631 -1804 -2780 0
2631 -1802 -2782 0
2631 -1800 -2784 0
2631 -1798 -2786 0
2631 -1796 -2788 0
2631 -1794 -2790 0
2631 -1792 -2792 0
2631 -1790 -2794 0
2631 -1788 -2796 0
2631 -1786 -2798 0
2631 -1784 -2800 0
2631 -1782 -2802 0
2631 -1780 -2804 0
2631 -1778 -2806 0
2631 -1776 -2808 0
2631 -1774 -2810 0
2631 -1772 -2812 0
2631 -1770 -2814 0
2631 -1768 -2816 0
2631 -1766 -2818 0
2631 -1764 -2820 0
2631 -1762 -2822 0
2631 -1760 -2824 0
2631 -1758 -2826 0
2631 -1756 -2828 0
2631 -1754 -2830 0
2631 -1752 -2832 0
2631 -1750 -2834 0
2631 -1748 -2836 0
2631 -1746 -2838 0
2631 -1744 -2840 0
2631 -1742 -2842 0
2631 -1740 -2844 0
2631 -1738 -2846 0
2631 -1736 -2848 0
2631 -1734 -2850 0
2631 -1732 -2852 0
2631 -1730 -2854 0
2631 -1728 -2856 0
2631 -1726 -2858 0
2631 -1724 -2860 0
2631 -1722 -2862 0
2631 -1720 -2864 0
2631 -1718 -2866 0
2631 -1716 -2868 0
2631 -1714 -2870 0
2631 -1712 -2872 0
2631 -1710 -2874 0
2631 -1708 -2876 0
2631 -1706 -2878 0
2631 -1704 -2880 0
2631 -1702 -2882 0
2631 -1700 -2884 0
2631 -1699 -2886 0
2633 -2760 0
2633 -1824 -2762 0
2633 -1822 -2764 0
2633 -1820 -2766 0
2633 -1818 -2768 0
2633 -1816 -2770 0
2633 -1814 -2772 0
2633 -1812 -2774 0
2633 -1810 -2776 0
2633 -1808 -2778 0
2633 -1806 -2780 0
2633 -1804 -2782 0
2633 -1802 -2784 0
2633 -1800 -2786 0
2633 -1798 -2788 0
2633 -1796 -2790 0
2633 -1794 -2792 0
2633 -1792 -2794 0
2633 -1790 -2796 0
2633 -1788 -2798 0
2633 -1786 -2800 0
2633 -1784 -2802 0
2633 -1782 -2804 0
2633 -1780 -2806 0
2633 -1778 -2808 0
2633 -1776 -2810 0
2633 -1774 -2812 0
2633 -1772 -2814 0
2633 -1770 -2816 0
2633 -1768 -2818 0
2633 -1766 -2820 0
2633 -1764 -2822 0
2633 -1762 -2824 0
2633 -1760 -2826 0
2633 -1758 -2828 0
2633 -1756 -2830 0
2633 -1754 -2832 0
2633 -1752 -2834 0
2633 -1750 -2836 0
2633 -1748 -2838 0
2633 -1746 -2840 0
2633 -1744 -2842 0
2633 -1742 -2844 0
2633 -1740 -2846 0
2633 -1738 -2848 0
2633 -1736 -2850 0
2633 -1734 -2852 0
2633 -1732 -2854 0
2633 -1730 -2856 0
2633 -1728 -2858 0
2633 -1726 -2860 0
2633 -1724 -2862 0
2633 -1722 -2864 0
2633 -1720 -2866 0
2633 -1718 -2868 0
2633 -1716 -2870 0
2633 -1714 -2872 0
2633 -1712 -2874 0
2633 -1710 -2876 0
2633 -1708 -2878 0
2633 -1706 -2880 0
2633 -1704 -2882 0
2633 -1702 -2884 0
2633 -1700 -2886 0
2633 -1699 -2888 0
2635 -2762 0
2635 -1824 -2764 0
2635 -1822 -2766 0
2635 -1820 -2768 0
2635 -1818 -2770 0
2635 -1816 -2772 0
2635 -1814 -2774 0
2635 -1812 -2776 0
2635 -1810 -2778 0
2635 -1808 -2780 0
2635 -1806 -2782 0
2635 -1804 -2784 0
2635 -1802 -2786 0
2635 -1800 -2788 0
2635 -1798 -2790 0
2635 -1796 -2792 0
2635 -1794 -2794 0
2635 -1792 -2796 0
2635 -1790 -2798 0
2635 -1788 -2800 0
2635 -1786 -2802 0
2635 -1784 -2804 0
2635 -1782 -2806 0
2635 -1780 -2808 0
2635 -1778 -2810 0
2635 -1776 -2812 0
2635 -1774 -2814 0
2635 -1772 -2816 0
2635 -1770 -2818 0
2635 -1768 -2820 0
2635 -1766 -2822 0
2635 -1764 -2824 0
2635 -1762 -2826 0
2635 -1760 -2828 0
2635 -1758 -2830 0
2635 -1756 -2832 0
2635 -1754 -2834 0
2635 -1752 -2836 0
2635 -1750 -2838 0
2635 -1748 -2840 0
2635 -1746 -2842 0
2635 -1744 -2844 0
2635 -1742 -2846 0
2635 -1740 -2848 0
2635 -1738 -2850 0
2635 -1736 -2852 0
2635 -1734 -2854 0
2635 -1732 -2856 0
2635 -1730 -2858 0
2635 -1728 -2860 0
2635 -1726 -2862 0
2635 -1724 -2864 0
2635 -1722 -2866 0
2635 -1720 -2868 0
2635 -1718 -2870 0
2635 -1716 -2872 0
2635 -1714 -2874 0
2635 -1712 -2876 0
2635 -1710 -2878 0
2635 -1708 -2880 0
2635 -1706 -2882 0
2635 -1704 -2884 0
2635 -1702 -2886 0
2635 -1700 -2888 0
2635 -1699 -2890 0
2637 -2764 0
2637 -1824 -2766 0
2637 -1822 -2768 0
2637 -1820 -2770 0
2637 -1818 -2772 0
2637 -1816 -2774 0
2637 -1814 -2776 0
2637 -1812 -2778 0
2637 -1810 -2780 0
2637 -1808 -2782 0
2637 -1806 -2784 0
2637 -1804 -2786 0
2637 -1802 -2788 0
2637 -1800 -2790 0
2637 -1798 -2792 0
2637 -1796 -2794 0
2637 -1794 -2796 0
2637 -1792 -2798 0
2637 -1790 -2800 0
2637 -1788 -2802 0
2637 -1786 -2804 0
2637 -1784 -2806 0
2637 -1782 -2808 0
2637 -1780 -2810 0
2637 -1778 -2812 0
2637 -1776 -2814 0
2637 -1774 -2816 0
2637 -1772 -2818 0
2637 -1770 -2820 0
2637 -1768 -2822 0
2637 -1766 -2824 0
2637 -1764 -2826 0
2637 -1762 -2828 0
2637 -1760 -2830 0
2637 -1758 -2832 0
2637 -1756 -2834 0
2637 -1754 -2836 0
2637 -1752 -2838 0
2637 -1750 -2840 0
2637 -1748 -2842 0
2637 -1746 -2844 0
2637 -1744 -2846 0
2637 -1742 -2848 0
2637 -1740 -2850 0
2637 -1738 -2852 0
2637 -1736 -2854 0
2637 -1734 -2856 0
2637 -1732 -2858 0
2637 -1730 -2860 0
2637 -1728 -2862 0
2637 -1726 -2864 0
2637 -1724 -2866 0
2637 -1722 -2868 0
2637 -1720 -2870 0
2637 -1718 -2872 0
2637 -1716 -2874 0
2637 -1714 -2876 0
2637 -1712 -2878 0
2637 -1710 -2880 0
2637 -1708 -2882 0
2637 -1706 -2884 0
2637 -1704 -2886 0
2637 -1702 -2888 0
2637 -1700 -2890 0
2637 -1699 -2892 0
2639 -2766 0
2639 -1824 -2768 0
2639 -1822 -2770 0
2639 -1820 -2772 0
2639 -1818 -2774 0
2639 -1816 -2776 0
2639 -1814 -2778 0
2639 -1812 -2780 0
2639 -1810 -2782 0
2639 -1808 -2784 0
2639 -1806 -2786 0
2639 -1804 -2788 0
2639 -1802 -2790 0
2639 -1800 -2792 0
2639 -1798 -2794 0
2639 -1796 -2796 0
2639 -1794 -2798 0
2639 -1792 -2800 0
2639 -1790 -2802 0
2639 -1788 -2804 0
2639 -1786 -2806 0
2639 -1784 -2808 0
2639 -1782 -2810 0
2639 -1780 -2812 0
2639 -1778 -2814 0
2639 -1776 -2816 0
2639 -1774 -2818 0
2639 -1772 -2820 0
2639 -1770 -2822 0
2639 -1768 -2824 0
2639 -1766 -2826 0
2639 -1764 -2828 0
2639 -1762 -2830 0
2639 -1760 -2832 0
2639 -1758 -2834 0
2639 -1756 -2836 0
2639 -1754 -2838 0
2639 -1752 -2840 0
2639 -1750 -2842 0
2639 -1748 -2844 0
2639 -1746 -2846 0
2639 -1744 -2848 0
2639 -1742 -2850 0
2639 -1740 -2852 0
2639 -1738 -2854 0
2639 -1736 -2856 0
2639 -1734 -2858 0
2639 -1732 -2860 0
2639 -1730 -2862 0
2639 -1728 -2864 0
2639 -1726 -2866 0
2639 -1724 -2868 0
2639 -1722 -2870 0
2639 -1720 -2872 0
2639 -1718 -2874 0
2639 -1716 -2876 0
2639 -1714 -2878 0
2639 -1712 -2880 0
2639 -1710 -2882 0
2639 -1708 -2884 0
2639 -1706 -2886 0
2639 -1704 -2888 0
2639 -1702 -2890 0
2639 -1700 -2892 0
2639 -1699 -2894 0
2641 -2768 0
2641 -1824 -2770 0
2641 -1822 -2772 0
2641 -1820 -2774 0
2641 -1818 -2776 0
2641 -1816 -2778 0
2641 -1814 -2780 0
2641 -1812 -2782 0
2641 -1810 -2784 0
2641 -1808 -2786 0
2641 -1806 -2788 0
2641 -1804 -2790 0
2641 -1802 -2792 0
2641 -1800 -2794 0
2641 -1798 -2796 0
2641 -1796 -2798 0
2641 -1794 -2800 0
2641 -1792 -2802 0
2641 -1790 -2804 0
2641 -1788 -2806 0
2641 -1786 -2808 0
2641 -1784 -2810 0
2641 -1782 -2812 0
2641 -1780 -2814 0
2641 -1778 -2816 0
2641 -1776 -2818 0
2641 -1774 -2820 0
2641 -1772 -2822 0
2641 -1770 -2824 0
2641 -1768 -2826 0
2641 -1766 -2828 0
2641 -1764 -2830 0
2641 -1762 -2832 0
2641 -1760 -2834 0
2641 -1758 -2836 0
2641 -1756 -2838 0
2641 -1754 -2840 0
2641 -1752 -2842 0
2641 -1750 -2844 0
2641 -1748 -2846 0
2641 -1746 -2848 0
2641 -1744 -2850 0
2641 -1742 -2852 0
2641 -1740 -2854 0
2641 -1738 -2856 0
2641 -1736 -2858 0
2641 -1734 -2860 0
2641 -1732 -2862 0
2641 -1730 -2864 0
2641 -1728 -2866 0
2641 -1726 -2868 0
2641 -1724 -2870 0
2641 -1722 -2872 0
2641 -1720 -2874 0
2641 -1718 -2876 0
2641 -1716 -2878 0
2641 -1714 -2880 0
2641 -1712 -2882 0
2641 -1710 -2884 0
2641 -1708 -2886 0
2641 -1706 -2888 0
2641 -1704 -2890 0
2641 -1702 -2892 0
2641 -1700 -2894 0
2641 -1699 -2896 0
2643 -2770 0
2643 -1824 -2772 0
2643 -1822 -2774 0
2643 -1820 -2776 0
2643 -1818 -2778 0
2643 -1816 -2780 0
2643 -1814 -2782 0
2643 -1812 -2784 0
2643 -1810 -2786 0
2643 -1808 -2788 0
2643 -1806 -2790 0
2643 -1804 -2792 0
2643 -1802 -2794 0
2643 -1800 -2796 0
2643 -1798 -2798 0
2643 -1796 -2800 0
2643 -1794 -2802 0
2643 -1792 -2804 0
2643 -1790 -2806 0
2643 -1788 -2808 0
2643 -1786 -2810 0
2643 -1784 -2812 0
2643 -1782 -2814 0
2643 -1780 -2816 0
2643 -1778 -2818 0
2643 -1776 -2820 0
2643 -1774 -2822 0
2643 -1772 -2824 0
2643 -1770 -2826 0
2643 -1768 -2828 0
2643 -1766 -2830 0
2643 -1764 -2832 0
2643 -1762 -2834 0
2643 -1760 -2836 0
2643 -1758 -2838 0
2643 -1756 -2840 0
2643 -1754 -2842 0
2643 -1752 -2844 0
2643 -1750 -2846 0
2643 -1748 -2848 0
2643 -1746 -2850 0
2643 -1744 -2852 0
2643 -1742 -2854 0
2643 -1740 -2856 0
2643 -1738 -2858 0
2643 -1736 -2860 0
2643 -1734 -2862 0
2643 -1732 -2864 0
2643 -1730 -2866 0
2643 -1728 -2868 0
2643 -1726 -2870 0
2643 -1724 -2872 0
2643 -1722 -2874 0
2643 -1720 -2876 0
2643 -1718 -2878 0
2643 -1716 -2880 0
2643 -1714 -2882 0
2643 -1712 -2884 0
2643 -1710 -2886 0
2643 -1708 -2888 0
2643 -1706 -2890 0
2643 -1704 -2892 0
2643 -1702 -2894 0
2643 -1700 -2896 0
2643 -1699 -2898 0
2645 -2772 0
2645 -1824 -2774 0
2645 -1822 -2776 0
2645 -1820 -2778 0
2645 -1818 -2780 0
2645 -1816 -2782 0
2645 -1814 -2784 0
2645 -1812 -2786 0
2645 -1810 -2788 0
2645 -1808 -2790 0
2645 -1806 -2792 0
2645 -1804 -2794 0
2645 -1802 -2796 0
2645 -1800 -2798 0
2645 -1798 -2800 0
2645 -1796 -2802 0
2645 -1794 -2804 0
2645 -1792 -2806 0
2645 -1790 -2808 0
2645 -1788 -2810 0
2645 -1786 -2812 0
2645 -1784 -2814 0
2645 -1782 -2816 0
2645 -1780 -2818 0
2645 -1778 -2820 0
2645 -1776 -2822 0
2645 -1774 -2824 0
2645 -1772 -2826 0
2645 -1770 -2828 0
2645 -1768 -2830 0
2645 -1766 -2832 0
2645 -1764 -2834 0
2645 -1762 -2836 0
2645 -1760 -2838 0
2645 -1758 -2840 0
2645 -1756 -2842 0
2645 -1754 -2844 0
2645 -1752 -2846 0
2645 -1750 -2848 0
2645 -1748 -2850 0
2645 -1746 -2852 0
2645 -1744 -2854 0
2645 -1742 -2856 0
2645 -1740 -2858 0
2645 -1738 -2860 0
2645 -1736 -2862 0
2645 -1734 -2864 0
2645 -1732 -2866 0
2645 -1730 -2868 0
2645 -1728 -2870 0
2645 -1726 -2872 0
2645 -1724 -2874 0
2645 -1722 -2876 0
2645 -1720 -2878 0
2645 -1718 -2880 0
2645 -1716 -2882 0
2645 -1714 -2884 0
2645 -1712 -2886 0
2645 -1710 -2888 0
2645 -1708 -2890 0
2645 -1706 -2892 0
2645 -1704 -2894 0
2645 -1702 -2896 0
2645 -1700 -2898 0
2645 -1699 -2900 0
2647 -2774 0
2647 -1824 -2776 0
2647 -1822 -2778 0
2647 -1820 -2780 0
2647 -1818 -2782 0
2647 -1816 -2784 0
2647 -1814 -2786 0
2647 -1812 -2788 0
2647 -1810 -2790 0
2647 -1808 -2792 0
2647 -1806 -2794 0
2647 -1804 -2796 0
2647 -1802 -2798 0
2647 -1800 -2800 0
2647 -1798 -2802 0
2647 -1796 -2804 0
2647 -1794 -2806 0
2647 -1792 -2808 0
2647 -1790 -2810 0
2647 -1788 -2812 0
2647 -1786 -2814 0
2647 -1784 -2816 0
2647 -1782 -2818 0
2647 -1780 -2820 0
2647 -1778 -2822 0
2647 -1776 -2824 0
2647 -1774 -2826 0
2647 -1772 -2828 0
2647 -1770 -2830 0
2647 -1768 -2832 0
2647 -1766 -2834 0
2647 -1764 -2836 0
2647 -1762 -2838 0
2647 -1760 -2840 0
2647 -1758 -2842 0
2647 -1756 -2844 0
2647 -1754 -2846 0
2647 -1752 -2848 0
2647 -1750 -2850 0
2647 -1748 -2852 0
2647 -1746 -2854 0
2647 -1744 -2856 0
2647 -1742 -2858 0
2647 -1740 -2860 0
2647 -1738 -2862 0
2647 -1736 -2864 0
2647 -1734 -2866 0
2647 -1732 -2868 0
2647 -1730 -2870 0
2647 -1728 -2872 0
2647 -1726 -2874 0
2647 -1724 -2876 0
2647 -1722 -2878 0
2647 -1720 -2880 0
2647 -1718 -2882 0
2647 -1716 -2884 0
2647 -1714 -2886 0
2647 -1712 -2888 0
2647 -1710 -2890 0
2647 -1708 -2892 0
2647 -1706 -2894 0
2647 -1704 -2896 0
2647 -1702 -2898 0
2647 -1700 -2900 0
2647 -1699 -2902 0
2649 -2776 0
2649 -1824 -2778 0
2649 -1822 -2780 0
2649 -1820 -2782 0
2649 -1818 -2784 0
2649 -1816 -2786 0
2649 -1814 -2788 0
2649 -1812 -2790 0
2649 -1810 -2792 0
2649 -1808 -2794 0
2649 -1806 -2796 0
2649 -1804 -2798 0
2649 -1802 -2800 0
2649 -1800 -2802 0
2649 -1798 -2804 0
2649 -1796 -2806 0
2649 -1794 -2808 0
2649 -1792 -2810 0
2649 -1790 -2812 0
2649 -1788 -2814 0
2649 -1786 -2816 0
2649 -1784 -2818 0
2649 -1782 -2820 0
2649 -1780 -2822 0
2649 -1778 -2824 0
2649 -1776 -2826 0
2649 -1774 -2828 0
2649 -1772 -2830 0
2649 -1770 -2832 0
2649 -1768 -2834 0
2649 -1766 -2836 0
2649 -1764 -2838 0
2649 -1762 -2840 0
2649 -1760 -2842 0
2649 -1758 -2844 0
2649 -1756 -2846 0
2649 -1754 -2848 0
2649 -1752 -2850 0
2649 -1750 -2852 0
2649 -1748 -2854 0
2649 -1746 -2856 0
2649 -1744 -2858 0
2649 -1742 -2860 0
2649 -1740 -2862 0
2649 -1738 -2864 0
2649 -1736 -2866 0
2649 -1734 -2868 0
2649 -1732 -2870 0
2649 -1730 -2872 0
2649 -1728 -2874 0
2649 -1726 -2876 0
2649 -1724 -2878 0
2649 -1722 -2880 0
2649 -1720 -2882 0
2649 -1718 -2884 0
2649 -1716 -2886 0
2649 -1714 -2888 0
2649 -1712 -2890 0
2649 -1710 -2892 0
2649 -1708 -2894 0
2649 -1706 -2896 0
2649 -1704 -2898 0
2649 -1702 -2900 0
2649 -1700 -2902 0
2649 -1699 -2904 0
2651 -2778 0
2651 -1824 -2780 0
2651 -1822 -2782 0
2651 -1820 -2784 0
2651 -1818 -2786 0
2651 -1816 -2788 0
2651 -1814 -2790 0
2651 -1812 -2792 0
2651 -1810 -2794 0
2651 -1808 -2796 0
2651 -1806 -2798 0
2651 -1804 -2800 0
2651 -1802 -2802 0
2651 -1800 -2804 0
2651 -1798 -2806 0
2651 -1796 -2808 0
2651 -1794 -2810 0
2651 -1792 -2812 0
2651 -1790 -2814 0
2651 -1788 -2816 0
2651 -1786 -2818 0
2651 -1784 -2820 0
2651 -1782 -2822 0
2651 -1780 -2824 0
2651 -1778 -2826 0
2651 -1776 -2828 0
2651 -1774 -2830 0
2651 -1772 -2832 0
2651 -1770 -2834 0
2651 -1768 -2836 0
2651 -1766 -2838 0
2651 -1764 -2840 0
2651 -1762 -2842 0
2651 -1760 -2844 0
2651 -1758 -2846 0
2651 -1756 -2848 0
2651 -1754 -2850 0
2651 -1752 -2852 0
2651 -1750 -2854 0
2651 -1748 -2856 0
2651 -1746 -2858 0
2651 -1744 -2860 0
2651 -1742 -2862 0
2651 -1740 -2864 0
2651 -1738 -2866 0
2651 -1736 -2868 0
2651 -1734 -2870 0
2651 -1732 -2872 0
2651 -1730 -2874 0
2651 -1728 -2876 0
2651 -1726 -2878 0
2651 -1724 -2880 0
2651 -1722 -2882 0
2651 -1720 -2884 0
2651 -1718 -2886 0
2651 -1716 -2888 0
2651 -1714 -2890 0
2651 -1712 -2892 0
2651 -1710 -2894 0
2651 -1708 -2896 0
2651 -1706 -2898 0
2651 -1704 -2900 0
2651 -1702 -2902 0
2651 -1700 -2904 0
2651 -1699 -2906 0
2653 -2780 0
2653 -1824 -2782 0
2653 -1822 -2784 0
2653 -1820 -2786 0
2653 -1818 -2788 0
2653 -1816 -2790 0
2653 -1814 -2792 0
2653 -1812 -2794 0
2653 -1810 -2796 0
2653 -1808 -2798 0
2653 -1806 -2800 0
2653 -1804 -2802 0
2653 -1802 -2804 0
2653 -1800 -2806 0
2653 -1798 -2808 0
2653 -1796 -2810 0
2653 -1794 -2812 0
2653 -1792 -2814 0
2653 -1790 -2816 0
2653 -1788 -2818 0
2653 -1786 -2820 0
2653 -1784 -2822 0
2653 -1782 -2824 0
2653 -1780 -2826 0
2653 -1778 -2828 0
2653 -1776 -2830 0
2653 -1774 -2832 0
2653 -1772 -2834 0
2653 -1770 -2836 0
2653 -1768 -2838 0
2653 -1766 -2840 0
2653 -1764 -2842 0
2653 -1762 -2844 0
2653 -1760 -2846 0
2653 -1758 -2848 0
2653 -1756 -2850 0
2653 -1754 -2852 0
2653 -1752 -2854 0
2653 -1750 -2856 0
2653 -1748 -2858 0
2653 -1746 -2860 0
2653 -1744 -2862 0
2653 -1742 -2864 0
2653 -1740 -2866 0
2653 -1738 -2868 0
2653 -1736 -2870 0
2653 -1734 -2872 0
2653 -1732 -2874 0
2653 -1730 -2876 0
2653 -1728 -2878 0
2653 -1726 -2880 0
2653 -1724 -2882 0
2653 -1722 -2884 0
2653 -1720 -2886 0
2653 -1718 -2888 0
2653 -1716 -2890 0
2653 -1714 -2892 0
2653 -1712 -2894 0
2653 -1710 -2896 0
2653 -1708 -2898 0
2653 -1706 -2900 0
2653 -1704 -2902 0
2653 -1702 -2904 0
2653 -1700 -2906 0
2653 -1699 -2908 0
2655 -2782 0
2655 -1824 -2784 0
2655 -1822 -2786 0
2655 -1820 -2788 0
2655 -1818 -2790 0
2655 -1816 -2792 0
2655 -1814 -2794 0
2655 -1812 -2796 0
2655 -1810 -2798 0
2655 -1808 -2800 0
2655 -1806 -2802 0
2655 -1804 -2804 0
2655 -1802 -2806 0
2655 -1800 -2808 0
2655 -1798 -2810 0
2655 -1796 -2812 0
2655 -1794 -2814 0
2655 -1792 -2816 0
2655 -1790 -2818 0
2655 -1788 -2820 0
2655 -1786 -2822 0
2655 -1784 -2824 0
2655 -1782 -2826 0
2655 -1780 -2828 0
2655 -1778 -2830 0
2655 -1776 -2832 0
2655 -1774 -2834 0
2655 -1772 -2836 0
2655 -1770 -2838 0
2655 -1768 -2840 0
2655 -1766 -2842 0
2655 -1764 -2844 0
2655 -1762 -2846 0
2655 -1760 -2848 0
2655 -1758 -2850 0
2655 -1756 -2852 0
2655 -1754 -2854 0
2655 -1752 -2856 0
2655 -1750 -2858 0
2655 -1748 -2860 0
2655 -1746 -2862 0
2655 -1744 -2864 0
2655 -1742 -2866 0
2655 -1740 -2868 0
2655 -1738 -2870 0
2655 -1736 -2872 0
2655 -1734 -2874 0
2655 -1732 -2876 0
2655 -1730 -2878 0
2655 -1728 -2880 0
2655 -1726 -2882 0
2655 -1724 -2884 0
2655 -1722 -2886 0
2655 -1720 -2888 0
2655 -1718 -2890 0
2655 -1716 -2892 0
2655 -1714 -2894 0
2655 -1712 -2896 0
2655 -1710 -2898 0
2655 -1708 -2900 0
2655 -1706 -2902 0
2655 -1704 -2904 0
2655 -1702 -2906 0
2655 -1700 -2908 0
2655 -1699 -2910 0
2657 -2784 0
2657 -1824 -2786 0
2657 -1822 -2788 0
2657 -1820 -2790 0
2657 -1818 -2792 0
2657 -1816 -2794 0
2657 -1814 -2796 0
2657 -1812 -2798 0
2657 -1810 -2800 0
2657 -1808 -2802 0
2657 -1806 -2804 0
2657 -1804 -2806 0
2657 -1802 -2808 0
2657 -1800 -2810 0
2657 -1798 -2812 0
2657 -1796 -2814 0
2657 -1794 -2816 0
2657 -1792 -2818 0
2657 -1790 -2820 0
2657 -1788 -2822 0
2657 -1786 -2824 0
2657 -1784 -2826 0
2657 -1782 -2828 0
2657 -1780 -2830 0
2657 -1778 -2832 0
2657 -1776 -2834 0
2657 -1774 -2836 0
2657 -1772 -2838 0
2657 -1770 -2840 0
2657 -1768 -2842 0
2657 -1766 -2844 0
2657 -1764 -2846 0
2657 -1762 -2848 0
2657 -1760 -2850 0
2657 -1758 -2852 0
2657 -1756 -2854 0
2657 -1754 -2856 0
2657 -1752 -2858 0
2657 -1750 -2860 0
2657 -1748 -2862 0
2657 -1746 -2864 0
2657 -1744 -2866 0
2657 -1742 -2868 0
2657 -1740 -2870 0
2657 -1738 -2872 0
2657 -1736 -2874 0
2657 -1734 -2876 0
2657 -1732 -2878 0
2657 -1730 -2880 0
2657 -1728 -2882 0
2657 -1726 -2884 0
2657 -1724 -2886 0
2657 -1722 -2888 0
2657 -1720 -2890 0
2657 -1718 -2892 0
2657 -1716 -2894 0
2657 -1714 -2896 0
2657 -1712 -2898 0
2657 -1710 -2900 0
2657 -1708 -2902 0
2657 -1706 -2904 0
2657 -1704 -2906 0
2657 -1702 -2908 0
2657 -1700 -2910 0
2657 -1699 -2912 0
2659 -2786 0
2659 -1824 -2788 0
2659 -1822 -2790 0
2659 -1820 -2792 0
2659 -1818 -2794 0
2659 -1816 -2796 0
2659 -1814 -2798 0
2659 -1812 -2800 0
2659 -1810 -2802 0
2659 -1808 -2804 0
2659 -1806 -2806 0
2659 -1804 -2808 0
2659 -1802 -2810 0
2659 -1800 -2812 0
2659 -1798 -2814 0
2659 -1796 -2816 0
2659 -1794 -2818 0
2659 -1792 -2820 0
2659 -1790 -2822 0
2659 -1788 -2824 0
2659 -1786 -2826 0
2659 -1784 -2828 0
2659 -1782 -2830 0
2659 -1780 -2832 0
2659 -1778 -2834 0
2659 -1776 -2836 0
2659 -1774 -2838 0
2659 -1772 -2840 0
2659 -1770 -2842 0
2659 -1768 -2844 0
2659 -1766 -2846 0
2659 -1764 -2848 0
2659 -1762 -2850 0
2659 -1760 -2852 0
2659 -1758 -2854 0
2659 -1756 -2856 0
2659 -1754 -2858 0
2659 -1752 -2860 0
2659 -1750 -2862 0
2659 -1748 -2864 0
2659 -1746 -2866 0
2659 -1744 -2868 0
2659 -1742 -2870 0
2659 -1740 -2872 0
2659 -1738 -2874 0
2659 -1736 -2876 0
2659 -1734 -2878 0
2659 -1732 -2880 0
2659 -1730 -2882 0
2659 -1728 -2884 0
2659 -1726 -2886 0
2659 -1724 -2888 0
2659 -1722 -2890 0
2659 -1720 -2892 0
2659 -1718 -2894 0
2659 -1716 -2896 0
2659 -1714 -2898 0
2659 -1712 -2900 0
2659 -1710 -2902 0
2659 -1708 -2904 0
2659 -1706 -2906 0
2659 -1704 -2908 0
2659 -1702 -2910 0
2659 -1700 -2912 0
2659 -1699 -2914 0
2661 -2788 0
2661 -1824 -2790 0
2661 -1822 -2792 0
2661 -1820 -2794 0
2661 -1818 -2796 0
2661 -1816 -2798 0
2661 -1814 -2800 0
2661 -1812 -2802 0
2661 -1810 -2804 0
2661 -1808 -2806 0
2661 -1806 -2808 0
2661 -1804 -2810 0
2661 -1802 -2812 0
2661 -1800 -2814 0
2661 -1798 -2816 0
2661 -1796 -2818 0
2661 -1794 -2820 0
2661 -1792 -2822 0
2661 -1790 -2824 0
2661 -1788 -2826 0
2661 -1786 -2828 0
2661 -1784 -2830 0
2661 -1782 -2832 0
2661 -1780 -2834 0
2661 -1778 -2836 0
2661 -1776 -2838 0
2661 -1774 -2840 0
2661 -1772 -2842 0
2661 -1770 -2844 0
2661 -1768 -2846 0
2661 -1766 -2848 0
2661 -1764 -2850 0
2661 -1762 -2852 0
2661 -1760 -2854 0
2661 -1758 -2856 0
2661 -1756 -2858 0
2661 -1754 -2860 0
2661 -1752 -2862 0
2661 -1750 -2864 0
2661 -1748 -2866 0
2661 -1746 -2868 0
2661 -1744 -2870 0
2661 -1742 -2872 0
2661 -1740 -2874 0
2661 -1738 -2876 0
2661 -1736 -2878 0
2661 -1734 -2880 0
2661 -1732 -2882 0
2661 -1730 -2884 0
2661 -1728 -2886 0
2661 -1726 -2888 0
2661 -1724 -2890 0
2661 -1722 -2892 0
2661 -1720 -2894 0
2661 -1718 -2896 0
2661 -1716 -2898 0
2661 -1714 -2900 0
2661 -1712 -2902 0
2661 -1710 -2904 0
2661 -1708 -2906 0
2661 -1706 -2908 0
2661 -1704 -2910 0
2661 -1702 -2912 0
2661 -1700 -2914 0
2661 -1699 -2916 0
2663 -2790 0
2663 -1824 -2792 0
2663 -1822 -2794 0
2663 -1820 -2796 0
2663 -1818 -2798 0
2663 -1816 -2800 0
2663 -1814 -2802 0
2663 -1812 -2804 0
2663 -1810 -2806 0
2663 -1808 -2808 0
2663 -1806 -2810 0
2663 -1804 -2812 0
2663 -1802 -2814 0
2663 -1800 -2816 0
2663 -1798 -2818 0
2663 -1796 -2820 0
2663 -1794 -2822 0
2663 -1792 -2824 0
2663 -1790 -2826 0
2663 -1788 -2828 0
2663 -1786 -2830 0
2663 -1784 -2832 0
2663 -1782 -2834 0
2663 -1780 -2836 0
2663 -1778 -2838 0
2663 -1776 -2840 0
2663 -1774 -2842 0
2663 -1772 -2844 0
2663 -1770 -2846 0
2663 -1768 -2848 0
2663 -1766 -2850 0
2663 -1764 -2852 0
2663 -1762 -2854 0
2663 -1760 -2856 0
2663 -1758 -2858 0
2663 -1756 -2860 0
2663 -1754 -2862 0
2663 -1752 -2864 0
2663 -1750 -2866 0
2663 -1748 -2868 0
2663 -1746 -2870 0
2663 -1744 -2872 0
2663 -1742 -2874 0
2663 -1740 -2876 0
2663 -1738 -2878 0
2663 -1736 -2880 0
2663 -1734 -2882 0
2663 -1732 -2884 0
2663 -1730 -2886 0
2663 -1728 -2888 0
2663 -1726 -2890 0
2663 -1724 -2892 0
2663 -1722 -2894 0
2663 -1720 -2896 0
2663 -1718 -2898 0
2663 -1716 -2900 0
2663 -1714 -2902 0
2663 -1712 -2904 0
2663 -1710 -2906 0
2663 -1708 -2908 0
2663 -1706 -2910 0
2663 -1704 -2912 0
2663 -1702 -2914 0
2663 -1700 -2916 0
2663 -1699 -2918 0
2665 -2792 0
2665 -1824 -2794 0
2665 -1822 -2796 0
2665 -1820 -2798 0
2665 -1818 -2800 0
2665 -1816 -2802 0
2665 -1814 -2804 0
2665 -1812 -2806 0
2665 -1810 -2808 0
2665 -1808 -2810 0
2665 -1806 -2812 0
2665 -1804 -2814 0
2665 -1802 -2816 0
2665 -1800 -2818 0
2665 -1798 -2820 0
2665 -1796 -2822 0
2665 -1794 -2824 0
2665 -1792 -2826 0
2665 -1790 -2828 0
2665 -1788 -2830 0
2665 -1786 -2832 0
2665 -1784 -2834 0
2665 -1782 -2836 0
2665 -1780 -2838 0
2665 -1778 -2840 0
2665 -1776 -2842 0
2665 -1774 -2844 0
2665 -1772 -2846 0
2665 -1770 -2848 0
2665 -1768 -2850 0
2665 -1766 -2852 0
2665 -1764 -2854 0
2665 -1762 -2856 0
2665 -1760 -2858 0
2665 -1758 -2860 0
2665 -1756 -2862 0
2665 -1754 -2864 0
2665 -1752 -2866 0
2665 -1750 -2868 0
2665 -1748 -2870 0
2665 -1746 -2872 0
2665 -1744 -2874 0
2665 -1742 -2876 0
2665 -1740 -2878 0
2665 -1738 -2880 0
2665 -1736 -2882 0
2665 -1734 -2884 0
2665 -1732 -2886 0
2665 -1730 -2888 0
2665 -1728 -2890 0
2665 -1726 -2892 0
2665 -1724 -2894 0
2665 -1722 -2896 0
2665 -1720 -2898 0
2665 -1718 -2900 0
2665 -1716 -2902 0
2665 -1714 -2904 0
2665 -1712 -2906 0
2665 -1710 -2908 0
2665 -1708 -2910 0
2665 -1706 -2912 0
2665 -1704 -2914 0
2665 -1702 -2916 0
2665 -1700 -2918 0
2665 -1699 -2920 0
2667 -2794 0
2667 -1824 -2796 0
2667 -1822 -2798 0
2667 -1820 -2800 0
2667 -1818 -2802 0
2667 -1816 -2804 0
2667 -1814 -2806 0
2667 -1812 -2808 0
2667 -1810 -2810 0
2667 -1808 -2812 0
2667 -1806 -2814 0
2667 -1804 -2816 0
2667 -1802 -2818 0
2667 -1800 -2820 0
2667 -1798 -2822 0
2667 -1796 -2824 0
2667 -1794 -2826 0
2667 -1792 -2828 0
2667 -1790 -2830 0
2667 -1788 -2832 0
2667 -1786 -2834 0
2667 -1784 -2836 0
2667 -1782 -2838 0
2667 -1780 -2840 0
2667 -1778 -2842 0
2667 -1776 -2844 0
2667 -1774 -2846 0
2667 -1772 -2848 0
2667 -1770 -2850 0
2667 -1768 -2852 0
2667 -1766 -2854 0
2667 -1764 -2856 0
2667 -1762 -2858 0
2667 -1760 -2860 0
2667 -1758 -2862 0
2667 -1756 -2864 0
2667 -1754 -2866 0
2667 -1752 -2868 0
2667 -1750 -2870 0
2667 -1748 -2872 0
2667 -1746 -2874 0
2667 -1744 -2876 0
2667 -1742 -2878 0
2667 -1740 -2880 0
2667 -1738 -2882 0
2667 -1736 -2884 0
2667 -1734 -2886 0
2667 -1732 -2888 0
2667 -1730 -2890 0
2667 -1728 -2892 0
2667 -1726 -2894 0
2667 -1724 -2896 0
2667 -1722 -2898 0
2667 -1720 -2900 0
2667 -1718 -2902 0
2667 -1716 -2904 0
2667 -1714 -2906 0
2667 -1712 -2908 0
2667 -1710 -2910 0
2667 -1708 -2912 0
2667 -1706 -2914 0
2667 -1704 -2916 0
2667 -1702 -2918 0
2667 -1700 -2920 0
2667 -1699 -2922 0
2669 -2796 0
2669 -1824 -2798 0
2669 -1822 -2800 0
2669 -1820 -2802 0
2669 -1818 -2804 0
2669 -1816 -2806 0
2669 -1814 -2808 0
2669 -1812 -2810 0
2669 -1810 -2812 0
2669 -1808 -2814 0
2669 -1806 -2816 0
2669 -1804 -2818 0
2669 -1802 -2820 0
2669 -1800 -2822 0
2669 -1798 -2824 0
2669 -1796 -2826 0
2669 -1794 -2828 0
2669 -1792 -2830 0
2669 -1790 -2832 0
2669 -1788 -2834 0
2669 -1786 -2836 0
2669 -1784 -2838 0
2669 -1782 -2840 0
2669 -1780 -2842 0
2669 -1778 -2844 0
2669 -1776 -2846 0
2669 -1774 -2848 0
2669 -1772 -2850 0
2669 -1770 -2852 0
2669 -1768 -2854 0
2669 -1766 -2856 0
2669 -1764 -2858 0
2669 -1762 -2860 0
2669 -1760 -2862 0
2669 -1758 -2864 0
2669 -1756 -2866 0
2669 -1754 -2868 0
2669 -1752 -2870 0
2669 -1750 -2872 0
2669 -1748 -2874 0
2669 -1746 -2876 0
2669 -1744 -2878 0
2669 -1742 -2880 0
2669 -1740 -2882 0
2669 -1738 -2884 0
2669 -1736 -2886 0
2669 -1734 -2888 0
2669 -1732 -2890 0
2669 -1730 -2892 0
2669 -1728 -2894 0
2669 -1726 -2896 0
2669 -1724 -2898 0
2669 -1722 -2900 0
2669 -1720 -2902 0
2669 -1718 -2904 0
2669 -1716 -2906 0
2669 -1714 -2908 0
2669 -1712 -2910 0
2669 -1710 -2912 0
2669 -1708 -2914 0
2669 -1706 -2916 0
2669 -1704 -2918 0
2669 -1702 -2920 0
2669 -1700 -2922 0
2669 -1699 -2924 0
2671 -2798 0
2671 -1824 -2800 0
2671 -1822 -2802 0
2671 -1820 -2804 0
2671 -1818 -2806 0
2671 -1816 -2808 0
2671 -1814 -2810 0
2671 -1812 -2812 0
2671 -1810 -2814 0
2671 -1808 -2816 0
2671 -1806 -2818 0
2671 -1804 -2820 0
2671 -1802 -2822 0
2671 -1800 -2824 0
2671 -1798 -2826 0
2671 -1796 -2828 0
2671 -1794 -2830 0
2671 -1792 -2832 0
2671 -1790 -2834 0
2671 -1788 -2836 0
2671 -1786 -2838 0
2671 -1784 -2840 0
2671 -1782 -2842 0
2671 -1780 -2844 0
2671 -1778 -2846 0
2671 -1776 -2848 0
2671 -1774 -2850 0
2671 -1772 -2852 0
2671 -1770 -2854 0
2671 -1768 -2856 0
2671 -1766 -2858 0
2671 -1764 -2860 0
2671 -1762 -2862 0
2671 -1760 -2864 0
2671 -1758 -2866 0
2671 -1756 -2868 0
2671 -1754 -2870 0
2671 -1752 -2872 0
2671 -1750 -2874 0
2671 -1748 -2876 0
2671 -1746 -2878 0
2671 -1744 -2880 0
2671 -1742 -2882 0
2671 -1740 -2884 0
2671 -1738 -2886 0
2671 -1736 -2888 0
2671 -1734 -2890 0
2671 -1732 -2892 0
2671 -1730 -2894 0
2671 -1728 -2896 0
2671 -1726 -2898 0
2671 -1724 -2900 0
2671 -1722 -2902 0
2671 -1720 -2904 0
2671 -1718 -2906 0
2671 -1716 -2908 0
2671 -1714 -2910 0
2671 -1712 -2912 0
2671 -1710 -2914 0
2671 -1708 -2916 0
2671 -1706 -2918 0
2671 -1704 -2920 0
2671 -1702 -2922 0
2671 -1700 -2924 0
2671 -1699 -2926 0
2673 -2800 0
2673 -1824 -2802 0
2673 -1822 -2804 0
2673 -1820 -2806 0
2673 -1818 -2808 0
2673 -1816 -2810 0
2673 -1814 -2812 0
2673 -1812 -2814 0
2673 -1810 -2816 0
2673 -1808 -2818 0
2673 -1806 -2820 0
2673 -1804 -2822 0
2673 -1802 -2824 0
2673 -1800 -2826 0
2673 -1798 -2828 0
2673 -1796 -2830 0
2673 -1794 -2832 0
2673 -1792 -2834 0
2673 -1790 -2836 0
2673 -1788 -2838 0
2673 -1786 -2840 0
2673 -1784 -2842 0
2673 -1782 -2844 0
2673 -1780 -2846 0
2673 -1778 -2848 0
2673 -1776 -2850 0
2673 -1774 -2852 0
2673 -1772 -2854 0
2673 -1770 -2856 0
2673 -1768 -2858 0
2673 -1766 -2860 0
2673 -1764 -2862 0
2673 -1762 -2864 0
2673 -1760 -2866 0
2673 -1758 -2868 0
2673 -1756 -2870 0
2673 -1754 -2872 0
2673 -1752 -2874 0
2673 -1750 -2876 0
2673 -1748 -2878 0
2673 -1746 -2880 0
2673 -1744 -2882 0
2673 -1742 -2884 0
2673 -1740 -2886 0
2673 -1738 -2888 0
2673 -1736 -2890 0
2673 -1734 -2892 0
2673 -1732 -2894 0
2673 -1730 -2896 0
2673 -1728 -2898 0
2673 -1726 -2900 0
2673 -1724 -2902 0
2673 -1722 -2904 0
2673 -1720 -2906 0
2673 -1718 -2908 0
2673 -1716 -2910 0
2673 -1714 -2912 0
2673 -1712 -2914 0
2673 -1710 -2916 0
2673 -1708 -2918 0
2673 -1706 -2920 0
2673 -1704 -2922 0
2673 -1702 -2924 0
2673 -1700 -2926 0
2673 -1699 -2928 0
2675 -2802 0
2675 -1824 -2804 0
2675 -1822 -2806 0
2675 -1820 -2808 0
2675 -1818 -2810 0
2675 -1816 -2812 0
2675 -1814 -2814 0
2675 -1812 -2816 0
2675 -1810 -2818 0
2675 -1808 -2820 0
2675 -1806 -2822 0
2675 -1804 -2824 0
2675 -1802 -2826 0
2675 -1800 -2828 0
2675 -1798 -2830 0
2675 -1796 -2832 0
2675 -1794 -2834 0
2675 -1792 -2836 0
2675 -1790 -2838 0
2675 -1788 -2840 0
2675 -1786 -2842 0
2675 -1784 -2844 0
2675 -1782 -2846 0
2675 -1780 -2848 0
2675 -1778 -2850 0
2675 -1776 -2852 0
2675 -1774 -2854 0
2675 -1772 -2856 0
2675 -1770 -2858 0
2675 -1768 -2860 0
2675 -1766 -2862 0
2675 -1764 -2864 0
2675 -1762 -2866 0
2675 -1760 -2868 0
2675 -1758 -2870 0
2675 -1756 -2872 0
2675 -1754 -2874 0
2675 -1752 -2876 0
2675 -1750 -2878 0
2675 -1748 -2880 0
2675 -1746 -2882 0
2675 -1744 -2884 0
2675 -1742 -2886 0
2675 -1740 -2888 0
2675 -1738 -2890 0
2675 -1736 -2892 0
2675 -1734 -2894 0
2675 -1732 -2896 0
2675 -1730 -2898 0
2675 -1728 -2900 0
2675 -1726 -2902 0
2675 -1724 -2904 0
2675 -1722 -2906 0
2675 -1720 -2908 0
2675 -1718 -2910 0
2675 -1716 -2912 0
2675 -1714 -2914 0
2675 -1712 -2916 0
2675 -1710 -2918 0
2675 -1708 -2920 0
2675 -1706 -2922 0
2675 -1704 -2924 0
2675 -1702 -2926 0
2675 -1700 -2928 0
2675 -1699 -2930 0
2677 -2804 0
2677 -1824 -2806 0
2677 -1822 -2808 0
2677 -1820 -2810 0
2677 -1818 -2812 0
2677 -1816 -2814 0
2677 -1814 -2816 0
2677 -1812 -2818 0
2677 -1810 -2820 0
2677 -1808 -2822 0
2677 -1806 -2824 0
2677 -1804 -2826 0
2677 -1802 -2828 0
2677 -1800 -2830 0
2677 -1798 -2832 0
2677 -1796 -2834 0
2677 -1794 -2836 0
2677 -1792 -2838 0
2677 -1790 -2840 0
2677 -1788 -2842 0
2677 -1786 -2844 0
2677 -1784 -2846 0
2677 -1782 -2848 0
2677 -1780 -2850 0
2677 -1778 -2852 0
2677 -1776 -2854 0
2677 -1774 -2856 0
2677 -1772 -2858 0
2677 -1770 -2860 0
2677 -1768 -2862 0
2677 -1766 -2864 0
2677 -1764 -2866 0
2677 -1762 -2868 0
2677 -1760 -2870 0
2677 -1758 -2872 0
2677 -1756 -2874 0
2677 -1754 -2876 0
2677 -1752 -2878 0
2677 -1750 -2880 0
2677 -1748 -2882 0
2677 -1746 -2884 0
2677 -1744 -2886 0
2677 -1742 -2888 0
2677 -1740 -2890 0
2677 -1738 -2892 0
2677 -1736 -2894 0
2677 -1734 -2896 0
2677 -1732 -2898 0
2677 -1730 -2900 0
2677 -1728 -2902 0
2677 -1726 -2904 0
2677 -1724 -2906 0
2677 -1722 -2908 0
2677 -1720 -2910 0
2677 -1718 -2912 0
2677 -1716 -2914 0
2677 -1714 -2916 0
2677 -1712 -2918 0
2677 -1710 -2920 0
2677 -1708 -2922 0
2677 -1706 -2924 0
2677 -1704 -2926 0
2677 -1702 -2928 0
2677 -1700 -2930 0
2677 -1699 -2932 0
2679 -2806 0
2679 -1824 -2808 0
2679 -1822 -2810 0
2679 -1820 -2812 0
2679 -1818 -2814 0
2679 -1816 -2816 0
2679 -1814 -2818 0
2679 -1812 -2820 0
2679 -1810 -2822 0
2679 -1808 -2824 0
2679 -1806 -2826 0
2679 -1804 -2828 0
2679 -1802 -2830 0
2679 -1800 -2832 0
2679 -1798 -2834 0
2679 -1796 -2836 0
2679 -1794 -2838 0
2679 -1792 -2840 0
2679 -1790 -2842 0
2679 -1788 -2844 0
2679 -1786 -2846 0
2679 -1784 -2848 0
2679 -1782 -2850 0
2679 -1780 -2852 0
2679 -1778 -2854 0
2679 -1776 -2856 0
2679 -1774 -2858 0
2679 -1772 -2860 0
2679 -1770 -2862 0
2679 -1768 -2864 0
2679 -1766 -2866 0
2679 -1764 -2868 0
2679 -1762 -2870 0
2679 -1760 -2872 0
2679 -1758 -2874 0
2679 -1756 -2876 0
2679 -1754 -2878 0
2679 -1752 -2880 0
2679 -1750 -2882 0
2679 -1748 -2884 0
2679 -1746 -2886 0
2679 -1744 -2888 0
2679 -1742 -2890 0
2679 -1740 -2892 0
2679 -1738 -2894 0
2679 -1736 -2896 0
2679 -1734 -2898 0
2679 -1732 -2900 0
2679 -1730 -2902 0
2679 -1728 -2904 0
2679 -1726 -2906 0
2679 -1724 -2908 0
2679 -1722 -2910 0
2679 -1720 -2912 0
2679 -1718 -2914 0
2679 -1716 -2916 0
2679 -1714 -2918 0
2679 -1712 -2920 0
2679 -1710 -2922 0
2679 -1708 -2924 0
2679 -1706 -2926 0
2679 -1704 -2928 0
2679 -1702 -2930 0
2679 -1700 -2932 0
2679 -1699 -2934 0
2681 -2808 0
2681 -1824 -2810 0
2681 -1822 -2812 0
2681 -1820 -2814 0
2681 -1818 -2816 0
2681 -1816 -2818 0
2681 -1814 -2820 0
2681 -1812 -2822 0
2681 -1810 -2824 0
2681 -1808 -2826 0
2681 -1806 -2828 0
2681 -1804 -2830 0
2681 -1802 -2832 0
2681 -1800 -2834 0
2681 -1798 -2836 0
2681 -1796 -2838 0
2681 -1794 -2840 0
2681 -1792 -2842 0
2681 -1790 -2844 0
2681 -1788 -2846 0
2681 -1786 -2848 0
2681 -1784 -2850 0
2681 -1782 -2852 0
2681 -1780 -2854 0
2681 -1778 -2856 0
2681 -1776 -2858 0
2681 -1774 -2860 0
2681 -1772 -2862 0
2681 -1770 -2864 0
2681 -1768 -2866 0
2681 -1766 -2868 0
2681 -1764 -2870 0
2681 -1762 -2872 0
2681 -1760 -2874 0
2681 -1758 -2876 0
2681 -1756 -2878 0
2681 -1754 -2880 0
2681 -1752 -2882 0
2681 -1750 -2884 0
2681 -1748 -2886 0
2681 -1746 -2888 0
2681 -1744 -2890 0
2681 -1742 -2892 0
2681 -1740 -2894 0
2681 -1738 -2896 0
2681 -1736 -2898 0
2681 -1734 -2900 0
2681 -1732 -2902 0
2681 -1730 -2904 0
2681 -1728 -2906 0
2681 -1726 -2908 0
2681 -1724 -2910 0
2681 -1722 -2912 0
2681 -1720 -2914 0
2681 -1718 -2916 0
2681 -1716 -2918 0
2681 -1714 -2920 0
2681 -1712 -2922 0
2681 -1710 -2924 0
2681 -1708 -2926 0
2681 -1706 -2928 0
2681 -1704 -2930 0
2681 -1702 -2932 0
2681 -1700 -2934 0
2681 -1699 -2936 0
2683 -2810 0
2683 -1824 -2812 0
2683 -1822 -2814 0
2683 -1820 -2816 0
2683 -1818 -2818 0
2683 -1816 -2820 0
2683 -1814 -2822 0
2683 -1812 -2824 0
2683 -1810 -2826 0
2683 -1808 -2828 0
2683 -1806 -2830 0
2683 -1804 -2832 0
2683 -1802 -2834 0
2683 -1800 -2836 0
2683 -1798 -2838 0
2683 -1796 -2840 0
2683 -1794 -2842 0
2683 -1792 -2844 0
2683 -1790 -2846 0
2683 -1788 -2848 0
2683 -1786 -2850 0
2683 -1784 -2852 0
2683 -1782 -2854 0
2683 -1780 -2856 0
2683 -1778 -2858 0
2683 -1776 -2860 0
2683 -1774 -2862 0
2683 -1772 -2864 0
2683 -1770 -2866 0
2683 -1768 -2868 0
2683 -1766 -2870 0
2683 -1764 -2872 0
2683 -1762 -2874 0
2683 -1760 -2876 0
2683 -1758 -2878 0
2683 -1756 -2880 0
2683 -1754 -2882 0
2683 -1752 -2884 0
2683 -1750 -2886 0
2683 -1748 -2888 0
2683 -1746 -2890 0
2683 -1744 -2892 0
2683 -1742 -2894 0
2683 -1740 -2896 0
2683 -1738 -2898 0
2683 -1736 -2900 0
2683 -1734 -2902 0
2683 -1732 -2904 0
2683 -1730 -2906 0
2683 -1728 -2908 0
2683 -1726 -2910 0
2683 -1724 -2912 0
2683 -1722 -2914 0
2683 -1720 -2916 0
2683 -1718 -2918 0
2683 -1716 -2920 0
2683 -1714 -2922 0
2683 -1712 -2924 0
2683 -1710 -2926 0
2683 -1708 -2928 0
2683 -1706 -2930 0
2683 -1704 -2932 0
2683 -1702 -2934 0
2683 -1700 -2936 0
2683 -1699 -2938 0
2685 -2812 0
2685 -1824 -2814 0
2685 -1822 -2816 0
2685 -1820 -2818 0
2685 -1818 -2820 0
2685 -1816 -2822 0
2685 -1814 -2824 0
2685 -1812 -2826 0
2685 -1810 -2828 0
2685 -1808 -2830 0
2685 -1806 -2832 0
2685 -1804 -2834 0
2685 -1802 -2836 0
2685 -1800 -2838 0
2685 -1798 -2840 0
2685 -1796 -2842 0
2685 -1794 -2844 0
2685 -1792 -2846 0
2685 -1790 -2848 0
2685 -1788 -2850 0
2685 -1786 -2852 0
2685 -1784 -2854 0
2685 -1782 -2856 0
2685 -1780 -2858 0
2685 -1778 -2860 0
2685 -1776 -2862 0
2685 -1774 -2864 0
2685 -1772 -2866 0
2685 -1770 -2868 0
2685 -1768 -2870 0
2685 -1766 -2872 0
2685 -1764 -2874 0
2685 -1762 -2876 0
2685 -1760 -2878 0
2685 -1758 -2880 0
2685 -1756 -2882 0
2685 -1754 -2884 0
2685 -1752 -2886 0
2685 -1750 -2888 0
2685 -1748 -2890 0
2685 -1746 -2892 0
2685 -1744 -2894 0
2685 -1742 -2896 0
2685 -1740 -2898 0
2685 -1738 -2900 0
2685 -1736 -2902 0
2685 -1734 -2904 0
2685 -1732 -2906 0
2685 -1730 -2908 0
2685 -1728 -2910 0
2685 -1726 -2912 0
2685 -1724 -2914 0
2685 -1722 -2916 0
2685 -1720 -2918 0
2685 -1718 -2920 0
2685 -1716 -2922 0
2685 -1714 -2924 0
2685 -1712 -2926 0
2685 -1710 -2928 0
2685 -1708 -2930 0
2685 -1706 -2932 0
2685 -1704 -2934 0
2685 -1702 -2936 0
2685 -1700 -2938 0
2685 -1699 -2940 0
2687 -2814 0
2687 -1824 -2816 0
2687 -1822 -2818 0
2687 -1820 -2820 0
2687 -1818 -2822 0
2687 -1816 -2824 0
2687 -1814 -2826 0
2687 -1812 -2828 0
2687 -1810 -2830 0
2687 -1808 -2832 0
2687 -1806 -2834 0
2687 -1804 -2836 0
2687 -1802 -2838 0
2687 -1800 -2840 0
2687 -1798 -2842 0
2687 -1796 -2844 0
2687 -1794 -2846 0
2687 -1792 -2848 0
2687 -1790 -2850 0
2687 -1788 -2852 0
2687 -1786 -2854 0
2687 -1784 -2856 0
2687 -1782 -2858 0
2687 -1780 -2860 0
2687 -1778 -2862 0
2687 -1776 -2864 0
2687 -1774 -2866 0
2687 -1772 -2868 0
2687 -1770 -2870 0
2687 -1768 -2872 0
2687 -1766 -2874 0
2687 -1764 -2876 0
2687 -1762 -2878 0
2687 -1760 -2880 0
2687 -1758 -2882 0
2687 -1756 -2884 0
2687 -1754 -2886 0
2687 -1752 -2888 0
2687 -1750 -2890 0
2687 -1748 -2892 0
2687 -1746 -2894 0
2687 -1744 -2896 0
2687 -1742 -2898 0
2687 -1740 -2900 0
2687 -1738 -2902 0
2687 -1736 -2904 0
2687 -1734 -2906 0
2687 -1732 -2908 0
2687 -1730 -2910 0
2687 -1728 -2912 0
2687 -1726 -2914 0
2687 -1724 -2916 0
2687 -1722 -2918 0
2687 -1720 -2920 0
2687 -1718 -2922 0
2687 -1716 -2924 0
2687 -1714 -2926 0
2687 -1712 -2928 0
2687 -1710 -2930 0
2687 -1708 -2932 0
2687 -1706 -2934 0
2687 -1704 -2936 0
2687 -1702 -2938 0
2687 -1700 -2940 0
2687 -1699 -2942 0
2689 -2816 0
2689 -1824 -2818 0
2689 -1822 -2820 0
2689 -1820 -2822 0
2689 -1818 -2824 0
2689 -1816 -2826 0
2689 -1814 -2828 0
2689 -1812 -2830 0
2689 -1810 -2832 0
2689 -1808 -2834 0
2689 -1806 -2836 0
2689 -1804 -2838 0
2689 -1802 -2840 0
2689 -1800 -2842 0
2689 -1798 -2844 0
2689 -1796 -2846 0
2689 -1794 -2848 0
2689 -1792 -2850 0
2689 -1790 -2852 0
2689 -1788 -2854 0
2689 -1786 -2856 0
2689 -1784 -2858 0
2689 -1782 -2860 0
2689 -1780 -2862 0
2689 -1778 -2864 0
2689 -1776 -2866 0
2689 -1774 -2868 0
2689 -1772 -2870 0
2689 -1770 -2872 0
2689 -1768 -2874 0
2689 -1766 -2876 0
2689 -1764 -2878 0
2689 -1762 -2880 0
2689 -1760 -2882 0
2689 -1758 -2884 0
2689 -1756 -2886 0
2689 -1754 -2888 0
2689 -1752 -2890 0
2689 -1750 -2892 0
2689 -1748 -2894 0
2689 -1746 -2896 0
2689 -1744 -2898 0
2689 -1742 -2900 0
2689 -1740 -2902 0
2689 -1738 -2904 0
2689 -1736 -2906 0
2689 -1734 -2908 0
2689 -1732 -2910 0
2689 -1730 -2912 0
2689 -1728 -2914 0
2689 -1726 -2916 0
2689 -1724 -2918 0
2689 -1722 -2920 0
2689 -1720 -2922 0
2689 -1718 -2924 0
2689 -1716 -2926 0
2689 -1714 -2928 0
2689 -1712 -2930 0
2689 -1710 -2932 0
2689 -1708 -2934 0
2689 -1706 -2936 0
2689 -1704 -2938 0
2689 -1702 -2940 0
2689 -1700 -2942 0
2689 -1699 -2944 0
2691 -2818 0
2691 -1824 -2820 0
2691 -1822 -2822 0
2691 -1820 -2824 0
2691 -1818 -2826 0
2691 -1816 -2828 0
2691 -1814 -2830 0
2691 -1812 -2832 0
2691 -1810 -2834 0
2691 -1808 -2836 0
2691 -1806 -2838 0
2691 -1804 -2840 0
2691 -1802 -2842 0
2691 -1800 -2844 0
2691 -1798 -2846 0
2691 -1796 -2848 0
2691 -1794 -2850 0
2691 -1792 -2852 0
2691 -1790 -2854 0
2691 -1788 -2856 0
2691 -1786 -2858 0
2691 -1784 -2860 0
2691 -1782 -2862 0
2691 -1780 -2864 0
2691 -1778 -2866 0
2691 -1776 -2868 0
2691 -1774 -2870 0
2691 -1772 -2872 0
2691 -1770 -2874 0
2691 -1768 -2876 0
2691 -1766 -2878 0
2691 -1764 -2880 0
2691 -1762 -2882 0
2691 -1760 -2884 0
2691 -1758 -2886 0
2691 -1756 -2888 0
2691 -1754 -2890 0
2691 -1752 -2892 0
2691 -1750 -2894 0
2691 -1748 -2896 0
2691 -1746 -2898 0
2691 -1744 -2900 0
2691 -1742 -2902 0
2691 -1740 -2904 0
2691 -1738 -2906 0
2691 -1736 -2908 0
2691 -1734 -2910 0
2691 -1732 -2912 0
2691 -1730 -2914 0
2691 -1728 -2916 0
2691 -1726 -2918 0
2691 -1724 -2920 0
2691 -1722 -2922 0
2691 -1720 -2924 0
2691 -1718 -2926 0
2691 -1716 -2928 0
2691 -1714 -2930 0
2691 -1712 -2932 0
2691 -1710 -2934 0
2691 -1708 -2936 0
2691 -1706 -2938 0
2691 -1704 -2940 0
2691 -1702 -2942 0
2691 -1700 -2944 0
2691 -1699 -2946 0
2693 -2820 0
2693 -1824 -2822 0
2693 -1822 -2824 0
2693 -1820 -2826 0
2693 -1818 -2828 0
2693 -1816 -2830 0
2693 -1814 -2832 0
2693 -1812 -2834 0
2693 -1810 -2836 0
2693 -1808 -2838 0
2693 -1806 -2840 0
2693 -1804 -2842 0
2693 -1802 -2844 0
2693 -1800 -2846 0
2693 -1798 -2848 0
2693 -1796 -2850 0
2693 -1794 -2852 0
2693 -1792 -2854 0
2693 -1790 -2856 0
2693 -1788 -2858 0
2693 -1786 -2860 0
2693 -1784 -2862 0
2693 -1782 -2864 0
2693 -1780 -2866 0
2693 -1778 -2868 0
2693 -1776 -2870 0
2693 -1774 -2872 0
2693 -1772 -2874 0
2693 -1770 -2876 0
2693 -1768 -2878 0
2693 -1766 -2880 0
2693 -1764 -2882 0
2693 -1762 -2884 0
2693 -1760 -2886 0
2693 -1758 -2888 0
2693 -1756 -2890 0
2693 -1754 -2892 0
2693 -1752 -2894 0
2693 -1750 -2896 0
2693 -1748 -2898 0
2693 -1746 -2900 0
2693 -1744 -2902 0
2693 -1742 -2904 0
2693 -1740 -2906 0
2693 -1738 -2908 0
2693 -1736 -2910 0
2693 -1734 -2912 0
2693 -1732 -2914 0
2693 -1730 -2916 0
2693 -1728 -2918 0
2693 -1726 -2920 0
2693 -1724 -2922 0
2693 -1722 -2924 0
2693 -1720 -2926 0
2693 -1718 -2928 0
2693 -1716 -2930 0
2693 -1714 -2932 0
2693 -1712 -2934 0
2693 -1710 -2936 0
2693 -1708 -2938 0
2693 -1706 -2940 0
2693 -1704 -2942 0
2693 -1702 -2944 0
2693 -1700 -2946 0
2693 -1699 -2948 0
c (0<=(aux403 - aux404 - shift(num_occupied_by_types_00003, -64)))
1699 2948 0
1700 2946 0
1702 2944 0
1704 2942 0
1706 2940 0
1708 2938 0
1710 2936 0
1712 2934 0
1714 2932 0
1716 2930 0
1718 2928 0
1720 2926 0
1722 2924 0
1724 2922 0
1726 2920 0
1728 2918 0
1730 2916 0
1732 2914 0
1734 2912 0
1736 2910 0
1738 2908 0
1740 2906 0
1742 2904 0
1744 2902 0
1746 2900 0
1748 2898 0
1750 2896 0
1752 2894 0
1754 2892 0
1756 2890 0
1758 2888 0
1760 2886 0
1762 2884 0
1764 2882 0
1766 2880 0
1768 2878 0
1770 2876 0
1772 2874 0
1774 2872 0
1776 2870 0
1778 2868 0
1780 2866 0
1782 2864 0
1784 2862 0
1786 2860 0
1788 2858 0
1790 2856 0
1792 2854 0
1794 2852 0
1796 2850 0
1798 2848 0
1800 2846 0
1802 2844 0
1804 2842 0
1806 2840 0
1808 2838 0
1810 2836 0
1812 2834 0
1814 2832 0
1816 2830 0
1818 2828 0
1820 2826 0
1822 2824 0
1824 2822 0
-2693 2948 0
-2693 1699 2946 0
-2693 1700 2944 0
-2693 1702 2942 0
-2693 1704 2940 0
-2693 1706 2938 0
-2693 1708 2936 0
-2693 1710 2934 0
-2693 1712 2932 0
-2693 1714 2930 0
-2693 1716 2928 0
-2693 1718 2926 0
-2693 1720 2924 0
-2693 1722 2922 0
-2693 1724 2920 0
-2693 1726 2918 0
-2693 1728 2916 0
-2693 1730 2914 0
-2693 1732 2912 0
-2693 1734 2910 0
-2693 1736 2908 0
-2693 1738 2906 0
-2693 1740 2904 0
-2693 1742 2902 0
-2693 1744 2900 0
-2693 1746 2898 0
-2693 1748 2896 0
-2693 1750 2894 0
-2693 1752 2892 0
-2693 1754 2890 0
-2693 1756 2888 0
-2693 1758 2886 0
-2693 1760 2884 0
-2693 1762 2882 0
-2693 1764 2880 0
-2693 1766 2878 0
-2693 1768 2876 0
-2693 1770 2874 0
-2693 1772 2872 0
-2693 1774 2870 0
-2693 1776 2868 0
-2693 1778 2866 0
-2693 1780 2864 0
-2693 1782 2862 0
-2693 1784 2860 0
-2693 1786 2858 0
-2693 1788 2856 0
-2693 1790 2854 0
-2693 1792 2852 0
-2693 1794 2850 0
-2693 1796 2848 0
-2693 1798 2846 0
-2693 1800 2844 0
-2693 1802 2842 0
-2693 1804 2840 0
-2693 1806 2838 0
-2693 1808 2836 0
-2693 1810 2834 0
-2693 1812 2832 0
-2693 1814 2830 0
-2693 1816 2828 0
-2693 1818 2826 0
-2693 1820 2824 0
-2693 1822 2822 0
-2693 1824 2820 0
-2691 2946 0
-2691 1699 2944 0
-2691 1700 2942 0
-2691 1702 2940 0
-2691 1704 2938 0
-2691 1706 2936 0
-2691 1708 2934 0
-2691 1710 2932 0
-2691 1712 2930 0
-2691 1714 2928 0
-2691 1716 2926 0
-2691 1718 2924 0
-2691 1720 2922 0
-2691 1722 2920 0
-2691 1724 2918 0
-2691 1726 2916 0
-2691 1728 2914 0
-2691 1730 2912 0
-2691 1732 2910 0
-2691 1734 2908 0
-2691 1736 2906 0
-2691 1738 2904 0
-2691 1740 2902 0
-2691 1742 2900 0
-2691 1744 2898 0
-2691 1746 2896 0
-2691 1748 2894 0
-2691 1750 2892 0
-2691 1752 2890 0
-2691 1754 2888 0
-2691 1756 2886 0
-2691 1758 2884 0
-2691 1760 2882 0
-2691 1762 2880 0
-2691 1764 2878 0
-2691 1766 2876 0
-2691 1768 2874 0
-2691 1770 2872 0
-2691 1772 2870 0
-2691 1774 2868 0
-2691 1776 2866 0
-2691 1778 2864 0
-2691 1780 2862 0
-2691 1782 2860 0
-2691 1784 2858 0
-2691 1786 2856 0
-2691 1788 2854 0
-2691 1790 2852 0
-2691 1792 2850 0
-2691 1794 2848 0
-2691 1796 2846 0
-2691 1798 2844 0
-2691 1800 2842 0
-2691 1802 2840 0
-2691 1804 2838 0
-2691 1806 2836 0
-2691 1808 2834 0
-2691 1810 2832 0
-2691 1812 2830 0
-2691 1814 2828 0
-2691 1816 2826 0
-2691 1818 2824 0
-2691 1820 2822 0
-2691 1822 2820 0
-2691 1824 2818 0
-2689 2944 0
-2689 1699 2942 0
-2689 1700 2940 0
-2689 1702 2938 0
-2689 1704 2936 0
-2689 1706 2934 0
-2689 1708 2932 0
-2689 1710 2930 0
-2689 1712 2928 0
-2689 1714 2926 0
-2689 1716 2924 0
-2689 1718 2922 0
-2689 1720 2920 0
-2689 1722 2918 0
-2689 1724 2916 0
-2689 1726 2914 0
-2689 1728 2912 0
-2689 1730 2910 0
-2689 1732 2908 0
-2689 1734 2906 0
-2689 1736 2904 0
-2689 1738 2902 0
-2689 1740 2900 0
-2689 1742 2898 0
-2689 1744 2896 0
-2689 1746 2894 0
-2689 1748 2892 0
-2689 1750 2890 0
-2689 1752 2888 0
-2689 1754 2886 0
-2689 1756 2884 0
-2689 1758 2882 0
-2689 1760 2880 0
-2689 1762 2878 0
-2689 1764 2876 0
-2689 1766 2874 0
-2689 1768 2872 0
-2689 1770 2870 0
-2689 1772 2868 0
-2689 1774 2866 0
-2689 1776 2864 0
-2689 1778 2862 0
-2689 1780 2860 0
-2689 1782 2858 0
-2689 1784 2856 0
-2689 1786 2854 0
-2689 1788 2852 0
-2689 1790 2850 0
-2689 1792 2848 0
-2689 1794 2846 0
-2689 1796 2844 0
-2689 1798 2842 0
-2689 1800 2840 0
-2689 1802 2838 0
-2689 1804 2836 0
-2689 1806 2834 0
-2689 1808 2832 0
-2689 1810 2830 0
-2689 1812 2828 0
-2689 1814 2826 0
-2689 1816 2824 0
-2689 1818 2822 0
-2689 1820 2820 0
-2689 1822 2818 0
-2689 1824 2816 0
-2687 2942 0
-2687 1699 2940 0
-2687 1700 2938 0
-2687 1702 2936 0
-2687 1704 2934 0
-2687 1706 2932 0
-2687 1708 2930 0
-2687 1710 2928 0
-2687 1712 2926 0
-2687 1714 2924 0
-2687 1716 2922 0
-2687 1718 2920 0
-2687 1720 2918 0
-2687 1722 2916 0
-2687 1724 2914 0
-2687 1726 2912 0
-2687 1728 2910 0
-2687 1730 2908 0
-2687 1732 2906 0
-2687 1734 2904 0
-2687 1736 2902 0
-2687 1738 2900 0
-2687 1740 2898 0
-2687 1742 2896 0
-2687 1744 2894 0
-2687 1746 2892 0
-2687 1748 2890 0
-2687 1750 2888 0
-2687 1752 2886 0
-2687 1754 2884 0
-2687 1756 2882 0
-2687 1758 2880 0
-2687 1760 2878 0
-2687 1762 2876 0
-2687 1764 2874 0
-2687 1766 2872 0
-2687 1768 2870 0
-2687 1770 2868 0
-2687 1772 2866 0
-2687 1774 2864 0
-2687 1776 2862 0
-2687 1778 2860 0
-2687 1780 2858 0
-2687 1782 2856 0
-2687 1784 2854 0
-2687 1786 2852 0
-2687 1788 2850 0
-2687 1790 2848 0
-2687 1792 2846 0
-2687 1794 2844 0
-2687 1796 2842 0
-2687 1798 2840 0
-2687 1800 2838 0
-2687 1802 2836 0
-2687 1804 2834 0
-2687 1806 2832 0
-2687 1808 2830 0
-2687 1810 2828 0
-2687 1812 2826 0
-2687 1814 2824 0
-2687 1816 2822 0
-2687 1818 2820 0
-2687 1820 2818 0
-2687 1822 2816 0
-2687 1824 2814 0
-2685 2940 0
-2685 1699 2938 0
-2685 1700 2936 0
-2685 1702 2934 0
-2685 1704 2932 0
-2685 1706 2930 0
-2685 1708 2928 0
-2685 1710 2926 0
-2685 1712 2924 0
-2685 1714 2922 0
-2685 1716 2920 0
-2685 1718 2918 0
-2685 1720 2916 0
-2685 1722 2914 0
-2685 1724 2912 0
-2685 1726 2910 0
-2685 1728 2908 0
-2685 1730 2906 0
-2685 1732 2904 0
-2685 1734 2902 0
-2685 1736 2900 0
-2685 1738 2898 0
-2685 1740 2896 0
-2685 1742 2894 0
-2685 1744 2892 0
-2685 1746 2890 0
-2685 1748 2888 0
-2685 1750 2886 0
-2685 1752 2884 0
-2685 1754 2882 0
-2685 1756 2880 0
-2685 1758 2878 0
-2685 1760 2876 0
-2685 1762 2874 0
-2685 1764 2872 0
-2685 1766 2870 0
-2685 1768 2868 0
-2685 1770 2866 0
-2685 1772 2864 0
-2685 1774 2862 0
-2685 1776 2860 0
-2685 1778 2858 0
-2685 1780 2856 0
-2685 1782 2854 0
-2685 1784 2852 0
-2685 1786 2850 0
-2685 1788 2848 0
-2685 1790 2846 0
-2685 1792 2844 0
-2685 1794 2842 0
-2685 1796 2840 0
-2685 1798 2838 0
-2685 1800 2836 0
-2685 1802 2834 0
-2685 1804 2832 0
-2685 1806 2830 0
-2685 1808 2828 0
-2685 1810 2826 0
-2685 1812 2824 0
-2685 1814 2822 0
-2685 1816 2820 0
-2685 1818 2818 0
-2685 1820 2816 0
-2685 1822 2814 0
-2685 1824 2812 0
-2683 2938 0
-2683 1699 2936 0
-2683 1700 2934 0
-2683 1702 2932 0
-2683 1704 2930 0
-2683 1706 2928 0
-2683 1708 2926 0
-2683 1710 2924 0
-2683 1712 2922 0
-2683 1714 2920 0
-2683 1716 2918 0
-2683 1718 2916 0
-2683 1720 2914 0
-2683 1722 2912 0
-2683 1724 2910 0
-2683 1726 2908 0
-2683 1728 2906 0
-2683 1730 2904 0
-2683 1732 2902 0
-2683 1734 2900 0
-2683 1736 2898 0
-2683 1738 2896 0
-2683 1740 2894 0
-2683 1742 2892 0
-2683 1744 2890 0
-2683 1746 2888 0
-2683 1748 2886 0
-2683 1750 2884 0
-2683 1752 2882 0
-2683 1754 2880 0
-2683 1756 2878 0
-2683 1758 2876 0
-2683 1760 2874 0
-2683 1762 2872 0
-2683 1764 2870 0
-2683 1766 2868 0
-2683 1768 2866 0
-2683 1770 2864 0
-2683 1772 2862 0
-2683 1774 2860 0
-2683 1776 2858 0
-2683 1778 2856 0
-2683 1780 2854 0
-2683 1782 2852 0
-2683 1784 2850 0
-2683 1786 2848 0
-2683 1788 2846 0
-2683 1790 2844 0
-2683 1792 2842 0
-2683 1794 2840 0
-2683 1796 2838 0
-2683 1798 2836 0
-2683 1800 2834 0
-2683 1802 2832 0
-2683 1804 2830 0
-2683 1806 2828 0
-2683 1808 2826 0
-2683 1810 2824 0
-2683 1812 2822 0
-2683 1814 2820 0
-2683 1816 2818 0
-2683 1818 2816 0
-2683 1820 2814 0
-2683 1822 2812 0
-2683 1824 2810 0
-2681 2936 0
-2681 1699 2934 0
-2681 1700 2932 0
-2681 1702 2930 0
-2681 1704 2928 0
-2681 1706 2926 0
-2681 1708 2924 0
-2681 1710 2922 0
-2681 1712 2920 0
-2681 1714 2918 0
-2681 1716 2916 0
-2681 1718 2914 0
-2681 1720 2912 0
-2681 1722 2910 0
-2681 1724 2908 0
-2681 1726 2906 0
-2681 1728 2904 0
-2681 1730 2902 0
-2681 1732 2900 0
-2681 1734 2898 0
-2681 1736 2896 0
-2681 1738 2894 0
-2681 1740 2892 0
-2681 1742 2890 0
-2681 1744 2888 0
-2681 1746 2886 0
-2681 1748 2884 0
-2681 1750 2882 0
-2681 1752 2880 0
-2681 1754 2878 0
-2681 1756 2876 0
-2681 1758 2874 0
-2681 1760 2872 0
-2681 1762 2870 0
-2681 1764 2868 0
-2681 1766 2866 0
-2681 1768 2864 0
-2681 1770 2862 0
-2681 1772 2860 0
-2681 1774 2858 0
-2681 1776 2856 0
-2681 1778 2854 0
-2681 1780 2852 0
-2681 1782 2850 0
-2681 1784 2848 0
-2681 1786 2846 0
-2681 1788 2844 0
-2681 1790 2842 0
-2681 1792 2840 0
-2681 1794 2838 0
-2681 1796 2836 0
-2681 1798 2834 0
-2681 1800 2832 0
-2681 1802 2830 0
-2681 1804 2828 0
-2681 1806 2826 0
-2681 1808 2824 0
-2681 1810 2822 0
-2681 1812 2820 0
-2681 1814 2818 0
-2681 1816 2816 0
-2681 1818 2814 0
-2681 1820 2812 0
-2681 1822 2810 0
-2681 1824 2808 0
-2679 2934 0
-2679 1699 2932 0
-2679 1700 2930 0
-2679 1702 2928 0
-2679 1704 2926 0
-2679 1706 2924 0
-2679 1708 2922 0
-2679 1710 2920 0
-2679 1712 2918 0
-2679 1714 2916 0
-2679 1716 2914 0
-2679 1718 2912 0
-2679 1720 2910 0
-2679 1722 2908 0
-2679 1724 2906 0
-2679 1726 2904 0
-2679 1728 2902 0
-2679 1730 2900 0
-2679 1732 2898 0
-2679 1734 2896 0
-2679 1736 2894 0
-2679 1738 2892 0
-2679 1740 2890 0
-2679 1742 2888 0
-2679 1744 2886 0
-2679 1746 2884 0
-2679 1748 2882 0
-2679 1750 2880 0
-2679 1752 2878 0
-2679 1754 2876 0
-2679 1756 2874 0
-2679 1758 2872 0
-2679 1760 2870 0
-2679 1762 2868 0
-2679 1764 2866 0
-2679 1766 2864 0
-2679 1768 2862 0
-2679 1770 2860 0
-2679 1772 2858 0
-2679 1774 2856 0
-2679 1776 2854 0
-2679 1778 2852 0
-2679 1780 2850 0
-2679 1782 2848 0
-2679 1784 2846 0
-2679 1786 2844 0
-2679 1788 2842 0
-2679 1790 2840 0
-2679 1792 2838 0
-2679 1794 2836 0
-2679 1796 2834 0
-2679 1798 2832 0
-2679 1800 2830 0
-2679 1802 2828 0
-2679 1804 2826 0
-2679 1806 2824 0
-2679 1808 2822 0
-2679 1810 2820 0
-2679 1812 2818 0
-2679 1814 2816 0
-2679 1816 2814 0
-2679 1818 2812 0
-2679 1820 2810 0
-2679 1822 2808 0
-2679 1824 2806 0
-2677 2932 0
-2677 1699 2930 0
-2677 1700 2928 0
-2677 1702 2926 0
-2677 1704 2924 0
-2677 1706 2922 0
-2677 1708 2920 0
-2677 1710 2918 0
-2677 1712 2916 0
-2677 1714 2914 0
-2677 1716 2912 0
-2677 1718 2910 0
-2677 1720 2908 0
-2677 1722 2906 0
-2677 1724 2904 0
-2677 1726 2902 0
-2677 1728 2900 0
-2677 1730 2898 0
-2677 1732 2896 0
-2677 1734 2894 0
-2677 1736 2892 0
-2677 1738 2890 0
-2677 1740 2888 0
-2677 1742 2886 0
-2677 1744 2884 0
-2677 1746 2882 0
-2677 1748 2880 0
-2677 1750 2878 0
-2677 1752 2876 0
-2677 1754 2874 0
-2677 1756 2872 0
-2677 1758 2870 0
-2677 1760 2868 0
-2677 1762 2866 0
-2677 1764 2864 0
-2677 1766 2862 0
-2677 1768 2860 0
-2677 1770 2858 0
-2677 1772 2856 0
-2677 1774 2854 0
-2677 1776 2852 0
-2677 1778 2850 0
-2677 1780 2848 0
-2677 1782 2846 0
-2677 1784 2844 0
-2677 1786 2842 0
-2677 1788 2840 0
-2677 1790 2838 0
-2677 1792 2836 0
-2677 1794 2834 0
-2677 1796 2832 0
-2677 1798 2830 0
-2677 1800 2828 0
-2677 1802 2826 0
-2677 1804 2824 0
-2677 1806 2822 0
-2677 1808 2820 0
-2677 1810 2818 0
-2677 1812 2816 0
-2677 1814 2814 0
-2677 1816 2812 0
-2677 1818 2810 0
-2677 1820 2808 0
-2677 1822 2806 0
-2677 1824 2804 0
-2675 2930 0
-2675 1699 2928 0
-2675 1700 2926 0
-2675 1702 2924 0
-2675 1704 2922 0
-2675 1706 2920 0
-2675 1708 2918 0
-2675 1710 2916 0
-2675 1712 2914 0
-2675 1714 2912 0
-2675 1716 2910 0
-2675 1718 2908 0
-2675 1720 2906 0
-2675 1722 2904 0
-2675 1724 2902 0
-2675 1726 2900 0
-2675 1728 2898 0
-2675 1730 2896 0
-2675 1732 2894 0
-2675 1734 2892 0
-2675 1736 2890 0
-2675 1738 2888 0
-2675 1740 2886 0
-2675 1742 2884 0
-2675 1744 2882 0
-2675 1746 2880 0
-2675 1748 2878 0
-2675 1750 2876 0
-2675 1752 2874 0
-2675 1754 2872 0
-2675 1756 2870 0
-2675 1758 2868 0
-2675 1760 2866 0
-2675 1762 2864 0
-2675 1764 2862 0
-2675 1766 2860 0
-2675 1768 2858 0
-2675 1770 2856 0
-2675 1772 2854 0
-2675 1774 2852 0
-2675 1776 2850 0
-2675 1778 2848 0
-2675 1780 2846 0
-2675 1782 2844 0
-2675 1784 2842 0
-2675 1786 2840 0
-2675 1788 2838 0
-2675 1790 2836 0
-2675 1792 2834 0
-2675 1794 2832 0
-2675 1796 2830 0
-2675 1798 2828 0
-2675 1800 2826 0
-2675 1802 2824 0
-2675 1804 2822 0
-2675 1806 2820 0
-2675 1808 2818 0
-2675 1810 2816 0
-2675 1812 2814 0
-2675 1814 2812 0
-2675 1816 2810 0
-2675 1818 2808 0
-2675 1820 2806 0
-2675 1822 2804 0
-2675 1824 2802 0
-2673 2928 0
-2673 1699 2926 0
-2673 1700 2924 0
-2673 1702 2922 0
-2673 1704 2920 0
-2673 1706 2918 0
-2673 1708 2916 0
-2673 1710 2914 0
-2673 1712 2912 0
-2673 1714 2910 0
-2673 1716 2908 0
-2673 1718 2906 0
-2673 1720 2904 0
-2673 1722 2902 0
-2673 1724 2900 0
-2673 1726 2898 0
-2673 1728 2896 0
-2673 1730 2894 0
-2673 1732 2892 0
-2673 1734 2890 0
-2673 1736 2888 0
-2673 1738 2886 0
-2673 1740 2884 0
-2673 1742 2882 0
-2673 1744 2880 0
-2673 1746 2878 0
-2673 1748 2876 0
-2673 1750 2874 0
-2673 1752 2872 0
-2673 1754 2870 0
-2673 1756 2868 0
-2673 1758 2866 0
-2673 1760 2864 0
-2673 1762 2862 0
-2673 1764 2860 0
-2673 1766 2858 0
-2673 1768 2856 0
-2673 1770 2854 0
-2673 1772 2852 0
-2673 1774 2850 0
-2673 1776 2848 0
-2673 1778 2846 0
-2673 1780 2844 0
-2673 1782 2842 0
-2673 1784 2840 0
-2673 1786 2838 0
-2673 1788 2836 0
-2673 1790 2834 0
-2673 1792 2832 0
-2673 1794 2830 0
-2673 1796 2828 0
-2673 1798 2826 0
-2673 1800 2824 0
-2673 1802 2822 0
-2673 1804 2820 0
-2673 1806 2818 0
-2673 1808 2816 0
-2673 1810 2814 0
-2673 1812 2812 0
-2673 1814 2810 0
-2673 1816 2808 0
-2673 1818 2806 0
-2673 1820 2804 0
-2673 1822 2802 0
-2673 1824 2800 0
-2671 2926 0
-2671 1699 2924 0
-2671 1700 2922 0
-2671 1702 2920 0
-2671 1704 2918 0
-2671 1706 2916 0
-2671 1708 2914 0
-2671 1710 2912 0
-2671 1712 2910 0
-2671 1714 2908 0
-2671 1716 2906 0
-2671 1718 2904 0
-2671 1720 2902 0
-2671 1722 2900 0
-2671 1724 2898 0
-2671 1726 2896 0
-2671 1728 2894 0
-2671 1730 2892 0
-2671 1732 2890 0
-2671 1734 2888 0
-2671 1736 2886 0
-2671 1738 2884 0
-2671 1740 2882 0
-2671 1742 2880 0
-2671 1744 2878 0
-2671 1746 2876 0
-2671 1748 2874 0
-2671 1750 2872 0
-2671 1752 2870 0
-2671 1754 2868 0
-2671 1756 2866 0
-2671 1758 2864 0
-2671 1760 2862 0
-2671 1762 2860 0
-2671 1764 2858 0
-2671 1766 2856 0
-2671 1768 2854 0
-2671 1770 2852 0
-2671 1772 2850 0
-2671 1774 2848 0
-2671 1776 2846 0
-2671 1778 2844 0
-2671 1780 2842 0
-2671 1782 2840 0
-2671 1784 2838 0
-2671 1786 2836 0
-2671 1788 2834 0
-2671 1790 2832 0
-2671 1792 2830 0
-2671 1794 2828 0
-2671 1796 2826 0
-2671 1798 2824 0
-2671 1800 2822 0
-2671 1802 2820 0
-2671 1804 2818 0
-2671 1806 2816 0
-2671 1808 2814 0
-2671 1810 2812 0
-2671 1812 2810 0
-2671 1814 2808 0
-2671 1816 2806 0
-2671 1818 2804 0
-2671 1820 2802 0
-2671 1822 2800 0
-2671 1824 2798 0
-2669 2924 0
-2669 1699 2922 0
-2669 1700 2920 0
-2669 1702 2918 0
-2669 1704 2916 0
-2669 1706 2914 0
-2669 1708 2912 0
-2669 1710 2910 0
-2669 1712 2908 0
-2669 1714 2906 0
-2669 1716 2904 0
-2669 1718 2902 0
-2669 1720 2900 0
-2669 1722 2898 0
-2669 1724 2896 0
-2669 1726 2894 0
-2669 1728 2892 0
-2669 1730 2890 0
-2669 1732 2888 0
-2669 1734 2886 0
-2669 1736 2884 0
-2669 1738 2882 0
-2669 1740 2880 0
-2669 1742 2878 0
-2669 1744 2876 0
-2669 1746 2874 0
-2669 1748 2872 0
-2669 1750 2870 0
-2669 1752 2868 0
-2669 1754 2866 0
-2669 1756 2864 0
-2669 1758 2862 0
-2669 1760 2860 0
-2669 1762 2858 0
-2669 1764 2856 0
-2669 1766 2854 0
-2669 1768 2852 0
-2669 1770 2850 0
-2669 1772 2848 0
-2669 1774 2846 0
-2669 1776 2844 0
-2669 1778 2842 0
-2669 1780 2840 0
-2669 1782 2838 0
-2669 1784 2836 0
-2669 1786 2834 0
-2669 1788 2832 0
-2669 1790 2830 0
-2669 1792 2828 0
-2669 1794 2826 0
-2669 1796 2824 0
-2669 1798 2822 0
-2669 1800 2820 0
-2669 1802 2818 0
-2669 1804 2816 0
-2669 1806 2814 0
-2669 1808 2812 0
-2669 1810 2810 0
-2669 1812 2808 0
-2669 1814 2806 0
-2669 1816 2804 0
-2669 1818 2802 0
-2669 1820 2800 0
-2669 1822 2798 0
-2669 1824 2796 0
-2667 2922 0
-2667 1699 2920 0
-2667 1700 2918 0
-2667 1702 2916 0
-2667 1704 2914 0
-2667 1706 2912 0
-2667 1708 2910 0
-2667 1710 2908 0
-2667 1712 2906 0
-2667 1714 2904 0
-2667 1716 2902 0
-2667 1718 2900 0
-2667 1720 2898 0
-2667 1722 2896 0
-2667 1724 2894 0
-2667 1726 2892 0
-2667 1728 2890 0
-2667 1730 2888 0
-2667 1732 2886 0
-2667 1734 2884 0
-2667 1736 2882 0
-2667 1738 2880 0
-2667 1740 2878 0
-2667 1742 2876 0
-2667 1744 2874 0
-2667 1746 2872 0
-2667 1748 2870 0
-2667 1750 2868 0
-2667 1752 2866 0
-2667 1754 2864 0
-2667 1756 2862 0
-2667 1758 2860 0
-2667 1760 2858 0
-2667 1762 2856 0
-2667 1764 2854 0
-2667 1766 2852 0
-2667 1768 2850 0
-2667 1770 2848 0
-2667 1772 2846 0
-2667 1774 2844 0
-2667 1776 2842 0
-2667 1778 2840 0
-2667 1780 2838 0
-2667 1782 2836 0
-2667 1784 2834 0
-2667 1786 2832 0
-2667 1788 2830 0
-2667 1790 2828 0
-2667 1792 2826 0
-2667 1794 2824 0
-2667 1796 2822 0
-2667 1798 2820 0
-2667 1800 2818 0
-2667 1802 2816 0
-2667 1804 2814 0
-2667 1806 2812 0
-2667 1808 2810 0
-2667 1810 2808 0
-2667 1812 2806 0
-2667 1814 2804 0
-2667 1816 2802 0
-2667 1818 2800 0
-2667 1820 2798 0
-2667 1822 2796 0
-2667 1824 2794 0
-2665 2920 0
-2665 1699 2918 0
-2665 1700 2916 0
-2665 1702 2914 0
-2665 1704 2912 0
-2665 1706 2910 0
-2665 1708 2908 0
-2665 1710 2906 0
-2665 1712 2904 0
-2665 1714 2902 0
-2665 1716 2900 0
-2665 1718 2898 0
-2665 1720 2896 0
-2665 1722 2894 0
-2665 1724 2892 0
-2665 1726 2890 0
-2665 1728 2888 0
-2665 1730 2886 0
-2665 1732 2884 0
-2665 1734 2882 0
-2665 1736 2880 0
-2665 1738 2878 0
-2665 1740 2876 0
-2665 1742 2874 0
-2665 1744 2872 0
-2665 1746 2870 0
-2665 1748 2868 0
-2665 1750 2866 0
-2665 1752 2864 0
-2665 1754 2862 0
-2665 1756 2860 0
-2665 1758 2858 0
-2665 1760 2856 0
-2665 1762 2854 0
-2665 1764 2852 0
-2665 1766 2850 0
-2665 1768 2848 0
-2665 1770 2846 0
-2665 1772 2844 0
-2665 1774 2842 0
-2665 1776 2840 0
-2665 1778 2838 0
-2665 1780 2836 0
-2665 1782 2834 0
-2665 1784 2832 0
-2665 1786 2830 0
-2665 1788 2828 0
-2665 1790 2826 0
-2665 1792 2824 0
-2665 1794 2822 0
-2665 1796 2820 0
-2665 1798 2818 0
-2665 1800 2816 0
-2665 1802 2814 0
-2665 1804 2812 0
-2665 1806 2810 0
-2665 1808 2808 0
-2665 1810 2806 0
-2665 1812 2804 0
-2665 1814 2802 0
-2665 1816 2800 0
-2665 1818 2798 0
-2665 1820 2796 0
-2665 1822 2794 0
-2665 1824 2792 0
-2663 2918 0
-2663 1699 2916 0
-2663 1700 2914 0
-2663 1702 2912 0
-2663 1704 2910 0
-2663 1706 2908 0
-2663 1708 2906 0
-2663 1710 2904 0
-2663 1712 2902 0
-2663 1714 2900 0
-2663 1716 2898 0
-2663 1718 2896 0
-2663 1720 2894 0
-2663 1722 2892 0
-2663 1724 2890 0
-2663 1726 2888 0
-2663 1728 2886 0
-2663 1730 2884 0
-2663 1732 2882 0
-2663 1734 2880 0
-2663 1736 2878 0
-2663 1738 2876 0
-2663 1740 2874 0
-2663 1742 2872 0
-2663 1744 2870 0
-2663 1746 2868 0
-2663 1748 2866 0
-2663 1750 2864 0
-2663 1752 2862 0
-2663 1754 2860 0
-2663 1756 2858 0
-2663 1758 2856 0
-2663 1760 2854 0
-2663 1762 2852 0
-2663 1764 2850 0
-2663 1766 2848 0
-2663 1768 2846 0
-2663 1770 2844 0
-2663 1772 2842 0
-2663 1774 2840 0
-2663 1776 2838 0
-2663 1778 2836 0
-2663 1780 2834 0
-2663 1782 2832 0
-2663 1784 2830 0
-2663 1786 2828 0
-2663 1788 2826 0
-2663 1790 2824 0
-2663 1792 2822 0
-2663 1794 2820 0
-2663 1796 2818 0
-2663 1798 2816 0
-2663 1800 2814 0
-2663 1802 2812 0
-2663 1804 2810 0
-2663 1806 2808 0
-2663 1808 2806 0
-2663 1810 2804 0
-2663 1812 2802 0
-2663 1814 2800 0
-2663 1816 2798 0
-2663 1818 2796 0
-2663 1820 2794 0
-2663 1822 2792 0
-2663 1824 2790 0
-2661 2916 0
-2661 1699 2914 0
-2661 1700 2912 0
-2661 1702 2910 0
-2661 1704 2908 0
-2661 1706 2906 0
-2661 1708 2904 0
-2661 1710 2902 0
-2661 1712 2900 0
-2661 1714 2898 0
-2661 1716 2896 0
-2661 1718 2894 0
-2661 1720 2892 0
-2661 1722 2890 0
-2661 1724 2888 0
-2661 1726 2886 0
-2661 1728 2884 0
-2661 1730 2882 0
-2661 1732 2880 0
-2661 1734 2878 0
-2661 1736 2876 0
-2661 1738 2874 0
-2661 1740 2872 0
-2661 1742 2870 0
-2661 1744 2868 0
-2661 1746 2866 0
-2661 1748 2864 0
-2661 1750 2862 0
-2661 1752 2860 0
-2661 1754 2858 0
-2661 1756 2856 0
-2661 1758 2854 0
-2661 1760 2852 0
-2661 1762 2850 0
-2661 1764 2848 0
-2661 1766 2846 0
-2661 1768 2844 0
-2661 1770 2842 0
-2661 1772 2840 0
-2661 1774 2838 0
-2661 1776 2836 0
-2661 1778 2834 0
-2661 1780 2832 0
-2661 1782 2830 0
-2661 1784 2828 0
-2661 1786 2826 0
-2661 1788 2824 0
-2661 1790 2822 0
-2661 1792 2820 0
-2661 1794 2818 0
-2661 1796 2816 0
-2661 1798 2814 0
-2661 1800 2812 0
-2661 1802 2810 0
-2661 1804 2808 0
-2661 1806 2806 0
-2661 1808 2804 0
-2661 1810 2802 0
-2661 1812 2800 0
-2661 1814 2798 0
-2661 1816 2796 0
-2661 1818 2794 0
-2661 1820 2792 0
-2661 1822 2790 0
-2661 1824 2788 0
-2659 2914 0
-2659 1699 2912 0
-2659 1700 2910 0
-2659 1702 2908 0
-2659 1704 2906 0
-2659 1706 2904 0
-2659 1708 2902 0
-2659 1710 2900 0
-2659 1712 2898 0
-2659 1714 2896 0
-2659 1716 2894 0
-2659 1718 2892 0
-2659 1720 2890 0
-2659 1722 2888 0
-2659 1724 2886 0
-2659 1726 2884 0
-2659 1728 2882 0
-2659 1730 2880 0
-2659 1732 2878 0
-2659 1734 2876 0
-2659 1736 2874 0
-2659 1738 2872 0
-2659 1740 2870 0
-2659 1742 2868 0
-2659 1744 2866 0
-2659 1746 2864 0
-2659 1748 2862 0
-2659 1750 2860 0
-2659 1752 2858 0
-2659 1754 2856 0
-2659 1756 2854 0
-2659 1758 2852 0
-2659 1760 2850 0
-2659 1762 2848 0
-2659 1764 2846 0
-2659 1766 2844 0
-2659 1768 2842 0
-2659 1770 2840 0
-2659 1772 2838 0
-2659 1774 2836 0
-2659 1776 2834 0
-2659 1778 2832 0
-2659 1780 2830 0
-2659 1782 2828 0
-2659 1784 2826 0
-2659 1786 2824 0
-2659 1788 2822 0
-2659 1790 2820 0
-2659 1792 2818 0
-2659 1794 2816 0
-2659 1796 2814 0
-2659 1798 2812 0
-2659 1800 2810 0
-2659 1802 2808 0
-2659 1804 2806 0
-2659 1806 2804 0
-2659 1808 2802 0
-2659 1810 2800 0
-2659 1812 2798 0
-2659 1814 2796 0
-2659 1816 2794 0
-2659 1818 2792 0
-2659 1820 2790 0
-2659 1822 2788 0
-2659 1824 2786 0
-2657 2912 0
-2657 1699 2910 0
-2657 1700 2908 0
-2657 1702 2906 0
-2657 1704 2904 0
-2657 1706 2902 0
-2657 1708 2900 0
-2657 1710 2898 0
-2657 1712 2896 0
-2657 1714 2894 0
-2657 1716 2892 0
-2657 1718 2890 0
-2657 1720 2888 0
-2657 1722 2886 0
-2657 1724 2884 0
-2657 1726 2882 0
-2657 1728 2880 0
-2657 1730 2878 0
-2657 1732 2876 0
-2657 1734 2874 0
-2657 1736 2872 0
-2657 1738 2870 0
-2657 1740 2868 0
-2657 1742 2866 0
-2657 1744 2864 0
-2657 1746 2862 0
-2657 1748 2860 0
-2657 1750 2858 0
-2657 1752 2856 0
-2657 1754 2854 0
-2657 1756 2852 0
-2657 1758 2850 0
-2657 1760 2848 0
-2657 1762 2846 0
-2657 1764 2844 0
-2657 1766 2842 0
-2657 1768 2840 0
-2657 1770 2838 0
-2657 1772 2836 0
-2657 1774 2834 0
-2657 1776 2832 0
-2657 1778 2830 0
-2657 1780 2828 0
-2657 1782 2826 0
-2657 1784 2824 0
-2657 1786 2822 0
-2657 1788 2820 0
-2657 1790 2818 0
-2657 1792 2816 0
-2657 1794 2814 0
-2657 1796 2812 0
-2657 1798 2810 0
-2657 1800 2808 0
-2657 1802 2806 0
-2657 1804 2804 0
-2657 1806 2802 0
-2657 1808 2800 0
-2657 1810 2798 0
-2657 1812 2796 0
-2657 1814 2794 0
-2657 1816 2792 0
-2657 1818 2790 0
-2657 1820 2788 0
-2657 1822 2786 0
-2657 1824 2784 0
-2655 2910 0
-2655 1699 2908 0
-2655 1700 2906 0
-2655 1702 2904 0
-2655 1704 2902 0
-2655 1706 2900 0
-2655 1708 2898 0
-2655 1710 2896 0
-2655 1712 2894 0
-2655 1714 2892 0
-2655 1716 2890 0
-2655 1718 2888 0
-2655 1720 2886 0
-2655 1722 2884 0
-2655 1724 2882 0
-2655 1726 2880 0
-2655 1728 2878 0
-2655 1730 2876 0
-2655 1732 2874 0
-2655 1734 2872 0
-2655 1736 2870 0
-2655 1738 2868 0
-2655 1740 2866 0
-2655 1742 2864 0
-2655 1744 2862 0
-2655 1746 2860 0
-2655 1748 2858 0
-2655 1750 2856 0
-2655 1752 2854 0
-2655 1754 2852 0
-2655 1756 2850 0
-2655 1758 2848 0
-2655 1760 2846 0
-2655 1762 2844 0
-2655 1764 2842 0
-2655 1766 2840 0
-2655 1768 2838 0
-2655 1770 2836 0
-2655 1772 2834 0
-2655 1774 2832 0
-2655 1776 2830 0
-2655 1778 2828 0
-2655 1780 2826 0
-2655 1782 2824 0
-2655 1784 2822 0
-2655 1786 2820 0
-2655 1788 2818 0
-2655 1790 2816 0
-2655 1792 2814 0
-2655 1794 2812 0
-2655 1796 2810 0
-2655 1798 2808 0
-2655 1800 2806 0
-2655 1802 2804 0
-2655 1804 2802 0
-2655 1806 2800 0
-2655 1808 2798 0
-2655 1810 2796 0
-2655 1812 2794 0
-2655 1814 2792 0
-2655 1816 2790 0
-2655 1818 2788 0
-2655 1820 2786 0
-2655 1822 2784 0
-2655 1824 2782 0
-2653 2908 0
-2653 1699 2906 0
-2653 1700 2904 0
-2653 1702 2902 0
-2653 1704 2900 0
-2653 1706 2898 0
-2653 1708 2896 0
-2653 1710 2894 0
-2653 1712 2892 0
-2653 1714 2890 0
-2653 1716 2888 0
-2653 1718 2886 0
-2653 1720 2884 0
-2653 1722 2882 0
-2653 1724 2880 0
-2653 1726 2878 0
-2653 1728 2876 0
-2653 1730 2874 0
-2653 1732 2872 0
-2653 1734 2870 0
-2653 1736 2868 0
-2653 1738 2866 0
-2653 1740 2864 0
-2653 1742 2862 0
-2653 1744 2860 0
-2653 1746 2858 0
-2653 1748 2856 0
-2653 1750 2854 0
-2653 1752 2852 0
-2653 1754 2850 0
-2653 1756 2848 0
-2653 1758 2846 0
-2653 1760 2844 0
-2653 1762 2842 0
-2653 1764 2840 0
-2653 1766 2838 0
-2653 1768 2836 0
-2653 1770 2834 0
-2653 1772 2832 0
-2653 1774 2830 0
-2653 1776 2828 0
-2653 1778 2826 0
-2653 1780 2824 0
-2653 1782 2822 0
-2653 1784 2820 0
-2653 1786 2818 0
-2653 1788 2816 0
-2653 1790 2814 0
-2653 1792 2812 0
-2653 1794 2810 0
-2653 1796 2808 0
-2653 1798 2806 0
-2653 1800 2804 0
-2653 1802 2802 0
-2653 1804 2800 0
-2653 1806 2798 0
-2653 1808 2796 0
-2653 1810 2794 0
-2653 1812 2792 0
-2653 1814 2790 0
-2653 1816 2788 0
-2653 1818 2786 0
-2653 1820 2784 0
-2653 1822 2782 0
-2653 1824 2780 0
-2651 2906 0
-2651 1699 2904 0
-2651 1700 2902 0
-2651 1702 2900 0
-2651 1704 2898 0
-2651 1706 2896 0
-2651 1708 2894 0
-2651 1710 2892 0
-2651 1712 2890 0
-2651 1714 2888 0
-2651 1716 2886 0
-2651 1718 2884 0
-2651 1720 2882 0
-2651 1722 2880 0
-2651 1724 2878 0
-2651 1726 2876 0
-2651 1728 2874 0
-2651 1730 2872 0
-2651 1732 2870 0
-2651 1734 2868 0
-2651 1736 2866 0
-2651 1738 2864 0
-2651 1740 2862 0
-2651 1742 2860 0
-2651 1744 2858 0
-2651 1746 2856 0
-2651 1748 2854 0
-2651 1750 2852 0
-2651 1752 2850 0
-2651 1754 2848 0
-2651 1756 2846 0
-2651 1758 2844 0
-2651 1760 2842 0
-2651 1762 2840 0
-2651 1764 2838 0
-2651 1766 2836 0
-2651 1768 2834 0
-2651 1770 2832 0
-2651 1772 2830 0
-2651 1774 2828 0
-2651 1776 2826 0
-2651 1778 2824 0
-2651 1780 2822 0
-2651 1782 2820 0
-2651 1784 2818 0
-2651 1786 2816 0
-2651 1788 2814 0
-2651 1790 2812 0
-2651 1792 2810 0
-2651 1794 2808 0
-2651 1796 2806 0
-2651 1798 2804 0
-2651 1800 2802 0
-2651 1802 2800 0
-2651 1804 2798 0
-2651 1806 2796 0
-2651 1808 2794 0
-2651 1810 2792 0
-2651 1812 2790 0
-2651 1814 2788 0
-2651 1816 2786 0
-2651 1818 2784 0
-2651 1820 2782 0
-2651 1822 2780 0
-2651 1824 2778 0
-2649 2904 0
-2649 1699 2902 0
-2649 1700 2900 0
-2649 1702 2898 0
-2649 1704 2896 0
-2649 1706 2894 0
-2649 1708 2892 0
-2649 1710 2890 0
-2649 1712 2888 0
-2649 1714 2886 0
-2649 1716 2884 0
-2649 1718 2882 0
-2649 1720 2880 0
-2649 1722 2878 0
-2649 1724 2876 0
-2649 1726 2874 0
-2649 1728 2872 0
-2649 1730 2870 0
-2649 1732 2868 0
-2649 1734 2866 0
-2649 1736 2864 0
-2649 1738 2862 0
-2649 1740 2860 0
-2649 1742 2858 0
-2649 1744 2856 0
-2649 1746 2854 0
-2649 1748 2852 0
-2649 1750 2850 0
-2649 1752 2848 0
-2649 1754 2846 0
-2649 1756 2844 0
-2649 1758 2842 0
-2649 1760 2840 0
-2649 1762 2838 0
-2649 1764 2836 0
-2649 1766 2834 0
-2649 1768 2832 0
-2649 1770 2830 0
-2649 1772 2828 0
-2649 1774 2826 0
-2649 1776 2824 0
-2649 1778 2822 0
-2649 1780 2820 0
-2649 1782 2818 0
-2649 1784 2816 0
-2649 1786 2814 0
-2649 1788 2812 0
-2649 1790 2810 0
-2649 1792 2808 0
-2649 1794 2806 0
-2649 1796 2804 0
-2649 1798 2802 0
-2649 1800 2800 0
-2649 1802 2798 0
-2649 1804 2796 0
-2649 1806 2794 0
-2649 1808 2792 0
-2649 1810 2790 0
-2649 1812 2788 0
-2649 1814 2786 0
-2649 1816 2784 0
-2649 1818 2782 0
-2649 1820 2780 0
-2649 1822 2778 0
-2649 1824 2776 0
-2647 2902 0
-2647 1699 2900 0
-2647 1700 2898 0
-2647 1702 2896 0
-2647 1704 2894 0
-2647 1706 2892 0
-2647 1708 2890 0
-2647 1710 2888 0
-2647 1712 2886 0
-2647 1714 2884 0
-2647 1716 2882 0
-2647 1718 2880 0
-2647 1720 2878 0
-2647 1722 2876 0
-2647 1724 2874 0
-2647 1726 2872 0
-2647 1728 2870 0
-2647 1730 2868 0
-2647 1732 2866 0
-2647 1734 2864 0
-2647 1736 2862 0
-2647 1738 2860 0
-2647 1740 2858 0
-2647 1742 2856 0
-2647 1744 2854 0
-2647 1746 2852 0
-2647 1748 2850 0
-2647 1750 2848 0
-2647 1752 2846 0
-2647 1754 2844 0
-2647 1756 2842 0
-2647 1758 2840 0
-2647 1760 2838 0
-2647 1762 2836 0
-2647 1764 2834 0
-2647 1766 2832 0
-2647 1768 2830 0
-2647 1770 2828 0
-2647 1772 2826 0
-2647 1774 2824 0
-2647 1776 2822 0
-2647 1778 2820 0
-2647 1780 2818 0
-2647 1782 2816 0
-2647 1784 2814 0
-2647 1786 2812 0
-2647 1788 2810 0
-2647 1790 2808 0
-2647 1792 2806 0
-2647 1794 2804 0
-2647 1796 2802 0
-2647 1798 2800 0
-2647 1800 2798 0
-2647 1802 2796 0
-2647 1804 2794 0
-2647 1806 2792 0
-2647 1808 2790 0
-2647 1810 2788 0
-2647 1812 2786 0
-2647 1814 2784 0
-2647 1816 2782 0
-2647 1818 2780 0
-2647 1820 2778 0
-2647 1822 2776 0
-2647 1824 2774 0
-2645 2900 0
-2645 1699 2898 0
-2645 1700 2896 0
-2645 1702 2894 0
-2645 1704 2892 0
-2645 1706 2890 0
-2645 1708 2888 0
-2645 1710 2886 0
-2645 1712 2884 0
-2645 1714 2882 0
-2645 1716 2880 0
-2645 1718 2878 0
-2645 1720 2876 0
-2645 1722 2874 0
-2645 1724 2872 0
-2645 1726 2870 0
-2645 1728 2868 0
-2645 1730 2866 0
-2645 1732 2864 0
-2645 1734 2862 0
-2645 1736 2860 0
-2645 1738 2858 0
-2645 1740 2856 0
-2645 1742 2854 0
-2645 1744 2852 0
-2645 1746 2850 0
-2645 1748 2848 0
-2645 1750 2846 0
-2645 1752 2844 0
-2645 1754 2842 0
-2645 1756 2840 0
-2645 1758 2838 0
-2645 1760 2836 0
-2645 1762 2834 0
-2645 1764 2832 0
-2645 1766 2830 0
-2645 1768 2828 0
-2645 1770 2826 0
-2645 1772 2824 0
-2645 1774 2822 0
-2645 1776 2820 0
-2645 1778 2818 0
-2645 1780 2816 0
-2645 1782 2814 0
-2645 1784 2812 0
-2645 1786 2810 0
-2645 1788 2808 0
-2645 1790 2806 0
-2645 1792 2804 0
-2645 1794 2802 0
-2645 1796 2800 0
-2645 1798 2798 0
-2645 1800 2796 0
-2645 1802 2794 0
-2645 1804 2792 0
-2645 1806 2790 0
-2645 1808 2788 0
-2645 1810 2786 0
-2645 1812 2784 0
-2645 1814 2782 0
-2645 1816 2780 0
-2645 1818 2778 0
-2645 1820 2776 0
-2645 1822 2774 0
-2645 1824 2772 0
-2643 2898 0
-2643 1699 2896 0
-2643 1700 2894 0
-2643 1702 2892 0
-2643 1704 2890 0
-2643 1706 2888 0
-2643 1708 2886 0
-2643 1710 2884 0
-2643 1712 2882 0
-2643 1714 2880 0
-2643 1716 2878 0
-2643 1718 2876 0
-2643 1720 2874 0
-2643 1722 2872 0
-2643 1724 2870 0
-2643 1726 2868 0
-2643 1728 2866 0
-2643 1730 2864 0
-2643 1732 2862 0
-2643 1734 2860 0
-2643 1736 2858 0
-2643 1738 2856 0
-2643 1740 2854 0
-2643 1742 2852 0
-2643 1744 2850 0
-2643 1746 2848 0
-2643 1748 2846 0
-2643 1750 2844 0
-2643 1752 2842 0
-2643 1754 2840 0
-2643 1756 2838 0
-2643 1758 2836 0
-2643 1760 2834 0
-2643 1762 2832 0
-2643 1764 2830 0
-2643 1766 2828 0
-2643 1768 2826 0
-2643 1770 2824 0
-2643 1772 2822 0
-2643 1774 2820 0
-2643 1776 2818 0
-2643 1778 2816 0
-2643 1780 2814 0
-2643 1782 2812 0
-2643 1784 2810 0
-2643 1786 2808 0
-2643 1788 2806 0
-2643 1790 2804 0
-2643 1792 2802 0
-2643 1794 2800 0
-2643 1796 2798 0
-2643 1798 2796 0
-2643 1800 2794 0
-2643 1802 2792 0
-2643 1804 2790 0
-2643 1806 2788 0
-2643 1808 2786 0
-2643 1810 2784 0
-2643 1812 2782 0
-2643 1814 2780 0
-2643 1816 2778 0
-2643 1818 2776 0
-2643 1820 2774 0
-2643 1822 2772 0
-2643 1824 2770 0
-2641 2896 0
-2641 1699 2894 0
-2641 1700 2892 0
-2641 1702 2890 0
-2641 1704 2888 0
-2641 1706 2886 0
-2641 1708 2884 0
-2641 1710 2882 0
-2641 1712 2880 0
-2641 1714 2878 0
-2641 1716 2876 0
-2641 1718 2874 0
-2641 1720 2872 0
-2641 1722 2870 0
-2641 1724 2868 0
-2641 1726 2866 0
-2641 1728 2864 0
-2641 1730 2862 0
-2641 1732 2860 0
-2641 1734 2858 0
-2641 1736 2856 0
-2641 1738 2854 0
-2641 1740 2852 0
-2641 1742 2850 0
-2641 1744 2848 0
-2641 1746 2846 0
-2641 1748 2844 0
-2641 1750 2842 0
-2641 1752 2840 0
-2641 1754 2838 0
-2641 1756 2836 0
-2641 1758 2834 0
-2641 1760 2832 0
-2641 1762 2830 0
-2641 1764 2828 0
-2641 1766 2826 0
-2641 1768 2824 0
-2641 1770 2822 0
-2641 1772 2820 0
-2641 1774 2818 0
-2641 1776 2816 0
-2641 1778 2814 0
-2641 1780 2812 0
-2641 1782 2810 0
-2641 1784 2808 0
-2641 1786 2806 0
-2641 1788 2804 0
-2641 1790 2802 0
-2641 1792 2800 0
-2641 1794 2798 0
-2641 1796 2796 0
-2641 1798 2794 0
-2641 1800 2792 0
-2641 1802 2790 0
-2641 1804 2788 0
-2641 1806 2786 0
-2641 1808 2784 0
-2641 1810 2782 0
-2641 1812 2780 0
-2641 1814 2778 0
-2641 1816 2776 0
-2641 1818 2774 0
-2641 1820 2772 0
-2641 1822 2770 0
-2641 1824 2768 0
-2639 2894 0
-2639 1699 2892 0
-2639 1700 2890 0
-2639 1702 2888 0
-2639 1704 2886 0
-2639 1706 2884 0
-2639 1708 2882 0
-2639 1710 2880 0
-2639 1712 2878 0
-2639 1714 2876 0
-2639 1716 2874 0
-2639 1718 2872 0
-2639 1720 2870 0
-2639 1722 2868 0
-2639 1724 2866 0
-2639 1726 2864 0
-2639 1728 2862 0
-2639 1730 2860 0
-2639 1732 2858 0
-2639 1734 2856 0
-2639 1736 2854 0
-2639 1738 2852 0
-2639 1740 2850 0
-2639 1742 2848 0
-2639 1744 2846 0
-2639 1746 2844 0
-2639 1748 2842 0
-2639 1750 2840 0
-2639 1752 2838 0
-2639 1754 2836 0
-2639 1756 2834 0
-2639 1758 2832 0
-2639 1760 2830 0
-2639 1762 2828 0
-2639 1764 2826 0
-2639 1766 2824 0
-2639 1768 2822 0
-2639 1770 2820 0
-2639 1772 2818 0
-2639 1774 2816 0
-2639 1776 2814 0
-2639 1778 2812 0
-2639 1780 2810 0
-2639 1782 2808 0
-2639 1784 2806 0
-2639 1786 2804 0
-2639 1788 2802 0
-2639 1790 2800 0
-2639 1792 2798 0
-2639 1794 2796 0
-2639 1796 2794 0
-2639 1798 2792 0
-2639 1800 2790 0
-2639 1802 2788 0
-2639 1804 2786 0
-2639 1806 2784 0
-2639 1808 2782 0
-2639 1810 2780 0
-2639 1812 2778 0
-2639 1814 2776 0
-2639 1816 2774 0
-2639 1818 2772 0
-2639 1820 2770 0
-2639 1822 2768 0
-2639 1824 2766 0
-2637 2892 0
-2637 1699 2890 0
-2637 1700 2888 0
-2637 1702 2886 0
-2637 1704 2884 0
-2637 1706 2882 0
-2637 1708 2880 0
-2637 1710 2878 0
-2637 1712 2876 0
-2637 1714 2874 0
-2637 1716 2872 0
-2637 1718 2870 0
-2637 1720 2868 0
-2637 1722 2866 0
-2637 1724 2864 0
-2637 1726 2862 0
-2637 1728 2860 0
-2637 1730 2858 0
-2637 1732 2856 0
-2637 1734 2854 0
-2637 1736 2852 0
-2637 1738 2850 0
-2637 1740 2848 0
-2637 1742 2846 0
-2637 1744 2844 0
-2637 1746 2842 0
-2637 1748 2840 0
-2637 1750 2838 0
-2637 1752 2836 0
-2637 1754 2834 0
-2637 1756 2832 0
-2637 1758 2830 0
-2637 1760 2828 0
-2637 1762 2826 0
-2637 1764 2824 0
-2637 1766 2822 0
-2637 1768 2820 0
-2637 1770 2818 0
-2637 1772 2816 0
-2637 1774 2814 0
-2637 1776 2812 0
-2637 1778 2810 0
-2637 1780 2808 0
-2637 1782 2806 0
-2637 1784 2804 0
-2637 1786 2802 0
-2637 1788 2800 0
-2637 1790 2798 0
-2637 1792 2796 0
-2637 1794 2794 0
-2637 1796 2792 0
-2637 1798 2790 0
-2637 1800 2788 0
-2637 1802 2786 0
-2637 1804 2784 0
-2637 1806 2782 0
-2637 1808 2780 0
-2637 1810 2778 0
-2637 1812 2776 0
-2637 1814 2774 0
-2637 1816 2772 0
-2637 1818 2770 0
-2637 1820 2768 0
-2637 1822 2766 0
-2637 1824 2764 0
-2635 2890 0
-2635 1699 2888 0
-2635 1700 2886 0
-2635 1702 2884 0
-2635 1704 2882 0
-2635 1706 2880 0
-2635 1708 2878 0
-2635 1710 2876 0
-2635 1712 2874 0
-2635 1714 2872 0
-2635 1716 2870 0
-2635 1718 2868 0
-2635 1720 2866 0
-2635 1722 2864 0
-2635 1724 2862 0
-2635 1726 2860 0
-2635 1728 2858 0
-2635 1730 2856 0
-2635 1732 2854 0
-2635 1734 2852 0
-2635 1736 2850 0
-2635 1738 2848 0
-2635 1740 2846 0
-2635 1742 2844 0
-2635 1744 2842 0
-2635 1746 2840 0
-2635 1748 2838 0
-2635 1750 2836 0
-2635 1752 2834 0
-2635 1754 2832 0
-2635 1756 2830 0
-2635 1758 2828 0
-2635 1760 2826 0
-2635 1762 2824 0
-2635 1764 2822 0
-2635 1766 2820 0
-2635 1768 2818 0
-2635 1770 2816 0
-2635 1772 2814 0
-2635 1774 2812 0
-2635 1776 2810 0
-2635 1778 2808 0
-2635 1780 2806 0
-2635 1782 2804 0
-2635 1784 2802 0
-2635 1786 2800 0
-2635 1788 2798 0
-2635 1790 2796 0
-2635 1792 2794 0
-2635 1794 2792 0
-2635 1796 2790 0
-2635 1798 2788 0
-2635 1800 2786 0
-2635 1802 2784 0
-2635 1804 2782 0
-2635 1806 2780 0
-2635 1808 2778 0
-2635 1810 2776 0
-2635 1812 2774 0
-2635 1814 2772 0
-2635 1816 2770 0
-2635 1818 2768 0
-2635 1820 2766 0
-2635 1822 2764 0
-2635 1824 2762 0
-2633 2888 0
-2633 1699 2886 0
-2633 1700 2884 0
-2633 1702 2882 0
-2633 1704 2880 0
-2633 1706 2878 0
-2633 1708 2876 0
-2633 1710 2874 0
-2633 1712 2872 0
-2633 1714 2870 0
-2633 1716 2868 0
-2633 1718 2866 0
-2633 1720 2864 0
-2633 1722 2862 0
-2633 1724 2860 0
-2633 1726 2858 0
-2633 1728 2856 0
-2633 1730 2854 0
-2633 1732 2852 0
-2633 1734 2850 0
-2633 1736 2848 0
-2633 1738 2846 0
-2633 1740 2844 0
-2633 1742 2842 0
-2633 1744 2840 0
-2633 1746 2838 0
-2633 1748 2836 0
-2633 1750 2834 0
-2633 1752 2832 0
-2633 1754 2830 0
-2633 1756 2828 0
-2633 1758 2826 0
-2633 1760 2824 0
-2633 1762 2822 0
-2633 1764 2820 0
-2633 1766 2818 0
-2633 1768 2816 0
-2633 1770 2814 0
-2633 1772 2812 0
-2633 1774 2810 0
-2633 1776 2808 0
-2633 1778 2806 0
-2633 1780 2804 0
-2633 1782 2802 0
-2633 1784 2800 0
-2633 1786 2798 0
-2633 1788 2796 0
-2633 1790 2794 0
-2633 1792 2792 0
-2633 1794 2790 0
-2633 1796 2788 0
-2633 1798 2786 0
-2633 1800 2784 0
-2633 1802 2782 0
-2633 1804 2780 0
-2633 1806 2778 0
-2633 1808 2776 0
-2633 1810 2774 0
-2633 1812 2772 0
-2633 1814 2770 0
-2633 1816 2768 0
-2633 1818 2766 0
-2633 1820 2764 0
-2633 1822 2762 0
-2633 1824 2760 0
-2631 2886 0
-2631 1699 2884 0
-2631 1700 2882 0
-2631 1702 2880 0
-2631 1704 2878 0
-2631 1706 2876 0
-2631 1708 2874 0
-2631 1710 2872 0
-2631 1712 2870 0
-2631 1714 2868 0
-2631 1716 2866 0
-2631 1718 2864 0
-2631 1720 2862 0
-2631 1722 2860 0
-2631 1724 2858 0
-2631 1726 2856 0
-2631 1728 2854 0
-2631 1730 2852 0
-2631 1732 2850 0
-2631 1734 2848 0
-2631 1736 2846 0
-2631 1738 2844 0
-2631 1740 2842 0
-2631 1742 2840 0
-2631 1744 2838 0
-2631 1746 2836 0
-2631 1748 2834 0
-2631 1750 2832 0
-2631 1752 2830 0
-2631 1754 2828 0
-2631 1756 2826 0
-2631 1758 2824 0
-2631 1760 2822 0
-2631 1762 2820 0
-2631 1764 2818 0
-2631 1766 2816 0
-2631 1768 2814 0
-2631 1770 2812 0
-2631 1772 2810 0
-2631 1774 2808 0
-2631 1776 2806 0
-2631 1778 2804 0
-2631 1780 2802 0
-2631 1782 2800 0
-2631 1784 2798 0
-2631 1786 2796 0
-2631 1788 2794 0
-2631 1790 2792 0
-2631 1792 2790 0
-2631 1794 2788 0
-2631 1796 2786 0
-2631 1798 2784 0
-2631 1800 2782 0
-2631 1802 2780 0
-2631 1804 2778 0
-2631 1806 2776 0
-2631 1808 2774 0
-2631 1810 2772 0
-2631 1812 2770 0
-2631 1814 2768 0
-2631 1816 2766 0
-2631 1818 2764 0
-2631 1820 2762 0
-2631 1822 2760 0
-2631 1824 2758 0
-2629 2884 0
-2629 1699 2882 0
-2629 1700 2880 0
-2629 1702 2878 0
-2629 1704 2876 0
-2629 1706 2874 0
-2629 1708 2872 0
-2629 1710 2870 0
-2629 1712 2868 0
-2629 1714 2866 0
-2629 1716 2864 0
-2629 1718 2862 0
-2629 1720 2860 0
-2629 1722 2858 0
-2629 1724 2856 0
-2629 1726 2854 0
-2629 1728 2852 0
-2629 1730 2850 0
-2629 1732 2848 0
-2629 1734 2846 0
-2629 1736 2844 0
-2629 1738 2842 0
-2629 1740 2840 0
-2629 1742 2838 0
-2629 1744 2836 0
-2629 1746 2834 0
-2629 1748 2832 0
-2629 1750 2830 0
-2629 1752 2828 0
-2629 1754 2826 0
-2629 1756 2824 0
-2629 1758 2822 0
-2629 1760 2820 0
-2629 1762 2818 0
-2629 1764 2816 0
-2629 1766 2814 0
-2629 1768 2812 0
-2629 1770 2810 0
-2629 1772 2808 0
-2629 1774 2806 0
-2629 1776 2804 0
-2629 1778 2802 0
-2629 1780 2800 0
-2629 1782 2798 0
-2629 1784 2796 0
-2629 1786 2794 0
-2629 1788 2792 0
-2629 1790 2790 0
-2629 1792 2788 0
-2629 1794 2786 0
-2629 1796 2784 0
-2629 1798 2782 0
-2629 1800 2780 0
-2629 1802 2778 0
-2629 1804 2776 0
-2629 1806 2774 0
-2629 1808 2772 0
-2629 1810 2770 0
-2629 1812 2768 0
-2629 1814 2766 0
-2629 1816 2764 0
-2629 1818 2762 0
-2629 1820 2760 0
-2629 1822 2758 0
-2629 1824 2756 0
-2627 2882 0
-2627 1699 2880 0
-2627 1700 2878 0
-2627 1702 2876 0
-2627 1704 2874 0
-2627 1706 2872 0
-2627 1708 2870 0
-2627 1710 2868 0
-2627 1712 2866 0
-2627 1714 2864 0
-2627 1716 2862 0
-2627 1718 2860 0
-2627 1720 2858 0
-2627 1722 2856 0
-2627 1724 2854 0
-2627 1726 2852 0
-2627 1728 2850 0
-2627 1730 2848 0
-2627 1732 2846 0
-2627 1734 2844 0
-2627 1736 2842 0
-2627 1738 2840 0
-2627 1740 2838 0
-2627 1742 2836 0
-2627 1744 2834 0
-2627 1746 2832 0
-2627 1748 2830 0
-2627 1750 2828 0
-2627 1752 2826 0
-2627 1754 2824 0
-2627 1756 2822 0
-2627 1758 2820 0
-2627 1760 2818 0
-2627 1762 2816 0
-2627 1764 2814 0
-2627 1766 2812 0
-2627 1768 2810 0
-2627 1770 2808 0
-2627 1772 2806 0
-2627 1774 2804 0
-2627 1776 2802 0
-2627 1778 2800 0
-2627 1780 2798 0
-2627 1782 2796 0
-2627 1784 2794 0
-2627 1786 2792 0
-2627 1788 2790 0
-2627 1790 2788 0
-2627 1792 2786 0
-2627 1794 2784 0
-2627 1796 2782 0
-2627 1798 2780 0
-2627 1800 2778 0
-2627 1802 2776 0
-2627 1804 2774 0
-2627 1806 2772 0
-2627 1808 2770 0
-2627 1810 2768 0
-2627 1812 2766 0
-2627 1814 2764 0
-2627 1816 2762 0
-2627 1818 2760 0
-2627 1820 2758 0
-2627 1822 2756 0
-2627 1824 2754 0
-2625 2880 0
-2625 1699 2878 0
-2625 1700 2876 0
-2625 1702 2874 0
-2625 1704 2872 0
-2625 1706 2870 0
-2625 1708 2868 0
-2625 1710 2866 0
-2625 1712 2864 0
-2625 1714 2862 0
-2625 1716 2860 0
-2625 1718 2858 0
-2625 1720 2856 0
-2625 1722 2854 0
-2625 1724 2852 0
-2625 1726 2850 0
-2625 1728 2848 0
-2625 1730 2846 0
-2625 1732 2844 0
-2625 1734 2842 0
-2625 1736 2840 0
-2625 1738 2838 0
-2625 1740 2836 0
-2625 1742 2834 0
-2625 1744 2832 0
-2625 1746 2830 0
-2625 1748 2828 0
-2625 1750 2826 0
-2625 1752 2824 0
-2625 1754 2822 0
-2625 1756 2820 0
-2625 1758 2818 0
-2625 1760 2816 0
-2625 1762 2814 0
-2625 1764 2812 0
-2625 1766 2810 0
-2625 1768 2808 0
-2625 1770 2806 0
-2625 1772 2804 0
-2625 1774 2802 0
-2625 1776 2800 0
-2625 1778 2798 0
-2625 1780 2796 0
-2625 1782 2794 0
-2625 1784 2792 0
-2625 1786 2790 0
-2625 1788 2788 0
-2625 1790 2786 0
-2625 1792 2784 0
-2625 1794 2782 0
-2625 1796 2780 0
-2625 1798 2778 0
-2625 1800 2776 0
-2625 1802 2774 0
-2625 1804 2772 0
-2625 1806 2770 0
-2625 1808 2768 0
-2625 1810 2766 0
-2625 1812 2764 0
-2625 1814 2762 0
-2625 1816 2760 0
-2625 1818 2758 0
-2625 1820 2756 0
-2625 1822 2754 0
-2625 1824 2752 0
-2623 2878 0
-2623 1699 2876 0
-2623 1700 2874 0
-2623 1702 2872 0
-2623 1704 2870 0
-2623 1706 2868 0
-2623 1708 2866 0
-2623 1710 2864 0
-2623 1712 2862 0
-2623 1714 2860 0
-2623 1716 2858 0
-2623 1718 2856 0
-2623 1720 2854 0
-2623 1722 2852 0
-2623 1724 2850 0
-2623 1726 2848 0
-2623 1728 2846 0
-2623 1730 2844 0
-2623 1732 2842 0
-2623 1734 2840 0
-2623 1736 2838 0
-2623 1738 2836 0
-2623 1740 2834 0
-2623 1742 2832 0
-2623 1744 2830 0
-2623 1746 2828 0
-2623 1748 2826 0
-2623 1750 2824 0
-2623 1752 2822 0
-2623 1754 2820 0
-2623 1756 2818 0
-2623 1758 2816 0
-2623 1760 2814 0
-2623 1762 2812 0
-2623 1764 2810 0
-2623 1766 2808 0
-2623 1768 2806 0
-2623 1770 2804 0
-2623 1772 2802 0
-2623 1774 2800 0
-2623 1776 2798 0
-2623 1778 2796 0
-2623 1780 2794 0
-2623 1782 2792 0
-2623 1784 2790 0
-2623 1786 2788 0
-2623 1788 2786 0
-2623 1790 2784 0
-2623 1792 2782 0
-2623 1794 2780 0
-2623 1796 2778 0
-2623 1798 2776 0
-2623 1800 2774 0
-2623 1802 2772 0
-2623 1804 2770 0
-2623 1806 2768 0
-2623 1808 2766 0
-2623 1810 2764 0
-2623 1812 2762 0
-2623 1814 2760 0
-2623 1816 2758 0
-2623 1818 2756 0
-2623 1820 2754 0
-2623 1822 2752 0
-2623 1824 2750 0
-2621 2876 0
-2621 1699 2874 0
-2621 1700 2872 0
-2621 1702 2870 0
-2621 1704 2868 0
-2621 1706 2866 0
-2621 1708 2864 0
-2621 1710 2862 0
-2621 1712 2860 0
-2621 1714 2858 0
-2621 1716 2856 0
-2621 1718 2854 0
-2621 1720 2852 0
-2621 1722 2850 0
-2621 1724 2848 0
-2621 1726 2846 0
-2621 1728 2844 0
-2621 1730 2842 0
-2621 1732 2840 0
-2621 1734 2838 0
-2621 1736 2836 0
-2621 1738 2834 0
-2621 1740 2832 0
-2621 1742 2830 0
-2621 1744 2828 0
-2621 1746 2826 0
-2621 1748 2824 0
-2621 1750 2822 0
-2621 1752 2820 0
-2621 1754 2818 0
-2621 1756 2816 0
-2621 1758 2814 0
-2621 1760 2812 0
-2621 1762 2810 0
-2621 1764 2808 0
-2621 1766 2806 0
-2621 1768 2804 0
-2621 1770 2802 0
-2621 1772 2800 0
-2621 1774 2798 0
-2621 1776 2796 0
-2621 1778 2794 0
-2621 1780 2792 0
-2621 1782 2790 0
-2621 1784 2788 0
-2621 1786 2786 0
-2621 1788 2784 0
-2621 1790 2782 0
-2621 1792 2780 0
-2621 1794 2778 0
-2621 1796 2776 0
-2621 1798 2774 0
-2621 1800 2772 0
-2621 1802 2770 0
-2621 1804 2768 0
-2621 1806 2766 0
-2621 1808 2764 0
-2621 1810 2762 0
-2621 1812 2760 0
-2621 1814 2758 0
-2621 1816 2756 0
-2621 1818 2754 0
-2621 1820 2752 0
-2621 1822 2750 0
-2621 1824 2748 0
-2619 2874 0
-2619 1699 2872 0
-2619 1700 2870 0
-2619 1702 2868 0
-2619 1704 2866 0
-2619 1706 2864 0
-2619 1708 2862 0
-2619 1710 2860 0
-2619 1712 2858 0
-2619 1714 2856 0
-2619 1716 2854 0
-2619 1718 2852 0
-2619 1720 2850 0
-2619 1722 2848 0
-2619 1724 2846 0
-2619 1726 2844 0
-2619 1728 2842 0
-2619 1730 2840 0
-2619 1732 2838 0
-2619 1734 2836 0
-2619 1736 2834 0
-2619 1738 2832 0
-2619 1740 2830 0
-2619 1742 2828 0
-2619 1744 2826 0
-2619 1746 2824 0
-2619 1748 2822 0
-2619 1750 2820 0
-2619 1752 2818 0
-2619 1754 2816 0
-2619 1756 2814 0
-2619 1758 2812 0
-2619 1760 2810 0
-2619 1762 2808 0
-2619 1764 2806 0
-2619 1766 2804 0
-2619 1768 2802 0
-2619 1770 2800 0
-2619 1772 2798 0
-2619 1774 2796 0
-2619 1776 2794 0
-2619 1778 2792 0
-2619 1780 2790 0
-2619 1782 2788 0
-2619 1784 2786 0
-2619 1786 2784 0
-2619 1788 2782 0
-2619 1790 2780 0
-2619 1792 2778 0
-2619 1794 2776 0
-2619 1796 2774 0
-2619 1798 2772 0
-2619 1800 2770 0
-2619 1802 2768 0
-2619 1804 2766 0
-2619 1806 2764 0
-2619 1808 2762 0
-2619 1810 2760 0
-2619 1812 2758 0
-2619 1814 2756 0
-2619 1816 2754 0
-2619 1818 2752 0
-2619 1820 2750 0
-2619 1822 2748 0
-2619 1824 2746 0
-2617 2872 0
-2617 1699 2870 0
-2617 1700 2868 0
-2617 1702 2866 0
-2617 1704 2864 0
-2617 1706 2862 0
-2617 1708 2860 0
-2617 1710 2858 0
-2617 1712 2856 0
-2617 1714 2854 0
-2617 1716 2852 0
-2617 1718 2850 0
-2617 1720 2848 0
-2617 1722 2846 0
-2617 1724 2844 0
-2617 1726 2842 0
-2617 1728 2840 0
-2617 1730 2838 0
-2617 1732 2836 0
-2617 1734 2834 0
-2617 1736 2832 0
-2617 1738 2830 0
-2617 1740 2828 0
-2617 1742 2826 0
-2617 1744 2824 0
-2617 1746 2822 0
-2617 1748 2820 0
-2617 1750 2818 0
-2617 1752 2816 0
-2617 1754 2814 0
-2617 1756 2812 0
-2617 1758 2810 0
-2617 1760 2808 0
-2617 1762 2806 0
-2617 1764 2804 0
-2617 1766 2802 0
-2617 1768 2800 0
-2617 1770 2798 0
-2617 1772 2796 0
-2617 1774 2794 0
-2617 1776 2792 0
-2617 1778 2790 0
-2617 1780 2788 0
-2617 1782 2786 0
-2617 1784 2784 0
-2617 1786 2782 0
-2617 1788 2780 0
-2617 1790 2778 0
-2617 1792 2776 0
-2617 1794 2774 0
-2617 1796 2772 0
-2617 1798 2770 0
-2617 1800 2768 0
-2617 1802 2766 0
-2617 1804 2764 0
-2617 1806 2762 0
-2617 1808 2760 0
-2617 1810 2758 0
-2617 1812 2756 0
-2617 1814 2754 0
-2617 1816 2752 0
-2617 1818 2750 0
-2617 1820 2748 0
-2617 1822 2746 0
-2617 1824 2744 0
-2615 2870 0
-2615 1699 2868 0
-2615 1700 2866 0
-2615 1702 2864 0
-2615 1704 2862 0
-2615 1706 2860 0
-2615 1708 2858 0
-2615 1710 2856 0
-2615 1712 2854 0
-2615 1714 2852 0
-2615 1716 2850 0
-2615 1718 2848 0
-2615 1720 2846 0
-2615 1722 2844 0
-2615 1724 2842 0
-2615 1726 2840 0
-2615 1728 2838 0
-2615 1730 2836 0
-2615 1732 2834 0
-2615 1734 2832 0
-2615 1736 2830 0
-2615 1738 2828 0
-2615 1740 2826 0
-2615 1742 2824 0
-2615 1744 2822 0
-2615 1746 2820 0
-2615 1748 2818 0
-2615 1750 2816 0
-2615 1752 2814 0
-2615 1754 2812 0
-2615 1756 2810 0
-2615 1758 2808 0
-2615 1760 2806 0
-2615 1762 2804 0
-2615 1764 2802 0
-2615 1766 2800 0
-2615 1768 2798 0
-2615 1770 2796 0
-2615 1772 2794 0
-2615 1774 2792 0
-2615 1776 2790 0
-2615 1778 2788 0
-2615 1780 2786 0
-2615 1782 2784 0
-2615 1784 2782 0
-2615 1786 2780 0
-2615 1788 2778 0
-2615 1790 2776 0
-2615 1792 2774 0
-2615 1794 2772 0
-2615 1796 2770 0
-2615 1798 2768 0
-2615 1800 2766 0
-2615 1802 2764 0
-2615 1804 2762 0
-2615 1806 2760 0
-2615 1808 2758 0
-2615 1810 2756 0
-2615 1812 2754 0
-2615 1814 2752 0
-2615 1816 2750 0
-2615 1818 2748 0
-2615 1820 2746 0
-2615 1822 2744 0
-2615 1824 2742 0
-2613 2868 0
-2613 1699 2866 0
-2613 1700 2864 0
-2613 1702 2862 0
-2613 1704 2860 0
-2613 1706 2858 0
-2613 1708 2856 0
-2613 1710 2854 0
-2613 1712 2852 0
-2613 1714 2850 0
-2613 1716 2848 0
-2613 1718 2846 0
-2613 1720 2844 0
-2613 1722 2842 0
-2613 1724 2840 0
-2613 1726 2838 0
-2613 1728 2836 0
-2613 1730 2834 0
-2613 1732 2832 0
-2613 1734 2830 0
-2613 1736 2828 0
-2613 1738 2826 0
-2613 1740 2824 0
-2613 1742 2822 0
-2613 1744 2820 0
-2613 1746 2818 0
-2613 1748 2816 0
-2613 1750 2814 0
-2613 1752 2812 0
-2613 1754 2810 0
-2613 1756 2808 0
-2613 1758 2806 0
-2613 1760 2804 0
-2613 1762 2802 0
-2613 1764 2800 0
-2613 1766 2798 0
-2613 1768 2796 0
-2613 1770 2794 0
-2613 1772 2792 0
-2613 1774 2790 0
-2613 1776 2788 0
-2613 1778 2786 0
-2613 1780 2784 0
-2613 1782 2782 0
-2613 1784 2780 0
-2613 1786 2778 0
-2613 1788 2776 0
-2613 1790 2774 0
-2613 1792 2772 0
-2613 1794 2770 0
-2613 1796 2768 0
-2613 1798 2766 0
-2613 1800 2764 0
-2613 1802 2762 0
-2613 1804 2760 0
-2613 1806 2758 0
-2613 1808 2756 0
-2613 1810 2754 0
-2613 1812 2752 0
-2613 1814 2750 0
-2613 1816 2748 0
-2613 1818 2746 0
-2613 1820 2744 0
-2613 1822 2742 0
-2613 1824 2740 0
-2611 2866 0
-2611 1699 2864 0
-2611 1700 2862 0
-2611 1702 2860 0
-2611 1704 2858 0
-2611 1706 2856 0
-2611 1708 2854 0
-2611 1710 2852 0
-2611 1712 2850 0
-2611 1714 2848 0
-2611 1716 2846 0
-2611 1718 2844 0
-2611 1720 2842 0
-2611 1722 2840 0
-2611 1724 2838 0
-2611 1726 2836 0
-2611 1728 2834 0
-2611 1730 2832 0
-2611 1732 2830 0
-2611 1734 2828 0
-2611 1736 2826 0
-2611 1738 2824 0
-2611 1740 2822 0
-2611 1742 2820 0
-2611 1744 2818 0
-2611 1746 2816 0
-2611 1748 2814 0
-2611 1750 2812 0
-2611 1752 2810 0
-2611 1754 2808 0
-2611 1756 2806 0
-2611 1758 2804 0
-2611 1760 2802 0
-2611 1762 2800 0
-2611 1764 2798 0
-2611 1766 2796 0
-2611 1768 2794 0
-2611 1770 2792 0
-2611 1772 2790 0
-2611 1774 2788 0
-2611 1776 2786 0
-2611 1778 2784 0
-2611 1780 2782 0
-2611 1782 2780 0
-2611 1784 2778 0
-2611 1786 2776 0
-2611 1788 2774 0
-2611 1790 2772 0
-2611 1792 2770 0
-2611 1794 2768 0
-2611 1796 2766 0
-2611 1798 2764 0
-2611 1800 2762 0
-2611 1802 2760 0
-2611 1804 2758 0
-2611 1806 2756 0
-2611 1808 2754 0
-2611 1810 2752 0
-2611 1812 2750 0
-2611 1814 2748 0
-2611 1816 2746 0
-2611 1818 2744 0
-2611 1820 2742 0
-2611 1822 2740 0
-2611 1824 2738 0
-2609 2864 0
-2609 1699 2862 0
-2609 1700 2860 0
-2609 1702 2858 0
-2609 1704 2856 0
-2609 1706 2854 0
-2609 1708 2852 0
-2609 1710 2850 0
-2609 1712 2848 0
-2609 1714 2846 0
-2609 1716 2844 0
-2609 1718 2842 0
-2609 1720 2840 0
-2609 1722 2838 0
-2609 1724 2836 0
-2609 1726 2834 0
-2609 1728 2832 0
-2609 1730 2830 0
-2609 1732 2828 0
-2609 1734 2826 0
-2609 1736 2824 0
-2609 1738 2822 0
-2609 1740 2820 0
-2609 1742 2818 0
-2609 1744 2816 0
-2609 1746 2814 0
-2609 1748 2812 0
-2609 1750 2810 0
-2609 1752 2808 0
-2609 1754 2806 0
-2609 1756 2804 0
-2609 1758 2802 0
-2609 1760 2800 0
-2609 1762 2798 0
-2609 1764 2796 0
-2609 1766 2794 0
-2609 1768 2792 0
-2609 1770 2790 0
-2609 1772 2788 0
-2609 1774 2786 0
-2609 1776 2784 0
-2609 1778 2782 0
-2609 1780 2780 0
-2609 1782 2778 0
-2609 1784 2776 0
-2609 1786 2774 0
-2609 1788 2772 0
-2609 1790 2770 0
-2609 1792 2768 0
-2609 1794 2766 0
-2609 1796 2764 0
-2609 1798 2762 0
-2609 1800 2760 0
-2609 1802 2758 0
-2609 1804 2756 0
-2609 1806 2754 0
-2609 1808 2752 0
-2609 1810 2750 0
-2609 1812 2748 0
-2609 1814 2746 0
-2609 1816 2744 0
-2609 1818 2742 0
-2609 1820 2740 0
-2609 1822 2738 0
-2609 1824 2736 0
-2607 2862 0
-2607 1699 2860 0
-2607 1700 2858 0
-2607 1702 2856 0
-2607 1704 2854 0
-2607 1706 2852 0
-2607 1708 2850 0
-2607 1710 2848 0
-2607 1712 2846 0
-2607 1714 2844 0
-2607 1716 2842 0
-2607 1718 2840 0
-2607 1720 2838 0
-2607 1722 2836 0
-2607 1724 2834 0
-2607 1726 2832 0
-2607 1728 2830 0
-2607 1730 2828 0
-2607 1732 2826 0
-2607 1734 2824 0
-2607 1736 2822 0
-2607 1738 2820 0
-2607 1740 2818 0
-2607 1742 2816 0
-2607 1744 2814 0
-2607 1746 2812 0
-2607 1748 2810 0
-2607 1750 2808 0
-2607 1752 2806 0
-2607 1754 2804 0
-2607 1756 2802 0
-2607 1758 2800 0
-2607 1760 2798 0
-2607 1762 2796 0
-2607 1764 2794 0
-2607 1766 2792 0
-2607 1768 2790 0
-2607 1770 2788 0
-2607 1772 2786 0
-2607 1774 2784 0
-2607 1776 2782 0
-2607 1778 2780 0
-2607 1780 2778 0
-2607 1782 2776 0
-2607 1784 2774 0
-2607 1786 2772 0
-2607 1788 2770 0
-2607 1790 2768 0
-2607 1792 2766 0
-2607 1794 2764 0
-2607 1796 2762 0
-2607 1798 2760 0
-2607 1800 2758 0
-2607 1802 2756 0
-2607 1804 2754 0
-2607 1806 2752 0
-2607 1808 2750 0
-2607 1810 2748 0
-2607 1812 2746 0
-2607 1814 2744 0
-2607 1816 2742 0
-2607 1818 2740 0
-2607 1820 2738 0
-2607 1822 2736 0
-2607 1824 2734 0
-2605 2860 0
-2605 1699 2858 0
-2605 1700 2856 0
-2605 1702 2854 0
-2605 1704 2852 0
-2605 1706 2850 0
-2605 1708 2848 0
-2605 1710 2846 0
-2605 1712 2844 0
-2605 1714 2842 0
-2605 1716 2840 0
-2605 1718 2838 0
-2605 1720 2836 0
-2605 1722 2834 0
-2605 1724 2832 0
-2605 1726 2830 0
-2605 1728 2828 0
-2605 1730 2826 0
-2605 1732 2824 0
-2605 1734 2822 0
-2605 1736 2820 0
-2605 1738 2818 0
-2605 1740 2816 0
-2605 1742 2814 0
-2605 1744 2812 0
-2605 1746 2810 0
-2605 1748 2808 0
-2605 1750 2806 0
-2605 1752 2804 0
-2605 1754 2802 0
-2605 1756 2800 0
-2605 1758 2798 0
-2605 1760 2796 0
-2605 1762 2794 0
-2605 1764 2792 0
-2605 1766 2790 0
-2605 1768 2788 0
-2605 1770 2786 0
-2605 1772 2784 0
-2605 1774 2782 0
-2605 1776 2780 0
-2605 1778 2778 0
-2605 1780 2776 0
-2605 1782 2774 0
-2605 1784 2772 0
-2605 1786 2770 0
-2605 1788 2768 0
-2605 1790 2766 0
-2605 1792 2764 0
-2605 1794 2762 0
-2605 1796 2760 0
-2605 1798 2758 0
-2605 1800 2756 0
-2605 1802 2754 0
-2605 1804 2752 0
-2605 1806 2750 0
-2605 1808 2748 0
-2605 1810 2746 0
-2605 1812 2744 0
-2605 1814 2742 0
-2605 1816 2740 0
-2605 1818 2738 0
-2605 1820 2736 0
-2605 1822 2734 0
-2605 1824 2732 0
-2603 2858 0
-2603 1699 2856 0
-2603 1700 2854 0
-2603 1702 2852 0
-2603 1704 2850 0
-2603 1706 2848 0
-2603 1708 2846 0
-2603 1710 2844 0
-2603 1712 2842 0
-2603 1714 2840 0
-2603 1716 2838 0
-2603 1718 2836 0
-2603 1720 2834 0
-2603 1722 2832 0
-2603 1724 2830 0
-2603 1726 2828 0
-2603 1728 2826 0
-2603 1730 2824 0
-2603 1732 2822 0
-2603 1734 2820 0
-2603 1736 2818 0
-2603 1738 2816 0
-2603 1740 2814 0
-2603 1742 2812 0
-2603 1744 2810 0
-2603 1746 2808 0
-2603 1748 2806 0
-2603 1750 2804 0
-2603 1752 2802 0
-2603 1754 2800 0
-2603 1756 2798 0
-2603 1758 2796 0
-2603 1760 2794 0
-2603 1762 2792 0
-2603 1764 2790 0
-2603 1766 2788 0
-2603 1768 2786 0
-2603 1770 2784 0
-2603 1772 2782 0
-2603 1774 2780 0
-2603 1776 2778 0
-2603 1778 2776 0
-2603 1780 2774 0
-2603 1782 2772 0
-2603 1784 2770 0
-2603 1786 2768 0
-2603 1788 2766 0
-2603 1790 2764 0
-2603 1792 2762 0
-2603 1794 2760 0
-2603 1796 2758 0
-2603 1798 2756 0
-2603 1800 2754 0
-2603 1802 2752 0
-2603 1804 2750 0
-2603 1806 2748 0
-2603 1808 2746 0
-2603 1810 2744 0
-2603 1812 2742 0
-2603 1814 2740 0
-2603 1816 2738 0
-2603 1818 2736 0
-2603 1820 2734 0
-2603 1822 2732 0
-2603 1824 2730 0
-2601 2856 0
-2601 1699 2854 0
-2601 1700 2852 0
-2601 1702 2850 0
-2601 1704 2848 0
-2601 1706 2846 0
-2601 1708 2844 0
-2601 1710 2842 0
-2601 1712 2840 0
-2601 1714 2838 0
-2601 1716 2836 0
-2601 1718 2834 0
-2601 1720 2832 0
-2601 1722 2830 0
-2601 1724 2828 0
-2601 1726 2826 0
-2601 1728 2824 0
-2601 1730 2822 0
-2601 1732 2820 0
-2601 1734 2818 0
-2601 1736 2816 0
-2601 1738 2814 0
-2601 1740 2812 0
-2601 1742 2810 0
-2601 1744 2808 0
-2601 1746 2806 0
-2601 1748 2804 0
-2601 1750 2802 0
-2601 1752 2800 0
-2601 1754 2798 0
-2601 1756 2796 0
-2601 1758 2794 0
-2601 1760 2792 0
-2601 1762 2790 0
-2601 1764 2788 0
-2601 1766 2786 0
-2601 1768 2784 0
-2601 1770 2782 0
-2601 1772 2780 0
-2601 1774 2778 0
-2601 1776 2776 0
-2601 1778 2774 0
-2601 1780 2772 0
-2601 1782 2770 0
-2601 1784 2768 0
-2601 1786 2766 0
-2601 1788 2764 0
-2601 1790 2762 0
-2601 1792 2760 0
-2601 1794 2758 0
-2601 1796 2756 0
-2601 1798 2754 0
-2601 1800 2752 0
-2601 1802 2750 0
-2601 1804 2748 0
-2601 1806 2746 0
-2601 1808 2744 0
-2601 1810 2742 0
-2601 1812 2740 0
-2601 1814 2738 0
-2601 1816 2736 0
-2601 1818 2734 0
-2601 1820 2732 0
-2601 1822 2730 0
-2601 1824 2728 0
-2599 2854 0
-2599 1699 2852 0
-2599 1700 2850 0
-2599 1702 2848 0
-2599 1704 2846 0
-2599 1706 2844 0
-2599 1708 2842 0
-2599 1710 2840 0
-2599 1712 2838 0
-2599 1714 2836 0
-2599 1716 2834 0
-2599 1718 2832 0
-2599 1720 2830 0
-2599 1722 2828 0
-2599 1724 2826 0
-2599 1726 2824 0
-2599 1728 2822 0
-2599 1730 2820 0
-2599 1732 2818 0
-2599 1734 2816 0
-2599 1736 2814 0
-2599 1738 2812 0
-2599 1740 2810 0
-2599 1742 2808 0
-2599 1744 2806 0
-2599 1746 2804 0
-2599 1748 2802 0
-2599 1750 2800 0
-2599 1752 2798 0
-2599 1754 2796 0
-2599 1756 2794 0
-2599 1758 2792 0
-2599 1760 2790 0
-2599 1762 2788 0
-2599 1764 2786 0
-2599 1766 2784 0
-2599 1768 2782 0
-2599 1770 2780 0
-2599 1772 2778 0
-2599 1774 2776 0
-2599 1776 2774 0
-2599 1778 2772 0
-2599 1780 2770 0
-2599 1782 2768 0
-2599 1784 2766 0
-2599 1786 2764 0
-2599 1788 2762 0
-2599 1790 2760 0
-2599 1792 2758 0
-2599 1794 2756 0
-2599 1796 2754 0
-2599 1798 2752 0
-2599 1800 2750 0
-2599 1802 2748 0
-2599 1804 2746 0
-2599 1806 2744 0
-2599 1808 2742 0
-2599 1810 2740 0
-2599 1812 2738 0
-2599 1814 2736 0
-2599 1816 2734 0
-2599 1818 2732 0
-2599 1820 2730 0
-2599 1822 2728 0
-2599 1824 2726 0
-2597 2852 0
-2597 1699 2850 0
-2597 1700 2848 0
-2597 1702 2846 0
-2597 1704 2844 0
-2597 1706 2842 0
-2597 1708 2840 0
-2597 1710 2838 0
-2597 1712 2836 0
-2597 1714 2834 0
-2597 1716 2832 0
-2597 1718 2830 0
-2597 1720 2828 0
-2597 1722 2826 0
-2597 1724 2824 0
-2597 1726 2822 0
-2597 1728 2820 0
-2597 1730 2818 0
-2597 1732 2816 0
-2597 1734 2814 0
-2597 1736 2812 0
-2597 1738 2810 0
-2597 1740 2808 0
-2597 1742 2806 0
-2597 1744 2804 0
-2597 1746 2802 0
-2597 1748 2800 0
-2597 1750 2798 0
-2597 1752 2796 0
-2597 1754 2794 0
-2597 1756 2792 0
-2597 1758 2790 0
-2597 1760 2788 0
-2597 1762 2786 0
-2597 1764 2784 0
-2597 1766 2782 0
-2597 1768 2780 0
-2597 1770 2778 0
-2597 1772 2776 0
-2597 1774 2774 0
-2597 1776 2772 0
-2597 1778 2770 0
-2597 1780 2768 0
-2597 1782 2766 0
-2597 1784 2764 0
-2597 1786 2762 0
-2597 1788 2760 0
-2597 1790 2758 0
-2597 1792 2756 0
-2597 1794 2754 0
-2597 1796 2752 0
-2597 1798 2750 0
-2597 1800 2748 0
-2597 1802 2746 0
-2597 1804 2744 0
-2597 1806 2742 0
-2597 1808 2740 0
-2597 1810 2738 0
-2597 1812 2736 0
-2597 1814 2734 0
-2597 1816 2732 0
-2597 1818 2730 0
-2597 1820 2728 0
-2597 1822 2726 0
-2597 1824 2724 0
-2595 2850 0
-2595 1699 2848 0
-2595 1700 2846 0
-2595 1702 2844 0
-2595 1704 2842 0
-2595 1706 2840 0
-2595 1708 2838 0
-2595 1710 2836 0
-2595 1712 2834 0
-2595 1714 2832 0
-2595 1716 2830 0
-2595 1718 2828 0
-2595 1720 2826 0
-2595 1722 2824 0
-2595 1724 2822 0
-2595 1726 2820 0
-2595 1728 2818 0
-2595 1730 2816 0
-2595 1732 2814 0
-2595 1734 2812 0
-2595 1736 2810 0
-2595 1738 2808 0
-2595 1740 2806 0
-2595 1742 2804 0
-2595 1744 2802 0
-2595 1746 2800 0
-2595 1748 2798 0
-2595 1750 2796 0
-2595 1752 2794 0
-2595 1754 2792 0
-2595 1756 2790 0
-2595 1758 2788 0
-2595 1760 2786 0
-2595 1762 2784 0
-2595 1764 2782 0
-2595 1766 2780 0
-2595 1768 2778 0
-2595 1770 2776 0
-2595 1772 2774 0
-2595 1774 2772 0
-2595 1776 2770 0
-2595 1778 2768 0
-2595 1780 2766 0
-2595 1782 2764 0
-2595 1784 2762 0
-2595 1786 2760 0
-2595 1788 2758 0
-2595 1790 2756 0
-2595 1792 2754 0
-2595 1794 2752 0
-2595 1796 2750 0
-2595 1798 2748 0
-2595 1800 2746 0
-2595 1802 2744 0
-2595 1804 2742 0
-2595 1806 2740 0
-2595 1808 2738 0
-2595 1810 2736 0
-2595 1812 2734 0
-2595 1814 2732 0
-2595 1816 2730 0
-2595 1818 2728 0
-2595 1820 2726 0
-2595 1822 2724 0
-2595 1824 2722 0
-2593 2848 0
-2593 1699 2846 0
-2593 1700 2844 0
-2593 1702 2842 0
-2593 1704 2840 0
-2593 1706 2838 0
-2593 1708 2836 0
-2593 1710 2834 0
-2593 1712 2832 0
-2593 1714 2830 0
-2593 1716 2828 0
-2593 1718 2826 0
-2593 1720 2824 0
-2593 1722 2822 0
-2593 1724 2820 0
-2593 1726 2818 0
-2593 1728 2816 0
-2593 1730 2814 0
-2593 1732 2812 0
-2593 1734 2810 0
-2593 1736 2808 0
-2593 1738 2806 0
-2593 1740 2804 0
-2593 1742 2802 0
-2593 1744 2800 0
-2593 1746 2798 0
-2593 1748 2796 0
-2593 1750 2794 0
-2593 1752 2792 0
-2593 1754 2790 0
-2593 1756 2788 0
-2593 1758 2786 0
-2593 1760 2784 0
-2593 1762 2782 0
-2593 1764 2780 0
-2593 1766 2778 0
-2593 1768 2776 0
-2593 1770 2774 0
-2593 1772 2772 0
-2593 1774 2770 0
-2593 1776 2768 0
-2593 1778 2766 0
-2593 1780 2764 0
-2593 1782 2762 0
-2593 1784 2760 0
-2593 1786 2758 0
-2593 1788 2756 0
-2593 1790 2754 0
-2593 1792 2752 0
-2593 1794 2750 0
-2593 1796 2748 0
-2593 1798 2746 0
-2593 1800 2744 0
-2593 1802 2742 0
-2593 1804 2740 0
-2593 1806 2738 0
-2593 1808 2736 0
-2593 1810 2734 0
-2593 1812 2732 0
-2593 1814 2730 0
-2593 1816 2728 0
-2593 1818 2726 0
-2593 1820 2724 0
-2593 1822 2722 0
-2593 1824 2720 0
-2591 2846 0
-2591 1699 2844 0
-2591 1700 2842 0
-2591 1702 2840 0
-2591 1704 2838 0
-2591 1706 2836 0
-2591 1708 2834 0
-2591 1710 2832 0
-2591 1712 2830 0
-2591 1714 2828 0
-2591 1716 2826 0
-2591 1718 2824 0
-2591 1720 2822 0
-2591 1722 2820 0
-2591 1724 2818 0
-2591 1726 2816 0
-2591 1728 2814 0
-2591 1730 2812 0
-2591 1732 2810 0
-2591 1734 2808 0
-2591 1736 2806 0
-2591 1738 2804 0
-2591 1740 2802 0
-2591 1742 2800 0
-2591 1744 2798 0
-2591 1746 2796 0
-2591 1748 2794 0
-2591 1750 2792 0
-2591 1752 2790 0
-2591 1754 2788 0
-2591 1756 2786 0
-2591 1758 2784 0
-2591 1760 2782 0
-2591 1762 2780 0
-2591 1764 2778 0
-2591 1766 2776 0
-2591 1768 2774 0
-2591 1770 2772 0
-2591 1772 2770 0
-2591 1774 2768 0
-2591 1776 2766 0
-2591 1778 2764 0
-2591 1780 2762 0
-2591 1782 2760 0
-2591 1784 2758 0
-2591 1786 2756 0
-2591 1788 2754 0
-2591 1790 2752 0
-2591 1792 2750 0
-2591 1794 2748 0
-2591 1796 2746 0
-2591 1798 2744 0
-2591 1800 2742 0
-2591 1802 2740 0
-2591 1804 2738 0
-2591 1806 2736 0
-2591 1808 2734 0
-2591 1810 2732 0
-2591 1812 2730 0
-2591 1814 2728 0
-2591 1816 2726 0
-2591 1818 2724 0
-2591 1820 2722 0
-2591 1822 2720 0
-2591 1824 2718 0
-2589 2844 0
-2589 1699 2842 0
-2589 1700 2840 0
-2589 1702 2838 0
-2589 1704 2836 0
-2589 1706 2834 0
-2589 1708 2832 0
-2589 1710 2830 0
-2589 1712 2828 0
-2589 1714 2826 0
-2589 1716 2824 0
-2589 1718 2822 0
-2589 1720 2820 0
-2589 1722 2818 0
-2589 1724 2816 0
-2589 1726 2814 0
-2589 1728 2812 0
-2589 1730 2810 0
-2589 1732 2808 0
-2589 1734 2806 0
-2589 1736 2804 0
-2589 1738 2802 0
-2589 1740 2800 0
-2589 1742 2798 0
-2589 1744 2796 0
-2589 1746 2794 0
-2589 1748 2792 0
-2589 1750 2790 0
-2589 1752 2788 0
-2589 1754 2786 0
-2589 1756 2784 0
-2589 1758 2782 0
-2589 1760 2780 0
-2589 1762 2778 0
-2589 1764 2776 0
-2589 1766 2774 0
-2589 1768 2772 0
-2589 1770 2770 0
-2589 1772 2768 0
-2589 1774 2766 0
-2589 1776 2764 0
-2589 1778 2762 0
-2589 1780 2760 0
-2589 1782 2758 0
-2589 1784 2756 0
-2589 1786 2754 0
-2589 1788 2752 0
-2589 1790 2750 0
-2589 1792 2748 0
-2589 1794 2746 0
-2589 1796 2744 0
-2589 1798 2742 0
-2589 1800 2740 0
-2589 1802 2738 0
-2589 1804 2736 0
-2589 1806 2734 0
-2589 1808 2732 0
-2589 1810 2730 0
-2589 1812 2728 0
-2589 1814 2726 0
-2589 1816 2724 0
-2589 1818 2722 0
-2589 1820 2720 0
-2589 1822 2718 0
-2589 1824 2716 0
-2587 2842 0
-2587 1699 2840 0
-2587 1700 2838 0
-2587 1702 2836 0
-2587 1704 2834 0
-2587 1706 2832 0
-2587 1708 2830 0
-2587 1710 2828 0
-2587 1712 2826 0
-2587 1714 2824 0
-2587 1716 2822 0
-2587 1718 2820 0
-2587 1720 2818 0
-2587 1722 2816 0
-2587 1724 2814 0
-2587 1726 2812 0
-2587 1728 2810 0
-2587 1730 2808 0
-2587 1732 2806 0
-2587 1734 2804 0
-2587 1736 2802 0
-2587 1738 2800 0
-2587 1740 2798 0
-2587 1742 2796 0
-2587 1744 2794 0
-2587 1746 2792 0
-2587 1748 2790 0
-2587 1750 2788 0
-2587 1752 2786 0
-2587 1754 2784 0
-2587 1756 2782 0
-2587 1758 2780 0
-2587 1760 2778 0
-2587 1762 2776 0
-2587 1764 2774 0
-2587 1766 2772 0
-2587 1768 2770 0
-2587 1770 2768 0
-2587 1772 2766 0
-2587 1774 2764 0
-2587 1776 2762 0
-2587 1778 2760 0
-2587 1780 2758 0
-2587 1782 2756 0
-2587 1784 2754 0
-2587 1786 2752 0
-2587 1788 2750 0
-2587 1790 2748 0
-2587 1792 2746 0
-2587 1794 2744 0
-2587 1796 2742 0
-2587 1798 2740 0
-2587 1800 2738 0
-2587 1802 2736 0
-2587 1804 2734 0
-2587 1806 2732 0
-2587 1808 2730 0
-2587 1810 2728 0
-2587 1812 2726 0
-2587 1814 2724 0
-2587 1816 2722 0
-2587 1818 2720 0
-2587 1820 2718 0
-2587 1822 2716 0
-2587 1824 2714 0
-2585 2840 0
-2585 1699 2838 0
-2585 1700 2836 0
-2585 1702 2834 0
-2585 1704 2832 0
-2585 1706 2830 0
-2585 1708 2828 0
-2585 1710 2826 0
-2585 1712 2824 0
-2585 1714 2822 0
-2585 1716 2820 0
-2585 1718 2818 0
-2585 1720 2816 0
-2585 1722 2814 0
-2585 1724 2812 0
-2585 1726 2810 0
-2585 1728 2808 0
-2585 1730 2806 0
-2585 1732 2804 0
-2585 1734 2802 0
-2585 1736 2800 0
-2585 1738 2798 0
-2585 1740 2796 0
-2585 1742 2794 0
-2585 1744 2792 0
-2585 1746 2790 0
-2585 1748 2788 0
-2585 1750 2786 0
-2585 1752 2784 0
-2585 1754 2782 0
-2585 1756 2780 0
-2585 1758 2778 0
-2585 1760 2776 0
-2585 1762 2774 0
-2585 1764 2772 0
-2585 1766 2770 0
-2585 1768 2768 0
-2585 1770 2766 0
-2585 1772 2764 0
-2585 1774 2762 0
-2585 1776 2760 0
-2585 1778 2758 0
-2585 1780 2756 0
-2585 1782 2754 0
-2585 1784 2752 0
-2585 1786 2750 0
-2585 1788 2748 0
-2585 1790 2746 0
-2585 1792 2744 0
-2585 1794 2742 0
-2585 1796 2740 0
-2585 1798 2738 0
-2585 1800 2736 0
-2585 1802 2734 0
-2585 1804 2732 0
-2585 1806 2730 0
-2585 1808 2728 0
-2585 1810 2726 0
-2585 1812 2724 0
-2585 1814 2722 0
-2585 1816 2720 0
-2585 1818 2718 0
-2585 1820 2716 0
-2585 1822 2714 0
-2585 1824 2712 0
-2583 2838 0
-2583 1699 2836 0
-2583 1700 2834 0
-2583 1702 2832 0
-2583 1704 2830 0
-2583 1706 2828 0
-2583 1708 2826 0
-2583 1710 2824 0
-2583 1712 2822 0
-2583 1714 2820 0
-2583 1716 2818 0
-2583 1718 2816 0
-2583 1720 2814 0
-2583 1722 2812 0
-2583 1724 2810 0
-2583 1726 2808 0
-2583 1728 2806 0
-2583 1730 2804 0
-2583 1732 2802 0
-2583 1734 2800 0
-2583 1736 2798 0
-2583 1738 2796 0
-2583 1740 2794 0
-2583 1742 2792 0
-2583 1744 2790 0
-2583 1746 2788 0
-2583 1748 2786 0
-2583 1750 2784 0
-2583 1752 2782 0
-2583 1754 2780 0
-2583 1756 2778 0
-2583 1758 2776 0
-2583 1760 2774 0
-2583 1762 2772 0
-2583 1764 2770 0
-2583 1766 2768 0
-2583 1768 2766 0
-2583 1770 2764 0
-2583 1772 2762 0
-2583 1774 2760 0
-2583 1776 2758 0
-2583 1778 2756 0
-2583 1780 2754 0
-2583 1782 2752 0
-2583 1784 2750 0
-2583 1786 2748 0
-2583 1788 2746 0
-2583 1790 2744 0
-2583 1792 2742 0
-2583 1794 2740 0
-2583 1796 2738 0
-2583 1798 2736 0
-2583 1800 2734 0
-2583 1802 2732 0
-2583 1804 2730 0
-2583 1806 2728 0
-2583 1808 2726 0
-2583 1810 2724 0
-2583 1812 2722 0
-2583 1814 2720 0
-2583 1816 2718 0
-2583 1818 2716 0
-2583 1820 2714 0
-2583 1822 2712 0
-2583 1824 2710 0
-2581 2836 0
-2581 1699 2834 0
-2581 1700 2832 0
-2581 1702 2830 0
-2581 1704 2828 0
-2581 1706 2826 0
-2581 1708 2824 0
-2581 1710 2822 0
-2581 1712 2820 0
-2581 1714 2818 0
-2581 1716 2816 0
-2581 1718 2814 0
-2581 1720 2812 0
-2581 1722 2810 0
-2581 1724 2808 0
-2581 1726 2806 0
-2581 1728 2804 0
-2581 1730 2802 0
-2581 1732 2800 0
-2581 1734 2798 0
-2581 1736 2796 0
-2581 1738 2794 0
-2581 1740 2792 0
-2581 1742 2790 0
-2581 1744 2788 0
-2581 1746 2786 0
-2581 1748 2784 0
-2581 1750 2782 0
-2581 1752 2780 0
-2581 1754 2778 0
-2581 1756 2776 0
-2581 1758 2774 0
-2581 1760 2772 0
-2581 1762 2770 0
-2581 1764 2768 0
-2581 1766 2766 0
-2581 1768 2764 0
-2581 1770 2762 0
-2581 1772 2760 0
-2581 1774 2758 0
-2581 1776 2756 0
-2581 1778 2754 0
-2581 1780 2752 0
-2581 1782 2750 0
-2581 1784 2748 0
-2581 1786 2746 0
-2581 1788 2744 0
-2581 1790 2742 0
-2581 1792 2740 0
-2581 1794 2738 0
-2581 1796 2736 0
-2581 1798 2734 0
-2581 1800 2732 0
-2581 1802 2730 0
-2581 1804 2728 0
-2581 1806 2726 0
-2581 1808 2724 0
-2581 1810 2722 0
-2581 1812 2720 0
-2581 1814 2718 0
-2581 1816 2716 0
-2581 1818 2714 0
-2581 1820 2712 0
-2581 1822 2710 0
-2581 1824 2708 0
-2579 2834 0
-2579 1699 2832 0
-2579 1700 2830 0
-2579 1702 2828 0
-2579 1704 2826 0
-2579 1706 2824 0
-2579 1708 2822 0
-2579 1710 2820 0
-2579 1712 2818 0
-2579 1714 2816 0
-2579 1716 2814 0
-2579 1718 2812 0
-2579 1720 2810 0
-2579 1722 2808 0
-2579 1724 2806 0
-2579 1726 2804 0
-2579 1728 2802 0
-2579 1730 2800 0
-2579 1732 2798 0
-2579 1734 2796 0
-2579 1736 2794 0
-2579 1738 2792 0
-2579 1740 2790 0
-2579 1742 2788 0
-2579 1744 2786 0
-2579 1746 2784 0
-2579 1748 2782 0
-2579 1750 2780 0
-2579 1752 2778 0
-2579 1754 2776 0
-2579 1756 2774 0
-2579 1758 2772 0
-2579 1760 2770 0
-2579 1762 2768 0
-2579 1764 2766 0
-2579 1766 2764 0
-2579 1768 2762 0
-2579 1770 2760 0
-2579 1772 2758 0
-2579 1774 2756 0
-2579 1776 2754 0
-2579 1778 2752 0
-2579 1780 2750 0
-2579 1782 2748 0
-2579 1784 2746 0
-2579 1786 2744 0
-2579 1788 2742 0
-2579 1790 2740 0
-2579 1792 2738 0
-2579 1794 2736 0
-2579 1796 2734 0
-2579 1798 2732 0
-2579 1800 2730 0
-2579 1802 2728 0
-2579 1804 2726 0
-2579 1806 2724 0
-2579 1808 2722 0
-2579 1810 2720 0
-2579 1812 2718 0
-2579 1814 2716 0
-2579 1816 2714 0
-2579 1818 2712 0
-2579 1820 2710 0
-2579 1822 2708 0
-2579 1824 2706 0
-2577 2832 0
-2577 1699 2830 0
-2577 1700 2828 0
-2577 1702 2826 0
-2577 1704 2824 0
-2577 1706 2822 0
-2577 1708 2820 0
-2577 1710 2818 0
-2577 1712 2816 0
-2577 1714 2814 0
-2577 1716 2812 0
-2577 1718 2810 0
-2577 1720 2808 0
-2577 1722 2806 0
-2577 1724 2804 0
-2577 1726 2802 0
-2577 1728 2800 0
-2577 1730 2798 0
-2577 1732 2796 0
-2577 1734 2794 0
-2577 1736 2792 0
-2577 1738 2790 0
-2577 1740 2788 0
-2577 1742 2786 0
-2577 1744 2784 0
-2577 1746 2782 0
-2577 1748 2780 0
-2577 1750 2778 0
-2577 1752 2776 0
-2577 1754 2774 0
-2577 1756 2772 0
-2577 1758 2770 0
-2577 1760 2768 0
-2577 1762 2766 0
-2577 1764 2764 0
-2577 1766 2762 0
-2577 1768 2760 0
-2577 1770 2758 0
-2577 1772 2756 0
-2577 1774 2754 0
-2577 1776 2752 0
-2577 1778 2750 0
-2577 1780 2748 0
-2577 1782 2746 0
-2577 1784 2744 0
-2577 1786 2742 0
-2577 1788 2740 0
-2577 1790 2738 0
-2577 1792 2736 0
-2577 1794 2734 0
-2577 1796 2732 0
-2577 1798 2730 0
-2577 1800 2728 0
-2577 1802 2726 0
-2577 1804 2724 0
-2577 1806 2722 0
-2577 1808 2720 0
-2577 1810 2718 0
-2577 1812 2716 0
-2577 1814 2714 0
-2577 1816 2712 0
-2577 1818 2710 0
-2577 1820 2708 0
-2577 1822 2706 0
-2577 1824 2704 0
-2575 2830 0
-2575 1699 2828 0
-2575 1700 2826 0
-2575 1702 2824 0
-2575 1704 2822 0
-2575 1706 2820 0
-2575 1708 2818 0
-2575 1710 2816 0
-2575 1712 2814 0
-2575 1714 2812 0
-2575 1716 2810 0
-2575 1718 2808 0
-2575 1720 2806 0
-2575 1722 2804 0
-2575 1724 2802 0
-2575 1726 2800 0
-2575 1728 2798 0
-2575 1730 2796 0
-2575 1732 2794 0
-2575 1734 2792 0
-2575 1736 2790 0
-2575 1738 2788 0
-2575 1740 2786 0
-2575 1742 2784 0
-2575 1744 2782 0
-2575 1746 2780 0
-2575 1748 2778 0
-2575 1750 2776 0
-2575 1752 2774 0
-2575 1754 2772 0
-2575 1756 2770 0
-2575 1758 2768 0
-2575 1760 2766 0
-2575 1762 2764 0
-2575 1764 2762 0
-2575 1766 2760 0
-2575 1768 2758 0
-2575 1770 2756 0
-2575 1772 2754 0
-2575 1774 2752 0
-2575 1776 2750 0
-2575 1778 2748 0
-2575 1780 2746 0
-2575 1782 2744 0
-2575 1784 2742 0
-2575 1786 2740 0
-2575 1788 2738 0
-2575 1790 2736 0
-2575 1792 2734 0
-2575 1794 2732 0
-2575 1796 2730 0
-2575 1798 2728 0
-2575 1800 2726 0
-2575 1802 2724 0
-2575 1804 2722 0
-2575 1806 2720 0
-2575 1808 2718 0
-2575 1810 2716 0
-2575 1812 2714 0
-2575 1814 2712 0
-2575 1816 2710 0
-2575 1818 2708 0
-2575 1820 2706 0
-2575 1822 2704 0
-2575 1824 2702 0
-2573 2828 0
-2573 1699 2826 0
-2573 1700 2824 0
-2573 1702 2822 0
-2573 1704 2820 0
-2573 1706 2818 0
-2573 1708 2816 0
-2573 1710 2814 0
-2573 1712 2812 0
-2573 1714 2810 0
-2573 1716 2808 0
-2573 1718 2806 0
-2573 1720 2804 0
-2573 1722 2802 0
-2573 1724 2800 0
-2573 1726 2798 0
-2573 1728 2796 0
-2573 1730 2794 0
-2573 1732 2792 0
-2573 1734 2790 0
-2573 1736 2788 0
-2573 1738 2786 0
-2573 1740 2784 0
-2573 1742 2782 0
-2573 1744 2780 0
-2573 1746 2778 0
-2573 1748 2776 0
-2573 1750 2774 0
-2573 1752 2772 0
-2573 1754 2770 0
-2573 1756 2768 0
-2573 1758 2766 0
-2573 1760 2764 0
-2573 1762 2762 0
-2573 1764 2760 0
-2573 1766 2758 0
-2573 1768 2756 0
-2573 1770 2754 0
-2573 1772 2752 0
-2573 1774 2750 0
-2573 1776 2748 0
-2573 1778 2746 0
-2573 1780 2744 0
-2573 1782 2742 0
-2573 1784 2740 0
-2573 1786 2738 0
-2573 1788 2736 0
-2573 1790 2734 0
-2573 1792 2732 0
-2573 1794 2730 0
-2573 1796 2728 0
-2573 1798 2726 0
-2573 1800 2724 0
-2573 1802 2722 0
-2573 1804 2720 0
-2573 1806 2718 0
-2573 1808 2716 0
-2573 1810 2714 0
-2573 1812 2712 0
-2573 1814 2710 0
-2573 1816 2708 0
-2573 1818 2706 0
-2573 1820 2704 0
-2573 1822 2702 0
-2573 1824 2700 0
-2571 2826 0
-2571 1699 2824 0
-2571 1700 2822 0
-2571 1702 2820 0
-2571 1704 2818 0
-2571 1706 2816 0
-2571 1708 2814 0
-2571 1710 2812 0
-2571 1712 2810 0
-2571 1714 2808 0
-2571 1716 2806 0
-2571 1718 2804 0
-2571 1720 2802 0
-2571 1722 2800 0
-2571 1724 2798 0
-2571 1726 2796 0
-2571 1728 2794 0
-2571 1730 2792 0
-2571 1732 2790 0
-2571 1734 2788 0
-2571 1736 2786 0
-2571 1738 2784 0
-2571 1740 2782 0
-2571 1742 2780 0
-2571 1744 2778 0
-2571 1746 2776 0
-2571 1748 2774 0
-2571 1750 2772 0
-2571 1752 2770 0
-2571 1754 2768 0
-2571 1756 2766 0
-2571 1758 2764 0
-2571 1760 2762 0
-2571 1762 2760 0
-2571 1764 2758 0
-2571 1766 2756 0
-2571 1768 2754 0
-2571 1770 2752 0
-2571 1772 2750 0
-2571 1774 2748 0
-2571 1776 2746 0
-2571 1778 2744 0
-2571 1780 2742 0
-2571 1782 2740 0
-2571 1784 2738 0
-2571 1786 2736 0
-2571 1788 2734 0
-2571 1790 2732 0
-2571 1792 2730 0
-2571 1794 2728 0
-2571 1796 2726 0
-2571 1798 2724 0
-2571 1800 2722 0
-2571 1802 2720 0
-2571 1804 2718 0
-2571 1806 2716 0
-2571 1808 2714 0
-2571 1810 2712 0
-2571 1812 2710 0
-2571 1814 2708 0
-2571 1816 2706 0
-2571 1818 2704 0
-2571 1820 2702 0
-2571 1822 2700 0
-2571 1824 2698 0
-2569 2824 0
-2569 1699 2822 0
-2569 1700 2820 0
-2569 1702 2818 0
-2569 1704 2816 0
-2569 1706 2814 0
-2569 1708 2812 0
-2569 1710 2810 0
-2569 1712 2808 0
-2569 1714 2806 0
-2569 1716 2804 0
-2569 1718 2802 0
-2569 1720 2800 0
-2569 1722 2798 0
-2569 1724 2796 0
-2569 1726 2794 0
-2569 1728 2792 0
-2569 1730 2790 0
-2569 1732 2788 0
-2569 1734 2786 0
-2569 1736 2784 0
-2569 1738 2782 0
-2569 1740 2780 0
-2569 1742 2778 0
-2569 1744 2776 0
-2569 1746 2774 0
-2569 1748 2772 0
-2569 1750 2770 0
-2569 1752 2768 0
-2569 1754 2766 0
-2569 1756 2764 0
-2569 1758 2762 0
-2569 1760 2760 0
-2569 1762 2758 0
-2569 1764 2756 0
-2569 1766 2754 0
-2569 1768 2752 0
-2569 1770 2750 0
-2569 1772 2748 0
-2569 1774 2746 0
-2569 1776 2744 0
-2569 1778 2742 0
-2569 1780 2740 0
-2569 1782 2738 0
-2569 1784 2736 0
-2569 1786 2734 0
-2569 1788 2732 0
-2569 1790 2730 0
-2569 1792 2728 0
-2569 1794 2726 0
-2569 1796 2724 0
-2569 1798 2722 0
-2569 1800 2720 0
-2569 1802 2718 0
-2569 1804 2716 0
-2569 1806 2714 0
-2569 1808 2712 0
-2569 1810 2710 0
-2569 1812 2708 0
-2569 1814 2706 0
-2569 1816 2704 0
-2569 1818 2702 0
-2569 1820 2700 0
-2569 1822 2698 0
-2569 1824 2696 0
-2568 2822 0
-2568 1699 2820 0
-2568 1700 2818 0
-2568 1702 2816 0
-2568 1704 2814 0
-2568 1706 2812 0
-2568 1708 2810 0
-2568 1710 2808 0
-2568 1712 2806 0
-2568 1714 2804 0
-2568 1716 2802 0
-2568 1718 2800 0
-2568 1720 2798 0
-2568 1722 2796 0
-2568 1724 2794 0
-2568 1726 2792 0
-2568 1728 2790 0
-2568 1730 2788 0
-2568 1732 2786 0
-2568 1734 2784 0
-2568 1736 2782 0
-2568 1738 2780 0
-2568 1740 2778 0
-2568 1742 2776 0
-2568 1744 2774 0
-2568 1746 2772 0
-2568 1748 2770 0
-2568 1750 2768 0
-2568 1752 2766 0
-2568 1754 2764 0
-2568 1756 2762 0
-2568 1758 2760 0
-2568 1760 2758 0
-2568 1762 2756 0
-2568 1764 2754 0
-2568 1766 2752 0
-2568 1768 2750 0
-2568 1770 2748 0
-2568 1772 2746 0
-2568 1774 2744 0
-2568 1776 2742 0
-2568 1778 2740 0
-2568 1780 2738 0
-2568 1782 2736 0
-2568 1784 2734 0
-2568 1786 2732 0
-2568 1788 2730 0
-2568 1790 2728 0
-2568 1792 2726 0
-2568 1794 2724 0
-2568 1796 2722 0
-2568 1798 2720 0
-2568 1800 2718 0
-2568 1802 2716 0
-2568 1804 2714 0
-2568 1806 2712 0
-2568 1808 2710 0
-2568 1810 2708 0
-2568 1812 2706 0
-2568 1814 2704 0
-2568 1816 2702 0
-2568 1818 2700 0
-2568 1820 2698 0
-2568 1822 2696 0
-2568 1824 2695 0
c (( - aux405 - shift(num_occupied_by_types_00000, -64) - shift(num_occupied_by_types_00002, -64))<=0)
-1697 -2950 0
-1695 -2951 0
-1693 -2953 0
-1691 -2955 0
-1689 -2957 0
-1687 -2959 0
-1685 -2961 0
-1683 -2963 0
-1681 -2965 0
-1679 -2967 0
-1677 -2969 0
-1675 -2971 0
-1673 -2973 0
-1671 -2975 0
-1669 -2977 0
-1667 -2979 0
-1665 -2981 0
-1663 -2983 0
-1661 -2985 0
-1659 -2987 0
-1657 -2989 0
-1655 -2991 0
-1653 -2993 0
-1651 -2995 0
-1649 -2997 0
-1647 -2999 0
-1645 -3001 0
-1643 -3003 0
-1641 -3005 0
-1639 -3007 0
-1637 -3009 0
-1635 -3011 0
-1633 -3013 0
-1631 -3015 0
-1629 -3017 0
-1627 -3019 0
-1625 -3021 0
-1623 -3023 0
-1621 -3025 0
-1619 -3027 0
-1617 -3029 0
-1615 -3031 0
-1613 -3033 0
-1611 -3035 0
-1609 -3037 0
-1607 -3039 0
-1605 -3041 0
-1603 -3043 0
-1601 -3045 0
-1599 -3047 0
-1597 -3049 0
-1595 -3051 0
-1593 -3053 0
-1591 -3055 0
-1589 -3057 0
-1587 -3059 0
-1585 -3061 0
-1583 -3063 0
-1581 -3065 0
-1579 -3067 0
-1577 -3069 0
-1575 -3071 0
-1573 -3073 0
-1572 -3075 0
-1443 -2950 0
-1443 -1697 -2951 0
-1443 -1695 -2953 0
-1443 -1693 -2955 0
-1443 -1691 -2957 0
-1443 -1689 -2959 0
-1443 -1687 -2961 0
-1443 -1685 -2963 0
-1443 -1683 -2965 0
-1443 -1681 -2967 0
-1443 -1679 -2969 0
-1443 -1677 -2971 0
-1443 -1675 -2973 0
-1443 -1673 -2975 0
-1443 -1671 -2977 0
-1443 -1669 -2979 0
-1443 -1667 -2981 0
-1443 -1665 -2983 0
-1443 -1663 -2985 0
-1443 -1661 -2987 0
-1443 -1659 -2989 0
-1443 -1657 -2991 0
-1443 -1655 -2993 0
-1443 -1653 -2995 0
-1443 -1651 -2997 0
-1443 -1649 -2999 0
-1443 -1647 -3001 0
-1443 -1645 -3003 0
-1443 -1643 -3005 0
-1443 -1641 -3007 0
-1443 -1639 -3009 0
-1443 -1637 -3011 0
-1443 -1635 -3013 0
-1443 -1633 -3015 0
-1443 -1631 -3017 0
-1443 -1629 -3019 0
-1443 -1627 -3021 0
-1443 -1625 -3023 0
-1443 -1623 -3025 0
-1443 -1621 -3027 0
-1443 -1619 -3029 0
-1443 -1617 -3031 0
-1443 -1615 -3033 0
-1443 -1613 -3035 0
-1443 -1611 -3037 0
-1443 -1609 -3039 0
-1443 -1607 -3041 0
-1443 -1605 -3043 0
-1443 -1603 -3045 0
-1443 -1601 -3047 0
-1443 -1599 -3049 0
-1443 -1597 -3051 0
-1443 -1595 -3053 0
-1443 -1593 -3055 0
-1443 -1591 -3057 0
-1443 -1589 -3059 0
-1443 -1587 -3061 0
-1443 -1585 -3063 0
-1443 -1583 -3065 0
-1443 -1581 -3067 0
-1443 -1579 -3069 0
-1443 -1577 -3071 0
-1443 -1575 -3073 0
-1443 -1573 -3075 0
-1443 -1572 -3077 0
-1441 -2951 0
-1441 -1697 -2953 0
-1441 -1695 -2955 0
-1441 -1693 -2957 0
-1441 -1691 -2959 0
-1441 -1689 -2961 0
-1441 -1687 -2963 0
-1441 -1685 -2965 0
-1441 -1683 -2967 0
-1441 -1681 -2969 0
-1441 -1679 -2971 0
-1441 -1677 -2973 0
-1441 -1675 -2975 0
-1441 -1673 -2977 0
-1441 -1671 -2979 0
-1441 -1669 -2981 0
-1441 -1667 -2983 0
-1441 -1665 -2985 0
-1441 -1663 -2987 0
-1441 -1661 -2989 0
-1441 -1659 -2991 0
-1441 -1657 -2993 0
-1441 -1655 -2995 0
-1441 -1653 -2997 0
-1441 -1651 -2999 0
-1441 -1649 -3001 0
-1441 -1647 -3003 0
-1441 -1645 -3005 0
-1441 -1643 -3007 0
-1441 -1641 -3009 0
-1441 -1639 -3011 0
-1441 -1637 -3013 0
-1441 -1635 -3015 0
-1441 -1633 -3017 0
-1441 -1631 -3019 0
-1441 -1629 -3021 0
-1441 -1627 -3023 0
-1441 -1625 -3025 0
-1441 -1623 -3027 0
-1441 -1621 -3029 0
-1441 -1619 -3031 0
-1441 -1617 -3033 0
-1441 -1615 -3035 0
-1441 -1613 -3037 0
-1441 -1611 -3039 0
-1441 -1609 -3041 0
-1441 -1607 -3043 0
-1441 -1605 -3045 0
-1441 -1603 -3047 0
-1441 -1601 -3049 0
-1441 -1599 -3051 0
-1441 -1597 -3053 0
-1441 -1595 -3055 0
-1441 -1593 -3057 0
-1441 -1591 -3059 0
-1441 -1589 -3061 0
-1441 -1587 -3063 0
-1441 -1585 -3065 0
-1441 -1583 -3067 0
-1441 -1581 -3069 0
-1441 -1579 -3071 0
-1441 -1577 -3073 0
-1441 -1575 -3075 0
-1441 -1573 -3077 0
-1441 -1572 -3079 0
-1439 -2953 0
-1439 -1697 -2955 0
-1439 -1695 -2957 0
-1439 -1693 -2959 0
-1439 -1691 -2961 0
-1439 -1689 -2963 0
-1439 -1687 -2965 0
-1439 -1685 -2967 0
-1439 -1683 -2969 0
-1439 -1681 -2971 0
-1439 -1679 -2973 0
-1439 -1677 -2975 0
-1439 -1675 -2977 0
-1439 -1673 -2979 0
-1439 -1671 -2981 0
-1439 -1669 -2983 0
-1439 -1667 -2985 0
-1439 -1665 -2987 0
-1439 -1663 -2989 0
-1439 -1661 -2991 0
-1439 -1659 -2993 0
-1439 -1657 -2995 0
-1439 -1655 -2997 0
-1439 -1653 -2999 0
-1439 -1651 -3001 0
-1439 -1649 -3003 0
-1439 -1647 -3005 0
-1439 -1645 -3007 0
-1439 -1643 -3009 0
-1439 -1641 -3011 0
-1439 -1639 -3013 0
-1439 -1637 -3015 0
-1439 -1635 -3017 0
-1439 -1633 -3019 0
-1439 -1631 -3021 0
-1439 -1629 -3023 0
-1439 -1627 -3025 0
-1439 -1625 -3027 0
-1439 -1623 -3029 0
-1439 -1621 -3031 0
-1439 -1619 -3033 0
-1439 -1617 -3035 0
-1439 -1615 -3037 0
-1439 -1613 -3039 0
-1439 -1611 -3041 0
-1439 -1609 -3043 0
-1439 -1607 -3045 0
-1439 -1605 -3047 0
-1439 -1603 -3049 0
-1439 -1601 -3051 0
-1439 -1599 -3053 0
-1439 -1597 -3055 0
-1439 -1595 -3057 0
-1439 -1593 -3059 0
-1439 -1591 -3061 0
-1439 -1589 -3063 0
-1439 -1587 -3065 0
-1439 -1585 -3067 0
-1439 -1583 -3069 0
-1439 -1581 -3071 0
-1439 -1579 -3073 0
-1439 -1577 -3075 0
-1439 -1575 -3077 0
-1439 -1573 -3079 0
-1439 -1572 -3081 0
-1437 -2955 0
-1437 -1697 -2957 0
-1437 -1695 -2959 0
-1437 -1693 -2961 0
-1437 -1691 -2963 0
-1437 -1689 -2965 0
-1437 -1687 -2967 0
-1437 -1685 -2969 0
-1437 -1683 -2971 0
-1437 -1681 -2973 0
-1437 -1679 -2975 0
-1437 -1677 -2977 0
-1437 -1675 -2979 0
-1437 -1673 -2981 0
-1437 -1671 -2983 0
-1437 -1669 -2985 0
-1437 -1667 -2987 0
-1437 -1665 -2989 0
-1437 -1663 -2991 0
-1437 -1661 -2993 0
-1437 -1659 -2995 0
-1437 -1657 -2997 0
-1437 -1655 -2999 0
-1437 -1653 -3001 0
-1437 -1651 -3003 0
-1437 -1649 -3005 0
-1437 -1647 -3007 0
-1437 -1645 -3009 0
-1437 -1643 -3011 0
-1437 -1641 -3013 0
-1437 -1639 -3015 0
-1437 -1637 -3017 0
-1437 -1635 -3019 0
-1437 -1633 -3021 0
-1437 -1631 -3023 0
-1437 -1629 -3025 0
-1437 -1627 -3027 0
-1437 -1625 -3029 0
-1437 -1623 -3031 0
-1437 -1621 -3033 0
-1437 -1619 -3035 0
-1437 -1617 -3037 0
-1437 -1615 -3039 0
-1437 -1613 -3041 0
-1437 -1611 -3043 0
-1437 -1609 -3045 0
-1437 -1607 -3047 0
-1437 -1605 -3049 0
-1437 -1603 -3051 0
-1437 -1601 -3053 0
-1437 -1599 -3055 0
-1437 -1597 -3057 0
-1437 -1595 -3059 0
-1437 -1593 -3061 0
-1437 -1591 -3063 0
-1437 -1589 -3065 0
-1437 -1587 -3067 0
-1437 -1585 -3069 0
-1437 -1583 -3071 0
-1437 -1581 -3073 0
-1437 -1579 -3075 0
-1437 -1577 -3077 0
-1437 -1575 -3079 0
-1437 -1573 -3081 0
-1437 -1572 -3083 0
-1435 -2957 0
-1435 -1697 -2959 0
-1435 -1695 -2961 0
-1435 -1693 -2963 0
-1435 -1691 -2965 0
-1435 -1689 -2967 0
-1435 -1687 -2969 0
-1435 -1685 -2971 0
-1435 -1683 -2973 0
-1435 -1681 -2975 0
-1435 -1679 -2977 0
-1435 -1677 -2979 0
-1435 -1675 -2981 0
-1435 -1673 -2983 0
-1435 -1671 -2985 0
-1435 -1669 -2987 0
-1435 -1667 -2989 0
-1435 -1665 -2991 0
-1435 -1663 -2993 0
-1435 -1661 -2995 0
-1435 -1659 -2997 0
-1435 -1657 -2999 0
-1435 -1655 -3001 0
-1435 -1653 -3003 0
-1435 -1651 -3005 0
-1435 -1649 -3007 0
-1435 -1647 -3009 0
-1435 -1645 -3011 0
-1435 -1643 -3013 0
-1435 -1641 -3015 0
-1435 -1639 -3017 0
-1435 -1637 -3019 0
-1435 -1635 -3021 0
-1435 -1633 -3023 0
-1435 -1631 -3025 0
-1435 -1629 -3027 0
-1435 -1627 -3029 0
-1435 -1625 -3031 0
-1435 -1623 -3033 0
-1435 -1621 -3035 0
-1435 -1619 -3037 0
-1435 -1617 -3039 0
-1435 -1615 -3041 0
-1435 -1613 -3043 0
-1435 -1611 -3045 0
-1435 -1609 -3047 0
-1435 -1607 -3049 0
-1435 -1605 -3051 0
-1435 -1603 -3053 0
-1435 -1601 -3055 0
-1435 -1599 -3057 0
-1435 -1597 -3059 0
-1435 -1595 -3061 0
-1435 -1593 -3063 0
-1435 -1591 -3065 0
-1435 -1589 -3067 0
-1435 -1587 -3069 0
-1435 -1585 -3071 0
-1435 -1583 -3073 0
-1435 -1581 -3075 0
-1435 -1579 -3077 0
-1435 -1577 -3079 0
-1435 -1575 -3081 0
-1435 -1573 -3083 0
-1435 -1572 -3085 0
-1433 -2959 0
-1433 -1697 -2961 0
-1433 -1695 -2963 0
-1433 -1693 -2965 0
-1433 -1691 -2967 0
-1433 -1689 -2969 0
-1433 -1687 -2971 0
-1433 -1685 -2973 0
-1433 -1683 -2975 0
-1433 -1681 -2977 0
-1433 -1679 -2979 0
-1433 -1677 -2981 0
-1433 -1675 -2983 0
-1433 -1673 -2985 0
-1433 -1671 -2987 0
-1433 -1669 -2989 0
-1433 -1667 -2991 0
-1433 -1665 -2993 0
-1433 -1663 -2995 0
-1433 -1661 -2997 0
-1433 -1659 -2999 0
-1433 -1657 -3001 0
-1433 -1655 -3003 0
-1433 -1653 -3005 0
-1433 -1651 -3007 0
-1433 -1649 -3009 0
-1433 -1647 -3011 0
-1433 -1645 -3013 0
-1433 -1643 -3015 0
-1433 -1641 -3017 0
-1433 -1639 -3019 0
-1433 -1637 -3021 0
-1433 -1635 -3023 0
-1433 -1633 -3025 0
-1433 -1631 -3027 0
-1433 -1629 -3029 0
-1433 -1627 -3031 0
-1433 -1625 -3033 0
-1433 -1623 -3035 0
-1433 -1621 -3037 0
-1433 -1619 -3039 0
-1433 -1617 -3041 0
-1433 -1615 -3043 0
-1433 -1613 -3045 0
-1433 -1611 -3047 0
-1433 -1609 -3049 0
-1433 -1607 -3051 0
-1433 -1605 -3053 0
-1433 -1603 -3055 0
-1433 -1601 -3057 0
-1433 -1599 -3059 0
-1433 -1597 -3061 0
-1433 -1595 -3063 0
-1433 -1593 -3065 0
-1433 -1591 -3067 0
-1433 -1589 -3069 0
-1433 -1587 -3071 0
-1433 -1585 -3073 0
-1433 -1583 -3075 0
-1433 -1581 -3077 0
-1433 -1579 -3079 0
-1433 -1577 -3081 0
-1433 -1575 -3083 0
-1433 -1573 -3085 0
-1433 -1572 -3087 0
-1431 -2961 0
-1431 -1697 -2963 0
-1431 -1695 -2965 0
-1431 -1693 -2967 0
-1431 -1691 -2969 0
-1431 -1689 -2971 0
-1431 -1687 -2973 0
-1431 -1685 -2975 0
-1431 -1683 -2977 0
-1431 -1681 -2979 0
-1431 -1679 -2981 0
-1431 -1677 -2983 0
-1431 -1675 -2985 0
-1431 -1673 -2987 0
-1431 -1671 -2989 0
-1431 -1669 -2991 0
-1431 -1667 -2993 0
-1431 -1665 -2995 0
-1431 -1663 -2997 0
-1431 -1661 -2999 0
-1431 -1659 -3001 0
-1431 -1657 -3003 0
-1431 -1655 -3005 0
-1431 -1653 -3007 0
-1431 -1651 -3009 0
-1431 -1649 -3011 0
-1431 -1647 -3013 0
-1431 -1645 -3015 0
-1431 -1643 -3017 0
-1431 -1641 -3019 0
-1431 -1639 -3021 0
-1431 -1637 -3023 0
-1431 -1635 -3025 0
-1431 -1633 -3027 0
-1431 -1631 -3029 0
-1431 -1629 -3031 0
-1431 -1627 -3033 0
-1431 -1625 -3035 0
-1431 -1623 -3037 0
-1431 -1621 -3039 0
-1431 -1619 -3041 0
-1431 -1617 -3043 0
-1431 -1615 -3045 0
-1431 -1613 -3047 0
-1431 -1611 -3049 0
-1431 -1609 -3051 0
-1431 -1607 -3053 0
-1431 -1605 -3055 0
-1431 -1603 -3057 0
-1431 -1601 -3059 0
-1431 -1599 -3061 0
-1431 -1597 -3063 0
-1431 -1595 -3065 0
-1431 -1593 -3067 0
-1431 -1591 -3069 0
-1431 -1589 -3071 0
-1431 -1587 -3073 0
-1431 -1585 -3075 0
-1431 -1583 -3077 0
-1431 -1581 -3079 0
-1431 -1579 -3081 0
-1431 -1577 -3083 0
-1431 -1575 -3085 0
-1431 -1573 -3087 0
-1431 -1572 -3089 0
-1429 -2963 0
-1429 -1697 -2965 0
-1429 -1695 -2967 0
-1429 -1693 -2969 0
-1429 -1691 -2971 0
-1429 -1689 -2973 0
-1429 -1687 -2975 0
-1429 -1685 -2977 0
-1429 -1683 -2979 0
-1429 -1681 -2981 0
-1429 -1679 -2983 0
-1429 -1677 -2985 0
-1429 -1675 -2987 0
-1429 -1673 -2989 0
-1429 -1671 -2991 0
-1429 -1669 -2993 0
-1429 -1667 -2995 0
-1429 -1665 -2997 0
-1429 -1663 -2999 0
-1429 -1661 -3001 0
-1429 -1659 -3003 0
-1429 -1657 -3005 0
-1429 -1655 -3007 0
-1429 -1653 -3009 0
-1429 -1651 -3011 0
-1429 -1649 -3013 0
-1429 -1647 -3015 0
-1429 -1645 -3017 0
-1429 -1643 -3019 0
-1429 -1641 -3021 0
-1429 -1639 -3023 0
-1429 -1637 -3025 0
-1429 -1635 -3027 0
-1429 -1633 -3029 0
-1429 -1631 -3031 0
-1429 -1629 -3033 0
-1429 -1627 -3035 0
-1429 -1625 -3037 0
-1429 -1623 -3039 0
-1429 -1621 -3041 0
-1429 -1619 -3043 0
-1429 -1617 -3045 0
-1429 -1615 -3047 0
-1429 -1613 -3049 0
-1429 -1611 -3051 0
-1429 -1609 -3053 0
-1429 -1607 -3055 0
-1429 -1605 -3057 0
-1429 -1603 -3059 0
-1429 -1601 -3061 0
-1429 -1599 -3063 0
-1429 -1597 -3065 0
-1429 -1595 -3067 0
-1429 -1593 -3069 0
-1429 -1591 -3071 0
-1429 -1589 -3073 0
-1429 -1587 -3075 0
-1429 -1585 -3077 0
-1429 -1583 -3079 0
-1429 -1581 -3081 0
-1429 -1579 -3083 0
-1429 -1577 -3085 0
-1429 -1575 -3087 0
-1429 -1573 -3089 0
-1429 -1572 -3091 0
-1427 -2965 0
-1427 -1697 -2967 0
-1427 -1695 -2969 0
-1427 -1693 -2971 0
-1427 -1691 -2973 0
-1427 -1689 -2975 0
-1427 -1687 -2977 0
-1427 -1685 -2979 0
-1427 -1683 -2981 0
-1427 -1681 -2983 0
-1427 -1679 -2985 0
-1427 -1677 -2987 0
-1427 -1675 -2989 0
-1427 -1673 -2991 0
-1427 -1671 -2993 0
-1427 -1669 -2995 0
-1427 -1667 -2997 0
-1427 -1665 -2999 0
-1427 -1663 -3001 0
-1427 -1661 -3003 0
-1427 -1659 -3005 0
-1427 -1657 -3007 0
-1427 -1655 -3009 0
-1427 -1653 -3011 0
-1427 -1651 -3013 0
-1427 -1649 -3015 0
-1427 -1647 -3017 0
-1427 -1645 -3019 0
-1427 -1643 -3021 0
-1427 -1641 -3023 0
-1427 -1639 -3025 0
-1427 -1637 -3027 0
-1427 -1635 -3029 0
-1427 -1633 -3031 0
-1427 -1631 -3033 0
-1427 -1629 -3035 0
-1427 -1627 -3037 0
-1427 -1625 -3039 0
-1427 -1623 -3041 0
-1427 -1621 -3043 0
-1427 -1619 -3045 0
-1427 -1617 -3047 0
-1427 -1615 -3049 0
-1427 -1613 -3051 0
-1427 -1611 -3053 0
-1427 -1609 -3055 0
-1427 -1607 -3057 0
-1427 -1605 -3059 0
-1427 -1603 -3061 0
-1427 -1601 -3063 0
-1427 -1599 -3065 0
-1427 -1597 -3067 0
-1427 -1595 -3069 0
-1427 -1593 -3071 0
-1427 -1591 -3073 0
-1427 -1589 -3075 0
-1427 -1587 -3077 0
-1427 -1585 -3079 0
-1427 -1583 -3081 0
-1427 -1581 -3083 0
-1427 -1579 -3085 0
-1427 -1577 -3087 0
-1427 -1575 -3089 0
-1427 -1573 -3091 0
-1427 -1572 -3093 0
-1425 -2967 0
-1425 -1697 -2969 0
-1425 -1695 -2971 0
-1425 -1693 -2973 0
-1425 -1691 -2975 0
-1425 -1689 -2977 0
-1425 -1687 -2979 0
-1425 -1685 -2981 0
-1425 -1683 -2983 0
-1425 -1681 -2985 0
-1425 -1679 -2987 0
-1425 -1677 -2989 0
-1425 -1675 -2991 0
-1425 -1673 -2993 0
-1425 -1671 -2995 0
-1425 -1669 -2997 0
-1425 -1667 -2999 0
-1425 -1665 -3001 0
-1425 -1663 -3003 0
-1425 -1661 -3005 0
-1425 -1659 -3007 0
-1425 -1657 -3009 0
-1425 -1655 -3011 0
-1425 -1653 -3013 0
-1425 -1651 -3015 0
-1425 -1649 -3017 0
-1425 -1647 -3019 0
-1425 -1645 -3021 0
-1425 -1643 -3023 0
-1425 -1641 -3025 0
-1425 -1639 -3027 0
-1425 -1637 -3029 0
-1425 -1635 -3031 0
-1425 -1633 -3033 0
-1425 -1631 -3035 0
-1425 -1629 -3037 0
-1425 -1627 -3039 0
-1425 -1625 -3041 0
-1425 -1623 -3043 0
-1425 -1621 -3045 0
-1425 -1619 -3047 0
-1425 -1617 -3049 0
-1425 -1615 -3051 0
-1425 -1613 -3053 0
-1425 -1611 -3055 0
-1425 -1609 -3057 0
-1425 -1607 -3059 0
-1425 -1605 -3061 0
-1425 -1603 -3063 0
-1425 -1601 -3065 0
-1425 -1599 -3067 0
-1425 -1597 -3069 0
-1425 -1595 -3071 0
-1425 -1593 -3073 0
-1425 -1591 -3075 0
-1425 -1589 -3077 0
-1425 -1587 -3079 0
-1425 -1585 -3081 0
-1425 -1583 -3083 0
-1425 -1581 -3085 0
-1425 -1579 -3087 0
-1425 -1577 -3089 0
-1425 -1575 -3091 0
-1425 -1573 -3093 0
-1425 -1572 -3095 0
-1423 -2969 0
-1423 -1697 -2971 0
-1423 -1695 -2973 0
-1423 -1693 -2975 0
-1423 -1691 -2977 0
-1423 -1689 -2979 0
-1423 -1687 -2981 0
-1423 -1685 -2983 0
-1423 -1683 -2985 0
-1423 -1681 -2987 0
-1423 -1679 -2989 0
-1423 -1677 -2991 0
-1423 -1675 -2993 0
-1423 -1673 -2995 0
-1423 -1671 -2997 0
-1423 -1669 -2999 0
-1423 -1667 -3001 0
-1423 -1665 -3003 0
-1423 -1663 -3005 0
-1423 -1661 -3007 0
-1423 -1659 -3009 0
-1423 -1657 -3011 0
-1423 -1655 -3013 0
-1423 -1653 -3015 0
-1423 -1651 -3017 0
-1423 -1649 -3019 0
-1423 -1647 -3021 0
-1423 -1645 -3023 0
-1423 -1643 -3025 0
-1423 -1641 -3027 0
-1423 -1639 -3029 0
-1423 -1637 -3031 0
-1423 -1635 -3033 0
-1423 -1633 -3035 0
-1423 -1631 -3037 0
-1423 -1629 -3039 0
-1423 -1627 -3041 0
-1423 -1625 -3043 0
-1423 -1623 -3045 0
-1423 -1621 -3047 0
-1423 -1619 -3049 0
-1423 -1617 -3051 0
-1423 -1615 -3053 0
-1423 -1613 -3055 0
-1423 -1611 -3057 0
-1423 -1609 -3059 0
-1423 -1607 -3061 0
-1423 -1605 -3063 0
-1423 -1603 -3065 0
-1423 -1601 -3067 0
-1423 -1599 -3069 0
-1423 -1597 -3071 0
-1423 -1595 -3073 0
-1423 -1593 -3075 0
-1423 -1591 -3077 0
-1423 -1589 -3079 0
-1423 -1587 -3081 0
-1423 -1585 -3083 0
-1423 -1583 -3085 0
-1423 -1581 -3087 0
-1423 -1579 -3089 0
-1423 -1577 -3091 0
-1423 -1575 -3093 0
-1423 -1573 -3095 0
-1423 -1572 -3097 0
-1421 -2971 0
-1421 -1697 -2973 0
-1421 -1695 -2975 0
-1421 -1693 -2977 0
-1421 -1691 -2979 0
-1421 -1689 -2981 0
-1421 -1687 -2983 0
-1421 -1685 -2985 0
-1421 -1683 -2987 0
-1421 -1681 -2989 0
-1421 -1679 -2991 0
-1421 -1677 -2993 0
-1421 -1675 -2995 0
-1421 -1673 -2997 0
-1421 -1671 -2999 0
-1421 -1669 -3001 0
-1421 -1667 -3003 0
-1421 -1665 -3005 0
-1421 -1663 -3007 0
-1421 -1661 -3009 0
-1421 -1659 -3011 0
-1421 -1657 -3013 0
-1421 -1655 -3015 0
-1421 -1653 -3017 0
-1421 -1651 -3019 0
-1421 -1649 -3021 0
-1421 -1647 -3023 0
-1421 -1645 -3025 0
-1421 -1643 -3027 0
-1421 -1641 -3029 0
-1421 -1639 -3031 0
-1421 -1637 -3033 0
-1421 -1635 -3035 0
-1421 -1633 -3037 0
-1421 -1631 -3039 0
-1421 -1629 -3041 0
-1421 -1627 -3043 0
-1421 -1625 -3045 0
-1421 -1623 -3047 0
-1421 -1621 -3049 0
-1421 -1619 -3051 0
-1421 -1617 -3053 0
-1421 -1615 -3055 0
-1421 -1613 -3057 0
-1421 -1611 -3059 0
-1421 -1609 -3061 0
-1421 -1607 -3063 0
-1421 -1605 -3065 0
-1421 -1603 -3067 0
-1421 -1601 -3069 0
-1421 -1599 -3071 0
-1421 -1597 -3073 0
-1421 -1595 -3075 0
-1421 -1593 -3077 0
-1421 -1591 -3079 0
-1421 -1589 -3081 0
-1421 -1587 -3083 0
-1421 -1585 -3085 0
-1421 -1583 -3087 0
-1421 -1581 -3089 0
-1421 -1579 -3091 0
-1421 -1577 -3093 0
-1421 -1575 -3095 0
-1421 -1573 -3097 0
-1421 -1572 -3099 0
-1419 -2973 0
-1419 -1697 -2975 0
-1419 -1695 -2977 0
-1419 -1693 -2979 0
-1419 -1691 -2981 0
-1419 -1689 -2983 0
-1419 -1687 -2985 0
-1419 -1685 -2987 0
-1419 -1683 -2989 0
-1419 -1681 -2991 0
-1419 -1679 -2993 0
-1419 -1677 -2995 0
-1419 -1675 -2997 0
-1419 -1673 -2999 0
-1419 -1671 -3001 0
-1419 -1669 -3003 0
-1419 -1667 -3005 0
-1419 -1665 -3007 0
-1419 -1663 -3009 0
-1419 -1661 -3011 0
-1419 -1659 -3013 0
-1419 -1657 -3015 0
-1419 -1655 -3017 0
-1419 -1653 -3019 0
-1419 -1651 -3021 0
-1419 -1649 -3023 0
-1419 -1647 -3025 0
-1419 -1645 -3027 0
-1419 -1643 -3029 0
-1419 -1641 -3031 0
-1419 -1639 -3033 0
-1419 -1637 -3035 0
-1419 -1635 -3037 0
-1419 -1633 -3039 0
-1419 -1631 -3041 0
-1419 -1629 -3043 0
-1419 -1627 -3045 0
-1419 -1625 -3047 0
-1419 -1623 -3049 0
-1419 -1621 -3051 0
-1419 -1619 -3053 0
-1419 -1617 -3055 0
-1419 -1615 -3057 0
-1419 -1613 -3059 0
-1419 -1611 -3061 0
-1419 -1609 -3063 0
-1419 -1607 -3065 0
-1419 -1605 -3067 0
-1419 -1603 -3069 0
-1419 -1601 -3071 0
-1419 -1599 -3073 0
-1419 -1597 -3075 0
-1419 -1595 -3077 0
-1419 -1593 -3079 0
-1419 -1591 -3081 0
-1419 -1589 -3083 0
-1419 -1587 -3085 0
-1419 -1585 -3087 0
-1419 -1583 -3089 0
-1419 -1581 -3091 0
-1419 -1579 -3093 0
-1419 -1577 -3095 0
-1419 -1575 -3097 0
-1419 -1573 -3099 0
-1419 -1572 -3101 0
-1417 -2975 0
-1417 -1697 -2977 0
-1417 -1695 -2979 0
-1417 -1693 -2981 0
-1417 -1691 -2983 0
-1417 -1689 -2985 0
-1417 -1687 -2987 0
-1417 -1685 -2989 0
-1417 -1683 -2991 0
-1417 -1681 -2993 0
-1417 -1679 -2995 0
-1417 -1677 -2997 0
-1417 -1675 -2999 0
-1417 -1673 -3001 0
-1417 -1671 -3003 0
-1417 -1669 -3005 0
-1417 -1667 -3007 0
-1417 -1665 -3009 0
-1417 -1663 -3011 0
-1417 -1661 -3013 0
-1417 -1659 -3015 0
-1417 -1657 -3017 0
-1417 -1655 -3019 0
-1417 -1653 -3021 0
-1417 -1651 -3023 0
-1417 -1649 -3025 0
-1417 -1647 -3027 0
-1417 -1645 -3029 0
-1417 -1643 -3031 0
-1417 -1641 -3033 0
-1417 -1639 -3035 0
-1417 -1637 -3037 0
-1417 -1635 -3039 0
-1417 -1633 -3041 0
-1417 -1631 -3043 0
-1417 -1629 -3045 0
-1417 -1627 -3047 0
-1417 -1625 -3049 0
-1417 -1623 -3051 0
-1417 -1621 -3053 0
-1417 -1619 -3055 0
-1417 -1617 -3057 0
-1417 -1615 -3059 0
-1417 -1613 -3061 0
-1417 -1611 -3063 0
-1417 -1609 -3065 0
-1417 -1607 -3067 0
-1417 -1605 -3069 0
-1417 -1603 -3071 0
-1417 -1601 -3073 0
-1417 -1599 -3075 0
-1417 -1597 -3077 0
-1417 -1595 -3079 0
-1417 -1593 -3081 0
-1417 -1591 -3083 0
-1417 -1589 -3085 0
-1417 -1587 -3087 0
-1417 -1585 -3089 0
-1417 -1583 -3091 0
-1417 -1581 -3093 0
-1417 -1579 -3095 0
-1417 -1577 -3097 0
-1417 -1575 -3099 0
-1417 -1573 -3101 0
-1417 -1572 -3103 0
-1415 -2977 0
-1415 -1697 -2979 0
-1415 -1695 -2981 0
-1415 -1693 -2983 0
-1415 -1691 -2985 0
-1415 -1689 -2987 0
-1415 -1687 -2989 0
-1415 -1685 -2991 0
-1415 -1683 -2993 0
-1415 -1681 -2995 0
-1415 -1679 -2997 0
-1415 -1677 -2999 0
-1415 -1675 -3001 0
-1415 -1673 -3003 0
-1415 -1671 -3005 0
-1415 -1669 -3007 0
-1415 -1667 -3009 0
-1415 -1665 -3011 0
-1415 -1663 -3013 0
-1415 -1661 -3015 0
-1415 -1659 -3017 0
-1415 -1657 -3019 0
-1415 -1655 -3021 0
-1415 -1653 -3023 0
-1415 -1651 -3025 0
-1415 -1649 -3027 0
-1415 -1647 -3029 0
-1415 -1645 -3031 0
-1415 -1643 -3033 0
-1415 -1641 -3035 0
-1415 -1639 -3037 0
-1415 -1637 -3039 0
-1415 -1635 -3041 0
-1415 -1633 -3043 0
-1415 -1631 -3045 0
-1415 -1629 -3047 0
-1415 -1627 -3049 0
-1415 -1625 -3051 0
-1415 -1623 -3053 0
-1415 -1621 -3055 0
-1415 -1619 -3057 0
-1415 -1617 -3059 0
-1415 -1615 -3061 0
-1415 -1613 -3063 0
-1415 -1611 -3065 0
-1415 -1609 -3067 0
-1415 -1607 -3069 0
-1415 -1605 -3071 0
-1415 -1603 -3073 0
-1415 -1601 -3075 0
-1415 -1599 -3077 0
-1415 -1597 -3079 0
-1415 -1595 -3081 0
-1415 -1593 -3083 0
-1415 -1591 -3085 0
-1415 -1589 -3087 0
-1415 -1587 -3089 0
-1415 -1585 -3091 0
-1415 -1583 -3093 0
-1415 -1581 -3095 0
-1415 -1579 -3097 0
-1415 -1577 -3099 0
-1415 -1575 -3101 0
-1415 -1573 -3103 0
-1415 -1572 -3105 0
-1413 -2979 0
-1413 -1697 -2981 0
-1413 -1695 -2983 0
-1413 -1693 -2985 0
-1413 -1691 -2987 0
-1413 -1689 -2989 0
-1413 -1687 -2991 0
-1413 -1685 -2993 0
-1413 -1683 -2995 0
-1413 -1681 -2997 0
-1413 -1679 -2999 0
-1413 -1677 -3001 0
-1413 -1675 -3003 0
-1413 -1673 -3005 0
-1413 -1671 -3007 0
-1413 -1669 -3009 0
-1413 -1667 -3011 0
-1413 -1665 -3013 0
-1413 -1663 -3015 0
-1413 -1661 -3017 0
-1413 -1659 -3019 0
-1413 -1657 -3021 0
-1413 -1655 -3023 0
-1413 -1653 -3025 0
-1413 -1651 -3027 0
-1413 -1649 -3029 0
-1413 -1647 -3031 0
-1413 -1645 -3033 0
-1413 -1643 -3035 0
-1413 -1641 -3037 0
-1413 -1639 -3039 0
-1413 -1637 -3041 0
-1413 -1635 -3043 0
-1413 -1633 -3045 0
-1413 -1631 -3047 0
-1413 -1629 -3049 0
-1413 -1627 -3051 0
-1413 -1625 -3053 0
-1413 -1623 -3055 0
-1413 -1621 -3057 0
-1413 -1619 -3059 0
-1413 -1617 -3061 0
-1413 -1615 -3063 0
-1413 -1613 -3065 0
-1413 -1611 -3067 0
-1413 -1609 -3069 0
-1413 -1607 -3071 0
-1413 -1605 -3073 0
-1413 -1603 -3075 0
-1413 -1601 -3077 0
-1413 -1599 -3079 0
-1413 -1597 -3081 0
-1413 -1595 -3083 0
-1413 -1593 -3085 0
-1413 -1591 -3087 0
-1413 -1589 -3089 0
-1413 -1587 -3091 0
-1413 -1585 -3093 0
-1413 -1583 -3095 0
-1413 -1581 -3097 0
-1413 -1579 -3099 0
-1413 -1577 -3101 0
-1413 -1575 -3103 0
-1413 -1573 -3105 0
-1413 -1572 -3107 0
-1411 -2981 0
-1411 -1697 -2983 0
-1411 -1695 -2985 0
-1411 -1693 -2987 0
-1411 -1691 -2989 0
-1411 -1689 -2991 0
-1411 -1687 -2993 0
-1411 -1685 -2995 0
-1411 -1683 -2997 0
-1411 -1681 -2999 0
-1411 -1679 -3001 0
-1411 -1677 -3003 0
-1411 -1675 -3005 0
-1411 -1673 -3007 0
-1411 -1671 -3009 0
-1411 -1669 -3011 0
-1411 -1667 -3013 0
-1411 -1665 -3015 0
-1411 -1663 -3017 0
-1411 -1661 -3019 0
-1411 -1659 -3021 0
-1411 -1657 -3023 0
-1411 -1655 -3025 0
-1411 -1653 -3027 0
-1411 -1651 -3029 0
-1411 -1649 -3031 0
-1411 -1647 -3033 0
-1411 -1645 -3035 0
-1411 -1643 -3037 0
-1411 -1641 -3039 0
-1411 -1639 -3041 0
-1411 -1637 -3043 0
-1411 -1635 -3045 0
-1411 -1633 -3047 0
-1411 -1631 -3049 0
-1411 -1629 -3051 0
-1411 -1627 -3053 0
-1411 -1625 -3055 0
-1411 -1623 -3057 0
-1411 -1621 -3059 0
-1411 -1619 -3061 0
-1411 -1617 -3063 0
-1411 -1615 -3065 0
-1411 -1613 -3067 0
-1411 -1611 -3069 0
-1411 -1609 -3071 0
-1411 -1607 -3073 0
-1411 -1605 -3075 0
-1411 -1603 -3077 0
-1411 -1601 -3079 0
-1411 -1599 -3081 0
-1411 -1597 -3083 0
-1411 -1595 -3085 0
-1411 -1593 -3087 0
-1411 -1591 -3089 0
-1411 -1589 -3091 0
-1411 -1587 -3093 0
-1411 -1585 -3095 0
-1411 -1583 -3097 0
-1411 -1581 -3099 0
-1411 -1579 -3101 0
-1411 -1577 -3103 0
-1411 -1575 -3105 0
-1411 -1573 -3107 0
-1411 -1572 -3109 0
-1409 -2983 0
-1409 -1697 -2985 0
-1409 -1695 -2987 0
-1409 -1693 -2989 0
-1409 -1691 -2991 0
-1409 -1689 -2993 0
-1409 -1687 -2995 0
-1409 -1685 -2997 0
-1409 -1683 -2999 0
-1409 -1681 -3001 0
-1409 -1679 -3003 0
-1409 -1677 -3005 0
-1409 -1675 -3007 0
-1409 -1673 -3009 0
-1409 -1671 -3011 0
-1409 -1669 -3013 0
-1409 -1667 -3015 0
-1409 -1665 -3017 0
-1409 -1663 -3019 0
-1409 -1661 -3021 0
-1409 -1659 -3023 0
-1409 -1657 -3025 0
-1409 -1655 -3027 0
-1409 -1653 -3029 0
-1409 -1651 -3031 0
-1409 -1649 -3033 0
-1409 -1647 -3035 0
-1409 -1645 -3037 0
-1409 -1643 -3039 0
-1409 -1641 -3041 0
-1409 -1639 -3043 0
-1409 -1637 -3045 0
-1409 -1635 -3047 0
-1409 -1633 -3049 0
-1409 -1631 -3051 0
-1409 -1629 -3053 0
-1409 -1627 -3055 0
-1409 -1625 -3057 0
-1409 -1623 -3059 0
-1409 -1621 -3061 0
-1409 -1619 -3063 0
-1409 -1617 -3065 0
-1409 -1615 -3067 0
-1409 -1613 -3069 0
-1409 -1611 -3071 0
-1409 -1609 -3073 0
-1409 -1607 -3075 0
-1409 -1605 -3077 0
-1409 -1603 -3079 0
-1409 -1601 -3081 0
-1409 -1599 -3083 0
-1409 -1597 -3085 0
-1409 -1595 -3087 0
-1409 -1593 -3089 0
-1409 -1591 -3091 0
-1409 -1589 -3093 0
-1409 -1587 -3095 0
-1409 -1585 -3097 0
-1409 -1583 -3099 0
-1409 -1581 -3101 0
-1409 -1579 -3103 0
-1409 -1577 -3105 0
-1409 -1575 -3107 0
-1409 -1573 -3109 0
-1409 -1572 -3111 0
-1407 -2985 0
-1407 -1697 -2987 0
-1407 -1695 -2989 0
-1407 -1693 -2991 0
-1407 -1691 -2993 0
-1407 -1689 -2995 0
-1407 -1687 -2997 0
-1407 -1685 -2999 0
-1407 -1683 -3001 0
-1407 -1681 -3003 0
-1407 -1679 -3005 0
-1407 -1677 -3007 0
-1407 -1675 -3009 0
-1407 -1673 -3011 0
-1407 -1671 -3013 0
-1407 -1669 -3015 0
-1407 -1667 -3017 0
-1407 -1665 -3019 0
-1407 -1663 -3021 0
-1407 -1661 -3023 0
-1407 -1659 -3025 0
-1407 -1657 -3027 0
-1407 -1655 -3029 0
-1407 -1653 -3031 0
-1407 -1651 -3033 0
-1407 -1649 -3035 0
-1407 -1647 -3037 0
-1407 -1645 -3039 0
-1407 -1643 -3041 0
-1407 -1641 -3043 0
-1407 -1639 -3045 0
-1407 -1637 -3047 0
-1407 -1635 -3049 0
-1407 -1633 -3051 0
-1407 -1631 -3053 0
-1407 -1629 -3055 0
-1407 -1627 -3057 0
-1407 -1625 -3059 0
-1407 -1623 -3061 0
-1407 -1621 -3063 0
-1407 -1619 -3065 0
-1407 -1617 -3067 0
-1407 -1615 -3069 0
-1407 -1613 -3071 0
-1407 -1611 -3073 0
-1407 -1609 -3075 0
-1407 -1607 -3077 0
-1407 -1605 -3079 0
-1407 -1603 -3081 0
-1407 -1601 -3083 0
-1407 -1599 -3085 0
-1407 -1597 -3087 0
-1407 -1595 -3089 0
-1407 -1593 -3091 0
-1407 -1591 -3093 0
-1407 -1589 -3095 0
-1407 -1587 -3097 0
-1407 -1585 -3099 0
-1407 -1583 -3101 0
-1407 -1581 -3103 0
-1407 -1579 -3105 0
-1407 -1577 -3107 0
-1407 -1575 -3109 0
-1407 -1573 -3111 0
-1407 -1572 -3113 0
-1405 -2987 0
-1405 -1697 -2989 0
-1405 -1695 -2991 0
-1405 -1693 -2993 0
-1405 -1691 -2995 0
-1405 -1689 -2997 0
-1405 -1687 -2999 0
-1405 -1685 -3001 0
-1405 -1683 -3003 0
-1405 -1681 -3005 0
-1405 -1679 -3007 0
-1405 -1677 -3009 0
-1405 -1675 -3011 0
-1405 -1673 -3013 0
-1405 -1671 -3015 0
-1405 -1669 -3017 0
-1405 -1667 -3019 0
-1405 -1665 -3021 0
-1405 -1663 -3023 0
-1405 -1661 -3025 0
-1405 -1659 -3027 0
-1405 -1657 -3029 0
-1405 -1655 -3031 0
-1405 -1653 -3033 0
-1405 -1651 -3035 0
-1405 -1649 -3037 0
-1405 -1647 -3039 0
-1405 -1645 -3041 0
-1405 -1643 -3043 0
-1405 -1641 -3045 0
-1405 -1639 -3047 0
-1405 -1637 -3049 0
-1405 -1635 -3051 0
-1405 -1633 -3053 0
-1405 -1631 -3055 0
-1405 -1629 -3057 0
-1405 -1627 -3059 0
-1405 -1625 -3061 0
-1405 -1623 -3063 0
-1405 -1621 -3065 0
-1405 -1619 -3067 0
-1405 -1617 -3069 0
-1405 -1615 -3071 0
-1405 -1613 -3073 0
-1405 -1611 -3075 0
-1405 -1609 -3077 0
-1405 -1607 -3079 0
-1405 -1605 -3081 0
-1405 -1603 -3083 0
-1405 -1601 -3085 0
-1405 -1599 -3087 0
-1405 -1597 -3089 0
-1405 -1595 -3091 0
-1405 -1593 -3093 0
-1405 -1591 -3095 0
-1405 -1589 -3097 0
-1405 -1587 -3099 0
-1405 -1585 -3101 0
-1405 -1583 -3103 0
-1405 -1581 -3105 0
-1405 -1579 -3107 0
-1405 -1577 -3109 0
-1405 -1575 -3111 0
-1405 -1573 -3113 0
-1405 -1572 -3115 0
-1403 -2989 0
-1403 -1697 -2991 0
-1403 -1695 -2993 0
-1403 -1693 -2995 0
-1403 -1691 -2997 0
-1403 -1689 -2999 0
-1403 -1687 -3001 0
-1403 -1685 -3003 0
-1403 -1683 -3005 0
-1403 -1681 -3007 0
-1403 -1679 -3009 0
-1403 -1677 -3011 0
-1403 -1675 -3013 0
-1403 -1673 -3015 0
-1403 -1671 -3017 0
-1403 -1669 -3019 0
-1403 -1667 -3021 0
-1403 -1665 -3023 0
-1403 -1663 -3025 0
-1403 -1661 -3027 0
-1403 -1659 -3029 0
-1403 -1657 -3031 0
-1403 -1655 -3033 0
-1403 -1653 -3035 0
-1403 -1651 -3037 0
-1403 -1649 -3039 0
-1403 -1647 -3041 0
-1403 -1645 -3043 0
-1403 -1643 -3045 0
-1403 -1641 -3047 0
-1403 -1639 -3049 0
-1403 -1637 -3051 0
-1403 -1635 -3053 0
-1403 -1633 -3055 0
-1403 -1631 -3057 0
-1403 -1629 -3059 0
-1403 -1627 -3061 0
-1403 -1625 -3063 0
-1403 -1623 -3065 0
-1403 -1621 -3067 0
-1403 -1619 -3069 0
-1403 -1617 -3071 0
-1403 -1615 -3073 0
-1403 -1613 -3075 0
-1403 -1611 -3077 0
-1403 -1609 -3079 0
-1403 -1607 -3081 0
-1403 -1605 -3083 0
-1403 -1603 -3085 0
-1403 -1601 -3087 0
-1403 -1599 -3089 0
-1403 -1597 -3091 0
-1403 -1595 -3093 0
-1403 -1593 -3095 0
-1403 -1591 -3097 0
-1403 -1589 -3099 0
-1403 -1587 -3101 0
-1403 -1585 -3103 0
-1403 -1583 -3105 0
-1403 -1581 -3107 0
-1403 -1579 -3109 0
-1403 -1577 -3111 0
-1403 -1575 -3113 0
-1403 -1573 -3115 0
-1403 -1572 -3117 0
-1401 -2991 0
-1401 -1697 -2993 0
-1401 -1695 -2995 0
-1401 -1693 -2997 0
-1401 -1691 -2999 0
-1401 -1689 -3001 0
-1401 -1687 -3003 0
-1401 -1685 -3005 0
-1401 -1683 -3007 0
-1401 -1681 -3009 0
-1401 -1679 -3011 0
-1401 -1677 -3013 0
-1401 -1675 -3015 0
-1401 -1673 -3017 0
-1401 -1671 -3019 0
-1401 -1669 -3021 0
-1401 -1667 -3023 0
-1401 -1665 -3025 0
-1401 -1663 -3027 0
-1401 -1661 -3029 0
-1401 -1659 -3031 0
-1401 -1657 -3033 0
-1401 -1655 -3035 0
-1401 -1653 -3037 0
-1401 -1651 -3039 0
-1401 -1649 -3041 0
-1401 -1647 -3043 0
-1401 -1645 -3045 0
-1401 -1643 -3047 0
-1401 -1641 -3049 0
-1401 -1639 -3051 0
-1401 -1637 -3053 0
-1401 -1635 -3055 0
-1401 -1633 -3057 0
-1401 -1631 -3059 0
-1401 -1629 -3061 0
-1401 -1627 -3063 0
-1401 -1625 -3065 0
-1401 -1623 -3067 0
-1401 -1621 -3069 0
-1401 -1619 -3071 0
-1401 -1617 -3073 0
-1401 -1615 -3075 0
-1401 -1613 -3077 0
-1401 -1611 -3079 0
-1401 -1609 -3081 0
-1401 -1607 -3083 0
-1401 -1605 -3085 0
-1401 -1603 -3087 0
-1401 -1601 -3089 0
-1401 -1599 -3091 0
-1401 -1597 -3093 0
-1401 -1595 -3095 0
-1401 -1593 -3097 0
-1401 -1591 -3099 0
-1401 -1589 -3101 0
-1401 -1587 -3103 0
-1401 -1585 -3105 0
-1401 -1583 -3107 0
-1401 -1581 -3109 0
-1401 -1579 -3111 0
-1401 -1577 -3113 0
-1401 -1575 -3115 0
-1401 -1573 -3117 0
-1401 -1572 -3119 0
-1399 -2993 0
-1399 -1697 -2995 0
-1399 -1695 -2997 0
-1399 -1693 -2999 0
-1399 -1691 -3001 0
-1399 -1689 -3003 0
-1399 -1687 -3005 0
-1399 -1685 -3007 0
-1399 -1683 -3009 0
-1399 -1681 -3011 0
-1399 -1679 -3013 0
-1399 -1677 -3015 0
-1399 -1675 -3017 0
-1399 -1673 -3019 0
-1399 -1671 -3021 0
-1399 -1669 -3023 0
-1399 -1667 -3025 0
-1399 -1665 -3027 0
-1399 -1663 -3029 0
-1399 -1661 -3031 0
-1399 -1659 -3033 0
-1399 -1657 -3035 0
-1399 -1655 -3037 0
-1399 -1653 -3039 0
-1399 -1651 -3041 0
-1399 -1649 -3043 0
-1399 -1647 -3045 0
-1399 -1645 -3047 0
-1399 -1643 -3049 0
-1399 -1641 -3051 0
-1399 -1639 -3053 0
-1399 -1637 -3055 0
-1399 -1635 -3057 0
-1399 -1633 -3059 0
-1399 -1631 -3061 0
-1399 -1629 -3063 0
-1399 -1627 -3065 0
-1399 -1625 -3067 0
-1399 -1623 -3069 0
-1399 -1621 -3071 0
-1399 -1619 -3073 0
-1399 -1617 -3075 0
-1399 -1615 -3077 0
-1399 -1613 -3079 0
-1399 -1611 -3081 0
-1399 -1609 -3083 0
-1399 -1607 -3085 0
-1399 -1605 -3087 0
-1399 -1603 -3089 0
-1399 -1601 -3091 0
-1399 -1599 -3093 0
-1399 -1597 -3095 0
-1399 -1595 -3097 0
-1399 -1593 -3099 0
-1399 -1591 -3101 0
-1399 -1589 -3103 0
-1399 -1587 -3105 0
-1399 -1585 -3107 0
-1399 -1583 -3109 0
-1399 -1581 -3111 0
-1399 -1579 -3113 0
-1399 -1577 -3115 0
-1399 -1575 -3117 0
-1399 -1573 -3119 0
-1399 -1572 -3121 0
-1397 -2995 0
-1397 -1697 -2997 0
-1397 -1695 -2999 0
-1397 -1693 -3001 0
-1397 -1691 -3003 0
-1397 -1689 -3005 0
-1397 -1687 -3007 0
-1397 -1685 -3009 0
-1397 -1683 -3011 0
-1397 -1681 -3013 0
-1397 -1679 -3015 0
-1397 -1677 -3017 0
-1397 -1675 -3019 0
-1397 -1673 -3021 0
-1397 -1671 -3023 0
-1397 -1669 -3025 0
-1397 -1667 -3027 0
-1397 -1665 -3029 0
-1397 -1663 -3031 0
-1397 -1661 -3033 0
-1397 -1659 -3035 0
-1397 -1657 -3037 0
-1397 -1655 -3039 0
-1397 -1653 -3041 0
-1397 -1651 -3043 0
-1397 -1649 -3045 0
-1397 -1647 -3047 0
-1397 -1645 -3049 0
-1397 -1643 -3051 0
-1397 -1641 -3053 0
-1397 -1639 -3055 0
-1397 -1637 -3057 0
-1397 -1635 -3059 0
-1397 -1633 -3061 0
-1397 -1631 -3063 0
-1397 -1629 -3065 0
-1397 -1627 -3067 0
-1397 -1625 -3069 0
-1397 -1623 -3071 0
-1397 -1621 -3073 0
-1397 -1619 -3075 0
-1397 -1617 -3077 0
-1397 -1615 -3079 0
-1397 -1613 -3081 0
-1397 -1611 -3083 0
-1397 -1609 -3085 0
-1397 -1607 -3087 0
-1397 -1605 -3089 0
-1397 -1603 -3091 0
-1397 -1601 -3093 0
-1397 -1599 -3095 0
-1397 -1597 -3097 0
-1397 -1595 -3099 0
-1397 -1593 -3101 0
-1397 -1591 -3103 0
-1397 -1589 -3105 0
-1397 -1587 -3107 0
-1397 -1585 -3109 0
-1397 -1583 -3111 0
-1397 -1581 -3113 0
-1397 -1579 -3115 0
-1397 -1577 -3117 0
-1397 -1575 -3119 0
-1397 -1573 -3121 0
-1397 -1572 -3123 0
-1395 -2997 0
-1395 -1697 -2999 0
-1395 -1695 -3001 0
-1395 -1693 -3003 0
-1395 -1691 -3005 0
-1395 -1689 -3007 0
-1395 -1687 -3009 0
-1395 -1685 -3011 0
-1395 -1683 -3013 0
-1395 -1681 -3015 0
-1395 -1679 -3017 0
-1395 -1677 -3019 0
-1395 -1675 -3021 0
-1395 -1673 -3023 0
-1395 -1671 -3025 0
-1395 -1669 -3027 0
-1395 -1667 -3029 0
-1395 -1665 -3031 0
-1395 -1663 -3033 0
-1395 -1661 -3035 0
-1395 -1659 -3037 0
-1395 -1657 -3039 0
-1395 -1655 -3041 0
-1395 -1653 -3043 0
-1395 -1651 -3045 0
-1395 -1649 -3047 0
-1395 -1647 -3049 0
-1395 -1645 -3051 0
-1395 -1643 -3053 0
-1395 -1641 -3055 0
-1395 -1639 -3057 0
-1395 -1637 -3059 0
-1395 -1635 -3061 0
-1395 -1633 -3063 0
-1395 -1631 -3065 0
-1395 -1629 -3067 0
-1395 -1627 -3069 0
-1395 -1625 -3071 0
-1395 -1623 -3073 0
-1395 -1621 -3075 0
-1395 -1619 -3077 0
-1395 -1617 -3079 0
-1395 -1615 -3081 0
-1395 -1613 -3083 0
-1395 -1611 -3085 0
-1395 -1609 -3087 0
-1395 -1607 -3089 0
-1395 -1605 -3091 0
-1395 -1603 -3093 0
-1395 -1601 -3095 0
-1395 -1599 -3097 0
-1395 -1597 -3099 0
-1395 -1595 -3101 0
-1395 -1593 -3103 0
-1395 -1591 -3105 0
-1395 -1589 -3107 0
-1395 -1587 -3109 0
-1395 -1585 -3111 0
-1395 -1583 -3113 0
-1395 -1581 -3115 0
-1395 -1579 -3117 0
-1395 -1577 -3119 0
-1395 -1575 -3121 0
-1395 -1573 -3123 0
-1395 -1572 -3125 0
-1393 -2999 0
-1393 -1697 -3001 0
-1393 -1695 -3003 0
-1393 -1693 -3005 0
-1393 -1691 -3007 0
-1393 -1689 -3009 0
-1393 -1687 -3011 0
-1393 -1685 -3013 0
-1393 -1683 -3015 0
-1393 -1681 -3017 0
-1393 -1679 -3019 0
-1393 -1677 -3021 0
-1393 -1675 -3023 0
-1393 -1673 -3025 0
-1393 -1671 -3027 0
-1393 -1669 -3029 0
-1393 -1667 -3031 0
-1393 -1665 -3033 0
-1393 -1663 -3035 0
-1393 -1661 -3037 0
-1393 -1659 -3039 0
-1393 -1657 -3041 0
-1393 -1655 -3043 0
-1393 -1653 -3045 0
-1393 -1651 -3047 0
-1393 -1649 -3049 0
-1393 -1647 -3051 0
-1393 -1645 -3053 0
-1393 -1643 -3055 0
-1393 -1641 -3057 0
-1393 -1639 -3059 0
-1393 -1637 -3061 0
-1393 -1635 -3063 0
-1393 -1633 -3065 0
-1393 -1631 -3067 0
-1393 -1629 -3069 0
-1393 -1627 -3071 0
-1393 -1625 -3073 0
-1393 -1623 -3075 0
-1393 -1621 -3077 0
-1393 -1619 -3079 0
-1393 -1617 -3081 0
-1393 -1615 -3083 0
-1393 -1613 -3085 0
-1393 -1611 -3087 0
-1393 -1609 -3089 0
-1393 -1607 -3091 0
-1393 -1605 -3093 0
-1393 -1603 -3095 0
-1393 -1601 -3097 0
-1393 -1599 -3099 0
-1393 -1597 -3101 0
-1393 -1595 -3103 0
-1393 -1593 -3105 0
-1393 -1591 -3107 0
-1393 -1589 -3109 0
-1393 -1587 -3111 0
-1393 -1585 -3113 0
-1393 -1583 -3115 0
-1393 -1581 -3117 0
-1393 -1579 -3119 0
-1393 -1577 -3121 0
-1393 -1575 -3123 0
-1393 -1573 -3125 0
-1393 -1572 -3127 0
-1391 -3001 0
-1391 -1697 -3003 0
-1391 -1695 -3005 0
-1391 -1693 -3007 0
-1391 -1691 -3009 0
-1391 -1689 -3011 0
-1391 -1687 -3013 0
-1391 -1685 -3015 0
-1391 -1683 -3017 0
-1391 -1681 -3019 0
-1391 -1679 -3021 0
-1391 -1677 -3023 0
-1391 -1675 -3025 0
-1391 -1673 -3027 0
-1391 -1671 -3029 0
-1391 -1669 -3031 0
-1391 -1667 -3033 0
-1391 -1665 -3035 0
-1391 -1663 -3037 0
-1391 -1661 -3039 0
-1391 -1659 -3041 0
-1391 -1657 -3043 0
-1391 -1655 -3045 0
-1391 -1653 -3047 0
-1391 -1651 -3049 0
-1391 -1649 -3051 0
-1391 -1647 -3053 0
-1391 -1645 -3055 0
-1391 -1643 -3057 0
-1391 -1641 -3059 0
-1391 -1639 -3061 0
-1391 -1637 -3063 0
-1391 -1635 -3065 0
-1391 -1633 -3067 0
-1391 -1631 -3069 0
-1391 -1629 -3071 0
-1391 -1627 -3073 0
-1391 -1625 -3075 0
-1391 -1623 -3077 0
-1391 -1621 -3079 0
-1391 -1619 -3081 0
-1391 -1617 -3083 0
-1391 -1615 -3085 0
-1391 -1613 -3087 0
-1391 -1611 -3089 0
-1391 -1609 -3091 0
-1391 -1607 -3093 0
-1391 -1605 -3095 0
-1391 -1603 -3097 0
-1391 -1601 -3099 0
-1391 -1599 -3101 0
-1391 -1597 -3103 0
-1391 -1595 -3105 0
-1391 -1593 -3107 0
-1391 -1591 -3109 0
-1391 -1589 -3111 0
-1391 -1587 -3113 0
-1391 -1585 -3115 0
-1391 -1583 -3117 0
-1391 -1581 -3119 0
-1391 -1579 -3121 0
-1391 -1577 -3123 0
-1391 -1575 -3125 0
-1391 -1573 -3127 0
-1391 -1572 -3129 0
-1389 -3003 0
-1389 -1697 -3005 0
-1389 -1695 -3007 0
-1389 -1693 -3009 0
-1389 -1691 -3011 0
-1389 -1689 -3013 0
-1389 -1687 -3015 0
-1389 -1685 -3017 0
-1389 -1683 -3019 0
-1389 -1681 -3021 0
-1389 -1679 -3023 0
-1389 -1677 -3025 0
-1389 -1675 -3027 0
-1389 -1673 -3029 0
-1389 -1671 -3031 0
-1389 -1669 -3033 0
-1389 -1667 -3035 0
-1389 -1665 -3037 0
-1389 -1663 -3039 0
-1389 -1661 -3041 0
-1389 -1659 -3043 0
-1389 -1657 -3045 0
-1389 -1655 -3047 0
-1389 -1653 -3049 0
-1389 -1651 -3051 0
-1389 -1649 -3053 0
-1389 -1647 -3055 0
-1389 -1645 -3057 0
-1389 -1643 -3059 0
-1389 -1641 -3061 0
-1389 -1639 -3063 0
-1389 -1637 -3065 0
-1389 -1635 -3067 0
-1389 -1633 -3069 0
-1389 -1631 -3071 0
-1389 -1629 -3073 0
-1389 -1627 -3075 0
-1389 -1625 -3077 0
-1389 -1623 -3079 0
-1389 -1621 -3081 0
-1389 -1619 -3083 0
-1389 -1617 -3085 0
-1389 -1615 -3087 0
-1389 -1613 -3089 0
-1389 -1611 -3091 0
-1389 -1609 -3093 0
-1389 -1607 -3095 0
-1389 -1605 -3097 0
-1389 -1603 -3099 0
-1389 -1601 -3101 0
-1389 -1599 -3103 0
-1389 -1597 -3105 0
-1389 -1595 -3107 0
-1389 -1593 -3109 0
-1389 -1591 -3111 0
-1389 -1589 -3113 0
-1389 -1587 -3115 0
-1389 -1585 -3117 0
-1389 -1583 -3119 0
-1389 -1581 -3121 0
-1389 -1579 -3123 0
-1389 -1577 -3125 0
-1389 -1575 -3127 0
-1389 -1573 -3129 0
-1389 -1572 -3131 0
-1387 -3005 0
-1387 -1697 -3007 0
-1387 -1695 -3009 0
-1387 -1693 -3011 0
-1387 -1691 -3013 0
-1387 -1689 -3015 0
-1387 -1687 -3017 0
-1387 -1685 -3019 0
-1387 -1683 -3021 0
-1387 -1681 -3023 0
-1387 -1679 -3025 0
-1387 -1677 -3027 0
-1387 -1675 -3029 0
-1387 -1673 -3031 0
-1387 -1671 -3033 0
-1387 -1669 -3035 0
-1387 -1667 -3037 0
-1387 -1665 -3039 0
-1387 -1663 -3041 0
-1387 -1661 -3043 0
-1387 -1659 -3045 0
-1387 -1657 -3047 0
-1387 -1655 -3049 0
-1387 -1653 -3051 0
-1387 -1651 -3053 0
-1387 -1649 -3055 0
-1387 -1647 -3057 0
-1387 -1645 -3059 0
-1387 -1643 -3061 0
-1387 -1641 -3063 0
-1387 -1639 -3065 0
-1387 -1637 -3067 0
-1387 -1635 -3069 0
-1387 -1633 -3071 0
-1387 -1631 -3073 0
-1387 -1629 -3075 0
-1387 -1627 -3077 0
-1387 -1625 -3079 0
-1387 -1623 -3081 0
-1387 -1621 -3083 0
-1387 -1619 -3085 0
-1387 -1617 -3087 0
-1387 -1615 -3089 0
-1387 -1613 -3091 0
-1387 -1611 -3093 0
-1387 -1609 -3095 0
-1387 -1607 -3097 0
-1387 -1605 -3099 0
-1387 -1603 -3101 0
-1387 -1601 -3103 0
-1387 -1599 -3105 0
-1387 -1597 -3107 0
-1387 -1595 -3109 0
-1387 -1593 -3111 0
-1387 -1591 -3113 0
-1387 -1589 -3115 0
-1387 -1587 -3117 0
-1387 -1585 -3119 0
-1387 -1583 -3121 0
-1387 -1581 -3123 0
-1387 -1579 -3125 0
-1387 -1577 -3127 0
-1387 -1575 -3129 0
-1387 -1573 -3131 0
-1387 -1572 -3133 0
-1385 -3007 0
-1385 -1697 -3009 0
-1385 -1695 -3011 0
-1385 -1693 -3013 0
-1385 -1691 -3015 0
-1385 -1689 -3017 0
-1385 -1687 -3019 0
-1385 -1685 -3021 0
-1385 -1683 -3023 0
-1385 -1681 -3025 0
-1385 -1679 -3027 0
-1385 -1677 -3029 0
-1385 -1675 -3031 0
-1385 -1673 -3033 0
-1385 -1671 -3035 0
-1385 -1669 -3037 0
-1385 -1667 -3039 0
-1385 -1665 -3041 0
-1385 -1663 -3043 0
-1385 -1661 -3045 0
-1385 -1659 -3047 0
-1385 -1657 -3049 0
-1385 -1655 -3051 0
-1385 -1653 -3053 0
-1385 -1651 -3055 0
-1385 -1649 -3057 0
-1385 -1647 -3059 0
-1385 -1645 -3061 0
-1385 -1643 -3063 0
-1385 -1641 -3065 0
-1385 -1639 -3067 0
-1385 -1637 -3069 0
-1385 -1635 -3071 0
-1385 -1633 -3073 0
-1385 -1631 -3075 0
-1385 -1629 -3077 0
-1385 -1627 -3079 0
-1385 -1625 -3081 0
-1385 -1623 -3083 0
-1385 -1621 -3085 0
-1385 -1619 -3087 0
-1385 -1617 -3089 0
-1385 -1615 -3091 0
-1385 -1613 -3093 0
-1385 -1611 -3095 0
-1385 -1609 -3097 0
-1385 -1607 -3099 0
-1385 -1605 -3101 0
-1385 -1603 -3103 0
-1385 -1601 -3105 0
-1385 -1599 -3107 0
-1385 -1597 -3109 0
-1385 -1595 -3111 0
-1385 -1593 -3113 0
-1385 -1591 -3115 0
-1385 -1589 -3117 0
-1385 -1587 -3119 0
-1385 -1585 -3121 0
-1385 -1583 -3123 0
-1385 -1581 -3125 0
-1385 -1579 -3127 0
-1385 -1577 -3129 0
-1385 -1575 -3131 0
-1385 -1573 -3133 0
-1385 -1572 -3135 0
-1383 -3009 0
-1383 -1697 -3011 0
-1383 -1695 -3013 0
-1383 -1693 -3015 0
-1383 -1691 -3017 0
-1383 -1689 -3019 0
-1383 -1687 -3021 0
-1383 -1685 -3023 0
-1383 -1683 -3025 0
-1383 -1681 -3027 0
-1383 -1679 -3029 0
-1383 -1677 -3031 0
-1383 -1675 -3033 0
-1383 -1673 -3035 0
-1383 -1671 -3037 0
-1383 -1669 -3039 0
-1383 -1667 -3041 0
-1383 -1665 -3043 0
-1383 -1663 -3045 0
-1383 -1661 -3047 0
-1383 -1659 -3049 0
-1383 -1657 -3051 0
-1383 -1655 -3053 0
-1383 -1653 -3055 0
-1383 -1651 -3057 0
-1383 -1649 -3059 0
-1383 -1647 -3061 0
-1383 -1645 -3063 0
-1383 -1643 -3065 0
-1383 -1641 -3067 0
-1383 -1639 -3069 0
-1383 -1637 -3071 0
-1383 -1635 -3073 0
-1383 -1633 -3075 0
-1383 -1631 -3077 0
-1383 -1629 -3079 0
-1383 -1627 -3081 0
-1383 -1625 -3083 0
-1383 -1623 -3085 0
-1383 -1621 -3087 0
-1383 -1619 -3089 0
-1383 -1617 -3091 0
-1383 -1615 -3093 0
-1383 -1613 -3095 0
-1383 -1611 -3097 0
-1383 -1609 -3099 0
-1383 -1607 -3101 0
-1383 -1605 -3103 0
-1383 -1603 -3105 0
-1383 -1601 -3107 0
-1383 -1599 -3109 0
-1383 -1597 -3111 0
-1383 -1595 -3113 0
-1383 -1593 -3115 0
-1383 -1591 -3117 0
-1383 -1589 -3119 0
-1383 -1587 -3121 0
-1383 -1585 -3123 0
-1383 -1583 -3125 0
-1383 -1581 -3127 0
-1383 -1579 -3129 0
-1383 -1577 -3131 0
-1383 -1575 -3133 0
-1383 -1573 -3135 0
-1383 -1572 -3137 0
-1381 -3011 0
-1381 -1697 -3013 0
-1381 -1695 -3015 0
-1381 -1693 -3017 0
-1381 -1691 -3019 0
-1381 -1689 -3021 0
-1381 -1687 -3023 0
-1381 -1685 -3025 0
-1381 -1683 -3027 0
-1381 -1681 -3029 0
-1381 -1679 -3031 0
-1381 -1677 -3033 0
-1381 -1675 -3035 0
-1381 -1673 -3037 0
-1381 -1671 -3039 0
-1381 -1669 -3041 0
-1381 -1667 -3043 0
-1381 -1665 -3045 0
-1381 -1663 -3047 0
-1381 -1661 -3049 0
-1381 -1659 -3051 0
-1381 -1657 -3053 0
-1381 -1655 -3055 0
-1381 -1653 -3057 0
-1381 -1651 -3059 0
-1381 -1649 -3061 0
-1381 -1647 -3063 0
-1381 -1645 -3065 0
-1381 -1643 -3067 0
-1381 -1641 -3069 0
-1381 -1639 -3071 0
-1381 -1637 -3073 0
-1381 -1635 -3075 0
-1381 -1633 -3077 0
-1381 -1631 -3079 0
-1381 -1629 -3081 0
-1381 -1627 -3083 0
-1381 -1625 -3085 0
-1381 -1623 -3087 0
-1381 -1621 -3089 0
-1381 -1619 -3091 0
-1381 -1617 -3093 0
-1381 -1615 -3095 0
-1381 -1613 -3097 0
-1381 -1611 -3099 0
-1381 -1609 -3101 0
-1381 -1607 -3103 0
-1381 -1605 -3105 0
-1381 -1603 -3107 0
-1381 -1601 -3109 0
-1381 -1599 -3111 0
-1381 -1597 -3113 0
-1381 -1595 -3115 0
-1381 -1593 -3117 0
-1381 -1591 -3119 0
-1381 -1589 -3121 0
-1381 -1587 -3123 0
-1381 -1585 -3125 0
-1381 -1583 -3127 0
-1381 -1581 -3129 0
-1381 -1579 -3131 0
-1381 -1577 -3133 0
-1381 -1575 -3135 0
-1381 -1573 -3137 0
-1381 -1572 -3139 0
-1379 -3013 0
-1379 -1697 -3015 0
-1379 -1695 -3017 0
-1379 -1693 -3019 0
-1379 -1691 -3021 0
-1379 -1689 -3023 0
-1379 -1687 -3025 0
-1379 -1685 -3027 0
-1379 -1683 -3029 0
-1379 -1681 -3031 0
-1379 -1679 -3033 0
-1379 -1677 -3035 0
-1379 -1675 -3037 0
-1379 -1673 -3039 0
-1379 -1671 -3041 0
-1379 -1669 -3043 0
-1379 -1667 -3045 0
-1379 -1665 -3047 0
-1379 -1663 -3049 0
-1379 -1661 -3051 0
-1379 -1659 -3053 0
-1379 -1657 -3055 0
-1379 -1655 -3057 0
-1379 -1653 -3059 0
-1379 -1651 -3061 0
-1379 -1649 -3063 0
-1379 -1647 -3065 0
-1379 -1645 -3067 0
-1379 -1643 -3069 0
-1379 -1641 -3071 0
-1379 -1639 -3073 0
-1379 -1637 -3075 0
-1379 -1635 -3077 0
-1379 -1633 -3079 0
-1379 -1631 -3081 0
-1379 -1629 -3083 0
-1379 -1627 -3085 0
-1379 -1625 -3087 0
-1379 -1623 -3089 0
-1379 -1621 -3091 0
-1379 -1619 -3093 0
-1379 -1617 -3095 0
-1379 -1615 -3097 0
-1379 -1613 -3099 0
-1379 -1611 -3101 0
-1379 -1609 -3103 0
-1379 -1607 -3105 0
-1379 -1605 -3107 0
-1379 -1603 -3109 0
-1379 -1601 -3111 0
-1379 -1599 -3113 0
-1379 -1597 -3115 0
-1379 -1595 -3117 0
-1379 -1593 -3119 0
-1379 -1591 -3121 0
-1379 -1589 -3123 0
-1379 -1587 -3125 0
-1379 -1585 -3127 0
-1379 -1583 -3129 0
-1379 -1581 -3131 0
-1379 -1579 -3133 0
-1379 -1577 -3135 0
-1379 -1575 -3137 0
-1379 -1573 -3139 0
-1379 -1572 -3141 0
-1377 -3015 0
-1377 -1697 -3017 0
-1377 -1695 -3019 0
-1377 -1693 -3021 0
-1377 -1691 -3023 0
-1377 -1689 -3025 0
-1377 -1687 -3027 0
-1377 -1685 -3029 0
-1377 -1683 -3031 0
-1377 -1681 -3033 0
-1377 -1679 -3035 0
-1377 -1677 -3037 0
-1377 -1675 -3039 0
-1377 -1673 -3041 0
-1377 -1671 -3043 0
-1377 -1669 -3045 0
-1377 -1667 -3047 0
-1377 -1665 -3049 0
-1377 -1663 -3051 0
-1377 -1661 -3053 0
-1377 -1659 -3055 0
-1377 -1657 -3057 0
-1377 -1655 -3059 0
-1377 -1653 -3061 0
-1377 -1651 -3063 0
-1377 -1649 -3065 0
-1377 -1647 -3067 0
-1377 -1645 -3069 0
-1377 -1643 -3071 0
-1377 -1641 -3073 0
-1377 -1639 -3075 0
-1377 -1637 -3077 0
-1377 -1635 -3079 0
-1377 -1633 -3081 0
-1377 -1631 -3083 0
-1377 -1629 -3085 0
-1377 -1627 -3087 0
-1377 -1625 -3089 0
-1377 -1623 -3091 0
-1377 -1621 -3093 0
-1377 -1619 -3095 0
-1377 -1617 -3097 0
-1377 -1615 -3099 0
-1377 -1613 -3101 0
-1377 -1611 -3103 0
-1377 -1609 -3105 0
-1377 -1607 -3107 0
-1377 -1605 -3109 0
-1377 -1603 -3111 0
-1377 -1601 -3113 0
-1377 -1599 -3115 0
-1377 -1597 -3117 0
-1377 -1595 -3119 0
-1377 -1593 -3121 0
-1377 -1591 -3123 0
-1377 -1589 -3125 0
-1377 -1587 -3127 0
-1377 -1585 -3129 0
-1377 -1583 -3131 0
-1377 -1581 -3133 0
-1377 -1579 -3135 0
-1377 -1577 -3137 0
-1377 -1575 -3139 0
-1377 -1573 -3141 0
-1377 -1572 -3143 0
-1375 -3017 0
-1375 -1697 -3019 0
-1375 -1695 -3021 0
-1375 -1693 -3023 0
-1375 -1691 -3025 0
-1375 -1689 -3027 0
-1375 -1687 -3029 0
-1375 -1685 -3031 0
-1375 -1683 -3033 0
-1375 -1681 -3035 0
-1375 -1679 -3037 0
-1375 -1677 -3039 0
-1375 -1675 -3041 0
-1375 -1673 -3043 0
-1375 -1671 -3045 0
-1375 -1669 -3047 0
-1375 -1667 -3049 0
-1375 -1665 -3051 0
-1375 -1663 -3053 0
-1375 -1661 -3055 0
-1375 -1659 -3057 0
-1375 -1657 -3059 0
-1375 -1655 -3061 0
-1375 -1653 -3063 0
-1375 -1651 -3065 0
-1375 -1649 -3067 0
-1375 -1647 -3069 0
-1375 -1645 -3071 0
-1375 -1643 -3073 0
-1375 -1641 -3075 0
-1375 -1639 -3077 0
-1375 -1637 -3079 0
-1375 -1635 -3081 0
-1375 -1633 -3083 0
-1375 -1631 -3085 0
-1375 -1629 -3087 0
-1375 -1627 -3089 0
-1375 -1625 -3091 0
-1375 -1623 -3093 0
-1375 -1621 -3095 0
-1375 -1619 -3097 0
-1375 -1617 -3099 0
-1375 -1615 -3101 0
-1375 -1613 -3103 0
-1375 -1611 -3105 0
-1375 -1609 -3107 0
-1375 -1607 -3109 0
-1375 -1605 -3111 0
-1375 -1603 -3113 0
-1375 -1601 -3115 0
-1375 -1599 -3117 0
-1375 -1597 -3119 0
-1375 -1595 -3121 0
-1375 -1593 -3123 0
-1375 -1591 -3125 0
-1375 -1589 -3127 0
-1375 -1587 -3129 0
-1375 -1585 -3131 0
-1375 -1583 -3133 0
-1375 -1581 -3135 0
-1375 -1579 -3137 0
-1375 -1577 -3139 0
-1375 -1575 -3141 0
-1375 -1573 -3143 0
-1375 -1572 -3145 0
-1373 -3019 0
-1373 -1697 -3021 0
-1373 -1695 -3023 0
-1373 -1693 -3025 0
-1373 -1691 -3027 0
-1373 -1689 -3029 0
-1373 -1687 -3031 0
-1373 -1685 -3033 0
-1373 -1683 -3035 0
-1373 -1681 -3037 0
-1373 -1679 -3039 0
-1373 -1677 -3041 0
-1373 -1675 -3043 0
-1373 -1673 -3045 0
-1373 -1671 -3047 0
-1373 -1669 -3049 0
-1373 -1667 -3051 0
-1373 -1665 -3053 0
-1373 -1663 -3055 0
-1373 -1661 -3057 0
-1373 -1659 -3059 0
-1373 -1657 -3061 0
-1373 -1655 -3063 0
-1373 -1653 -3065 0
-1373 -1651 -3067 0
-1373 -1649 -3069 0
-1373 -1647 -3071 0
-1373 -1645 -3073 0
-1373 -1643 -3075 0
-1373 -1641 -3077 0
-1373 -1639 -3079 0
-1373 -1637 -3081 0
-1373 -1635 -3083 0
-1373 -1633 -3085 0
-1373 -1631 -3087 0
-1373 -1629 -3089 0
-1373 -1627 -3091 0
-1373 -1625 -3093 0
-1373 -1623 -3095 0
-1373 -1621 -3097 0
-1373 -1619 -3099 0
-1373 -1617 -3101 0
-1373 -1615 -3103 0
-1373 -1613 -3105 0
-1373 -1611 -3107 0
-1373 -1609 -3109 0
-1373 -1607 -3111 0
-1373 -1605 -3113 0
-1373 -1603 -3115 0
-1373 -1601 -3117 0
-1373 -1599 -3119 0
-1373 -1597 -3121 0
-1373 -1595 -3123 0
-1373 -1593 -3125 0
-1373 -1591 -3127 0
-1373 -1589 -3129 0
-1373 -1587 -3131 0
-1373 -1585 -3133 0
-1373 -1583 -3135 0
-1373 -1581 -3137 0
-1373 -1579 -3139 0
-1373 -1577 -3141 0
-1373 -1575 -3143 0
-1373 -1573 -3145 0
-1373 -1572 -3147 0
-1371 -3021 0
-1371 -1697 -3023 0
-1371 -1695 -3025 0
-1371 -1693 -3027 0
-1371 -1691 -3029 0
-1371 -1689 -3031 0
-1371 -1687 -3033 0
-1371 -1685 -3035 0
-1371 -1683 -3037 0
-1371 -1681 -3039 0
-1371 -1679 -3041 0
-1371 -1677 -3043 0
-1371 -1675 -3045 0
-1371 -1673 -3047 0
-1371 -1671 -3049 0
-1371 -1669 -3051 0
-1371 -1667 -3053 0
-1371 -1665 -3055 0
-1371 -1663 -3057 0
-1371 -1661 -3059 0
-1371 -1659 -3061 0
-1371 -1657 -3063 0
-1371 -1655 -3065 0
-1371 -1653 -3067 0
-1371 -1651 -3069 0
-1371 -1649 -3071 0
-1371 -1647 -3073 0
-1371 -1645 -3075 0
-1371 -1643 -3077 0
-1371 -1641 -3079 0
-1371 -1639 -3081 0
-1371 -1637 -3083 0
-1371 -1635 -3085 0
-1371 -1633 -3087 0
-1371 -1631 -3089 0
-1371 -1629 -3091 0
-1371 -1627 -3093 0
-1371 -1625 -3095 0
-1371 -1623 -3097 0
-1371 -1621 -3099 0
-1371 -1619 -3101 0
-1371 -1617 -3103 0
-1371 -1615 -3105 0
-1371 -1613 -3107 0
-1371 -1611 -3109 0
-1371 -1609 -3111 0
-1371 -1607 -3113 0
-1371 -1605 -3115 0
-1371 -1603 -3117 0
-1371 -1601 -3119 0
-1371 -1599 -3121 0
-1371 -1597 -3123 0
-1371 -1595 -3125 0
-1371 -1593 -3127 0
-1371 -1591 -3129 0
-1371 -1589 -3131 0
-1371 -1587 -3133 0
-1371 -1585 -3135 0
-1371 -1583 -3137 0
-1371 -1581 -3139 0
-1371 -1579 -3141 0
-1371 -1577 -3143 0
-1371 -1575 -3145 0
-1371 -1573 -3147 0
-1371 -1572 -3149 0
-1369 -3023 0
-1369 -1697 -3025 0
-1369 -1695 -3027 0
-1369 -1693 -3029 0
-1369 -1691 -3031 0
-1369 -1689 -3033 0
-1369 -1687 -3035 0
-1369 -1685 -3037 0
-1369 -1683 -3039 0
-1369 -1681 -3041 0
-1369 -1679 -3043 0
-1369 -1677 -3045 0
-1369 -1675 -3047 0
-1369 -1673 -3049 0
-1369 -1671 -3051 0
-1369 -1669 -3053 0
-1369 -1667 -3055 0
-1369 -1665 -3057 0
-1369 -1663 -3059 0
-1369 -1661 -3061 0
-1369 -1659 -3063 0
-1369 -1657 -3065 0
-1369 -1655 -3067 0
-1369 -1653 -3069 0
-1369 -1651 -3071 0
-1369 -1649 -3073 0
-1369 -1647 -3075 0
-1369 -1645 -3077 0
-1369 -1643 -3079 0
-1369 -1641 -3081 0
-1369 -1639 -3083 0
-1369 -1637 -3085 0
-1369 -1635 -3087 0
-1369 -1633 -3089 0
-1369 -1631 -3091 0
-1369 -1629 -3093 0
-1369 -1627 -3095 0
-1369 -1625 -3097 0
-1369 -1623 -3099 0
-1369 -1621 -3101 0
-1369 -1619 -3103 0
-1369 -1617 -3105 0
-1369 -1615 -3107 0
-1369 -1613 -3109 0
-1369 -1611 -3111 0
-1369 -1609 -3113 0
-1369 -1607 -3115 0
-1369 -1605 -3117 0
-1369 -1603 -3119 0
-1369 -1601 -3121 0
-1369 -1599 -3123 0
-1369 -1597 -3125 0
-1369 -1595 -3127 0
-1369 -1593 -3129 0
-1369 -1591 -3131 0
-1369 -1589 -3133 0
-1369 -1587 -3135 0
-1369 -1585 -3137 0
-1369 -1583 -3139 0
-1369 -1581 -3141 0
-1369 -1579 -3143 0
-1369 -1577 -3145 0
-1369 -1575 -3147 0
-1369 -1573 -3149 0
-1369 -1572 -3151 0
-1367 -3025 0
-1367 -1697 -3027 0
-1367 -1695 -3029 0
-1367 -1693 -3031 0
-1367 -1691 -3033 0
-1367 -1689 -3035 0
-1367 -1687 -3037 0
-1367 -1685 -3039 0
-1367 -1683 -3041 0
-1367 -1681 -3043 0
-1367 -1679 -3045 0
-1367 -1677 -3047 0
-1367 -1675 -3049 0
-1367 -1673 -3051 0
-1367 -1671 -3053 0
-1367 -1669 -3055 0
-1367 -1667 -3057 0
-1367 -1665 -3059 0
-1367 -1663 -3061 0
-1367 -1661 -3063 0
-1367 -1659 -3065 0
-1367 -1657 -3067 0
-1367 -1655 -3069 0
-1367 -1653 -3071 0
-1367 -1651 -3073 0
-1367 -1649 -3075 0
-1367 -1647 -3077 0
-1367 -1645 -3079 0
-1367 -1643 -3081 0
-1367 -1641 -3083 0
-1367 -1639 -3085 0
-1367 -1637 -3087 0
-1367 -1635 -3089 0
-1367 -1633 -3091 0
-1367 -1631 -3093 0
-1367 -1629 -3095 0
-1367 -1627 -3097 0
-1367 -1625 -3099 0
-1367 -1623 -3101 0
-1367 -1621 -3103 0
-1367 -1619 -3105 0
-1367 -1617 -3107 0
-1367 -1615 -3109 0
-1367 -1613 -3111 0
-1367 -1611 -3113 0
-1367 -1609 -3115 0
-1367 -1607 -3117 0
-1367 -1605 -3119 0
-1367 -1603 -3121 0
-1367 -1601 -3123 0
-1367 -1599 -3125 0
-1367 -1597 -3127 0
-1367 -1595 -3129 0
-1367 -1593 -3131 0
-1367 -1591 -3133 0
-1367 -1589 -3135 0
-1367 -1587 -3137 0
-1367 -1585 -3139 0
-1367 -1583 -3141 0
-1367 -1581 -3143 0
-1367 -1579 -3145 0
-1367 -1577 -3147 0
-1367 -1575 -3149 0
-1367 -1573 -3151 0
-1367 -1572 -3153 0
-1365 -3027 0
-1365 -1697 -3029 0
-1365 -1695 -3031 0
-1365 -1693 -3033 0
-1365 -1691 -3035 0
-1365 -1689 -3037 0
-1365 -1687 -3039 0
-1365 -1685 -3041 0
-1365 -1683 -3043 0
-1365 -1681 -3045 0
-1365 -1679 -3047 0
-1365 -1677 -3049 0
-1365 -1675 -3051 0
-1365 -1673 -3053 0
-1365 -1671 -3055 0
-1365 -1669 -3057 0
-1365 -1667 -3059 0
-1365 -1665 -3061 0
-1365 -1663 -3063 0
-1365 -1661 -3065 0
-1365 -1659 -3067 0
-1365 -1657 -3069 0
-1365 -1655 -3071 0
-1365 -1653 -3073 0
-1365 -1651 -3075 0
-1365 -1649 -3077 0
-1365 -1647 -3079 0
-1365 -1645 -3081 0
-1365 -1643 -3083 0
-1365 -1641 -3085 0
-1365 -1639 -3087 0
-1365 -1637 -3089 0
-1365 -1635 -3091 0
-1365 -1633 -3093 0
-1365 -1631 -3095 0
-1365 -1629 -3097 0
-1365 -1627 -3099 0
-1365 -1625 -3101 0
-1365 -1623 -3103 0
-1365 -1621 -3105 0
-1365 -1619 -3107 0
-1365 -1617 -3109 0
-1365 -1615 -3111 0
-1365 -1613 -3113 0
-1365 -1611 -3115 0
-1365 -1609 -3117 0
-1365 -1607 -3119 0
-1365 -1605 -3121 0
-1365 -1603 -3123 0
-1365 -1601 -3125 0
-1365 -1599 -3127 0
-1365 -1597 -3129 0
-1365 -1595 -3131 0
-1365 -1593 -3133 0
-1365 -1591 -3135 0
-1365 -1589 -3137 0
-1365 -1587 -3139 0
-1365 -1585 -3141 0
-1365 -1583 -3143 0
-1365 -1581 -3145 0
-1365 -1579 -3147 0
-1365 -1577 -3149 0
-1365 -1575 -3151 0
-1365 -1573 -3153 0
-1365 -1572 -3155 0
-1363 -3029 0
-1363 -1697 -3031 0
-1363 -1695 -3033 0
-1363 -1693 -3035 0
-1363 -1691 -3037 0
-1363 -1689 -3039 0
-1363 -1687 -3041 0
-1363 -1685 -3043 0
-1363 -1683 -3045 0
-1363 -1681 -3047 0
-1363 -1679 -3049 0
-1363 -1677 -3051 0
-1363 -1675 -3053 0
-1363 -1673 -3055 0
-1363 -1671 -3057 0
-1363 -1669 -3059 0
-1363 -1667 -3061 0
-1363 -1665 -3063 0
-1363 -1663 -3065 0
-1363 -1661 -3067 0
-1363 -1659 -3069 0
-1363 -1657 -3071 0
-1363 -1655 -3073 0
-1363 -1653 -3075 0
-1363 -1651 -3077 0
-1363 -1649 -3079 0
-1363 -1647 -3081 0
-1363 -1645 -3083 0
-1363 -1643 -3085 0
-1363 -1641 -3087 0
-1363 -1639 -3089 0
-1363 -1637 -3091 0
-1363 -1635 -3093 0
-1363 -1633 -3095 0
-1363 -1631 -3097 0
-1363 -1629 -3099 0
-1363 -1627 -3101 0
-1363 -1625 -3103 0
-1363 -1623 -3105 0
-1363 -1621 -3107 0
-1363 -1619 -3109 0
-1363 -1617 -3111 0
-1363 -1615 -3113 0
-1363 -1613 -3115 0
-1363 -1611 -3117 0
-1363 -1609 -3119 0
-1363 -1607 -3121 0
-1363 -1605 -3123 0
-1363 -1603 -3125 0
-1363 -1601 -3127 0
-1363 -1599 -3129 0
-1363 -1597 -3131 0
-1363 -1595 -3133 0
-1363 -1593 -3135 0
-1363 -1591 -3137 0
-1363 -1589 -3139 0
-1363 -1587 -3141 0
-1363 -1585 -3143 0
-1363 -1583 -3145 0
-1363 -1581 -3147 0
-1363 -1579 -3149 0
-1363 -1577 -3151 0
-1363 -1575 -3153 0
-1363 -1573 -3155 0
-1363 -1572 -3157 0
-1361 -3031 0
-1361 -1697 -3033 0
-1361 -1695 -3035 0
-1361 -1693 -3037 0
-1361 -1691 -3039 0
-1361 -1689 -3041 0
-1361 -1687 -3043 0
-1361 -1685 -3045 0
-1361 -1683 -3047 0
-1361 -1681 -3049 0
-1361 -1679 -3051 0
-1361 -1677 -3053 0
-1361 -1675 -3055 0
-1361 -1673 -3057 0
-1361 -1671 -3059 0
-1361 -1669 -3061 0
-1361 -1667 -3063 0
-1361 -1665 -3065 0
-1361 -1663 -3067 0
-1361 -1661 -3069 0
-1361 -1659 -3071 0
-1361 -1657 -3073 0
-1361 -1655 -3075 0
-1361 -1653 -3077 0
-1361 -1651 -3079 0
-1361 -1649 -3081 0
-1361 -1647 -3083 0
-1361 -1645 -3085 0
-1361 -1643 -3087 0
-1361 -1641 -3089 0
-1361 -1639 -3091 0
-1361 -1637 -3093 0
-1361 -1635 -3095 0
-1361 -1633 -3097 0
-1361 -1631 -3099 0
-1361 -1629 -3101 0
-1361 -1627 -3103 0
-1361 -1625 -3105 0
-1361 -1623 -3107 0
-1361 -1621 -3109 0
-1361 -1619 -3111 0
-1361 -1617 -3113 0
-1361 -1615 -3115 0
-1361 -1613 -3117 0
-1361 -1611 -3119 0
-1361 -1609 -3121 0
-1361 -1607 -3123 0
-1361 -1605 -3125 0
-1361 -1603 -3127 0
-1361 -1601 -3129 0
-1361 -1599 -3131 0
-1361 -1597 -3133 0
-1361 -1595 -3135 0
-1361 -1593 -3137 0
-1361 -1591 -3139 0
-1361 -1589 -3141 0
-1361 -1587 -3143 0
-1361 -1585 -3145 0
-1361 -1583 -3147 0
-1361 -1581 -3149 0
-1361 -1579 -3151 0
-1361 -1577 -3153 0
-1361 -1575 -3155 0
-1361 -1573 -3157 0
-1361 -1572 -3159 0
-1359 -3033 0
-1359 -1697 -3035 0
-1359 -1695 -3037 0
-1359 -1693 -3039 0
-1359 -1691 -3041 0
-1359 -1689 -3043 0
-1359 -1687 -3045 0
-1359 -1685 -3047 0
-1359 -1683 -3049 0
-1359 -1681 -3051 0
-1359 -1679 -3053 0
-1359 -1677 -3055 0
-1359 -1675 -3057 0
-1359 -1673 -3059 0
-1359 -1671 -3061 0
-1359 -1669 -3063 0
-1359 -1667 -3065 0
-1359 -1665 -3067 0
-1359 -1663 -3069 0
-1359 -1661 -3071 0
-1359 -1659 -3073 0
-1359 -1657 -3075 0
-1359 -1655 -3077 0
-1359 -1653 -3079 0
-1359 -1651 -3081 0
-1359 -1649 -3083 0
-1359 -1647 -3085 0
-1359 -1645 -3087 0
-1359 -1643 -3089 0
-1359 -1641 -3091 0
-1359 -1639 -3093 0
-1359 -1637 -3095 0
-1359 -1635 -3097 0
-1359 -1633 -3099 0
-1359 -1631 -3101 0
-1359 -1629 -3103 0
-1359 -1627 -3105 0
-1359 -1625 -3107 0
-1359 -1623 -3109 0
-1359 -1621 -3111 0
-1359 -1619 -3113 0
-1359 -1617 -3115 0
-1359 -1615 -3117 0
-1359 -1613 -3119 0
-1359 -1611 -3121 0
-1359 -1609 -3123 0
-1359 -1607 -3125 0
-1359 -1605 -3127 0
-1359 -1603 -3129 0
-1359 -1601 -3131 0
-1359 -1599 -3133 0
-1359 -1597 -3135 0
-1359 -1595 -3137 0
-1359 -1593 -3139 0
-1359 -1591 -3141 0
-1359 -1589 -3143 0
-1359 -1587 -3145 0
-1359 -1585 -3147 0
-1359 -1583 -3149 0
-1359 -1581 -3151 0
-1359 -1579 -3153 0
-1359 -1577 -3155 0
-1359 -1575 -3157 0
-1359 -1573 -3159 0
-1359 -1572 -3161 0
-1357 -3035 0
-1357 -1697 -3037 0
-1357 -1695 -3039 0
-1357 -1693 -3041 0
-1357 -1691 -3043 0
-1357 -1689 -3045 0
-1357 -1687 -3047 0
-1357 -1685 -3049 0
-1357 -1683 -3051 0
-1357 -1681 -3053 0
-1357 -1679 -3055 0
-1357 -1677 -3057 0
-1357 -1675 -3059 0
-1357 -1673 -3061 0
-1357 -1671 -3063 0
-1357 -1669 -3065 0
-1357 -1667 -3067 0
-1357 -1665 -3069 0
-1357 -1663 -3071 0
-1357 -1661 -3073 0
-1357 -1659 -3075 0
-1357 -1657 -3077 0
-1357 -1655 -3079 0
-1357 -1653 -3081 0
-1357 -1651 -3083 0
-1357 -1649 -3085 0
-1357 -1647 -3087 0
-1357 -1645 -3089 0
-1357 -1643 -3091 0
-1357 -1641 -3093 0
-1357 -1639 -3095 0
-1357 -1637 -3097 0
-1357 -1635 -3099 0
-1357 -1633 -3101 0
-1357 -1631 -3103 0
-1357 -1629 -3105 0
-1357 -1627 -3107 0
-1357 -1625 -3109 0
-1357 -1623 -3111 0
-1357 -1621 -3113 0
-1357 -1619 -3115 0
-1357 -1617 -3117 0
-1357 -1615 -3119 0
-1357 -1613 -3121 0
-1357 -1611 -3123 0
-1357 -1609 -3125 0
-1357 -1607 -3127 0
-1357 -1605 -3129 0
-1357 -1603 -3131 0
-1357 -1601 -3133 0
-1357 -1599 -3135 0
-1357 -1597 -3137 0
-1357 -1595 -3139 0
-1357 -1593 -3141 0
-1357 -1591 -3143 0
-1357 -1589 -3145 0
-1357 -1587 -3147 0
-1357 -1585 -3149 0
-1357 -1583 -3151 0
-1357 -1581 -3153 0
-1357 -1579 -3155 0
-1357 -1577 -3157 0
-1357 -1575 -3159 0
-1357 -1573 -3161 0
-1357 -1572 -3163 0
-1355 -3037 0
-1355 -1697 -3039 0
-1355 -1695 -3041 0
-1355 -1693 -3043 0
-1355 -1691 -3045 0
-1355 -1689 -3047 0
-1355 -1687 -3049 0
-1355 -1685 -3051 0
-1355 -1683 -3053 0
-1355 -1681 -3055 0
-1355 -1679 -3057 0
-1355 -1677 -3059 0
-1355 -1675 -3061 0
-1355 -1673 -3063 0
-1355 -1671 -3065 0
-1355 -1669 -3067 0
-1355 -1667 -3069 0
-1355 -1665 -3071 0
-1355 -1663 -3073 0
-1355 -1661 -3075 0
-1355 -1659 -3077 0
-1355 -1657 -3079 0
-1355 -1655 -3081 0
-1355 -1653 -3083 0
-1355 -1651 -3085 0
-1355 -1649 -3087 0
-1355 -1647 -3089 0
-1355 -1645 -3091 0
-1355 -1643 -3093 0
-1355 -1641 -3095 0
-1355 -1639 -3097 0
-1355 -1637 -3099 0
-1355 -1635 -3101 0
-1355 -1633 -3103 0
-1355 -1631 -3105 0
-1355 -1629 -3107 0
-1355 -1627 -3109 0
-1355 -1625 -3111 0
-1355 -1623 -3113 0
-1355 -1621 -3115 0
-1355 -1619 -3117 0
-1355 -1617 -3119 0
-1355 -1615 -3121 0
-1355 -1613 -3123 0
-1355 -1611 -3125 0
-1355 -1609 -3127 0
-1355 -1607 -3129 0
-1355 -1605 -3131 0
-1355 -1603 -3133 0
-1355 -1601 -3135 0
-1355 -1599 -3137 0
-1355 -1597 -3139 0
-1355 -1595 -3141 0
-1355 -1593 -3143 0
-1355 -1591 -3145 0
-1355 -1589 -3147 0
-1355 -1587 -3149 0
-1355 -1585 -3151 0
-1355 -1583 -3153 0
-1355 -1581 -3155 0
-1355 -1579 -3157 0
-1355 -1577 -3159 0
-1355 -1575 -3161 0
-1355 -1573 -3163 0
-1355 -1572 -3165 0
-1353 -3039 0
-1353 -1697 -3041 0
-1353 -1695 -3043 0
-1353 -1693 -3045 0
-1353 -1691 -3047 0
-1353 -1689 -3049 0
-1353 -1687 -3051 0
-1353 -1685 -3053 0
-1353 -1683 -3055 0
-1353 -1681 -3057 0
-1353 -1679 -3059 0
-1353 -1677 -3061 0
-1353 -1675 -3063 0
-1353 -1673 -3065 0
-1353 -1671 -3067 0
-1353 -1669 -3069 0
-1353 -1667 -3071 0
-1353 -1665 -3073 0
-1353 -1663 -3075 0
-1353 -1661 -3077 0
-1353 -1659 -3079 0
-1353 -1657 -3081 0
-1353 -1655 -3083 0
-1353 -1653 -3085 0
-1353 -1651 -3087 0
-1353 -1649 -3089 0
-1353 -1647 -3091 0
-1353 -1645 -3093 0
-1353 -1643 -3095 0
-1353 -1641 -3097 0
-1353 -1639 -3099 0
-1353 -1637 -3101 0
-1353 -1635 -3103 0
-1353 -1633 -3105 0
-1353 -1631 -3107 0
-1353 -1629 -3109 0
-1353 -1627 -3111 0
-1353 -1625 -3113 0
-1353 -1623 -3115 0
-1353 -1621 -3117 0
-1353 -1619 -3119 0
-1353 -1617 -3121 0
-1353 -1615 -3123 0
-1353 -1613 -3125 0
-1353 -1611 -3127 0
-1353 -1609 -3129 0
-1353 -1607 -3131 0
-1353 -1605 -3133 0
-1353 -1603 -3135 0
-1353 -1601 -3137 0
-1353 -1599 -3139 0
-1353 -1597 -3141 0
-1353 -1595 -3143 0
-1353 -1593 -3145 0
-1353 -1591 -3147 0
-1353 -1589 -3149 0
-1353 -1587 -3151 0
-1353 -1585 -3153 0
-1353 -1583 -3155 0
-1353 -1581 -3157 0
-1353 -1579 -3159 0
-1353 -1577 -3161 0
-1353 -1575 -3163 0
-1353 -1573 -3165 0
-1353 -1572 -3167 0
-1351 -3041 0
-1351 -1697 -3043 0
-1351 -1695 -3045 0
-1351 -1693 -3047 0
-1351 -1691 -3049 0
-1351 -1689 -3051 0
-1351 -1687 -3053 0
-1351 -1685 -3055 0
-1351 -1683 -3057 0
-1351 -1681 -3059 0
-1351 -1679 -3061 0
-1351 -1677 -3063 0
-1351 -1675 -3065 0
-1351 -1673 -3067 0
-1351 -1671 -3069 0
-1351 -1669 -3071 0
-1351 -1667 -3073 0
-1351 -1665 -3075 0
-1351 -1663 -3077 0
-1351 -1661 -3079 0
-1351 -1659 -3081 0
-1351 -1657 -3083 0
-1351 -1655 -3085 0
-1351 -1653 -3087 0
-1351 -1651 -3089 0
-1351 -1649 -3091 0
-1351 -1647 -3093 0
-1351 -1645 -3095 0
-1351 -1643 -3097 0
-1351 -1641 -3099 0
-1351 -1639 -3101 0
-1351 -1637 -3103 0
-1351 -1635 -3105 0
-1351 -1633 -3107 0
-1351 -1631 -3109 0
-1351 -1629 -3111 0
-1351 -1627 -3113 0
-1351 -1625 -3115 0
-1351 -1623 -3117 0
-1351 -1621 -3119 0
-1351 -1619 -3121 0
-1351 -1617 -3123 0
-1351 -1615 -3125 0
-1351 -1613 -3127 0
-1351 -1611 -3129 0
-1351 -1609 -3131 0
-1351 -1607 -3133 0
-1351 -1605 -3135 0
-1351 -1603 -3137 0
-1351 -1601 -3139 0
-1351 -1599 -3141 0
-1351 -1597 -3143 0
-1351 -1595 -3145 0
-1351 -1593 -3147 0
-1351 -1591 -3149 0
-1351 -1589 -3151 0
-1351 -1587 -3153 0
-1351 -1585 -3155 0
-1351 -1583 -3157 0
-1351 -1581 -3159 0
-1351 -1579 -3161 0
-1351 -1577 -3163 0
-1351 -1575 -3165 0
-1351 -1573 -3167 0
-1351 -1572 -3169 0
-1349 -3043 0
-1349 -1697 -3045 0
-1349 -1695 -3047 0
-1349 -1693 -3049 0
-1349 -1691 -3051 0
-1349 -1689 -3053 0
-1349 -1687 -3055 0
-1349 -1685 -3057 0
-1349 -1683 -3059 0
-1349 -1681 -3061 0
-1349 -1679 -3063 0
-1349 -1677 -3065 0
-1349 -1675 -3067 0
-1349 -1673 -3069 0
-1349 -1671 -3071 0
-1349 -1669 -3073 0
-1349 -1667 -3075 0
-1349 -1665 -3077 0
-1349 -1663 -3079 0
-1349 -1661 -3081 0
-1349 -1659 -3083 0
-1349 -1657 -3085 0
-1349 -1655 -3087 0
-1349 -1653 -3089 0
-1349 -1651 -3091 0
-1349 -1649 -3093 0
-1349 -1647 -3095 0
-1349 -1645 -3097 0
-1349 -1643 -3099 0
-1349 -1641 -3101 0
-1349 -1639 -3103 0
-1349 -1637 -3105 0
-1349 -1635 -3107 0
-1349 -1633 -3109 0
-1349 -1631 -3111 0
-1349 -1629 -3113 0
-1349 -1627 -3115 0
-1349 -1625 -3117 0
-1349 -1623 -3119 0
-1349 -1621 -3121 0
-1349 -1619 -3123 0
-1349 -1617 -3125 0
-1349 -1615 -3127 0
-1349 -1613 -3129 0
-1349 -1611 -3131 0
-1349 -1609 -3133 0
-1349 -1607 -3135 0
-1349 -1605 -3137 0
-1349 -1603 -3139 0
-1349 -1601 -3141 0
-1349 -1599 -3143 0
-1349 -1597 -3145 0
-1349 -1595 -3147 0
-1349 -1593 -3149 0
-1349 -1591 -3151 0
-1349 -1589 -3153 0
-1349 -1587 -3155 0
-1349 -1585 -3157 0
-1349 -1583 -3159 0
-1349 -1581 -3161 0
-1349 -1579 -3163 0
-1349 -1577 -3165 0
-1349 -1575 -3167 0
-1349 -1573 -3169 0
-1349 -1572 -3171 0
-1347 -3045 0
-1347 -1697 -3047 0
-1347 -1695 -3049 0
-1347 -1693 -3051 0
-1347 -1691 -3053 0
-1347 -1689 -3055 0
-1347 -1687 -3057 0
-1347 -1685 -3059 0
-1347 -1683 -3061 0
-1347 -1681 -3063 0
-1347 -1679 -3065 0
-1347 -1677 -3067 0
-1347 -1675 -3069 0
-1347 -1673 -3071 0
-1347 -1671 -3073 0
-1347 -1669 -3075 0
-1347 -1667 -3077 0
-1347 -1665 -3079 0
-1347 -1663 -3081 0
-1347 -1661 -3083 0
-1347 -1659 -3085 0
-1347 -1657 -3087 0
-1347 -1655 -3089 0
-1347 -1653 -3091 0
-1347 -1651 -3093 0
-1347 -1649 -3095 0
-1347 -1647 -3097 0
-1347 -1645 -3099 0
-1347 -1643 -3101 0
-1347 -1641 -3103 0
-1347 -1639 -3105 0
-1347 -1637 -3107 0
-1347 -1635 -3109 0
-1347 -1633 -3111 0
-1347 -1631 -3113 0
-1347 -1629 -3115 0
-1347 -1627 -3117 0
-1347 -1625 -3119 0
-1347 -1623 -3121 0
-1347 -1621 -3123 0
-1347 -1619 -3125 0
-1347 -1617 -3127 0
-1347 -1615 -3129 0
-1347 -1613 -3131 0
-1347 -1611 -3133 0
-1347 -1609 -3135 0
-1347 -1607 -3137 0
-1347 -1605 -3139 0
-1347 -1603 -3141 0
-1347 -1601 -3143 0
-1347 -1599 -3145 0
-1347 -1597 -3147 0
-1347 -1595 -3149 0
-1347 -1593 -3151 0
-1347 -1591 -3153 0
-1347 -1589 -3155 0
-1347 -1587 -3157 0
-1347 -1585 -3159 0
-1347 -1583 -3161 0
-1347 -1581 -3163 0
-1347 -1579 -3165 0
-1347 -1577 -3167 0
-1347 -1575 -3169 0
-1347 -1573 -3171 0
-1347 -1572 -3173 0
-1345 -3047 0
-1345 -1697 -3049 0
-1345 -1695 -3051 0
-1345 -1693 -3053 0
-1345 -1691 -3055 0
-1345 -1689 -3057 0
-1345 -1687 -3059 0
-1345 -1685 -3061 0
-1345 -1683 -3063 0
-1345 -1681 -3065 0
-1345 -1679 -3067 0
-1345 -1677 -3069 0
-1345 -1675 -3071 0
-1345 -1673 -3073 0
-1345 -1671 -3075 0
-1345 -1669 -3077 0
-1345 -1667 -3079 0
-1345 -1665 -3081 0
-1345 -1663 -3083 0
-1345 -1661 -3085 0
-1345 -1659 -3087 0
-1345 -1657 -3089 0
-1345 -1655 -3091 0
-1345 -1653 -3093 0
-1345 -1651 -3095 0
-1345 -1649 -3097 0
-1345 -1647 -3099 0
-1345 -1645 -3101 0
-1345 -1643 -3103 0
-1345 -1641 -3105 0
-1345 -1639 -3107 0
-1345 -1637 -3109 0
-1345 -1635 -3111 0
-1345 -1633 -3113 0
-1345 -1631 -3115 0
-1345 -1629 -3117 0
-1345 -1627 -3119 0
-1345 -1625 -3121 0
-1345 -1623 -3123 0
-1345 -1621 -3125 0
-1345 -1619 -3127 0
-1345 -1617 -3129 0
-1345 -1615 -3131 0
-1345 -1613 -3133 0
-1345 -1611 -3135 0
-1345 -1609 -3137 0
-1345 -1607 -3139 0
-1345 -1605 -3141 0
-1345 -1603 -3143 0
-1345 -1601 -3145 0
-1345 -1599 -3147 0
-1345 -1597 -3149 0
-1345 -1595 -3151 0
-1345 -1593 -3153 0
-1345 -1591 -3155 0
-1345 -1589 -3157 0
-1345 -1587 -3159 0
-1345 -1585 -3161 0
-1345 -1583 -3163 0
-1345 -1581 -3165 0
-1345 -1579 -3167 0
-1345 -1577 -3169 0
-1345 -1575 -3171 0
-1345 -1573 -3173 0
-1345 -1572 -3175 0
-1343 -3049 0
-1343 -1697 -3051 0
-1343 -1695 -3053 0
-1343 -1693 -3055 0
-1343 -1691 -3057 0
-1343 -1689 -3059 0
-1343 -1687 -3061 0
-1343 -1685 -3063 0
-1343 -1683 -3065 0
-1343 -1681 -3067 0
-1343 -1679 -3069 0
-1343 -1677 -3071 0
-1343 -1675 -3073 0
-1343 -1673 -3075 0
-1343 -1671 -3077 0
-1343 -1669 -3079 0
-1343 -1667 -3081 0
-1343 -1665 -3083 0
-1343 -1663 -3085 0
-1343 -1661 -3087 0
-1343 -1659 -3089 0
-1343 -1657 -3091 0
-1343 -1655 -3093 0
-1343 -1653 -3095 0
-1343 -1651 -3097 0
-1343 -1649 -3099 0
-1343 -1647 -3101 0
-1343 -1645 -3103 0
-1343 -1643 -3105 0
-1343 -1641 -3107 0
-1343 -1639 -3109 0
-1343 -1637 -3111 0
-1343 -1635 -3113 0
-1343 -1633 -3115 0
-1343 -1631 -3117 0
-1343 -1629 -3119 0
-1343 -1627 -3121 0
-1343 -1625 -3123 0
-1343 -1623 -3125 0
-1343 -1621 -3127 0
-1343 -1619 -3129 0
-1343 -1617 -3131 0
-1343 -1615 -3133 0
-1343 -1613 -3135 0
-1343 -1611 -3137 0
-1343 -1609 -3139 0
-1343 -1607 -3141 0
-1343 -1605 -3143 0
-1343 -1603 -3145 0
-1343 -1601 -3147 0
-1343 -1599 -3149 0
-1343 -1597 -3151 0
-1343 -1595 -3153 0
-1343 -1593 -3155 0
-1343 -1591 -3157 0
-1343 -1589 -3159 0
-1343 -1587 -3161 0
-1343 -1585 -3163 0
-1343 -1583 -3165 0
-1343 -1581 -3167 0
-1343 -1579 -3169 0
-1343 -1577 -3171 0
-1343 -1575 -3173 0
-1343 -1573 -3175 0
-1343 -1572 -3177 0
-1341 -3051 0
-1341 -1697 -3053 0
-1341 -1695 -3055 0
-1341 -1693 -3057 0
-1341 -1691 -3059 0
-1341 -1689 -3061 0
-1341 -1687 -3063 0
-1341 -1685 -3065 0
-1341 -1683 -3067 0
-1341 -1681 -3069 0
-1341 -1679 -3071 0
-1341 -1677 -3073 0
-1341 -1675 -3075 0
-1341 -1673 -3077 0
-1341 -1671 -3079 0
-1341 -1669 -3081 0
-1341 -1667 -3083 0
-1341 -1665 -3085 0
-1341 -1663 -3087 0
-1341 -1661 -3089 0
-1341 -1659 -3091 0
-1341 -1657 -3093 0
-1341 -1655 -3095 0
-1341 -1653 -3097 0
-1341 -1651 -3099 0
-1341 -1649 -3101 0
-1341 -1647 -3103 0
-1341 -1645 -3105 0
-1341 -1643 -3107 0
-1341 -1641 -3109 0
-1341 -1639 -3111 0
-1341 -1637 -3113 0
-1341 -1635 -3115 0
-1341 -1633 -3117 0
-1341 -1631 -3119 0
-1341 -1629 -3121 0
-1341 -1627 -3123 0
-1341 -1625 -3125 0
-1341 -1623 -3127 0
-1341 -1621 -3129 0
-1341 -1619 -3131 0
-1341 -1617 -3133 0
-1341 -1615 -3135 0
-1341 -1613 -3137 0
-1341 -1611 -3139 0
-1341 -1609 -3141 0
-1341 -1607 -3143 0
-1341 -1605 -3145 0
-1341 -1603 -3147 0
-1341 -1601 -3149 0
-1341 -1599 -3151 0
-1341 -1597 -3153 0
-1341 -1595 -3155 0
-1341 -1593 -3157 0
-1341 -1591 -3159 0
-1341 -1589 -3161 0
-1341 -1587 -3163 0
-1341 -1585 -3165 0
-1341 -1583 -3167 0
-1341 -1581 -3169 0
-1341 -1579 -3171 0
-1341 -1577 -3173 0
-1341 -1575 -3175 0
-1341 -1573 -3177 0
-1341 -1572 -3179 0
-1339 -3053 0
-1339 -1697 -3055 0
-1339 -1695 -3057 0
-1339 -1693 -3059 0
-1339 -1691 -3061 0
-1339 -1689 -3063 0
-1339 -1687 -3065 0
-1339 -1685 -3067 0
-1339 -1683 -3069 0
-1339 -1681 -3071 0
-1339 -1679 -3073 0
-1339 -1677 -3075 0
-1339 -1675 -3077 0
-1339 -1673 -3079 0
-1339 -1671 -3081 0
-1339 -1669 -3083 0
-1339 -1667 -3085 0
-1339 -1665 -3087 0
-1339 -1663 -3089 0
-1339 -1661 -3091 0
-1339 -1659 -3093 0
-1339 -1657 -3095 0
-1339 -1655 -3097 0
-1339 -1653 -3099 0
-1339 -1651 -3101 0
-1339 -1649 -3103 0
-1339 -1647 -3105 0
-1339 -1645 -3107 0
-1339 -1643 -3109 0
-1339 -1641 -3111 0
-1339 -1639 -3113 0
-1339 -1637 -3115 0
-1339 -1635 -3117 0
-1339 -1633 -3119 0
-1339 -1631 -3121 0
-1339 -1629 -3123 0
-1339 -1627 -3125 0
-1339 -1625 -3127 0
-1339 -1623 -3129 0
-1339 -1621 -3131 0
-1339 -1619 -3133 0
-1339 -1617 -3135 0
-1339 -1615 -3137 0
-1339 -1613 -3139 0
-1339 -1611 -3141 0
-1339 -1609 -3143 0
-1339 -1607 -3145 0
-1339 -1605 -3147 0
-1339 -1603 -3149 0
-1339 -1601 -3151 0
-1339 -1599 -3153 0
-1339 -1597 -3155 0
-1339 -1595 -3157 0
-1339 -1593 -3159 0
-1339 -1591 -3161 0
-1339 -1589 -3163 0
-1339 -1587 -3165 0
-1339 -1585 -3167 0
-1339 -1583 -3169 0
-1339 -1581 -3171 0
-1339 -1579 -3173 0
-1339 -1577 -3175 0
-1339 -1575 -3177 0
-1339 -1573 -3179 0
-1339 -1572 -3181 0
-1337 -3055 0
-1337 -1697 -3057 0
-1337 -1695 -3059 0
-1337 -1693 -3061 0
-1337 -1691 -3063 0
-1337 -1689 -3065 0
-1337 -1687 -3067 0
-1337 -1685 -3069 0
-1337 -1683 -3071 0
-1337 -1681 -3073 0
-1337 -1679 -3075 0
-1337 -1677 -3077 0
-1337 -1675 -3079 0
-1337 -1673 -3081 0
-1337 -1671 -3083 0
-1337 -1669 -3085 0
-1337 -1667 -3087 0
-1337 -1665 -3089 0
-1337 -1663 -3091 0
-1337 -1661 -3093 0
-1337 -1659 -3095 0
-1337 -1657 -3097 0
-1337 -1655 -3099 0
-1337 -1653 -3101 0
-1337 -1651 -3103 0
-1337 -1649 -3105 0
-1337 -1647 -3107 0
-1337 -1645 -3109 0
-1337 -1643 -3111 0
-1337 -1641 -3113 0
-1337 -1639 -3115 0
-1337 -1637 -3117 0
-1337 -1635 -3119 0
-1337 -1633 -3121 0
-1337 -1631 -3123 0
-1337 -1629 -3125 0
-1337 -1627 -3127 0
-1337 -1625 -3129 0
-1337 -1623 -3131 0
-1337 -1621 -3133 0
-1337 -1619 -3135 0
-1337 -1617 -3137 0
-1337 -1615 -3139 0
-1337 -1613 -3141 0
-1337 -1611 -3143 0
-1337 -1609 -3145 0
-1337 -1607 -3147 0
-1337 -1605 -3149 0
-1337 -1603 -3151 0
-1337 -1601 -3153 0
-1337 -1599 -3155 0
-1337 -1597 -3157 0
-1337 -1595 -3159 0
-1337 -1593 -3161 0
-1337 -1591 -3163 0
-1337 -1589 -3165 0
-1337 -1587 -3167 0
-1337 -1585 -3169 0
-1337 -1583 -3171 0
-1337 -1581 -3173 0
-1337 -1579 -3175 0
-1337 -1577 -3177 0
-1337 -1575 -3179 0
-1337 -1573 -3181 0
-1337 -1572 -3183 0
-1335 -3057 0
-1335 -1697 -3059 0
-1335 -1695 -3061 0
-1335 -1693 -3063 0
-1335 -1691 -3065 0
-1335 -1689 -3067 0
-1335 -1687 -3069 0
-1335 -1685 -3071 0
-1335 -1683 -3073 0
-1335 -1681 -3075 0
-1335 -1679 -3077 0
-1335 -1677 -3079 0
-1335 -1675 -3081 0
-1335 -1673 -3083 0
-1335 -1671 -3085 0
-1335 -1669 -3087 0
-1335 -1667 -3089 0
-1335 -1665 -3091 0
-1335 -1663 -3093 0
-1335 -1661 -3095 0
-1335 -1659 -3097 0
-1335 -1657 -3099 0
-1335 -1655 -3101 0
-1335 -1653 -3103 0
-1335 -1651 -3105 0
-1335 -1649 -3107 0
-1335 -1647 -3109 0
-1335 -1645 -3111 0
-1335 -1643 -3113 0
-1335 -1641 -3115 0
-1335 -1639 -3117 0
-1335 -1637 -3119 0
-1335 -1635 -3121 0
-1335 -1633 -3123 0
-1335 -1631 -3125 0
-1335 -1629 -3127 0
-1335 -1627 -3129 0
-1335 -1625 -3131 0
-1335 -1623 -3133 0
-1335 -1621 -3135 0
-1335 -1619 -3137 0
-1335 -1617 -3139 0
-1335 -1615 -3141 0
-1335 -1613 -3143 0
-1335 -1611 -3145 0
-1335 -1609 -3147 0
-1335 -1607 -3149 0
-1335 -1605 -3151 0
-1335 -1603 -3153 0
-1335 -1601 -3155 0
-1335 -1599 -3157 0
-1335 -1597 -3159 0
-1335 -1595 -3161 0
-1335 -1593 -3163 0
-1335 -1591 -3165 0
-1335 -1589 -3167 0
-1335 -1587 -3169 0
-1335 -1585 -3171 0
-1335 -1583 -3173 0
-1335 -1581 -3175 0
-1335 -1579 -3177 0
-1335 -1577 -3179 0
-1335 -1575 -3181 0
-1335 -1573 -3183 0
-1335 -1572 -3185 0
-1333 -3059 0
-1333 -1697 -3061 0
-1333 -1695 -3063 0
-1333 -1693 -3065 0
-1333 -1691 -3067 0
-1333 -1689 -3069 0
-1333 -1687 -3071 0
-1333 -1685 -3073 0
-1333 -1683 -3075 0
-1333 -1681 -3077 0
-1333 -1679 -3079 0
-1333 -1677 -3081 0
-1333 -1675 -3083 0
-1333 -1673 -3085 0
-1333 -1671 -3087 0
-1333 -1669 -3089 0
-1333 -1667 -3091 0
-1333 -1665 -3093 0
-1333 -1663 -3095 0
-1333 -1661 -3097 0
-1333 -1659 -3099 0
-1333 -1657 -3101 0
-1333 -1655 -3103 0
-1333 -1653 -3105 0
-1333 -1651 -3107 0
-1333 -1649 -3109 0
-1333 -1647 -3111 0
-1333 -1645 -3113 0
-1333 -1643 -3115 0
-1333 -1641 -3117 0
-1333 -1639 -3119 0
-1333 -1637 -3121 0
-1333 -1635 -3123 0
-1333 -1633 -3125 0
-1333 -1631 -3127 0
-1333 -1629 -3129 0
-1333 -1627 -3131 0
-1333 -1625 -3133 0
-1333 -1623 -3135 0
-1333 -1621 -3137 0
-1333 -1619 -3139 0
-1333 -1617 -3141 0
-1333 -1615 -3143 0
-1333 -1613 -3145 0
-1333 -1611 -3147 0
-1333 -1609 -3149 0
-1333 -1607 -3151 0
-1333 -1605 -3153 0
-1333 -1603 -3155 0
-1333 -1601 -3157 0
-1333 -1599 -3159 0
-1333 -1597 -3161 0
-1333 -1595 -3163 0
-1333 -1593 -3165 0
-1333 -1591 -3167 0
-1333 -1589 -3169 0
-1333 -1587 -3171 0
-1333 -1585 -3173 0
-1333 -1583 -3175 0
-1333 -1581 -3177 0
-1333 -1579 -3179 0
-1333 -1577 -3181 0
-1333 -1575 -3183 0
-1333 -1573 -3185 0
-1333 -1572 -3187 0
-1331 -3061 0
-1331 -1697 -3063 0
-1331 -1695 -3065 0
-1331 -1693 -3067 0
-1331 -1691 -3069 0
-1331 -1689 -3071 0
-1331 -1687 -3073 0
-1331 -1685 -3075 0
-1331 -1683 -3077 0
-1331 -1681 -3079 0
-1331 -1679 -3081 0
-1331 -1677 -3083 0
-1331 -1675 -3085 0
-1331 -1673 -3087 0
-1331 -1671 -3089 0
-1331 -1669 -3091 0
-1331 -1667 -3093 0
-1331 -1665 -3095 0
-1331 -1663 -3097 0
-1331 -1661 -3099 0
-1331 -1659 -3101 0
-1331 -1657 -3103 0
-1331 -1655 -3105 0
-1331 -1653 -3107 0
-1331 -1651 -3109 0
-1331 -1649 -3111 0
-1331 -1647 -3113 0
-1331 -1645 -3115 0
-1331 -1643 -3117 0
-1331 -1641 -3119 0
-1331 -1639 -3121 0
-1331 -1637 -3123 0
-1331 -1635 -3125 0
-1331 -1633 -3127 0
-1331 -1631 -3129 0
-1331 -1629 -3131 0
-1331 -1627 -3133 0
-1331 -1625 -3135 0
-1331 -1623 -3137 0
-1331 -1621 -3139 0
-1331 -1619 -3141 0
-1331 -1617 -3143 0
-1331 -1615 -3145 0
-1331 -1613 -3147 0
-1331 -1611 -3149 0
-1331 -1609 -3151 0
-1331 -1607 -3153 0
-1331 -1605 -3155 0
-1331 -1603 -3157 0
-1331 -1601 -3159 0
-1331 -1599 -3161 0
-1331 -1597 -3163 0
-1331 -1595 -3165 0
-1331 -1593 -3167 0
-1331 -1591 -3169 0
-1331 -1589 -3171 0
-1331 -1587 -3173 0
-1331 -1585 -3175 0
-1331 -1583 -3177 0
-1331 -1581 -3179 0
-1331 -1579 -3181 0
-1331 -1577 -3183 0
-1331 -1575 -3185 0
-1331 -1573 -3187 0
-1331 -1572 -3189 0
-1329 -3063 0
-1329 -1697 -3065 0
-1329 -1695 -3067 0
-1329 -1693 -3069 0
-1329 -1691 -3071 0
-1329 -1689 -3073 0
-1329 -1687 -3075 0
-1329 -1685 -3077 0
-1329 -1683 -3079 0
-1329 -1681 -3081 0
-1329 -1679 -3083 0
-1329 -1677 -3085 0
-1329 -1675 -3087 0
-1329 -1673 -3089 0
-1329 -1671 -3091 0
-1329 -1669 -3093 0
-1329 -1667 -3095 0
-1329 -1665 -3097 0
-1329 -1663 -3099 0
-1329 -1661 -3101 0
-1329 -1659 -3103 0
-1329 -1657 -3105 0
-1329 -1655 -3107 0
-1329 -1653 -3109 0
-1329 -1651 -3111 0
-1329 -1649 -3113 0
-1329 -1647 -3115 0
-1329 -1645 -3117 0
-1329 -1643 -3119 0
-1329 -1641 -3121 0
-1329 -1639 -3123 0
-1329 -1637 -3125 0
-1329 -1635 -3127 0
-1329 -1633 -3129 0
-1329 -1631 -3131 0
-1329 -1629 -3133 0
-1329 -1627 -3135 0
-1329 -1625 -3137 0
-1329 -1623 -3139 0
-1329 -1621 -3141 0
-1329 -1619 -3143 0
-1329 -1617 -3145 0
-1329 -1615 -3147 0
-1329 -1613 -3149 0
-1329 -1611 -3151 0
-1329 -1609 -3153 0
-1329 -1607 -3155 0
-1329 -1605 -3157 0
-1329 -1603 -3159 0
-1329 -1601 -3161 0
-1329 -1599 -3163 0
-1329 -1597 -3165 0
-1329 -1595 -3167 0
-1329 -1593 -3169 0
-1329 -1591 -3171 0
-1329 -1589 -3173 0
-1329 -1587 -3175 0
-1329 -1585 -3177 0
-1329 -1583 -3179 0
-1329 -1581 -3181 0
-1329 -1579 -3183 0
-1329 -1577 -3185 0
-1329 -1575 -3187 0
-1329 -1573 -3189 0
-1329 -1572 -3191 0
-1327 -3065 0
-1327 -1697 -3067 0
-1327 -1695 -3069 0
-1327 -1693 -3071 0
-1327 -1691 -3073 0
-1327 -1689 -3075 0
-1327 -1687 -3077 0
-1327 -1685 -3079 0
-1327 -1683 -3081 0
-1327 -1681 -3083 0
-1327 -1679 -3085 0
-1327 -1677 -3087 0
-1327 -1675 -3089 0
-1327 -1673 -3091 0
-1327 -1671 -3093 0
-1327 -1669 -3095 0
-1327 -1667 -3097 0
-1327 -1665 -3099 0
-1327 -1663 -3101 0
-1327 -1661 -3103 0
-1327 -1659 -3105 0
-1327 -1657 -3107 0
-1327 -1655 -3109 0
-1327 -1653 -3111 0
-1327 -1651 -3113 0
-1327 -1649 -3115 0
-1327 -1647 -3117 0
-1327 -1645 -3119 0
-1327 -1643 -3121 0
-1327 -1641 -3123 0
-1327 -1639 -3125 0
-1327 -1637 -3127 0
-1327 -1635 -3129 0
-1327 -1633 -3131 0
-1327 -1631 -3133 0
-1327 -1629 -3135 0
-1327 -1627 -3137 0
-1327 -1625 -3139 0
-1327 -1623 -3141 0
-1327 -1621 -3143 0
-1327 -1619 -3145 0
-1327 -1617 -3147 0
-1327 -1615 -3149 0
-1327 -1613 -3151 0
-1327 -1611 -3153 0
-1327 -1609 -3155 0
-1327 -1607 -3157 0
-1327 -1605 -3159 0
-1327 -1603 -3161 0
-1327 -1601 -3163 0
-1327 -1599 -3165 0
-1327 -1597 -3167 0
-1327 -1595 -3169 0
-1327 -1593 -3171 0
-1327 -1591 -3173 0
-1327 -1589 -3175 0
-1327 -1587 -3177 0
-1327 -1585 -3179 0
-1327 -1583 -3181 0
-1327 -1581 -3183 0
-1327 -1579 -3185 0
-1327 -1577 -3187 0
-1327 -1575 -3189 0
-1327 -1573 -3191 0
-1327 -1572 -3193 0
-1325 -3067 0
-1325 -1697 -3069 0
-1325 -1695 -3071 0
-1325 -1693 -3073 0
-1325 -1691 -3075 0
-1325 -1689 -3077 0
-1325 -1687 -3079 0
-1325 -1685 -3081 0
-1325 -1683 -3083 0
-1325 -1681 -3085 0
-1325 -1679 -3087 0
-1325 -1677 -3089 0
-1325 -1675 -3091 0
-1325 -1673 -3093 0
-1325 -1671 -3095 0
-1325 -1669 -3097 0
-1325 -1667 -3099 0
-1325 -1665 -3101 0
-1325 -1663 -3103 0
-1325 -1661 -3105 0
-1325 -1659 -3107 0
-1325 -1657 -3109 0
-1325 -1655 -3111 0
-1325 -1653 -3113 0
-1325 -1651 -3115 0
-1325 -1649 -3117 0
-1325 -1647 -3119 0
-1325 -1645 -3121 0
-1325 -1643 -3123 0
-1325 -1641 -3125 0
-1325 -1639 -3127 0
-1325 -1637 -3129 0
-1325 -1635 -3131 0
-1325 -1633 -3133 0
-1325 -1631 -3135 0
-1325 -1629 -3137 0
-1325 -1627 -3139 0
-1325 -1625 -3141 0
-1325 -1623 -3143 0
-1325 -1621 -3145 0
-1325 -1619 -3147 0
-1325 -1617 -3149 0
-1325 -1615 -3151 0
-1325 -1613 -3153 0
-1325 -1611 -3155 0
-1325 -1609 -3157 0
-1325 -1607 -3159 0
-1325 -1605 -3161 0
-1325 -1603 -3163 0
-1325 -1601 -3165 0
-1325 -1599 -3167 0
-1325 -1597 -3169 0
-1325 -1595 -3171 0
-1325 -1593 -3173 0
-1325 -1591 -3175 0
-1325 -1589 -3177 0
-1325 -1587 -3179 0
-1325 -1585 -3181 0
-1325 -1583 -3183 0
-1325 -1581 -3185 0
-1325 -1579 -3187 0
-1325 -1577 -3189 0
-1325 -1575 -3191 0
-1325 -1573 -3193 0
-1325 -1572 -3195 0
-1323 -3069 0
-1323 -1697 -3071 0
-1323 -1695 -3073 0
-1323 -1693 -3075 0
-1323 -1691 -3077 0
-1323 -1689 -3079 0
-1323 -1687 -3081 0
-1323 -1685 -3083 0
-1323 -1683 -3085 0
-1323 -1681 -3087 0
-1323 -1679 -3089 0
-1323 -1677 -3091 0
-1323 -1675 -3093 0
-1323 -1673 -3095 0
-1323 -1671 -3097 0
-1323 -1669 -3099 0
-1323 -1667 -3101 0
-1323 -1665 -3103 0
-1323 -1663 -3105 0
-1323 -1661 -3107 0
-1323 -1659 -3109 0
-1323 -1657 -3111 0
-1323 -1655 -3113 0
-1323 -1653 -3115 0
-1323 -1651 -3117 0
-1323 -1649 -3119 0
-1323 -1647 -3121 0
-1323 -1645 -3123 0
-1323 -1643 -3125 0
-1323 -1641 -3127 0
-1323 -1639 -3129 0
-1323 -1637 -3131 0
-1323 -1635 -3133 0
-1323 -1633 -3135 0
-1323 -1631 -3137 0
-1323 -1629 -3139 0
-1323 -1627 -3141 0
-1323 -1625 -3143 0
-1323 -1623 -3145 0
-1323 -1621 -3147 0
-1323 -1619 -3149 0
-1323 -1617 -3151 0
-1323 -1615 -3153 0
-1323 -1613 -3155 0
-1323 -1611 -3157 0
-1323 -1609 -3159 0
-1323 -1607 -3161 0
-1323 -1605 -3163 0
-1323 -1603 -3165 0
-1323 -1601 -3167 0
-1323 -1599 -3169 0
-1323 -1597 -3171 0
-1323 -1595 -3173 0
-1323 -1593 -3175 0
-1323 -1591 -3177 0
-1323 -1589 -3179 0
-1323 -1587 -3181 0
-1323 -1585 -3183 0
-1323 -1583 -3185 0
-1323 -1581 -3187 0
-1323 -1579 -3189 0
-1323 -1577 -3191 0
-1323 -1575 -3193 0
-1323 -1573 -3195 0
-1323 -1572 -3197 0
-1321 -3071 0
-1321 -1697 -3073 0
-1321 -1695 -3075 0
-1321 -1693 -3077 0
-1321 -1691 -3079 0
-1321 -1689 -3081 0
-1321 -1687 -3083 0
-1321 -1685 -3085 0
-1321 -1683 -3087 0
-1321 -1681 -3089 0
-1321 -1679 -3091 0
-1321 -1677 -3093 0
-1321 -1675 -3095 0
-1321 -1673 -3097 0
-1321 -1671 -3099 0
-1321 -1669 -3101 0
-1321 -1667 -3103 0
-1321 -1665 -3105 0
-1321 -1663 -3107 0
-1321 -1661 -3109 0
-1321 -1659 -3111 0
-1321 -1657 -3113 0
-1321 -1655 -3115 0
-1321 -1653 -3117 0
-1321 -1651 -3119 0
-1321 -1649 -3121 0
-1321 -1647 -3123 0
-1321 -1645 -3125 0
-1321 -1643 -3127 0
-1321 -1641 -3129 0
-1321 -1639 -3131 0
-1321 -1637 -3133 0
-1321 -1635 -3135 0
-1321 -1633 -3137 0
-1321 -1631 -3139 0
-1321 -1629 -3141 0
-1321 -1627 -3143 0
-1321 -1625 -3145 0
-1321 -1623 -3147 0
-1321 -1621 -3149 0
-1321 -1619 -3151 0
-1321 -1617 -3153 0
-1321 -1615 -3155 0
-1321 -1613 -3157 0
-1321 -1611 -3159 0
-1321 -1609 -3161 0
-1321 -1607 -3163 0
-1321 -1605 -3165 0
-1321 -1603 -3167 0
-1321 -1601 -3169 0
-1321 -1599 -3171 0
-1321 -1597 -3173 0
-1321 -1595 -3175 0
-1321 -1593 -3177 0
-1321 -1591 -3179 0
-1321 -1589 -3181 0
-1321 -1587 -3183 0
-1321 -1585 -3185 0
-1321 -1583 -3187 0
-1321 -1581 -3189 0
-1321 -1579 -3191 0
-1321 -1577 -3193 0
-1321 -1575 -3195 0
-1321 -1573 -3197 0
-1321 -1572 -3199 0
-1319 -3073 0
-1319 -1697 -3075 0
-1319 -1695 -3077 0
-1319 -1693 -3079 0
-1319 -1691 -3081 0
-1319 -1689 -3083 0
-1319 -1687 -3085 0
-1319 -1685 -3087 0
-1319 -1683 -3089 0
-1319 -1681 -3091 0
-1319 -1679 -3093 0
-1319 -1677 -3095 0
-1319 -1675 -3097 0
-1319 -1673 -3099 0
-1319 -1671 -3101 0
-1319 -1669 -3103 0
-1319 -1667 -3105 0
-1319 -1665 -3107 0
-1319 -1663 -3109 0
-1319 -1661 -3111 0
-1319 -1659 -3113 0
-1319 -1657 -3115 0
-1319 -1655 -3117 0
-1319 -1653 -3119 0
-1319 -1651 -3121 0
-1319 -1649 -3123 0
-1319 -1647 -3125 0
-1319 -1645 -3127 0
-1319 -1643 -3129 0
-1319 -1641 -3131 0
-1319 -1639 -3133 0
-1319 -1637 -3135 0
-1319 -1635 -3137 0
-1319 -1633 -3139 0
-1319 -1631 -3141 0
-1319 -1629 -3143 0
-1319 -1627 -3145 0
-1319 -1625 -3147 0
-1319 -1623 -3149 0
-1319 -1621 -3151 0
-1319 -1619 -3153 0
-1319 -1617 -3155 0
-1319 -1615 -3157 0
-1319 -1613 -3159 0
-1319 -1611 -3161 0
-1319 -1609 -3163 0
-1319 -1607 -3165 0
-1319 -1605 -3167 0
-1319 -1603 -3169 0
-1319 -1601 -3171 0
-1319 -1599 -3173 0
-1319 -1597 -3175 0
-1319 -1595 -3177 0
-1319 -1593 -3179 0
-1319 -1591 -3181 0
-1319 -1589 -3183 0
-1319 -1587 -3185 0
-1319 -1585 -3187 0
-1319 -1583 -3189 0
-1319 -1581 -3191 0
-1319 -1579 -3193 0
-1319 -1577 -3195 0
-1319 -1575 -3197 0
-1319 -1573 -3199 0
-1319 -1572 -3201 0
-1318 -3075 0
-1318 -1697 -3077 0
-1318 -1695 -3079 0
-1318 -1693 -3081 0
-1318 -1691 -3083 0
-1318 -1689 -3085 0
-1318 -1687 -3087 0
-1318 -1685 -3089 0
-1318 -1683 -3091 0
-1318 -1681 -3093 0
-1318 -1679 -3095 0
-1318 -1677 -3097 0
-1318 -1675 -3099 0
-1318 -1673 -3101 0
-1318 -1671 -3103 0
-1318 -1669 -3105 0
-1318 -1667 -3107 0
-1318 -1665 -3109 0
-1318 -1663 -3111 0
-1318 -1661 -3113 0
-1318 -1659 -3115 0
-1318 -1657 -3117 0
-1318 -1655 -3119 0
-1318 -1653 -3121 0
-1318 -1651 -3123 0
-1318 -1649 -3125 0
-1318 -1647 -3127 0
-1318 -1645 -3129 0
-1318 -1643 -3131 0
-1318 -1641 -3133 0
-1318 -1639 -3135 0
-1318 -1637 -3137 0
-1318 -1635 -3139 0
-1318 -1633 -3141 0
-1318 -1631 -3143 0
-1318 -1629 -3145 0
-1318 -1627 -3147 0
-1318 -1625 -3149 0
-1318 -1623 -3151 0
-1318 -1621 -3153 0
-1318 -1619 -3155 0
-1318 -1617 -3157 0
-1318 -1615 -3159 0
-1318 -1613 -3161 0
-1318 -1611 -3163 0
-1318 -1609 -3165 0
-1318 -1607 -3167 0
-1318 -1605 -3169 0
-1318 -1603 -3171 0
-1318 -1601 -3173 0
-1318 -1599 -3175 0
-1318 -1597 -3177 0
-1318 -1595 -3179 0
-1318 -1593 -3181 0
-1318 -1591 -3183 0
-1318 -1589 -3185 0
-1318 -1587 -3187 0
-1318 -1585 -3189 0
-1318 -1583 -3191 0
-1318 -1581 -3193 0
-1318 -1579 -3195 0
-1318 -1577 -3197 0
-1318 -1575 -3199 0
-1318 -1573 -3201 0
-1318 -1572 -3203 0
c (0<=( - aux405 - shift(num_occupied_by_types_00000, -64) - shift(num_occupied_by_types_00002, -64)))
1572 3203 0
1573 3201 0
1575 3199 0
1577 3197 0
1579 3195 0
1581 3193 0
1583 3191 0
1585 3189 0
1587 3187 0
1589 3185 0
1591 3183 0
1593 3181 0
1595 3179 0
1597 3177 0
1599 3175 0
1601 3173 0
1603 3171 0
1605 3169 0
1607 3167 0
1609 3165 0
1611 3163 0
1613 3161 0
1615 3159 0
1617 3157 0
1619 3155 0
1621 3153 0
1623 3151 0
1625 3149 0
1627 3147 0
1629 3145 0
1631 3143 0
1633 3141 0
1635 3139 0
1637 3137 0
1639 3135 0
1641 3133 0
1643 3131 0
1645 3129 0
1647 3127 0
1649 3125 0
1651 3123 0
1653 3121 0
1655 3119 0
1657 3117 0
1659 3115 0
1661 3113 0
1663 3111 0
1665 3109 0
1667 3107 0
1669 3105 0
1671 3103 0
1673 3101 0
1675 3099 0
1677 3097 0
1679 3095 0
1681 3093 0
1683 3091 0
1685 3089 0
1687 3087 0
1689 3085 0
1691 3083 0
1693 3081 0
1695 3079 0
1697 3077 0
1318 3203 0
1318 1572 3201 0
1318 1573 3199 0
1318 1575 3197 0
1318 1577 3195 0
1318 1579 3193 0
1318 1581 3191 0
1318 1583 3189 0
1318 1585 3187 0
1318 1587 3185 0
1318 1589 3183 0
1318 1591 3181 0
1318 1593 3179 0
1318 1595 3177 0
1318 1597 3175 0
1318 1599 3173 0
1318 1601 3171 0
1318 1603 3169 0
1318 1605 3167 0
1318 1607 3165 0
1318 1609 3163 0
1318 1611 3161 0
1318 1613 3159 0
1318 1615 3157 0
1318 1617 3155 0
1318 1619 3153 0
1318 1621 3151 0
1318 1623 3149 0
1318 1625 3147 0
1318 1627 3145 0
1318 1629 3143 0
1318 1631 3141 0
1318 1633 3139 0
1318 1635 3137 0
1318 1637 3135 0
1318 1639 3133 0
1318 1641 3131 0
1318 1643 3129 0
1318 1645 3127 0
1318 1647 3125 0
1318 1649 3123 0
1318 1651 3121 0
1318 1653 3119 0
1318 1655 3117 0
1318 1657 3115 0
1318 1659 3113 0
1318 1661 3111 0
1318 1663 3109 0
1318 1665 3107 0
1318 1667 3105 0
1318 1669 3103 0
1318 1671 3101 0
1318 1673 3099 0
1318 1675 3097 0
1318 1677 3095 0
1318 1679 3093 0
1318 1681 3091 0
1318 1683 3089 0
1318 1685 3087 0
1318 1687 3085 0
1318 1689 3083 0
1318 1691 3081 0
1318 1693 3079 0
1318 1695 3077 0
1318 1697 3075 0
1319 3201 0
1319 1572 3199 0
1319 1573 3197 0
1319 1575 3195 0
1319 1577 3193 0
1319 1579 3191 0
1319 1581 3189 0
1319 1583 3187 0
1319 1585 3185 0
1319 1587 3183 0
1319 1589 3181 0
1319 1591 3179 0
1319 1593 3177 0
1319 1595 3175 0
1319 1597 3173 0
1319 1599 3171 0
1319 1601 3169 0
1319 1603 3167 0
1319 1605 3165 0
1319 1607 3163 0
1319 1609 3161 0
1319 1611 3159 0
1319 1613 3157 0
1319 1615 3155 0
1319 1617 3153 0
1319 1619 3151 0
1319 1621 3149 0
1319 1623 3147 0
1319 1625 3145 0
1319 1627 3143 0
1319 1629 3141 0
1319 1631 3139 0
1319 1633 3137 0
1319 1635 3135 0
1319 1637 3133 0
1319 1639 3131 0
1319 1641 3129 0
1319 1643 3127 0
1319 1645 3125 0
1319 1647 3123 0
1319 1649 3121 0
1319 1651 3119 0
1319 1653 3117 0
1319 1655 3115 0
1319 1657 3113 0
1319 1659 3111 0
1319 1661 3109 0
1319 1663 3107 0
1319 1665 3105 0
1319 1667 3103 0
1319 1669 3101 0
1319 1671 3099 0
1319 1673 3097 0
1319 1675 3095 0
1319 1677 3093 0
1319 1679 3091 0
1319 1681 3089 0
1319 1683 3087 0
1319 1685 3085 0
1319 1687 3083 0
1319 1689 3081 0
1319 1691 3079 0
1319 1693 3077 0
1319 1695 3075 0
1319 1697 3073 0
1321 3199 0
1321 1572 3197 0
1321 1573 3195 0
1321 1575 3193 0
1321 1577 3191 0
1321 1579 3189 0
1321 1581 3187 0
1321 1583 3185 0
1321 1585 3183 0
1321 1587 3181 0
1321 1589 3179 0
1321 1591 3177 0
1321 1593 3175 0
1321 1595 3173 0
1321 1597 3171 0
1321 1599 3169 0
1321 1601 3167 0
1321 1603 3165 0
1321 1605 3163 0
1321 1607 3161 0
1321 1609 3159 0
1321 1611 3157 0
1321 1613 3155 0
1321 1615 3153 0
1321 1617 3151 0
1321 1619 3149 0
1321 1621 3147 0
1321 1623 3145 0
1321 1625 3143 0
1321 1627 3141 0
1321 1629 3139 0
1321 1631 3137 0
1321 1633 3135 0
1321 1635 3133 0
1321 1637 3131 0
1321 1639 3129 0
1321 1641 3127 0
1321 1643 3125 0
1321 1645 3123 0
1321 1647 3121 0
1321 1649 3119 0
1321 1651 3117 0
1321 1653 3115 0
1321 1655 3113 0
1321 1657 3111 0
1321 1659 3109 0
1321 1661 3107 0
1321 1663 3105 0
1321 1665 3103 0
1321 1667 3101 0
1321 1669 3099 0
1321 1671 3097 0
1321 1673 3095 0
1321 1675 3093 0
1321 1677 3091 0
1321 1679 3089 0
1321 1681 3087 0
1321 1683 3085 0
1321 1685 3083 0
1321 1687 3081 0
1321 1689 3079 0
1321 1691 3077 0
1321 1693 3075 0
1321 1695 3073 0
1321 1697 3071 0
1323 3197 0
1323 1572 3195 0
1323 1573 3193 0
1323 1575 3191 0
1323 1577 3189 0
1323 1579 3187 0
1323 1581 3185 0
1323 1583 3183 0
1323 1585 3181 0
1323 1587 3179 0
1323 1589 3177 0
1323 1591 3175 0
1323 1593 3173 0
1323 1595 3171 0
1323 1597 3169 0
1323 1599 3167 0
1323 1601 3165 0
1323 1603 3163 0
1323 1605 3161 0
1323 1607 3159 0
1323 1609 3157 0
1323 1611 3155 0
1323 1613 3153 0
1323 1615 3151 0
1323 1617 3149 0
1323 1619 3147 0
1323 1621 3145 0
1323 1623 3143 0
1323 1625 3141 0
1323 1627 3139 0
1323 1629 3137 0
1323 1631 3135 0
1323 1633 3133 0
1323 1635 3131 0
1323 1637 3129 0
1323 1639 3127 0
1323 1641 3125 0
1323 1643 3123 0
1323 1645 3121 0
1323 1647 3119 0
1323 1649 3117 0
1323 1651 3115 0
1323 1653 3113 0
1323 1655 3111 0
1323 1657 3109 0
1323 1659 3107 0
1323 1661 3105 0
1323 1663 3103 0
1323 1665 3101 0
1323 1667 3099 0
1323 1669 3097 0
1323 1671 3095 0
1323 1673 3093 0
1323 1675 3091 0
1323 1677 3089 0
1323 1679 3087 0
1323 1681 3085 0
1323 1683 3083 0
1323 1685 3081 0
1323 1687 3079 0
1323 1689 3077 0
1323 1691 3075 0
1323 1693 3073 0
1323 1695 3071 0
1323 1697 3069 0
1325 3195 0
1325 1572 3193 0
1325 1573 3191 0
1325 1575 3189 0
1325 1577 3187 0
1325 1579 3185 0
1325 1581 3183 0
1325 1583 3181 0
1325 1585 3179 0
1325 1587 3177 0
1325 1589 3175 0
1325 1591 3173 0
1325 1593 3171 0
1325 1595 3169 0
1325 1597 3167 0
1325 1599 3165 0
1325 1601 3163 0
1325 1603 3161 0
1325 1605 3159 0
1325 1607 3157 0
1325 1609 3155 0
1325 1611 3153 0
1325 1613 3151 0
1325 1615 3149 0
1325 1617 3147 0
1325 1619 3145 0
1325 1621 3143 0
1325 1623 3141 0
1325 1625 3139 0
1325 1627 3137 0
1325 1629 3135 0
1325 1631 3133 0
1325 1633 3131 0
1325 1635 3129 0
1325 1637 3127 0
1325 1639 3125 0
1325 1641 3123 0
1325 1643 3121 0
1325 1645 3119 0
1325 1647 3117 0
1325 1649 3115 0
1325 1651 3113 0
1325 1653 3111 0
1325 1655 3109 0
1325 1657 3107 0
1325 1659 3105 0
1325 1661 3103 0
1325 1663 3101 0
1325 1665 3099 0
1325 1667 3097 0
1325 1669 3095 0
1325 1671 3093 0
1325 1673 3091 0
1325 1675 3089 0
1325 1677 3087 0
1325 1679 3085 0
1325 1681 3083 0
1325 1683 3081 0
1325 1685 3079 0
1325 1687 3077 0
1325 1689 3075 0
1325 1691 3073 0
1325 1693 3071 0
1325 1695 3069 0
1325 1697 3067 0
1327 3193 0
1327 1572 3191 0
1327 1573 3189 0
1327 1575 3187 0
1327 1577 3185 0
1327 1579 3183 0
1327 1581 3181 0
1327 1583 3179 0
1327 1585 3177 0
1327 1587 3175 0
1327 1589 3173 0
1327 1591 3171 0
1327 1593 3169 0
1327 1595 3167 0
1327 1597 3165 0
1327 1599 3163 0
1327 1601 3161 0
1327 1603 3159 0
1327 1605 3157 0
1327 1607 3155 0
1327 1609 3153 0
1327 1611 3151 0
1327 1613 3149 0
1327 1615 3147 0
1327 1617 3145 0
1327 1619 3143 0
1327 1621 3141 0
1327 1623 3139 0
1327 1625 3137 0
1327 1627 3135 0
1327 1629 3133 0
1327 1631 3131 0
1327 1633 3129 0
1327 1635 3127 0
1327 1637 3125 0
1327 1639 3123 0
1327 1641 3121 0
1327 1643 3119 0
1327 1645 3117 0
1327 1647 3115 0
1327 1649 3113 0
1327 1651 3111 0
1327 1653 3109 0
1327 1655 3107 0
1327 1657 3105 0
1327 1659 3103 0
1327 1661 3101 0
1327 1663 3099 0
1327 1665 3097 0
1327 1667 3095 0
1327 1669 3093 0
1327 1671 3091 0
1327 1673 3089 0
1327 1675 3087 0
1327 1677 3085 0
1327 1679 3083 0
1327 1681 3081 0
1327 1683 3079 0
1327 1685 3077 0
1327 1687 3075 0
1327 1689 3073 0
1327 1691 3071 0
1327 1693 3069 0
1327 1695 3067 0
1327 1697 3065 0
1329 3191 0
1329 1572 3189 0
1329 1573 3187 0
1329 1575 3185 0
1329 1577 3183 0
1329 1579 3181 0
1329 1581 3179 0
1329 1583 3177 0
1329 1585 3175 0
1329 1587 3173 0
1329 1589 3171 0
1329 1591 3169 0
1329 1593 3167 0
1329 1595 3165 0
1329 1597 3163 0
1329 1599 3161 0
1329 1601 3159 0
1329 1603 3157 0
1329 1605 3155 0
1329 1607 3153 0
1329 1609 3151 0
1329 1611 3149 0
1329 1613 3147 0
1329 1615 3145 0
1329 1617 3143 0
1329 1619 3141 0
1329 1621 3139 0
1329 1623 3137 0
1329 1625 3135 0
1329 1627 3133 0
1329 1629 3131 0
1329 1631 3129 0
1329 1633 3127 0
1329 1635 3125 0
1329 1637 3123 0
1329 1639 3121 0
1329 1641 3119 0
1329 1643 3117 0
1329 1645 3115 0
1329 1647 3113 0
1329 1649 3111 0
1329 1651 3109 0
1329 1653 3107 0
1329 1655 3105 0
1329 1657 3103 0
1329 1659 3101 0
1329 1661 3099 0
1329 1663 3097 0
1329 1665 3095 0
1329 1667 3093 0
1329 1669 3091 0
1329 1671 3089 0
1329 1673 3087 0
1329 1675 3085 0
1329 1677 3083 0
1329 1679 3081 0
1329 1681 3079 0
1329 1683 3077 0
1329 1685 3075 0
1329 1687 3073 0
1329 1689 3071 0
1329 1691 3069 0
1329 1693 3067 0
1329 1695 3065 0
1329 1697 3063 0
1331 3189 0
1331 1572 3187 0
1331 1573 3185 0
1331 1575 3183 0
1331 1577 3181 0
1331 1579 3179 0
1331 1581 3177 0
1331 1583 3175 0
1331 1585 3173 0
1331 1587 3171 0
1331 1589 3169 0
1331 1591 3167 0
1331 1593 3165 0
1331 1595 3163 0
1331 1597 3161 0
1331 1599 3159 0
1331 1601 3157 0
1331 1603 3155 0
1331 1605 3153 0
1331 1607 3151 0
1331 1609 3149 0
1331 1611 3147 0
1331 1613 3145 0
1331 1615 3143 0
1331 1617 3141 0
1331 1619 3139 0
1331 1621 3137 0
1331 1623 3135 0
1331 1625 3133 0
1331 1627 3131 0
1331 1629 3129 0
1331 1631 3127 0
1331 1633 3125 0
1331 1635 3123 0
1331 1637 3121 0
1331 1639 3119 0
1331 1641 3117 0
1331 1643 3115 0
1331 1645 3113 0
1331 1647 3111 0
1331 1649 3109 0
1331 1651 3107 0
1331 1653 3105 0
1331 1655 3103 0
1331 1657 3101 0
1331 1659 3099 0
1331 1661 3097 0
1331 1663 3095 0
1331 1665 3093 0
1331 1667 3091 0
1331 1669 3089 0
1331 1671 3087 0
1331 1673 3085 0
1331 1675 3083 0
1331 1677 3081 0
1331 1679 3079 0
1331 1681 3077 0
1331 1683 3075 0
1331 1685 3073 0
1331 1687 3071 0
1331 1689 3069 0
1331 1691 3067 0
1331 1693 3065 0
1331 1695 3063 0
1331 1697 3061 0
1333 3187 0
1333 1572 3185 0
1333 1573 3183 0
1333 1575 3181 0
1333 1577 3179 0
1333 1579 3177 0
1333 1581 3175 0
1333 1583 3173 0
1333 1585 3171 0
1333 1587 3169 0
1333 1589 3167 0
1333 1591 3165 0
1333 1593 3163 0
1333 1595 3161 0
1333 1597 3159 0
1333 1599 3157 0
1333 1601 3155 0
1333 1603 3153 0
1333 1605 3151 0
1333 1607 3149 0
1333 1609 3147 0
1333 1611 3145 0
1333 1613 3143 0
1333 1615 3141 0
1333 1617 3139 0
1333 1619 3137 0
1333 1621 3135 0
1333 1623 3133 0
1333 1625 3131 0
1333 1627 3129 0
1333 1629 3127 0
1333 1631 3125 0
1333 1633 3123 0
1333 1635 3121 0
1333 1637 3119 0
1333 1639 3117 0
1333 1641 3115 0
1333 1643 3113 0
1333 1645 3111 0
1333 1647 3109 0
1333 1649 3107 0
1333 1651 3105 0
1333 1653 3103 0
1333 1655 3101 0
1333 1657 3099 0
1333 1659 3097 0
1333 1661 3095 0
1333 1663 3093 0
1333 1665 3091 0
1333 1667 3089 0
1333 1669 3087 0
1333 1671 3085 0
1333 1673 3083 0
1333 1675 3081 0
1333 1677 3079 0
1333 1679 3077 0
1333 1681 3075 0
1333 1683 3073 0
1333 1685 3071 0
1333 1687 3069 0
1333 1689 3067 0
1333 1691 3065 0
1333 1693 3063 0
1333 1695 3061 0
1333 1697 3059 0
1335 3185 0
1335 1572 3183 0
1335 1573 3181 0
1335 1575 3179 0
1335 1577 3177 0
1335 1579 3175 0
1335 1581 3173 0
1335 1583 3171 0
1335 1585 3169 0
1335 1587 3167 0
1335 1589 3165 0
1335 1591 3163 0
1335 1593 3161 0
1335 1595 3159 0
1335 1597 3157 0
1335 1599 3155 0
1335 1601 3153 0
1335 1603 3151 0
1335 1605 3149 0
1335 1607 3147 0
1335 1609 3145 0
1335 1611 3143 0
1335 1613 3141 0
1335 1615 3139 0
1335 1617 3137 0
1335 1619 3135 0
1335 1621 3133 0
1335 1623 3131 0
1335 1625 3129 0
1335 1627 3127 0
1335 1629 3125 0
1335 1631 3123 0
1335 1633 3121 0
1335 1635 3119 0
1335 1637 3117 0
1335 1639 3115 0
1335 1641 3113 0
1335 1643 3111 0
1335 1645 3109 0
1335 1647 3107 0
1335 1649 3105 0
1335 1651 3103 0
1335 1653 3101 0
1335 1655 3099 0
1335 1657 3097 0
1335 1659 3095 0
1335 1661 3093 0
1335 1663 3091 0
1335 1665 3089 0
1335 1667 3087 0
1335 1669 3085 0
1335 1671 3083 0
1335 1673 3081 0
1335 1675 3079 0
1335 1677 3077 0
1335 1679 3075 0
1335 1681 3073 0
1335 1683 3071 0
1335 1685 3069 0
1335 1687 3067 0
1335 1689 3065 0
1335 1691 3063 0
1335 1693 3061 0
1335 1695 3059 0
1335 1697 3057 0
1337 3183 0
1337 1572 3181 0
1337 1573 3179 0
1337 1575 3177 0
1337 1577 3175 0
1337 1579 3173 0
1337 1581 3171 0
1337 1583 3169 0
1337 1585 3167 0
1337 1587 3165 0
1337 1589 3163 0
1337 1591 3161 0
1337 1593 3159 0
1337 1595 3157 0
1337 1597 3155 0
1337 1599 3153 0
1337 1601 3151 0
1337 1603 3149 0
1337 1605 3147 0
1337 1607 3145 0
1337 1609 3143 0
1337 1611 3141 0
1337 1613 3139 0
1337 1615 3137 0
1337 1617 3135 0
1337 1619 3133 0
1337 1621 3131 0
1337 1623 3129 0
1337 1625 3127 0
1337 1627 3125 0
1337 1629 3123 0
1337 1631 3121 0
1337 1633 3119 0
1337 1635 3117 0
1337 1637 3115 0
1337 1639 3113 0
1337 1641 3111 0
1337 1643 3109 0
1337 1645 3107 0
1337 1647 3105 0
1337 1649 3103 0
1337 1651 3101 0
1337 1653 3099 0
1337 1655 3097 0
1337 1657 3095 0
1337 1659 3093 0
1337 1661 3091 0
1337 1663 3089 0
1337 1665 3087 0
1337 1667 3085 0
1337 1669 3083 0
1337 1671 3081 0
1337 1673 3079 0
1337 1675 3077 0
1337 1677 3075 0
1337 1679 3073 0
1337 1681 3071 0
1337 1683 3069 0
1337 1685 3067 0
1337 1687 3065 0
1337 1689 3063 0
1337 1691 3061 0
1337 1693 3059 0
1337 1695 3057 0
1337 1697 3055 0
1339 3181 0
1339 1572 3179 0
1339 1573 3177 0
1339 1575 3175 0
1339 1577 3173 0
1339 1579 3171 0
1339 1581 3169 0
1339 1583 3167 0
1339 1585 3165 0
1339 1587 3163 0
1339 1589 3161 0
1339 1591 3159 0
1339 1593 3157 0
1339 1595 3155 0
1339 1597 3153 0
1339 1599 3151 0
1339 1601 3149 0
1339 1603 3147 0
1339 1605 3145 0
1339 1607 3143 0
1339 1609 3141 0
1339 1611 3139 0
1339 1613 3137 0
1339 1615 3135 0
1339 1617 3133 0
1339 1619 3131 0
1339 1621 3129 0
1339 1623 3127 0
1339 1625 3125 0
1339 1627 3123 0
1339 1629 3121 0
1339 1631 3119 0
1339 1633 3117 0
1339 1635 3115 0
1339 1637 3113 0
1339 1639 3111 0
1339 1641 3109 0
1339 1643 3107 0
1339 1645 3105 0
1339 1647 3103 0
1339 1649 3101 0
1339 1651 3099 0
1339 1653 3097 0
1339 1655 3095 0
1339 1657 3093 0
1339 1659 3091 0
1339 1661 3089 0
1339 1663 3087 0
1339 1665 3085 0
1339 1667 3083 0
1339 1669 3081 0
1339 1671 3079 0
1339 1673 3077 0
1339 1675 3075 0
1339 1677 3073 0
1339 1679 3071 0
1339 1681 3069 0
1339 1683 3067 0
1339 1685 3065 0
1339 1687 3063 0
1339 1689 3061 0
1339 1691 3059 0
1339 1693 3057 0
1339 1695 3055 0
1339 1697 3053 0
1341 3179 0
1341 1572 3177 0
1341 1573 3175 0
1341 1575 3173 0
1341 1577 3171 0
1341 1579 3169 0
1341 1581 3167 0
1341 1583 3165 0
1341 1585 3163 0
1341 1587 3161 0
1341 1589 3159 0
1341 1591 3157 0
1341 1593 3155 0
1341 1595 3153 0
1341 1597 3151 0
1341 1599 3149 0
1341 1601 3147 0
1341 1603 3145 0
1341 1605 3143 0
1341 1607 3141 0
1341 1609 3139 0
1341 1611 3137 0
1341 1613 3135 0
1341 1615 3133 0
1341 1617 3131 0
1341 1619 3129 0
1341 1621 3127 0
1341 1623 3125 0
1341 1625 3123 0
1341 1627 3121 0
1341 1629 3119 0
1341 1631 3117 0
1341 1633 3115 0
1341 1635 3113 0
1341 1637 3111 0
1341 1639 3109 0
1341 1641 3107 0
1341 1643 3105 0
1341 1645 3103 0
1341 1647 3101 0
1341 1649 3099 0
1341 1651 3097 0
1341 1653 3095 0
1341 1655 3093 0
1341 1657 3091 0
1341 1659 3089 0
1341 1661 3087 0
1341 1663 3085 0
1341 1665 3083 0
1341 1667 3081 0
1341 1669 3079 0
1341 1671 3077 0
1341 1673 3075 0
1341 1675 3073 0
1341 1677 3071 0
1341 1679 3069 0
1341 1681 3067 0
1341 1683 3065 0
1341 1685 3063 0
1341 1687 3061 0
1341 1689 3059 0
1341 1691 3057 0
1341 1693 3055 0
1341 1695 3053 0
1341 1697 3051 0
1343 3177 0
1343 1572 3175 0
1343 1573 3173 0
1343 1575 3171 0
1343 1577 3169 0
1343 1579 3167 0
1343 1581 3165 0
1343 1583 3163 0
1343 1585 3161 0
1343 1587 3159 0
1343 1589 3157 0
1343 1591 3155 0
1343 1593 3153 0
1343 1595 3151 0
1343 1597 3149 0
1343 1599 3147 0
1343 1601 3145 0
1343 1603 3143 0
1343 1605 3141 0
1343 1607 3139 0
1343 1609 3137 0
1343 1611 3135 0
1343 1613 3133 0
1343 1615 3131 0
1343 1617 3129 0
1343 1619 3127 0
1343 1621 3125 0
1343 1623 3123 0
1343 1625 3121 0
1343 1627 3119 0
1343 1629 3117 0
1343 1631 3115 0
1343 1633 3113 0
1343 1635 3111 0
1343 1637 3109 0
1343 1639 3107 0
1343 1641 3105 0
1343 1643 3103 0
1343 1645 3101 0
1343 1647 3099 0
1343 1649 3097 0
1343 1651 3095 0
1343 1653 3093 0
1343 1655 3091 0
1343 1657 3089 0
1343 1659 3087 0
1343 1661 3085 0
1343 1663 3083 0
1343 1665 3081 0
1343 1667 3079 0
1343 1669 3077 0
1343 1671 3075 0
1343 1673 3073 0
1343 1675 3071 0
1343 1677 3069 0
1343 1679 3067 0
1343 1681 3065 0
1343 1683 3063 0
1343 1685 3061 0
1343 1687 3059 0
1343 1689 3057 0
1343 1691 3055 0
1343 1693 3053 0
1343 1695 3051 0
1343 1697 3049 0
1345 3175 0
1345 1572 3173 0
1345 1573 3171 0
1345 1575 3169 0
1345 1577 3167 0
1345 1579 3165 0
1345 1581 3163 0
1345 1583 3161 0
1345 1585 3159 0
1345 1587 3157 0
1345 1589 3155 0
1345 1591 3153 0
1345 1593 3151 0
1345 1595 3149 0
1345 1597 3147 0
1345 1599 3145 0
1345 1601 3143 0
1345 1603 3141 0
1345 1605 3139 0
1345 1607 3137 0
1345 1609 3135 0
1345 1611 3133 0
1345 1613 3131 0
1345 1615 3129 0
1345 1617 3127 0
1345 1619 3125 0
1345 1621 3123 0
1345 1623 3121 0
1345 1625 3119 0
1345 1627 3117 0
1345 1629 3115 0
1345 1631 3113 0
1345 1633 3111 0
1345 1635 3109 0
1345 1637 3107 0
1345 1639 3105 0
1345 1641 3103 0
1345 1643 3101 0
1345 1645 3099 0
1345 1647 3097 0
1345 1649 3095 0
1345 1651 3093 0
1345 1653 3091 0
1345 1655 3089 0
1345 1657 3087 0
1345 1659 3085 0
1345 1661 3083 0
1345 1663 3081 0
1345 1665 3079 0
1345 1667 3077 0
1345 1669 3075 0
1345 1671 3073 0
1345 1673 3071 0
1345 1675 3069 0
1345 1677 3067 0
1345 1679 3065 0
1345 1681 3063 0
1345 1683 3061 0
1345 1685 3059 0
1345 1687 3057 0
1345 1689 3055 0
1345 1691 3053 0
1345 1693 3051 0
1345 1695 3049 0
1345 1697 3047 0
1347 3173 0
1347 1572 3171 0
1347 1573 3169 0
1347 1575 3167 0
1347 1577 3165 0
1347 1579 3163 0
1347 1581 3161 0
1347 1583 3159 0
1347 1585 3157 0
1347 1587 3155 0
1347 1589 3153 0
1347 1591 3151 0
1347 1593 3149 0
1347 1595 3147 0
1347 1597 3145 0
1347 1599 3143 0
1347 1601 3141 0
1347 1603 3139 0
1347 1605 3137 0
1347 1607 3135 0
1347 1609 3133 0
1347 1611 3131 0
1347 1613 3129 0
1347 1615 3127 0
1347 1617 3125 0
1347 1619 3123 0
1347 1621 3121 0
1347 1623 3119 0
1347 1625 3117 0
1347 1627 3115 0
1347 1629 3113 0
1347 1631 3111 0
1347 1633 3109 0
1347 1635 3107 0
1347 1637 3105 0
1347 1639 3103 0
1347 1641 3101 0
1347 1643 3099 0
1347 1645 3097 0
1347 1647 3095 0
1347 1649 3093 0
1347 1651 3091 0
1347 1653 3089 0
1347 1655 3087 0
1347 1657 3085 0
1347 1659 3083 0
1347 1661 3081 0
1347 1663 3079 0
1347 1665 3077 0
1347 1667 3075 0
1347 1669 3073 0
1347 1671 3071 0
1347 1673 3069 0
1347 1675 3067 0
1347 1677 3065 0
1347 1679 3063 0
1347 1681 3061 0
1347 1683 3059 0
1347 1685 3057 0
1347 1687 3055 0
1347 1689 3053 0
1347 1691 3051 0
1347 1693 3049 0
1347 1695 3047 0
1347 1697 3045 0
1349 3171 0
1349 1572 3169 0
1349 1573 3167 0
1349 1575 3165 0
1349 1577 3163 0
1349 1579 3161 0
1349 1581 3159 0
1349 1583 3157 0
1349 1585 3155 0
1349 1587 3153 0
1349 1589 3151 0
1349 1591 3149 0
1349 1593 3147 0
1349 1595 3145 0
1349 1597 3143 0
1349 1599 3141 0
1349 1601 3139 0
1349 1603 3137 0
1349 1605 3135 0
1349 1607 3133 0
1349 1609 3131 0
1349 1611 3129 0
1349 1613 3127 0
1349 1615 3125 0
1349 1617 3123 0
1349 1619 3121 0
1349 1621 3119 0
1349 1623 3117 0
1349 1625 3115 0
1349 1627 3113 0
1349 1629 3111 0
1349 1631 3109 0
1349 1633 3107 0
1349 1635 3105 0
1349 1637 3103 0
1349 1639 3101 0
1349 1641 3099 0
1349 1643 3097 0
1349 1645 3095 0
1349 1647 3093 0
1349 1649 3091 0
1349 1651 3089 0
1349 1653 3087 0
1349 1655 3085 0
1349 1657 3083 0
1349 1659 3081 0
1349 1661 3079 0
1349 1663 3077 0
1349 1665 3075 0
1349 1667 3073 0
1349 1669 3071 0
1349 1671 3069 0
1349 1673 3067 0
1349 1675 3065 0
1349 1677 3063 0
1349 1679 3061 0
1349 1681 3059 0
1349 1683 3057 0
1349 1685 3055 0
1349 1687 3053 0
1349 1689 3051 0
1349 1691 3049 0
1349 1693 3047 0
1349 1695 3045 0
1349 1697 3043 0
1351 3169 0
1351 1572 3167 0
1351 1573 3165 0
1351 1575 3163 0
1351 1577 3161 0
1351 1579 3159 0
1351 1581 3157 0
1351 1583 3155 0
1351 1585 3153 0
1351 1587 3151 0
1351 1589 3149 0
1351 1591 3147 0
1351 1593 3145 0
1351 1595 3143 0
1351 1597 3141 0
1351 1599 3139 0
1351 1601 3137 0
1351 1603 3135 0
1351 1605 3133 0
1351 1607 3131 0
1351 1609 3129 0
1351 1611 3127 0
1351 1613 3125 0
1351 1615 3123 0
1351 1617 3121 0
1351 1619 3119 0
1351 1621 3117 0
1351 1623 3115 0
1351 1625 3113 0
1351 1627 3111 0
1351 1629 3109 0
1351 1631 3107 0
1351 1633 3105 0
1351 1635 3103 0
1351 1637 3101 0
1351 1639 3099 0
1351 1641 3097 0
1351 1643 3095 0
1351 1645 3093 0
1351 1647 3091 0
1351 1649 3089 0
1351 1651 3087 0
1351 1653 3085 0
1351 1655 3083 0
1351 1657 3081 0
1351 1659 3079 0
1351 1661 3077 0
1351 1663 3075 0
1351 1665 3073 0
1351 1667 3071 0
1351 1669 3069 0
1351 1671 3067 0
1351 1673 3065 0
1351 1675 3063 0
1351 1677 3061 0
1351 1679 3059 0
1351 1681 3057 0
1351 1683 3055 0
1351 1685 3053 0
1351 1687 3051 0
1351 1689 3049 0
1351 1691 3047 0
1351 1693 3045 0
1351 1695 3043 0
1351 1697 3041 0
1353 3167 0
1353 1572 3165 0
1353 1573 3163 0
1353 1575 3161 0
1353 1577 3159 0
1353 1579 3157 0
1353 1581 3155 0
1353 1583 3153 0
1353 1585 3151 0
1353 1587 3149 0
1353 1589 3147 0
1353 1591 3145 0
1353 1593 3143 0
1353 1595 3141 0
1353 1597 3139 0
1353 1599 3137 0
1353 1601 3135 0
1353 1603 3133 0
1353 1605 3131 0
1353 1607 3129 0
1353 1609 3127 0
1353 1611 3125 0
1353 1613 3123 0
1353 1615 3121 0
1353 1617 3119 0
1353 1619 3117 0
1353 1621 3115 0
1353 1623 3113 0
1353 1625 3111 0
1353 1627 3109 0
1353 1629 3107 0
1353 1631 3105 0
1353 1633 3103 0
1353 1635 3101 0
1353 1637 3099 0
1353 1639 3097 0
1353 1641 3095 0
1353 1643 3093 0
1353 1645 3091 0
1353 1647 3089 0
1353 1649 3087 0
1353 1651 3085 0
1353 1653 3083 0
1353 1655 3081 0
1353 1657 3079 0
1353 1659 3077 0
1353 1661 3075 0
1353 1663 3073 0
1353 1665 3071 0
1353 1667 3069 0
1353 1669 3067 0
1353 1671 3065 0
1353 1673 3063 0
1353 1675 3061 0
1353 1677 3059 0
1353 1679 3057 0
1353 1681 3055 0
1353 1683 3053 0
1353 1685 3051 0
1353 1687 3049 0
1353 1689 3047 0
1353 1691 3045 0
1353 1693 3043 0
1353 1695 3041 0
1353 1697 3039 0
1355 3165 0
1355 1572 3163 0
1355 1573 3161 0
1355 1575 3159 0
1355 1577 3157 0
1355 1579 3155 0
1355 1581 3153 0
1355 1583 3151 0
1355 1585 3149 0
1355 1587 3147 0
1355 1589 3145 0
1355 1591 3143 0
1355 1593 3141 0
1355 1595 3139 0
1355 1597 3137 0
1355 1599 3135 0
1355 1601 3133 0
1355 1603 3131 0
1355 1605 3129 0
1355 1607 3127 0
1355 1609 3125 0
1355 1611 3123 0
1355 1613 3121 0
1355 1615 3119 0
1355 1617 3117 0
1355 1619 3115 0
1355 1621 3113 0
1355 1623 3111 0
1355 1625 3109 0
1355 1627 3107 0
1355 1629 3105 0
1355 1631 3103 0
1355 1633 3101 0
1355 1635 3099 0
1355 1637 3097 0
1355 1639 3095 0
1355 1641 3093 0
1355 1643 3091 0
1355 1645 3089 0
1355 1647 3087 0
1355 1649 3085 0
1355 1651 3083 0
1355 1653 3081 0
1355 1655 3079 0
1355 1657 3077 0
1355 1659 3075 0
1355 1661 3073 0
1355 1663 3071 0
1355 1665 3069 0
1355 1667 3067 0
1355 1669 3065 0
1355 1671 3063 0
1355 1673 3061 0
1355 1675 3059 0
1355 1677 3057 0
1355 1679 3055 0
1355 1681 3053 0
1355 1683 3051 0
1355 1685 3049 0
1355 1687 3047 0
1355 1689 3045 0
1355 1691 3043 0
1355 1693 3041 0
1355 1695 3039 0
1355 1697 3037 0
1357 3163 0
1357 1572 3161 0
1357 1573 3159 0
1357 1575 3157 0
1357 1577 3155 0
1357 1579 3153 0
1357 1581 3151 0
1357 1583 3149 0
1357 1585 3147 0
1357 1587 3145 0
1357 1589 3143 0
1357 1591 3141 0
1357 1593 3139 0
1357 1595 3137 0
1357 1597 3135 0
1357 1599 3133 0
1357 1601 3131 0
1357 1603 3129 0
1357 1605 3127 0
1357 1607 3125 0
1357 1609 3123 0
1357 1611 3121 0
1357 1613 3119 0
1357 1615 3117 0
1357 1617 3115 0
1357 1619 3113 0
1357 1621 3111 0
1357 1623 3109 0
1357 1625 3107 0
1357 1627 3105 0
1357 1629 3103 0
1357 1631 3101 0
1357 1633 3099 0
1357 1635 3097 0
1357 1637 3095 0
1357 1639 3093 0
1357 1641 3091 0
1357 1643 3089 0
1357 1645 3087 0
1357 1647 3085 0
1357 1649 3083 0
1357 1651 3081 0
1357 1653 3079 0
1357 1655 3077 0
1357 1657 3075 0
1357 1659 3073 0
1357 1661 3071 0
1357 1663 3069 0
1357 1665 3067 0
1357 1667 3065 0
1357 1669 3063 0
1357 1671 3061 0
1357 1673 3059 0
1357 1675 3057 0
1357 1677 3055 0
1357 1679 3053 0
1357 1681 3051 0
1357 1683 3049 0
1357 1685 3047 0
1357 1687 3045 0
1357 1689 3043 0
1357 1691 3041 0
1357 1693 3039 0
1357 1695 3037 0
1357 1697 3035 0
1359 3161 0
1359 1572 3159 0
1359 1573 3157 0
1359 1575 3155 0
1359 1577 3153 0
1359 1579 3151 0
1359 1581 3149 0
1359 1583 3147 0
1359 1585 3145 0
1359 1587 3143 0
1359 1589 3141 0
1359 1591 3139 0
1359 1593 3137 0
1359 1595 3135 0
1359 1597 3133 0
1359 1599 3131 0
1359 1601 3129 0
1359 1603 3127 0
1359 1605 3125 0
1359 1607 3123 0
1359 1609 3121 0
1359 1611 3119 0
1359 1613 3117 0
1359 1615 3115 0
1359 1617 3113 0
1359 1619 3111 0
1359 1621 3109 0
1359 1623 3107 0
1359 1625 3105 0
1359 1627 3103 0
1359 1629 3101 0
1359 1631 3099 0
1359 1633 3097 0
1359 1635 3095 0
1359 1637 3093 0
1359 1639 3091 0
1359 1641 3089 0
1359 1643 3087 0
1359 1645 3085 0
1359 1647 3083 0
1359 1649 3081 0
1359 1651 3079 0
1359 1653 3077 0
1359 1655 3075 0
1359 1657 3073 0
1359 1659 3071 0
1359 1661 3069 0
1359 1663 3067 0
1359 1665 3065 0
1359 1667 3063 0
1359 1669 3061 0
1359 1671 3059 0
1359 1673 3057 0
1359 1675 3055 0
1359 1677 3053 0
1359 1679 3051 0
1359 1681 3049 0
1359 1683 3047 0
1359 1685 3045 0
1359 1687 3043 0
1359 1689 3041 0
1359 1691 3039 0
1359 1693 3037 0
1359 1695 3035 0
1359 1697 3033 0
1361 3159 0
1361 1572 3157 0
1361 1573 3155 0
1361 1575 3153 0
1361 1577 3151 0
1361 1579 3149 0
1361 1581 3147 0
1361 1583 3145 0
1361 1585 3143 0
1361 1587 3141 0
1361 1589 3139 0
1361 1591 3137 0
1361 1593 3135 0
1361 1595 3133 0
1361 1597 3131 0
1361 1599 3129 0
1361 1601 3127 0
1361 1603 3125 0
1361 1605 3123 0
1361 1607 3121 0
1361 1609 3119 0
1361 1611 3117 0
1361 1613 3115 0
1361 1615 3113 0
1361 1617 3111 0
1361 1619 3109 0
1361 1621 3107 0
1361 1623 3105 0
1361 1625 3103 0
1361 1627 3101 0
1361 1629 3099 0
1361 1631 3097 0
1361 1633 3095 0
1361 1635 3093 0
1361 1637 3091 0
1361 1639 3089 0
1361 1641 3087 0
1361 1643 3085 0
1361 1645 3083 0
1361 1647 3081 0
1361 1649 3079 0
1361 1651 3077 0
1361 1653 3075 0
1361 1655 3073 0
1361 1657 3071 0
1361 1659 3069 0
1361 1661 3067 0
1361 1663 3065 0
1361 1665 3063 0
1361 1667 3061 0
1361 1669 3059 0
1361 1671 3057 0
1361 1673 3055 0
1361 1675 3053 0
1361 1677 3051 0
1361 1679 3049 0
1361 1681 3047 0
1361 1683 3045 0
1361 1685 3043 0
1361 1687 3041 0
1361 1689 3039 0
1361 1691 3037 0
1361 1693 3035 0
1361 1695 3033 0
1361 1697 3031 0
1363 3157 0
1363 1572 3155 0
1363 1573 3153 0
1363 1575 3151 0
1363 1577 3149 0
1363 1579 3147 0
1363 1581 3145 0
1363 1583 3143 0
1363 1585 3141 0
1363 1587 3139 0
1363 1589 3137 0
1363 1591 3135 0
1363 1593 3133 0
1363 1595 3131 0
1363 1597 3129 0
1363 1599 3127 0
1363 1601 3125 0
1363 1603 3123 0
1363 1605 3121 0
1363 1607 3119 0
1363 1609 3117 0
1363 1611 3115 0
1363 1613 3113 0
1363 1615 3111 0
1363 1617 3109 0
1363 1619 3107 0
1363 1621 3105 0
1363 1623 3103 0
1363 1625 3101 0
1363 1627 3099 0
1363 1629 3097 0
1363 1631 3095 0
1363 1633 3093 0
1363 1635 3091 0
1363 1637 3089 0
1363 1639 3087 0
1363 1641 3085 0
1363 1643 3083 0
1363 1645 3081 0
1363 1647 3079 0
1363 1649 3077 0
1363 1651 3075 0
1363 1653 3073 0
1363 1655 3071 0
1363 1657 3069 0
1363 1659 3067 0
1363 1661 3065 0
1363 1663 3063 0
1363 1665 3061 0
1363 1667 3059 0
1363 1669 3057 0
1363 1671 3055 0
1363 1673 3053 0
1363 1675 3051 0
1363 1677 3049 0
1363 1679 3047 0
1363 1681 3045 0
1363 1683 3043 0
1363 1685 3041 0
1363 1687 3039 0
1363 1689 3037 0
1363 1691 3035 0
1363 1693 3033 0
1363 1695 3031 0
1363 1697 3029 0
1365 3155 0
1365 1572 3153 0
1365 1573 3151 0
1365 1575 3149 0
1365 1577 3147 0
1365 1579 3145 0
1365 1581 3143 0
1365 1583 3141 0
1365 1585 3139 0
1365 1587 3137 0
1365 1589 3135 0
1365 1591 3133 0
1365 1593 3131 0
1365 1595 3129 0
1365 1597 3127 0
1365 1599 3125 0
1365 1601 3123 0
1365 1603 3121 0
1365 1605 3119 0
1365 1607 3117 0
1365 1609 3115 0
1365 1611 3113 0
1365 1613 3111 0
1365 1615 3109 0
1365 1617 3107 0
1365 1619 3105 0
1365 1621 3103 0
1365 1623 3101 0
1365 1625 3099 0
1365 1627 3097 0
1365 1629 3095 0
1365 1631 3093 0
1365 1633 3091 0
1365 1635 3089 0
1365 1637 3087 0
1365 1639 3085 0
1365 1641 3083 0
1365 1643 3081 0
1365 1645 3079 0
1365 1647 3077 0
1365 1649 3075 0
1365 1651 3073 0
1365 1653 3071 0
1365 1655 3069 0
1365 1657 3067 0
1365 1659 3065 0
1365 1661 3063 0
1365 1663 3061 0
1365 1665 3059 0
1365 1667 3057 0
1365 1669 3055 0
1365 1671 3053 0
1365 1673 3051 0
1365 1675 3049 0
1365 1677 3047 0
1365 1679 3045 0
1365 1681 3043 0
1365 1683 3041 0
1365 1685 3039 0
1365 1687 3037 0
1365 1689 3035 0
1365 1691 3033 0
1365 1693 3031 0
1365 1695 3029 0
1365 1697 3027 0
1367 3153 0
1367 1572 3151 0
1367 1573 3149 0
1367 1575 3147 0
1367 1577 3145 0
1367 1579 3143 0
1367 1581 3141 0
1367 1583 3139 0
1367 1585 3137 0
1367 1587 3135 0
1367 1589 3133 0
1367 1591 3131 0
1367 1593 3129 0
1367 1595 3127 0
1367 1597 3125 0
1367 1599 3123 0
1367 1601 3121 0
1367 1603 3119 0
1367 1605 3117 0
1367 1607 3115 0
1367 1609 3113 0
1367 1611 3111 0
1367 1613 3109 0
1367 1615 3107 0
1367 1617 3105 0
1367 1619 3103 0
1367 1621 3101 0
1367 1623 3099 0
1367 1625 3097 0
1367 1627 3095 0
1367 1629 3093 0
1367 1631 3091 0
1367 1633 3089 0
1367 1635 3087 0
1367 1637 3085 0
1367 1639 3083 0
1367 1641 3081 0
1367 1643 3079 0
1367 1645 3077 0
1367 1647 3075 0
1367 1649 3073 0
1367 1651 3071 0
1367 1653 3069 0
1367 1655 3067 0
1367 1657 3065 0
1367 1659 3063 0
1367 1661 3061 0
1367 1663 3059 0
1367 1665 3057 0
1367 1667 3055 0
1367 1669 3053 0
1367 1671 3051 0
1367 1673 3049 0
1367 1675 3047 0
1367 1677 3045 0
1367 1679 3043 0
1367 1681 3041 0
1367 1683 3039 0
1367 1685 3037 0
1367 1687 3035 0
1367 1689 3033 0
1367 1691 3031 0
1367 1693 3029 0
1367 1695 3027 0
1367 1697 3025 0
1369 3151 0
1369 1572 3149 0
1369 1573 3147 0
1369 1575 3145 0
1369 1577 3143 0
1369 1579 3141 0
1369 1581 3139 0
1369 1583 3137 0
1369 1585 3135 0
1369 1587 3133 0
1369 1589 3131 0
1369 1591 3129 0
1369 1593 3127 0
1369 1595 3125 0
1369 1597 3123 0
1369 1599 3121 0
1369 1601 3119 0
1369 1603 3117 0
1369 1605 3115 0
1369 1607 3113 0
1369 1609 3111 0
1369 1611 3109 0
1369 1613 3107 0
1369 1615 3105 0
1369 1617 3103 0
1369 1619 3101 0
1369 1621 3099 0
1369 1623 3097 0
1369 1625 3095 0
1369 1627 3093 0
1369 1629 3091 0
1369 1631 3089 0
1369 1633 3087 0
1369 1635 3085 0
1369 1637 3083 0
1369 1639 3081 0
1369 1641 3079 0
1369 1643 3077 0
1369 1645 3075 0
1369 1647 3073 0
1369 1649 3071 0
1369 1651 3069 0
1369 1653 3067 0
1369 1655 3065 0
1369 1657 3063 0
1369 1659 3061 0
1369 1661 3059 0
1369 1663 3057 0
1369 1665 3055 0
1369 1667 3053 0
1369 1669 3051 0
1369 1671 3049 0
1369 1673 3047 0
1369 1675 3045 0
1369 1677 3043 0
1369 1679 3041 0
1369 1681 3039 0
1369 1683 3037 0
1369 1685 3035 0
1369 1687 3033 0
1369 1689 3031 0
1369 1691 3029 0
1369 1693 3027 0
1369 1695 3025 0
1369 1697 3023 0
1371 3149 0
1371 1572 3147 0
1371 1573 3145 0
1371 1575 3143 0
1371 1577 3141 0
1371 1579 3139 0
1371 1581 3137 0
1371 1583 3135 0
1371 1585 3133 0
1371 1587 3131 0
1371 1589 3129 0
1371 1591 3127 0
1371 1593 3125 0
1371 1595 3123 0
1371 1597 3121 0
1371 1599 3119 0
1371 1601 3117 0
1371 1603 3115 0
1371 1605 3113 0
1371 1607 3111 0
1371 1609 3109 0
1371 1611 3107 0
1371 1613 3105 0
1371 1615 3103 0
1371 1617 3101 0
1371 1619 3099 0
1371 1621 3097 0
1371 1623 3095 0
1371 1625 3093 0
1371 1627 3091 0
1371 1629 3089 0
1371 1631 3087 0
1371 1633 3085 0
1371 1635 3083 0
1371 1637 3081 0
1371 1639 3079 0
1371 1641 3077 0
1371 1643 3075 0
1371 1645 3073 0
1371 1647 3071 0
1371 1649 3069 0
1371 1651 3067 0
1371 1653 3065 0
1371 1655 3063 0
1371 1657 3061 0
1371 1659 3059 0
1371 1661 3057 0
1371 1663 3055 0
1371 1665 3053 0
1371 1667 3051 0
1371 1669 3049 0
1371 1671 3047 0
1371 1673 3045 0
1371 1675 3043 0
1371 1677 3041 0
1371 1679 3039 0
1371 1681 3037 0
1371 1683 3035 0
1371 1685 3033 0
1371 1687 3031 0
1371 1689 3029 0
1371 1691 3027 0
1371 1693 3025 0
1371 1695 3023 0
1371 1697 3021 0
1373 3147 0
1373 1572 3145 0
1373 1573 3143 0
1373 1575 3141 0
1373 1577 3139 0
1373 1579 3137 0
1373 1581 3135 0
1373 1583 3133 0
1373 1585 3131 0
1373 1587 3129 0
1373 1589 3127 0
1373 1591 3125 0
1373 1593 3123 0
1373 1595 3121 0
1373 1597 3119 0
1373 1599 3117 0
1373 1601 3115 0
1373 1603 3113 0
1373 1605 3111 0
1373 1607 3109 0
1373 1609 3107 0
1373 1611 3105 0
1373 1613 3103 0
1373 1615 3101 0
1373 1617 3099 0
1373 1619 3097 0
1373 1621 3095 0
1373 1623 3093 0
1373 1625 3091 0
1373 1627 3089 0
1373 1629 3087 0
1373 1631 3085 0
1373 1633 3083 0
1373 1635 3081 0
1373 1637 3079 0
1373 1639 3077 0
1373 1641 3075 0
1373 1643 3073 0
1373 1645 3071 0
1373 1647 3069 0
1373 1649 3067 0
1373 1651 3065 0
1373 1653 3063 0
1373 1655 3061 0
1373 1657 3059 0
1373 1659 3057 0
1373 1661 3055 0
1373 1663 3053 0
1373 1665 3051 0
1373 1667 3049 0
1373 1669 3047 0
1373 1671 3045 0
1373 1673 3043 0
1373 1675 3041 0
1373 1677 3039 0
1373 1679 3037 0
1373 1681 3035 0
1373 1683 3033 0
1373 1685 3031 0
1373 1687 3029 0
1373 1689 3027 0
1373 1691 3025 0
1373 1693 3023 0
1373 1695 3021 0
1373 1697 3019 0
1375 3145 0
1375 1572 3143 0
1375 1573 3141 0
1375 1575 3139 0
1375 1577 3137 0
1375 1579 3135 0
1375 1581 3133 0
1375 1583 3131 0
1375 1585 3129 0
1375 1587 3127 0
1375 1589 3125 0
1375 1591 3123 0
1375 1593 3121 0
1375 1595 3119 0
1375 1597 3117 0
1375 1599 3115 0
1375 1601 3113 0
1375 1603 3111 0
1375 1605 3109 0
1375 1607 3107 0
1375 1609 3105 0
1375 1611 3103 0
1375 1613 3101 0
1375 1615 3099 0
1375 1617 3097 0
1375 1619 3095 0
1375 1621 3093 0
1375 1623 3091 0
1375 1625 3089 0
1375 1627 3087 0
1375 1629 3085 0
1375 1631 3083 0
1375 1633 3081 0
1375 1635 3079 0
1375 1637 3077 0
1375 1639 3075 0
1375 1641 3073 0
1375 1643 3071 0
1375 1645 3069 0
1375 1647 3067 0
1375 1649 3065 0
1375 1651 3063 0
1375 1653 3061 0
1375 1655 3059 0
1375 1657 3057 0
1375 1659 3055 0
1375 1661 3053 0
1375 1663 3051 0
1375 1665 3049 0
1375 1667 3047 0
1375 1669 3045 0
1375 1671 3043 0
1375 1673 3041 0
1375 1675 3039 0
1375 1677 3037 0
1375 1679 3035 0
1375 1681 3033 0
1375 1683 3031 0
1375 1685 3029 0
1375 1687 3027 0
1375 1689 3025 0
1375 1691 3023 0
1375 1693 3021 0
1375 1695 3019 0
1375 1697 3017 0
1377 3143 0
1377 1572 3141 0
1377 1573 3139 0
1377 1575 3137 0
1377 1577 3135 0
1377 1579 3133 0
1377 1581 3131 0
1377 1583 3129 0
1377 1585 3127 0
1377 1587 3125 0
1377 1589 3123 0
1377 1591 3121 0
1377 1593 3119 0
1377 1595 3117 0
1377 1597 3115 0
1377 1599 3113 0
1377 1601 3111 0
1377 1603 3109 0
1377 1605 3107 0
1377 1607 3105 0
1377 1609 3103 0
1377 1611 3101 0
1377 1613 3099 0
1377 1615 3097 0
1377 1617 3095 0
1377 1619 3093 0
1377 1621 3091 0
1377 1623 3089 0
1377 1625 3087 0
1377 1627 3085 0
1377 1629 3083 0
1377 1631 3081 0
1377 1633 3079 0
1377 1635 3077 0
1377 1637 3075 0
1377 1639 3073 0
1377 1641 3071 0
1377 1643 3069 0
1377 1645 3067 0
1377 1647 3065 0
1377 1649 3063 0
1377 1651 3061 0
1377 1653 3059 0
1377 1655 3057 0
1377 1657 3055 0
1377 1659 3053 0
1377 1661 3051 0
1377 1663 3049 0
1377 1665 3047 0
1377 1667 3045 0
1377 1669 3043 0
1377 1671 3041 0
1377 1673 3039 0
1377 1675 3037 0
1377 1677 3035 0
1377 1679 3033 0
1377 1681 3031 0
1377 1683 3029 0
1377 1685 3027 0
1377 1687 3025 0
1377 1689 3023 0
1377 1691 3021 0
1377 1693 3019 0
1377 1695 3017 0
1377 1697 3015 0
1379 3141 0
1379 1572 3139 0
1379 1573 3137 0
1379 1575 3135 0
1379 1577 3133 0
1379 1579 3131 0
1379 1581 3129 0
1379 1583 3127 0
1379 1585 3125 0
1379 1587 3123 0
1379 1589 3121 0
1379 1591 3119 0
1379 1593 3117 0
1379 1595 3115 0
1379 1597 3113 0
1379 1599 3111 0
1379 1601 3109 0
1379 1603 3107 0
1379 1605 3105 0
1379 1607 3103 0
1379 1609 3101 0
1379 1611 3099 0
1379 1613 3097 0
1379 1615 3095 0
1379 1617 3093 0
1379 1619 3091 0
1379 1621 3089 0
1379 1623 3087 0
1379 1625 3085 0
1379 1627 3083 0
1379 1629 3081 0
1379 1631 3079 0
1379 1633 3077 0
1379 1635 3075 0
1379 1637 3073 0
1379 1639 3071 0
1379 1641 3069 0
1379 1643 3067 0
1379 1645 3065 0
1379 1647 3063 0
1379 1649 3061 0
1379 1651 3059 0
1379 1653 3057 0
1379 1655 3055 0
1379 1657 3053 0
1379 1659 3051 0
1379 1661 3049 0
1379 1663 3047 0
1379 1665 3045 0
1379 1667 3043 0
1379 1669 3041 0
1379 1671 3039 0
1379 1673 3037 0
1379 1675 3035 0
1379 1677 3033 0
1379 1679 3031 0
1379 1681 3029 0
1379 1683 3027 0
1379 1685 3025 0
1379 1687 3023 0
1379 1689 3021 0
1379 1691 3019 0
1379 1693 3017 0
1379 1695 3015 0
1379 1697 3013 0
1381 3139 0
1381 1572 3137 0
1381 1573 3135 0
1381 1575 3133 0
1381 1577 3131 0
1381 1579 3129 0
1381 1581 3127 0
1381 1583 3125 0
1381 1585 3123 0
1381 1587 3121 0
1381 1589 3119 0
1381 1591 3117 0
1381 1593 3115 0
1381 1595 3113 0
1381 1597 3111 0
1381 1599 3109 0
1381 1601 3107 0
1381 1603 3105 0
1381 1605 3103 0
1381 1607 3101 0
1381 1609 3099 0
1381 1611 3097 0
1381 1613 3095 0
1381 1615 3093 0
1381 1617 3091 0
1381 1619 3089 0
1381 1621 3087 0
1381 1623 3085 0
1381 1625 3083 0
1381 1627 3081 0
1381 1629 3079 0
1381 1631 3077 0
1381 1633 3075 0
1381 1635 3073 0
1381 1637 3071 0
1381 1639 3069 0
1381 1641 3067 0
1381 1643 3065 0
1381 1645 3063 0
1381 1647 3061 0
1381 1649 3059 0
1381 1651 3057 0
1381 1653 3055 0
1381 1655 3053 0
1381 1657 3051 0
1381 1659 3049 0
1381 1661 3047 0
1381 1663 3045 0
1381 1665 3043 0
1381 1667 3041 0
1381 1669 3039 0
1381 1671 3037 0
1381 1673 3035 0
1381 1675 3033 0
1381 1677 3031 0
1381 1679 3029 0
1381 1681 3027 0
1381 1683 3025 0
1381 1685 3023 0
1381 1687 3021 0
1381 1689 3019 0
1381 1691 3017 0
1381 1693 3015 0
1381 1695 3013 0
1381 1697 3011 0
1383 3137 0
1383 1572 3135 0
1383 1573 3133 0
1383 1575 3131 0
1383 1577 3129 0
1383 1579 3127 0
1383 1581 3125 0
1383 1583 3123 0
1383 1585 3121 0
1383 1587 3119 0
1383 1589 3117 0
1383 1591 3115 0
1383 1593 3113 0
1383 1595 3111 0
1383 1597 3109 0
1383 1599 3107 0
1383 1601 3105 0
1383 1603 3103 0
1383 1605 3101 0
1383 1607 3099 0
1383 1609 3097 0
1383 1611 3095 0
1383 1613 3093 0
1383 1615 3091 0
1383 1617 3089 0
1383 1619 3087 0
1383 1621 3085 0
1383 1623 3083 0
1383 1625 3081 0
1383 1627 3079 0
1383 1629 3077 0
1383 1631 3075 0
1383 1633 3073 0
1383 1635 3071 0
1383 1637 3069 0
1383 1639 3067 0
1383 1641 3065 0
1383 1643 3063 0
1383 1645 3061 0
1383 1647 3059 0
1383 1649 3057 0
1383 1651 3055 0
1383 1653 3053 0
1383 1655 3051 0
1383 1657 3049 0
1383 1659 3047 0
1383 1661 3045 0
1383 1663 3043 0
1383 1665 3041 0
1383 1667 3039 0
1383 1669 3037 0
1383 1671 3035 0
1383 1673 3033 0
1383 1675 3031 0
1383 1677 3029 0
1383 1679 3027 0
1383 1681 3025 0
1383 1683 3023 0
1383 1685 3021 0
1383 1687 3019 0
1383 1689 3017 0
1383 1691 3015 0
1383 1693 3013 0
1383 1695 3011 0
1383 1697 3009 0
1385 3135 0
1385 1572 3133 0
1385 1573 3131 0
1385 1575 3129 0
1385 1577 3127 0
1385 1579 3125 0
1385 1581 3123 0
1385 1583 3121 0
1385 1585 3119 0
1385 1587 3117 0
1385 1589 3115 0
1385 1591 3113 0
1385 1593 3111 0
1385 1595 3109 0
1385 1597 3107 0
1385 1599 3105 0
1385 1601 3103 0
1385 1603 3101 0
1385 1605 3099 0
1385 1607 3097 0
1385 1609 3095 0
1385 1611 3093 0
1385 1613 3091 0
1385 1615 3089 0
1385 1617 3087 0
1385 1619 3085 0
1385 1621 3083 0
1385 1623 3081 0
1385 1625 3079 0
1385 1627 3077 0
1385 1629 3075 0
1385 1631 3073 0
1385 1633 3071 0
1385 1635 3069 0
1385 1637 3067 0
1385 1639 3065 0
1385 1641 3063 0
1385 1643 3061 0
1385 1645 3059 0
1385 1647 3057 0
1385 1649 3055 0
1385 1651 3053 0
1385 1653 3051 0
1385 1655 3049 0
1385 1657 3047 0
1385 1659 3045 0
1385 1661 3043 0
1385 1663 3041 0
1385 1665 3039 0
1385 1667 3037 0
1385 1669 3035 0
1385 1671 3033 0
1385 1673 3031 0
1385 1675 3029 0
1385 1677 3027 0
1385 1679 3025 0
1385 1681 3023 0
1385 1683 3021 0
1385 1685 3019 0
1385 1687 3017 0
1385 1689 3015 0
1385 1691 3013 0
1385 1693 3011 0
1385 1695 3009 0
1385 1697 3007 0
1387 3133 0
1387 1572 3131 0
1387 1573 3129 0
1387 1575 3127 0
1387 1577 3125 0
1387 1579 3123 0
1387 1581 3121 0
1387 1583 3119 0
1387 1585 3117 0
1387 1587 3115 0
1387 1589 3113 0
1387 1591 3111 0
1387 1593 3109 0
1387 1595 3107 0
1387 1597 3105 0
1387 1599 3103 0
1387 1601 3101 0
1387 1603 3099 0
1387 1605 3097 0
1387 1607 3095 0
1387 1609 3093 0
1387 1611 3091 0
1387 1613 3089 0
1387 1615 3087 0
1387 1617 3085 0
1387 1619 3083 0
1387 1621 3081 0
1387 1623 3079 0
1387 1625 3077 0
1387 1627 3075 0
1387 1629 3073 0
1387 1631 3071 0
1387 1633 3069 0
1387 1635 3067 0
1387 1637 3065 0
1387 1639 3063 0
1387 1641 3061 0
1387 1643 3059 0
1387 1645 3057 0
1387 1647 3055 0
1387 1649 3053 0
1387 1651 3051 0
1387 1653 3049 0
1387 1655 3047 0
1387 1657 3045 0
1387 1659 3043 0
1387 1661 3041 0
1387 1663 3039 0
1387 1665 3037 0
1387 1667 3035 0
1387 1669 3033 0
1387 1671 3031 0
1387 1673 3029 0
1387 1675 3027 0
1387 1677 3025 0
1387 1679 3023 0
1387 1681 3021 0
1387 1683 3019 0
1387 1685 3017 0
1387 1687 3015 0
1387 1689 3013 0
1387 1691 3011 0
1387 1693 3009 0
1387 1695 3007 0
1387 1697 3005 0
1389 3131 0
1389 1572 3129 0
1389 1573 3127 0
1389 1575 3125 0
1389 1577 3123 0
1389 1579 3121 0
1389 1581 3119 0
1389 1583 3117 0
1389 1585 3115 0
1389 1587 3113 0
1389 1589 3111 0
1389 1591 3109 0
1389 1593 3107 0
1389 1595 3105 0
1389 1597 3103 0
1389 1599 3101 0
1389 1601 3099 0
1389 1603 3097 0
1389 1605 3095 0
1389 1607 3093 0
1389 1609 3091 0
1389 1611 3089 0
1389 1613 3087 0
1389 1615 3085 0
1389 1617 3083 0
1389 1619 3081 0
1389 1621 3079 0
1389 1623 3077 0
1389 1625 3075 0
1389 1627 3073 0
1389 1629 3071 0
1389 1631 3069 0
1389 1633 3067 0
1389 1635 3065 0
1389 1637 3063 0
1389 1639 3061 0
1389 1641 3059 0
1389 1643 3057 0
1389 1645 3055 0
1389 1647 3053 0
1389 1649 3051 0
1389 1651 3049 0
1389 1653 3047 0
1389 1655 3045 0
1389 1657 3043 0
1389 1659 3041 0
1389 1661 3039 0
1389 1663 3037 0
1389 1665 3035 0
1389 1667 3033 0
1389 1669 3031 0
1389 1671 3029 0
1389 1673 3027 0
1389 1675 3025 0
1389 1677 3023 0
1389 1679 3021 0
1389 1681 3019 0
1389 1683 3017 0
1389 1685 3015 0
1389 1687 3013 0
1389 1689 3011 0
1389 1691 3009 0
1389 1693 3007 0
1389 1695 3005 0
1389 1697 3003 0
1391 3129 0
1391 1572 3127 0
1391 1573 3125 0
1391 1575 3123 0
1391 1577 3121 0
1391 1579 3119 0
1391 1581 3117 0
1391 1583 3115 0
1391 1585 3113 0
1391 1587 3111 0
1391 1589 3109 0
1391 1591 3107 0
1391 1593 3105 0
1391 1595 3103 0
1391 1597 3101 0
1391 1599 3099 0
1391 1601 3097 0
1391 1603 3095 0
1391 1605 3093 0
1391 1607 3091 0
1391 1609 3089 0
1391 1611 3087 0
1391 1613 3085 0
1391 1615 3083 0
1391 1617 3081 0
1391 1619 3079 0
1391 1621 3077 0
1391 1623 3075 0
1391 1625 3073 0
1391 1627 3071 0
1391 1629 3069 0
1391 1631 3067 0
1391 1633 3065 0
1391 1635 3063 0
1391 1637 3061 0
1391 1639 3059 0
1391 1641 3057 0
1391 1643 3055 0
1391 1645 3053 0
1391 1647 3051 0
1391 1649 3049 0
1391 1651 3047 0
1391 1653 3045 0
1391 1655 3043 0
1391 1657 3041 0
1391 1659 3039 0
1391 1661 3037 0
1391 1663 3035 0
1391 1665 3033 0
1391 1667 3031 0
1391 1669 3029 0
1391 1671 3027 0
1391 1673 3025 0
1391 1675 3023 0
1391 1677 3021 0
1391 1679 3019 0
1391 1681 3017 0
1391 1683 3015 0
1391 1685 3013 0
1391 1687 3011 0
1391 1689 3009 0
1391 1691 3007 0
1391 1693 3005 0
1391 1695 3003 0
1391 1697 3001 0
1393 3127 0
1393 1572 3125 0
1393 1573 3123 0
1393 1575 3121 0
1393 1577 3119 0
1393 1579 3117 0
1393 1581 3115 0
1393 1583 3113 0
1393 1585 3111 0
1393 1587 3109 0
1393 1589 3107 0
1393 1591 3105 0
1393 1593 3103 0
1393 1595 3101 0
1393 1597 3099 0
1393 1599 3097 0
1393 1601 3095 0
1393 1603 3093 0
1393 1605 3091 0
1393 1607 3089 0
1393 1609 3087 0
1393 1611 3085 0
1393 1613 3083 0
1393 1615 3081 0
1393 1617 3079 0
1393 1619 3077 0
1393 1621 3075 0
1393 1623 3073 0
1393 1625 3071 0
1393 1627 3069 0
1393 1629 3067 0
1393 1631 3065 0
1393 1633 3063 0
1393 1635 3061 0
1393 1637 3059 0
1393 1639 3057 0
1393 1641 3055 0
1393 1643 3053 0
1393 1645 3051 0
1393 1647 3049 0
1393 1649 3047 0
1393 1651 3045 0
1393 1653 3043 0
1393 1655 3041 0
1393 1657 3039 0
1393 1659 3037 0
1393 1661 3035 0
1393 1663 3033 0
1393 1665 3031 0
1393 1667 3029 0
1393 1669 3027 0
1393 1671 3025 0
1393 1673 3023 0
1393 1675 3021 0
1393 1677 3019 0
1393 1679 3017 0
1393 1681 3015 0
1393 1683 3013 0
1393 1685 3011 0
1393 1687 3009 0
1393 1689 3007 0
1393 1691 3005 0
1393 1693 3003 0
1393 1695 3001 0
1393 1697 2999 0
1395 3125 0
1395 1572 3123 0
1395 1573 3121 0
1395 1575 3119 0
1395 1577 3117 0
1395 1579 3115 0
1395 1581 3113 0
1395 1583 3111 0
1395 1585 3109 0
1395 1587 3107 0
1395 1589 3105 0
1395 1591 3103 0
1395 1593 3101 0
1395 1595 3099 0
1395 1597 3097 0
1395 1599 3095 0
1395 1601 3093 0
1395 1603 3091 0
1395 1605 3089 0
1395 1607 3087 0
1395 1609 3085 0
1395 1611 3083 0
1395 1613 3081 0
1395 1615 3079 0
1395 1617 3077 0
1395 1619 3075 0
1395 1621 3073 0
1395 1623 3071 0
1395 1625 3069 0
1395 1627 3067 0
1395 1629 3065 0
1395 1631 3063 0
1395 1633 3061 0
1395 1635 3059 0
1395 1637 3057 0
1395 1639 3055 0
1395 1641 3053 0
1395 1643 3051 0
1395 1645 3049 0
1395 1647 3047 0
1395 1649 3045 0
1395 1651 3043 0
1395 1653 3041 0
1395 1655 3039 0
1395 1657 3037 0
1395 1659 3035 0
1395 1661 3033 0
1395 1663 3031 0
1395 1665 3029 0
1395 1667 3027 0
1395 1669 3025 0
1395 1671 3023 0
1395 1673 3021 0
1395 1675 3019 0
1395 1677 3017 0
1395 1679 3015 0
1395 1681 3013 0
1395 1683 3011 0
1395 1685 3009 0
1395 1687 3007 0
1395 1689 3005 0
1395 1691 3003 0
1395 1693 3001 0
1395 1695 2999 0
1395 1697 2997 0
1397 3123 0
1397 1572 3121 0
1397 1573 3119 0
1397 1575 3117 0
1397 1577 3115 0
1397 1579 3113 0
1397 1581 3111 0
1397 1583 3109 0
1397 1585 3107 0
1397 1587 3105 0
1397 1589 3103 0
1397 1591 3101 0
1397 1593 3099 0
1397 1595 3097 0
1397 1597 3095 0
1397 1599 3093 0
1397 1601 3091 0
1397 1603 3089 0
1397 1605 3087 0
1397 1607 3085 0
1397 1609 3083 0
1397 1611 3081 0
1397 1613 3079 0
1397 1615 3077 0
1397 1617 3075 0
1397 1619 3073 0
1397 1621 3071 0
1397 1623 3069 0
1397 1625 3067 0
1397 1627 3065 0
1397 1629 3063 0
1397 1631 3061 0
1397 1633 3059 0
1397 1635 3057 0
1397 1637 3055 0
1397 1639 3053 0
1397 1641 3051 0
1397 1643 3049 0
1397 1645 3047 0
1397 1647 3045 0
1397 1649 3043 0
1397 1651 3041 0
1397 1653 3039 0
1397 1655 3037 0
1397 1657 3035 0
1397 1659 3033 0
1397 1661 3031 0
1397 1663 3029 0
1397 1665 3027 0
1397 1667 3025 0
1397 1669 3023 0
1397 1671 3021 0
1397 1673 3019 0
1397 1675 3017 0
1397 1677 3015 0
1397 1679 3013 0
1397 1681 3011 0
1397 1683 3009 0
1397 1685 3007 0
1397 1687 3005 0
1397 1689 3003 0
1397 1691 3001 0
1397 1693 2999 0
1397 1695 2997 0
1397 1697 2995 0
1399 3121 0
1399 1572 3119 0
1399 1573 3117 0
1399 1575 3115 0
1399 1577 3113 0
1399 1579 3111 0
1399 1581 3109 0
1399 1583 3107 0
1399 1585 3105 0
1399 1587 3103 0
1399 1589 3101 0
1399 1591 3099 0
1399 1593 3097 0
1399 1595 3095 0
1399 1597 3093 0
1399 1599 3091 0
1399 1601 3089 0
1399 1603 3087 0
1399 1605 3085 0
1399 1607 3083 0
1399 1609 3081 0
1399 1611 3079 0
1399 1613 3077 0
1399 1615 3075 0
1399 1617 3073 0
1399 1619 3071 0
1399 1621 3069 0
1399 1623 3067 0
1399 1625 3065 0
1399 1627 3063 0
1399 1629 3061 0
1399 1631 3059 0
1399 1633 3057 0
1399 1635 3055 0
1399 1637 3053 0
1399 1639 3051 0
1399 1641 3049 0
1399 1643 3047 0
1399 1645 3045 0
1399 1647 3043 0
1399 1649 3041 0
1399 1651 3039 0
1399 1653 3037 0
1399 1655 3035 0
1399 1657 3033 0
1399 1659 3031 0
1399 1661 3029 0
1399 1663 3027 0
1399 1665 3025 0
1399 1667 3023 0
1399 1669 3021 0
1399 1671 3019 0
1399 1673 3017 0
1399 1675 3015 0
1399 1677 3013 0
1399 1679 3011 0
1399 1681 3009 0
1399 1683 3007 0
1399 1685 3005 0
1399 1687 3003 0
1399 1689 3001 0
1399 1691 2999 0
1399 1693 2997 0
1399 1695 2995 0
1399 1697 2993 0
1401 3119 0
1401 1572 3117 0
1401 1573 3115 0
1401 1575 3113 0
1401 1577 3111 0
1401 1579 3109 0
1401 1581 3107 0
1401 1583 3105 0
1401 1585 3103 0
1401 1587 3101 0
1401 1589 3099 0
1401 1591 3097 0
1401 1593 3095 0
1401 1595 3093 0
1401 1597 3091 0
1401 1599 3089 0
1401 1601 3087 0
1401 1603 3085 0
1401 1605 3083 0
1401 1607 3081 0
1401 1609 3079 0
1401 1611 3077 0
1401 1613 3075 0
1401 1615 3073 0
1401 1617 3071 0
1401 1619 3069 0
1401 1621 3067 0
1401 1623 3065 0
1401 1625 3063 0
1401 1627 3061 0
1401 1629 3059 0
1401 1631 3057 0
1401 1633 3055 0
1401 1635 3053 0
1401 1637 3051 0
1401 1639 3049 0
1401 1641 3047 0
1401 1643 3045 0
1401 1645 3043 0
1401 1647 3041 0
1401 1649 3039 0
1401 1651 3037 0
1401 1653 3035 0
1401 1655 3033 0
1401 1657 3031 0
1401 1659 3029 0
1401 1661 3027 0
1401 1663 3025 0
1401 1665 3023 0
1401 1667 3021 0
1401 1669 3019 0
1401 1671 3017 0
1401 1673 3015 0
1401 1675 3013 0
1401 1677 3011 0
1401 1679 3009 0
1401 1681 3007 0
1401 1683 3005 0
1401 1685 3003 0
1401 1687 3001 0
1401 1689 2999 0
1401 1691 2997 0
1401 1693 2995 0
1401 1695 2993 0
1401 1697 2991 0
1403 3117 0
1403 1572 3115 0
1403 1573 3113 0
1403 1575 3111 0
1403 1577 3109 0
1403 1579 3107 0
1403 1581 3105 0
1403 1583 3103 0
1403 1585 3101 0
1403 1587 3099 0
1403 1589 3097 0
1403 1591 3095 0
1403 1593 3093 0
1403 1595 3091 0
1403 1597 3089 0
1403 1599 3087 0
1403 1601 3085 0
1403 1603 3083 0
1403 1605 3081 0
1403 1607 3079 0
1403 1609 3077 0
1403 1611 3075 0
1403 1613 3073 0
1403 1615 3071 0
1403 1617 3069 0
1403 1619 3067 0
1403 1621 3065 0
1403 1623 3063 0
1403 1625 3061 0
1403 1627 3059 0
1403 1629 3057 0
1403 1631 3055 0
1403 1633 3053 0
1403 1635 3051 0
1403 1637 3049 0
1403 1639 3047 0
1403 1641 3045 0
1403 1643 3043 0
1403 1645 3041 0
1403 1647 3039 0
1403 1649 3037 0
1403 1651 3035 0
1403 1653 3033 0
1403 1655 3031 0
1403 1657 3029 0
1403 1659 3027 0
1403 1661 3025 0
1403 1663 3023 0
1403 1665 3021 0
1403 1667 3019 0
1403 1669 3017 0
1403 1671 3015 0
1403 1673 3013 0
1403 1675 3011 0
1403 1677 3009 0
1403 1679 3007 0
1403 1681 3005 0
1403 1683 3003 0
1403 1685 3001 0
1403 1687 2999 0
1403 1689 2997 0
1403 1691 2995 0
1403 1693 2993 0
1403 1695 2991 0
1403 1697 2989 0
1405 3115 0
1405 1572 3113 0
1405 1573 3111 0
1405 1575 3109 0
1405 1577 3107 0
1405 1579 3105 0
1405 1581 3103 0
1405 1583 3101 0
1405 1585 3099 0
1405 1587 3097 0
1405 1589 3095 0
1405 1591 3093 0
1405 1593 3091 0
1405 1595 3089 0
1405 1597 3087 0
1405 1599 3085 0
1405 1601 3083 0
1405 1603 3081 0
1405 1605 3079 0
1405 1607 3077 0
1405 1609 3075 0
1405 1611 3073 0
1405 1613 3071 0
1405 1615 3069 0
1405 1617 3067 0
1405 1619 3065 0
1405 1621 3063 0
1405 1623 3061 0
1405 1625 3059 0
1405 1627 3057 0
1405 1629 3055 0
1405 1631 3053 0
1405 1633 3051 0
1405 1635 3049 0
1405 1637 3047 0
1405 1639 3045 0
1405 1641 3043 0
1405 1643 3041 0
1405 1645 3039 0
1405 1647 3037 0
1405 1649 3035 0
1405 1651 3033 0
1405 1653 3031 0
1405 1655 3029 0
1405 1657 3027 0
1405 1659 3025 0
1405 1661 3023 0
1405 1663 3021 0
1405 1665 3019 0
1405 1667 3017 0
1405 1669 3015 0
1405 1671 3013 0
1405 1673 3011 0
1405 1675 3009 0
1405 1677 3007 0
1405 1679 3005 0
1405 1681 3003 0
1405 1683 3001 0
1405 1685 2999 0
1405 1687 2997 0
1405 1689 2995 0
1405 1691 2993 0
1405 1693 2991 0
1405 1695 2989 0
1405 1697 2987 0
1407 3113 0
1407 1572 3111 0
1407 1573 3109 0
1407 1575 3107 0
1407 1577 3105 0
1407 1579 3103 0
1407 1581 3101 0
1407 1583 3099 0
1407 1585 3097 0
1407 1587 3095 0
1407 1589 3093 0
1407 1591 3091 0
1407 1593 3089 0
1407 1595 3087 0
1407 1597 3085 0
1407 1599 3083 0
1407 1601 3081 0
1407 1603 3079 0
1407 1605 3077 0
1407 1607 3075 0
1407 1609 3073 0
1407 1611 3071 0
1407 1613 3069 0
1407 1615 3067 0
1407 1617 3065 0
1407 1619 3063 0
1407 1621 3061 0
1407 1623 3059 0
1407 1625 3057 0
1407 1627 3055 0
1407 1629 3053 0
1407 1631 3051 0
1407 1633 3049 0
1407 1635 3047 0
1407 1637 3045 0
1407 1639 3043 0
1407 1641 3041 0
1407 1643 3039 0
1407 1645 3037 0
1407 1647 3035 0
1407 1649 3033 0
1407 1651 3031 0
1407 1653 3029 0
1407 1655 3027 0
1407 1657 3025 0
1407 1659 3023 0
1407 1661 3021 0
1407 1663 3019 0
1407 1665 3017 0
1407 1667 3015 0
1407 1669 3013 0
1407 1671 3011 0
1407 1673 3009 0
1407 1675 3007 0
1407 1677 3005 0
1407 1679 3003 0
1407 1681 3001 0
1407 1683 2999 0
1407 1685 2997 0
1407 1687 2995 0
1407 1689 2993 0
1407 1691 2991 0
1407 1693 2989 0
1407 1695 2987 0
1407 1697 2985 0
1409 3111 0
1409 1572 3109 0
1409 1573 3107 0
1409 1575 3105 0
1409 1577 3103 0
1409 1579 3101 0
1409 1581 3099 0
1409 1583 3097 0
1409 1585 3095 0
1409 1587 3093 0
1409 1589 3091 0
1409 1591 3089 0
1409 1593 3087 0
1409 1595 3085 0
1409 1597 3083 0
1409 1599 3081 0
1409 1601 3079 0
1409 1603 3077 0
1409 1605 3075 0
1409 1607 3073 0
1409 1609 3071 0
1409 1611 3069 0
1409 1613 3067 0
1409 1615 3065 0
1409 1617 3063 0
1409 1619 3061 0
1409 1621 3059 0
1409 1623 3057 0
1409 1625 3055 0
1409 1627 3053 0
1409 1629 3051 0
1409 1631 3049 0
1409 1633 3047 0
1409 1635 3045 0
1409 1637 3043 0
1409 1639 3041 0
1409 1641 3039 0
1409 1643 3037 0
1409 1645 3035 0
1409 1647 3033 0
1409 1649 3031 0
1409 1651 3029 0
1409 1653 3027 0
1409 1655 3025 0
1409 1657 3023 0
1409 1659 3021 0
1409 1661 3019 0
1409 1663 3017 0
1409 1665 3015 0
1409 1667 3013 0
1409 1669 3011 0
1409 1671 3009 0
1409 1673 3007 0
1409 1675 3005 0
1409 1677 3003 0
1409 1679 3001 0
1409 1681 2999 0
1409 1683 2997 0
1409 1685 2995 0
1409 1687 2993 0
1409 1689 2991 0
1409 1691 2989 0
1409 1693 2987 0
1409 1695 2985 0
1409 1697 2983 0
1411 3109 0
1411 1572 3107 0
1411 1573 3105 0
1411 1575 3103 0
1411 1577 3101 0
1411 1579 3099 0
1411 1581 3097 0
1411 1583 3095 0
1411 1585 3093 0
1411 1587 3091 0
1411 1589 3089 0
1411 1591 3087 0
1411 1593 3085 0
1411 1595 3083 0
1411 1597 3081 0
1411 1599 3079 0
1411 1601 3077 0
1411 1603 3075 0
1411 1605 3073 0
1411 1607 3071 0
1411 1609 3069 0
1411 1611 3067 0
1411 1613 3065 0
1411 1615 3063 0
1411 1617 3061 0
1411 1619 3059 0
1411 1621 3057 0
1411 1623 3055 0
1411 1625 3053 0
1411 1627 3051 0
1411 1629 3049 0
1411 1631 3047 0
1411 1633 3045 0
1411 1635 3043 0
1411 1637 3041 0
1411 1639 3039 0
1411 1641 3037 0
1411 1643 3035 0
1411 1645 3033 0
1411 1647 3031 0
1411 1649 3029 0
1411 1651 3027 0
1411 1653 3025 0
1411 1655 3023 0
1411 1657 3021 0
1411 1659 3019 0
1411 1661 3017 0
1411 1663 3015 0
1411 1665 3013 0
1411 1667 3011 0
1411 1669 3009 0
1411 1671 3007 0
1411 1673 3005 0
1411 1675 3003 0
1411 1677 3001 0
1411 1679 2999 0
1411 1681 2997 0
1411 1683 2995 0
1411 1685 2993 0
1411 1687 2991 0
1411 1689 2989 0
1411 1691 2987 0
1411 1693 2985 0
1411 1695 2983 0
1411 1697 2981 0
1413 3107 0
1413 1572 3105 0
1413 1573 3103 0
1413 1575 3101 0
1413 1577 3099 0
1413 1579 3097 0
1413 1581 3095 0
1413 1583 3093 0
1413 1585 3091 0
1413 1587 3089 0
1413 1589 3087 0
1413 1591 3085 0
1413 1593 3083 0
1413 1595 3081 0
1413 1597 3079 0
1413 1599 3077 0
1413 1601 3075 0
1413 1603 3073 0
1413 1605 3071 0
1413 1607 3069 0
1413 1609 3067 0
1413 1611 3065 0
1413 1613 3063 0
1413 1615 3061 0
1413 1617 3059 0
1413 1619 3057 0
1413 1621 3055 0
1413 1623 3053 0
1413 1625 3051 0
1413 1627 3049 0
1413 1629 3047 0
1413 1631 3045 0
1413 1633 3043 0
1413 1635 3041 0
1413 1637 3039 0
1413 1639 3037 0
1413 1641 3035 0
1413 1643 3033 0
1413 1645 3031 0
1413 1647 3029 0
1413 1649 3027 0
1413 1651 3025 0
1413 1653 3023 0
1413 1655 3021 0
1413 1657 3019 0
1413 1659 3017 0
1413 1661 3015 0
1413 1663 3013 0
1413 1665 3011 0
1413 1667 3009 0
1413 1669 3007 0
1413 1671 3005 0
1413 1673 3003 0
1413 1675 3001 0
1413 1677 2999 0
1413 1679 2997 0
1413 1681 2995 0
1413 1683 2993 0
1413 1685 2991 0
1413 1687 2989 0
1413 1689 2987 0
1413 1691 2985 0
1413 1693 2983 0
1413 1695 2981 0
1413 1697 2979 0
1415 3105 0
1415 1572 3103 0
1415 1573 3101 0
1415 1575 3099 0
1415 1577 3097 0
1415 1579 3095 0
1415 1581 3093 0
1415 1583 3091 0
1415 1585 3089 0
1415 1587 3087 0
1415 1589 3085 0
1415 1591 3083 0
1415 1593 3081 0
1415 1595 3079 0
1415 1597 3077 0
1415 1599 3075 0
1415 1601 3073 0
1415 1603 3071 0
1415 1605 3069 0
1415 1607 3067 0
1415 1609 3065 0
1415 1611 3063 0
1415 1613 3061 0
1415 1615 3059 0
1415 1617 3057 0
1415 1619 3055 0
1415 1621 3053 0
1415 1623 3051 0
1415 1625 3049 0
1415 1627 3047 0
1415 1629 3045 0
1415 1631 3043 0
1415 1633 3041 0
1415 1635 3039 0
1415 1637 3037 0
1415 1639 3035 0
1415 1641 3033 0
1415 1643 3031 0
1415 1645 3029 0
1415 1647 3027 0
1415 1649 3025 0
1415 1651 3023 0
1415 1653 3021 0
1415 1655 3019 0
1415 1657 3017 0
1415 1659 3015 0
1415 1661 3013 0
1415 1663 3011 0
1415 1665 3009 0
1415 1667 3007 0
1415 1669 3005 0
1415 1671 3003 0
1415 1673 3001 0
1415 1675 2999 0
1415 1677 2997 0
1415 1679 2995 0
1415 1681 2993 0
1415 1683 2991 0
1415 1685 2989 0
1415 1687 2987 0
1415 1689 2985 0
1415 1691 2983 0
1415 1693 2981 0
1415 1695 2979 0
1415 1697 2977 0
1417 3103 0
1417 1572 3101 0
1417 1573 3099 0
1417 1575 3097 0
1417 1577 3095 0
1417 1579 3093 0
1417 1581 3091 0
1417 1583 3089 0
1417 1585 3087 0
1417 1587 3085 0
1417 1589 3083 0
1417 1591 3081 0
1417 1593 3079 0
1417 1595 3077 0
1417 1597 3075 0
1417 1599 3073 0
1417 1601 3071 0
1417 1603 3069 0
1417 1605 3067 0
1417 1607 3065 0
1417 1609 3063 0
1417 1611 3061 0
1417 1613 3059 0
1417 1615 3057 0
1417 1617 3055 0
1417 1619 3053 0
1417 1621 3051 0
1417 1623 3049 0
1417 1625 3047 0
1417 1627 3045 0
1417 1629 3043 0
1417 1631 3041 0
1417 1633 3039 0
1417 1635 3037 0
1417 1637 3035 0
1417 1639 3033 0
1417 1641 3031 0
1417 1643 3029 0
1417 1645 3027 0
1417 1647 3025 0
1417 1649 3023 0
1417 1651 3021 0
1417 1653 3019 0
1417 1655 3017 0
1417 1657 3015 0
1417 1659 3013 0
1417 1661 3011 0
1417 1663 3009 0
1417 1665 3007 0
1417 1667 3005 0
1417 1669 3003 0
1417 1671 3001 0
1417 1673 2999 0
1417 1675 2997 0
1417 1677 2995 0
1417 1679 2993 0
1417 1681 2991 0
1417 1683 2989 0
1417 1685 2987 0
1417 1687 2985 0
1417 1689 2983 0
1417 1691 2981 0
1417 1693 2979 0
1417 1695 2977 0
1417 1697 2975 0
1419 3101 0
1419 1572 3099 0
1419 1573 3097 0
1419 1575 3095 0
1419 1577 3093 0
1419 1579 3091 0
1419 1581 3089 0
1419 1583 3087 0
1419 1585 3085 0
1419 1587 3083 0
1419 1589 3081 0
1419 1591 3079 0
1419 1593 3077 0
1419 1595 3075 0
1419 1597 3073 0
1419 1599 3071 0
1419 1601 3069 0
1419 1603 3067 0
1419 1605 3065 0
1419 1607 3063 0
1419 1609 3061 0
1419 1611 3059 0
1419 1613 3057 0
1419 1615 3055 0
1419 1617 3053 0
1419 1619 3051 0
1419 1621 3049 0
1419 1623 3047 0
1419 1625 3045 0
1419 1627 3043 0
1419 1629 3041 0
1419 1631 3039 0
1419 1633 3037 0
1419 1635 3035 0
1419 1637 3033 0
1419 1639 3031 0
1419 1641 3029 0
1419 1643 3027 0
1419 1645 3025 0
1419 1647 3023 0
1419 1649 3021 0
1419 1651 3019 0
1419 1653 3017 0
1419 1655 3015 0
1419 1657 3013 0
1419 1659 3011 0
1419 1661 3009 0
1419 1663 3007 0
1419 1665 3005 0
1419 1667 3003 0
1419 1669 3001 0
1419 1671 2999 0
1419 1673 2997 0
1419 1675 2995 0
1419 1677 2993 0
1419 1679 2991 0
1419 1681 2989 0
1419 1683 2987 0
1419 1685 2985 0
1419 1687 2983 0
1419 1689 2981 0
1419 1691 2979 0
1419 1693 2977 0
1419 1695 2975 0
1419 1697 2973 0
1421 3099 0
1421 1572 3097 0
1421 1573 3095 0
1421 1575 3093 0
1421 1577 3091 0
1421 1579 3089 0
1421 1581 3087 0
1421 1583 3085 0
1421 1585 3083 0
1421 1587 3081 0
1421 1589 3079 0
1421 1591 3077 0
1421 1593 3075 0
1421 1595 3073 0
1421 1597 3071 0
1421 1599 3069 0
1421 1601 3067 0
1421 1603 3065 0
1421 1605 3063 0
1421 1607 3061 0
1421 1609 3059 0
1421 1611 3057 0
1421 1613 3055 0
1421 1615 3053 0
1421 1617 3051 0
1421 1619 3049 0
1421 1621 3047 0
1421 1623 3045 0
1421 1625 3043 0
1421 1627 3041 0
1421 1629 3039 0
1421 1631 3037 0
1421 1633 3035 0
1421 1635 3033 0
1421 1637 3031 0
1421 1639 3029 0
1421 1641 3027 0
1421 1643 3025 0
1421 1645 3023 0
1421 1647 3021 0
1421 1649 3019 0
1421 1651 3017 0
1421 1653 3015 0
1421 1655 3013 0
1421 1657 3011 0
1421 1659 3009 0
1421 1661 3007 0
1421 1663 3005 0
1421 1665 3003 0
1421 1667 3001 0
1421 1669 2999 0
1421 1671 2997 0
1421 1673 2995 0
1421 1675 2993 0
1421 1677 2991 0
1421 1679 2989 0
1421 1681 2987 0
1421 1683 2985 0
1421 1685 2983 0
1421 1687 2981 0
1421 1689 2979 0
1421 1691 2977 0
1421 1693 2975 0
1421 1695 2973 0
1421 1697 2971 0
1423 3097 0
1423 1572 3095 0
1423 1573 3093 0
1423 1575 3091 0
1423 1577 3089 0
1423 1579 3087 0
1423 1581 3085 0
1423 1583 3083 0
1423 1585 3081 0
1423 1587 3079 0
1423 1589 3077 0
1423 1591 3075 0
1423 1593 3073 0
1423 1595 3071 0
1423 1597 3069 0
1423 1599 3067 0
1423 1601 3065 0
1423 1603 3063 0
1423 1605 3061 0
1423 1607 3059 0
1423 1609 3057 0
1423 1611 3055 0
1423 1613 3053 0
1423 1615 3051 0
1423 1617 3049 0
1423 1619 3047 0
1423 1621 3045 0
1423 1623 3043 0
1423 1625 3041 0
1423 1627 3039 0
1423 1629 3037 0
1423 1631 3035 0
1423 1633 3033 0
1423 1635 3031 0
1423 1637 3029 0
1423 1639 3027 0
1423 1641 3025 0
1423 1643 3023 0
1423 1645 3021 0
1423 1647 3019 0
1423 1649 3017 0
1423 1651 3015 0
1423 1653 3013 0
1423 1655 3011 0
1423 1657 3009 0
1423 1659 3007 0
1423 1661 3005 0
1423 1663 3003 0
1423 1665 3001 0
1423 1667 2999 0
1423 1669 2997 0
1423 1671 2995 0
1423 1673 2993 0
1423 1675 2991 0
1423 1677 2989 0
1423 1679 2987 0
1423 1681 2985 0
1423 1683 2983 0
1423 1685 2981 0
1423 1687 2979 0
1423 1689 2977 0
1423 1691 2975 0
1423 1693 2973 0
1423 1695 2971 0
1423 1697 2969 0
1425 3095 0
1425 1572 3093 0
1425 1573 3091 0
1425 1575 3089 0
1425 1577 3087 0
1425 1579 3085 0
1425 1581 3083 0
1425 1583 3081 0
1425 1585 3079 0
1425 1587 3077 0
1425 1589 3075 0
1425 1591 3073 0
1425 1593 3071 0
1425 1595 3069 0
1425 1597 3067 0
1425 1599 3065 0
1425 1601 3063 0
1425 1603 3061 0
1425 1605 3059 0
1425 1607 3057 0
1425 1609 3055 0
1425 1611 3053 0
1425 1613 3051 0
1425 1615 3049 0
1425 1617 3047 0
1425 1619 3045 0
1425 1621 3043 0
1425 1623 3041 0
1425 1625 3039 0
1425 1627 3037 0
1425 1629 3035 0
1425 1631 3033 0
1425 1633 3031 0
1425 1635 3029 0
1425 1637 3027 0
1425 1639 3025 0
1425 1641 3023 0
1425 1643 3021 0
1425 1645 3019 0
1425 1647 3017 0
1425 1649 3015 0
1425 1651 3013 0
1425 1653 3011 0
1425 1655 3009 0
1425 1657 3007 0
1425 1659 3005 0
1425 1661 3003 0
1425 1663 3001 0
1425 1665 2999 0
1425 1667 2997 0
1425 1669 2995 0
1425 1671 2993 0
1425 1673 2991 0
1425 1675 2989 0
1425 1677 2987 0
1425 1679 2985 0
1425 1681 2983 0
1425 1683 2981 0
1425 1685 2979 0
1425 1687 2977 0
1425 1689 2975 0
1425 1691 2973 0
1425 1693 2971 0
1425 1695 2969 0
1425 1697 2967 0
1427 3093 0
1427 1572 3091 0
1427 1573 3089 0
1427 1575 3087 0
1427 1577 3085 0
1427 1579 3083 0
1427 1581 3081 0
1427 1583 3079 0
1427 1585 3077 0
1427 1587 3075 0
1427 1589 3073 0
1427 1591 3071 0
1427 1593 3069 0
1427 1595 3067 0
1427 1597 3065 0
1427 1599 3063 0
1427 1601 3061 0
1427 1603 3059 0
1427 1605 3057 0
1427 1607 3055 0
1427 1609 3053 0
1427 1611 3051 0
1427 1613 3049 0
1427 1615 3047 0
1427 1617 3045 0
1427 1619 3043 0
1427 1621 3041 0
1427 1623 3039 0
1427 1625 3037 0
1427 1627 3035 0
1427 1629 3033 0
1427 1631 3031 0
1427 1633 3029 0
1427 1635 3027 0
1427 1637 3025 0
1427 1639 3023 0
1427 1641 3021 0
1427 1643 3019 0
1427 1645 3017 0
1427 1647 3015 0
1427 1649 3013 0
1427 1651 3011 0
1427 1653 3009 0
1427 1655 3007 0
1427 1657 3005 0
1427 1659 3003 0
1427 1661 3001 0
1427 1663 2999 0
1427 1665 2997 0
1427 1667 2995 0
1427 1669 2993 0
1427 1671 2991 0
1427 1673 2989 0
1427 1675 2987 0
1427 1677 2985 0
1427 1679 2983 0
1427 1681 2981 0
1427 1683 2979 0
1427 1685 2977 0
1427 1687 2975 0
1427 1689 2973 0
1427 1691 2971 0
1427 1693 2969 0
1427 1695 2967 0
1427 1697 2965 0
1429 3091 0
1429 1572 3089 0
1429 1573 3087 0
1429 1575 3085 0
1429 1577 3083 0
1429 1579 3081 0
1429 1581 3079 0
1429 1583 3077 0
1429 1585 3075 0
1429 1587 3073 0
1429 1589 3071 0
1429 1591 3069 0
1429 1593 3067 0
1429 1595 3065 0
1429 1597 3063 0
1429 1599 3061 0
1429 1601 3059 0
1429 1603 3057 0
1429 1605 3055 0
1429 1607 3053 0
1429 1609 3051 0
1429 1611 3049 0
1429 1613 3047 0
1429 1615 3045 0
1429 1617 3043 0
1429 1619 3041 0
1429 1621 3039 0
1429 1623 3037 0
1429 1625 3035 0
1429 1627 3033 0
1429 1629 3031 0
1429 1631 3029 0
1429 1633 3027 0
1429 1635 3025 0
1429 1637 3023 0
1429 1639 3021 0
1429 1641 3019 0
1429 1643 3017 0
1429 1645 3015 0
1429 1647 3013 0
1429 1649 3011 0
1429 1651 3009 0
1429 1653 3007 0
1429 1655 3005 0
1429 1657 3003 0
1429 1659 3001 0
1429 1661 2999 0
1429 1663 2997 0
1429 1665 2995 0
1429 1667 2993 0
1429 1669 2991 0
1429 1671 2989 0
1429 1673 2987 0
1429 1675 2985 0
1429 1677 2983 0
1429 1679 2981 0
1429 1681 2979 0
1429 1683 2977 0
1429 1685 2975 0
1429 1687 2973 0
1429 1689 2971 0
1429 1691 2969 0
1429 1693 2967 0
1429 1695 2965 0
1429 1697 2963 0
1431 3089 0
1431 1572 3087 0
1431 1573 3085 0
1431 1575 3083 0
1431 1577 3081 0
1431 1579 3079 0
1431 1581 3077 0
1431 1583 3075 0
1431 1585 3073 0
1431 1587 3071 0
1431 1589 3069 0
1431 1591 3067 0
1431 1593 3065 0
1431 1595 3063 0
1431 1597 3061 0
1431 1599 3059 0
1431 1601 3057 0
1431 1603 3055 0
1431 1605 3053 0
1431 1607 3051 0
1431 1609 3049 0
1431 1611 3047 0
1431 1613 3045 0
1431 1615 3043 0
1431 1617 3041 0
1431 1619 3039 0
1431 1621 3037 0
1431 1623 3035 0
1431 1625 3033 0
1431 1627 3031 0
1431 1629 3029 0
1431 1631 3027 0
1431 1633 3025 0
1431 1635 3023 0
1431 1637 3021 0
1431 1639 3019 0
1431 1641 3017 0
1431 1643 3015 0
1431 1645 3013 0
1431 1647 3011 0
1431 1649 3009 0
1431 1651 3007 0
1431 1653 3005 0
1431 1655 3003 0
1431 1657 3001 0
1431 1659 2999 0
1431 1661 2997 0
1431 1663 2995 0
1431 1665 2993 0
1431 1667 2991 0
1431 1669 2989 0
1431 1671 2987 0
1431 1673 2985 0
1431 1675 2983 0
1431 1677 2981 0
1431 1679 2979 0
1431 1681 2977 0
1431 1683 2975 0
1431 1685 2973 0
1431 1687 2971 0
1431 1689 2969 0
1431 1691 2967 0
1431 1693 2965 0
1431 1695 2963 0
1431 1697 2961 0
1433 3087 0
1433 1572 3085 0
1433 1573 3083 0
1433 1575 3081 0
1433 1577 3079 0
1433 1579 3077 0
1433 1581 3075 0
1433 1583 3073 0
1433 1585 3071 0
1433 1587 3069 0
1433 1589 3067 0
1433 1591 3065 0
1433 1593 3063 0
1433 1595 3061 0
1433 1597 3059 0
1433 1599 3057 0
1433 1601 3055 0
1433 1603 3053 0
1433 1605 3051 0
1433 1607 3049 0
1433 1609 3047 0
1433 1611 3045 0
1433 1613 3043 0
1433 1615 3041 0
1433 1617 3039 0
1433 1619 3037 0
1433 1621 3035 0
1433 1623 3033 0
1433 1625 3031 0
1433 1627 3029 0
1433 1629 3027 0
1433 1631 3025 0
1433 1633 3023 0
1433 1635 3021 0
1433 1637 3019 0
1433 1639 3017 0
1433 1641 3015 0
1433 1643 3013 0
1433 1645 3011 0
1433 1647 3009 0
1433 1649 3007 0
1433 1651 3005 0
1433 1653 3003 0
1433 1655 3001 0
1433 1657 2999 0
1433 1659 2997 0
1433 1661 2995 0
1433 1663 2993 0
1433 1665 2991 0
1433 1667 2989 0
1433 1669 2987 0
1433 1671 2985 0
1433 1673 2983 0
1433 1675 2981 0
1433 1677 2979 0
1433 1679 2977 0
1433 1681 2975 0
1433 1683 2973 0
1433 1685 2971 0
1433 1687 2969 0
1433 1689 2967 0
1433 1691 2965 0
1433 1693 2963 0
1433 1695 2961 0
1433 1697 2959 0
1435 3085 0
1435 1572 3083 0
1435 1573 3081 0
1435 1575 3079 0
1435 1577 3077 0
1435 1579 3075 0
1435 1581 3073 0
1435 1583 3071 0
1435 1585 3069 0
1435 1587 3067 0
1435 1589 3065 0
1435 1591 3063 0
1435 1593 3061 0
1435 1595 3059 0
1435 1597 3057 0
1435 1599 3055 0
1435 1601 3053 0
1435 1603 3051 0
1435 1605 3049 0
1435 1607 3047 0
1435 1609 3045 0
1435 1611 3043 0
1435 1613 3041 0
1435 1615 3039 0
1435 1617 3037 0
1435 1619 3035 0
1435 1621 3033 0
1435 1623 3031 0
1435 1625 3029 0
1435 1627 3027 0
1435 1629 3025 0
1435 1631 3023 0
1435 1633 3021 0
1435 1635 3019 0
1435 1637 3017 0
1435 1639 3015 0
1435 1641 3013 0
1435 1643 3011 0
1435 1645 3009 0
1435 1647 3007 0
1435 1649 3005 0
1435 1651 3003 0
1435 1653 3001 0
1435 1655 2999 0
1435 1657 2997 0
1435 1659 2995 0
1435 1661 2993 0
1435 1663 2991 0
1435 1665 2989 0
1435 1667 2987 0
1435 1669 2985 0
1435 1671 2983 0
1435 1673 2981 0
1435 1675 2979 0
1435 1677 2977 0
1435 1679 2975 0
1435 1681 2973 0
1435 1683 2971 0
1435 1685 2969 0
1435 1687 2967 0
1435 1689 2965 0
1435 1691 2963 0
1435 1693 2961 0
1435 1695 2959 0
1435 1697 2957 0
1437 3083 0
1437 1572 3081 0
1437 1573 3079 0
1437 1575 3077 0
1437 1577 3075 0
1437 1579 3073 0
1437 1581 3071 0
1437 1583 3069 0
1437 1585 3067 0
1437 1587 3065 0
1437 1589 3063 0
1437 1591 3061 0
1437 1593 3059 0
1437 1595 3057 0
1437 1597 3055 0
1437 1599 3053 0
1437 1601 3051 0
1437 1603 3049 0
1437 1605 3047 0
1437 1607 3045 0
1437 1609 3043 0
1437 1611 3041 0
1437 1613 3039 0
1437 1615 3037 0
1437 1617 3035 0
1437 1619 3033 0
1437 1621 3031 0
1437 1623 3029 0
1437 1625 3027 0
1437 1627 3025 0
1437 1629 3023 0
1437 1631 3021 0
1437 1633 3019 0
1437 1635 3017 0
1437 1637 3015 0
1437 1639 3013 0
1437 1641 3011 0
1437 1643 3009 0
1437 1645 3007 0
1437 1647 3005 0
1437 1649 3003 0
1437 1651 3001 0
1437 1653 2999 0
1437 1655 2997 0
1437 1657 2995 0
1437 1659 2993 0
1437 1661 2991 0
1437 1663 2989 0
1437 1665 2987 0
1437 1667 2985 0
1437 1669 2983 0
1437 1671 2981 0
1437 1673 2979 0
1437 1675 2977 0
1437 1677 2975 0
1437 1679 2973 0
1437 1681 2971 0
1437 1683 2969 0
1437 1685 2967 0
1437 1687 2965 0
1437 1689 2963 0
1437 1691 2961 0
1437 1693 2959 0
1437 1695 2957 0
1437 1697 2955 0
1439 3081 0
1439 1572 3079 0
1439 1573 3077 0
1439 1575 3075 0
1439 1577 3073 0
1439 1579 3071 0
1439 1581 3069 0
1439 1583 3067 0
1439 1585 3065 0
1439 1587 3063 0
1439 1589 3061 0
1439 1591 3059 0
1439 1593 3057 0
1439 1595 3055 0
1439 1597 3053 0
1439 1599 3051 0
1439 1601 3049 0
1439 1603 3047 0
1439 1605 3045 0
1439 1607 3043 0
1439 1609 3041 0
1439 1611 3039 0
1439 1613 3037 0
1439 1615 3035 0
1439 1617 3033 0
1439 1619 3031 0
1439 1621 3029 0
1439 1623 3027 0
1439 1625 3025 0
1439 1627 3023 0
1439 1629 3021 0
1439 1631 3019 0
1439 1633 3017 0
1439 1635 3015 0
1439 1637 3013 0
1439 1639 3011 0
1439 1641 3009 0
1439 1643 3007 0
1439 1645 3005 0
1439 1647 3003 0
1439 1649 3001 0
1439 1651 2999 0
1439 1653 2997 0
1439 1655 2995 0
1439 1657 2993 0
1439 1659 2991 0
1439 1661 2989 0
1439 1663 2987 0
1439 1665 2985 0
1439 1667 2983 0
1439 1669 2981 0
1439 1671 2979 0
1439 1673 2977 0
1439 1675 2975 0
1439 1677 2973 0
1439 1679 2971 0
1439 1681 2969 0
1439 1683 2967 0
1439 1685 2965 0
1439 1687 2963 0
1439 1689 2961 0
1439 1691 2959 0
1439 1693 2957 0
1439 1695 2955 0
1439 1697 2953 0
1441 3079 0
1441 1572 3077 0
1441 1573 3075 0
1441 1575 3073 0
1441 1577 3071 0
1441 1579 3069 0
1441 1581 3067 0
1441 1583 3065 0
1441 1585 3063 0
1441 1587 3061 0
1441 1589 3059 0
1441 1591 3057 0
1441 1593 3055 0
1441 1595 3053 0
1441 1597 3051 0
1441 1599 3049 0
1441 1601 3047 0
1441 1603 3045 0
1441 1605 3043 0
1441 1607 3041 0
1441 1609 3039 0
1441 1611 3037 0
1441 1613 3035 0
1441 1615 3033 0
1441 1617 3031 0
1441 1619 3029 0
1441 1621 3027 0
1441 1623 3025 0
1441 1625 3023 0
1441 1627 3021 0
1441 1629 3019 0
1441 1631 3017 0
1441 1633 3015 0
1441 1635 3013 0
1441 1637 3011 0
1441 1639 3009 0
1441 1641 3007 0
1441 1643 3005 0
1441 1645 3003 0
1441 1647 3001 0
1441 1649 2999 0
1441 1651 2997 0
1441 1653 2995 0
1441 1655 2993 0
1441 1657 2991 0
1441 1659 2989 0
1441 1661 2987 0
1441 1663 2985 0
1441 1665 2983 0
1441 1667 2981 0
1441 1669 2979 0
1441 1671 2977 0
1441 1673 2975 0
1441 1675 2973 0
1441 1677 2971 0
1441 1679 2969 0
1441 1681 2967 0
1441 1683 2965 0
1441 1685 2963 0
1441 1687 2961 0
1441 1689 2959 0
1441 1691 2957 0
1441 1693 2955 0
1441 1695 2953 0
1441 1697 2951 0
1443 3077 0
1443 1572 3075 0
1443 1573 3073 0
1443 1575 3071 0
1443 1577 3069 0
1443 1579 3067 0
1443 1581 3065 0
1443 1583 3063 0
1443 1585 3061 0
1443 1587 3059 0
1443 1589 3057 0
1443 1591 3055 0
1443 1593 3053 0
1443 1595 3051 0
1443 1597 3049 0
1443 1599 3047 0
1443 1601 3045 0
1443 1603 3043 0
1443 1605 3041 0
1443 1607 3039 0
1443 1609 3037 0
1443 1611 3035 0
1443 1613 3033 0
1443 1615 3031 0
1443 1617 3029 0
1443 1619 3027 0
1443 1621 3025 0
1443 1623 3023 0
1443 1625 3021 0
1443 1627 3019 0
1443 1629 3017 0
1443 1631 3015 0
1443 1633 3013 0
1443 1635 3011 0
1443 1637 3009 0
1443 1639 3007 0
1443 1641 3005 0
1443 1643 3003 0
1443 1645 3001 0
1443 1647 2999 0
1443 1649 2997 0
1443 1651 2995 0
1443 1653 2993 0
1443 1655 2991 0
1443 1657 2989 0
1443 1659 2987 0
1443 1661 2985 0
1443 1663 2983 0
1443 1665 2981 0
1443 1667 2979 0
1443 1669 2977 0
1443 1671 2975 0
1443 1673 2973 0
1443 1675 2971 0
1443 1677 2969 0
1443 1679 2967 0
1443 1681 2965 0
1443 1683 2963 0
1443 1685 2961 0
1443 1687 2959 0
1443 1689 2957 0
1443 1691 2955 0
1443 1693 2953 0
1443 1695 2951 0
1443 1697 2950 0
c (( - aux406 + SATLiteral(461) + SATLiteral(468))<=0)
-468 -3205 0
-461 -3205 0
-461 -468 -3206 0
c (0<=( - aux406 + SATLiteral(461) + SATLiteral(468)))
468 3206 0
461 3206 0
461 468 3205 0
c (( - aux407 + SATLiteral(462) + SATLiteral(467))<=0)
-467 -3208 0
-462 -3208 0
-462 -467 -3209 0
c (0<=( - aux407 + SATLiteral(462) + SATLiteral(467)))
467 3209 0
462 3209 0
462 467 3208 0
c (( - aux408 + SATLiteral(464) + SATLiteral(466))<=0)
-466 -3211 0
-464 -3211 0
-464 -466 -3212 0
c (0<=( - aux408 + SATLiteral(464) + SATLiteral(466)))
466 3212 0
464 3212 0
464 466 3211 0
c (( - aux409 + SATLiteral(463) + SATLiteral(465))<=0)
-465 -3214 0
-463 -3214 0
-463 -465 -3215 0
c (0<=( - aux409 + SATLiteral(463) + SATLiteral(465)))
465 3215 0
463 3215 0
463 465 3214 0
c ((aux406 + aux409 - aux410)<=0)
3214 -3217 0
3215 -3218 0
3205 -3217 0
3205 3214 -3218 0
3205 3215 -3220 0
3206 -3218 0
3206 3214 -3220 0
3206 3215 -3222 0
c (0<=(aux406 + aux409 - aux410))
-3215 3222 0
-3214 3220 0
-3206 3222 0
-3206 -3215 3220 0
-3206 -3214 3218 0
-3205 3220 0
-3205 -3215 3218 0
-3205 -3214 3217 0
c ((SATLiteral(471) + SATLiteral(478) - aux411)<=0)
-478 -3224 0
-471 -3224 0
-471 -478 -3225 0
c (0<=(SATLiteral(471) + SATLiteral(478) - aux411))
478 3225 0
471 3225 0
471 478 3224 0
c ((SATLiteral(472) + SATLiteral(477) - aux412)<=0)
-477 -3227 0
-472 -3227 0
-472 -477 -3228 0
c (0<=(SATLiteral(472) + SATLiteral(477) - aux412))
477 3228 0
472 3228 0
472 477 3227 0
c ((SATLiteral(474) + SATLiteral(476) - aux413)<=0)
-476 -3230 0
-474 -3230 0
-474 -476 -3231 0
c (0<=(SATLiteral(474) + SATLiteral(476) - aux413))
476 3231 0
474 3231 0
474 476 3230 0
c ((SATLiteral(473) + SATLiteral(475) - aux414)<=0)
-475 -3233 0
-473 -3233 0
-473 -475 -3234 0
c (0<=(SATLiteral(473) + SATLiteral(475) - aux414))
475 3234 0
473 3234 0
473 475 3233 0
c ((aux411 + aux414 - aux415)<=0)
3233 -3236 0
3234 -3237 0
3224 -3236 0
3224 3233 -3237 0
3224 3234 -3239 0
3225 -3237 0
3225 3233 -3239 0
3225 3234 -3241 0
c (0<=(aux411 + aux414 - aux415))
-3234 3241 0
-3233 3239 0
-3225 3241 0
-3225 -3234 3239 0
-3225 -3233 3237 0
-3224 3239 0
-3224 -3234 3237 0
-3224 -3233 3236 0
c (( - aux416 + SATLiteral(481) + SATLiteral(488))<=0)
-488 -3243 0
-481 -3243 0
-481 -488 -3244 0
c (0<=( - aux416 + SATLiteral(481) + SATLiteral(488)))
488 3244 0
481 3244 0
481 488 3243 0
c (( - aux417 + SATLiteral(482) + SATLiteral(487))<=0)
-487 -3246 0
-482 -3246 0
-482 -487 -3247 0
c (0<=( - aux417 + SATLiteral(482) + SATLiteral(487)))
487 3247 0
482 3247 0
482 487 3246 0
c (( - aux418 + SATLiteral(484) + SATLiteral(486))<=0)
-486 -3249 0
-484 -3249 0
-484 -486 -3250 0
c (0<=( - aux418 + SATLiteral(484) + SATLiteral(486)))
486 3250 0
484 3250 0
484 486 3249 0
c (( - aux419 + SATLiteral(483) + SATLiteral(485))<=0)
-485 -3252 0
-483 -3252 0
-483 -485 -3253 0
c (0<=( - aux419 + SATLiteral(483) + SATLiteral(485)))
485 3253 0
483 3253 0
483 485 3252 0
c ((aux416 + aux419 - aux420)<=0)
3252 -3255 0
3253 -3256 0
3243 -3255 0
3243 3252 -3256 0
3243 3253 -3258 0
3244 -3256 0
3244 3252 -3258 0
3244 3253 -3260 0
c (0<=(aux416 + aux419 - aux420))
-3253 3260 0
-3252 3258 0
-3244 3260 0
-3244 -3253 3258 0
-3244 -3252 3256 0
-3243 3258 0
-3243 -3253 3256 0
-3243 -3252 3255 0
c (( - aux421 + SATLiteral(491) + SATLiteral(498))<=0)
-498 -3262 0
-491 -3262 0
-491 -498 -3263 0
c (0<=( - aux421 + SATLiteral(491) + SATLiteral(498)))
498 3263 0
491 3263 0
491 498 3262 0
c (( - aux422 + SATLiteral(492) + SATLiteral(497))<=0)
-497 -3265 0
-492 -3265 0
-492 -497 -3266 0
c (0<=( - aux422 + SATLiteral(492) + SATLiteral(497)))
497 3266 0
492 3266 0
492 497 3265 0
c (( - aux423 + SATLiteral(494) + SATLiteral(496))<=0)
-496 -3268 0
-494 -3268 0
-494 -496 -3269 0
c (0<=( - aux423 + SATLiteral(494) + SATLiteral(496)))
496 3269 0
494 3269 0
494 496 3268 0
c (( - aux424 + SATLiteral(493) + SATLiteral(495))<=0)
-495 -3271 0
-493 -3271 0
-493 -495 -3272 0
c (0<=( - aux424 + SATLiteral(493) + SATLiteral(495)))
495 3272 0
493 3272 0
493 495 3271 0
c ((aux421 + aux424 - aux425)<=0)
3271 -3274 0
3272 -3275 0
3262 -3274 0
3262 3271 -3275 0
3262 3272 -3277 0
3263 -3275 0
3263 3271 -3277 0
3263 3272 -3279 0
c (0<=(aux421 + aux424 - aux425))
-3272 3279 0
-3271 3277 0
-3263 3279 0
-3263 -3272 3277 0
-3263 -3271 3275 0
-3262 3277 0
-3262 -3272 3275 0
-3262 -3271 3274 0
c (( - aux426 + SATLiteral(501) + SATLiteral(508))<=0)
-508 -3281 0
-501 -3281 0
-501 -508 -3282 0
c (0<=( - aux426 + SATLiteral(501) + SATLiteral(508)))
508 3282 0
501 3282 0
501 508 3281 0
c (( - aux427 + SATLiteral(502) + SATLiteral(507))<=0)
-507 -3284 0
-502 -3284 0
-502 -507 -3285 0
c (0<=( - aux427 + SATLiteral(502) + SATLiteral(507)))
507 3285 0
502 3285 0
502 507 3284 0
c (( - aux428 + SATLiteral(504) + SATLiteral(506))<=0)
-506 -3287 0
-504 -3287 0
-504 -506 -3288 0
c (0<=( - aux428 + SATLiteral(504) + SATLiteral(506)))
506 3288 0
504 3288 0
504 506 3287 0
c (( - aux429 + SATLiteral(503) + SATLiteral(505))<=0)
-505 -3290 0
-503 -3290 0
-503 -505 -3291 0
c (0<=( - aux429 + SATLiteral(503) + SATLiteral(505)))
505 3291 0
503 3291 0
503 505 3290 0
c ((aux426 + aux429 - aux430)<=0)
3290 -3293 0
3291 -3294 0
3281 -3293 0
3281 3290 -3294 0
3281 3291 -3296 0
3282 -3294 0
3282 3290 -3296 0
3282 3291 -3298 0
c (0<=(aux426 + aux429 - aux430))
-3291 3298 0
-3290 3296 0
-3282 3298 0
-3282 -3291 3296 0
-3282 -3290 3294 0
-3281 3296 0
-3281 -3291 3294 0
-3281 -3290 3293 0
c (( - aux431 + SATLiteral(511) + SATLiteral(518))<=0)
-518 -3300 0
-511 -3300 0
-511 -518 -3301 0
c (0<=( - aux431 + SATLiteral(511) + SATLiteral(518)))
518 3301 0
511 3301 0
511 518 3300 0
c (( - aux432 + SATLiteral(512) + SATLiteral(517))<=0)
-517 -3303 0
-512 -3303 0
-512 -517 -3304 0
c (0<=( - aux432 + SATLiteral(512) + SATLiteral(517)))
517 3304 0
512 3304 0
512 517 3303 0
c (( - aux433 + SATLiteral(514) + SATLiteral(516))<=0)
-516 -3306 0
-514 -3306 0
-514 -516 -3307 0
c (0<=( - aux433 + SATLiteral(514) + SATLiteral(516)))
516 3307 0
514 3307 0
514 516 3306 0
c (( - aux434 + SATLiteral(513) + SATLiteral(515))<=0)
-515 -3309 0
-513 -3309 0
-513 -515 -3310 0
c (0<=( - aux434 + SATLiteral(513) + SATLiteral(515)))
515 3310 0
513 3310 0
513 515 3309 0
c ((aux431 + aux434 - aux435)<=0)
3309 -3312 0
3310 -3313 0
3300 -3312 0
3300 3309 -3313 0
3300 3310 -3315 0
3301 -3313 0
3301 3309 -3315 0
3301 3310 -3317 0
c (0<=(aux431 + aux434 - aux435))
-3310 3317 0
-3309 3315 0
-3301 3317 0
-3301 -3310 3315 0
-3301 -3309 3313 0
-3300 3315 0
-3300 -3310 3313 0
-3300 -3309 3312 0
c ((SATLiteral(521) + SATLiteral(528) - aux436)<=0)
-528 -3319 0
-521 -3319 0
-521 -528 -3320 0
c (0<=(SATLiteral(521) + SATLiteral(528) - aux436))
528 3320 0
521 3320 0
521 528 3319 0
c ((SATLiteral(522) + SATLiteral(527) - aux437)<=0)
-527 -3322 0
-522 -3322 0
-522 -527 -3323 0
c (0<=(SATLiteral(522) + SATLiteral(527) - aux437))
527 3323 0
522 3323 0
522 527 3322 0
c ((SATLiteral(524) + SATLiteral(526) - aux438)<=0)
-526 -3325 0
-524 -3325 0
-524 -526 -3326 0
c (0<=(SATLiteral(524) + SATLiteral(526) - aux438))
526 3326 0
524 3326 0
524 526 3325 0
c ((SATLiteral(523) + SATLiteral(525) - aux439)<=0)
-525 -3328 0
-523 -3328 0
-523 -525 -3329 0
c (0<=(SATLiteral(523) + SATLiteral(525) - aux439))
525 3329 0
523 3329 0
523 525 3328 0
c ((aux436 + aux439 - aux440)<=0)
3328 -3331 0
3329 -3332 0
3319 -3331 0
3319 3328 -3332 0
3319 3329 -3334 0
3320 -3332 0
3320 3328 -3334 0
3320 3329 -3336 0
c (0<=(aux436 + aux439 - aux440))
-3329 3336 0
-3328 3334 0
-3320 3336 0
-3320 -3329 3334 0
-3320 -3328 3332 0
-3319 3334 0
-3319 -3329 3332 0
-3319 -3328 3331 0
c (( - aux441 + SATLiteral(531) + SATLiteral(538))<=0)
-538 -3338 0
-531 -3338 0
-531 -538 -3339 0
c (0<=( - aux441 + SATLiteral(531) + SATLiteral(538)))
538 3339 0
531 3339 0
531 538 3338 0
c (( - aux442 + SATLiteral(532) + SATLiteral(537))<=0)
-537 -3341 0
-532 -3341 0
-532 -537 -3342 0
c (0<=( - aux442 + SATLiteral(532) + SATLiteral(537)))
537 3342 0
532 3342 0
532 537 3341 0
c (( - aux443 + SATLiteral(534) + SATLiteral(536))<=0)
-536 -3344 0
-534 -3344 0
-534 -536 -3345 0
c (0<=( - aux443 + SATLiteral(534) + SATLiteral(536)))
536 3345 0
534 3345 0
534 536 3344 0
c (( - aux444 + SATLiteral(533) + SATLiteral(535))<=0)
-535 -3347 0
-533 -3347 0
-533 -535 -3348 0
c (0<=( - aux444 + SATLiteral(533) + SATLiteral(535)))
535 3348 0
533 3348 0
533 535 3347 0
c ((aux441 + aux444 - aux445)<=0)
3347 -3350 0
3348 -3351 0
3338 -3350 0
3338 3347 -3351 0
3338 3348 -3353 0
3339 -3351 0
3339 3347 -3353 0
3339 3348 -3355 0
c (0<=(aux441 + aux444 - aux445))
-3348 3355 0
-3347 3353 0
-3339 3355 0
-3339 -3348 3353 0
-3339 -3347 3351 0
-3338 3353 0
-3338 -3348 3351 0
-3338 -3347 3350 0
c ((SATLiteral(471) - aux446 + SATLiteral(511))<=0)
-511 -3357 0
-471 -3357 0
-471 -511 -3358 0
c (0<=(SATLiteral(471) - aux446 + SATLiteral(511)))
511 3358 0
471 3358 0
471 511 3357 0
c ((SATLiteral(521) - aux447 + SATLiteral(461))<=0)
-461 -3360 0
-521 -3360 0
-521 -461 -3361 0
c (0<=(SATLiteral(521) - aux447 + SATLiteral(461)))
461 3361 0
521 3361 0
521 461 3360 0
c (( - aux448 + SATLiteral(531) + SATLiteral(501))<=0)
-501 -3363 0
-531 -3363 0
-531 -501 -3364 0
c (0<=( - aux448 + SATLiteral(531) + SATLiteral(501)))
501 3364 0
531 3364 0
531 501 3363 0
c (( - aux449 + SATLiteral(481) + SATLiteral(491))<=0)
-491 -3366 0
-481 -3366 0
-481 -491 -3367 0
c (0<=( - aux449 + SATLiteral(481) + SATLiteral(491)))
491 3367 0
481 3367 0
481 491 3366 0
c ((aux446 + aux449 - aux450)<=0)
3366 -3369 0
3367 -3370 0
3357 -3369 0
3357 3366 -3370 0
3357 3367 -3372 0
3358 -3370 0
3358 3366 -3372 0
3358 3367 -3374 0
c (0<=(aux446 + aux449 - aux450))
-3367 3374 0
-3366 3372 0
-3358 3374 0
-3358 -3367 3372 0
-3358 -3366 3370 0
-3357 3372 0
-3357 -3367 3370 0
-3357 -3366 3369 0
c ((SATLiteral(472) - aux451 + SATLiteral(512))<=0)
-512 -3376 0
-472 -3376 0
-472 -512 -3377 0
c (0<=(SATLiteral(472) - aux451 + SATLiteral(512)))
512 3377 0
472 3377 0
472 512 3376 0
c ((SATLiteral(522) - aux452 + SATLiteral(462))<=0)
-462 -3379 0
-522 -3379 0
-522 -462 -3380 0
c (0<=(SATLiteral(522) - aux452 + SATLiteral(462)))
462 3380 0
522 3380 0
522 462 3379 0
c (( - aux453 + SATLiteral(532) + SATLiteral(502))<=0)
-502 -3382 0
-532 -3382 0
-532 -502 -3383 0
c (0<=( - aux453 + SATLiteral(532) + SATLiteral(502)))
502 3383 0
532 3383 0
532 502 3382 0
c (( - aux454 + SATLiteral(482) + SATLiteral(492))<=0)
-492 -3385 0
-482 -3385 0
-482 -492 -3386 0
c (0<=( - aux454 + SATLiteral(482) + SATLiteral(492)))
492 3386 0
482 3386 0
482 492 3385 0
c ((aux451 + aux454 - aux455)<=0)
3385 -3388 0
3386 -3389 0
3376 -3388 0
3376 3385 -3389 0
3376 3386 -3391 0
3377 -3389 0
3377 3385 -3391 0
3377 3386 -3393 0
c (0<=(aux451 + aux454 - aux455))
-3386 3393 0
-3385 3391 0
-3377 3393 0
-3377 -3386 3391 0
-3377 -3385 3389 0
-3376 3391 0
-3376 -3386 3389 0
-3376 -3385 3388 0
c ((SATLiteral(473) - aux456 + SATLiteral(513))<=0)
-513 -3395 0
-473 -3395 0
-473 -513 -3396 0
c (0<=(SATLiteral(473) - aux456 + SATLiteral(513)))
513 3396 0
473 3396 0
473 513 3395 0
c ((SATLiteral(523) - aux457 + SATLiteral(463))<=0)
-463 -3398 0
-523 -3398 0
-523 -463 -3399 0
c (0<=(SATLiteral(523) - aux457 + SATLiteral(463)))
463 3399 0
523 3399 0
523 463 3398 0
c (( - aux458 + SATLiteral(533) + SATLiteral(503))<=0)
-503 -3401 0
-533 -3401 0
-533 -503 -3402 0
c (0<=( - aux458 + SATLiteral(533) + SATLiteral(503)))
503 3402 0
533 3402 0
533 503 3401 0
c (( - aux459 + SATLiteral(483) + SATLiteral(493))<=0)
-493 -3404 0
-483 -3404 0
-483 -493 -3405 0
c (0<=( - aux459 + SATLiteral(483) + SATLiteral(493)))
493 3405 0
483 3405 0
483 493 3404 0
c ((aux456 + aux459 - aux460)<=0)
3404 -3407 0
3405 -3408 0
3395 -3407 0
3395 3404 -3408 0
3395 3405 -3410 0
3396 -3408 0
3396 3404 -3410 0
3396 3405 -3412 0
c (0<=(aux456 + aux459 - aux460))
-3405 3412 0
-3404 3410 0
-3396 3412 0
-3396 -3405 3410 0
-3396 -3404 3408 0
-3395 3410 0
-3395 -3405 3408 0
-3395 -3404 3407 0
c ((SATLiteral(474) - aux461 + SATLiteral(514))<=0)
-514 -3414 0
-474 -3414 0
-474 -514 -3415 0
c (0<=(SATLiteral(474) - aux461 + SATLiteral(514)))
514 3415 0
474 3415 0
474 514 3414 0
c ((SATLiteral(524) - aux462 + SATLiteral(464))<=0)
-464 -3417 0
-524 -3417 0
-524 -464 -3418 0
c (0<=(SATLiteral(524) - aux462 + SATLiteral(464)))
464 3418 0
524 3418 0
524 464 3417 0
c (( - aux463 + SATLiteral(534) + SATLiteral(504))<=0)
-504 -3420 0
-534 -3420 0
-534 -504 -3421 0
c (0<=( - aux463 + SATLiteral(534) + SATLiteral(504)))
504 3421 0
534 3421 0
534 504 3420 0
c (( - aux464 + SATLiteral(484) + SATLiteral(494))<=0)
-494 -3423 0
-484 -3423 0
-484 -494 -3424 0
c (0<=( - aux464 + SATLiteral(484) + SATLiteral(494)))
494 3424 0
484 3424 0
484 494 3423 0
c ((aux461 + aux464 - aux465)<=0)
3423 -3426 0
3424 -3427 0
3414 -3426 0
3414 3423 -3427 0
3414 3424 -3429 0
3415 -3427 0
3415 3423 -3429 0
3415 3424 -3431 0
c (0<=(aux461 + aux464 - aux465))
-3424 3431 0
-3423 3429 0
-3415 3431 0
-3415 -3424 3429 0
-3415 -3423 3427 0
-3414 3429 0
-3414 -3424 3427 0
-3414 -3423 3426 0
c ((SATLiteral(475) - aux466 + SATLiteral(515))<=0)
-515 -3433 0
-475 -3433 0
-475 -515 -3434 0
c (0<=(SATLiteral(475) - aux466 + SATLiteral(515)))
515 3434 0
475 3434 0
475 515 3433 0
c ((SATLiteral(525) - aux467 + SATLiteral(465))<=0)
-465 -3436 0
-525 -3436 0
-525 -465 -3437 0
c (0<=(SATLiteral(525) - aux467 + SATLiteral(465)))
465 3437 0
525 3437 0
525 465 3436 0
c (( - aux468 + SATLiteral(535) + SATLiteral(505))<=0)
-505 -3439 0
-535 -3439 0
-535 -505 -3440 0
c (0<=( - aux468 + SATLiteral(535) + SATLiteral(505)))
505 3440 0
535 3440 0
535 505 3439 0
c (( - aux469 + SATLiteral(485) + SATLiteral(495))<=0)
-495 -3442 0
-485 -3442 0
-485 -495 -3443 0
c (0<=( - aux469 + SATLiteral(485) + SATLiteral(495)))
495 3443 0
485 3443 0
485 495 3442 0
c ((aux466 + aux469 - aux470)<=0)
3442 -3445 0
3443 -3446 0
3433 -3445 0
3433 3442 -3446 0
3433 3443 -3448 0
3434 -3446 0
3434 3442 -3448 0
3434 3443 -3450 0
c (0<=(aux466 + aux469 - aux470))
-3443 3450 0
-3442 3448 0
-3434 3450 0
-3434 -3443 3448 0
-3434 -3442 3446 0
-3433 3448 0
-3433 -3443 3446 0
-3433 -3442 3445 0
c ((SATLiteral(476) - aux471 + SATLiteral(516))<=0)
-516 -3452 0
-476 -3452 0
-476 -516 -3453 0
c (0<=(SATLiteral(476) - aux471 + SATLiteral(516)))
516 3453 0
476 3453 0
476 516 3452 0
c ((SATLiteral(526) - aux472 + SATLiteral(466))<=0)
-466 -3455 0
-526 -3455 0
-526 -466 -3456 0
c (0<=(SATLiteral(526) - aux472 + SATLiteral(466)))
466 3456 0
526 3456 0
526 466 3455 0
c (( - aux473 + SATLiteral(536) + SATLiteral(506))<=0)
-506 -3458 0
-536 -3458 0
-536 -506 -3459 0
c (0<=( - aux473 + SATLiteral(536) + SATLiteral(506)))
506 3459 0
536 3459 0
536 506 3458 0
c (( - aux474 + SATLiteral(486) + SATLiteral(496))<=0)
-496 -3461 0
-486 -3461 0
-486 -496 -3462 0
c (0<=( - aux474 + SATLiteral(486) + SATLiteral(496)))
496 3462 0
486 3462 0
486 496 3461 0
c ((aux471 + aux474 - aux475)<=0)
3461 -3464 0
3462 -3465 0
3452 -3464 0
3452 3461 -3465 0
3452 3462 -3467 0
3453 -3465 0
3453 3461 -3467 0
3453 3462 -3469 0
c (0<=(aux471 + aux474 - aux475))
-3462 3469 0
-3461 3467 0
-3453 3469 0
-3453 -3462 3467 0
-3453 -3461 3465 0
-3452 3467 0
-3452 -3462 3465 0
-3452 -3461 3464 0
c ((SATLiteral(477) - aux476 + SATLiteral(517))<=0)
-517 -3471 0
-477 -3471 0
-477 -517 -3472 0
c (0<=(SATLiteral(477) - aux476 + SATLiteral(517)))
517 3472 0
477 3472 0
477 517 3471 0
c ((SATLiteral(527) - aux477 + SATLiteral(467))<=0)
-467 -3474 0
-527 -3474 0
-527 -467 -3475 0
c (0<=(SATLiteral(527) - aux477 + SATLiteral(467)))
467 3475 0
527 3475 0
527 467 3474 0
c (( - aux478 + SATLiteral(537) + SATLiteral(507))<=0)
-507 -3477 0
-537 -3477 0
-537 -507 -3478 0
c (0<=( - aux478 + SATLiteral(537) + SATLiteral(507)))
507 3478 0
537 3478 0
537 507 3477 0
c (( - aux479 + SATLiteral(487) + SATLiteral(497))<=0)
-497 -3480 0
-487 -3480 0
-487 -497 -3481 0
c (0<=( - aux479 + SATLiteral(487) + SATLiteral(497)))
497 3481 0
487 3481 0
487 497 3480 0
c ((aux476 + aux479 - aux480)<=0)
3480 -3483 0
3481 -3484 0
3471 -3483 0
3471 3480 -3484 0
3471 3481 -3486 0
3472 -3484 0
3472 3480 -3486 0
3472 3481 -3488 0
c (0<=(aux476 + aux479 - aux480))
-3481 3488 0
-3480 3486 0
-3472 3488 0
-3472 -3481 3486 0
-3472 -3480 3484 0
-3471 3486 0
-3471 -3481 3484 0
-3471 -3480 3483 0
c ((SATLiteral(478) - aux481 + SATLiteral(518))<=0)
-518 -3490 0
-478 -3490 0
-478 -518 -3491 0
c (0<=(SATLiteral(478) - aux481 + SATLiteral(518)))
518 3491 0
478 3491 0
478 518 3490 0
c ((SATLiteral(528) - aux482 + SATLiteral(468))<=0)
-468 -3493 0
-528 -3493 0
-528 -468 -3494 0
c (0<=(SATLiteral(528) - aux482 + SATLiteral(468)))
468 3494 0
528 3494 0
528 468 3493 0
c (( - aux483 + SATLiteral(538) + SATLiteral(508))<=0)
-508 -3496 0
-538 -3496 0
-538 -508 -3497 0
c (0<=( - aux483 + SATLiteral(538) + SATLiteral(508)))
508 3497 0
538 3497 0
538 508 3496 0
c (( - aux484 + SATLiteral(488) + SATLiteral(498))<=0)
-498 -3499 0
-488 -3499 0
-488 -498 -3500 0
c (0<=( - aux484 + SATLiteral(488) + SATLiteral(498)))
498 3500 0
488 3500 0
488 498 3499 0
c ((aux481 + aux484 - aux485)<=0)
3499 -3502 0
3500 -3503 0
3490 -3502 0
3490 3499 -3503 0
3490 3500 -3505 0
3491 -3503 0
3491 3499 -3505 0
3491 3500 -3507 0
c (0<=(aux481 + aux484 - aux485))
-3500 3507 0
-3499 3505 0
-3491 3507 0
-3491 -3500 3505 0
-3491 -3499 3503 0
-3490 3505 0
-3490 -3500 3503 0
-3490 -3499 3502 0
c ((aux491 - SATLiteral(3515) + SATLiteral(743))<=0)
3515 -743 0
c (0<=(aux491 - SATLiteral(3515) + SATLiteral(743)))
-3515 743 0
c ((SATLiteral(3515) - aux493 + SATLiteral(552))<=0)
-552 -3516 0
-3515 -3516 0
-3515 -552 -3517 0
c (0<=(SATLiteral(3515) - aux493 + SATLiteral(552)))
552 3517 0
3515 3517 0
3515 552 3516 0
c (( - aux494 + SATLiteral(550) + SATLiteral(551))<=0)
-551 -3519 0
-550 -3519 0
-550 -551 -3520 0
c (0<=( - aux494 + SATLiteral(550) + SATLiteral(551)))
551 3520 0
550 3520 0
550 551 3519 0
c (( - aux495 + SATLiteral(742) + SATLiteral(744))<=0)
-744 -3522 0
-742 -3522 0
-742 -744 -3523 0
c (0<=( - aux495 + SATLiteral(742) + SATLiteral(744)))
744 3523 0
742 3523 0
742 744 3522 0
c ((aux493 + aux495 - aux496)<=0)
3522 -3525 0
3523 -3526 0
3516 -3525 0
3516 3522 -3526 0
3516 3523 -3528 0
3517 -3526 0
3517 3522 -3528 0
3517 3523 -3530 0
c (0<=(aux493 + aux495 - aux496))
-3523 3530 0
-3522 3528 0
-3517 3530 0
-3517 -3523 3528 0
-3517 -3522 3526 0
-3516 3528 0
-3516 -3523 3526 0
-3516 -3522 3525 0
c ((aux501 - SATLiteral(3537) + SATLiteral(574))<=0)
3537 -574 0
c (0<=(aux501 - SATLiteral(3537) + SATLiteral(574)))
-3537 574 0
c (( - aux503 + SATLiteral(1150) + SATLiteral(766))<=0)
-766 -3538 0
-1150 -3538 0
-1150 -766 -3539 0
c (0<=( - aux503 + SATLiteral(1150) + SATLiteral(766)))
766 3539 0
1150 3539 0
1150 766 3538 0
c ((SATLiteral(3537) - aux504 + SATLiteral(768))<=0)
-768 -3541 0
-3537 -3541 0
-3537 -768 -3542 0
c (0<=(SATLiteral(3537) - aux504 + SATLiteral(768)))
768 3542 0
3537 3542 0
3537 768 3541 0
c (( - aux505 + SATLiteral(576) + SATLiteral(767))<=0)
-767 -3544 0
-576 -3544 0
-576 -767 -3545 0
c (0<=( - aux505 + SATLiteral(576) + SATLiteral(767)))
767 3545 0
576 3545 0
576 767 3544 0
c ((aux505 - aux506 + SATLiteral(575))<=0)
3544 -3547 0
3545 -3548 0
-575 -3547 0
-575 3544 -3548 0
-575 3545 -3550 0
c (0<=(aux505 - aux506 + SATLiteral(575)))
-3545 3550 0
-3544 3548 0
575 3550 0
575 -3545 3548 0
575 -3544 3547 0
c ((aux503 + aux504 - aux507)<=0)
3541 -3552 0
3542 -3553 0
3538 -3552 0
3538 3541 -3553 0
3538 3542 -3555 0
3539 -3553 0
3539 3541 -3555 0
3539 3542 -3557 0
c (0<=(aux503 + aux504 - aux507))
-3542 3557 0
-3541 3555 0
-3539 3557 0
-3539 -3542 3555 0
-3539 -3541 3553 0
-3538 3555 0
-3538 -3542 3553 0
-3538 -3541 3552 0
c ((aux511 - SATLiteral(3563) + SATLiteral(1175))<=0)
3563 -1175 0
c (0<=(aux511 - SATLiteral(3563) + SATLiteral(1175)))
-3563 1175 0
c ((SATLiteral(3563) - aux513 + SATLiteral(790))<=0)
-790 -3564 0
-3563 -3564 0
-3563 -790 -3565 0
c (0<=(SATLiteral(3563) - aux513 + SATLiteral(790)))
790 3565 0
3563 3565 0
3563 790 3564 0
c ((SATLiteral(599) - aux514 + SATLiteral(791))<=0)
-791 -3567 0
-599 -3567 0
-599 -791 -3568 0
c (0<=(SATLiteral(599) - aux514 + SATLiteral(791)))
791 3568 0
599 3568 0
599 791 3567 0
c ((SATLiteral(598) - aux515 + SATLiteral(1174))<=0)
-1174 -3570 0
-598 -3570 0
-598 -1174 -3571 0
c (0<=(SATLiteral(598) - aux515 + SATLiteral(1174)))
1174 3571 0
598 3571 0
598 1174 3570 0
c ((SATLiteral(600) - aux516 + SATLiteral(792))<=0)
-792 -3573 0
-600 -3573 0
-600 -792 -3574 0
c (0<=(SATLiteral(600) - aux516 + SATLiteral(792)))
792 3574 0
600 3574 0
600 792 3573 0
c ((aux514 + aux516 - aux517)<=0)
3573 -3576 0
3574 -3577 0
3567 -3576 0
3567 3573 -3577 0
3567 3574 -3579 0
3568 -3577 0
3568 3573 -3579 0
3568 3574 -3581 0
c (0<=(aux514 + aux516 - aux517))
-3574 3581 0
-3573 3579 0
-3568 3581 0
-3568 -3574 3579 0
-3568 -3573 3577 0
-3567 3579 0
-3567 -3574 3577 0
-3567 -3573 3576 0
c ((aux513 + aux515 - aux518)<=0)
3570 -3583 0
3571 -3584 0
3564 -3583 0
3564 3570 -3584 0
3564 3571 -3586 0
3565 -3584 0
3565 3570 -3586 0
3565 3571 -3588 0
c (0<=(aux513 + aux515 - aux518))
-3571 3588 0
-3570 3586 0
-3565 3588 0
-3565 -3571 3586 0
-3565 -3570 3584 0
-3564 3586 0
-3564 -3571 3584 0
-3564 -3570 3583 0
c ((aux521 - SATLiteral(3593) + SATLiteral(1198))<=0)
3593 -1198 0
c (0<=(aux521 - SATLiteral(3593) + SATLiteral(1198)))
-3593 1198 0
c ((SATLiteral(3593) - aux523 + SATLiteral(816))<=0)
-816 -3594 0
-3593 -3594 0
-3593 -816 -3595 0
c (0<=(SATLiteral(3593) - aux523 + SATLiteral(816)))
816 3595 0
3593 3595 0
3593 816 3594 0
c ((SATLiteral(622) - aux524 + SATLiteral(815))<=0)
-815 -3597 0
-622 -3597 0
-622 -815 -3598 0
c (0<=(SATLiteral(622) - aux524 + SATLiteral(815)))
815 3598 0
622 3598 0
622 815 3597 0
c ((SATLiteral(623) - aux525 + SATLiteral(814))<=0)
-814 -3600 0
-623 -3600 0
-623 -814 -3601 0
c (0<=(SATLiteral(623) - aux525 + SATLiteral(814)))
814 3601 0
623 3601 0
623 814 3600 0
c ((SATLiteral(624) - aux526 + SATLiteral(1200))<=0)
-1200 -3603 0
-624 -3603 0
-624 -1200 -3604 0
c (0<=(SATLiteral(624) - aux526 + SATLiteral(1200)))
1200 3604 0
624 3604 0
624 1200 3603 0
c ((aux526 - aux527 + SATLiteral(1199))<=0)
3603 -3606 0
3604 -3607 0
-1199 -3606 0
-1199 3603 -3607 0
-1199 3604 -3609 0
c (0<=(aux526 - aux527 + SATLiteral(1199)))
-3604 3609 0
-3603 3607 0
1199 3609 0
1199 -3604 3607 0
1199 -3603 3606 0
c ((aux523 + aux524 - aux528)<=0)
3597 -3611 0
3598 -3612 0
3594 -3611 0
3594 3597 -3612 0
3594 3598 -3614 0
3595 -3612 0
3595 3597 -3614 0
3595 3598 -3616 0
c (0<=(aux523 + aux524 - aux528))
-3598 3616 0
-3597 3614 0
-3595 3616 0
-3595 -3598 3614 0
-3595 -3597 3612 0
-3594 3614 0
-3594 -3598 3612 0
-3594 -3597 3611 0
c ((aux525 + aux527 - aux529)<=0)
3606 -3618 0
3607 -3619 0
3609 -3621 0
3600 -3618 0
3600 3606 -3619 0
3600 3607 -3621 0
3600 3609 -3623 0
3601 -3619 0
3601 3606 -3621 0
3601 3607 -3623 0
3601 3609 -3625 0
c (0<=(aux525 + aux527 - aux529))
-3609 3625 0
-3607 3623 0
-3606 3621 0
-3601 3625 0
-3601 -3609 3623 0
-3601 -3607 3621 0
-3601 -3606 3619 0
-3600 3623 0
-3600 -3609 3621 0
-3600 -3607 3619 0
-3600 -3606 3618 0
c ((SATLiteral(647) + aux532 - SATLiteral(3630))<=0)
-647 3630 0
c (0<=(SATLiteral(647) + aux532 - SATLiteral(3630)))
647 -3630 0
c ((SATLiteral(3630) - aux534 + SATLiteral(839))<=0)
-839 -3631 0
-3630 -3631 0
-3630 -839 -3632 0
c (0<=(SATLiteral(3630) - aux534 + SATLiteral(839)))
839 3632 0
3630 3632 0
3630 839 3631 0
c (( - aux535 + SATLiteral(838) + SATLiteral(840))<=0)
-840 -3634 0
-838 -3634 0
-838 -840 -3635 0
c (0<=( - aux535 + SATLiteral(838) + SATLiteral(840)))
840 3635 0
838 3635 0
838 840 3634 0
c ((SATLiteral(646) - aux536 + SATLiteral(1224))<=0)
-1224 -3637 0
-646 -3637 0
-646 -1224 -3638 0
c (0<=(SATLiteral(646) - aux536 + SATLiteral(1224)))
1224 3638 0
646 3638 0
646 1224 3637 0
c ((SATLiteral(648) - aux537 + SATLiteral(1223))<=0)
-1223 -3640 0
-648 -3640 0
-648 -1223 -3641 0
c (0<=(SATLiteral(648) - aux537 + SATLiteral(1223)))
1223 3641 0
648 3641 0
648 1223 3640 0
c ((aux537 - aux538 + SATLiteral(1222))<=0)
3640 -3643 0
3641 -3644 0
-1222 -3643 0
-1222 3640 -3644 0
-1222 3641 -3646 0
c (0<=(aux537 - aux538 + SATLiteral(1222)))
-3641 3646 0
-3640 3644 0
1222 3646 0
1222 -3641 3644 0
1222 -3640 3643 0
c ((aux534 + aux535 - aux539)<=0)
3634 -3648 0
3635 -3649 0
3631 -3648 0
3631 3634 -3649 0
3631 3635 -3651 0
3632 -3649 0
3632 3634 -3651 0
3632 3635 -3653 0
c (0<=(aux534 + aux535 - aux539))
-3635 3653 0
-3634 3651 0
-3632 3653 0
-3632 -3635 3651 0
-3632 -3634 3649 0
-3631 3651 0
-3631 -3635 3649 0
-3631 -3634 3648 0
c ((aux536 + aux538 - aux540)<=0)
3643 -3655 0
3644 -3656 0
3646 -3658 0
3637 -3655 0
3637 3643 -3656 0
3637 3644 -3658 0
3637 3646 -3660 0
3638 -3656 0
3638 3643 -3658 0
3638 3644 -3660 0
3638 3646 -3662 0
c (0<=(aux536 + aux538 - aux540))
-3646 3662 0
-3644 3660 0
-3643 3658 0
-3638 3662 0
-3638 -3646 3660 0
-3638 -3644 3658 0
-3638 -3643 3656 0
-3637 3660 0
-3637 -3646 3658 0
-3637 -3644 3656 0
-3637 -3643 3655 0
c ((aux544 - SATLiteral(3668) + SATLiteral(670))<=0)
3668 -670 0
c (0<=(aux544 - SATLiteral(3668) + SATLiteral(670)))
-3668 670 0
c ((SATLiteral(3668) - aux546 + SATLiteral(1247))<=0)
-1247 -3669 0
-3668 -3669 0
-3668 -1247 -3670 0
c (0<=(SATLiteral(3668) - aux546 + SATLiteral(1247)))
1247 3670 0
3668 3670 0
3668 1247 3669 0
c (( - aux547 + SATLiteral(1248) + SATLiteral(672))<=0)
-672 -3672 0
-1248 -3672 0
-1248 -672 -3673 0
c (0<=( - aux547 + SATLiteral(1248) + SATLiteral(672)))
672 3673 0
1248 3673 0
1248 672 3672 0
c (( - aux548 + SATLiteral(862) + SATLiteral(863))<=0)
-863 -3675 0
-862 -3675 0
-862 -863 -3676 0
c (0<=( - aux548 + SATLiteral(862) + SATLiteral(863)))
863 3676 0
862 3676 0
862 863 3675 0
c (( - aux549 + SATLiteral(1246) + SATLiteral(671))<=0)
-671 -3678 0
-1246 -3678 0
-1246 -671 -3679 0
c (0<=( - aux549 + SATLiteral(1246) + SATLiteral(671)))
671 3679 0
1246 3679 0
1246 671 3678 0
c ((aux547 + aux549 - aux550)<=0)
3678 -3681 0
3679 -3682 0
3672 -3681 0
3672 3678 -3682 0
3672 3679 -3684 0
3673 -3682 0
3673 3678 -3684 0
3673 3679 -3686 0
c (0<=(aux547 + aux549 - aux550))
-3679 3686 0
-3678 3684 0
-3673 3686 0
-3673 -3679 3684 0
-3673 -3678 3682 0
-3672 3684 0
-3672 -3679 3682 0
-3672 -3678 3681 0
c ((aux546 + aux548 - aux551)<=0)
3675 -3688 0
3676 -3689 0
3669 -3688 0
3669 3675 -3689 0
3669 3676 -3691 0
3670 -3689 0
3670 3675 -3691 0
3670 3676 -3693 0
c (0<=(aux546 + aux548 - aux551))
-3676 3693 0
-3675 3691 0
-3670 3693 0
-3670 -3676 3691 0
-3670 -3675 3689 0
-3669 3691 0
-3669 -3676 3689 0
-3669 -3675 3688 0
c ((aux556 - SATLiteral(3700) + SATLiteral(696))<=0)
3700 -696 0
c (0<=(aux556 - SATLiteral(3700) + SATLiteral(696)))
-3700 696 0
c ((SATLiteral(3700) - aux558 + SATLiteral(1271))<=0)
-1271 -3701 0
-3700 -3701 0
-3700 -1271 -3702 0
c (0<=(SATLiteral(3700) - aux558 + SATLiteral(1271)))
1271 3702 0
3700 3702 0
3700 1271 3701 0
c (( - aux559 + SATLiteral(1270) + SATLiteral(1272))<=0)
-1272 -3704 0
-1270 -3704 0
-1270 -1272 -3705 0
c (0<=( - aux559 + SATLiteral(1270) + SATLiteral(1272)))
1272 3705 0
1270 3705 0
1270 1272 3704 0
c (( - aux560 + SATLiteral(886) + SATLiteral(694))<=0)
-694 -3707 0
-886 -3707 0
-886 -694 -3708 0
c (0<=( - aux560 + SATLiteral(886) + SATLiteral(694)))
694 3708 0
886 3708 0
886 694 3707 0
c ((aux560 - aux561 + SATLiteral(695))<=0)
3707 -3710 0
3708 -3711 0
-695 -3710 0
-695 3707 -3711 0
-695 3708 -3713 0
c (0<=(aux560 - aux561 + SATLiteral(695)))
-3708 3713 0
-3707 3711 0
695 3713 0
695 -3708 3711 0
695 -3707 3710 0
c ((aux558 + aux559 - aux562)<=0)
3704 -3715 0
3705 -3716 0
3701 -3715 0
3701 3704 -3716 0
3701 3705 -3718 0
3702 -3716 0
3702 3704 -3718 0
3702 3705 -3720 0
c (0<=(aux558 + aux559 - aux562))
-3705 3720 0
-3704 3718 0
-3702 3720 0
-3702 -3705 3718 0
-3702 -3704 3716 0
-3701 3718 0
-3701 -3705 3716 0
-3701 -3704 3715 0
c ((aux568 - SATLiteral(3728) + SATLiteral(718))<=0)
3728 -718 0
c (0<=(aux568 - SATLiteral(3728) + SATLiteral(718)))
-3728 718 0
c ((SATLiteral(3728) - aux570 + SATLiteral(1294))<=0)
-1294 -3729 0
-3728 -3729 0
-3728 -1294 -3730 0
c (0<=(SATLiteral(3728) - aux570 + SATLiteral(1294)))
1294 3730 0
3728 3730 0
3728 1294 3729 0
c (( - aux571 + SATLiteral(1295) + SATLiteral(719))<=0)
-719 -3732 0
-1295 -3732 0
-1295 -719 -3733 0
c (0<=( - aux571 + SATLiteral(1295) + SATLiteral(719)))
719 3733 0
1295 3733 0
1295 719 3732 0
c (( - aux572 + SATLiteral(1296) + SATLiteral(720))<=0)
-720 -3735 0
-1296 -3735 0
-1296 -720 -3736 0
c (0<=( - aux572 + SATLiteral(1296) + SATLiteral(720)))
720 3736 0
1296 3736 0
1296 720 3735 0
c ((aux570 + aux572 - aux573)<=0)
3735 -3738 0
3736 -3739 0
3729 -3738 0
3729 3735 -3739 0
3729 3736 -3741 0
3730 -3739 0
3730 3735 -3741 0
3730 3736 -3743 0
c (0<=(aux570 + aux572 - aux573))
-3736 3743 0
-3735 3741 0
-3730 3743 0
-3730 -3736 3741 0
-3730 -3735 3739 0
-3729 3741 0
-3729 -3736 3739 0
-3729 -3735 3738 0
c ((aux578 - SATLiteral(3750) + SATLiteral(937))<=0)
3750 -937 0
c (0<=(aux578 - SATLiteral(3750) + SATLiteral(937)))
-3750 937 0
c ((SATLiteral(745) + SATLiteral(747) - aux580)<=0)
-747 -3751 0
-745 -3751 0
-745 -747 -3752 0
c (0<=(SATLiteral(745) + SATLiteral(747) - aux580))
747 3752 0
745 3752 0
745 747 3751 0
c ((SATLiteral(3750) - aux581 + SATLiteral(553))<=0)
-553 -3754 0
-3750 -3754 0
-3750 -553 -3755 0
c (0<=(SATLiteral(3750) - aux581 + SATLiteral(553)))
553 3755 0
3750 3755 0
3750 553 3754 0
c (( - aux582 + SATLiteral(554) + SATLiteral(555))<=0)
-555 -3757 0
-554 -3757 0
-554 -555 -3758 0
c (0<=( - aux582 + SATLiteral(554) + SATLiteral(555)))
555 3758 0
554 3758 0
554 555 3757 0
c ((SATLiteral(746) + aux582 - aux583)<=0)
3757 -3760 0
3758 -3761 0
-746 -3760 0
-746 3757 -3761 0
-746 3758 -3763 0
c (0<=(SATLiteral(746) + aux582 - aux583))
-3758 3763 0
-3757 3761 0
746 3763 0
746 -3758 3761 0
746 -3757 3760 0
c ((aux580 + aux581 - aux584)<=0)
3754 -3765 0
3755 -3766 0
3751 -3765 0
3751 3754 -3766 0
3751 3755 -3768 0
3752 -3766 0
3752 3754 -3768 0
3752 3755 -3770 0
c (0<=(aux580 + aux581 - aux584))
-3755 3770 0
-3754 3768 0
-3752 3770 0
-3752 -3755 3768 0
-3752 -3754 3766 0
-3751 3768 0
-3751 -3755 3766 0
-3751 -3754 3765 0
c ((aux588 - SATLiteral(3776) + SATLiteral(577))<=0)
3776 -577 0
c (0<=(aux588 - SATLiteral(3776) + SATLiteral(577)))
-3776 577 0
c ((SATLiteral(3776) - aux590 + SATLiteral(579))<=0)
-579 -3777 0
-3776 -3777 0
-3776 -579 -3778 0
c (0<=(SATLiteral(3776) - aux590 + SATLiteral(579)))
579 3778 0
3776 3778 0
3776 579 3777 0
c ((SATLiteral(769) - aux591 + SATLiteral(578))<=0)
-578 -3780 0
-769 -3780 0
-769 -578 -3781 0
c (0<=(SATLiteral(769) - aux591 + SATLiteral(578)))
578 3781 0
769 3781 0
769 578 3780 0
c (( - aux592 + SATLiteral(961) + SATLiteral(1153))<=0)
-1153 -3783 0
-961 -3783 0
-961 -1153 -3784 0
c (0<=( - aux592 + SATLiteral(961) + SATLiteral(1153)))
1153 3784 0
961 3784 0
961 1153 3783 0
c ((SATLiteral(770) + SATLiteral(771) - aux593)<=0)
-771 -3786 0
-770 -3786 0
-770 -771 -3787 0
c (0<=(SATLiteral(770) + SATLiteral(771) - aux593))
771 3787 0
770 3787 0
770 771 3786 0
c ((aux591 + aux593 - aux594)<=0)
3786 -3789 0
3787 -3790 0
3780 -3789 0
3780 3786 -3790 0
3780 3787 -3792 0
3781 -3790 0
3781 3786 -3792 0
3781 3787 -3794 0
c (0<=(aux591 + aux593 - aux594))
-3787 3794 0
-3786 3792 0
-3781 3794 0
-3781 -3787 3792 0
-3781 -3786 3790 0
-3780 3792 0
-3780 -3787 3790 0
-3780 -3786 3789 0
c ((aux590 + aux592 - aux595)<=0)
3783 -3796 0
3784 -3797 0
3777 -3796 0
3777 3783 -3797 0
3777 3784 -3799 0
3778 -3797 0
3778 3783 -3799 0
3778 3784 -3801 0
c (0<=(aux590 + aux592 - aux595))
-3784 3801 0
-3783 3799 0
-3778 3801 0
-3778 -3784 3799 0
-3778 -3783 3797 0
-3777 3799 0
-3777 -3784 3797 0
-3777 -3783 3796 0
c ((aux598 - SATLiteral(3806) + SATLiteral(985))<=0)
3806 -985 0
c (0<=(aux598 - SATLiteral(3806) + SATLiteral(985)))
-3806 985 0
c ((SATLiteral(3806) - aux600 + SATLiteral(1178))<=0)
-1178 -3807 0
-3806 -3807 0
-3806 -1178 -3808 0
c (0<=(SATLiteral(3806) - aux600 + SATLiteral(1178)))
1178 3808 0
3806 3808 0
3806 1178 3807 0
c (( - aux601 + SATLiteral(602) + SATLiteral(1177))<=0)
-1177 -3810 0
-602 -3810 0
-602 -1177 -3811 0
c (0<=( - aux601 + SATLiteral(602) + SATLiteral(1177)))
1177 3811 0
602 3811 0
602 1177 3810 0
c (( - aux602 + SATLiteral(601) + SATLiteral(795))<=0)
-795 -3813 0
-601 -3813 0
-601 -795 -3814 0
c (0<=( - aux602 + SATLiteral(601) + SATLiteral(795)))
795 3814 0
601 3814 0
601 795 3813 0
c (( - aux603 + SATLiteral(603) + SATLiteral(794))<=0)
-794 -3816 0
-603 -3816 0
-603 -794 -3817 0
c (0<=( - aux603 + SATLiteral(603) + SATLiteral(794)))
794 3817 0
603 3817 0
603 794 3816 0
c ((aux603 - aux604 + SATLiteral(793))<=0)
3816 -3819 0
3817 -3820 0
-793 -3819 0
-793 3816 -3820 0
-793 3817 -3822 0
c (0<=(aux603 - aux604 + SATLiteral(793)))
-3817 3822 0
-3816 3820 0
793 3822 0
793 -3817 3820 0
793 -3816 3819 0
c ((aux600 + aux601 - aux605)<=0)
3810 -3824 0
3811 -3825 0
3807 -3824 0
3807 3810 -3825 0
3807 3811 -3827 0
3808 -3825 0
3808 3810 -3827 0
3808 3811 -3829 0
c (0<=(aux600 + aux601 - aux605))
-3811 3829 0
-3810 3827 0
-3808 3829 0
-3808 -3811 3827 0
-3808 -3810 3825 0
-3807 3827 0
-3807 -3811 3825 0
-3807 -3810 3824 0
c ((aux602 + aux604 - aux606)<=0)
3819 -3831 0
3820 -3832 0
3822 -3834 0
3813 -3831 0
3813 3819 -3832 0
3813 3820 -3834 0
3813 3822 -3836 0
3814 -3832 0
3814 3819 -3834 0
3814 3820 -3836 0
3814 3822 -3838 0
c (0<=(aux602 + aux604 - aux606))
-3822 3838 0
-3820 3836 0
-3819 3834 0
-3814 3838 0
-3814 -3822 3836 0
-3814 -3820 3834 0
-3814 -3819 3832 0
-3813 3836 0
-3813 -3822 3834 0
-3813 -3820 3832 0
-3813 -3819 3831 0
c ((aux608 - SATLiteral(3842) + SATLiteral(818))<=0)
3842 -818 0
c (0<=(aux608 - SATLiteral(3842) + SATLiteral(818)))
-3842 818 0
c ((SATLiteral(1009) + SATLiteral(3842) - aux610)<=0)
-3842 -3843 0
-1009 -3843 0
-1009 -3842 -3844 0
c (0<=(SATLiteral(1009) + SATLiteral(3842) - aux610))
3842 3844 0
1009 3844 0
1009 3842 3843 0
c (( - aux611 + SATLiteral(625) + SATLiteral(1203))<=0)
-1203 -3846 0
-625 -3846 0
-625 -1203 -3847 0
c (0<=( - aux611 + SATLiteral(625) + SATLiteral(1203)))
1203 3847 0
625 3847 0
625 1203 3846 0
c (( - aux612 + SATLiteral(1201) + SATLiteral(1202))<=0)
-1202 -3849 0
-1201 -3849 0
-1201 -1202 -3850 0
c (0<=( - aux612 + SATLiteral(1201) + SATLiteral(1202)))
1202 3850 0
1201 3850 0
1201 1202 3849 0
c (( - aux613 + SATLiteral(626) + SATLiteral(817))<=0)
-817 -3852 0
-626 -3852 0
-626 -817 -3853 0
c (0<=( - aux613 + SATLiteral(626) + SATLiteral(817)))
817 3853 0
626 3853 0
626 817 3852 0
c (( - aux614 + SATLiteral(627) + SATLiteral(819))<=0)
-819 -3855 0
-627 -3855 0
-627 -819 -3856 0
c (0<=( - aux614 + SATLiteral(627) + SATLiteral(819)))
819 3856 0
627 3856 0
627 819 3855 0
c ((aux610 + aux614 - aux615)<=0)
3855 -3858 0
3856 -3859 0
3843 -3858 0
3843 3855 -3859 0
3843 3856 -3861 0
3844 -3859 0
3844 3855 -3861 0
3844 3856 -3863 0
c (0<=(aux610 + aux614 - aux615))
-3856 3863 0
-3855 3861 0
-3844 3863 0
-3844 -3856 3861 0
-3844 -3855 3859 0
-3843 3861 0
-3843 -3856 3859 0
-3843 -3855 3858 0
c ((aux611 + aux612 - aux616)<=0)
3849 -3865 0
3850 -3866 0
3846 -3865 0
3846 3849 -3866 0
3846 3850 -3868 0
3847 -3866 0
3847 3849 -3868 0
3847 3850 -3870 0
c (0<=(aux611 + aux612 - aux616))
-3850 3870 0
-3849 3868 0
-3847 3870 0
-3847 -3850 3868 0
-3847 -3849 3866 0
-3846 3868 0
-3846 -3850 3866 0
-3846 -3849 3865 0
c ((aux613 + aux616 - aux617)<=0)
3865 -3872 0
3866 -3873 0
3868 -3875 0
3870 -3877 0
3852 -3872 0
3852 3865 -3873 0
3852 3866 -3875 0
3852 3868 -3877 0
3852 3870 -3879 0
3853 -3873 0
3853 3865 -3875 0
3853 3866 -3877 0
3853 3868 -3879 0
3853 3870 -3881 0
c (0<=(aux613 + aux616 - aux617))
-3870 3881 0
-3868 3879 0
-3866 3877 0
-3865 3875 0
-3853 3881 0
-3853 -3870 3879 0
-3853 -3868 3877 0
-3853 -3866 3875 0
-3853 -3865 3873 0
-3852 3879 0
-3852 -3870 3877 0
-3852 -3868 3875 0
-3852 -3866 3873 0
-3852 -3865 3872 0
c ((aux619 - SATLiteral(3885) + SATLiteral(842))<=0)
3885 -842 0
c (0<=(aux619 - SATLiteral(3885) + SATLiteral(842)))
-3885 842 0
c ((SATLiteral(3885) - aux621 + SATLiteral(1227))<=0)
-1227 -3886 0
-3885 -3886 0
-3885 -1227 -3887 0
c (0<=(SATLiteral(3885) - aux621 + SATLiteral(1227)))
1227 3887 0
3885 3887 0
3885 1227 3886 0
c (( - aux622 + SATLiteral(1226) + SATLiteral(843))<=0)
-843 -3889 0
-1226 -3889 0
-1226 -843 -3890 0
c (0<=( - aux622 + SATLiteral(1226) + SATLiteral(843)))
843 3890 0
1226 3890 0
1226 843 3889 0
c ((SATLiteral(1033) - aux623 + SATLiteral(1225))<=0)
-1225 -3892 0
-1033 -3892 0
-1033 -1225 -3893 0
c (0<=(SATLiteral(1033) - aux623 + SATLiteral(1225)))
1225 3893 0
1033 3893 0
1033 1225 3892 0
c (( - aux624 + SATLiteral(649) + SATLiteral(841))<=0)
-841 -3895 0
-649 -3895 0
-649 -841 -3896 0
c (0<=( - aux624 + SATLiteral(649) + SATLiteral(841)))
841 3896 0
649 3896 0
649 841 3895 0
c (( - aux625 + SATLiteral(650) + SATLiteral(651))<=0)
-651 -3898 0
-650 -3898 0
-650 -651 -3899 0
c (0<=( - aux625 + SATLiteral(650) + SATLiteral(651)))
651 3899 0
650 3899 0
650 651 3898 0
c ((aux621 + aux625 - aux626)<=0)
3898 -3901 0
3899 -3902 0
3886 -3901 0
3886 3898 -3902 0
3886 3899 -3904 0
3887 -3902 0
3887 3898 -3904 0
3887 3899 -3906 0
c (0<=(aux621 + aux625 - aux626))
-3899 3906 0
-3898 3904 0
-3887 3906 0
-3887 -3899 3904 0
-3887 -3898 3902 0
-3886 3904 0
-3886 -3899 3902 0
-3886 -3898 3901 0
c ((aux622 + aux623 - aux627)<=0)
3892 -3908 0
3893 -3909 0
3889 -3908 0
3889 3892 -3909 0
3889 3893 -3911 0
3890 -3909 0
3890 3892 -3911 0
3890 3893 -3913 0
c (0<=(aux622 + aux623 - aux627))
-3893 3913 0
-3892 3911 0
-3890 3913 0
-3890 -3893 3911 0
-3890 -3892 3909 0
-3889 3911 0
-3889 -3893 3909 0
-3889 -3892 3908 0
c ((aux624 + aux627 - aux628)<=0)
3908 -3915 0
3909 -3916 0
3911 -3918 0
3913 -3920 0
3895 -3915 0
3895 3908 -3916 0
3895 3909 -3918 0
3895 3911 -3920 0
3895 3913 -3922 0
3896 -3916 0
3896 3908 -3918 0
3896 3909 -3920 0
3896 3911 -3922 0
3896 3913 -3924 0
c (0<=(aux624 + aux627 - aux628))
-3913 3924 0
-3911 3922 0
-3909 3920 0
-3908 3918 0
-3896 3924 0
-3896 -3913 3922 0
-3896 -3911 3920 0
-3896 -3909 3918 0
-3896 -3908 3916 0
-3895 3922 0
-3895 -3913 3920 0
-3895 -3911 3918 0
-3895 -3909 3916 0
-3895 -3908 3915 0
c ((SATLiteral(673) + aux631 - SATLiteral(3929))<=0)
-673 3929 0
c (0<=(SATLiteral(673) + aux631 - SATLiteral(3929)))
673 -3929 0
c ((SATLiteral(3929) - aux633 + SATLiteral(866))<=0)
-866 -3930 0
-3929 -3930 0
-3929 -866 -3931 0
c (0<=(SATLiteral(3929) - aux633 + SATLiteral(866)))
866 3931 0
3929 3931 0
3929 866 3930 0
c ((SATLiteral(674) - aux634 + SATLiteral(865))<=0)
-865 -3933 0
-674 -3933 0
-674 -865 -3934 0
c (0<=(SATLiteral(674) - aux634 + SATLiteral(865)))
865 3934 0
674 3934 0
674 865 3933 0
c (( - aux635 + SATLiteral(1250) + SATLiteral(1251))<=0)
-1251 -3936 0
-1250 -3936 0
-1250 -1251 -3937 0
c (0<=( - aux635 + SATLiteral(1250) + SATLiteral(1251)))
1251 3937 0
1250 3937 0
1250 1251 3936 0
c ((SATLiteral(675) - aux636 + SATLiteral(1249))<=0)
-1249 -3939 0
-675 -3939 0
-675 -1249 -3940 0
c (0<=(SATLiteral(675) - aux636 + SATLiteral(1249)))
1249 3940 0
675 3940 0
675 1249 3939 0
c ((aux636 - aux637 + SATLiteral(1057))<=0)
3939 -3942 0
3940 -3943 0
-1057 -3942 0
-1057 3939 -3943 0
-1057 3940 -3945 0
c (0<=(aux636 - aux637 + SATLiteral(1057)))
-3940 3945 0
-3939 3943 0
1057 3945 0
1057 -3940 3943 0
1057 -3939 3942 0
c ((aux633 + aux634 - aux638)<=0)
3933 -3947 0
3934 -3948 0
3930 -3947 0
3930 3933 -3948 0
3930 3934 -3950 0
3931 -3948 0
3931 3933 -3950 0
3931 3934 -3952 0
c (0<=(aux633 + aux634 - aux638))
-3934 3952 0
-3933 3950 0
-3931 3952 0
-3931 -3934 3950 0
-3931 -3933 3948 0
-3930 3950 0
-3930 -3934 3948 0
-3930 -3933 3947 0
c ((aux635 + aux637 - aux639)<=0)
3942 -3954 0
3943 -3955 0
3945 -3957 0
3936 -3954 0
3936 3942 -3955 0
3936 3943 -3957 0
3936 3945 -3959 0
3937 -3955 0
3937 3942 -3957 0
3937 3943 -3959 0
3937 3945 -3961 0
c (0<=(aux635 + aux637 - aux639))
-3945 3961 0
-3943 3959 0
-3942 3957 0
-3937 3961 0
-3937 -3945 3959 0
-3937 -3943 3957 0
-3937 -3942 3955 0
-3936 3959 0
-3936 -3945 3957 0
-3936 -3943 3955 0
-3936 -3942 3954 0
c ((aux643 - SATLiteral(3967) + SATLiteral(1273))<=0)
3967 -1273 0
c (0<=(aux643 - SATLiteral(3967) + SATLiteral(1273)))
-3967 1273 0
c ((SATLiteral(3967) - aux645 + SATLiteral(889))<=0)
-889 -3968 0
-3967 -3968 0
-3967 -889 -3969 0
c (0<=(SATLiteral(3967) - aux645 + SATLiteral(889)))
889 3969 0
3967 3969 0
3967 889 3968 0
c (( - aux646 + SATLiteral(1274) + SATLiteral(1275))<=0)
-1275 -3971 0
-1274 -3971 0
-1274 -1275 -3972 0
c (0<=( - aux646 + SATLiteral(1274) + SATLiteral(1275)))
1275 3972 0
1274 3972 0
1274 1275 3971 0
c ((SATLiteral(698) - aux647 + SATLiteral(1081))<=0)
-1081 -3974 0
-698 -3974 0
-698 -1081 -3975 0
c (0<=(SATLiteral(698) - aux647 + SATLiteral(1081)))
1081 3975 0
698 3975 0
698 1081 3974 0
c ((SATLiteral(697) + SATLiteral(699) - aux648)<=0)
-699 -3977 0
-697 -3977 0
-697 -699 -3978 0
c (0<=(SATLiteral(697) + SATLiteral(699) - aux648))
699 3978 0
697 3978 0
697 699 3977 0
c ((aux646 + aux648 - aux649)<=0)
3977 -3980 0
3978 -3981 0
3971 -3980 0
3971 3977 -3981 0
3971 3978 -3983 0
3972 -3981 0
3972 3977 -3983 0
3972 3978 -3985 0
c (0<=(aux646 + aux648 - aux649))
-3978 3985 0
-3977 3983 0
-3972 3985 0
-3972 -3978 3983 0
-3972 -3977 3981 0
-3971 3983 0
-3971 -3978 3981 0
-3971 -3977 3980 0
c ((aux645 + aux647 - aux650)<=0)
3974 -3987 0
3975 -3988 0
3968 -3987 0
3968 3974 -3988 0
3968 3975 -3990 0
3969 -3988 0
3969 3974 -3990 0
3969 3975 -3992 0
c (0<=(aux645 + aux647 - aux650))
-3975 3992 0
-3974 3990 0
-3969 3992 0
-3969 -3975 3990 0
-3969 -3974 3988 0
-3968 3990 0
-3968 -3975 3988 0
-3968 -3974 3987 0
c ((aux655 - SATLiteral(3999) + SATLiteral(1299))<=0)
3999 -1299 0
c (0<=(aux655 - SATLiteral(3999) + SATLiteral(1299)))
-3999 1299 0
c ((SATLiteral(722) + SATLiteral(3999) - aux657)<=0)
-3999 -4000 0
-722 -4000 0
-722 -3999 -4001 0
c (0<=(SATLiteral(722) + SATLiteral(3999) - aux657))
3999 4001 0
722 4001 0
722 3999 4000 0
c ((SATLiteral(721) + SATLiteral(723) - aux658)<=0)
-723 -4003 0
-721 -4003 0
-721 -723 -4004 0
c (0<=(SATLiteral(721) + SATLiteral(723) - aux658))
723 4004 0
721 4004 0
721 723 4003 0
c (( - aux659 + SATLiteral(1298) + SATLiteral(1105))<=0)
-1105 -4006 0
-1298 -4006 0
-1298 -1105 -4007 0
c (0<=( - aux659 + SATLiteral(1298) + SATLiteral(1105)))
1105 4007 0
1298 4007 0
1298 1105 4006 0
c ((aux659 - aux660 + SATLiteral(1297))<=0)
4006 -4009 0
4007 -4010 0
-1297 -4009 0
-1297 4006 -4010 0
-1297 4007 -4012 0
c (0<=(aux659 - aux660 + SATLiteral(1297)))
-4007 4012 0
-4006 4010 0
1297 4012 0
1297 -4007 4010 0
1297 -4006 4009 0
c ((aux657 + aux658 - aux661)<=0)
4003 -4014 0
4004 -4015 0
4000 -4014 0
4000 4003 -4015 0
4000 4004 -4017 0
4001 -4015 0
4001 4003 -4017 0
4001 4004 -4019 0
c (0<=(aux657 + aux658 - aux661))
-4004 4019 0
-4003 4017 0
-4001 4019 0
-4001 -4004 4017 0
-4001 -4003 4015 0
-4000 4017 0
-4000 -4004 4015 0
-4000 -4003 4014 0
c ((aux665 - SATLiteral(4025) + SATLiteral(749))<=0)
4025 -749 0
c (0<=(aux665 - SATLiteral(4025) + SATLiteral(749)))
-4025 749 0
c ((SATLiteral(4025) - aux667 + SATLiteral(940))<=0)
-940 -4026 0
-4025 -4026 0
-4025 -940 -4027 0
c (0<=(SATLiteral(4025) - aux667 + SATLiteral(940)))
940 4027 0
4025 4027 0
4025 940 4026 0
c (( - aux668 + SATLiteral(941) + SATLiteral(558))<=0)
-558 -4029 0
-941 -4029 0
-941 -558 -4030 0
c (0<=( - aux668 + SATLiteral(941) + SATLiteral(558)))
558 4030 0
941 4030 0
941 558 4029 0
c (( - aux669 + SATLiteral(750) + SATLiteral(557))<=0)
-557 -4032 0
-750 -4032 0
-750 -557 -4033 0
c (0<=( - aux669 + SATLiteral(750) + SATLiteral(557)))
557 4033 0
750 4033 0
750 557 4032 0
c (( - aux670 + SATLiteral(748) + SATLiteral(556))<=0)
-556 -4035 0
-748 -4035 0
-748 -556 -4036 0
c (0<=( - aux670 + SATLiteral(748) + SATLiteral(556)))
556 4036 0
748 4036 0
748 556 4035 0
c ((aux668 + aux670 - aux671)<=0)
4035 -4038 0
4036 -4039 0
4029 -4038 0
4029 4035 -4039 0
4029 4036 -4041 0
4030 -4039 0
4030 4035 -4041 0
4030 4036 -4043 0
c (0<=(aux668 + aux670 - aux671))
-4036 4043 0
-4035 4041 0
-4030 4043 0
-4030 -4036 4041 0
-4030 -4035 4039 0
-4029 4041 0
-4029 -4036 4039 0
-4029 -4035 4038 0
c ((aux667 + aux669 - aux672)<=0)
4032 -4045 0
4033 -4046 0
4026 -4045 0
4026 4032 -4046 0
4026 4033 -4048 0
4027 -4046 0
4027 4032 -4048 0
4027 4033 -4050 0
c (0<=(aux667 + aux669 - aux672))
-4033 4050 0
-4032 4048 0
-4027 4050 0
-4027 -4033 4048 0
-4027 -4032 4046 0
-4026 4048 0
-4026 -4033 4046 0
-4026 -4032 4045 0
c ((aux675 - SATLiteral(4055) + SATLiteral(773))<=0)
4055 -773 0
c (0<=(aux675 - SATLiteral(4055) + SATLiteral(773)))
-4055 773 0
c ((SATLiteral(4055) - aux677 + SATLiteral(1156))<=0)
-1156 -4056 0
-4055 -4056 0
-4055 -1156 -4057 0
c (0<=(SATLiteral(4055) - aux677 + SATLiteral(1156)))
1156 4057 0
4055 4057 0
4055 1156 4056 0
c (( - aux678 + SATLiteral(772) + SATLiteral(965))<=0)
-965 -4059 0
-772 -4059 0
-772 -965 -4060 0
c (0<=( - aux678 + SATLiteral(772) + SATLiteral(965)))
965 4060 0
772 4060 0
772 965 4059 0
c (( - aux679 + SATLiteral(964) + SATLiteral(581))<=0)
-581 -4062 0
-964 -4062 0
-964 -581 -4063 0
c (0<=( - aux679 + SATLiteral(964) + SATLiteral(581)))
581 4063 0
964 4063 0
964 581 4062 0
c (( - aux680 + SATLiteral(774) + SATLiteral(582))<=0)
-582 -4065 0
-774 -4065 0
-774 -582 -4066 0
c (0<=( - aux680 + SATLiteral(774) + SATLiteral(582)))
582 4066 0
774 4066 0
774 582 4065 0
c ((aux680 - aux681 + SATLiteral(580))<=0)
4065 -4068 0
4066 -4069 0
-580 -4068 0
-580 4065 -4069 0
-580 4066 -4071 0
c (0<=(aux680 - aux681 + SATLiteral(580)))
-4066 4071 0
-4065 4069 0
580 4071 0
580 -4066 4069 0
580 -4065 4068 0
c ((aux677 + aux678 - aux682)<=0)
4059 -4073 0
4060 -4074 0
4056 -4073 0
4056 4059 -4074 0
4056 4060 -4076 0
4057 -4074 0
4057 4059 -4076 0
4057 4060 -4078 0
c (0<=(aux677 + aux678 - aux682))
-4060 4078 0
-4059 4076 0
-4057 4078 0
-4057 -4060 4076 0
-4057 -4059 4074 0
-4056 4076 0
-4056 -4060 4074 0
-4056 -4059 4073 0
c ((aux679 + aux681 - aux683)<=0)
4068 -4080 0
4069 -4081 0
4071 -4083 0
4062 -4080 0
4062 4068 -4081 0
4062 4069 -4083 0
4062 4071 -4085 0
4063 -4081 0
4063 4068 -4083 0
4063 4069 -4085 0
4063 4071 -4087 0
c (0<=(aux679 + aux681 - aux683))
-4071 4087 0
-4069 4085 0
-4068 4083 0
-4063 4087 0
-4063 -4071 4085 0
-4063 -4069 4083 0
-4063 -4068 4081 0
-4062 4085 0
-4062 -4071 4083 0
-4062 -4069 4081 0
-4062 -4068 4080 0
c ((SATLiteral(1180) + aux685 - SATLiteral(4091))<=0)
-1180 4091 0
c (0<=(SATLiteral(1180) + aux685 - SATLiteral(4091)))
1180 -4091 0
c ((SATLiteral(4091) - aux687 + SATLiteral(604))<=0)
-604 -4092 0
-4091 -4092 0
-4091 -604 -4093 0
c (0<=(SATLiteral(4091) - aux687 + SATLiteral(604)))
604 4093 0
4091 4093 0
4091 604 4092 0
c ((SATLiteral(1181) - aux688 + SATLiteral(606))<=0)
-606 -4095 0
-1181 -4095 0
-1181 -606 -4096 0
c (0<=(SATLiteral(1181) - aux688 + SATLiteral(606)))
606 4096 0
1181 4096 0
1181 606 4095 0
c (( - aux689 + SATLiteral(796) + SATLiteral(989))<=0)
-989 -4098 0
-796 -4098 0
-796 -989 -4099 0
c (0<=( - aux689 + SATLiteral(796) + SATLiteral(989)))
989 4099 0
796 4099 0
796 989 4098 0
c (( - aux690 + SATLiteral(797) + SATLiteral(605))<=0)
-605 -4101 0
-797 -4101 0
-797 -605 -4102 0
c (0<=( - aux690 + SATLiteral(797) + SATLiteral(605)))
605 4102 0
797 4102 0
797 605 4101 0
c (( - aux691 + SATLiteral(798) + SATLiteral(988))<=0)
-988 -4104 0
-798 -4104 0
-798 -988 -4105 0
c (0<=( - aux691 + SATLiteral(798) + SATLiteral(988)))
988 4105 0
798 4105 0
798 988 4104 0
c ((aux687 + aux691 - aux692)<=0)
4104 -4107 0
4105 -4108 0
4092 -4107 0
4092 4104 -4108 0
4092 4105 -4110 0
4093 -4108 0
4093 4104 -4110 0
4093 4105 -4112 0
c (0<=(aux687 + aux691 - aux692))
-4105 4112 0
-4104 4110 0
-4093 4112 0
-4093 -4105 4110 0
-4093 -4104 4108 0
-4092 4110 0
-4092 -4105 4108 0
-4092 -4104 4107 0
c ((aux688 + aux689 - aux693)<=0)
4098 -4114 0
4099 -4115 0
4095 -4114 0
4095 4098 -4115 0
4095 4099 -4117 0
4096 -4115 0
4096 4098 -4117 0
4096 4099 -4119 0
c (0<=(aux688 + aux689 - aux693))
-4099 4119 0
-4098 4117 0
-4096 4119 0
-4096 -4099 4117 0
-4096 -4098 4115 0
-4095 4117 0
-4095 -4099 4115 0
-4095 -4098 4114 0
c ((aux690 + aux693 - aux694)<=0)
4114 -4121 0
4115 -4122 0
4117 -4124 0
4119 -4126 0
4101 -4121 0
4101 4114 -4122 0
4101 4115 -4124 0
4101 4117 -4126 0
4101 4119 -4128 0
4102 -4122 0
4102 4114 -4124 0
4102 4115 -4126 0
4102 4117 -4128 0
4102 4119 -4130 0
c (0<=(aux690 + aux693 - aux694))
-4119 4130 0
-4117 4128 0
-4115 4126 0
-4114 4124 0
-4102 4130 0
-4102 -4119 4128 0
-4102 -4117 4126 0
-4102 -4115 4124 0
-4102 -4114 4122 0
-4101 4128 0
-4101 -4119 4126 0
-4101 -4117 4124 0
-4101 -4115 4122 0
-4101 -4114 4121 0
c ((aux695 - SATLiteral(4133) + SATLiteral(630))<=0)
4133 -630 0
c (0<=(aux695 - SATLiteral(4133) + SATLiteral(630)))
-4133 630 0
c ((SATLiteral(1204) + SATLiteral(4133) - aux697)<=0)
-4133 -4134 0
-1204 -4134 0
-1204 -4133 -4135 0
c (0<=(SATLiteral(1204) + SATLiteral(4133) - aux697))
4133 4135 0
1204 4135 0
1204 4133 4134 0
c ((SATLiteral(1205) - aux698 + SATLiteral(629))<=0)
-629 -4137 0
-1205 -4137 0
-1205 -629 -4138 0
c (0<=(SATLiteral(1205) - aux698 + SATLiteral(629)))
629 4138 0
1205 4138 0
1205 629 4137 0
c (( - aux699 + SATLiteral(1013) + SATLiteral(628))<=0)
-628 -4140 0
-1013 -4140 0
-1013 -628 -4141 0
c (0<=( - aux699 + SATLiteral(1013) + SATLiteral(628)))
628 4141 0
1013 4141 0
1013 628 4140 0
c ((SATLiteral(820) + SATLiteral(821) - aux700)<=0)
-821 -4143 0
-820 -4143 0
-820 -821 -4144 0
c (0<=(SATLiteral(820) + SATLiteral(821) - aux700))
821 4144 0
820 4144 0
820 821 4143 0
c ((SATLiteral(1206) + SATLiteral(822) - aux701)<=0)
-822 -4146 0
-1206 -4146 0
-1206 -822 -4147 0
c (0<=(SATLiteral(1206) + SATLiteral(822) - aux701))
822 4147 0
1206 4147 0
1206 822 4146 0
c ((aux701 - aux702 + SATLiteral(1012))<=0)
4146 -4149 0
4147 -4150 0
-1012 -4149 0
-1012 4146 -4150 0
-1012 4147 -4152 0
c (0<=(aux701 - aux702 + SATLiteral(1012)))
-4147 4152 0
-4146 4150 0
1012 4152 0
1012 -4147 4150 0
1012 -4146 4149 0
c ((aux698 + aux699 - aux703)<=0)
4140 -4154 0
4141 -4155 0
4137 -4154 0
4137 4140 -4155 0
4137 4141 -4157 0
4138 -4155 0
4138 4140 -4157 0
4138 4141 -4159 0
c (0<=(aux698 + aux699 - aux703))
-4141 4159 0
-4140 4157 0
-4138 4159 0
-4138 -4141 4157 0
-4138 -4140 4155 0
-4137 4157 0
-4137 -4141 4155 0
-4137 -4140 4154 0
c ((aux697 + aux700 - aux704)<=0)
4143 -4161 0
4144 -4162 0
4134 -4161 0
4134 4143 -4162 0
4134 4144 -4164 0
4135 -4162 0
4135 4143 -4164 0
4135 4144 -4166 0
c (0<=(aux697 + aux700 - aux704))
-4144 4166 0
-4143 4164 0
-4135 4166 0
-4135 -4144 4164 0
-4135 -4143 4162 0
-4134 4164 0
-4134 -4144 4162 0
-4134 -4143 4161 0
c ((aux702 + aux704 - aux705)<=0)
4161 -4168 0
4162 -4169 0
4164 -4171 0
4166 -4173 0
4149 -4168 0
4149 4161 -4169 0
4149 4162 -4171 0
4149 4164 -4173 0
4149 4166 -4175 0
4150 -4169 0
4150 4161 -4171 0
4150 4162 -4173 0
4150 4164 -4175 0
4150 4166 -4177 0
4152 -4171 0
4152 4161 -4173 0
4152 4162 -4175 0
4152 4164 -4177 0
4152 4166 -4179 0
c (0<=(aux702 + aux704 - aux705))
-4166 4179 0
-4164 4177 0
-4162 4175 0
-4161 4173 0
-4152 4179 0
-4152 -4166 4177 0
-4152 -4164 4175 0
-4152 -4162 4173 0
-4152 -4161 4171 0
-4150 4177 0
-4150 -4166 4175 0
-4150 -4164 4173 0
-4150 -4162 4171 0
-4150 -4161 4169 0
-4149 4175 0
-4149 -4166 4173 0
-4149 -4164 4171 0
-4149 -4162 4169 0
-4149 -4161 4168 0
c ((aux706 - SATLiteral(4182) + SATLiteral(1037))<=0)
4182 -1037 0
c (0<=(aux706 - SATLiteral(4182) + SATLiteral(1037)))
-4182 1037 0
c ((SATLiteral(4182) - aux708 + SATLiteral(1228))<=0)
-1228 -4183 0
-4182 -4183 0
-4182 -1228 -4184 0
c (0<=(SATLiteral(4182) - aux708 + SATLiteral(1228)))
1228 4184 0
4182 4184 0
4182 1228 4183 0
c (( - aux709 + SATLiteral(1036) + SATLiteral(1230))<=0)
-1230 -4186 0
-1036 -4186 0
-1036 -1230 -4187 0
c (0<=( - aux709 + SATLiteral(1036) + SATLiteral(1230)))
1230 4187 0
1036 4187 0
1036 1230 4186 0
c (( - aux710 + SATLiteral(652) + SATLiteral(654))<=0)
-654 -4189 0
-652 -4189 0
-652 -654 -4190 0
c (0<=( - aux710 + SATLiteral(652) + SATLiteral(654)))
654 4190 0
652 4190 0
652 654 4189 0
c ((SATLiteral(845) - aux711 + SATLiteral(653))<=0)
-653 -4192 0
-845 -4192 0
-845 -653 -4193 0
c (0<=(SATLiteral(845) - aux711 + SATLiteral(653)))
653 4193 0
845 4193 0
845 653 4192 0
c ((SATLiteral(844) - aux712 + SATLiteral(1229))<=0)
-1229 -4195 0
-844 -4195 0
-844 -1229 -4196 0
c (0<=(SATLiteral(844) - aux712 + SATLiteral(1229)))
1229 4196 0
844 4196 0
844 1229 4195 0
c ((SATLiteral(846) + aux712 - aux713)<=0)
4195 -4198 0
4196 -4199 0
-846 -4198 0
-846 4195 -4199 0
-846 4196 -4201 0
c (0<=(SATLiteral(846) + aux712 - aux713))
-4196 4201 0
-4195 4199 0
846 4201 0
846 -4196 4199 0
846 -4195 4198 0
c ((aux709 + aux710 - aux714)<=0)
4189 -4203 0
4190 -4204 0
4186 -4203 0
4186 4189 -4204 0
4186 4190 -4206 0
4187 -4204 0
4187 4189 -4206 0
4187 4190 -4208 0
c (0<=(aux709 + aux710 - aux714))
-4190 4208 0
-4189 4206 0
-4187 4208 0
-4187 -4190 4206 0
-4187 -4189 4204 0
-4186 4206 0
-4186 -4190 4204 0
-4186 -4189 4203 0
c ((aux708 + aux711 - aux715)<=0)
4192 -4210 0
4193 -4211 0
4183 -4210 0
4183 4192 -4211 0
4183 4193 -4213 0
4184 -4211 0
4184 4192 -4213 0
4184 4193 -4215 0
c (0<=(aux708 + aux711 - aux715))
-4193 4215 0
-4192 4213 0
-4184 4215 0
-4184 -4193 4213 0
-4184 -4192 4211 0
-4183 4213 0
-4183 -4193 4211 0
-4183 -4192 4210 0
c ((aux713 + aux715 - aux716)<=0)
4210 -4217 0
4211 -4218 0
4213 -4220 0
4215 -4222 0
4198 -4217 0
4198 4210 -4218 0
4198 4211 -4220 0
4198 4213 -4222 0
4198 4215 -4224 0
4199 -4218 0
4199 4210 -4220 0
4199 4211 -4222 0
4199 4213 -4224 0
4199 4215 -4226 0
4201 -4220 0
4201 4210 -4222 0
4201 4211 -4224 0
4201 4213 -4226 0
4201 4215 -4228 0
c (0<=(aux713 + aux715 - aux716))
-4215 4228 0
-4213 4226 0
-4211 4224 0
-4210 4222 0
-4201 4228 0
-4201 -4215 4226 0
-4201 -4213 4224 0
-4201 -4211 4222 0
-4201 -4210 4220 0
-4199 4226 0
-4199 -4215 4224 0
-4199 -4213 4222 0
-4199 -4211 4220 0
-4199 -4210 4218 0
-4198 4224 0
-4198 -4215 4222 0
-4198 -4213 4220 0
-4198 -4211 4218 0
-4198 -4210 4217 0
c ((aux718 - SATLiteral(4232) + SATLiteral(869))<=0)
4232 -869 0
c (0<=(aux718 - SATLiteral(4232) + SATLiteral(869)))
-4232 869 0
c ((SATLiteral(4232) - aux720 + SATLiteral(1254))<=0)
-1254 -4233 0
-4232 -4233 0
-4232 -1254 -4234 0
c (0<=(SATLiteral(4232) - aux720 + SATLiteral(1254)))
1254 4234 0
4232 4234 0
4232 1254 4233 0
c (( - aux721 + SATLiteral(678) + SATLiteral(1253))<=0)
-1253 -4236 0
-678 -4236 0
-678 -1253 -4237 0
c (0<=( - aux721 + SATLiteral(678) + SATLiteral(1253)))
1253 4237 0
678 4237 0
678 1253 4236 0
c (( - aux722 + SATLiteral(1061) + SATLiteral(1252))<=0)
-1252 -4239 0
-1061 -4239 0
-1061 -1252 -4240 0
c (0<=( - aux722 + SATLiteral(1061) + SATLiteral(1252)))
1252 4240 0
1061 4240 0
1061 1252 4239 0
c (( - aux723 + SATLiteral(676) + SATLiteral(868))<=0)
-868 -4242 0
-676 -4242 0
-676 -868 -4243 0
c (0<=( - aux723 + SATLiteral(676) + SATLiteral(868)))
868 4243 0
676 4243 0
676 868 4242 0
c (( - aux724 + SATLiteral(1060) + SATLiteral(677))<=0)
-677 -4245 0
-1060 -4245 0
-1060 -677 -4246 0
c (0<=( - aux724 + SATLiteral(1060) + SATLiteral(677)))
677 4246 0
1060 4246 0
1060 677 4245 0
c ((aux720 + aux724 - aux725)<=0)
4245 -4248 0
4246 -4249 0
4233 -4248 0
4233 4245 -4249 0
4233 4246 -4251 0
4234 -4249 0
4234 4245 -4251 0
4234 4246 -4253 0
c (0<=(aux720 + aux724 - aux725))
-4246 4253 0
-4245 4251 0
-4234 4253 0
-4234 -4246 4251 0
-4234 -4245 4249 0
-4233 4251 0
-4233 -4246 4249 0
-4233 -4245 4248 0
c ((aux721 + aux722 - aux726)<=0)
4239 -4255 0
4240 -4256 0
4236 -4255 0
4236 4239 -4256 0
4236 4240 -4258 0
4237 -4256 0
4237 4239 -4258 0
4237 4240 -4260 0
c (0<=(aux721 + aux722 - aux726))
-4240 4260 0
-4239 4258 0
-4237 4260 0
-4237 -4240 4258 0
-4237 -4239 4256 0
-4236 4258 0
-4236 -4240 4256 0
-4236 -4239 4255 0
c ((aux723 + aux726 - aux727)<=0)
4255 -4262 0
4256 -4263 0
4258 -4265 0
4260 -4267 0
4242 -4262 0
4242 4255 -4263 0
4242 4256 -4265 0
4242 4258 -4267 0
4242 4260 -4269 0
4243 -4263 0
4243 4255 -4265 0
4243 4256 -4267 0
4243 4258 -4269 0
4243 4260 -4271 0
c (0<=(aux723 + aux726 - aux727))
-4260 4271 0
-4258 4269 0
-4256 4267 0
-4255 4265 0
-4243 4271 0
-4243 -4260 4269 0
-4243 -4258 4267 0
-4243 -4256 4265 0
-4243 -4255 4263 0
-4242 4269 0
-4242 -4260 4267 0
-4242 -4258 4265 0
-4242 -4256 4263 0
-4242 -4255 4262 0
c ((aux730 - SATLiteral(4276) + SATLiteral(701))<=0)
4276 -701 0
c (0<=(aux730 - SATLiteral(4276) + SATLiteral(701)))
-4276 701 0
c ((SATLiteral(4276) - aux732 + SATLiteral(1277))<=0)
-1277 -4277 0
-4276 -4277 0
-4276 -1277 -4278 0
c (0<=(SATLiteral(4276) - aux732 + SATLiteral(1277)))
1277 4278 0
4276 4278 0
4276 1277 4277 0
c (( - aux733 + SATLiteral(1276) + SATLiteral(1278))<=0)
-1278 -4280 0
-1276 -4280 0
-1276 -1278 -4281 0
c (0<=( - aux733 + SATLiteral(1276) + SATLiteral(1278)))
1278 4281 0
1276 4281 0
1276 1278 4280 0
c ((SATLiteral(1085) - aux734 + SATLiteral(700))<=0)
-700 -4283 0
-1085 -4283 0
-1085 -700 -4284 0
c (0<=(SATLiteral(1085) - aux734 + SATLiteral(700)))
700 4284 0
1085 4284 0
1085 700 4283 0
c ((SATLiteral(1084) - aux735 + SATLiteral(702))<=0)
-702 -4286 0
-1084 -4286 0
-1084 -702 -4287 0
c (0<=(SATLiteral(1084) - aux735 + SATLiteral(702)))
702 4287 0
1084 4287 0
1084 702 4286 0
c ((aux735 - aux736 + SATLiteral(892))<=0)
4286 -4289 0
4287 -4290 0
-892 -4289 0
-892 4286 -4290 0
-892 4287 -4292 0
c (0<=(aux735 - aux736 + SATLiteral(892)))
-4287 4292 0
-4286 4290 0
892 4292 0
892 -4287 4290 0
892 -4286 4289 0
c ((aux732 + aux733 - aux737)<=0)
4280 -4294 0
4281 -4295 0
4277 -4294 0
4277 4280 -4295 0
4277 4281 -4297 0
4278 -4295 0
4278 4280 -4297 0
4278 4281 -4299 0
c (0<=(aux732 + aux733 - aux737))
-4281 4299 0
-4280 4297 0
-4278 4299 0
-4278 -4281 4297 0
-4278 -4280 4295 0
-4277 4297 0
-4277 -4281 4295 0
-4277 -4280 4294 0
c ((aux734 + aux736 - aux738)<=0)
4289 -4301 0
4290 -4302 0
4292 -4304 0
4283 -4301 0
4283 4289 -4302 0
4283 4290 -4304 0
4283 4292 -4306 0
4284 -4302 0
4284 4289 -4304 0
4284 4290 -4306 0
4284 4292 -4308 0
c (0<=(aux734 + aux736 - aux738))
-4292 4308 0
-4290 4306 0
-4289 4304 0
-4284 4308 0
-4284 -4292 4306 0
-4284 -4290 4304 0
-4284 -4289 4302 0
-4283 4306 0
-4283 -4292 4304 0
-4283 -4290 4302 0
-4283 -4289 4301 0
c ((SATLiteral(1109) + aux742 - SATLiteral(4314))<=0)
-1109 4314 0
c (0<=(SATLiteral(1109) + aux742 - SATLiteral(4314)))
1109 -4314 0
c ((SATLiteral(4314) - aux744 + SATLiteral(1300))<=0)
-1300 -4315 0
-4314 -4315 0
-4314 -1300 -4316 0
c (0<=(SATLiteral(4314) - aux744 + SATLiteral(1300)))
1300 4316 0
4314 4316 0
4314 1300 4315 0
c (( - aux745 + SATLiteral(724) + SATLiteral(1301))<=0)
-1301 -4318 0
-724 -4318 0
-724 -1301 -4319 0
c (0<=( - aux745 + SATLiteral(724) + SATLiteral(1301)))
1301 4319 0
724 4319 0
724 1301 4318 0
c (( - aux746 + SATLiteral(725) + SATLiteral(726))<=0)
-726 -4321 0
-725 -4321 0
-725 -726 -4322 0
c (0<=( - aux746 + SATLiteral(725) + SATLiteral(726)))
726 4322 0
725 4322 0
725 726 4321 0
c ((SATLiteral(1108) - aux747 + SATLiteral(1302))<=0)
-1302 -4324 0
-1108 -4324 0
-1108 -1302 -4325 0
c (0<=(SATLiteral(1108) - aux747 + SATLiteral(1302)))
1302 4325 0
1108 4325 0
1108 1302 4324 0
c ((aux745 + aux747 - aux748)<=0)
4324 -4327 0
4325 -4328 0
4318 -4327 0
4318 4324 -4328 0
4318 4325 -4330 0
4319 -4328 0
4319 4324 -4330 0
4319 4325 -4332 0
c (0<=(aux745 + aux747 - aux748))
-4325 4332 0
-4324 4330 0
-4319 4332 0
-4319 -4325 4330 0
-4319 -4324 4328 0
-4318 4330 0
-4318 -4325 4328 0
-4318 -4324 4327 0
c ((aux744 + aux746 - aux749)<=0)
4321 -4334 0
4322 -4335 0
4315 -4334 0
4315 4321 -4335 0
4315 4322 -4337 0
4316 -4335 0
4316 4321 -4337 0
4316 4322 -4339 0
c (0<=(aux744 + aux746 - aux749))
-4322 4339 0
-4321 4337 0
-4316 4339 0
-4316 -4322 4337 0
-4316 -4321 4335 0
-4315 4337 0
-4315 -4322 4335 0
-4315 -4321 4334 0
c ((aux752 - SATLiteral(4344) + SATLiteral(561))<=0)
4344 -561 0
c (0<=(aux752 - SATLiteral(4344) + SATLiteral(561)))
-4344 561 0
c ((SATLiteral(4344) - aux754 + SATLiteral(944))<=0)
-944 -4345 0
-4344 -4345 0
-4344 -944 -4346 0
c (0<=(SATLiteral(4344) - aux754 + SATLiteral(944)))
944 4346 0
4344 4346 0
4344 944 4345 0
c (( - aux755 + SATLiteral(943) + SATLiteral(945))<=0)
-945 -4348 0
-943 -4348 0
-943 -945 -4349 0
c (0<=( - aux755 + SATLiteral(943) + SATLiteral(945)))
945 4349 0
943 4349 0
943 945 4348 0
c (( - aux756 + SATLiteral(753) + SATLiteral(560))<=0)
-560 -4351 0
-753 -4351 0
-753 -560 -4352 0
c (0<=( - aux756 + SATLiteral(753) + SATLiteral(560)))
560 4352 0
753 4352 0
753 560 4351 0
c (( - aux757 + SATLiteral(751) + SATLiteral(752))<=0)
-752 -4354 0
-751 -4354 0
-751 -752 -4355 0
c (0<=( - aux757 + SATLiteral(751) + SATLiteral(752)))
752 4355 0
751 4355 0
751 752 4354 0
c ((aux757 - aux758 + SATLiteral(559))<=0)
4354 -4357 0
4355 -4358 0
-559 -4357 0
-559 4354 -4358 0
-559 4355 -4360 0
c (0<=(aux757 - aux758 + SATLiteral(559)))
-4355 4360 0
-4354 4358 0
559 4360 0
559 -4355 4358 0
559 -4354 4357 0
c ((aux754 + aux755 - aux759)<=0)
4348 -4362 0
4349 -4363 0
4345 -4362 0
4345 4348 -4363 0
4345 4349 -4365 0
4346 -4363 0
4346 4348 -4365 0
4346 4349 -4367 0
c (0<=(aux754 + aux755 - aux759))
-4349 4367 0
-4348 4365 0
-4346 4367 0
-4346 -4349 4365 0
-4346 -4348 4363 0
-4345 4365 0
-4345 -4349 4363 0
-4345 -4348 4362 0
c ((aux756 + aux758 - aux760)<=0)
4357 -4369 0
4358 -4370 0
4360 -4372 0
4351 -4369 0
4351 4357 -4370 0
4351 4358 -4372 0
4351 4360 -4374 0
4352 -4370 0
4352 4357 -4372 0
4352 4358 -4374 0
4352 4360 -4376 0
c (0<=(aux756 + aux758 - aux760))
-4360 4376 0
-4358 4374 0
-4357 4372 0
-4352 4376 0
-4352 -4360 4374 0
-4352 -4358 4372 0
-4352 -4357 4370 0
-4351 4374 0
-4351 -4360 4372 0
-4351 -4358 4370 0
-4351 -4357 4369 0
c ((aux762 - SATLiteral(4380) + SATLiteral(584))<=0)
4380 -584 0
c (0<=(aux762 - SATLiteral(4380) + SATLiteral(584)))
-4380 584 0
c ((SATLiteral(4380) - aux764 + SATLiteral(969))<=0)
-969 -4381 0
-4380 -4381 0
-4380 -969 -4382 0
c (0<=(SATLiteral(4380) - aux764 + SATLiteral(969)))
969 4382 0
4380 4382 0
4380 969 4381 0
c (( - aux765 + SATLiteral(968) + SATLiteral(585))<=0)
-585 -4384 0
-968 -4384 0
-968 -585 -4385 0
c (0<=( - aux765 + SATLiteral(968) + SATLiteral(585)))
585 4385 0
968 4385 0
968 585 4384 0
c (( - aux766 + SATLiteral(1159) + SATLiteral(967))<=0)
-967 -4387 0
-1159 -4387 0
-1159 -967 -4388 0
c (0<=( - aux766 + SATLiteral(1159) + SATLiteral(967)))
967 4388 0
1159 4388 0
1159 967 4387 0
c (( - aux767 + SATLiteral(775) + SATLiteral(583))<=0)
-583 -4390 0
-775 -4390 0
-775 -583 -4391 0
c (0<=( - aux767 + SATLiteral(775) + SATLiteral(583)))
583 4391 0
775 4391 0
775 583 4390 0
c (( - aux768 + SATLiteral(776) + SATLiteral(777))<=0)
-777 -4393 0
-776 -4393 0
-776 -777 -4394 0
c (0<=( - aux768 + SATLiteral(776) + SATLiteral(777)))
777 4394 0
776 4394 0
776 777 4393 0
c ((aux764 + aux768 - aux769)<=0)
4393 -4396 0
4394 -4397 0
4381 -4396 0
4381 4393 -4397 0
4381 4394 -4399 0
4382 -4397 0
4382 4393 -4399 0
4382 4394 -4401 0
c (0<=(aux764 + aux768 - aux769))
-4394 4401 0
-4393 4399 0
-4382 4401 0
-4382 -4394 4399 0
-4382 -4393 4397 0
-4381 4399 0
-4381 -4394 4397 0
-4381 -4393 4396 0
c ((aux765 + aux766 - aux770)<=0)
4387 -4403 0
4388 -4404 0
4384 -4403 0
4384 4387 -4404 0
4384 4388 -4406 0
4385 -4404 0
4385 4387 -4406 0
4385 4388 -4408 0
c (0<=(aux765 + aux766 - aux770))
-4388 4408 0
-4387 4406 0
-4385 4408 0
-4385 -4388 4406 0
-4385 -4387 4404 0
-4384 4406 0
-4384 -4388 4404 0
-4384 -4387 4403 0
c ((aux767 + aux770 - aux771)<=0)
4403 -4410 0
4404 -4411 0
4406 -4413 0
4408 -4415 0
4390 -4410 0
4390 4403 -4411 0
4390 4404 -4413 0
4390 4406 -4415 0
4390 4408 -4417 0
4391 -4411 0
4391 4403 -4413 0
4391 4404 -4415 0
4391 4406 -4417 0
4391 4408 -4419 0
c (0<=(aux767 + aux770 - aux771))
-4408 4419 0
-4406 4417 0
-4404 4415 0
-4403 4413 0
-4391 4419 0
-4391 -4408 4417 0
-4391 -4406 4415 0
-4391 -4404 4413 0
-4391 -4403 4411 0
-4390 4417 0
-4390 -4408 4415 0
-4390 -4406 4413 0
-4390 -4404 4411 0
-4390 -4403 4410 0
c ((aux772 - SATLiteral(4422) + SATLiteral(801))<=0)
4422 -801 0
c (0<=(aux772 - SATLiteral(4422) + SATLiteral(801)))
-4422 801 0
c ((SATLiteral(4422) - aux774 + SATLiteral(607))<=0)
-607 -4423 0
-4422 -4423 0
-4422 -607 -4424 0
c (0<=(SATLiteral(4422) - aux774 + SATLiteral(607)))
607 4424 0
4422 4424 0
4422 607 4423 0
c (( - aux775 + SATLiteral(1184) + SATLiteral(799))<=0)
-799 -4426 0
-1184 -4426 0
-1184 -799 -4427 0
c (0<=( - aux775 + SATLiteral(1184) + SATLiteral(799)))
799 4427 0
1184 4427 0
1184 799 4426 0
c (( - aux776 + SATLiteral(991) + SATLiteral(993))<=0)
-993 -4429 0
-991 -4429 0
-991 -993 -4430 0
c (0<=( - aux776 + SATLiteral(991) + SATLiteral(993)))
993 4430 0
991 4430 0
991 993 4429 0
c (( - aux777 + SATLiteral(800) + SATLiteral(992))<=0)
-992 -4432 0
-800 -4432 0
-800 -992 -4433 0
c (0<=( - aux777 + SATLiteral(800) + SATLiteral(992)))
992 4433 0
800 4433 0
800 992 4432 0
c (( - aux778 + SATLiteral(608) + SATLiteral(609))<=0)
-609 -4435 0
-608 -4435 0
-608 -609 -4436 0
c (0<=( - aux778 + SATLiteral(608) + SATLiteral(609)))
609 4436 0
608 4436 0
608 609 4435 0
c ((aux778 - aux779 + SATLiteral(1183))<=0)
4435 -4438 0
4436 -4439 0
-1183 -4438 0
-1183 4435 -4439 0
-1183 4436 -4441 0
c (0<=(aux778 - aux779 + SATLiteral(1183)))
-4436 4441 0
-4435 4439 0
1183 4441 0
1183 -4436 4439 0
1183 -4435 4438 0
c ((aux775 + aux776 - aux780)<=0)
4429 -4443 0
4430 -4444 0
4426 -4443 0
4426 4429 -4444 0
4426 4430 -4446 0
4427 -4444 0
4427 4429 -4446 0
4427 4430 -4448 0
c (0<=(aux775 + aux776 - aux780))
-4430 4448 0
-4429 4446 0
-4427 4448 0
-4427 -4430 4446 0
-4427 -4429 4444 0
-4426 4446 0
-4426 -4430 4444 0
-4426 -4429 4443 0
c ((aux774 + aux777 - aux781)<=0)
4432 -4450 0
4433 -4451 0
4423 -4450 0
4423 4432 -4451 0
4423 4433 -4453 0
4424 -4451 0
4424 4432 -4453 0
4424 4433 -4455 0
c (0<=(aux774 + aux777 - aux781))
-4433 4455 0
-4432 4453 0
-4424 4455 0
-4424 -4433 4453 0
-4424 -4432 4451 0
-4423 4453 0
-4423 -4433 4451 0
-4423 -4432 4450 0
c ((aux779 + aux781 - aux782)<=0)
4450 -4457 0
4451 -4458 0
4453 -4460 0
4455 -4462 0
4438 -4457 0
4438 4450 -4458 0
4438 4451 -4460 0
4438 4453 -4462 0
4438 4455 -4464 0
4439 -4458 0
4439 4450 -4460 0
4439 4451 -4462 0
4439 4453 -4464 0
4439 4455 -4466 0
4441 -4460 0
4441 4450 -4462 0
4441 4451 -4464 0
4441 4453 -4466 0
4441 4455 -4468 0
c (0<=(aux779 + aux781 - aux782))
-4455 4468 0
-4453 4466 0
-4451 4464 0
-4450 4462 0
-4441 4468 0
-4441 -4455 4466 0
-4441 -4453 4464 0
-4441 -4451 4462 0
-4441 -4450 4460 0
-4439 4466 0
-4439 -4455 4464 0
-4439 -4453 4462 0
-4439 -4451 4460 0
-4439 -4450 4458 0
-4438 4464 0
-4438 -4455 4462 0
-4438 -4453 4460 0
-4438 -4451 4458 0
-4438 -4450 4457 0
c ((SATLiteral(4470) - aux784 + SATLiteral(633))<=0)
-633 -4471 0
-4470 -4471 0
-4470 -633 -4472 0
c (0<=(SATLiteral(4470) - aux784 + SATLiteral(633)))
633 4472 0
4470 4472 0
4470 633 4471 0
c (( - aux785 + SATLiteral(823) + SATLiteral(632))<=0)
-632 -4474 0
-823 -4474 0
-823 -632 -4475 0
c (0<=( - aux785 + SATLiteral(823) + SATLiteral(632)))
632 4475 0
823 4475 0
823 632 4474 0
c (( - aux786 + SATLiteral(1015) + SATLiteral(631))<=0)
-631 -4477 0
-1015 -4477 0
-1015 -631 -4478 0
c (0<=( - aux786 + SATLiteral(1015) + SATLiteral(631)))
631 4478 0
1015 4478 0
1015 631 4477 0
c (( - aux787 + SATLiteral(1016) + SATLiteral(1017))<=0)
-1017 -4480 0
-1016 -4480 0
-1016 -1017 -4481 0
c (0<=( - aux787 + SATLiteral(1016) + SATLiteral(1017)))
1017 4481 0
1016 4481 0
1016 1017 4480 0
c (( - aux788 + SATLiteral(1207) + SATLiteral(824))<=0)
-824 -4483 0
-1207 -4483 0
-1207 -824 -4484 0
c (0<=( - aux788 + SATLiteral(1207) + SATLiteral(824)))
824 4484 0
1207 4484 0
1207 824 4483 0
c (( - aux789 + SATLiteral(1209) + SATLiteral(825))<=0)
-825 -4486 0
-1209 -4486 0
-1209 -825 -4487 0
c (0<=( - aux789 + SATLiteral(1209) + SATLiteral(825)))
825 4487 0
1209 4487 0
1209 825 4486 0
c ((aux784 + aux789 - aux790)<=0)
4486 -4489 0
4487 -4490 0
4471 -4489 0
4471 4486 -4490 0
4471 4487 -4492 0
4472 -4490 0
4472 4486 -4492 0
4472 4487 -4494 0
c (0<=(aux784 + aux789 - aux790))
-4487 4494 0
-4486 4492 0
-4472 4494 0
-4472 -4487 4492 0
-4472 -4486 4490 0
-4471 4492 0
-4471 -4487 4490 0
-4471 -4486 4489 0
c ((aux785 + aux787 - aux791)<=0)
4480 -4496 0
4481 -4497 0
4474 -4496 0
4474 4480 -4497 0
4474 4481 -4499 0
4475 -4497 0
4475 4480 -4499 0
4475 4481 -4501 0
c (0<=(aux785 + aux787 - aux791))
-4481 4501 0
-4480 4499 0
-4475 4501 0
-4475 -4481 4499 0
-4475 -4480 4497 0
-4474 4499 0
-4474 -4481 4497 0
-4474 -4480 4496 0
c ((aux786 + aux788 - aux792)<=0)
4483 -4503 0
4484 -4504 0
4477 -4503 0
4477 4483 -4504 0
4477 4484 -4506 0
4478 -4504 0
4478 4483 -4506 0
4478 4484 -4508 0
c (0<=(aux786 + aux788 - aux792))
-4484 4508 0
-4483 4506 0
-4478 4508 0
-4478 -4484 4506 0
-4478 -4483 4504 0
-4477 4506 0
-4477 -4484 4504 0
-4477 -4483 4503 0
c ((aux792 - aux793 - shift(agrid_00004_00004, -4))<=0)
-196 -4510 0
-194 -4511 0
-192 -4513 0
-191 -4515 0
4503 -4510 0
4503 -196 -4511 0
4503 -194 -4513 0
4503 -192 -4515 0
4503 -191 -4517 0
4504 -4511 0
4504 -196 -4513 0
4504 -194 -4515 0
4504 -192 -4517 0
4504 -191 -4519 0
4506 -4513 0
4506 -196 -4515 0
4506 -194 -4517 0
4506 -192 -4519 0
4506 -191 -4521 0
4508 -4515 0
4508 -196 -4517 0
4508 -194 -4519 0
4508 -192 -4521 0
4508 -191 -4523 0
c (0<=(aux792 - aux793 - shift(agrid_00004_00004, -4)))
191 4523 0
192 4521 0
194 4519 0
196 4517 0
-4508 4523 0
-4508 191 4521 0
-4508 192 4519 0
-4508 194 4517 0
-4508 196 4515 0
-4506 4521 0
-4506 191 4519 0
-4506 192 4517 0
-4506 194 4515 0
-4506 196 4513 0
-4504 4519 0
-4504 191 4517 0
-4504 192 4515 0
-4504 194 4513 0
-4504 196 4511 0
-4503 4517 0
-4503 191 4515 0
-4503 192 4513 0
-4503 194 4511 0
-4503 196 4510 0
c ((SATLiteral(4525) - aux795 + SATLiteral(656))<=0)
-656 -4526 0
-4525 -4526 0
-4525 -656 -4527 0
c (0<=(SATLiteral(4525) - aux795 + SATLiteral(656)))
656 4527 0
4525 4527 0
4525 656 4526 0
c (( - aux796 + SATLiteral(1231) + SATLiteral(655))<=0)
-655 -4529 0
-1231 -4529 0
-1231 -655 -4530 0
c (0<=( - aux796 + SATLiteral(1231) + SATLiteral(655)))
655 4530 0
1231 4530 0
1231 655 4529 0
c (( - aux797 + SATLiteral(847) + SATLiteral(1039))<=0)
-1039 -4532 0
-847 -4532 0
-847 -1039 -4533 0
c (0<=( - aux797 + SATLiteral(847) + SATLiteral(1039)))
1039 4533 0
847 4533 0
847 1039 4532 0
c (( - aux798 + SATLiteral(1040) + SATLiteral(1041))<=0)
-1041 -4535 0
-1040 -4535 0
-1040 -1041 -4536 0
c (0<=( - aux798 + SATLiteral(1040) + SATLiteral(1041)))
1041 4536 0
1040 4536 0
1040 1041 4535 0
c (( - aux799 + SATLiteral(1232) + SATLiteral(1233))<=0)
-1233 -4538 0
-1232 -4538 0
-1232 -1233 -4539 0
c (0<=( - aux799 + SATLiteral(1232) + SATLiteral(1233)))
1233 4539 0
1232 4539 0
1232 1233 4538 0
c (( - aux800 + SATLiteral(848) + SATLiteral(849))<=0)
-849 -4541 0
-848 -4541 0
-848 -849 -4542 0
c (0<=( - aux800 + SATLiteral(848) + SATLiteral(849)))
849 4542 0
848 4542 0
848 849 4541 0
c ((aux795 + aux800 - aux801)<=0)
4541 -4544 0
4542 -4545 0
4526 -4544 0
4526 4541 -4545 0
4526 4542 -4547 0
4527 -4545 0
4527 4541 -4547 0
4527 4542 -4549 0
c (0<=(aux795 + aux800 - aux801))
-4542 4549 0
-4541 4547 0
-4527 4549 0
-4527 -4542 4547 0
-4527 -4541 4545 0
-4526 4547 0
-4526 -4542 4545 0
-4526 -4541 4544 0
c ((aux796 + aux798 - aux802)<=0)
4535 -4551 0
4536 -4552 0
4529 -4551 0
4529 4535 -4552 0
4529 4536 -4554 0
4530 -4552 0
4530 4535 -4554 0
4530 4536 -4556 0
c (0<=(aux796 + aux798 - aux802))
-4536 4556 0
-4535 4554 0
-4530 4556 0
-4530 -4536 4554 0
-4530 -4535 4552 0
-4529 4554 0
-4529 -4536 4552 0
-4529 -4535 4551 0
c ((aux797 + aux799 - aux803)<=0)
4538 -4558 0
4539 -4559 0
4532 -4558 0
4532 4538 -4559 0
4532 4539 -4561 0
4533 -4559 0
4533 4538 -4561 0
4533 4539 -4563 0
c (0<=(aux797 + aux799 - aux803))
-4539 4563 0
-4538 4561 0
-4533 4563 0
-4533 -4539 4561 0
-4533 -4538 4559 0
-4532 4561 0
-4532 -4539 4559 0
-4532 -4538 4558 0
c ((aux803 - aux804 - shift(agrid_00005_00004, -4))<=0)
-252 -4565 0
-250 -4566 0
-248 -4568 0
-247 -4570 0
4558 -4565 0
4558 -252 -4566 0
4558 -250 -4568 0
4558 -248 -4570 0
4558 -247 -4572 0
4559 -4566 0
4559 -252 -4568 0
4559 -250 -4570 0
4559 -248 -4572 0
4559 -247 -4574 0
4561 -4568 0
4561 -252 -4570 0
4561 -250 -4572 0
4561 -248 -4574 0
4561 -247 -4576 0
4563 -4570 0
4563 -252 -4572 0
4563 -250 -4574 0
4563 -248 -4576 0
4563 -247 -4578 0
c (0<=(aux803 - aux804 - shift(agrid_00005_00004, -4)))
247 4578 0
248 4576 0
250 4574 0
252 4572 0
-4563 4578 0
-4563 247 4576 0
-4563 248 4574 0
-4563 250 4572 0
-4563 252 4570 0
-4561 4576 0
-4561 247 4574 0
-4561 248 4572 0
-4561 250 4570 0
-4561 252 4568 0
-4559 4574 0
-4559 247 4572 0
-4559 248 4570 0
-4559 250 4568 0
-4559 252 4566 0
-4558 4572 0
-4558 247 4570 0
-4558 248 4568 0
-4558 250 4566 0
-4558 252 4565 0
c ((SATLiteral(1257) + aux805 - SATLiteral(4581))<=0)
-1257 4581 0
c (0<=(SATLiteral(1257) + aux805 - SATLiteral(4581)))
1257 -4581 0
c ((SATLiteral(4581) - aux807 + SATLiteral(679))<=0)
-679 -4582 0
-4581 -4582 0
-4581 -679 -4583 0
c (0<=(SATLiteral(4581) - aux807 + SATLiteral(679)))
679 4583 0
4581 4583 0
4581 679 4582 0
c (( - aux808 + SATLiteral(871) + SATLiteral(872))<=0)
-872 -4585 0
-871 -4585 0
-871 -872 -4586 0
c (0<=( - aux808 + SATLiteral(871) + SATLiteral(872)))
872 4586 0
871 4586 0
871 872 4585 0
c (( - aux809 + SATLiteral(1063) + SATLiteral(1065))<=0)
-1065 -4588 0
-1063 -4588 0
-1063 -1065 -4589 0
c (0<=( - aux809 + SATLiteral(1063) + SATLiteral(1065)))
1065 4589 0
1063 4589 0
1063 1065 4588 0
c ((SATLiteral(1256) - aux810 + SATLiteral(1064))<=0)
-1064 -4591 0
-1256 -4591 0
-1256 -1064 -4592 0
c (0<=(SATLiteral(1256) - aux810 + SATLiteral(1064)))
1064 4592 0
1256 4592 0
1256 1064 4591 0
c ((SATLiteral(1255) - aux811 + SATLiteral(680))<=0)
-680 -4594 0
-1255 -4594 0
-1255 -680 -4595 0
c (0<=(SATLiteral(1255) - aux811 + SATLiteral(680)))
680 4595 0
1255 4595 0
1255 680 4594 0
c ((aux811 - aux812 + SATLiteral(681))<=0)
4594 -4597 0
4595 -4598 0
-681 -4597 0
-681 4594 -4598 0
-681 4595 -4600 0
c (0<=(aux811 - aux812 + SATLiteral(681)))
-4595 4600 0
-4594 4598 0
681 4600 0
681 -4595 4598 0
681 -4594 4597 0
c ((aux808 + aux809 - aux813)<=0)
4588 -4602 0
4589 -4603 0
4585 -4602 0
4585 4588 -4603 0
4585 4589 -4605 0
4586 -4603 0
4586 4588 -4605 0
4586 4589 -4607 0
c (0<=(aux808 + aux809 - aux813))
-4589 4607 0
-4588 4605 0
-4586 4607 0
-4586 -4589 4605 0
-4586 -4588 4603 0
-4585 4605 0
-4585 -4589 4603 0
-4585 -4588 4602 0
c ((aux807 + aux810 - aux814)<=0)
4591 -4609 0
4592 -4610 0
4582 -4609 0
4582 4591 -4610 0
4582 4592 -4612 0
4583 -4610 0
4583 4591 -4612 0
4583 4592 -4614 0
c (0<=(aux807 + aux810 - aux814))
-4592 4614 0
-4591 4612 0
-4583 4614 0
-4583 -4592 4612 0
-4583 -4591 4610 0
-4582 4612 0
-4582 -4592 4610 0
-4582 -4591 4609 0
c ((aux812 + aux814 - aux815)<=0)
4609 -4616 0
4610 -4617 0
4612 -4619 0
4614 -4621 0
4597 -4616 0
4597 4609 -4617 0
4597 4610 -4619 0
4597 4612 -4621 0
4597 4614 -4623 0
4598 -4617 0
4598 4609 -4619 0
4598 4610 -4621 0
4598 4612 -4623 0
4598 4614 -4625 0
4600 -4619 0
4600 4609 -4621 0
4600 4610 -4623 0
4600 4612 -4625 0
4600 4614 -4627 0
c (0<=(aux812 + aux814 - aux815))
-4614 4627 0
-4612 4625 0
-4610 4623 0
-4609 4621 0
-4600 4627 0
-4600 -4614 4625 0
-4600 -4612 4623 0
-4600 -4610 4621 0
-4600 -4609 4619 0
-4598 4625 0
-4598 -4614 4623 0
-4598 -4612 4621 0
-4598 -4610 4619 0
-4598 -4609 4617 0
-4597 4623 0
-4597 -4614 4621 0
-4597 -4612 4619 0
-4597 -4610 4617 0
-4597 -4609 4616 0
c ((SATLiteral(1281) + aux817 - SATLiteral(4631))<=0)
-1281 4631 0
c (0<=(SATLiteral(1281) + aux817 - SATLiteral(4631)))
1281 -4631 0
c ((SATLiteral(4631) - aux819 + SATLiteral(704))<=0)
-704 -4632 0
-4631 -4632 0
-4631 -704 -4633 0
c (0<=(SATLiteral(4631) - aux819 + SATLiteral(704)))
704 4633 0
4631 4633 0
4631 704 4632 0
c ((SATLiteral(895) - aux820 + SATLiteral(703))<=0)
-703 -4635 0
-895 -4635 0
-895 -703 -4636 0
c (0<=(SATLiteral(895) - aux820 + SATLiteral(703)))
703 4636 0
895 4636 0
895 703 4635 0
c (( - aux821 + SATLiteral(1088) + SATLiteral(1089))<=0)
-1089 -4638 0
-1088 -4638 0
-1088 -1089 -4639 0
c (0<=( - aux821 + SATLiteral(1088) + SATLiteral(1089)))
1089 4639 0
1088 4639 0
1088 1089 4638 0
c ((SATLiteral(1279) + SATLiteral(1280) - aux822)<=0)
-1280 -4641 0
-1279 -4641 0
-1279 -1280 -4642 0
c (0<=(SATLiteral(1279) + SATLiteral(1280) - aux822))
1280 4642 0
1279 4642 0
1279 1280 4641 0
c (( - aux823 + SATLiteral(1087) + SATLiteral(705))<=0)
-705 -4644 0
-1087 -4644 0
-1087 -705 -4645 0
c (0<=( - aux823 + SATLiteral(1087) + SATLiteral(705)))
705 4645 0
1087 4645 0
1087 705 4644 0
c ((aux819 + aux823 - aux824)<=0)
4644 -4647 0
4645 -4648 0
4632 -4647 0
4632 4644 -4648 0
4632 4645 -4650 0
4633 -4648 0
4633 4644 -4650 0
4633 4645 -4652 0
c (0<=(aux819 + aux823 - aux824))
-4645 4652 0
-4644 4650 0
-4633 4652 0
-4633 -4645 4650 0
-4633 -4644 4648 0
-4632 4650 0
-4632 -4645 4648 0
-4632 -4644 4647 0
c ((aux820 + aux821 - aux825)<=0)
4638 -4654 0
4639 -4655 0
4635 -4654 0
4635 4638 -4655 0
4635 4639 -4657 0
4636 -4655 0
4636 4638 -4657 0
4636 4639 -4659 0
c (0<=(aux820 + aux821 - aux825))
-4639 4659 0
-4638 4657 0
-4636 4659 0
-4636 -4639 4657 0
-4636 -4638 4655 0
-4635 4657 0
-4635 -4639 4655 0
-4635 -4638 4654 0
c ((aux822 + aux825 - aux826)<=0)
4654 -4661 0
4655 -4662 0
4657 -4664 0
4659 -4666 0
4641 -4661 0
4641 4654 -4662 0
4641 4655 -4664 0
4641 4657 -4666 0
4641 4659 -4668 0
4642 -4662 0
4642 4654 -4664 0
4642 4655 -4666 0
4642 4657 -4668 0
4642 4659 -4670 0
c (0<=(aux822 + aux825 - aux826))
-4659 4670 0
-4657 4668 0
-4655 4666 0
-4654 4664 0
-4642 4670 0
-4642 -4659 4668 0
-4642 -4657 4666 0
-4642 -4655 4664 0
-4642 -4654 4662 0
-4641 4668 0
-4641 -4659 4666 0
-4641 -4657 4664 0
-4641 -4655 4662 0
-4641 -4654 4661 0
c ((SATLiteral(1303) + aux829 - SATLiteral(4675))<=0)
-1303 4675 0
c (0<=(SATLiteral(1303) + aux829 - SATLiteral(4675)))
1303 -4675 0
c ((SATLiteral(4675) - aux831 + SATLiteral(727))<=0)
-727 -4676 0
-4675 -4676 0
-4675 -727 -4677 0
c (0<=(SATLiteral(4675) - aux831 + SATLiteral(727)))
727 4677 0
4675 4677 0
4675 727 4676 0
c (( - aux832 + SATLiteral(1113) + SATLiteral(728))<=0)
-728 -4679 0
-1113 -4679 0
-1113 -728 -4680 0
c (0<=( - aux832 + SATLiteral(1113) + SATLiteral(728)))
728 4680 0
1113 4680 0
1113 728 4679 0
c ((SATLiteral(1304) - aux833 + SATLiteral(1112))<=0)
-1112 -4682 0
-1304 -4682 0
-1304 -1112 -4683 0
c (0<=(SATLiteral(1304) - aux833 + SATLiteral(1112)))
1112 4683 0
1304 4683 0
1304 1112 4682 0
c ((SATLiteral(1305) - aux834 + SATLiteral(1111))<=0)
-1111 -4685 0
-1305 -4685 0
-1305 -1111 -4686 0
c (0<=(SATLiteral(1305) - aux834 + SATLiteral(1111)))
1111 4686 0
1305 4686 0
1305 1111 4685 0
c ((aux834 - aux835 + SATLiteral(729))<=0)
4685 -4688 0
4686 -4689 0
-729 -4688 0
-729 4685 -4689 0
-729 4686 -4691 0
c (0<=(aux834 - aux835 + SATLiteral(729)))
-4686 4691 0
-4685 4689 0
729 4691 0
729 -4686 4689 0
729 -4685 4688 0
c ((aux831 + aux832 - aux836)<=0)
4679 -4693 0
4680 -4694 0
4676 -4693 0
4676 4679 -4694 0
4676 4680 -4696 0
4677 -4694 0
4677 4679 -4696 0
4677 4680 -4698 0
c (0<=(aux831 + aux832 - aux836))
-4680 4698 0
-4679 4696 0
-4677 4698 0
-4677 -4680 4696 0
-4677 -4679 4694 0
-4676 4696 0
-4676 -4680 4694 0
-4676 -4679 4693 0
c ((aux833 + aux835 - aux837)<=0)
4688 -4700 0
4689 -4701 0
4691 -4703 0
4682 -4700 0
4682 4688 -4701 0
4682 4689 -4703 0
4682 4691 -4705 0
4683 -4701 0
4683 4688 -4703 0
4683 4689 -4705 0
4683 4691 -4707 0
c (0<=(aux833 + aux835 - aux837))
-4691 4707 0
-4689 4705 0
-4688 4703 0
-4683 4707 0
-4683 -4691 4705 0
-4683 -4689 4703 0
-4683 -4688 4701 0
-4682 4705 0
-4682 -4691 4703 0
-4682 -4689 4701 0
-4682 -4688 4700 0
c ((SATLiteral(563) + aux840 - SATLiteral(4712))<=0)
-563 4712 0
c (0<=(SATLiteral(563) + aux840 - SATLiteral(4712)))
563 -4712 0
c ((SATLiteral(4712) - aux842 + SATLiteral(755))<=0)
-755 -4713 0
-4712 -4713 0
-4712 -755 -4714 0
c (0<=(SATLiteral(4712) - aux842 + SATLiteral(755)))
755 4714 0
4712 4714 0
4712 755 4713 0
c (( - aux843 + SATLiteral(754) + SATLiteral(756))<=0)
-756 -4716 0
-754 -4716 0
-754 -756 -4717 0
c (0<=( - aux843 + SATLiteral(754) + SATLiteral(756)))
756 4717 0
754 4717 0
754 756 4716 0
c ((SATLiteral(562) - aux844 + SATLiteral(948))<=0)
-948 -4719 0
-562 -4719 0
-562 -948 -4720 0
c (0<=(SATLiteral(562) - aux844 + SATLiteral(948)))
948 4720 0
562 4720 0
562 948 4719 0
c ((SATLiteral(564) - aux845 + SATLiteral(947))<=0)
-947 -4722 0
-564 -4722 0
-564 -947 -4723 0
c (0<=(SATLiteral(564) - aux845 + SATLiteral(947)))
947 4723 0
564 4723 0
564 947 4722 0
c ((aux845 - aux846 + SATLiteral(946))<=0)
4722 -4725 0
4723 -4726 0
-946 -4725 0
-946 4722 -4726 0
-946 4723 -4728 0
c (0<=(aux845 - aux846 + SATLiteral(946)))
-4723 4728 0
-4722 4726 0
946 4728 0
946 -4723 4726 0
946 -4722 4725 0
c ((aux842 + aux843 - aux847)<=0)
4716 -4730 0
4717 -4731 0
4713 -4730 0
4713 4716 -4731 0
4713 4717 -4733 0
4714 -4731 0
4714 4716 -4733 0
4714 4717 -4735 0
c (0<=(aux842 + aux843 - aux847))
-4717 4735 0
-4716 4733 0
-4714 4735 0
-4714 -4717 4733 0
-4714 -4716 4731 0
-4713 4733 0
-4713 -4717 4731 0
-4713 -4716 4730 0
c ((aux844 + aux846 - aux848)<=0)
4725 -4737 0
4726 -4738 0
4728 -4740 0
4719 -4737 0
4719 4725 -4738 0
4719 4726 -4740 0
4719 4728 -4742 0
4720 -4738 0
4720 4725 -4740 0
4720 4726 -4742 0
4720 4728 -4744 0
c (0<=(aux844 + aux846 - aux848))
-4728 4744 0
-4726 4742 0
-4725 4740 0
-4720 4744 0
-4720 -4728 4742 0
-4720 -4726 4740 0
-4720 -4725 4738 0
-4719 4742 0
-4719 -4728 4740 0
-4719 -4726 4738 0
-4719 -4725 4737 0
c ((aux850 - SATLiteral(4748) + SATLiteral(971))<=0)
4748 -971 0
c (0<=(aux850 - SATLiteral(4748) + SATLiteral(971)))
-4748 971 0
c ((SATLiteral(4748) - aux852 + SATLiteral(780))<=0)
-780 -4749 0
-4748 -4749 0
-4748 -780 -4750 0
c (0<=(SATLiteral(4748) - aux852 + SATLiteral(780)))
780 4750 0
4748 4750 0
4748 780 4749 0
c (( - aux853 + SATLiteral(779) + SATLiteral(972))<=0)
-972 -4752 0
-779 -4752 0
-779 -972 -4753 0
c (0<=( - aux853 + SATLiteral(779) + SATLiteral(972)))
972 4753 0
779 4753 0
779 972 4752 0
c ((SATLiteral(586) - aux854 + SATLiteral(778))<=0)
-778 -4755 0
-586 -4755 0
-586 -778 -4756 0
c (0<=(SATLiteral(586) - aux854 + SATLiteral(778)))
778 4756 0
586 4756 0
586 778 4755 0
c ((SATLiteral(587) - aux855 + SATLiteral(970))<=0)
-970 -4758 0
-587 -4758 0
-587 -970 -4759 0
c (0<=(SATLiteral(587) - aux855 + SATLiteral(970)))
970 4759 0
587 4759 0
587 970 4758 0
c ((SATLiteral(588) - aux856 + SATLiteral(1162))<=0)
-1162 -4761 0
-588 -4761 0
-588 -1162 -4762 0
c (0<=(SATLiteral(588) - aux856 + SATLiteral(1162)))
1162 4762 0
588 4762 0
588 1162 4761 0
c ((aux852 + aux856 - aux857)<=0)
4761 -4764 0
4762 -4765 0
4749 -4764 0
4749 4761 -4765 0
4749 4762 -4767 0
4750 -4765 0
4750 4761 -4767 0
4750 4762 -4769 0
c (0<=(aux852 + aux856 - aux857))
-4762 4769 0
-4761 4767 0
-4750 4769 0
-4750 -4762 4767 0
-4750 -4761 4765 0
-4749 4767 0
-4749 -4762 4765 0
-4749 -4761 4764 0
c ((aux853 + aux854 - aux858)<=0)
4755 -4771 0
4756 -4772 0
4752 -4771 0
4752 4755 -4772 0
4752 4756 -4774 0
4753 -4772 0
4753 4755 -4774 0
4753 4756 -4776 0
c (0<=(aux853 + aux854 - aux858))
-4756 4776 0
-4755 4774 0
-4753 4776 0
-4753 -4756 4774 0
-4753 -4755 4772 0
-4752 4774 0
-4752 -4756 4772 0
-4752 -4755 4771 0
c ((aux855 + aux858 - aux859)<=0)
4771 -4778 0
4772 -4779 0
4774 -4781 0
4776 -4783 0
4758 -4778 0
4758 4771 -4779 0
4758 4772 -4781 0
4758 4774 -4783 0
4758 4776 -4785 0
4759 -4779 0
4759 4771 -4781 0
4759 4772 -4783 0
4759 4774 -4785 0
4759 4776 -4787 0
c (0<=(aux855 + aux858 - aux859))
-4776 4787 0
-4774 4785 0
-4772 4783 0
-4771 4781 0
-4759 4787 0
-4759 -4776 4785 0
-4759 -4774 4783 0
-4759 -4772 4781 0
-4759 -4771 4779 0
-4758 4785 0
-4758 -4776 4783 0
-4758 -4774 4781 0
-4758 -4772 4779 0
-4758 -4771 4778 0
c ((aux860 - SATLiteral(4790) + SATLiteral(803))<=0)
4790 -803 0
c (0<=(aux860 - SATLiteral(4790) + SATLiteral(803)))
-4790 803 0
c ((SATLiteral(4790) - aux862 + SATLiteral(610))<=0)
-610 -4791 0
-4790 -4791 0
-4790 -610 -4792 0
c (0<=(SATLiteral(4790) - aux862 + SATLiteral(610)))
610 4792 0
4790 4792 0
4790 610 4791 0
c (( - aux863 + SATLiteral(996) + SATLiteral(612))<=0)
-612 -4794 0
-996 -4794 0
-996 -612 -4795 0
c (0<=( - aux863 + SATLiteral(996) + SATLiteral(612)))
612 4795 0
996 4795 0
996 612 4794 0
c (( - aux864 + SATLiteral(1186) + SATLiteral(995))<=0)
-995 -4797 0
-1186 -4797 0
-1186 -995 -4798 0
c (0<=( - aux864 + SATLiteral(1186) + SATLiteral(995)))
995 4798 0
1186 4798 0
1186 995 4797 0
c (( - aux865 + SATLiteral(802) + SATLiteral(994))<=0)
-994 -4800 0
-802 -4800 0
-802 -994 -4801 0
c (0<=( - aux865 + SATLiteral(802) + SATLiteral(994)))
994 4801 0
802 4801 0
802 994 4800 0
c (( - aux866 + SATLiteral(1187) + SATLiteral(611))<=0)
-611 -4803 0
-1187 -4803 0
-1187 -611 -4804 0
c (0<=( - aux866 + SATLiteral(1187) + SATLiteral(611)))
611 4804 0
1187 4804 0
1187 611 4803 0
c ((aux866 - aux867 + SATLiteral(804))<=0)
4803 -4806 0
4804 -4807 0
-804 -4806 0
-804 4803 -4807 0
-804 4804 -4809 0
c (0<=(aux866 - aux867 + SATLiteral(804)))
-4804 4809 0
-4803 4807 0
804 4809 0
804 -4804 4807 0
804 -4803 4806 0
c ((aux863 + aux864 - aux868)<=0)
4797 -4811 0
4798 -4812 0
4794 -4811 0
4794 4797 -4812 0
4794 4798 -4814 0
4795 -4812 0
4795 4797 -4814 0
4795 4798 -4816 0
c (0<=(aux863 + aux864 - aux868))
-4798 4816 0
-4797 4814 0
-4795 4816 0
-4795 -4798 4814 0
-4795 -4797 4812 0
-4794 4814 0
-4794 -4798 4812 0
-4794 -4797 4811 0
c ((aux862 + aux865 - aux869)<=0)
4800 -4818 0
4801 -4819 0
4791 -4818 0
4791 4800 -4819 0
4791 4801 -4821 0
4792 -4819 0
4792 4800 -4821 0
4792 4801 -4823 0
c (0<=(aux862 + aux865 - aux869))
-4801 4823 0
-4800 4821 0
-4792 4823 0
-4792 -4801 4821 0
-4792 -4800 4819 0
-4791 4821 0
-4791 -4801 4819 0
-4791 -4800 4818 0
c ((aux867 + aux869 - aux870)<=0)
4818 -4825 0
4819 -4826 0
4821 -4828 0
4823 -4830 0
4806 -4825 0
4806 4818 -4826 0
4806 4819 -4828 0
4806 4821 -4830 0
4806 4823 -4832 0
4807 -4826 0
4807 4818 -4828 0
4807 4819 -4830 0
4807 4821 -4832 0
4807 4823 -4834 0
4809 -4828 0
4809 4818 -4830 0
4809 4819 -4832 0
4809 4821 -4834 0
4809 4823 -4836 0
c (0<=(aux867 + aux869 - aux870))
-4823 4836 0
-4821 4834 0
-4819 4832 0
-4818 4830 0
-4809 4836 0
-4809 -4823 4834 0
-4809 -4821 4832 0
-4809 -4819 4830 0
-4809 -4818 4828 0
-4807 4834 0
-4807 -4823 4832 0
-4807 -4821 4830 0
-4807 -4819 4828 0
-4807 -4818 4826 0
-4806 4832 0
-4806 -4823 4830 0
-4806 -4821 4828 0
-4806 -4819 4826 0
-4806 -4818 4825 0
c ((SATLiteral(4838) - aux872 + SATLiteral(635))<=0)
-635 -4839 0
-4838 -4839 0
-4838 -635 -4840 0
c (0<=(SATLiteral(4838) - aux872 + SATLiteral(635)))
635 4840 0
4838 4840 0
4838 635 4839 0
c (( - aux873 + SATLiteral(1210) + SATLiteral(634))<=0)
-634 -4842 0
-1210 -4842 0
-1210 -634 -4843 0
c (0<=( - aux873 + SATLiteral(1210) + SATLiteral(634)))
634 4843 0
1210 4843 0
1210 634 4842 0
c (( - aux874 + SATLiteral(1211) + SATLiteral(1018))<=0)
-1018 -4845 0
-1211 -4845 0
-1211 -1018 -4846 0
c (0<=( - aux874 + SATLiteral(1211) + SATLiteral(1018)))
1018 4846 0
1211 4846 0
1211 1018 4845 0
c (( - aux875 + SATLiteral(1019) + SATLiteral(1020))<=0)
-1020 -4848 0
-1019 -4848 0
-1019 -1020 -4849 0
c (0<=( - aux875 + SATLiteral(1019) + SATLiteral(1020)))
1020 4849 0
1019 4849 0
1019 1020 4848 0
c (( - aux876 + SATLiteral(1212) + SATLiteral(826))<=0)
-826 -4851 0
-1212 -4851 0
-1212 -826 -4852 0
c (0<=( - aux876 + SATLiteral(1212) + SATLiteral(826)))
826 4852 0
1212 4852 0
1212 826 4851 0
c (( - aux877 + SATLiteral(827) + SATLiteral(828))<=0)
-828 -4854 0
-827 -4854 0
-827 -828 -4855 0
c (0<=( - aux877 + SATLiteral(827) + SATLiteral(828)))
828 4855 0
827 4855 0
827 828 4854 0
c ((aux873 + aux877 - aux878)<=0)
4854 -4857 0
4855 -4858 0
4842 -4857 0
4842 4854 -4858 0
4842 4855 -4860 0
4843 -4858 0
4843 4854 -4860 0
4843 4855 -4862 0
c (0<=(aux873 + aux877 - aux878))
-4855 4862 0
-4854 4860 0
-4843 4862 0
-4843 -4855 4860 0
-4843 -4854 4858 0
-4842 4860 0
-4842 -4855 4858 0
-4842 -4854 4857 0
c ((aux872 + aux875 - aux879)<=0)
4848 -4864 0
4849 -4865 0
4839 -4864 0
4839 4848 -4865 0
4839 4849 -4867 0
4840 -4865 0
4840 4848 -4867 0
4840 4849 -4869 0
c (0<=(aux872 + aux875 - aux879))
-4849 4869 0
-4848 4867 0
-4840 4869 0
-4840 -4849 4867 0
-4840 -4848 4865 0
-4839 4867 0
-4839 -4849 4865 0
-4839 -4848 4864 0
c ((aux874 + aux876 - aux880)<=0)
4851 -4871 0
4852 -4872 0
4845 -4871 0
4845 4851 -4872 0
4845 4852 -4874 0
4846 -4872 0
4846 4851 -4874 0
4846 4852 -4876 0
c (0<=(aux874 + aux876 - aux880))
-4852 4876 0
-4851 4874 0
-4846 4876 0
-4846 -4852 4874 0
-4846 -4851 4872 0
-4845 4874 0
-4845 -4852 4872 0
-4845 -4851 4871 0
c ((aux880 - aux881 - shift(agrid_00004_00005, -4))<=0)
-203 -4878 0
-201 -4879 0
-199 -4881 0
-198 -4883 0
4871 -4878 0
4871 -203 -4879 0
4871 -201 -4881 0
4871 -199 -4883 0
4871 -198 -4885 0
4872 -4879 0
4872 -203 -4881 0
4872 -201 -4883 0
4872 -199 -4885 0
4872 -198 -4887 0
4874 -4881 0
4874 -203 -4883 0
4874 -201 -4885 0
4874 -199 -4887 0
4874 -198 -4889 0
4876 -4883 0
4876 -203 -4885 0
4876 -201 -4887 0
4876 -199 -4889 0
4876 -198 -4891 0
c (0<=(aux880 - aux881 - shift(agrid_00004_00005, -4)))
198 4891 0
199 4889 0
201 4887 0
203 4885 0
-4876 4891 0
-4876 198 4889 0
-4876 199 4887 0
-4876 201 4885 0
-4876 203 4883 0
-4874 4889 0
-4874 198 4887 0
-4874 199 4885 0
-4874 201 4883 0
-4874 203 4881 0
-4872 4887 0
-4872 198 4885 0
-4872 199 4883 0
-4872 201 4881 0
-4872 203 4879 0
-4871 4885 0
-4871 198 4883 0
-4871 199 4881 0
-4871 201 4879 0
-4871 203 4878 0
c ((SATLiteral(4893) - aux883 + SATLiteral(659))<=0)
-659 -4894 0
-4893 -4894 0
-4893 -659 -4895 0
c (0<=(SATLiteral(4893) - aux883 + SATLiteral(659)))
659 4895 0
4893 4895 0
4893 659 4894 0
c (( - aux884 + SATLiteral(1234) + SATLiteral(658))<=0)
-658 -4897 0
-1234 -4897 0
-1234 -658 -4898 0
c (0<=( - aux884 + SATLiteral(1234) + SATLiteral(658)))
658 4898 0
1234 4898 0
1234 658 4897 0
c (( - aux885 + SATLiteral(1236) + SATLiteral(1044))<=0)
-1044 -4900 0
-1236 -4900 0
-1236 -1044 -4901 0
c (0<=( - aux885 + SATLiteral(1236) + SATLiteral(1044)))
1044 4901 0
1236 4901 0
1236 1044 4900 0
c (( - aux886 + SATLiteral(1042) + SATLiteral(1043))<=0)
-1043 -4903 0
-1042 -4903 0
-1042 -1043 -4904 0
c (0<=( - aux886 + SATLiteral(1042) + SATLiteral(1043)))
1043 4904 0
1042 4904 0
1042 1043 4903 0
c (( - aux887 + SATLiteral(1235) + SATLiteral(850))<=0)
-850 -4906 0
-1235 -4906 0
-1235 -850 -4907 0
c (0<=( - aux887 + SATLiteral(1235) + SATLiteral(850)))
850 4907 0
1235 4907 0
1235 850 4906 0
c (( - aux888 + SATLiteral(851) + SATLiteral(852))<=0)
-852 -4909 0
-851 -4909 0
-851 -852 -4910 0
c (0<=( - aux888 + SATLiteral(851) + SATLiteral(852)))
852 4910 0
851 4910 0
851 852 4909 0
c ((aux883 + aux888 - aux889)<=0)
4909 -4912 0
4910 -4913 0
4894 -4912 0
4894 4909 -4913 0
4894 4910 -4915 0
4895 -4913 0
4895 4909 -4915 0
4895 4910 -4917 0
c (0<=(aux883 + aux888 - aux889))
-4910 4917 0
-4909 4915 0
-4895 4917 0
-4895 -4910 4915 0
-4895 -4909 4913 0
-4894 4915 0
-4894 -4910 4913 0
-4894 -4909 4912 0
c ((aux884 + aux886 - aux890)<=0)
4903 -4919 0
4904 -4920 0
4897 -4919 0
4897 4903 -4920 0
4897 4904 -4922 0
4898 -4920 0
4898 4903 -4922 0
4898 4904 -4924 0
c (0<=(aux884 + aux886 - aux890))
-4904 4924 0
-4903 4922 0
-4898 4924 0
-4898 -4904 4922 0
-4898 -4903 4920 0
-4897 4922 0
-4897 -4904 4920 0
-4897 -4903 4919 0
c ((aux885 + aux887 - aux891)<=0)
4906 -4926 0
4907 -4927 0
4900 -4926 0
4900 4906 -4927 0
4900 4907 -4929 0
4901 -4927 0
4901 4906 -4929 0
4901 4907 -4931 0
c (0<=(aux885 + aux887 - aux891))
-4907 4931 0
-4906 4929 0
-4901 4931 0
-4901 -4907 4929 0
-4901 -4906 4927 0
-4900 4929 0
-4900 -4907 4927 0
-4900 -4906 4926 0
c ((aux891 - aux892 - shift(agrid_00005_00005, -4))<=0)
-259 -4933 0
-257 -4934 0
-255 -4936 0
-254 -4938 0
4926 -4933 0
4926 -259 -4934 0
4926 -257 -4936 0
4926 -255 -4938 0
4926 -254 -4940 0
4927 -4934 0
4927 -259 -4936 0
4927 -257 -4938 0
4927 -255 -4940 0
4927 -254 -4942 0
4929 -4936 0
4929 -259 -4938 0
4929 -257 -4940 0
4929 -255 -4942 0
4929 -254 -4944 0
4931 -4938 0
4931 -259 -4940 0
4931 -257 -4942 0
4931 -255 -4944 0
4931 -254 -4946 0
c (0<=(aux891 - aux892 - shift(agrid_00005_00005, -4)))
254 4946 0
255 4944 0
257 4942 0
259 4940 0
-4931 4946 0
-4931 254 4944 0
-4931 255 4942 0
-4931 257 4940 0
-4931 259 4938 0
-4929 4944 0
-4929 254 4942 0
-4929 255 4940 0
-4929 257 4938 0
-4929 259 4936 0
-4927 4942 0
-4927 254 4940 0
-4927 255 4938 0
-4927 257 4936 0
-4927 259 4934 0
-4926 4940 0
-4926 254 4938 0
-4926 255 4936 0
-4926 257 4934 0
-4926 259 4933 0
c ((aux893 - SATLiteral(4949) + SATLiteral(875))<=0)
4949 -875 0
c (0<=(aux893 - SATLiteral(4949) + SATLiteral(875)))
-4949 875 0
c ((SATLiteral(4949) - aux895 + SATLiteral(682))<=0)
-682 -4950 0
-4949 -4950 0
-4949 -682 -4951 0
c (0<=(SATLiteral(4949) - aux895 + SATLiteral(682)))
682 4951 0
4949 4951 0
4949 682 4950 0
c (( - aux896 + SATLiteral(1068) + SATLiteral(684))<=0)
-684 -4953 0
-1068 -4953 0
-1068 -684 -4954 0
c (0<=( - aux896 + SATLiteral(1068) + SATLiteral(684)))
684 4954 0
1068 4954 0
1068 684 4953 0
c (( - aux897 + SATLiteral(1260) + SATLiteral(1067))<=0)
-1067 -4956 0
-1260 -4956 0
-1260 -1067 -4957 0
c (0<=( - aux897 + SATLiteral(1260) + SATLiteral(1067)))
1067 4957 0
1260 4957 0
1260 1067 4956 0
c (( - aux898 + SATLiteral(874) + SATLiteral(1066))<=0)
-1066 -4959 0
-874 -4959 0
-874 -1066 -4960 0
c (0<=( - aux898 + SATLiteral(874) + SATLiteral(1066)))
1066 4960 0
874 4960 0
874 1066 4959 0
c (( - aux899 + SATLiteral(1258) + SATLiteral(683))<=0)
-683 -4962 0
-1258 -4962 0
-1258 -683 -4963 0
c (0<=( - aux899 + SATLiteral(1258) + SATLiteral(683)))
683 4963 0
1258 4963 0
1258 683 4962 0
c ((aux899 - aux900 + SATLiteral(1259))<=0)
4962 -4965 0
4963 -4966 0
-1259 -4965 0
-1259 4962 -4966 0
-1259 4963 -4968 0
c (0<=(aux899 - aux900 + SATLiteral(1259)))
-4963 4968 0
-4962 4966 0
1259 4968 0
1259 -4963 4966 0
1259 -4962 4965 0
c ((aux896 + aux897 - aux901)<=0)
4956 -4970 0
4957 -4971 0
4953 -4970 0
4953 4956 -4971 0
4953 4957 -4973 0
4954 -4971 0
4954 4956 -4973 0
4954 4957 -4975 0
c (0<=(aux896 + aux897 - aux901))
-4957 4975 0
-4956 4973 0
-4954 4975 0
-4954 -4957 4973 0
-4954 -4956 4971 0
-4953 4973 0
-4953 -4957 4971 0
-4953 -4956 4970 0
c ((aux895 + aux898 - aux902)<=0)
4959 -4977 0
4960 -4978 0
4950 -4977 0
4950 4959 -4978 0
4950 4960 -4980 0
4951 -4978 0
4951 4959 -4980 0
4951 4960 -4982 0
c (0<=(aux895 + aux898 - aux902))
-4960 4982 0
-4959 4980 0
-4951 4982 0
-4951 -4960 4980 0
-4951 -4959 4978 0
-4950 4980 0
-4950 -4960 4978 0
-4950 -4959 4977 0
c ((aux900 + aux902 - aux903)<=0)
4977 -4984 0
4978 -4985 0
4980 -4987 0
4982 -4989 0
4965 -4984 0
4965 4977 -4985 0
4965 4978 -4987 0
4965 4980 -4989 0
4965 4982 -4991 0
4966 -4985 0
4966 4977 -4987 0
4966 4978 -4989 0
4966 4980 -4991 0
4966 4982 -4993 0
4968 -4987 0
4968 4977 -4989 0
4968 4978 -4991 0
4968 4980 -4993 0
4968 4982 -4995 0
c (0<=(aux900 + aux902 - aux903))
-4982 4995 0
-4980 4993 0
-4978 4991 0
-4977 4989 0
-4968 4995 0
-4968 -4982 4993 0
-4968 -4980 4991 0
-4968 -4978 4989 0
-4968 -4977 4987 0
-4966 4993 0
-4966 -4982 4991 0
-4966 -4980 4989 0
-4966 -4978 4987 0
-4966 -4977 4985 0
-4965 4991 0
-4965 -4982 4989 0
-4965 -4980 4987 0
-4965 -4978 4985 0
-4965 -4977 4984 0
c ((aux905 - SATLiteral(4999) + SATLiteral(707))<=0)
4999 -707 0
c (0<=(aux905 - SATLiteral(4999) + SATLiteral(707)))
-4999 707 0
c ((SATLiteral(4999) - aux907 + SATLiteral(1092))<=0)
-1092 -5000 0
-4999 -5000 0
-4999 -1092 -5001 0
c (0<=(SATLiteral(4999) - aux907 + SATLiteral(1092)))
1092 5001 0
4999 5001 0
4999 1092 5000 0
c (( - aux908 + SATLiteral(1282) + SATLiteral(1091))<=0)
-1091 -5003 0
-1282 -5003 0
-1282 -1091 -5004 0
c (0<=( - aux908 + SATLiteral(1282) + SATLiteral(1091)))
1091 5004 0
1282 5004 0
1282 1091 5003 0
c (( - aux909 + SATLiteral(898) + SATLiteral(1090))<=0)
-1090 -5006 0
-898 -5006 0
-898 -1090 -5007 0
c (0<=( - aux909 + SATLiteral(898) + SATLiteral(1090)))
1090 5007 0
898 5007 0
898 1090 5006 0
c (( - aux910 + SATLiteral(1283) + SATLiteral(706))<=0)
-706 -5009 0
-1283 -5009 0
-1283 -706 -5010 0
c (0<=( - aux910 + SATLiteral(1283) + SATLiteral(706)))
706 5010 0
1283 5010 0
1283 706 5009 0
c (( - aux911 + SATLiteral(1284) + SATLiteral(708))<=0)
-708 -5012 0
-1284 -5012 0
-1284 -708 -5013 0
c (0<=( - aux911 + SATLiteral(1284) + SATLiteral(708)))
708 5013 0
1284 5013 0
1284 708 5012 0
c ((aux907 + aux911 - aux912)<=0)
5012 -5015 0
5013 -5016 0
5000 -5015 0
5000 5012 -5016 0
5000 5013 -5018 0
5001 -5016 0
5001 5012 -5018 0
5001 5013 -5020 0
c (0<=(aux907 + aux911 - aux912))
-5013 5020 0
-5012 5018 0
-5001 5020 0
-5001 -5013 5018 0
-5001 -5012 5016 0
-5000 5018 0
-5000 -5013 5016 0
-5000 -5012 5015 0
c ((aux908 + aux909 - aux913)<=0)
5006 -5022 0
5007 -5023 0
5003 -5022 0
5003 5006 -5023 0
5003 5007 -5025 0
5004 -5023 0
5004 5006 -5025 0
5004 5007 -5027 0
c (0<=(aux908 + aux909 - aux913))
-5007 5027 0
-5006 5025 0
-5004 5027 0
-5004 -5007 5025 0
-5004 -5006 5023 0
-5003 5025 0
-5003 -5007 5023 0
-5003 -5006 5022 0
c ((aux910 + aux913 - aux914)<=0)
5022 -5029 0
5023 -5030 0
5025 -5032 0
5027 -5034 0
5009 -5029 0
5009 5022 -5030 0
5009 5023 -5032 0
5009 5025 -5034 0
5009 5027 -5036 0
5010 -5030 0
5010 5022 -5032 0
5010 5023 -5034 0
5010 5025 -5036 0
5010 5027 -5038 0
c (0<=(aux910 + aux913 - aux914))
-5027 5038 0
-5025 5036 0
-5023 5034 0
-5022 5032 0
-5010 5038 0
-5010 -5027 5036 0
-5010 -5025 5034 0
-5010 -5023 5032 0
-5010 -5022 5030 0
-5009 5036 0
-5009 -5027 5034 0
-5009 -5025 5032 0
-5009 -5023 5030 0
-5009 -5022 5029 0
c ((aux917 - SATLiteral(5043) + SATLiteral(1306))<=0)
5043 -1306 0
c (0<=(aux917 - SATLiteral(5043) + SATLiteral(1306)))
-5043 1306 0
c ((SATLiteral(5043) - aux919 + SATLiteral(730))<=0)
-730 -5044 0
-5043 -5044 0
-5043 -730 -5045 0
c (0<=(SATLiteral(5043) - aux919 + SATLiteral(730)))
730 5045 0
5043 5045 0
5043 730 5044 0
c (( - aux920 + SATLiteral(1307) + SATLiteral(1116))<=0)
-1116 -5047 0
-1307 -5047 0
-1307 -1116 -5048 0
c (0<=( - aux920 + SATLiteral(1307) + SATLiteral(1116)))
1116 5048 0
1307 5048 0
1307 1116 5047 0
c (( - aux921 + SATLiteral(1115) + SATLiteral(732))<=0)
-732 -5050 0
-1115 -5050 0
-1115 -732 -5051 0
c (0<=( - aux921 + SATLiteral(1115) + SATLiteral(732)))
732 5051 0
1115 5051 0
1115 732 5050 0
c (( - aux922 + SATLiteral(1308) + SATLiteral(1114))<=0)
-1114 -5053 0
-1308 -5053 0
-1308 -1114 -5054 0
c (0<=( - aux922 + SATLiteral(1308) + SATLiteral(1114)))
1114 5054 0
1308 5054 0
1308 1114 5053 0
c ((aux922 - aux923 + SATLiteral(731))<=0)
5053 -5056 0
5054 -5057 0
-731 -5056 0
-731 5053 -5057 0
-731 5054 -5059 0
c (0<=(aux922 - aux923 + SATLiteral(731)))
-5054 5059 0
-5053 5057 0
731 5059 0
731 -5054 5057 0
731 -5053 5056 0
c ((aux919 + aux920 - aux924)<=0)
5047 -5061 0
5048 -5062 0
5044 -5061 0
5044 5047 -5062 0
5044 5048 -5064 0
5045 -5062 0
5045 5047 -5064 0
5045 5048 -5066 0
c (0<=(aux919 + aux920 - aux924))
-5048 5066 0
-5047 5064 0
-5045 5066 0
-5045 -5048 5064 0
-5045 -5047 5062 0
-5044 5064 0
-5044 -5048 5062 0
-5044 -5047 5061 0
c ((aux921 + aux923 - aux925)<=0)
5056 -5068 0
5057 -5069 0
5059 -5071 0
5050 -5068 0
5050 5056 -5069 0
5050 5057 -5071 0
5050 5059 -5073 0
5051 -5069 0
5051 5056 -5071 0
5051 5057 -5073 0
5051 5059 -5075 0
c (0<=(aux921 + aux923 - aux925))
-5059 5075 0
-5057 5073 0
-5056 5071 0
-5051 5075 0
-5051 -5059 5073 0
-5051 -5057 5071 0
-5051 -5056 5069 0
-5050 5073 0
-5050 -5059 5071 0
-5050 -5057 5069 0
-5050 -5056 5068 0
c ((aux929 - SATLiteral(5081) + SATLiteral(757))<=0)
5081 -757 0
c (0<=(aux929 - SATLiteral(5081) + SATLiteral(757)))
-5081 757 0
c ((SATLiteral(950) + SATLiteral(5081) - aux931)<=0)
-5081 -5082 0
-950 -5082 0
-950 -5081 -5083 0
c (0<=(SATLiteral(950) + SATLiteral(5081) - aux931))
5081 5083 0
950 5083 0
950 5081 5082 0
c (( - aux932 + SATLiteral(565) + SATLiteral(759))<=0)
-759 -5085 0
-565 -5085 0
-565 -759 -5086 0
c (0<=( - aux932 + SATLiteral(565) + SATLiteral(759)))
759 5086 0
565 5086 0
565 759 5085 0
c ((SATLiteral(951) - aux933 + SATLiteral(566))<=0)
-566 -5088 0
-951 -5088 0
-951 -566 -5089 0
c (0<=(SATLiteral(951) - aux933 + SATLiteral(566)))
566 5089 0
951 5089 0
951 566 5088 0
c ((SATLiteral(949) - aux934 + SATLiteral(758))<=0)
-758 -5091 0
-949 -5091 0
-949 -758 -5092 0
c (0<=(SATLiteral(949) - aux934 + SATLiteral(758)))
758 5092 0
949 5092 0
949 758 5091 0
c ((aux932 + aux934 - aux935)<=0)
5091 -5094 0
5092 -5095 0
5085 -5094 0
5085 5091 -5095 0
5085 5092 -5097 0
5086 -5095 0
5086 5091 -5097 0
5086 5092 -5099 0
c (0<=(aux932 + aux934 - aux935))
-5092 5099 0
-5091 5097 0
-5086 5099 0
-5086 -5092 5097 0
-5086 -5091 5095 0
-5085 5097 0
-5085 -5092 5095 0
-5085 -5091 5094 0
c ((aux931 + aux933 - aux936)<=0)
5088 -5101 0
5089 -5102 0
5082 -5101 0
5082 5088 -5102 0
5082 5089 -5104 0
5083 -5102 0
5083 5088 -5104 0
5083 5089 -5106 0
c (0<=(aux931 + aux933 - aux936))
-5089 5106 0
-5088 5104 0
-5083 5106 0
-5083 -5089 5104 0
-5083 -5088 5102 0
-5082 5104 0
-5082 -5089 5102 0
-5082 -5088 5101 0
c ((aux939 - SATLiteral(5111) + SATLiteral(782))<=0)
5111 -782 0
c (0<=(aux939 - SATLiteral(5111) + SATLiteral(782)))
-5111 782 0
c ((SATLiteral(5111) - aux941 + SATLiteral(590))<=0)
-590 -5112 0
-5111 -5112 0
-5111 -590 -5113 0
c (0<=(SATLiteral(5111) - aux941 + SATLiteral(590)))
590 5113 0
5111 5113 0
5111 590 5112 0
c ((SATLiteral(975) - aux942 + SATLiteral(1165))<=0)
-1165 -5115 0
-975 -5115 0
-975 -1165 -5116 0
c (0<=(SATLiteral(975) - aux942 + SATLiteral(1165)))
1165 5116 0
975 5116 0
975 1165 5115 0
c ((SATLiteral(974) - aux943 + SATLiteral(589))<=0)
-589 -5118 0
-974 -5118 0
-974 -589 -5119 0
c (0<=(SATLiteral(974) - aux943 + SATLiteral(589)))
589 5119 0
974 5119 0
974 589 5118 0
c ((SATLiteral(973) - aux944 + SATLiteral(783))<=0)
-783 -5121 0
-973 -5121 0
-973 -783 -5122 0
c (0<=(SATLiteral(973) - aux944 + SATLiteral(783)))
783 5122 0
973 5122 0
973 783 5121 0
c ((aux944 - aux945 + SATLiteral(781))<=0)
5121 -5124 0
5122 -5125 0
-781 -5124 0
-781 5121 -5125 0
-781 5122 -5127 0
c (0<=(aux944 - aux945 + SATLiteral(781)))
-5122 5127 0
-5121 5125 0
781 5127 0
781 -5122 5125 0
781 -5121 5124 0
c ((aux941 + aux942 - aux946)<=0)
5115 -5129 0
5116 -5130 0
5112 -5129 0
5112 5115 -5130 0
5112 5116 -5132 0
5113 -5130 0
5113 5115 -5132 0
5113 5116 -5134 0
c (0<=(aux941 + aux942 - aux946))
-5116 5134 0
-5115 5132 0
-5113 5134 0
-5113 -5116 5132 0
-5113 -5115 5130 0
-5112 5132 0
-5112 -5116 5130 0
-5112 -5115 5129 0
c ((aux943 + aux945 - aux947)<=0)
5124 -5136 0
5125 -5137 0
5127 -5139 0
5118 -5136 0
5118 5124 -5137 0
5118 5125 -5139 0
5118 5127 -5141 0
5119 -5137 0
5119 5124 -5139 0
5119 5125 -5141 0
5119 5127 -5143 0
c (0<=(aux943 + aux945 - aux947))
-5127 5143 0
-5125 5141 0
-5124 5139 0
-5119 5143 0
-5119 -5127 5141 0
-5119 -5125 5139 0
-5119 -5124 5137 0
-5118 5141 0
-5118 -5127 5139 0
-5118 -5125 5137 0
-5118 -5124 5136 0
c ((aux949 - SATLiteral(5147) + SATLiteral(806))<=0)
5147 -806 0
c (0<=(aux949 - SATLiteral(5147) + SATLiteral(806)))
-5147 806 0
c ((SATLiteral(5147) - aux951 + SATLiteral(614))<=0)
-614 -5148 0
-5147 -5148 0
-5147 -614 -5149 0
c (0<=(SATLiteral(5147) - aux951 + SATLiteral(614)))
614 5149 0
5147 5149 0
5147 614 5148 0
c (( - aux952 + SATLiteral(1190) + SATLiteral(807))<=0)
-807 -5151 0
-1190 -5151 0
-1190 -807 -5152 0
c (0<=( - aux952 + SATLiteral(1190) + SATLiteral(807)))
807 5152 0
1190 5152 0
1190 807 5151 0
c (( - aux953 + SATLiteral(613) + SATLiteral(1189))<=0)
-1189 -5154 0
-613 -5154 0
-613 -1189 -5155 0
c (0<=( - aux953 + SATLiteral(613) + SATLiteral(1189)))
1189 5155 0
613 5155 0
613 1189 5154 0
c ((SATLiteral(998) - aux954 + SATLiteral(805))<=0)
-805 -5157 0
-998 -5157 0
-998 -805 -5158 0
c (0<=(SATLiteral(998) - aux954 + SATLiteral(805)))
805 5158 0
998 5158 0
998 805 5157 0
c ((SATLiteral(997) + SATLiteral(999) - aux955)<=0)
-999 -5160 0
-997 -5160 0
-997 -999 -5161 0
c (0<=(SATLiteral(997) + SATLiteral(999) - aux955))
999 5161 0
997 5161 0
997 999 5160 0
c ((aux951 + aux955 - aux956)<=0)
5160 -5163 0
5161 -5164 0
5148 -5163 0
5148 5160 -5164 0
5148 5161 -5166 0
5149 -5164 0
5149 5160 -5166 0
5149 5161 -5168 0
c (0<=(aux951 + aux955 - aux956))
-5161 5168 0
-5160 5166 0
-5149 5168 0
-5149 -5161 5166 0
-5149 -5160 5164 0
-5148 5166 0
-5148 -5161 5164 0
-5148 -5160 5163 0
c ((aux952 + aux953 - aux957)<=0)
5154 -5170 0
5155 -5171 0
5151 -5170 0
5151 5154 -5171 0
5151 5155 -5173 0
5152 -5171 0
5152 5154 -5173 0
5152 5155 -5175 0
c (0<=(aux952 + aux953 - aux957))
-5155 5175 0
-5154 5173 0
-5152 5175 0
-5152 -5155 5173 0
-5152 -5154 5171 0
-5151 5173 0
-5151 -5155 5171 0
-5151 -5154 5170 0
c ((aux954 + aux957 - aux958)<=0)
5170 -5177 0
5171 -5178 0
5173 -5180 0
5175 -5182 0
5157 -5177 0
5157 5170 -5178 0
5157 5171 -5180 0
5157 5173 -5182 0
5157 5175 -5184 0
5158 -5178 0
5158 5170 -5180 0
5158 5171 -5182 0
5158 5173 -5184 0
5158 5175 -5186 0
c (0<=(aux954 + aux957 - aux958))
-5175 5186 0
-5173 5184 0
-5171 5182 0
-5170 5180 0
-5158 5186 0
-5158 -5175 5184 0
-5158 -5173 5182 0
-5158 -5171 5180 0
-5158 -5170 5178 0
-5157 5184 0
-5157 -5175 5182 0
-5157 -5173 5180 0
-5157 -5171 5178 0
-5157 -5170 5177 0
c ((aux959 - SATLiteral(5189) + SATLiteral(1214))<=0)
5189 -1214 0
c (0<=(aux959 - SATLiteral(5189) + SATLiteral(1214)))
-5189 1214 0
c ((SATLiteral(5189) - aux961 + SATLiteral(1021))<=0)
-1021 -5190 0
-5189 -5190 0
-5189 -1021 -5191 0
c (0<=(SATLiteral(5189) - aux961 + SATLiteral(1021)))
1021 5191 0
5189 5191 0
5189 1021 5190 0
c ((SATLiteral(638) - aux962 + SATLiteral(1023))<=0)
-1023 -5193 0
-638 -5193 0
-638 -1023 -5194 0
c (0<=(SATLiteral(638) - aux962 + SATLiteral(1023)))
1023 5194 0
638 5194 0
638 1023 5193 0
c (( - aux963 + SATLiteral(829) + SATLiteral(831))<=0)
-831 -5196 0
-829 -5196 0
-829 -831 -5197 0
c (0<=( - aux963 + SATLiteral(829) + SATLiteral(831)))
831 5197 0
829 5197 0
829 831 5196 0
c (( - aux964 + SATLiteral(1213) + SATLiteral(830))<=0)
-830 -5199 0
-1213 -5199 0
-1213 -830 -5200 0
c (0<=( - aux964 + SATLiteral(1213) + SATLiteral(830)))
830 5200 0
1213 5200 0
1213 830 5199 0
c ((SATLiteral(637) - aux965 + SATLiteral(1022))<=0)
-1022 -5202 0
-637 -5202 0
-637 -1022 -5203 0
c (0<=(SATLiteral(637) - aux965 + SATLiteral(1022)))
1022 5203 0
637 5203 0
637 1022 5202 0
c ((aux965 - aux966 + SATLiteral(1215))<=0)
5202 -5205 0
5203 -5206 0
-1215 -5205 0
-1215 5202 -5206 0
-1215 5203 -5208 0
c (0<=(aux965 - aux966 + SATLiteral(1215)))
-5203 5208 0
-5202 5206 0
1215 5208 0
1215 -5203 5206 0
1215 -5202 5205 0
c ((aux962 + aux963 - aux967)<=0)
5196 -5210 0
5197 -5211 0
5193 -5210 0
5193 5196 -5211 0
5193 5197 -5213 0
5194 -5211 0
5194 5196 -5213 0
5194 5197 -5215 0
c (0<=(aux962 + aux963 - aux967))
-5197 5215 0
-5196 5213 0
-5194 5215 0
-5194 -5197 5213 0
-5194 -5196 5211 0
-5193 5213 0
-5193 -5197 5211 0
-5193 -5196 5210 0
c ((aux961 + aux964 - aux968)<=0)
5199 -5217 0
5200 -5218 0
5190 -5217 0
5190 5199 -5218 0
5190 5200 -5220 0
5191 -5218 0
5191 5199 -5220 0
5191 5200 -5222 0
c (0<=(aux961 + aux964 - aux968))
-5200 5222 0
-5199 5220 0
-5191 5222 0
-5191 -5200 5220 0
-5191 -5199 5218 0
-5190 5220 0
-5190 -5200 5218 0
-5190 -5199 5217 0
c ((aux966 + aux968 - aux969)<=0)
5217 -5224 0
5218 -5225 0
5220 -5227 0
5222 -5229 0
5205 -5224 0
5205 5217 -5225 0
5205 5218 -5227 0
5205 5220 -5229 0
5205 5222 -5231 0
5206 -5225 0
5206 5217 -5227 0
5206 5218 -5229 0
5206 5220 -5231 0
5206 5222 -5233 0
5208 -5227 0
5208 5217 -5229 0
5208 5218 -5231 0
5208 5220 -5233 0
5208 5222 -5235 0
c (0<=(aux966 + aux968 - aux969))
-5222 5235 0
-5220 5233 0
-5218 5231 0
-5217 5229 0
-5208 5235 0
-5208 -5222 5233 0
-5208 -5220 5231 0
-5208 -5218 5229 0
-5208 -5217 5227 0
-5206 5233 0
-5206 -5222 5231 0
-5206 -5220 5229 0
-5206 -5218 5227 0
-5206 -5217 5225 0
-5205 5231 0
-5205 -5222 5229 0
-5205 -5220 5227 0
-5205 -5218 5225 0
-5205 -5217 5224 0
c ((aux970 - SATLiteral(5238) + SATLiteral(1237))<=0)
5238 -1237 0
c (0<=(aux970 - SATLiteral(5238) + SATLiteral(1237)))
-5238 1237 0
c ((SATLiteral(5238) - aux972 + SATLiteral(1045))<=0)
-1045 -5239 0
-5238 -5239 0
-5238 -1045 -5240 0
c (0<=(SATLiteral(5238) - aux972 + SATLiteral(1045)))
1045 5240 0
5238 5240 0
5238 1045 5239 0
c (( - aux973 + SATLiteral(855) + SATLiteral(1047))<=0)
-1047 -5242 0
-855 -5242 0
-855 -1047 -5243 0
c (0<=( - aux973 + SATLiteral(855) + SATLiteral(1047)))
1047 5243 0
855 5243 0
855 1047 5242 0
c (( - aux974 + SATLiteral(1239) + SATLiteral(854))<=0)
-854 -5245 0
-1239 -5245 0
-1239 -854 -5246 0
c (0<=( - aux974 + SATLiteral(1239) + SATLiteral(854)))
854 5246 0
1239 5246 0
1239 854 5245 0
c ((SATLiteral(662) - aux975 + SATLiteral(853))<=0)
-853 -5248 0
-662 -5248 0
-662 -853 -5249 0
c (0<=(SATLiteral(662) - aux975 + SATLiteral(853)))
853 5249 0
662 5249 0
662 853 5248 0
c ((SATLiteral(661) - aux976 + SATLiteral(1046))<=0)
-1046 -5251 0
-661 -5251 0
-661 -1046 -5252 0
c (0<=(SATLiteral(661) - aux976 + SATLiteral(1046)))
1046 5252 0
661 5252 0
661 1046 5251 0
c ((aux976 - aux977 + SATLiteral(1238))<=0)
5251 -5254 0
5252 -5255 0
-1238 -5254 0
-1238 5251 -5255 0
-1238 5252 -5257 0
c (0<=(aux976 - aux977 + SATLiteral(1238)))
-5252 5257 0
-5251 5255 0
1238 5257 0
1238 -5252 5255 0
1238 -5251 5254 0
c ((aux973 + aux974 - aux978)<=0)
5245 -5259 0
5246 -5260 0
5242 -5259 0
5242 5245 -5260 0
5242 5246 -5262 0
5243 -5260 0
5243 5245 -5262 0
5243 5246 -5264 0
c (0<=(aux973 + aux974 - aux978))
-5246 5264 0
-5245 5262 0
-5243 5264 0
-5243 -5246 5262 0
-5243 -5245 5260 0
-5242 5262 0
-5242 -5246 5260 0
-5242 -5245 5259 0
c ((aux972 + aux975 - aux979)<=0)
5248 -5266 0
5249 -5267 0
5239 -5266 0
5239 5248 -5267 0
5239 5249 -5269 0
5240 -5267 0
5240 5248 -5269 0
5240 5249 -5271 0
c (0<=(aux972 + aux975 - aux979))
-5249 5271 0
-5248 5269 0
-5240 5271 0
-5240 -5249 5269 0
-5240 -5248 5267 0
-5239 5269 0
-5239 -5249 5267 0
-5239 -5248 5266 0
c ((aux977 + aux979 - aux980)<=0)
5266 -5273 0
5267 -5274 0
5269 -5276 0
5271 -5278 0
5254 -5273 0
5254 5266 -5274 0
5254 5267 -5276 0
5254 5269 -5278 0
5254 5271 -5280 0
5255 -5274 0
5255 5266 -5276 0
5255 5267 -5278 0
5255 5269 -5280 0
5255 5271 -5282 0
5257 -5276 0
5257 5266 -5278 0
5257 5267 -5280 0
5257 5269 -5282 0
5257 5271 -5284 0
c (0<=(aux977 + aux979 - aux980))
-5271 5284 0
-5269 5282 0
-5267 5280 0
-5266 5278 0
-5257 5284 0
-5257 -5271 5282 0
-5257 -5269 5280 0
-5257 -5267 5278 0
-5257 -5266 5276 0
-5255 5282 0
-5255 -5271 5280 0
-5255 -5269 5278 0
-5255 -5267 5276 0
-5255 -5266 5274 0
-5254 5280 0
-5254 -5271 5278 0
-5254 -5269 5276 0
-5254 -5267 5274 0
-5254 -5266 5273 0
c ((aux982 - SATLiteral(5288) + SATLiteral(686))<=0)
5288 -686 0
c (0<=(aux982 - SATLiteral(5288) + SATLiteral(686)))
-5288 686 0
c ((SATLiteral(5288) - aux984 + SATLiteral(1071))<=0)
-1071 -5289 0
-5288 -5289 0
-5288 -1071 -5290 0
c (0<=(SATLiteral(5288) - aux984 + SATLiteral(1071)))
1071 5290 0
5288 5290 0
5288 1071 5289 0
c (( - aux985 + SATLiteral(878) + SATLiteral(1070))<=0)
-1070 -5292 0
-878 -5292 0
-878 -1070 -5293 0
c (0<=( - aux985 + SATLiteral(878) + SATLiteral(1070)))
1070 5293 0
878 5293 0
878 1070 5292 0
c (( - aux986 + SATLiteral(1262) + SATLiteral(1069))<=0)
-1069 -5295 0
-1262 -5295 0
-1262 -1069 -5296 0
c (0<=( - aux986 + SATLiteral(1262) + SATLiteral(1069)))
1069 5296 0
1262 5296 0
1262 1069 5295 0
c (( - aux987 + SATLiteral(1263) + SATLiteral(685))<=0)
-685 -5298 0
-1263 -5298 0
-1263 -685 -5299 0
c (0<=( - aux987 + SATLiteral(1263) + SATLiteral(685)))
685 5299 0
1263 5299 0
1263 685 5298 0
c (( - aux988 + SATLiteral(1261) + SATLiteral(877))<=0)
-877 -5301 0
-1261 -5301 0
-1261 -877 -5302 0
c (0<=( - aux988 + SATLiteral(1261) + SATLiteral(877)))
877 5302 0
1261 5302 0
1261 877 5301 0
c ((aux984 + aux988 - aux989)<=0)
5301 -5304 0
5302 -5305 0
5289 -5304 0
5289 5301 -5305 0
5289 5302 -5307 0
5290 -5305 0
5290 5301 -5307 0
5290 5302 -5309 0
c (0<=(aux984 + aux988 - aux989))
-5302 5309 0
-5301 5307 0
-5290 5309 0
-5290 -5302 5307 0
-5290 -5301 5305 0
-5289 5307 0
-5289 -5302 5305 0
-5289 -5301 5304 0
c ((aux985 + aux986 - aux990)<=0)
5295 -5311 0
5296 -5312 0
5292 -5311 0
5292 5295 -5312 0
5292 5296 -5314 0
5293 -5312 0
5293 5295 -5314 0
5293 5296 -5316 0
c (0<=(aux985 + aux986 - aux990))
-5296 5316 0
-5295 5314 0
-5293 5316 0
-5293 -5296 5314 0
-5293 -5295 5312 0
-5292 5314 0
-5292 -5296 5312 0
-5292 -5295 5311 0
c ((aux987 + aux990 - aux991)<=0)
5311 -5318 0
5312 -5319 0
5314 -5321 0
5316 -5323 0
5298 -5318 0
5298 5311 -5319 0
5298 5312 -5321 0
5298 5314 -5323 0
5298 5316 -5325 0
5299 -5319 0
5299 5311 -5321 0
5299 5312 -5323 0
5299 5314 -5325 0
5299 5316 -5327 0
c (0<=(aux987 + aux990 - aux991))
-5316 5327 0
-5314 5325 0
-5312 5323 0
-5311 5321 0
-5299 5327 0
-5299 -5316 5325 0
-5299 -5314 5323 0
-5299 -5312 5321 0
-5299 -5311 5319 0
-5298 5325 0
-5298 -5316 5323 0
-5298 -5314 5321 0
-5298 -5312 5319 0
-5298 -5311 5318 0
c ((aux994 - SATLiteral(5332) + SATLiteral(1094))<=0)
5332 -1094 0
c (0<=(aux994 - SATLiteral(5332) + SATLiteral(1094)))
-5332 1094 0
c ((SATLiteral(5332) - aux996 + SATLiteral(1095))<=0)
-1095 -5333 0
-5332 -5333 0
-5332 -1095 -5334 0
c (0<=(SATLiteral(5332) - aux996 + SATLiteral(1095)))
1095 5334 0
5332 5334 0
5332 1095 5333 0
c (( - aux997 + SATLiteral(1285) + SATLiteral(1093))<=0)
-1093 -5336 0
-1285 -5336 0
-1285 -1093 -5337 0
c (0<=( - aux997 + SATLiteral(1285) + SATLiteral(1093)))
1093 5337 0
1285 5337 0
1285 1093 5336 0
c (( - aux998 + SATLiteral(1286) + SATLiteral(1287))<=0)
-1287 -5339 0
-1286 -5339 0
-1286 -1287 -5340 0
c (0<=( - aux998 + SATLiteral(1286) + SATLiteral(1287)))
1287 5340 0
1286 5340 0
1286 1287 5339 0
c (( - aux999 + SATLiteral(901) + SATLiteral(710))<=0)
-710 -5342 0
-901 -5342 0
-901 -710 -5343 0
c (0<=( - aux999 + SATLiteral(901) + SATLiteral(710)))
710 5343 0
901 5343 0
901 710 5342 0
c ((aux999 - aux1000 + SATLiteral(709))<=0)
5342 -5345 0
5343 -5346 0
-709 -5345 0
-709 5342 -5346 0
-709 5343 -5348 0
c (0<=(aux999 - aux1000 + SATLiteral(709)))
-5343 5348 0
-5342 5346 0
709 5348 0
709 -5343 5346 0
709 -5342 5345 0
c ((aux996 + aux997 - aux1001)<=0)
5336 -5350 0
5337 -5351 0
5333 -5350 0
5333 5336 -5351 0
5333 5337 -5353 0
5334 -5351 0
5334 5336 -5353 0
5334 5337 -5355 0
c (0<=(aux996 + aux997 - aux1001))
-5337 5355 0
-5336 5353 0
-5334 5355 0
-5334 -5337 5353 0
-5334 -5336 5351 0
-5333 5353 0
-5333 -5337 5351 0
-5333 -5336 5350 0
c ((aux998 + aux1000 - aux1002)<=0)
5345 -5357 0
5346 -5358 0
5348 -5360 0
5339 -5357 0
5339 5345 -5358 0
5339 5346 -5360 0
5339 5348 -5362 0
5340 -5358 0
5340 5345 -5360 0
5340 5346 -5362 0
5340 5348 -5364 0
c (0<=(aux998 + aux1000 - aux1002))
-5348 5364 0
-5346 5362 0
-5345 5360 0
-5340 5364 0
-5340 -5348 5362 0
-5340 -5346 5360 0
-5340 -5345 5358 0
-5339 5362 0
-5339 -5348 5360 0
-5339 -5346 5358 0
-5339 -5345 5357 0
c ((aux1006 - SATLiteral(5370) + SATLiteral(734))<=0)
5370 -734 0
c (0<=(aux1006 - SATLiteral(5370) + SATLiteral(734)))
-5370 734 0
c ((SATLiteral(5370) - aux1008 + SATLiteral(1118))<=0)
-1118 -5371 0
-5370 -5371 0
-5370 -1118 -5372 0
c (0<=(SATLiteral(5370) - aux1008 + SATLiteral(1118)))
1118 5372 0
5370 5372 0
5370 1118 5371 0
c (( - aux1009 + SATLiteral(1117) + SATLiteral(1119))<=0)
-1119 -5374 0
-1117 -5374 0
-1117 -1119 -5375 0
c (0<=( - aux1009 + SATLiteral(1117) + SATLiteral(1119)))
1119 5375 0
1117 5375 0
1117 1119 5374 0
c (( - aux1010 + SATLiteral(1310) + SATLiteral(733))<=0)
-733 -5377 0
-1310 -5377 0
-1310 -733 -5378 0
c (0<=( - aux1010 + SATLiteral(1310) + SATLiteral(733)))
733 5378 0
1310 5378 0
1310 733 5377 0
c (( - aux1011 + SATLiteral(1309) + SATLiteral(1311))<=0)
-1311 -5380 0
-1309 -5380 0
-1309 -1311 -5381 0
c (0<=( - aux1011 + SATLiteral(1309) + SATLiteral(1311)))
1311 5381 0
1309 5381 0
1309 1311 5380 0
c ((aux1009 + aux1011 - aux1012)<=0)
5380 -5383 0
5381 -5384 0
5374 -5383 0
5374 5380 -5384 0
5374 5381 -5386 0
5375 -5384 0
5375 5380 -5386 0
5375 5381 -5388 0
c (0<=(aux1009 + aux1011 - aux1012))
-5381 5388 0
-5380 5386 0
-5375 5388 0
-5375 -5381 5386 0
-5375 -5380 5384 0
-5374 5386 0
-5374 -5381 5384 0
-5374 -5380 5383 0
c ((aux1008 + aux1010 - aux1013)<=0)
5377 -5390 0
5378 -5391 0
5371 -5390 0
5371 5377 -5391 0
5371 5378 -5393 0
5372 -5391 0
5372 5377 -5393 0
5372 5378 -5395 0
c (0<=(aux1008 + aux1010 - aux1013))
-5378 5395 0
-5377 5393 0
-5372 5395 0
-5372 -5378 5393 0
-5372 -5377 5391 0
-5371 5393 0
-5371 -5378 5391 0
-5371 -5377 5390 0
c ((SATLiteral(760) + aux1018 - SATLiteral(5402))<=0)
-760 5402 0
c (0<=(SATLiteral(760) + aux1018 - SATLiteral(5402)))
760 -5402 0
c ((SATLiteral(5402) - aux1020 + SATLiteral(952))<=0)
-952 -5403 0
-5402 -5403 0
-5402 -952 -5404 0
c (0<=(SATLiteral(5402) - aux1020 + SATLiteral(952)))
952 5404 0
5402 5404 0
5402 952 5403 0
c ((SATLiteral(761) - aux1021 + SATLiteral(953))<=0)
-953 -5406 0
-761 -5406 0
-761 -953 -5407 0
c (0<=(SATLiteral(761) - aux1021 + SATLiteral(953)))
953 5407 0
761 5407 0
761 953 5406 0
c ((SATLiteral(762) - aux1022 + SATLiteral(954))<=0)
-954 -5409 0
-762 -5409 0
-762 -954 -5410 0
c (0<=(SATLiteral(762) - aux1022 + SATLiteral(954)))
954 5410 0
762 5410 0
762 954 5409 0
c ((aux1022 - aux1023 + SATLiteral(568))<=0)
5409 -5412 0
5410 -5413 0
-568 -5412 0
-568 5409 -5413 0
-568 5410 -5415 0
c (0<=(aux1022 - aux1023 + SATLiteral(568)))
-5410 5415 0
-5409 5413 0
568 5415 0
568 -5410 5413 0
568 -5409 5412 0
c ((aux1020 + aux1021 - aux1024)<=0)
5406 -5417 0
5407 -5418 0
5403 -5417 0
5403 5406 -5418 0
5403 5407 -5420 0
5404 -5418 0
5404 5406 -5420 0
5404 5407 -5422 0
c (0<=(aux1020 + aux1021 - aux1024))
-5407 5422 0
-5406 5420 0
-5404 5422 0
-5404 -5407 5420 0
-5404 -5406 5418 0
-5403 5420 0
-5403 -5407 5418 0
-5403 -5406 5417 0
c ((SATLiteral(976) + aux1028 - SATLiteral(5428))<=0)
-976 5428 0
c (0<=(SATLiteral(976) + aux1028 - SATLiteral(5428)))
976 -5428 0
c ((SATLiteral(978) + SATLiteral(5428) - aux1030)<=0)
-5428 -5429 0
-978 -5429 0
-978 -5428 -5430 0
c (0<=(SATLiteral(978) + SATLiteral(5428) - aux1030))
5428 5430 0
978 5430 0
978 5428 5429 0
c ((SATLiteral(977) - aux1031 + SATLiteral(592))<=0)
-592 -5432 0
-977 -5432 0
-977 -592 -5433 0
c (0<=(SATLiteral(977) - aux1031 + SATLiteral(592)))
592 5433 0
977 5433 0
977 592 5432 0
c ((SATLiteral(1168) + SATLiteral(784) - aux1032)<=0)
-784 -5435 0
-1168 -5435 0
-1168 -784 -5436 0
c (0<=(SATLiteral(1168) + SATLiteral(784) - aux1032))
784 5436 0
1168 5436 0
1168 784 5435 0
c ((SATLiteral(785) + SATLiteral(786) - aux1033)<=0)
-786 -5438 0
-785 -5438 0
-785 -786 -5439 0
c (0<=(SATLiteral(785) + SATLiteral(786) - aux1033))
786 5439 0
785 5439 0
785 786 5438 0
c ((aux1031 + aux1033 - aux1034)<=0)
5438 -5441 0
5439 -5442 0
5432 -5441 0
5432 5438 -5442 0
5432 5439 -5444 0
5433 -5442 0
5433 5438 -5444 0
5433 5439 -5446 0
c (0<=(aux1031 + aux1033 - aux1034))
-5439 5446 0
-5438 5444 0
-5433 5446 0
-5433 -5439 5444 0
-5433 -5438 5442 0
-5432 5444 0
-5432 -5439 5442 0
-5432 -5438 5441 0
c ((aux1030 + aux1032 - aux1035)<=0)
5435 -5448 0
5436 -5449 0
5429 -5448 0
5429 5435 -5449 0
5429 5436 -5451 0
5430 -5449 0
5430 5435 -5451 0
5430 5436 -5453 0
c (0<=(aux1030 + aux1032 - aux1035))
-5436 5453 0
-5435 5451 0
-5430 5453 0
-5430 -5436 5451 0
-5430 -5435 5449 0
-5429 5451 0
-5429 -5436 5449 0
-5429 -5435 5448 0
c ((aux1038 - SATLiteral(5458) + SATLiteral(616))<=0)
5458 -616 0
c (0<=(aux1038 - SATLiteral(5458) + SATLiteral(616)))
-5458 616 0
c ((SATLiteral(1001) + SATLiteral(5458) - aux1040)<=0)
-5458 -5459 0
-1001 -5459 0
-1001 -5458 -5460 0
c (0<=(SATLiteral(1001) + SATLiteral(5458) - aux1040))
5458 5460 0
1001 5460 0
1001 5458 5459 0
c ((SATLiteral(809) - aux1041 + SATLiteral(1193))<=0)
-1193 -5462 0
-809 -5462 0
-809 -1193 -5463 0
c (0<=(SATLiteral(809) - aux1041 + SATLiteral(1193)))
1193 5463 0
809 5463 0
809 1193 5462 0
c ((SATLiteral(808) + SATLiteral(1000) - aux1042)<=0)
-1000 -5465 0
-808 -5465 0
-808 -1000 -5466 0
c (0<=(SATLiteral(808) + SATLiteral(1000) - aux1042))
1000 5466 0
808 5466 0
808 1000 5465 0
c ((SATLiteral(810) + SATLiteral(1002) - aux1043)<=0)
-1002 -5468 0
-810 -5468 0
-810 -1002 -5469 0
c (0<=(SATLiteral(810) + SATLiteral(1002) - aux1043))
1002 5469 0
810 5469 0
810 1002 5468 0
c ((aux1043 - aux1044 + SATLiteral(1192))<=0)
5468 -5471 0
5469 -5472 0
-1192 -5471 0
-1192 5468 -5472 0
-1192 5469 -5474 0
c (0<=(aux1043 - aux1044 + SATLiteral(1192)))
-5469 5474 0
-5468 5472 0
1192 5474 0
1192 -5469 5472 0
1192 -5468 5471 0
c ((aux1040 + aux1041 - aux1045)<=0)
5462 -5476 0
5463 -5477 0
5459 -5476 0
5459 5462 -5477 0
5459 5463 -5479 0
5460 -5477 0
5460 5462 -5479 0
5460 5463 -5481 0
c (0<=(aux1040 + aux1041 - aux1045))
-5463 5481 0
-5462 5479 0
-5460 5481 0
-5460 -5463 5479 0
-5460 -5462 5477 0
-5459 5479 0
-5459 -5463 5477 0
-5459 -5462 5476 0
c ((aux1042 + aux1044 - aux1046)<=0)
5471 -5483 0
5472 -5484 0
5474 -5486 0
5465 -5483 0
5465 5471 -5484 0
5465 5472 -5486 0
5465 5474 -5488 0
5466 -5484 0
5466 5471 -5486 0
5466 5472 -5488 0
5466 5474 -5490 0
c (0<=(aux1042 + aux1044 - aux1046))
-5474 5490 0
-5472 5488 0
-5471 5486 0
-5466 5490 0
-5466 -5474 5488 0
-5466 -5472 5486 0
-5466 -5471 5484 0
-5465 5488 0
-5465 -5474 5486 0
-5465 -5472 5484 0
-5465 -5471 5483 0
c ((aux1048 - SATLiteral(5494) + SATLiteral(833))<=0)
5494 -833 0
c (0<=(aux1048 - SATLiteral(5494) + SATLiteral(833)))
-5494 833 0
c ((SATLiteral(5494) - aux1050 + SATLiteral(1218))<=0)
-1218 -5495 0
-5494 -5495 0
-5494 -1218 -5496 0
c (0<=(SATLiteral(5494) - aux1050 + SATLiteral(1218)))
1218 5496 0
5494 5496 0
5494 1218 5495 0
c ((SATLiteral(1024) - aux1051 + SATLiteral(1217))<=0)
-1217 -5498 0
-1024 -5498 0
-1024 -1217 -5499 0
c (0<=(SATLiteral(1024) - aux1051 + SATLiteral(1217)))
1217 5499 0
1024 5499 0
1024 1217 5498 0
c ((SATLiteral(640) - aux1052 + SATLiteral(1216))<=0)
-1216 -5501 0
-640 -5501 0
-640 -1216 -5502 0
c (0<=(SATLiteral(640) - aux1052 + SATLiteral(1216)))
1216 5502 0
640 5502 0
640 1216 5501 0
c ((SATLiteral(1025) - aux1053 + SATLiteral(832))<=0)
-832 -5504 0
-1025 -5504 0
-1025 -832 -5505 0
c (0<=(SATLiteral(1025) - aux1053 + SATLiteral(832)))
832 5505 0
1025 5505 0
1025 832 5504 0
c ((SATLiteral(1026) - aux1054 + SATLiteral(834))<=0)
-834 -5507 0
-1026 -5507 0
-1026 -834 -5508 0
c (0<=(SATLiteral(1026) - aux1054 + SATLiteral(834)))
834 5508 0
1026 5508 0
1026 834 5507 0
c ((aux1050 + aux1054 - aux1055)<=0)
5507 -5510 0
5508 -5511 0
5495 -5510 0
5495 5507 -5511 0
5495 5508 -5513 0
5496 -5511 0
5496 5507 -5513 0
5496 5508 -5515 0
c (0<=(aux1050 + aux1054 - aux1055))
-5508 5515 0
-5507 5513 0
-5496 5515 0
-5496 -5508 5513 0
-5496 -5507 5511 0
-5495 5513 0
-5495 -5508 5511 0
-5495 -5507 5510 0
c ((aux1051 + aux1052 - aux1056)<=0)
5501 -5517 0
5502 -5518 0
5498 -5517 0
5498 5501 -5518 0
5498 5502 -5520 0
5499 -5518 0
5499 5501 -5520 0
5499 5502 -5522 0
c (0<=(aux1051 + aux1052 - aux1056))
-5502 5522 0
-5501 5520 0
-5499 5522 0
-5499 -5502 5520 0
-5499 -5501 5518 0
-5498 5520 0
-5498 -5502 5518 0
-5498 -5501 5517 0
c ((aux1053 + aux1056 - aux1057)<=0)
5517 -5524 0
5518 -5525 0
5520 -5527 0
5522 -5529 0
5504 -5524 0
5504 5517 -5525 0
5504 5518 -5527 0
5504 5520 -5529 0
5504 5522 -5531 0
5505 -5525 0
5505 5517 -5527 0
5505 5518 -5529 0
5505 5520 -5531 0
5505 5522 -5533 0
c (0<=(aux1053 + aux1056 - aux1057))
-5522 5533 0
-5520 5531 0
-5518 5529 0
-5517 5527 0
-5505 5533 0
-5505 -5522 5531 0
-5505 -5520 5529 0
-5505 -5518 5527 0
-5505 -5517 5525 0
-5504 5531 0
-5504 -5522 5529 0
-5504 -5520 5527 0
-5504 -5518 5525 0
-5504 -5517 5524 0
c ((aux1059 - SATLiteral(5537) + SATLiteral(857))<=0)
5537 -857 0
c (0<=(aux1059 - SATLiteral(5537) + SATLiteral(857)))
-5537 857 0
c ((SATLiteral(5537) - aux1061 + SATLiteral(1242))<=0)
-1242 -5538 0
-5537 -5538 0
-5537 -1242 -5539 0
c (0<=(SATLiteral(5537) - aux1061 + SATLiteral(1242)))
1242 5539 0
5537 5539 0
5537 1242 5538 0
c (( - aux1062 + SATLiteral(1241) + SATLiteral(858))<=0)
-858 -5541 0
-1241 -5541 0
-1241 -858 -5542 0
c (0<=( - aux1062 + SATLiteral(1241) + SATLiteral(858)))
858 5542 0
1241 5542 0
1241 858 5541 0
c ((SATLiteral(1050) - aux1063 + SATLiteral(1240))<=0)
-1240 -5544 0
-1050 -5544 0
-1050 -1240 -5545 0
c (0<=(SATLiteral(1050) - aux1063 + SATLiteral(1240)))
1240 5545 0
1050 5545 0
1050 1240 5544 0
c ((SATLiteral(664) - aux1064 + SATLiteral(856))<=0)
-856 -5547 0
-664 -5547 0
-664 -856 -5548 0
c (0<=(SATLiteral(664) - aux1064 + SATLiteral(856)))
856 5548 0
664 5548 0
664 856 5547 0
c ((SATLiteral(1048) + SATLiteral(1049) - aux1065)<=0)
-1049 -5550 0
-1048 -5550 0
-1048 -1049 -5551 0
c (0<=(SATLiteral(1048) + SATLiteral(1049) - aux1065))
1049 5551 0
1048 5551 0
1048 1049 5550 0
c ((aux1061 + aux1065 - aux1066)<=0)
5550 -5553 0
5551 -5554 0
5538 -5553 0
5538 5550 -5554 0
5538 5551 -5556 0
5539 -5554 0
5539 5550 -5556 0
5539 5551 -5558 0
c (0<=(aux1061 + aux1065 - aux1066))
-5551 5558 0
-5550 5556 0
-5539 5558 0
-5539 -5551 5556 0
-5539 -5550 5554 0
-5538 5556 0
-5538 -5551 5554 0
-5538 -5550 5553 0
c ((aux1062 + aux1063 - aux1067)<=0)
5544 -5560 0
5545 -5561 0
5541 -5560 0
5541 5544 -5561 0
5541 5545 -5563 0
5542 -5561 0
5542 5544 -5563 0
5542 5545 -5565 0
c (0<=(aux1062 + aux1063 - aux1067))
-5545 5565 0
-5544 5563 0
-5542 5565 0
-5542 -5545 5563 0
-5542 -5544 5561 0
-5541 5563 0
-5541 -5545 5561 0
-5541 -5544 5560 0
c ((aux1064 + aux1067 - aux1068)<=0)
5560 -5567 0
5561 -5568 0
5563 -5570 0
5565 -5572 0
5547 -5567 0
5547 5560 -5568 0
5547 5561 -5570 0
5547 5563 -5572 0
5547 5565 -5574 0
5548 -5568 0
5548 5560 -5570 0
5548 5561 -5572 0
5548 5563 -5574 0
5548 5565 -5576 0
c (0<=(aux1064 + aux1067 - aux1068))
-5565 5576 0
-5563 5574 0
-5561 5572 0
-5560 5570 0
-5548 5576 0
-5548 -5565 5574 0
-5548 -5563 5572 0
-5548 -5561 5570 0
-5548 -5560 5568 0
-5547 5574 0
-5547 -5565 5572 0
-5547 -5563 5570 0
-5547 -5561 5568 0
-5547 -5560 5567 0
c ((SATLiteral(1073) + aux1071 - SATLiteral(5581))<=0)
-1073 5581 0
c (0<=(SATLiteral(1073) + aux1071 - SATLiteral(5581)))
1073 -5581 0
c ((SATLiteral(5581) - aux1073 + SATLiteral(1265))<=0)
-1265 -5582 0
-5581 -5582 0
-5581 -1265 -5583 0
c (0<=(SATLiteral(5581) - aux1073 + SATLiteral(1265)))
1265 5583 0
5581 5583 0
5581 1265 5582 0
c (( - aux1074 + SATLiteral(1264) + SATLiteral(1266))<=0)
-1266 -5585 0
-1264 -5585 0
-1264 -1266 -5586 0
c (0<=( - aux1074 + SATLiteral(1264) + SATLiteral(1266)))
1266 5586 0
1264 5586 0
1264 1266 5585 0
c ((SATLiteral(1072) + SATLiteral(688) - aux1075)<=0)
-688 -5588 0
-1072 -5588 0
-1072 -688 -5589 0
c (0<=(SATLiteral(1072) + SATLiteral(688) - aux1075))
688 5589 0
1072 5589 0
1072 688 5588 0
c ((SATLiteral(1074) - aux1076 + SATLiteral(881))<=0)
-881 -5591 0
-1074 -5591 0
-1074 -881 -5592 0
c (0<=(SATLiteral(1074) - aux1076 + SATLiteral(881)))
881 5592 0
1074 5592 0
1074 881 5591 0
c ((aux1076 - aux1077 + SATLiteral(880))<=0)
5591 -5594 0
5592 -5595 0
-880 -5594 0
-880 5591 -5595 0
-880 5592 -5597 0
c (0<=(aux1076 - aux1077 + SATLiteral(880)))
-5592 5597 0
-5591 5595 0
880 5597 0
880 -5592 5595 0
880 -5591 5594 0
c ((aux1073 + aux1074 - aux1078)<=0)
5585 -5599 0
5586 -5600 0
5582 -5599 0
5582 5585 -5600 0
5582 5586 -5602 0
5583 -5600 0
5583 5585 -5602 0
5583 5586 -5604 0
c (0<=(aux1073 + aux1074 - aux1078))
-5586 5604 0
-5585 5602 0
-5583 5604 0
-5583 -5586 5602 0
-5583 -5585 5600 0
-5582 5602 0
-5582 -5586 5600 0
-5582 -5585 5599 0
c ((aux1075 + aux1077 - aux1079)<=0)
5594 -5606 0
5595 -5607 0
5597 -5609 0
5588 -5606 0
5588 5594 -5607 0
5588 5595 -5609 0
5588 5597 -5611 0
5589 -5607 0
5589 5594 -5609 0
5589 5595 -5611 0
5589 5597 -5613 0
c (0<=(aux1075 + aux1077 - aux1079))
-5597 5613 0
-5595 5611 0
-5594 5609 0
-5589 5613 0
-5589 -5597 5611 0
-5589 -5595 5609 0
-5589 -5594 5607 0
-5588 5611 0
-5588 -5597 5609 0
-5588 -5595 5607 0
-5588 -5594 5606 0
c ((aux1083 - SATLiteral(5619) + SATLiteral(1288))<=0)
5619 -1288 0
c (0<=(aux1083 - SATLiteral(5619) + SATLiteral(1288)))
-5619 1288 0
c ((SATLiteral(5619) - aux1085 + SATLiteral(904))<=0)
-904 -5620 0
-5619 -5620 0
-5619 -904 -5621 0
c (0<=(SATLiteral(5619) - aux1085 + SATLiteral(904)))
904 5621 0
5619 5621 0
5619 904 5620 0
c (( - aux1086 + SATLiteral(1290) + SATLiteral(1097))<=0)
-1097 -5623 0
-1290 -5623 0
-1290 -1097 -5624 0
c (0<=( - aux1086 + SATLiteral(1290) + SATLiteral(1097)))
1097 5624 0
1290 5624 0
1290 1097 5623 0
c ((SATLiteral(712) - aux1087 + SATLiteral(1289))<=0)
-1289 -5626 0
-712 -5626 0
-712 -1289 -5627 0
c (0<=(SATLiteral(712) - aux1087 + SATLiteral(1289)))
1289 5627 0
712 5627 0
712 1289 5626 0
c (( - aux1088 + SATLiteral(1096) + SATLiteral(1098))<=0)
-1098 -5629 0
-1096 -5629 0
-1096 -1098 -5630 0
c (0<=( - aux1088 + SATLiteral(1096) + SATLiteral(1098)))
1098 5630 0
1096 5630 0
1096 1098 5629 0
c ((aux1086 + aux1088 - aux1089)<=0)
5629 -5632 0
5630 -5633 0
5623 -5632 0
5623 5629 -5633 0
5623 5630 -5635 0
5624 -5633 0
5624 5629 -5635 0
5624 5630 -5637 0
c (0<=(aux1086 + aux1088 - aux1089))
-5630 5637 0
-5629 5635 0
-5624 5637 0
-5624 -5630 5635 0
-5624 -5629 5633 0
-5623 5635 0
-5623 -5630 5633 0
-5623 -5629 5632 0
c ((aux1085 + aux1087 - aux1090)<=0)
5626 -5639 0
5627 -5640 0
5620 -5639 0
5620 5626 -5640 0
5620 5627 -5642 0
5621 -5640 0
5621 5626 -5642 0
5621 5627 -5644 0
c (0<=(aux1085 + aux1087 - aux1090))
-5627 5644 0
-5626 5642 0
-5621 5644 0
-5621 -5627 5642 0
-5621 -5626 5640 0
-5620 5642 0
-5620 -5627 5640 0
-5620 -5626 5639 0
c ((aux1095 - SATLiteral(5651) + SATLiteral(1121))<=0)
5651 -1121 0
c (0<=(aux1095 - SATLiteral(5651) + SATLiteral(1121)))
-5651 1121 0
c ((SATLiteral(736) + SATLiteral(5651) - aux1097)<=0)
-5651 -5652 0
-736 -5652 0
-736 -5651 -5653 0
c (0<=(SATLiteral(736) + SATLiteral(5651) - aux1097))
5651 5653 0
736 5653 0
736 5651 5652 0
c (( - aux1098 + SATLiteral(1314) + SATLiteral(1122))<=0)
-1122 -5655 0
-1314 -5655 0
-1314 -1122 -5656 0
c (0<=( - aux1098 + SATLiteral(1314) + SATLiteral(1122)))
1122 5656 0
1314 5656 0
1314 1122 5655 0
c (( - aux1099 + SATLiteral(1313) + SATLiteral(1120))<=0)
-1120 -5658 0
-1313 -5658 0
-1313 -1120 -5659 0
c (0<=( - aux1099 + SATLiteral(1313) + SATLiteral(1120)))
1120 5659 0
1313 5659 0
1313 1120 5658 0
c ((aux1099 - aux1100 + SATLiteral(1312))<=0)
5658 -5661 0
5659 -5662 0
-1312 -5661 0
-1312 5658 -5662 0
-1312 5659 -5664 0
c (0<=(aux1099 - aux1100 + SATLiteral(1312)))
-5659 5664 0
-5658 5662 0
1312 5664 0
1312 -5659 5662 0
1312 -5658 5661 0
c ((aux1097 + aux1098 - aux1101)<=0)
5655 -5666 0
5656 -5667 0
5652 -5666 0
5652 5655 -5667 0
5652 5656 -5669 0
5653 -5667 0
5653 5655 -5669 0
5653 5656 -5671 0
c (0<=(aux1097 + aux1098 - aux1101))
-5656 5671 0
-5655 5669 0
-5653 5671 0
-5653 -5656 5669 0
-5653 -5655 5667 0
-5652 5669 0
-5652 -5656 5667 0
-5652 -5655 5666 0
c ((aux1107 - SATLiteral(5679) + SATLiteral(765))<=0)
5679 -765 0
c (0<=(aux1107 - SATLiteral(5679) + SATLiteral(765)))
-5679 765 0
c ((SATLiteral(5679) - aux1109 + SATLiteral(956))<=0)
-956 -5680 0
-5679 -5680 0
-5679 -956 -5681 0
c (0<=(SATLiteral(5679) - aux1109 + SATLiteral(956)))
956 5681 0
5679 5681 0
5679 956 5680 0
c (( - aux1110 + SATLiteral(764) + SATLiteral(957))<=0)
-957 -5683 0
-764 -5683 0
-764 -957 -5684 0
c (0<=( - aux1110 + SATLiteral(764) + SATLiteral(957)))
957 5684 0
764 5684 0
764 957 5683 0
c (( - aux1111 + SATLiteral(763) + SATLiteral(955))<=0)
-955 -5686 0
-763 -5686 0
-763 -955 -5687 0
c (0<=( - aux1111 + SATLiteral(763) + SATLiteral(955)))
955 5687 0
763 5687 0
763 955 5686 0
c ((aux1109 + aux1111 - aux1112)<=0)
5686 -5689 0
5687 -5690 0
5680 -5689 0
5680 5686 -5690 0
5680 5687 -5692 0
5681 -5690 0
5681 5686 -5692 0
5681 5687 -5694 0
c (0<=(aux1109 + aux1111 - aux1112))
-5687 5694 0
-5686 5692 0
-5681 5694 0
-5681 -5687 5692 0
-5681 -5686 5690 0
-5680 5692 0
-5680 -5687 5690 0
-5680 -5686 5689 0
c ((SATLiteral(787) + aux1117 - SATLiteral(5701))<=0)
-787 5701 0
c (0<=(SATLiteral(787) + aux1117 - SATLiteral(5701)))
787 -5701 0
c ((SATLiteral(1171) - aux1119 + SATLiteral(979))<=0)
-979 -5702 0
-1171 -5702 0
-1171 -979 -5703 0
c (0<=(SATLiteral(1171) - aux1119 + SATLiteral(979)))
979 5703 0
1171 5703 0
1171 979 5702 0
c ((SATLiteral(5701) - aux1120 + SATLiteral(981))<=0)
-981 -5705 0
-5701 -5705 0
-5701 -981 -5706 0
c (0<=(SATLiteral(5701) - aux1120 + SATLiteral(981)))
981 5706 0
5701 5706 0
5701 981 5705 0
c ((SATLiteral(788) + SATLiteral(789) - aux1121)<=0)
-789 -5708 0
-788 -5708 0
-788 -789 -5709 0
c (0<=(SATLiteral(788) + SATLiteral(789) - aux1121))
789 5709 0
788 5709 0
788 789 5708 0
c ((aux1121 - aux1122 + SATLiteral(980))<=0)
5708 -5711 0
5709 -5712 0
-980 -5711 0
-980 5708 -5712 0
-980 5709 -5714 0
c (0<=(aux1121 - aux1122 + SATLiteral(980)))
-5709 5714 0
-5708 5712 0
980 5714 0
980 -5709 5712 0
980 -5708 5711 0
c ((aux1119 + aux1120 - aux1123)<=0)
5705 -5716 0
5706 -5717 0
5702 -5716 0
5702 5705 -5717 0
5702 5706 -5719 0
5703 -5717 0
5703 5705 -5719 0
5703 5706 -5721 0
c (0<=(aux1119 + aux1120 - aux1123))
-5706 5721 0
-5705 5719 0
-5703 5721 0
-5703 -5706 5719 0
-5703 -5705 5717 0
-5702 5719 0
-5702 -5706 5717 0
-5702 -5705 5716 0
c ((SATLiteral(1195) + aux1127 - SATLiteral(5727))<=0)
-1195 5727 0
c (0<=(SATLiteral(1195) + aux1127 - SATLiteral(5727)))
1195 -5727 0
c ((SATLiteral(5727) - aux1129 + SATLiteral(1005))<=0)
-1005 -5728 0
-5727 -5728 0
-5727 -1005 -5729 0
c (0<=(SATLiteral(5727) - aux1129 + SATLiteral(1005)))
1005 5729 0
5727 5729 0
5727 1005 5728 0
c ((SATLiteral(812) - aux1130 + SATLiteral(1004))<=0)
-1004 -5731 0
-812 -5731 0
-812 -1004 -5732 0
c (0<=(SATLiteral(812) - aux1130 + SATLiteral(1004)))
1004 5732 0
812 5732 0
812 1004 5731 0
c ((SATLiteral(811) - aux1131 + SATLiteral(1003))<=0)
-1003 -5734 0
-811 -5734 0
-811 -1003 -5735 0
c (0<=(SATLiteral(811) - aux1131 + SATLiteral(1003)))
1003 5735 0
811 5735 0
811 1003 5734 0
c ((SATLiteral(1196) + SATLiteral(813) - aux1132)<=0)
-813 -5737 0
-1196 -5737 0
-1196 -813 -5738 0
c (0<=(SATLiteral(1196) + SATLiteral(813) - aux1132))
813 5738 0
1196 5738 0
1196 813 5737 0
c ((aux1130 + aux1132 - aux1133)<=0)
5737 -5740 0
5738 -5741 0
5731 -5740 0
5731 5737 -5741 0
5731 5738 -5743 0
5732 -5741 0
5732 5737 -5743 0
5732 5738 -5745 0
c (0<=(aux1130 + aux1132 - aux1133))
-5738 5745 0
-5737 5743 0
-5732 5745 0
-5732 -5738 5743 0
-5732 -5737 5741 0
-5731 5743 0
-5731 -5738 5741 0
-5731 -5737 5740 0
c ((aux1129 + aux1131 - aux1134)<=0)
5734 -5747 0
5735 -5748 0
5728 -5747 0
5728 5734 -5748 0
5728 5735 -5750 0
5729 -5748 0
5729 5734 -5750 0
5729 5735 -5752 0
c (0<=(aux1129 + aux1131 - aux1134))
-5735 5752 0
-5734 5750 0
-5729 5752 0
-5729 -5735 5750 0
-5729 -5734 5748 0
-5728 5750 0
-5728 -5735 5748 0
-5728 -5734 5747 0
c ((SATLiteral(1219) + aux1137 - SATLiteral(5757))<=0)
-1219 5757 0
c (0<=(SATLiteral(1219) + aux1137 - SATLiteral(5757)))
1219 -5757 0
c ((SATLiteral(836) + SATLiteral(5757) - aux1139)<=0)
-5757 -5758 0
-836 -5758 0
-836 -5757 -5759 0
c (0<=(SATLiteral(836) + SATLiteral(5757) - aux1139))
5757 5759 0
836 5759 0
836 5757 5758 0
c ((SATLiteral(1220) - aux1140 + SATLiteral(1029))<=0)
-1029 -5761 0
-1220 -5761 0
-1220 -1029 -5762 0
c (0<=(SATLiteral(1220) - aux1140 + SATLiteral(1029)))
1029 5762 0
1220 5762 0
1220 1029 5761 0
c ((SATLiteral(835) - aux1141 + SATLiteral(1028))<=0)
-1028 -5764 0
-835 -5764 0
-835 -1028 -5765 0
c (0<=(SATLiteral(835) - aux1141 + SATLiteral(1028)))
1028 5765 0
835 5765 0
835 1028 5764 0
c ((SATLiteral(1221) - aux1142 + SATLiteral(1027))<=0)
-1027 -5767 0
-1221 -5767 0
-1221 -1027 -5768 0
c (0<=(SATLiteral(1221) - aux1142 + SATLiteral(1027)))
1027 5768 0
1221 5768 0
1221 1027 5767 0
c ((SATLiteral(837) + aux1142 - aux1143)<=0)
5767 -5770 0
5768 -5771 0
-837 -5770 0
-837 5767 -5771 0
-837 5768 -5773 0
c (0<=(SATLiteral(837) + aux1142 - aux1143))
-5768 5773 0
-5767 5771 0
837 5773 0
837 -5768 5771 0
837 -5767 5770 0
c ((aux1139 + aux1140 - aux1144)<=0)
5761 -5775 0
5762 -5776 0
5758 -5775 0
5758 5761 -5776 0
5758 5762 -5778 0
5759 -5776 0
5759 5761 -5778 0
5759 5762 -5780 0
c (0<=(aux1139 + aux1140 - aux1144))
-5762 5780 0
-5761 5778 0
-5759 5780 0
-5759 -5762 5778 0
-5759 -5761 5776 0
-5758 5778 0
-5758 -5762 5776 0
-5758 -5761 5775 0
c ((aux1141 + aux1143 - aux1145)<=0)
5770 -5782 0
5771 -5783 0
5773 -5785 0
5764 -5782 0
5764 5770 -5783 0
5764 5771 -5785 0
5764 5773 -5787 0
5765 -5783 0
5765 5770 -5785 0
5765 5771 -5787 0
5765 5773 -5789 0
c (0<=(aux1141 + aux1143 - aux1145))
-5773 5789 0
-5771 5787 0
-5770 5785 0
-5765 5789 0
-5765 -5773 5787 0
-5765 -5771 5785 0
-5765 -5770 5783 0
-5764 5787 0
-5764 -5773 5785 0
-5764 -5771 5783 0
-5764 -5770 5782 0
c ((SATLiteral(1244) + aux1148 - SATLiteral(5794))<=0)
-1244 5794 0
c (0<=(SATLiteral(1244) + aux1148 - SATLiteral(5794)))
1244 -5794 0
c ((SATLiteral(1053) + SATLiteral(5794) - aux1150)<=0)
-5794 -5795 0
-1053 -5795 0
-1053 -5794 -5796 0
c (0<=(SATLiteral(1053) + SATLiteral(5794) - aux1150))
5794 5796 0
1053 5796 0
1053 5794 5795 0
c ((SATLiteral(859) + SATLiteral(1052) - aux1151)<=0)
-1052 -5798 0
-859 -5798 0
-859 -1052 -5799 0
c (0<=(SATLiteral(859) + SATLiteral(1052) - aux1151))
1052 5799 0
859 5799 0
859 1052 5798 0
c ((SATLiteral(1243) + SATLiteral(1051) - aux1152)<=0)
-1051 -5801 0
-1243 -5801 0
-1243 -1051 -5802 0
c (0<=(SATLiteral(1243) + SATLiteral(1051) - aux1152))
1051 5802 0
1243 5802 0
1243 1051 5801 0
c ((SATLiteral(1245) + SATLiteral(861) - aux1153)<=0)
-861 -5804 0
-1245 -5804 0
-1245 -861 -5805 0
c (0<=(SATLiteral(1245) + SATLiteral(861) - aux1153))
861 5805 0
1245 5805 0
1245 861 5804 0
c ((SATLiteral(860) + aux1153 - aux1154)<=0)
5804 -5807 0
5805 -5808 0
-860 -5807 0
-860 5804 -5808 0
-860 5805 -5810 0
c (0<=(SATLiteral(860) + aux1153 - aux1154))
-5805 5810 0
-5804 5808 0
860 5810 0
860 -5805 5808 0
860 -5804 5807 0
c ((aux1150 + aux1151 - aux1155)<=0)
5798 -5812 0
5799 -5813 0
5795 -5812 0
5795 5798 -5813 0
5795 5799 -5815 0
5796 -5813 0
5796 5798 -5815 0
5796 5799 -5817 0
c (0<=(aux1150 + aux1151 - aux1155))
-5799 5817 0
-5798 5815 0
-5796 5817 0
-5796 -5799 5815 0
-5796 -5798 5813 0
-5795 5815 0
-5795 -5799 5813 0
-5795 -5798 5812 0
c ((aux1152 + aux1154 - aux1156)<=0)
5807 -5819 0
5808 -5820 0
5810 -5822 0
5801 -5819 0
5801 5807 -5820 0
5801 5808 -5822 0
5801 5810 -5824 0
5802 -5820 0
5802 5807 -5822 0
5802 5808 -5824 0
5802 5810 -5826 0
c (0<=(aux1152 + aux1154 - aux1156))
-5810 5826 0
-5808 5824 0
-5807 5822 0
-5802 5826 0
-5802 -5810 5824 0
-5802 -5808 5822 0
-5802 -5807 5820 0
-5801 5824 0
-5801 -5810 5822 0
-5801 -5808 5820 0
-5801 -5807 5819 0
c ((aux1160 - SATLiteral(5832) + SATLiteral(1267))<=0)
5832 -1267 0
c (0<=(aux1160 - SATLiteral(5832) + SATLiteral(1267)))
-5832 1267 0
c ((SATLiteral(884) + SATLiteral(5832) - aux1162)<=0)
-5832 -5833 0
-884 -5833 0
-884 -5832 -5834 0
c (0<=(SATLiteral(884) + SATLiteral(5832) - aux1162))
5832 5834 0
884 5834 0
884 5832 5833 0
c ((SATLiteral(1075) + SATLiteral(1076) - aux1163)<=0)
-1076 -5836 0
-1075 -5836 0
-1075 -1076 -5837 0
c (0<=(SATLiteral(1075) + SATLiteral(1076) - aux1163))
1076 5837 0
1075 5837 0
1075 1076 5836 0
c ((SATLiteral(1077) - aux1164 + SATLiteral(1269))<=0)
-1269 -5839 0
-1077 -5839 0
-1077 -1269 -5840 0
c (0<=(SATLiteral(1077) - aux1164 + SATLiteral(1269)))
1269 5840 0
1077 5840 0
1077 1269 5839 0
c ((SATLiteral(883) - aux1165 + SATLiteral(1268))<=0)
-1268 -5842 0
-883 -5842 0
-883 -1268 -5843 0
c (0<=(SATLiteral(883) - aux1165 + SATLiteral(1268)))
1268 5843 0
883 5843 0
883 1268 5842 0
c ((aux1163 + aux1165 - aux1166)<=0)
5842 -5845 0
5843 -5846 0
5836 -5845 0
5836 5842 -5846 0
5836 5843 -5848 0
5837 -5846 0
5837 5842 -5848 0
5837 5843 -5850 0
c (0<=(aux1163 + aux1165 - aux1166))
-5843 5850 0
-5842 5848 0
-5837 5850 0
-5837 -5843 5848 0
-5837 -5842 5846 0
-5836 5848 0
-5836 -5843 5846 0
-5836 -5842 5845 0
c ((aux1162 + aux1164 - aux1167)<=0)
5839 -5852 0
5840 -5853 0
5833 -5852 0
5833 5839 -5853 0
5833 5840 -5855 0
5834 -5853 0
5834 5839 -5855 0
5834 5840 -5857 0
c (0<=(aux1162 + aux1164 - aux1167))
-5840 5857 0
-5839 5855 0
-5834 5857 0
-5834 -5840 5855 0
-5834 -5839 5853 0
-5833 5855 0
-5833 -5840 5853 0
-5833 -5839 5852 0
c ((SATLiteral(1100) + aux1172 - SATLiteral(5864))<=0)
-1100 5864 0
c (0<=(SATLiteral(1100) + aux1172 - SATLiteral(5864)))
1100 -5864 0
c ((SATLiteral(1101) - aux1174 + SATLiteral(1291))<=0)
-1291 -5865 0
-1101 -5865 0
-1101 -1291 -5866 0
c (0<=(SATLiteral(1101) - aux1174 + SATLiteral(1291)))
1291 5866 0
1101 5866 0
1101 1291 5865 0
c ((SATLiteral(5864) - aux1175 + SATLiteral(1293))<=0)
-1293 -5868 0
-5864 -5868 0
-5864 -1293 -5869 0
c (0<=(SATLiteral(5864) - aux1175 + SATLiteral(1293)))
1293 5869 0
5864 5869 0
5864 1293 5868 0
c ((SATLiteral(1099) - aux1176 + SATLiteral(907))<=0)
-907 -5871 0
-1099 -5871 0
-1099 -907 -5872 0
c (0<=(SATLiteral(1099) - aux1176 + SATLiteral(907)))
907 5872 0
1099 5872 0
1099 907 5871 0
c ((aux1176 - aux1177 + SATLiteral(1292))<=0)
5871 -5874 0
5872 -5875 0
-1292 -5874 0
-1292 5871 -5875 0
-1292 5872 -5877 0
c (0<=(aux1176 - aux1177 + SATLiteral(1292)))
-5872 5877 0
-5871 5875 0
1292 5877 0
1292 -5872 5875 0
1292 -5871 5874 0
c ((aux1174 + aux1175 - aux1178)<=0)
5868 -5879 0
5869 -5880 0
5865 -5879 0
5865 5868 -5880 0
5865 5869 -5882 0
5866 -5880 0
5866 5868 -5882 0
5866 5869 -5884 0
c (0<=(aux1174 + aux1175 - aux1178))
-5869 5884 0
-5868 5882 0
-5866 5884 0
-5866 -5869 5882 0
-5866 -5868 5880 0
-5865 5882 0
-5865 -5869 5880 0
-5865 -5868 5879 0
c ((SATLiteral(1124) + aux1184 - SATLiteral(5892))<=0)
-1124 5892 0
c (0<=(SATLiteral(1124) + aux1184 - SATLiteral(5892)))
1124 -5892 0
c ((SATLiteral(5892) - aux1186 + SATLiteral(1316))<=0)
-1316 -5893 0
-5892 -5893 0
-5892 -1316 -5894 0
c (0<=(SATLiteral(5892) - aux1186 + SATLiteral(1316)))
1316 5894 0
5892 5894 0
5892 1316 5893 0
c ((SATLiteral(1125) - aux1187 + SATLiteral(1317))<=0)
-1317 -5896 0
-1125 -5896 0
-1125 -1317 -5897 0
c (0<=(SATLiteral(1125) - aux1187 + SATLiteral(1317)))
1317 5897 0
1125 5897 0
1125 1317 5896 0
c ((SATLiteral(1123) - aux1188 + SATLiteral(1315))<=0)
-1315 -5899 0
-1123 -5899 0
-1123 -1315 -5900 0
c (0<=(SATLiteral(1123) - aux1188 + SATLiteral(1315)))
1315 5900 0
1123 5900 0
1123 1315 5899 0
c ((aux1186 + aux1188 - aux1189)<=0)
5899 -5902 0
5900 -5903 0
5893 -5902 0
5893 5899 -5903 0
5893 5900 -5905 0
5894 -5903 0
5894 5899 -5905 0
5894 5900 -5907 0
c (0<=(aux1186 + aux1188 - aux1189))
-5900 5907 0
-5899 5905 0
-5894 5907 0
-5894 -5900 5905 0
-5894 -5899 5903 0
-5893 5905 0
-5893 -5900 5903 0
-5893 -5899 5902 0
c ((SATLiteral(170) + SATLiteral(177) - aux1190)<=0)
-177 -5909 0
-170 -5909 0
-170 -177 -5910 0
c (0<=(SATLiteral(170) + SATLiteral(177) - aux1190))
177 5910 0
170 5910 0
170 177 5909 0
c ((SATLiteral(191) + SATLiteral(219) - aux1191)<=0)
-219 -5912 0
-191 -5912 0
-191 -219 -5913 0
c (0<=(SATLiteral(191) + SATLiteral(219) - aux1191))
219 5913 0
191 5913 0
191 219 5912 0
c ((SATLiteral(107) - aux1192 + SATLiteral(324))<=0)
-324 -5915 0
-107 -5915 0
-107 -324 -5916 0
c (0<=(SATLiteral(107) - aux1192 + SATLiteral(324)))
324 5916 0
107 5916 0
107 324 5915 0
c (( - aux1193 + SATLiteral(275) + SATLiteral(317))<=0)
-317 -5918 0
-275 -5918 0
-275 -317 -5919 0
c (0<=( - aux1193 + SATLiteral(275) + SATLiteral(317)))
317 5919 0
275 5919 0
275 317 5918 0
c (( - aux1194 + SATLiteral(310) + SATLiteral(331))<=0)
-331 -5921 0
-310 -5921 0
-310 -331 -5922 0
c (0<=( - aux1194 + SATLiteral(310) + SATLiteral(331)))
331 5922 0
310 5922 0
310 331 5921 0
c (( - aux1195 + SATLiteral(114) + SATLiteral(303))<=0)
-303 -5924 0
-114 -5924 0
-114 -303 -5925 0
c (0<=( - aux1195 + SATLiteral(114) + SATLiteral(303)))
303 5925 0
114 5925 0
114 303 5924 0
c ((SATLiteral(338) - aux1196 + SATLiteral(296))<=0)
-296 -5927 0
-338 -5927 0
-338 -296 -5928 0
c (0<=(SATLiteral(338) - aux1196 + SATLiteral(296)))
296 5928 0
338 5928 0
338 296 5927 0
c (( - aux1197 + SATLiteral(121) + SATLiteral(289))<=0)
-289 -5930 0
-121 -5930 0
-121 -289 -5931 0
c (0<=( - aux1197 + SATLiteral(121) + SATLiteral(289)))
289 5931 0
121 5931 0
121 289 5930 0
c (( - aux1198 + SATLiteral(128) + SATLiteral(282))<=0)
-282 -5933 0
-128 -5933 0
-128 -282 -5934 0
c (0<=( - aux1198 + SATLiteral(128) + SATLiteral(282)))
282 5934 0
128 5934 0
128 282 5933 0
c ((SATLiteral(58) - aux1199 + SATLiteral(51))<=0)
-51 -5936 0
-58 -5936 0
-58 -51 -5937 0
c (0<=(SATLiteral(58) - aux1199 + SATLiteral(51)))
51 5937 0
58 5937 0
58 51 5936 0
c ((SATLiteral(345) - aux1200 + SATLiteral(44))<=0)
-44 -5939 0
-345 -5939 0
-345 -44 -5940 0
c (0<=(SATLiteral(345) - aux1200 + SATLiteral(44)))
44 5940 0
345 5940 0
345 44 5939 0
c (( - aux1201 + SATLiteral(135) + SATLiteral(37))<=0)
-37 -5942 0
-135 -5942 0
-135 -37 -5943 0
c (0<=( - aux1201 + SATLiteral(135) + SATLiteral(37)))
37 5943 0
135 5943 0
135 37 5942 0
c (( - aux1202 + SATLiteral(142) + SATLiteral(30))<=0)
-30 -5945 0
-142 -5945 0
-142 -30 -5946 0
c (0<=( - aux1202 + SATLiteral(142) + SATLiteral(30)))
30 5946 0
142 5946 0
142 30 5945 0
c ((SATLiteral(352) - aux1203 + SATLiteral(23))<=0)
-23 -5948 0
-352 -5948 0
-352 -23 -5949 0
c (0<=(SATLiteral(352) - aux1203 + SATLiteral(23)))
23 5949 0
352 5949 0
352 23 5948 0
c (( - aux1204 + SATLiteral(149) + SATLiteral(16))<=0)
-16 -5951 0
-149 -5951 0
-149 -16 -5952 0
c (0<=( - aux1204 + SATLiteral(149) + SATLiteral(16)))
16 5952 0
149 5952 0
149 16 5951 0
c (( - aux1205 + SATLiteral(156) + SATLiteral(9))<=0)
-9 -5954 0
-156 -5954 0
-156 -9 -5955 0
c (0<=( - aux1205 + SATLiteral(156) + SATLiteral(9)))
9 5955 0
156 5955 0
156 9 5954 0
c ((SATLiteral(198) - aux1206 + SATLiteral(2))<=0)
-2 -5957 0
-198 -5957 0
-198 -2 -5958 0
c (0<=(SATLiteral(198) - aux1206 + SATLiteral(2)))
2 5958 0
198 5958 0
198 2 5957 0
c ((SATLiteral(65) - aux1207 + SATLiteral(443))<=0)
-443 -5960 0
-65 -5960 0
-65 -443 -5961 0
c (0<=(SATLiteral(65) - aux1207 + SATLiteral(443)))
443 5961 0
65 5961 0
65 443 5960 0
c ((SATLiteral(359) - aux1208 + SATLiteral(436))<=0)
-436 -5963 0
-359 -5963 0
-359 -436 -5964 0
c (0<=(SATLiteral(359) - aux1208 + SATLiteral(436)))
436 5964 0
359 5964 0
359 436 5963 0
c (( - aux1209 + SATLiteral(163) + SATLiteral(429))<=0)
-429 -5966 0
-163 -5966 0
-163 -429 -5967 0
c (0<=( - aux1209 + SATLiteral(163) + SATLiteral(429)))
429 5967 0
163 5967 0
163 429 5966 0
c (( - aux1210 + SATLiteral(394) + SATLiteral(422))<=0)
-422 -5969 0
-394 -5969 0
-394 -422 -5970 0
c (0<=( - aux1210 + SATLiteral(394) + SATLiteral(422)))
422 5970 0
394 5970 0
394 422 5969 0
c ((SATLiteral(366) - aux1211 + SATLiteral(415))<=0)
-415 -5972 0
-366 -5972 0
-366 -415 -5973 0
c (0<=(SATLiteral(366) - aux1211 + SATLiteral(415)))
415 5973 0
366 5973 0
366 415 5972 0
c (( - aux1212 + SATLiteral(401) + SATLiteral(408))<=0)
-408 -5975 0
-401 -5975 0
-401 -408 -5976 0
c (0<=( - aux1212 + SATLiteral(401) + SATLiteral(408)))
408 5976 0
401 5976 0
401 408 5975 0
c ((SATLiteral(72) + SATLiteral(373) - aux1213)<=0)
-373 -5978 0
-72 -5978 0
-72 -373 -5979 0
c (0<=(SATLiteral(72) + SATLiteral(373) - aux1213))
373 5979 0
72 5979 0
72 373 5978 0
c ((SATLiteral(184) + SATLiteral(380) - aux1214)<=0)
-380 -5981 0
-184 -5981 0
-184 -380 -5982 0
c (0<=(SATLiteral(184) + SATLiteral(380) - aux1214))
380 5982 0
184 5982 0
184 380 5981 0
c ((SATLiteral(205) + SATLiteral(79) - aux1215)<=0)
-79 -5984 0
-205 -5984 0
-205 -79 -5985 0
c (0<=(SATLiteral(205) + SATLiteral(79) - aux1215))
79 5985 0
205 5985 0
205 79 5984 0
c ((SATLiteral(387) - aux1216 + SATLiteral(226))<=0)
-226 -5987 0
-387 -5987 0
-387 -226 -5988 0
c (0<=(SATLiteral(387) - aux1216 + SATLiteral(226)))
226 5988 0
387 5988 0
387 226 5987 0
c ((SATLiteral(86) - aux1217 + SATLiteral(233))<=0)
-233 -5990 0
-86 -5990 0
-86 -233 -5991 0
c (0<=(SATLiteral(86) - aux1217 + SATLiteral(233)))
233 5991 0
86 5991 0
86 233 5990 0
c ((SATLiteral(212) - aux1218 + SATLiteral(240))<=0)
-240 -5993 0
-212 -5993 0
-212 -240 -5994 0
c (0<=(SATLiteral(212) - aux1218 + SATLiteral(240)))
240 5994 0
212 5994 0
212 240 5993 0
c ((SATLiteral(93) - aux1219 + SATLiteral(247))<=0)
-247 -5996 0
-93 -5996 0
-93 -247 -5997 0
c (0<=(SATLiteral(93) - aux1219 + SATLiteral(247)))
247 5997 0
93 5997 0
93 247 5996 0
c ((SATLiteral(100) - aux1220 + SATLiteral(254))<=0)
-254 -5999 0
-100 -5999 0
-100 -254 -6000 0
c (0<=(SATLiteral(100) - aux1220 + SATLiteral(254)))
254 6000 0
100 6000 0
100 254 5999 0
c (( - aux1221 + SATLiteral(261) + SATLiteral(268))<=0)
-268 -6002 0
-261 -6002 0
-261 -268 -6003 0
c (0<=( - aux1221 + SATLiteral(261) + SATLiteral(268)))
268 6003 0
261 6003 0
261 268 6002 0
c ((aux1205 + aux1221 - aux1222)<=0)
6002 -6005 0
6003 -6006 0
5954 -6005 0
5954 6002 -6006 0
5954 6003 -6008 0
5955 -6006 0
5955 6002 -6008 0
5955 6003 -6010 0
c (0<=(aux1205 + aux1221 - aux1222))
-6003 6010 0
-6002 6008 0
-5955 6010 0
-5955 -6003 6008 0
-5955 -6002 6006 0
-5954 6008 0
-5954 -6003 6006 0
-5954 -6002 6005 0
c ((aux1195 + aux1203 - aux1223)<=0)
5948 -6012 0
5949 -6013 0
5924 -6012 0
5924 5948 -6013 0
5924 5949 -6015 0
5925 -6013 0
5925 5948 -6015 0
5925 5949 -6017 0
c (0<=(aux1195 + aux1203 - aux1223))
-5949 6017 0
-5948 6015 0
-5925 6017 0
-5925 -5949 6015 0
-5925 -5948 6013 0
-5924 6015 0
-5924 -5949 6013 0
-5924 -5948 6012 0
c ((aux1191 + aux1193 - aux1224)<=0)
5918 -6019 0
5919 -6020 0
5912 -6019 0
5912 5918 -6020 0
5912 5919 -6022 0
5913 -6020 0
5913 5918 -6022 0
5913 5919 -6024 0
c (0<=(aux1191 + aux1193 - aux1224))
-5919 6024 0
-5918 6022 0
-5913 6024 0
-5913 -5919 6022 0
-5913 -5918 6020 0
-5912 6022 0
-5912 -5919 6020 0
-5912 -5918 6019 0
c ((aux1190 + aux1218 - aux1225)<=0)
5993 -6026 0
5994 -6027 0
5909 -6026 0
5909 5993 -6027 0
5909 5994 -6029 0
5910 -6027 0
5910 5993 -6029 0
5910 5994 -6031 0
c (0<=(aux1190 + aux1218 - aux1225))
-5994 6031 0
-5993 6029 0
-5910 6031 0
-5910 -5994 6029 0
-5910 -5993 6027 0
-5909 6029 0
-5909 -5994 6027 0
-5909 -5993 6026 0
c ((aux1194 + aux1217 - aux1226)<=0)
5990 -6033 0
5991 -6034 0
5921 -6033 0
5921 5990 -6034 0
5921 5991 -6036 0
5922 -6034 0
5922 5990 -6036 0
5922 5991 -6038 0
c (0<=(aux1194 + aux1217 - aux1226))
-5991 6038 0
-5990 6036 0
-5922 6038 0
-5922 -5991 6036 0
-5922 -5990 6034 0
-5921 6036 0
-5921 -5991 6034 0
-5921 -5990 6033 0
c ((aux1197 + aux1202 - aux1227)<=0)
5945 -6040 0
5946 -6041 0
5930 -6040 0
5930 5945 -6041 0
5930 5946 -6043 0
5931 -6041 0
5931 5945 -6043 0
5931 5946 -6045 0
c (0<=(aux1197 + aux1202 - aux1227))
-5946 6045 0
-5945 6043 0
-5931 6045 0
-5931 -5946 6043 0
-5931 -5945 6041 0
-5930 6043 0
-5930 -5946 6041 0
-5930 -5945 6040 0
c ((aux1198 + aux1215 - aux1228)<=0)
5984 -6047 0
5985 -6048 0
5933 -6047 0
5933 5984 -6048 0
5933 5985 -6050 0
5934 -6048 0
5934 5984 -6050 0
5934 5985 -6052 0
c (0<=(aux1198 + aux1215 - aux1228))
-5985 6052 0
-5984 6050 0
-5934 6052 0
-5934 -5985 6050 0
-5934 -5984 6048 0
-5933 6050 0
-5933 -5985 6048 0
-5933 -5984 6047 0
c ((aux1200 + aux1201 - aux1229)<=0)
5942 -6054 0
5943 -6055 0
5939 -6054 0
5939 5942 -6055 0
5939 5943 -6057 0
5940 -6055 0
5940 5942 -6057 0
5940 5943 -6059 0
c (0<=(aux1200 + aux1201 - aux1229))
-5943 6059 0
-5942 6057 0
-5940 6059 0
-5940 -5943 6057 0
-5940 -5942 6055 0
-5939 6057 0
-5939 -5943 6055 0
-5939 -5942 6054 0
c ((aux1204 + aux1212 - aux1230)<=0)
5975 -6061 0
5976 -6062 0
5951 -6061 0
5951 5975 -6062 0
5951 5976 -6064 0
5952 -6062 0
5952 5975 -6064 0
5952 5976 -6066 0
c (0<=(aux1204 + aux1212 - aux1230))
-5976 6066 0
-5975 6064 0
-5952 6066 0
-5952 -5976 6064 0
-5952 -5975 6062 0
-5951 6064 0
-5951 -5976 6062 0
-5951 -5975 6061 0
c ((aux1210 + aux1213 - aux1231)<=0)
5978 -6068 0
5979 -6069 0
5969 -6068 0
5969 5978 -6069 0
5969 5979 -6071 0
5970 -6069 0
5970 5978 -6071 0
5970 5979 -6073 0
c (0<=(aux1210 + aux1213 - aux1231))
-5979 6073 0
-5978 6071 0
-5970 6073 0
-5970 -5979 6071 0
-5970 -5978 6069 0
-5969 6071 0
-5969 -5979 6069 0
-5969 -5978 6068 0
c ((aux1206 + aux1211 - aux1232)<=0)
5972 -6075 0
5973 -6076 0
5957 -6075 0
5957 5972 -6076 0
5957 5973 -6078 0
5958 -6076 0
5958 5972 -6078 0
5958 5973 -6080 0
c (0<=(aux1206 + aux1211 - aux1232))
-5973 6080 0
-5972 6078 0
-5958 6080 0
-5958 -5973 6078 0
-5958 -5972 6076 0
-5957 6078 0
-5957 -5973 6076 0
-5957 -5972 6075 0
c ((aux1207 + aux1209 - aux1233)<=0)
5966 -6082 0
5967 -6083 0
5960 -6082 0
5960 5966 -6083 0
5960 5967 -6085 0
5961 -6083 0
5961 5966 -6085 0
5961 5967 -6087 0
c (0<=(aux1207 + aux1209 - aux1233))
-5967 6087 0
-5966 6085 0
-5961 6087 0
-5961 -5967 6085 0
-5961 -5966 6083 0
-5960 6085 0
-5960 -5967 6083 0
-5960 -5966 6082 0
c ((aux1208 + aux1220 - aux1234)<=0)
5999 -6089 0
6000 -6090 0
5963 -6089 0
5963 5999 -6090 0
5963 6000 -6092 0
5964 -6090 0
5964 5999 -6092 0
5964 6000 -6094 0
c (0<=(aux1208 + aux1220 - aux1234))
-6000 6094 0
-5999 6092 0
-5964 6094 0
-5964 -6000 6092 0
-5964 -5999 6090 0
-5963 6092 0
-5963 -6000 6090 0
-5963 -5999 6089 0
c ((aux1214 + aux1216 - aux1235)<=0)
5987 -6096 0
5988 -6097 0
5981 -6096 0
5981 5987 -6097 0
5981 5988 -6099 0
5982 -6097 0
5982 5987 -6099 0
5982 5988 -6101 0
c (0<=(aux1214 + aux1216 - aux1235))
-5988 6101 0
-5987 6099 0
-5982 6101 0
-5982 -5988 6099 0
-5982 -5987 6097 0
-5981 6099 0
-5981 -5988 6097 0
-5981 -5987 6096 0
c ((aux1192 + aux1199 - aux1236)<=0)
5936 -6103 0
5937 -6104 0
5915 -6103 0
5915 5936 -6104 0
5915 5937 -6106 0
5916 -6104 0
5916 5936 -6106 0
5916 5937 -6108 0
c (0<=(aux1192 + aux1199 - aux1236))
-5937 6108 0
-5936 6106 0
-5916 6108 0
-5916 -5937 6106 0
-5916 -5936 6104 0
-5915 6106 0
-5915 -5937 6104 0
-5915 -5936 6103 0
c ((aux1196 + aux1219 - aux1237)<=0)
5996 -6110 0
5997 -6111 0
5927 -6110 0
5927 5996 -6111 0
5927 5997 -6113 0
5928 -6111 0
5928 5996 -6113 0
5928 5997 -6115 0
c (0<=(aux1196 + aux1219 - aux1237))
-5997 6115 0
-5996 6113 0
-5928 6115 0
-5928 -5997 6113 0
-5928 -5996 6111 0
-5927 6113 0
-5927 -5997 6111 0
-5927 -5996 6110 0
c ((aux1229 + aux1237 - aux1238)<=0)
6110 -6117 0
6111 -6118 0
6113 -6120 0
6115 -6122 0
6054 -6117 0
6054 6110 -6118 0
6054 6111 -6120 0
6054 6113 -6122 0
6054 6115 -6124 0
6055 -6118 0
6055 6110 -6120 0
6055 6111 -6122 0
6055 6113 -6124 0
6055 6115 -6126 0
6057 -6120 0
6057 6110 -6122 0
6057 6111 -6124 0
6057 6113 -6126 0
6057 6115 -6128 0
6059 -6122 0
6059 6110 -6124 0
6059 6111 -6126 0
6059 6113 -6128 0
6059 6115 -6130 0
c (0<=(aux1229 + aux1237 - aux1238))
-6115 6130 0
-6113 6128 0
-6111 6126 0
-6110 6124 0
-6059 6130 0
-6059 -6115 6128 0
-6059 -6113 6126 0
-6059 -6111 6124 0
-6059 -6110 6122 0
-6057 6128 0
-6057 -6115 6126 0
-6057 -6113 6124 0
-6057 -6111 6122 0
-6057 -6110 6120 0
-6055 6126 0
-6055 -6115 6124 0
-6055 -6113 6122 0
-6055 -6111 6120 0
-6055 -6110 6118 0
-6054 6124 0
-6054 -6115 6122 0
-6054 -6113 6120 0
-6054 -6111 6118 0
-6054 -6110 6117 0
c ((aux1223 + aux1227 - aux1239)<=0)
6040 -6132 0
6041 -6133 0
6043 -6135 0
6045 -6137 0
6012 -6132 0
6012 6040 -6133 0
6012 6041 -6135 0
6012 6043 -6137 0
6012 6045 -6139 0
6013 -6133 0
6013 6040 -6135 0
6013 6041 -6137 0
6013 6043 -6139 0
6013 6045 -6141 0
6015 -6135 0
6015 6040 -6137 0
6015 6041 -6139 0
6015 6043 -6141 0
6015 6045 -6143 0
6017 -6137 0
6017 6040 -6139 0
6017 6041 -6141 0
6017 6043 -6143 0
6017 6045 -6145 0
c (0<=(aux1223 + aux1227 - aux1239))
-6045 6145 0
-6043 6143 0
-6041 6141 0
-6040 6139 0
-6017 6145 0
-6017 -6045 6143 0
-6017 -6043 6141 0
-6017 -6041 6139 0
-6017 -6040 6137 0
-6015 6143 0
-6015 -6045 6141 0
-6015 -6043 6139 0
-6015 -6041 6137 0
-6015 -6040 6135 0
-6013 6141 0
-6013 -6045 6139 0
-6013 -6043 6137 0
-6013 -6041 6135 0
-6013 -6040 6133 0
-6012 6139 0
-6012 -6045 6137 0
-6012 -6043 6135 0
-6012 -6041 6133 0
-6012 -6040 6132 0
c ((aux1222 + aux1235 - aux1240)<=0)
6096 -6147 0
6097 -6148 0
6099 -6150 0
6101 -6152 0
6005 -6147 0
6005 6096 -6148 0
6005 6097 -6150 0
6005 6099 -6152 0
6005 6101 -6154 0
6006 -6148 0
6006 6096 -6150 0
6006 6097 -6152 0
6006 6099 -6154 0
6006 6101 -6156 0
6008 -6150 0
6008 6096 -6152 0
6008 6097 -6154 0
6008 6099 -6156 0
6008 6101 -6158 0
6010 -6152 0
6010 6096 -6154 0
6010 6097 -6156 0
6010 6099 -6158 0
6010 6101 -6160 0
c (0<=(aux1222 + aux1235 - aux1240))
-6101 6160 0
-6099 6158 0
-6097 6156 0
-6096 6154 0
-6010 6160 0
-6010 -6101 6158 0
-6010 -6099 6156 0
-6010 -6097 6154 0
-6010 -6096 6152 0
-6008 6158 0
-6008 -6101 6156 0
-6008 -6099 6154 0
-6008 -6097 6152 0
-6008 -6096 6150 0
-6006 6156 0
-6006 -6101 6154 0
-6006 -6099 6152 0
-6006 -6097 6150 0
-6006 -6096 6148 0
-6005 6154 0
-6005 -6101 6152 0
-6005 -6099 6150 0
-6005 -6097 6148 0
-6005 -6096 6147 0
c ((aux1225 + aux1226 - aux1241)<=0)
6033 -6162 0
6034 -6163 0
6036 -6165 0
6038 -6167 0
6026 -6162 0
6026 6033 -6163 0
6026 6034 -6165 0
6026 6036 -6167 0
6026 6038 -6169 0
6027 -6163 0
6027 6033 -6165 0
6027 6034 -6167 0
6027 6036 -6169 0
6027 6038 -6171 0
6029 -6165 0
6029 6033 -6167 0
6029 6034 -6169 0
6029 6036 -6171 0
6029 6038 -6173 0
6031 -6167 0
6031 6033 -6169 0
6031 6034 -6171 0
6031 6036 -6173 0
6031 6038 -6175 0
c (0<=(aux1225 + aux1226 - aux1241))
-6038 6175 0
-6036 6173 0
-6034 6171 0
-6033 6169 0
-6031 6175 0
-6031 -6038 6173 0
-6031 -6036 6171 0
-6031 -6034 6169 0
-6031 -6033 6167 0
-6029 6173 0
-6029 -6038 6171 0
-6029 -6036 6169 0
-6029 -6034 6167 0
-6029 -6033 6165 0
-6027 6171 0
-6027 -6038 6169 0
-6027 -6036 6167 0
-6027 -6034 6165 0
-6027 -6033 6163 0
-6026 6169 0
-6026 -6038 6167 0
-6026 -6036 6165 0
-6026 -6034 6163 0
-6026 -6033 6162 0
c ((aux1228 + aux1232 - aux1242)<=0)
6075 -6177 0
6076 -6178 0
6078 -6180 0
6080 -6182 0
6047 -6177 0
6047 6075 -6178 0
6047 6076 -6180 0
6047 6078 -6182 0
6047 6080 -6184 0
6048 -6178 0
6048 6075 -6180 0
6048 6076 -6182 0
6048 6078 -6184 0
6048 6080 -6186 0
6050 -6180 0
6050 6075 -6182 0
6050 6076 -6184 0
6050 6078 -6186 0
6050 6080 -6188 0
6052 -6182 0
6052 6075 -6184 0
6052 6076 -6186 0
6052 6078 -6188 0
6052 6080 -6190 0
c (0<=(aux1228 + aux1232 - aux1242))
-6080 6190 0
-6078 6188 0
-6076 6186 0
-6075 6184 0
-6052 6190 0
-6052 -6080 6188 0
-6052 -6078 6186 0
-6052 -6076 6184 0
-6052 -6075 6182 0
-6050 6188 0
-6050 -6080 6186 0
-6050 -6078 6184 0
-6050 -6076 6182 0
-6050 -6075 6180 0
-6048 6186 0
-6048 -6080 6184 0
-6048 -6078 6182 0
-6048 -6076 6180 0
-6048 -6075 6178 0
-6047 6184 0
-6047 -6080 6182 0
-6047 -6078 6180 0
-6047 -6076 6178 0
-6047 -6075 6177 0
c ((aux1230 + aux1233 - aux1243)<=0)
6082 -6192 0
6083 -6193 0
6085 -6195 0
6087 -6197 0
6061 -6192 0
6061 6082 -6193 0
6061 6083 -6195 0
6061 6085 -6197 0
6061 6087 -6199 0
6062 -6193 0
6062 6082 -6195 0
6062 6083 -6197 0
6062 6085 -6199 0
6062 6087 -6201 0
6064 -6195 0
6064 6082 -6197 0
6064 6083 -6199 0
6064 6085 -6201 0
6064 6087 -6203 0
6066 -6197 0
6066 6082 -6199 0
6066 6083 -6201 0
6066 6085 -6203 0
6066 6087 -6205 0
c (0<=(aux1230 + aux1233 - aux1243))
-6087 6205 0
-6085 6203 0
-6083 6201 0
-6082 6199 0
-6066 6205 0
-6066 -6087 6203 0
-6066 -6085 6201 0
-6066 -6083 6199 0
-6066 -6082 6197 0
-6064 6203 0
-6064 -6087 6201 0
-6064 -6085 6199 0
-6064 -6083 6197 0
-6064 -6082 6195 0
-6062 6201 0
-6062 -6087 6199 0
-6062 -6085 6197 0
-6062 -6083 6195 0
-6062 -6082 6193 0
-6061 6199 0
-6061 -6087 6197 0
-6061 -6085 6195 0
-6061 -6083 6193 0
-6061 -6082 6192 0
c ((aux1231 + aux1236 - aux1244)<=0)
6103 -6207 0
6104 -6208 0
6106 -6210 0
6108 -6212 0
6068 -6207 0
6068 6103 -6208 0
6068 6104 -6210 0
6068 6106 -6212 0
6068 6108 -6214 0
6069 -6208 0
6069 6103 -6210 0
6069 6104 -6212 0
6069 6106 -6214 0
6069 6108 -6216 0
6071 -6210 0
6071 6103 -6212 0
6071 6104 -6214 0
6071 6106 -6216 0
6071 6108 -6218 0
6073 -6212 0
6073 6103 -6214 0
6073 6104 -6216 0
6073 6106 -6218 0
6073 6108 -6220 0
c (0<=(aux1231 + aux1236 - aux1244))
-6108 6220 0
-6106 6218 0
-6104 6216 0
-6103 6214 0
-6073 6220 0
-6073 -6108 6218 0
-6073 -6106 6216 0
-6073 -6104 6214 0
-6073 -6103 6212 0
-6071 6218 0
-6071 -6108 6216 0
-6071 -6106 6214 0
-6071 -6104 6212 0
-6071 -6103 6210 0
-6069 6216 0
-6069 -6108 6214 0
-6069 -6106 6212 0
-6069 -6104 6210 0
-6069 -6103 6208 0
-6068 6214 0
-6068 -6108 6212 0
-6068 -6106 6210 0
-6068 -6104 6208 0
-6068 -6103 6207 0
c ((aux1224 + aux1234 - aux1245)<=0)
6089 -6222 0
6090 -6223 0
6092 -6225 0
6094 -6227 0
6019 -6222 0
6019 6089 -6223 0
6019 6090 -6225 0
6019 6092 -6227 0
6019 6094 -6229 0
6020 -6223 0
6020 6089 -6225 0
6020 6090 -6227 0
6020 6092 -6229 0
6020 6094 -6231 0
6022 -6225 0
6022 6089 -6227 0
6022 6090 -6229 0
6022 6092 -6231 0
6022 6094 -6233 0
6024 -6227 0
6024 6089 -6229 0
6024 6090 -6231 0
6024 6092 -6233 0
6024 6094 -6235 0
c (0<=(aux1224 + aux1234 - aux1245))
-6094 6235 0
-6092 6233 0
-6090 6231 0
-6089 6229 0
-6024 6235 0
-6024 -6094 6233 0
-6024 -6092 6231 0
-6024 -6090 6229 0
-6024 -6089 6227 0
-6022 6233 0
-6022 -6094 6231 0
-6022 -6092 6229 0
-6022 -6090 6227 0
-6022 -6089 6225 0
-6020 6231 0
-6020 -6094 6229 0
-6020 -6092 6227 0
-6020 -6090 6225 0
-6020 -6089 6223 0
-6019 6229 0
-6019 -6094 6227 0
-6019 -6092 6225 0
-6019 -6090 6223 0
-6019 -6089 6222 0
c ((aux1241 + aux1245 - aux1246)<=0)
6222 -6237 0
6223 -6238 0
6225 -6240 0
6227 -6242 0
6229 -6244 0
6231 -6246 0
6233 -6248 0
6235 -6250 0
6162 -6237 0
6162 6222 -6238 0
6162 6223 -6240 0
6162 6225 -6242 0
6162 6227 -6244 0
6162 6229 -6246 0
6162 6231 -6248 0
6162 6233 -6250 0
6162 6235 -6252 0
6163 -6238 0
6163 6222 -6240 0
6163 6223 -6242 0
6163 6225 -6244 0
6163 6227 -6246 0
6163 6229 -6248 0
6163 6231 -6250 0
6163 6233 -6252 0
6163 6235 -6254 0
6165 -6240 0
6165 6222 -6242 0
6165 6223 -6244 0
6165 6225 -6246 0
6165 6227 -6248 0
6165 6229 -6250 0
6165 6231 -6252 0
6165 6233 -6254 0
6165 6235 -6256 0
6167 -6242 0
6167 6222 -6244 0
6167 6223 -6246 0
6167 6225 -6248 0
6167 6227 -6250 0
6167 6229 -6252 0
6167 6231 -6254 0
6167 6233 -6256 0
6167 6235 -6258 0
6169 -6244 0
6169 6222 -6246 0
6169 6223 -6248 0
6169 6225 -6250 0
6169 6227 -6252 0
6169 6229 -6254 0
6169 6231 -6256 0
6169 6233 -6258 0
6169 6235 -6260 0
6171 -6246 0
6171 6222 -6248 0
6171 6223 -6250 0
6171 6225 -6252 0
6171 6227 -6254 0
6171 6229 -6256 0
6171 6231 -6258 0
6171 6233 -6260 0
6171 6235 -6262 0
6173 -6248 0
6173 6222 -6250 0
6173 6223 -6252 0
6173 6225 -6254 0
6173 6227 -6256 0
6173 6229 -6258 0
6173 6231 -6260 0
6173 6233 -6262 0
6173 6235 -6264 0
6175 -6250 0
6175 6222 -6252 0
6175 6223 -6254 0
6175 6225 -6256 0
6175 6227 -6258 0
6175 6229 -6260 0
6175 6231 -6262 0
6175 6233 -6264 0
6175 6235 -6266 0
c (0<=(aux1241 + aux1245 - aux1246))
-6235 6266 0
-6233 6264 0
-6231 6262 0
-6229 6260 0
-6227 6258 0
-6225 6256 0
-6223 6254 0
-6222 6252 0
-6175 6266 0
-6175 -6235 6264 0
-6175 -6233 6262 0
-6175 -6231 6260 0
-6175 -6229 6258 0
-6175 -6227 6256 0
-6175 -6225 6254 0
-6175 -6223 6252 0
-6175 -6222 6250 0
-6173 6264 0
-6173 -6235 6262 0
-6173 -6233 6260 0
-6173 -6231 6258 0
-6173 -6229 6256 0
-6173 -6227 6254 0
-6173 -6225 6252 0
-6173 -6223 6250 0
-6173 -6222 6248 0
-6171 6262 0
-6171 -6235 6260 0
-6171 -6233 6258 0
-6171 -6231 6256 0
-6171 -6229 6254 0
-6171 -6227 6252 0
-6171 -6225 6250 0
-6171 -6223 6248 0
-6171 -6222 6246 0
-6169 6260 0
-6169 -6235 6258 0
-6169 -6233 6256 0
-6169 -6231 6254 0
-6169 -6229 6252 0
-6169 -6227 6250 0
-6169 -6225 6248 0
-6169 -6223 6246 0
-6169 -6222 6244 0
-6167 6258 0
-6167 -6235 6256 0
-6167 -6233 6254 0
-6167 -6231 6252 0
-6167 -6229 6250 0
-6167 -6227 6248 0
-6167 -6225 6246 0
-6167 -6223 6244 0
-6167 -6222 6242 0
-6165 6256 0
-6165 -6235 6254 0
-6165 -6233 6252 0
-6165 -6231 6250 0
-6165 -6229 6248 0
-6165 -6227 6246 0
-6165 -6225 6244 0
-6165 -6223 6242 0
-6165 -6222 6240 0
-6163 6254 0
-6163 -6235 6252 0
-6163 -6233 6250 0
-6163 -6231 6248 0
-6163 -6229 6246 0
-6163 -6227 6244 0
-6163 -6225 6242 0
-6163 -6223 6240 0
-6163 -6222 6238 0
-6162 6252 0
-6162 -6235 6250 0
-6162 -6233 6248 0
-6162 -6231 6246 0
-6162 -6229 6244 0
-6162 -6227 6242 0
-6162 -6225 6240 0
-6162 -6223 6238 0
-6162 -6222 6237 0
c ((aux1238 + aux1239 - aux1247)<=0)
6132 -6268 0
6133 -6269 0
6135 -6271 0
6137 -6273 0
6139 -6275 0
6141 -6277 0
6143 -6279 0
6145 -6281 0
6117 -6268 0
6117 6132 -6269 0
6117 6133 -6271 0
6117 6135 -6273 0
6117 6137 -6275 0
6117 6139 -6277 0
6117 6141 -6279 0
6117 6143 -6281 0
6117 6145 -6283 0
6118 -6269 0
6118 6132 -6271 0
6118 6133 -6273 0
6118 6135 -6275 0
6118 6137 -6277 0
6118 6139 -6279 0
6118 6141 -6281 0
6118 6143 -6283 0
6118 6145 -6285 0
6120 -6271 0
6120 6132 -6273 0
6120 6133 -6275 0
6120 6135 -6277 0
6120 6137 -6279 0
6120 6139 -6281 0
6120 6141 -6283 0
6120 6143 -6285 0
6120 6145 -6287 0
6122 -6273 0
6122 6132 -6275 0
6122 6133 -6277 0
6122 6135 -6279 0
6122 6137 -6281 0
6122 6139 -6283 0
6122 6141 -6285 0
6122 6143 -6287 0
6122 6145 -6289 0
6124 -6275 0
6124 6132 -6277 0
6124 6133 -6279 0
6124 6135 -6281 0
6124 6137 -6283 0
6124 6139 -6285 0
6124 6141 -6287 0
6124 6143 -6289 0
6124 6145 -6291 0
6126 -6277 0
6126 6132 -6279 0
6126 6133 -6281 0
6126 6135 -6283 0
6126 6137 -6285 0
6126 6139 -6287 0
6126 6141 -6289 0
6126 6143 -6291 0
6126 6145 -6293 0
6128 -6279 0
6128 6132 -6281 0
6128 6133 -6283 0
6128 6135 -6285 0
6128 6137 -6287 0
6128 6139 -6289 0
6128 6141 -6291 0
6128 6143 -6293 0
6128 6145 -6295 0
6130 -6281 0
6130 6132 -6283 0
6130 6133 -6285 0
6130 6135 -6287 0
6130 6137 -6289 0
6130 6139 -6291 0
6130 6141 -6293 0
6130 6143 -6295 0
6130 6145 -6297 0
c (0<=(aux1238 + aux1239 - aux1247))
-6145 6297 0
-6143 6295 0
-6141 6293 0
-6139 6291 0
-6137 6289 0
-6135 6287 0
-6133 6285 0
-6132 6283 0
-6130 6297 0
-6130 -6145 6295 0
-6130 -6143 6293 0
-6130 -6141 6291 0
-6130 -6139 6289 0
-6130 -6137 6287 0
-6130 -6135 6285 0
-6130 -6133 6283 0
-6130 -6132 6281 0
-6128 6295 0
-6128 -6145 6293 0
-6128 -6143 6291 0
-6128 -6141 6289 0
-6128 -6139 6287 0
-6128 -6137 6285 0
-6128 -6135 6283 0
-6128 -6133 6281 0
-6128 -6132 6279 0
-6126 6293 0
-6126 -6145 6291 0
-6126 -6143 6289 0
-6126 -6141 6287 0
-6126 -6139 6285 0
-6126 -6137 6283 0
-6126 -6135 6281 0
-6126 -6133 6279 0
-6126 -6132 6277 0
-6124 6291 0
-6124 -6145 6289 0
-6124 -6143 6287 0
-6124 -6141 6285 0
-6124 -6139 6283 0
-6124 -6137 6281 0
-6124 -6135 6279 0
-6124 -6133 6277 0
-6124 -6132 6275 0
-6122 6289 0
-6122 -6145 6287 0
-6122 -6143 6285 0
-6122 -6141 6283 0
-6122 -6139 6281 0
-6122 -6137 6279 0
-6122 -6135 6277 0
-6122 -6133 6275 0
-6122 -6132 6273 0
-6120 6287 0
-6120 -6145 6285 0
-6120 -6143 6283 0
-6120 -6141 6281 0
-6120 -6139 6279 0
-6120 -6137 6277 0
-6120 -6135 6275 0
-6120 -6133 6273 0
-6120 -6132 6271 0
-6118 6285 0
-6118 -6145 6283 0
-6118 -6143 6281 0
-6118 -6141 6279 0
-6118 -6139 6277 0
-6118 -6137 6275 0
-6118 -6135 6273 0
-6118 -6133 6271 0
-6118 -6132 6269 0
-6117 6283 0
-6117 -6145 6281 0
-6117 -6143 6279 0
-6117 -6141 6277 0
-6117 -6139 6275 0
-6117 -6137 6273 0
-6117 -6135 6271 0
-6117 -6133 6269 0
-6117 -6132 6268 0
c ((aux1240 + aux1242 - aux1248)<=0)
6177 -6299 0
6178 -6300 0
6180 -6302 0
6182 -6304 0
6184 -6306 0
6186 -6308 0
6188 -6310 0
6190 -6312 0
6147 -6299 0
6147 6177 -6300 0
6147 6178 -6302 0
6147 6180 -6304 0
6147 6182 -6306 0
6147 6184 -6308 0
6147 6186 -6310 0
6147 6188 -6312 0
6147 6190 -6314 0
6148 -6300 0
6148 6177 -6302 0
6148 6178 -6304 0
6148 6180 -6306 0
6148 6182 -6308 0
6148 6184 -6310 0
6148 6186 -6312 0
6148 6188 -6314 0
6148 6190 -6316 0
6150 -6302 0
6150 6177 -6304 0
6150 6178 -6306 0
6150 6180 -6308 0
6150 6182 -6310 0
6150 6184 -6312 0
6150 6186 -6314 0
6150 6188 -6316 0
6150 6190 -6318 0
6152 -6304 0
6152 6177 -6306 0
6152 6178 -6308 0
6152 6180 -6310 0
6152 6182 -6312 0
6152 6184 -6314 0
6152 6186 -6316 0
6152 6188 -6318 0
6152 6190 -6320 0
6154 -6306 0
6154 6177 -6308 0
6154 6178 -6310 0
6154 6180 -6312 0
6154 6182 -6314 0
6154 6184 -6316 0
6154 6186 -6318 0
6154 6188 -6320 0
6154 6190 -6322 0
6156 -6308 0
6156 6177 -6310 0
6156 6178 -6312 0
6156 6180 -6314 0
6156 6182 -6316 0
6156 6184 -6318 0
6156 6186 -6320 0
6156 6188 -6322 0
6156 6190 -6324 0
6158 -6310 0
6158 6177 -6312 0
6158 6178 -6314 0
6158 6180 -6316 0
6158 6182 -6318 0
6158 6184 -6320 0
6158 6186 -6322 0
6158 6188 -6324 0
6158 6190 -6326 0
6160 -6312 0
6160 6177 -6314 0
6160 6178 -6316 0
6160 6180 -6318 0
6160 6182 -6320 0
6160 6184 -6322 0
6160 6186 -6324 0
6160 6188 -6326 0
6160 6190 -6328 0
c (0<=(aux1240 + aux1242 - aux1248))
-6190 6328 0
-6188 6326 0
-6186 6324 0
-6184 6322 0
-6182 6320 0
-6180 6318 0
-6178 6316 0
-6177 6314 0
-6160 6328 0
-6160 -6190 6326 0
-6160 -6188 6324 0
-6160 -6186 6322 0
-6160 -6184 6320 0
-6160 -6182 6318 0
-6160 -6180 6316 0
-6160 -6178 6314 0
-6160 -6177 6312 0
-6158 6326 0
-6158 -6190 6324 0
-6158 -6188 6322 0
-6158 -6186 6320 0
-6158 -6184 6318 0
-6158 -6182 6316 0
-6158 -6180 6314 0
-6158 -6178 6312 0
-6158 -6177 6310 0
-6156 6324 0
-6156 -6190 6322 0
-6156 -6188 6320 0
-6156 -6186 6318 0
-6156 -6184 6316 0
-6156 -6182 6314 0
-6156 -6180 6312 0
-6156 -6178 6310 0
-6156 -6177 6308 0
-6154 6322 0
-6154 -6190 6320 0
-6154 -6188 6318 0
-6154 -6186 6316 0
-6154 -6184 6314 0
-6154 -6182 6312 0
-6154 -6180 6310 0
-6154 -6178 6308 0
-6154 -6177 6306 0
-6152 6320 0
-6152 -6190 6318 0
-6152 -6188 6316 0
-6152 -6186 6314 0
-6152 -6184 6312 0
-6152 -6182 6310 0
-6152 -6180 6308 0
-6152 -6178 6306 0
-6152 -6177 6304 0
-6150 6318 0
-6150 -6190 6316 0
-6150 -6188 6314 0
-6150 -6186 6312 0
-6150 -6184 6310 0
-6150 -6182 6308 0
-6150 -6180 6306 0
-6150 -6178 6304 0
-6150 -6177 6302 0
-6148 6316 0
-6148 -6190 6314 0
-6148 -6188 6312 0
-6148 -6186 6310 0
-6148 -6184 6308 0
-6148 -6182 6306 0
-6148 -6180 6304 0
-6148 -6178 6302 0
-6148 -6177 6300 0
-6147 6314 0
-6147 -6190 6312 0
-6147 -6188 6310 0
-6147 -6186 6308 0
-6147 -6184 6306 0
-6147 -6182 6304 0
-6147 -6180 6302 0
-6147 -6178 6300 0
-6147 -6177 6299 0
c ((aux1243 + aux1244 - aux1249)<=0)
6207 -6330 0
6208 -6331 0
6210 -6333 0
6212 -6335 0
6214 -6337 0
6216 -6339 0
6218 -6341 0
6220 -6343 0
6192 -6330 0
6192 6207 -6331 0
6192 6208 -6333 0
6192 6210 -6335 0
6192 6212 -6337 0
6192 6214 -6339 0
6192 6216 -6341 0
6192 6218 -6343 0
6192 6220 -6345 0
6193 -6331 0
6193 6207 -6333 0
6193 6208 -6335 0
6193 6210 -6337 0
6193 6212 -6339 0
6193 6214 -6341 0
6193 6216 -6343 0
6193 6218 -6345 0
6193 6220 -6347 0
6195 -6333 0
6195 6207 -6335 0
6195 6208 -6337 0
6195 6210 -6339 0
6195 6212 -6341 0
6195 6214 -6343 0
6195 6216 -6345 0
6195 6218 -6347 0
6195 6220 -6349 0
6197 -6335 0
6197 6207 -6337 0
6197 6208 -6339 0
6197 6210 -6341 0
6197 6212 -6343 0
6197 6214 -6345 0
6197 6216 -6347 0
6197 6218 -6349 0
6197 6220 -6351 0
6199 -6337 0
6199 6207 -6339 0
6199 6208 -6341 0
6199 6210 -6343 0
6199 6212 -6345 0
6199 6214 -6347 0
6199 6216 -6349 0
6199 6218 -6351 0
6199 6220 -6353 0
6201 -6339 0
6201 6207 -6341 0
6201 6208 -6343 0
6201 6210 -6345 0
6201 6212 -6347 0
6201 6214 -6349 0
6201 6216 -6351 0
6201 6218 -6353 0
6201 6220 -6355 0
6203 -6341 0
6203 6207 -6343 0
6203 6208 -6345 0
6203 6210 -6347 0
6203 6212 -6349 0
6203 6214 -6351 0
6203 6216 -6353 0
6203 6218 -6355 0
6203 6220 -6357 0
6205 -6343 0
6205 6207 -6345 0
6205 6208 -6347 0
6205 6210 -6349 0
6205 6212 -6351 0
6205 6214 -6353 0
6205 6216 -6355 0
6205 6218 -6357 0
6205 6220 -6359 0
c (0<=(aux1243 + aux1244 - aux1249))
-6220 6359 0
-6218 6357 0
-6216 6355 0
-6214 6353 0
-6212 6351 0
-6210 6349 0
-6208 6347 0
-6207 6345 0
-6205 6359 0
-6205 -6220 6357 0
-6205 -6218 6355 0
-6205 -6216 6353 0
-6205 -6214 6351 0
-6205 -6212 6349 0
-6205 -6210 6347 0
-6205 -6208 6345 0
-6205 -6207 6343 0
-6203 6357 0
-6203 -6220 6355 0
-6203 -6218 6353 0
-6203 -6216 6351 0
-6203 -6214 6349 0
-6203 -6212 6347 0
-6203 -6210 6345 0
-6203 -6208 6343 0
-6203 -6207 6341 0
-6201 6355 0
-6201 -6220 6353 0
-6201 -6218 6351 0
-6201 -6216 6349 0
-6201 -6214 6347 0
-6201 -6212 6345 0
-6201 -6210 6343 0
-6201 -6208 6341 0
-6201 -6207 6339 0
-6199 6353 0
-6199 -6220 6351 0
-6199 -6218 6349 0
-6199 -6216 6347 0
-6199 -6214 6345 0
-6199 -6212 6343 0
-6199 -6210 6341 0
-6199 -6208 6339 0
-6199 -6207 6337 0
-6197 6351 0
-6197 -6220 6349 0
-6197 -6218 6347 0
-6197 -6216 6345 0
-6197 -6214 6343 0
-6197 -6212 6341 0
-6197 -6210 6339 0
-6197 -6208 6337 0
-6197 -6207 6335 0
-6195 6349 0
-6195 -6220 6347 0
-6195 -6218 6345 0
-6195 -6216 6343 0
-6195 -6214 6341 0
-6195 -6212 6339 0
-6195 -6210 6337 0
-6195 -6208 6335 0
-6195 -6207 6333 0
-6193 6347 0
-6193 -6220 6345 0
-6193 -6218 6343 0
-6193 -6216 6341 0
-6193 -6214 6339 0
-6193 -6212 6337 0
-6193 -6210 6335 0
-6193 -6208 6333 0
-6193 -6207 6331 0
-6192 6345 0
-6192 -6220 6343 0
-6192 -6218 6341 0
-6192 -6216 6339 0
-6192 -6214 6337 0
-6192 -6212 6335 0
-6192 -6210 6333 0
-6192 -6208 6331 0
-6192 -6207 6330 0
c ((aux1247 + aux1249 - aux1250)<=0)
6330 -6361 0
6331 -6362 0
6333 -6364 0
6335 -6366 0
6337 -6368 0
6339 -6370 0
6341 -6372 0
6343 -6374 0
6345 -6376 0
6347 -6378 0
6349 -6380 0
6351 -6382 0
6353 -6384 0
6355 -6386 0
6357 -6388 0
6359 -6390 0
6268 -6361 0
6268 6330 -6362 0
6268 6331 -6364 0
6268 6333 -6366 0
6268 6335 -6368 0
6268 6337 -6370 0
6268 6339 -6372 0
6268 6341 -6374 0
6268 6343 -6376 0
6268 6345 -6378 0
6268 6347 -6380 0
6268 6349 -6382 0
6268 6351 -6384 0
6268 6353 -6386 0
6268 6355 -6388 0
6268 6357 -6390 0
6268 6359 -6392 0
6269 -6362 0
6269 6330 -6364 0
6269 6331 -6366 0
6269 6333 -6368 0
6269 6335 -6370 0
6269 6337 -6372 0
6269 6339 -6374 0
6269 6341 -6376 0
6269 6343 -6378 0
6269 6345 -6380 0
6269 6347 -6382 0
6269 6349 -6384 0
6269 6351 -6386 0
6269 6353 -6388 0
6269 6355 -6390 0
6269 6357 -6392 0
6269 6359 -6394 0
6271 -6364 0
6271 6330 -6366 0
6271 6331 -6368 0
6271 6333 -6370 0
6271 6335 -6372 0
6271 6337 -6374 0
6271 6339 -6376 0
6271 6341 -6378 0
6271 6343 -6380 0
6271 6345 -6382 0
6271 6347 -6384 0
6271 6349 -6386 0
6271 6351 -6388 0
6271 6353 -6390 0
6271 6355 -6392 0
6271 6357 -6394 0
6271 6359 -6396 0
6273 -6366 0
6273 6330 -6368 0
6273 6331 -6370 0
6273 6333 -6372 0
6273 6335 -6374 0
6273 6337 -6376 0
6273 6339 -6378 0
6273 6341 -6380 0
6273 6343 -6382 0
6273 6345 -6384 0
6273 6347 -6386 0
6273 6349 -6388 0
6273 6351 -6390 0
6273 6353 -6392 0
6273 6355 -6394 0
6273 6357 -6396 0
6273 6359 -6398 0
6275 -6368 0
6275 6330 -6370 0
6275 6331 -6372 0
6275 6333 -6374 0
6275 6335 -6376 0
6275 6337 -6378 0
6275 6339 -6380 0
6275 6341 -6382 0
6275 6343 -6384 0
6275 6345 -6386 0
6275 6347 -6388 0
6275 6349 -6390 0
6275 6351 -6392 0
6275 6353 -6394 0
6275 6355 -6396 0
6275 6357 -6398 0
6275 6359 -6400 0
6277 -6370 0
6277 6330 -6372 0
6277 6331 -6374 0
6277 6333 -6376 0
6277 6335 -6378 0
6277 6337 -6380 0
6277 6339 -6382 0
6277 6341 -6384 0
6277 6343 -6386 0
6277 6345 -6388 0
6277 6347 -6390 0
6277 6349 -6392 0
6277 6351 -6394 0
6277 6353 -6396 0
6277 6355 -6398 0
6277 6357 -6400 0
6277 6359 -6402 0
6279 -6372 0
6279 6330 -6374 0
6279 6331 -6376 0
6279 6333 -6378 0
6279 6335 -6380 0
6279 6337 -6382 0
6279 6339 -6384 0
6279 6341 -6386 0
6279 6343 -6388 0
6279 6345 -6390 0
6279 6347 -6392 0
6279 6349 -6394 0
6279 6351 -6396 0
6279 6353 -6398 0
6279 6355 -6400 0
6279 6357 -6402 0
6279 6359 -6404 0
6281 -6374 0
6281 6330 -6376 0
6281 6331 -6378 0
6281 6333 -6380 0
6281 6335 -6382 0
6281 6337 -6384 0
6281 6339 -6386 0
6281 6341 -6388 0
6281 6343 -6390 0
6281 6345 -6392 0
6281 6347 -6394 0
6281 6349 -6396 0
6281 6351 -6398 0
6281 6353 -6400 0
6281 6355 -6402 0
6281 6357 -6404 0
6281 6359 -6406 0
6283 -6376 0
6283 6330 -6378 0
6283 6331 -6380 0
6283 6333 -6382 0
6283 6335 -6384 0
6283 6337 -6386 0
6283 6339 -6388 0
6283 6341 -6390 0
6283 6343 -6392 0
6283 6345 -6394 0
6283 6347 -6396 0
6283 6349 -6398 0
6283 6351 -6400 0
6283 6353 -6402 0
6283 6355 -6404 0
6283 6357 -6406 0
6283 6359 -6408 0
6285 -6378 0
6285 6330 -6380 0
6285 6331 -6382 0
6285 6333 -6384 0
6285 6335 -6386 0
6285 6337 -6388 0
6285 6339 -6390 0
6285 6341 -6392 0
6285 6343 -6394 0
6285 6345 -6396 0
6285 6347 -6398 0
6285 6349 -6400 0
6285 6351 -6402 0
6285 6353 -6404 0
6285 6355 -6406 0
6285 6357 -6408 0
6285 6359 -6410 0
6287 -6380 0
6287 6330 -6382 0
6287 6331 -6384 0
6287 6333 -6386 0
6287 6335 -6388 0
6287 6337 -6390 0
6287 6339 -6392 0
6287 6341 -6394 0
6287 6343 -6396 0
6287 6345 -6398 0
6287 6347 -6400 0
6287 6349 -6402 0
6287 6351 -6404 0
6287 6353 -6406 0
6287 6355 -6408 0
6287 6357 -6410 0
6287 6359 -6412 0
6289 -6382 0
6289 6330 -6384 0
6289 6331 -6386 0
6289 6333 -6388 0
6289 6335 -6390 0
6289 6337 -6392 0
6289 6339 -6394 0
6289 6341 -6396 0
6289 6343 -6398 0
6289 6345 -6400 0
6289 6347 -6402 0
6289 6349 -6404 0
6289 6351 -6406 0
6289 6353 -6408 0
6289 6355 -6410 0
6289 6357 -6412 0
6289 6359 -6414 0
6291 -6384 0
6291 6330 -6386 0
6291 6331 -6388 0
6291 6333 -6390 0
6291 6335 -6392 0
6291 6337 -6394 0
6291 6339 -6396 0
6291 6341 -6398 0
6291 6343 -6400 0
6291 6345 -6402 0
6291 6347 -6404 0
6291 6349 -6406 0
6291 6351 -6408 0
6291 6353 -6410 0
6291 6355 -6412 0
6291 6357 -6414 0
6291 6359 -6416 0
6293 -6386 0
6293 6330 -6388 0
6293 6331 -6390 0
6293 6333 -6392 0
6293 6335 -6394 0
6293 6337 -6396 0
6293 6339 -6398 0
6293 6341 -6400 0
6293 6343 -6402 0
6293 6345 -6404 0
6293 6347 -6406 0
6293 6349 -6408 0
6293 6351 -6410 0
6293 6353 -6412 0
6293 6355 -6414 0
6293 6357 -6416 0
6293 6359 -6418 0
6295 -6388 0
6295 6330 -6390 0
6295 6331 -6392 0
6295 6333 -6394 0
6295 6335 -6396 0
6295 6337 -6398 0
6295 6339 -6400 0
6295 6341 -6402 0
6295 6343 -6404 0
6295 6345 -6406 0
6295 6347 -6408 0
6295 6349 -6410 0
6295 6351 -6412 0
6295 6353 -6414 0
6295 6355 -6416 0
6295 6357 -6418 0
6295 6359 -6420 0
6297 -6390 0
6297 6330 -6392 0
6297 6331 -6394 0
6297 6333 -6396 0
6297 6335 -6398 0
6297 6337 -6400 0
6297 6339 -6402 0
6297 6341 -6404 0
6297 6343 -6406 0
6297 6345 -6408 0
6297 6347 -6410 0
6297 6349 -6412 0
6297 6351 -6414 0
6297 6353 -6416 0
6297 6355 -6418 0
6297 6357 -6420 0
6297 6359 -6422 0
c (0<=(aux1247 + aux1249 - aux1250))
-6359 6422 0
-6357 6420 0
-6355 6418 0
-6353 6416 0
-6351 6414 0
-6349 6412 0
-6347 6410 0
-6345 6408 0
-6343 6406 0
-6341 6404 0
-6339 6402 0
-6337 6400 0
-6335 6398 0
-6333 6396 0
-6331 6394 0
-6330 6392 0
-6297 6422 0
-6297 -6359 6420 0
-6297 -6357 6418 0
-6297 -6355 6416 0
-6297 -6353 6414 0
-6297 -6351 6412 0
-6297 -6349 6410 0
-6297 -6347 6408 0
-6297 -6345 6406 0
-6297 -6343 6404 0
-6297 -6341 6402 0
-6297 -6339 6400 0
-6297 -6337 6398 0
-6297 -6335 6396 0
-6297 -6333 6394 0
-6297 -6331 6392 0
-6297 -6330 6390 0
-6295 6420 0
-6295 -6359 6418 0
-6295 -6357 6416 0
-6295 -6355 6414 0
-6295 -6353 6412 0
-6295 -6351 6410 0
-6295 -6349 6408 0
-6295 -6347 6406 0
-6295 -6345 6404 0
-6295 -6343 6402 0
-6295 -6341 6400 0
-6295 -6339 6398 0
-6295 -6337 6396 0
-6295 -6335 6394 0
-6295 -6333 6392 0
-6295 -6331 6390 0
-6295 -6330 6388 0
-6293 6418 0
-6293 -6359 6416 0
-6293 -6357 6414 0
-6293 -6355 6412 0
-6293 -6353 6410 0
-6293 -6351 6408 0
-6293 -6349 6406 0
-6293 -6347 6404 0
-6293 -6345 6402 0
-6293 -6343 6400 0
-6293 -6341 6398 0
-6293 -6339 6396 0
-6293 -6337 6394 0
-6293 -6335 6392 0
-6293 -6333 6390 0
-6293 -6331 6388 0
-6293 -6330 6386 0
-6291 6416 0
-6291 -6359 6414 0
-6291 -6357 6412 0
-6291 -6355 6410 0
-6291 -6353 6408 0
-6291 -6351 6406 0
-6291 -6349 6404 0
-6291 -6347 6402 0
-6291 -6345 6400 0
-6291 -6343 6398 0
-6291 -6341 6396 0
-6291 -6339 6394 0
-6291 -6337 6392 0
-6291 -6335 6390 0
-6291 -6333 6388 0
-6291 -6331 6386 0
-6291 -6330 6384 0
-6289 6414 0
-6289 -6359 6412 0
-6289 -6357 6410 0
-6289 -6355 6408 0
-6289 -6353 6406 0
-6289 -6351 6404 0
-6289 -6349 6402 0
-6289 -6347 6400 0
-6289 -6345 6398 0
-6289 -6343 6396 0
-6289 -6341 6394 0
-6289 -6339 6392 0
-6289 -6337 6390 0
-6289 -6335 6388 0
-6289 -6333 6386 0
-6289 -6331 6384 0
-6289 -6330 6382 0
-6287 6412 0
-6287 -6359 6410 0
-6287 -6357 6408 0
-6287 -6355 6406 0
-6287 -6353 6404 0
-6287 -6351 6402 0
-6287 -6349 6400 0
-6287 -6347 6398 0
-6287 -6345 6396 0
-6287 -6343 6394 0
-6287 -6341 6392 0
-6287 -6339 6390 0
-6287 -6337 6388 0
-6287 -6335 6386 0
-6287 -6333 6384 0
-6287 -6331 6382 0
-6287 -6330 6380 0
-6285 6410 0
-6285 -6359 6408 0
-6285 -6357 6406 0
-6285 -6355 6404 0
-6285 -6353 6402 0
-6285 -6351 6400 0
-6285 -6349 6398 0
-6285 -6347 6396 0
-6285 -6345 6394 0
-6285 -6343 6392 0
-6285 -6341 6390 0
-6285 -6339 6388 0
-6285 -6337 6386 0
-6285 -6335 6384 0
-6285 -6333 6382 0
-6285 -6331 6380 0
-6285 -6330 6378 0
-6283 6408 0
-6283 -6359 6406 0
-6283 -6357 6404 0
-6283 -6355 6402 0
-6283 -6353 6400 0
-6283 -6351 6398 0
-6283 -6349 6396 0
-6283 -6347 6394 0
-6283 -6345 6392 0
-6283 -6343 6390 0
-6283 -6341 6388 0
-6283 -6339 6386 0
-6283 -6337 6384 0
-6283 -6335 6382 0
-6283 -6333 6380 0
-6283 -6331 6378 0
-6283 -6330 6376 0
-6281 6406 0
-6281 -6359 6404 0
-6281 -6357 6402 0
-6281 -6355 6400 0
-6281 -6353 6398 0
-6281 -6351 6396 0
-6281 -6349 6394 0
-6281 -6347 6392 0
-6281 -6345 6390 0
-6281 -6343 6388 0
-6281 -6341 6386 0
-6281 -6339 6384 0
-6281 -6337 6382 0
-6281 -6335 6380 0
-6281 -6333 6378 0
-6281 -6331 6376 0
-6281 -6330 6374 0
-6279 6404 0
-6279 -6359 6402 0
-6279 -6357 6400 0
-6279 -6355 6398 0
-6279 -6353 6396 0
-6279 -6351 6394 0
-6279 -6349 6392 0
-6279 -6347 6390 0
-6279 -6345 6388 0
-6279 -6343 6386 0
-6279 -6341 6384 0
-6279 -6339 6382 0
-6279 -6337 6380 0
-6279 -6335 6378 0
-6279 -6333 6376 0
-6279 -6331 6374 0
-6279 -6330 6372 0
-6277 6402 0
-6277 -6359 6400 0
-6277 -6357 6398 0
-6277 -6355 6396 0
-6277 -6353 6394 0
-6277 -6351 6392 0
-6277 -6349 6390 0
-6277 -6347 6388 0
-6277 -6345 6386 0
-6277 -6343 6384 0
-6277 -6341 6382 0
-6277 -6339 6380 0
-6277 -6337 6378 0
-6277 -6335 6376 0
-6277 -6333 6374 0
-6277 -6331 6372 0
-6277 -6330 6370 0
-6275 6400 0
-6275 -6359 6398 0
-6275 -6357 6396 0
-6275 -6355 6394 0
-6275 -6353 6392 0
-6275 -6351 6390 0
-6275 -6349 6388 0
-6275 -6347 6386 0
-6275 -6345 6384 0
-6275 -6343 6382 0
-6275 -6341 6380 0
-6275 -6339 6378 0
-6275 -6337 6376 0
-6275 -6335 6374 0
-6275 -6333 6372 0
-6275 -6331 6370 0
-6275 -6330 6368 0
-6273 6398 0
-6273 -6359 6396 0
-6273 -6357 6394 0
-6273 -6355 6392 0
-6273 -6353 6390 0
-6273 -6351 6388 0
-6273 -6349 6386 0
-6273 -6347 6384 0
-6273 -6345 6382 0
-6273 -6343 6380 0
-6273 -6341 6378 0
-6273 -6339 6376 0
-6273 -6337 6374 0
-6273 -6335 6372 0
-6273 -6333 6370 0
-6273 -6331 6368 0
-6273 -6330 6366 0
-6271 6396 0
-6271 -6359 6394 0
-6271 -6357 6392 0
-6271 -6355 6390 0
-6271 -6353 6388 0
-6271 -6351 6386 0
-6271 -6349 6384 0
-6271 -6347 6382 0
-6271 -6345 6380 0
-6271 -6343 6378 0
-6271 -6341 6376 0
-6271 -6339 6374 0
-6271 -6337 6372 0
-6271 -6335 6370 0
-6271 -6333 6368 0
-6271 -6331 6366 0
-6271 -6330 6364 0
-6269 6394 0
-6269 -6359 6392 0
-6269 -6357 6390 0
-6269 -6355 6388 0
-6269 -6353 6386 0
-6269 -6351 6384 0
-6269 -6349 6382 0
-6269 -6347 6380 0
-6269 -6345 6378 0
-6269 -6343 6376 0
-6269 -6341 6374 0
-6269 -6339 6372 0
-6269 -6337 6370 0
-6269 -6335 6368 0
-6269 -6333 6366 0
-6269 -6331 6364 0
-6269 -6330 6362 0
-6268 6392 0
-6268 -6359 6390 0
-6268 -6357 6388 0
-6268 -6355 6386 0
-6268 -6353 6384 0
-6268 -6351 6382 0
-6268 -6349 6380 0
-6268 -6347 6378 0
-6268 -6345 6376 0
-6268 -6343 6374 0
-6268 -6341 6372 0
-6268 -6339 6370 0
-6268 -6337 6368 0
-6268 -6335 6366 0
-6268 -6333 6364 0
-6268 -6331 6362 0
-6268 -6330 6361 0
c ((aux1246 + aux1248 - aux1251)<=0)
6299 -6424 0
6300 -6425 0
6302 -6427 0
6304 -6429 0
6306 -6431 0
6308 -6433 0
6310 -6435 0
6312 -6437 0
6314 -6439 0
6316 -6441 0
6318 -6443 0
6320 -6445 0
6322 -6447 0
6324 -6449 0
6326 -6451 0
6328 -6453 0
6237 -6424 0
6237 6299 -6425 0
6237 6300 -6427 0
6237 6302 -6429 0
6237 6304 -6431 0
6237 6306 -6433 0
6237 6308 -6435 0
6237 6310 -6437 0
6237 6312 -6439 0
6237 6314 -6441 0
6237 6316 -6443 0
6237 6318 -6445 0
6237 6320 -6447 0
6237 6322 -6449 0
6237 6324 -6451 0
6237 6326 -6453 0
6237 6328 -6455 0
6238 -6425 0
6238 6299 -6427 0
6238 6300 -6429 0
6238 6302 -6431 0
6238 6304 -6433 0
6238 6306 -6435 0
6238 6308 -6437 0
6238 6310 -6439 0
6238 6312 -6441 0
6238 6314 -6443 0
6238 6316 -6445 0
6238 6318 -6447 0
6238 6320 -6449 0
6238 6322 -6451 0
6238 6324 -6453 0
6238 6326 -6455 0
6238 6328 -6457 0
6240 -6427 0
6240 6299 -6429 0
6240 6300 -6431 0
6240 6302 -6433 0
6240 6304 -6435 0
6240 6306 -6437 0
6240 6308 -6439 0
6240 6310 -6441 0
6240 6312 -6443 0
6240 6314 -6445 0
6240 6316 -6447 0
6240 6318 -6449 0
6240 6320 -6451 0
6240 6322 -6453 0
6240 6324 -6455 0
6240 6326 -6457 0
6240 6328 -6459 0
6242 -6429 0
6242 6299 -6431 0
6242 6300 -6433 0
6242 6302 -6435 0
6242 6304 -6437 0
6242 6306 -6439 0
6242 6308 -6441 0
6242 6310 -6443 0
6242 6312 -6445 0
6242 6314 -6447 0
6242 6316 -6449 0
6242 6318 -6451 0
6242 6320 -6453 0
6242 6322 -6455 0
6242 6324 -6457 0
6242 6326 -6459 0
6242 6328 -6461 0
6244 -6431 0
6244 6299 -6433 0
6244 6300 -6435 0
6244 6302 -6437 0
6244 6304 -6439 0
6244 6306 -6441 0
6244 6308 -6443 0
6244 6310 -6445 0
6244 6312 -6447 0
6244 6314 -6449 0
6244 6316 -6451 0
6244 6318 -6453 0
6244 6320 -6455 0
6244 6322 -6457 0
6244 6324 -6459 0
6244 6326 -6461 0
6244 6328 -6463 0
6246 -6433 0
6246 6299 -6435 0
6246 6300 -6437 0
6246 6302 -6439 0
6246 6304 -6441 0
6246 6306 -6443 0
6246 6308 -6445 0
6246 6310 -6447 0
6246 6312 -6449 0
6246 6314 -6451 0
6246 6316 -6453 0
6246 6318 -6455 0
6246 6320 -6457 0
6246 6322 -6459 0
6246 6324 -6461 0
6246 6326 -6463 0
6246 6328 -6465 0
6248 -6435 0
6248 6299 -6437 0
6248 6300 -6439 0
6248 6302 -6441 0
6248 6304 -6443 0
6248 6306 -6445 0
6248 6308 -6447 0
6248 6310 -6449 0
6248 6312 -6451 0
6248 6314 -6453 0
6248 6316 -6455 0
6248 6318 -6457 0
6248 6320 -6459 0
6248 6322 -6461 0
6248 6324 -6463 0
6248 6326 -6465 0
6248 6328 -6467 0
6250 -6437 0
6250 6299 -6439 0
6250 6300 -6441 0
6250 6302 -6443 0
6250 6304 -6445 0
6250 6306 -6447 0
6250 6308 -6449 0
6250 6310 -6451 0
6250 6312 -6453 0
6250 6314 -6455 0
6250 6316 -6457 0
6250 6318 -6459 0
6250 6320 -6461 0
6250 6322 -6463 0
6250 6324 -6465 0
6250 6326 -6467 0
6250 6328 -6469 0
6252 -6439 0
6252 6299 -6441 0
6252 6300 -6443 0
6252 6302 -6445 0
6252 6304 -6447 0
6252 6306 -6449 0
6252 6308 -6451 0
6252 6310 -6453 0
6252 6312 -6455 0
6252 6314 -6457 0
6252 6316 -6459 0
6252 6318 -6461 0
6252 6320 -6463 0
6252 6322 -6465 0
6252 6324 -6467 0
6252 6326 -6469 0
6252 6328 -6471 0
6254 -6441 0
6254 6299 -6443 0
6254 6300 -6445 0
6254 6302 -6447 0
6254 6304 -6449 0
6254 6306 -6451 0
6254 6308 -6453 0
6254 6310 -6455 0
6254 6312 -6457 0
6254 6314 -6459 0
6254 6316 -6461 0
6254 6318 -6463 0
6254 6320 -6465 0
6254 6322 -6467 0
6254 6324 -6469 0
6254 6326 -6471 0
6254 6328 -6473 0
6256 -6443 0
6256 6299 -6445 0
6256 6300 -6447 0
6256 6302 -6449 0
6256 6304 -6451 0
6256 6306 -6453 0
6256 6308 -6455 0
6256 6310 -6457 0
6256 6312 -6459 0
6256 6314 -6461 0
6256 6316 -6463 0
6256 6318 -6465 0
6256 6320 -6467 0
6256 6322 -6469 0
6256 6324 -6471 0
6256 6326 -6473 0
6256 6328 -6475 0
6258 -6445 0
6258 6299 -6447 0
6258 6300 -6449 0
6258 6302 -6451 0
6258 6304 -6453 0
6258 6306 -6455 0
6258 6308 -6457 0
6258 6310 -6459 0
6258 6312 -6461 0
6258 6314 -6463 0
6258 6316 -6465 0
6258 6318 -6467 0
6258 6320 -6469 0
6258 6322 -6471 0
6258 6324 -6473 0
6258 6326 -6475 0
6258 6328 -6477 0
6260 -6447 0
6260 6299 -6449 0
6260 6300 -6451 0
6260 6302 -6453 0
6260 6304 -6455 0
6260 6306 -6457 0
6260 6308 -6459 0
6260 6310 -6461 0
6260 6312 -6463 0
6260 6314 -6465 0
6260 6316 -6467 0
6260 6318 -6469 0
6260 6320 -6471 0
6260 6322 -6473 0
6260 6324 -6475 0
6260 6326 -6477 0
6260 6328 -6479 0
6262 -6449 0
6262 6299 -6451 0
6262 6300 -6453 0
6262 6302 -6455 0
6262 6304 -6457 0
6262 6306 -6459 0
6262 6308 -6461 0
6262 6310 -6463 0
6262 6312 -6465 0
6262 6314 -6467 0
6262 6316 -6469 0
6262 6318 -6471 0
6262 6320 -6473 0
6262 6322 -6475 0
6262 6324 -6477 0
6262 6326 -6479 0
6262 6328 -6481 0
6264 -6451 0
6264 6299 -6453 0
6264 6300 -6455 0
6264 6302 -6457 0
6264 6304 -6459 0
6264 6306 -6461 0
6264 6308 -6463 0
6264 6310 -6465 0
6264 6312 -6467 0
6264 6314 -6469 0
6264 6316 -6471 0
6264 6318 -6473 0
6264 6320 -6475 0
6264 6322 -6477 0
6264 6324 -6479 0
6264 6326 -6481 0
6264 6328 -6483 0
6266 -6453 0
6266 6299 -6455 0
6266 6300 -6457 0
6266 6302 -6459 0
6266 6304 -6461 0
6266 6306 -6463 0
6266 6308 -6465 0
6266 6310 -6467 0
6266 6312 -6469 0
6266 6314 -6471 0
6266 6316 -6473 0
6266 6318 -6475 0
6266 6320 -6477 0
6266 6322 -6479 0
6266 6324 -6481 0
6266 6326 -6483 0
6266 6328 -6485 0
c (0<=(aux1246 + aux1248 - aux1251))
-6328 6485 0
-6326 6483 0
-6324 6481 0
-6322 6479 0
-6320 6477 0
-6318 6475 0
-6316 6473 0
-6314 6471 0
-6312 6469 0
-6310 6467 0
-6308 6465 0
-6306 6463 0
-6304 6461 0
-6302 6459 0
-6300 6457 0
-6299 6455 0
-6266 6485 0
-6266 -6328 6483 0
-6266 -6326 6481 0
-6266 -6324 6479 0
-6266 -6322 6477 0
-6266 -6320 6475 0
-6266 -6318 6473 0
-6266 -6316 6471 0
-6266 -6314 6469 0
-6266 -6312 6467 0
-6266 -6310 6465 0
-6266 -6308 6463 0
-6266 -6306 6461 0
-6266 -6304 6459 0
-6266 -6302 6457 0
-6266 -6300 6455 0
-6266 -6299 6453 0
-6264 6483 0
-6264 -6328 6481 0
-6264 -6326 6479 0
-6264 -6324 6477 0
-6264 -6322 6475 0
-6264 -6320 6473 0
-6264 -6318 6471 0
-6264 -6316 6469 0
-6264 -6314 6467 0
-6264 -6312 6465 0
-6264 -6310 6463 0
-6264 -6308 6461 0
-6264 -6306 6459 0
-6264 -6304 6457 0
-6264 -6302 6455 0
-6264 -6300 6453 0
-6264 -6299 6451 0
-6262 6481 0
-6262 -6328 6479 0
-6262 -6326 6477 0
-6262 -6324 6475 0
-6262 -6322 6473 0
-6262 -6320 6471 0
-6262 -6318 6469 0
-6262 -6316 6467 0
-6262 -6314 6465 0
-6262 -6312 6463 0
-6262 -6310 6461 0
-6262 -6308 6459 0
-6262 -6306 6457 0
-6262 -6304 6455 0
-6262 -6302 6453 0
-6262 -6300 6451 0
-6262 -6299 6449 0
-6260 6479 0
-6260 -6328 6477 0
-6260 -6326 6475 0
-6260 -6324 6473 0
-6260 -6322 6471 0
-6260 -6320 6469 0
-6260 -6318 6467 0
-6260 -6316 6465 0
-6260 -6314 6463 0
-6260 -6312 6461 0
-6260 -6310 6459 0
-6260 -6308 6457 0
-6260 -6306 6455 0
-6260 -6304 6453 0
-6260 -6302 6451 0
-6260 -6300 6449 0
-6260 -6299 6447 0
-6258 6477 0
-6258 -6328 6475 0
-6258 -6326 6473 0
-6258 -6324 6471 0
-6258 -6322 6469 0
-6258 -6320 6467 0
-6258 -6318 6465 0
-6258 -6316 6463 0
-6258 -6314 6461 0
-6258 -6312 6459 0
-6258 -6310 6457 0
-6258 -6308 6455 0
-6258 -6306 6453 0
-6258 -6304 6451 0
-6258 -6302 6449 0
-6258 -6300 6447 0
-6258 -6299 6445 0
-6256 6475 0
-6256 -6328 6473 0
-6256 -6326 6471 0
-6256 -6324 6469 0
-6256 -6322 6467 0
-6256 -6320 6465 0
-6256 -6318 6463 0
-6256 -6316 6461 0
-6256 -6314 6459 0
-6256 -6312 6457 0
-6256 -6310 6455 0
-6256 -6308 6453 0
-6256 -6306 6451 0
-6256 -6304 6449 0
-6256 -6302 6447 0
-6256 -6300 6445 0
-6256 -6299 6443 0
-6254 6473 0
-6254 -6328 6471 0
-6254 -6326 6469 0
-6254 -6324 6467 0
-6254 -6322 6465 0
-6254 -6320 6463 0
-6254 -6318 6461 0
-6254 -6316 6459 0
-6254 -6314 6457 0
-6254 -6312 6455 0
-6254 -6310 6453 0
-6254 -6308 6451 0
-6254 -6306 6449 0
-6254 -6304 6447 0
-6254 -6302 6445 0
-6254 -6300 6443 0
-6254 -6299 6441 0
-6252 6471 0
-6252 -6328 6469 0
-6252 -6326 6467 0
-6252 -6324 6465 0
-6252 -6322 6463 0
-6252 -6320 6461 0
-6252 -6318 6459 0
-6252 -6316 6457 0
-6252 -6314 6455 0
-6252 -6312 6453 0
-6252 -6310 6451 0
-6252 -6308 6449 0
-6252 -6306 6447 0
-6252 -6304 6445 0
-6252 -6302 6443 0
-6252 -6300 6441 0
-6252 -6299 6439 0
-6250 6469 0
-6250 -6328 6467 0
-6250 -6326 6465 0
-6250 -6324 6463 0
-6250 -6322 6461 0
-6250 -6320 6459 0
-6250 -6318 6457 0
-6250 -6316 6455 0
-6250 -6314 6453 0
-6250 -6312 6451 0
-6250 -6310 6449 0
-6250 -6308 6447 0
-6250 -6306 6445 0
-6250 -6304 6443 0
-6250 -6302 6441 0
-6250 -6300 6439 0
-6250 -6299 6437 0
-6248 6467 0
-6248 -6328 6465 0
-6248 -6326 6463 0
-6248 -6324 6461 0
-6248 -6322 6459 0
-6248 -6320 6457 0
-6248 -6318 6455 0
-6248 -6316 6453 0
-6248 -6314 6451 0
-6248 -6312 6449 0
-6248 -6310 6447 0
-6248 -6308 6445 0
-6248 -6306 6443 0
-6248 -6304 6441 0
-6248 -6302 6439 0
-6248 -6300 6437 0
-6248 -6299 6435 0
-6246 6465 0
-6246 -6328 6463 0
-6246 -6326 6461 0
-6246 -6324 6459 0
-6246 -6322 6457 0
-6246 -6320 6455 0
-6246 -6318 6453 0
-6246 -6316 6451 0
-6246 -6314 6449 0
-6246 -6312 6447 0
-6246 -6310 6445 0
-6246 -6308 6443 0
-6246 -6306 6441 0
-6246 -6304 6439 0
-6246 -6302 6437 0
-6246 -6300 6435 0
-6246 -6299 6433 0
-6244 6463 0
-6244 -6328 6461 0
-6244 -6326 6459 0
-6244 -6324 6457 0
-6244 -6322 6455 0
-6244 -6320 6453 0
-6244 -6318 6451 0
-6244 -6316 6449 0
-6244 -6314 6447 0
-6244 -6312 6445 0
-6244 -6310 6443 0
-6244 -6308 6441 0
-6244 -6306 6439 0
-6244 -6304 6437 0
-6244 -6302 6435 0
-6244 -6300 6433 0
-6244 -6299 6431 0
-6242 6461 0
-6242 -6328 6459 0
-6242 -6326 6457 0
-6242 -6324 6455 0
-6242 -6322 6453 0
-6242 -6320 6451 0
-6242 -6318 6449 0
-6242 -6316 6447 0
-6242 -6314 6445 0
-6242 -6312 6443 0
-6242 -6310 6441 0
-6242 -6308 6439 0
-6242 -6306 6437 0
-6242 -6304 6435 0
-6242 -6302 6433 0
-6242 -6300 6431 0
-6242 -6299 6429 0
-6240 6459 0
-6240 -6328 6457 0
-6240 -6326 6455 0
-6240 -6324 6453 0
-6240 -6322 6451 0
-6240 -6320 6449 0
-6240 -6318 6447 0
-6240 -6316 6445 0
-6240 -6314 6443 0
-6240 -6312 6441 0
-6240 -6310 6439 0
-6240 -6308 6437 0
-6240 -6306 6435 0
-6240 -6304 6433 0
-6240 -6302 6431 0
-6240 -6300 6429 0
-6240 -6299 6427 0
-6238 6457 0
-6238 -6328 6455 0
-6238 -6326 6453 0
-6238 -6324 6451 0
-6238 -6322 6449 0
-6238 -6320 6447 0
-6238 -6318 6445 0
-6238 -6316 6443 0
-6238 -6314 6441 0
-6238 -6312 6439 0
-6238 -6310 6437 0
-6238 -6308 6435 0
-6238 -6306 6433 0
-6238 -6304 6431 0
-6238 -6302 6429 0
-6238 -6300 6427 0
-6238 -6299 6425 0
-6237 6455 0
-6237 -6328 6453 0
-6237 -6326 6451 0
-6237 -6324 6449 0
-6237 -6322 6447 0
-6237 -6320 6445 0
-6237 -6318 6443 0
-6237 -6316 6441 0
-6237 -6314 6439 0
-6237 -6312 6437 0
-6237 -6310 6435 0
-6237 -6308 6433 0
-6237 -6306 6431 0
-6237 -6304 6429 0
-6237 -6302 6427 0
-6237 -6300 6425 0
-6237 -6299 6424 0
c ((SATLiteral(172) + SATLiteral(179) - aux1252)<=0)
-179 -6487 0
-172 -6487 0
-172 -179 -6488 0
c (0<=(SATLiteral(172) + SATLiteral(179) - aux1252))
179 6488 0
172 6488 0
172 179 6487 0
c ((SATLiteral(193) + SATLiteral(221) - aux1253)<=0)
-221 -6490 0
-193 -6490 0
-193 -221 -6491 0
c (0<=(SATLiteral(193) + SATLiteral(221) - aux1253))
221 6491 0
193 6491 0
193 221 6490 0
c ((SATLiteral(109) - aux1254 + SATLiteral(326))<=0)
-326 -6493 0
-109 -6493 0
-109 -326 -6494 0
c (0<=(SATLiteral(109) - aux1254 + SATLiteral(326)))
326 6494 0
109 6494 0
109 326 6493 0
c (( - aux1255 + SATLiteral(277) + SATLiteral(319))<=0)
-319 -6496 0
-277 -6496 0
-277 -319 -6497 0
c (0<=( - aux1255 + SATLiteral(277) + SATLiteral(319)))
319 6497 0
277 6497 0
277 319 6496 0
c (( - aux1256 + SATLiteral(312) + SATLiteral(333))<=0)
-333 -6499 0
-312 -6499 0
-312 -333 -6500 0
c (0<=( - aux1256 + SATLiteral(312) + SATLiteral(333)))
333 6500 0
312 6500 0
312 333 6499 0
c (( - aux1257 + SATLiteral(116) + SATLiteral(305))<=0)
-305 -6502 0
-116 -6502 0
-116 -305 -6503 0
c (0<=( - aux1257 + SATLiteral(116) + SATLiteral(305)))
305 6503 0
116 6503 0
116 305 6502 0
c ((SATLiteral(340) - aux1258 + SATLiteral(298))<=0)
-298 -6505 0
-340 -6505 0
-340 -298 -6506 0
c (0<=(SATLiteral(340) - aux1258 + SATLiteral(298)))
298 6506 0
340 6506 0
340 298 6505 0
c (( - aux1259 + SATLiteral(123) + SATLiteral(291))<=0)
-291 -6508 0
-123 -6508 0
-123 -291 -6509 0
c (0<=( - aux1259 + SATLiteral(123) + SATLiteral(291)))
291 6509 0
123 6509 0
123 291 6508 0
c (( - aux1260 + SATLiteral(130) + SATLiteral(284))<=0)
-284 -6511 0
-130 -6511 0
-130 -284 -6512 0
c (0<=( - aux1260 + SATLiteral(130) + SATLiteral(284)))
284 6512 0
130 6512 0
130 284 6511 0
c ((SATLiteral(60) - aux1261 + SATLiteral(53))<=0)
-53 -6514 0
-60 -6514 0
-60 -53 -6515 0
c (0<=(SATLiteral(60) - aux1261 + SATLiteral(53)))
53 6515 0
60 6515 0
60 53 6514 0
c ((SATLiteral(347) - aux1262 + SATLiteral(46))<=0)
-46 -6517 0
-347 -6517 0
-347 -46 -6518 0
c (0<=(SATLiteral(347) - aux1262 + SATLiteral(46)))
46 6518 0
347 6518 0
347 46 6517 0
c (( - aux1263 + SATLiteral(137) + SATLiteral(39))<=0)
-39 -6520 0
-137 -6520 0
-137 -39 -6521 0
c (0<=( - aux1263 + SATLiteral(137) + SATLiteral(39)))
39 6521 0
137 6521 0
137 39 6520 0
c (( - aux1264 + SATLiteral(144) + SATLiteral(32))<=0)
-32 -6523 0
-144 -6523 0
-144 -32 -6524 0
c (0<=( - aux1264 + SATLiteral(144) + SATLiteral(32)))
32 6524 0
144 6524 0
144 32 6523 0
c ((SATLiteral(354) - aux1265 + SATLiteral(25))<=0)
-25 -6526 0
-354 -6526 0
-354 -25 -6527 0
c (0<=(SATLiteral(354) - aux1265 + SATLiteral(25)))
25 6527 0
354 6527 0
354 25 6526 0
c (( - aux1266 + SATLiteral(151) + SATLiteral(18))<=0)
-18 -6529 0
-151 -6529 0
-151 -18 -6530 0
c (0<=( - aux1266 + SATLiteral(151) + SATLiteral(18)))
18 6530 0
151 6530 0
151 18 6529 0
c (( - aux1267 + SATLiteral(158) + SATLiteral(11))<=0)
-11 -6532 0
-158 -6532 0
-158 -11 -6533 0
c (0<=( - aux1267 + SATLiteral(158) + SATLiteral(11)))
11 6533 0
158 6533 0
158 11 6532 0
c ((SATLiteral(200) - aux1268 + SATLiteral(4))<=0)
-4 -6535 0
-200 -6535 0
-200 -4 -6536 0
c (0<=(SATLiteral(200) - aux1268 + SATLiteral(4)))
4 6536 0
200 6536 0
200 4 6535 0
c ((SATLiteral(67) - aux1269 + SATLiteral(445))<=0)
-445 -6538 0
-67 -6538 0
-67 -445 -6539 0
c (0<=(SATLiteral(67) - aux1269 + SATLiteral(445)))
445 6539 0
67 6539 0
67 445 6538 0
c ((SATLiteral(361) - aux1270 + SATLiteral(438))<=0)
-438 -6541 0
-361 -6541 0
-361 -438 -6542 0
c (0<=(SATLiteral(361) - aux1270 + SATLiteral(438)))
438 6542 0
361 6542 0
361 438 6541 0
c (( - aux1271 + SATLiteral(165) + SATLiteral(431))<=0)
-431 -6544 0
-165 -6544 0
-165 -431 -6545 0
c (0<=( - aux1271 + SATLiteral(165) + SATLiteral(431)))
431 6545 0
165 6545 0
165 431 6544 0
c (( - aux1272 + SATLiteral(396) + SATLiteral(424))<=0)
-424 -6547 0
-396 -6547 0
-396 -424 -6548 0
c (0<=( - aux1272 + SATLiteral(396) + SATLiteral(424)))
424 6548 0
396 6548 0
396 424 6547 0
c ((SATLiteral(368) - aux1273 + SATLiteral(417))<=0)
-417 -6550 0
-368 -6550 0
-368 -417 -6551 0
c (0<=(SATLiteral(368) - aux1273 + SATLiteral(417)))
417 6551 0
368 6551 0
368 417 6550 0
c (( - aux1274 + SATLiteral(403) + SATLiteral(410))<=0)
-410 -6553 0
-403 -6553 0
-403 -410 -6554 0
c (0<=( - aux1274 + SATLiteral(403) + SATLiteral(410)))
410 6554 0
403 6554 0
403 410 6553 0
c ((SATLiteral(74) + SATLiteral(375) - aux1275)<=0)
-375 -6556 0
-74 -6556 0
-74 -375 -6557 0
c (0<=(SATLiteral(74) + SATLiteral(375) - aux1275))
375 6557 0
74 6557 0
74 375 6556 0
c ((SATLiteral(186) + SATLiteral(382) - aux1276)<=0)
-382 -6559 0
-186 -6559 0
-186 -382 -6560 0
c (0<=(SATLiteral(186) + SATLiteral(382) - aux1276))
382 6560 0
186 6560 0
186 382 6559 0
c ((SATLiteral(207) + SATLiteral(81) - aux1277)<=0)
-81 -6562 0
-207 -6562 0
-207 -81 -6563 0
c (0<=(SATLiteral(207) + SATLiteral(81) - aux1277))
81 6563 0
207 6563 0
207 81 6562 0
c ((SATLiteral(389) - aux1278 + SATLiteral(228))<=0)
-228 -6565 0
-389 -6565 0
-389 -228 -6566 0
c (0<=(SATLiteral(389) - aux1278 + SATLiteral(228)))
228 6566 0
389 6566 0
389 228 6565 0
c ((SATLiteral(88) - aux1279 + SATLiteral(235))<=0)
-235 -6568 0
-88 -6568 0
-88 -235 -6569 0
c (0<=(SATLiteral(88) - aux1279 + SATLiteral(235)))
235 6569 0
88 6569 0
88 235 6568 0
c ((SATLiteral(214) - aux1280 + SATLiteral(242))<=0)
-242 -6571 0
-214 -6571 0
-214 -242 -6572 0
c (0<=(SATLiteral(214) - aux1280 + SATLiteral(242)))
242 6572 0
214 6572 0
214 242 6571 0
c ((SATLiteral(95) - aux1281 + SATLiteral(249))<=0)
-249 -6574 0
-95 -6574 0
-95 -249 -6575 0
c (0<=(SATLiteral(95) - aux1281 + SATLiteral(249)))
249 6575 0
95 6575 0
95 249 6574 0
c ((SATLiteral(102) - aux1282 + SATLiteral(256))<=0)
-256 -6577 0
-102 -6577 0
-102 -256 -6578 0
c (0<=(SATLiteral(102) - aux1282 + SATLiteral(256)))
256 6578 0
102 6578 0
102 256 6577 0
c (( - aux1283 + SATLiteral(263) + SATLiteral(270))<=0)
-270 -6580 0
-263 -6580 0
-263 -270 -6581 0
c (0<=( - aux1283 + SATLiteral(263) + SATLiteral(270)))
270 6581 0
263 6581 0
263 270 6580 0
c ((aux1267 + aux1283 - aux1284)<=0)
6580 -6583 0
6581 -6584 0
6532 -6583 0
6532 6580 -6584 0
6532 6581 -6586 0
6533 -6584 0
6533 6580 -6586 0
6533 6581 -6588 0
c (0<=(aux1267 + aux1283 - aux1284))
-6581 6588 0
-6580 6586 0
-6533 6588 0
-6533 -6581 6586 0
-6533 -6580 6584 0
-6532 6586 0
-6532 -6581 6584 0
-6532 -6580 6583 0
c ((aux1257 + aux1265 - aux1285)<=0)
6526 -6590 0
6527 -6591 0
6502 -6590 0
6502 6526 -6591 0
6502 6527 -6593 0
6503 -6591 0
6503 6526 -6593 0
6503 6527 -6595 0
c (0<=(aux1257 + aux1265 - aux1285))
-6527 6595 0
-6526 6593 0
-6503 6595 0
-6503 -6527 6593 0
-6503 -6526 6591 0
-6502 6593 0
-6502 -6527 6591 0
-6502 -6526 6590 0
c ((aux1253 + aux1255 - aux1286)<=0)
6496 -6597 0
6497 -6598 0
6490 -6597 0
6490 6496 -6598 0
6490 6497 -6600 0
6491 -6598 0
6491 6496 -6600 0
6491 6497 -6602 0
c (0<=(aux1253 + aux1255 - aux1286))
-6497 6602 0
-6496 6600 0
-6491 6602 0
-6491 -6497 6600 0
-6491 -6496 6598 0
-6490 6600 0
-6490 -6497 6598 0
-6490 -6496 6597 0
c ((aux1252 + aux1280 - aux1287)<=0)
6571 -6604 0
6572 -6605 0
6487 -6604 0
6487 6571 -6605 0
6487 6572 -6607 0
6488 -6605 0
6488 6571 -6607 0
6488 6572 -6609 0
c (0<=(aux1252 + aux1280 - aux1287))
-6572 6609 0
-6571 6607 0
-6488 6609 0
-6488 -6572 6607 0
-6488 -6571 6605 0
-6487 6607 0
-6487 -6572 6605 0
-6487 -6571 6604 0
c ((aux1256 + aux1279 - aux1288)<=0)
6568 -6611 0
6569 -6612 0
6499 -6611 0
6499 6568 -6612 0
6499 6569 -6614 0
6500 -6612 0
6500 6568 -6614 0
6500 6569 -6616 0
c (0<=(aux1256 + aux1279 - aux1288))
-6569 6616 0
-6568 6614 0
-6500 6616 0
-6500 -6569 6614 0
-6500 -6568 6612 0
-6499 6614 0
-6499 -6569 6612 0
-6499 -6568 6611 0
c ((aux1259 + aux1264 - aux1289)<=0)
6523 -6618 0
6524 -6619 0
6508 -6618 0
6508 6523 -6619 0
6508 6524 -6621 0
6509 -6619 0
6509 6523 -6621 0
6509 6524 -6623 0
c (0<=(aux1259 + aux1264 - aux1289))
-6524 6623 0
-6523 6621 0
-6509 6623 0
-6509 -6524 6621 0
-6509 -6523 6619 0
-6508 6621 0
-6508 -6524 6619 0
-6508 -6523 6618 0
c ((aux1260 + aux1277 - aux1290)<=0)
6562 -6625 0
6563 -6626 0
6511 -6625 0
6511 6562 -6626 0
6511 6563 -6628 0
6512 -6626 0
6512 6562 -6628 0
6512 6563 -6630 0
c (0<=(aux1260 + aux1277 - aux1290))
-6563 6630 0
-6562 6628 0
-6512 6630 0
-6512 -6563 6628 0
-6512 -6562 6626 0
-6511 6628 0
-6511 -6563 6626 0
-6511 -6562 6625 0
c ((aux1262 + aux1263 - aux1291)<=0)
6520 -6632 0
6521 -6633 0
6517 -6632 0
6517 6520 -6633 0
6517 6521 -6635 0
6518 -6633 0
6518 6520 -6635 0
6518 6521 -6637 0
c (0<=(aux1262 + aux1263 - aux1291))
-6521 6637 0
-6520 6635 0
-6518 6637 0
-6518 -6521 6635 0
-6518 -6520 6633 0
-6517 6635 0
-6517 -6521 6633 0
-6517 -6520 6632 0
c ((aux1266 + aux1274 - aux1292)<=0)
6553 -6639 0
6554 -6640 0
6529 -6639 0
6529 6553 -6640 0
6529 6554 -6642 0
6530 -6640 0
6530 6553 -6642 0
6530 6554 -6644 0
c (0<=(aux1266 + aux1274 - aux1292))
-6554 6644 0
-6553 6642 0
-6530 6644 0
-6530 -6554 6642 0
-6530 -6553 6640 0
-6529 6642 0
-6529 -6554 6640 0
-6529 -6553 6639 0
c ((aux1272 + aux1275 - aux1293)<=0)
6556 -6646 0
6557 -6647 0
6547 -6646 0
6547 6556 -6647 0
6547 6557 -6649 0
6548 -6647 0
6548 6556 -6649 0
6548 6557 -6651 0
c (0<=(aux1272 + aux1275 - aux1293))
-6557 6651 0
-6556 6649 0
-6548 6651 0
-6548 -6557 6649 0
-6548 -6556 6647 0
-6547 6649 0
-6547 -6557 6647 0
-6547 -6556 6646 0
c ((aux1268 + aux1273 - aux1294)<=0)
6550 -6653 0
6551 -6654 0
6535 -6653 0
6535 6550 -6654 0
6535 6551 -6656 0
6536 -6654 0
6536 6550 -6656 0
6536 6551 -6658 0
c (0<=(aux1268 + aux1273 - aux1294))
-6551 6658 0
-6550 6656 0
-6536 6658 0
-6536 -6551 6656 0
-6536 -6550 6654 0
-6535 6656 0
-6535 -6551 6654 0
-6535 -6550 6653 0
c ((aux1269 + aux1271 - aux1295)<=0)
6544 -6660 0
6545 -6661 0
6538 -6660 0
6538 6544 -6661 0
6538 6545 -6663 0
6539 -6661 0
6539 6544 -6663 0
6539 6545 -6665 0
c (0<=(aux1269 + aux1271 - aux1295))
-6545 6665 0
-6544 6663 0
-6539 6665 0
-6539 -6545 6663 0
-6539 -6544 6661 0
-6538 6663 0
-6538 -6545 6661 0
-6538 -6544 6660 0
c ((aux1270 + aux1282 - aux1296)<=0)
6577 -6667 0
6578 -6668 0
6541 -6667 0
6541 6577 -6668 0
6541 6578 -6670 0
6542 -6668 0
6542 6577 -6670 0
6542 6578 -6672 0
c (0<=(aux1270 + aux1282 - aux1296))
-6578 6672 0
-6577 6670 0
-6542 6672 0
-6542 -6578 6670 0
-6542 -6577 6668 0
-6541 6670 0
-6541 -6578 6668 0
-6541 -6577 6667 0
c ((aux1276 + aux1278 - aux1297)<=0)
6565 -6674 0
6566 -6675 0
6559 -6674 0
6559 6565 -6675 0
6559 6566 -6677 0
6560 -6675 0
6560 6565 -6677 0
6560 6566 -6679 0
c (0<=(aux1276 + aux1278 - aux1297))
-6566 6679 0
-6565 6677 0
-6560 6679 0
-6560 -6566 6677 0
-6560 -6565 6675 0
-6559 6677 0
-6559 -6566 6675 0
-6559 -6565 6674 0
c ((aux1254 + aux1261 - aux1298)<=0)
6514 -6681 0
6515 -6682 0
6493 -6681 0
6493 6514 -6682 0
6493 6515 -6684 0
6494 -6682 0
6494 6514 -6684 0
6494 6515 -6686 0
c (0<=(aux1254 + aux1261 - aux1298))
-6515 6686 0
-6514 6684 0
-6494 6686 0
-6494 -6515 6684 0
-6494 -6514 6682 0
-6493 6684 0
-6493 -6515 6682 0
-6493 -6514 6681 0
c ((aux1258 + aux1281 - aux1299)<=0)
6574 -6688 0
6575 -6689 0
6505 -6688 0
6505 6574 -6689 0
6505 6575 -6691 0
6506 -6689 0
6506 6574 -6691 0
6506 6575 -6693 0
c (0<=(aux1258 + aux1281 - aux1299))
-6575 6693 0
-6574 6691 0
-6506 6693 0
-6506 -6575 6691 0
-6506 -6574 6689 0
-6505 6691 0
-6505 -6575 6689 0
-6505 -6574 6688 0
c ((aux1291 + aux1299 - aux1300)<=0)
6688 -6695 0
6689 -6696 0
6691 -6698 0
6693 -6700 0
6632 -6695 0
6632 6688 -6696 0
6632 6689 -6698 0
6632 6691 -6700 0
6632 6693 -6702 0
6633 -6696 0
6633 6688 -6698 0
6633 6689 -6700 0
6633 6691 -6702 0
6633 6693 -6704 0
6635 -6698 0
6635 6688 -6700 0
6635 6689 -6702 0
6635 6691 -6704 0
6635 6693 -6706 0
6637 -6700 0
6637 6688 -6702 0
6637 6689 -6704 0
6637 6691 -6706 0
6637 6693 -6708 0
c (0<=(aux1291 + aux1299 - aux1300))
-6693 6708 0
-6691 6706 0
-6689 6704 0
-6688 6702 0
-6637 6708 0
-6637 -6693 6706 0
-6637 -6691 6704 0
-6637 -6689 6702 0
-6637 -6688 6700 0
-6635 6706 0
-6635 -6693 6704 0
-6635 -6691 6702 0
-6635 -6689 6700 0
-6635 -6688 6698 0
-6633 6704 0
-6633 -6693 6702 0
-6633 -6691 6700 0
-6633 -6689 6698 0
-6633 -6688 6696 0
-6632 6702 0
-6632 -6693 6700 0
-6632 -6691 6698 0
-6632 -6689 6696 0
-6632 -6688 6695 0
c ((aux1285 + aux1289 - aux1301)<=0)
6618 -6710 0
6619 -6711 0
6621 -6713 0
6623 -6715 0
6590 -6710 0
6590 6618 -6711 0
6590 6619 -6713 0
6590 6621 -6715 0
6590 6623 -6717 0
6591 -6711 0
6591 6618 -6713 0
6591 6619 -6715 0
6591 6621 -6717 0
6591 6623 -6719 0
6593 -6713 0
6593 6618 -6715 0
6593 6619 -6717 0
6593 6621 -6719 0
6593 6623 -6721 0
6595 -6715 0
6595 6618 -6717 0
6595 6619 -6719 0
6595 6621 -6721 0
6595 6623 -6723 0
c (0<=(aux1285 + aux1289 - aux1301))
-6623 6723 0
-6621 6721 0
-6619 6719 0
-6618 6717 0
-6595 6723 0
-6595 -6623 6721 0
-6595 -6621 6719 0
-6595 -6619 6717 0
-6595 -6618 6715 0
-6593 6721 0
-6593 -6623 6719 0
-6593 -6621 6717 0
-6593 -6619 6715 0
-6593 -6618 6713 0
-6591 6719 0
-6591 -6623 6717 0
-6591 -6621 6715 0
-6591 -6619 6713 0
-6591 -6618 6711 0
-6590 6717 0
-6590 -6623 6715 0
-6590 -6621 6713 0
-6590 -6619 6711 0
-6590 -6618 6710 0
c ((aux1284 + aux1297 - aux1302)<=0)
6674 -6725 0
6675 -6726 0
6677 -6728 0
6679 -6730 0
6583 -6725 0
6583 6674 -6726 0
6583 6675 -6728 0
6583 6677 -6730 0
6583 6679 -6732 0
6584 -6726 0
6584 6674 -6728 0
6584 6675 -6730 0
6584 6677 -6732 0
6584 6679 -6734 0
6586 -6728 0
6586 6674 -6730 0
6586 6675 -6732 0
6586 6677 -6734 0
6586 6679 -6736 0
6588 -6730 0
6588 6674 -6732 0
6588 6675 -6734 0
6588 6677 -6736 0
6588 6679 -6738 0
c (0<=(aux1284 + aux1297 - aux1302))
-6679 6738 0
-6677 6736 0
-6675 6734 0
-6674 6732 0
-6588 6738 0
-6588 -6679 6736 0
-6588 -6677 6734 0
-6588 -6675 6732 0
-6588 -6674 6730 0
-6586 6736 0
-6586 -6679 6734 0
-6586 -6677 6732 0
-6586 -6675 6730 0
-6586 -6674 6728 0
-6584 6734 0
-6584 -6679 6732 0
-6584 -6677 6730 0
-6584 -6675 6728 0
-6584 -6674 6726 0
-6583 6732 0
-6583 -6679 6730 0
-6583 -6677 6728 0
-6583 -6675 6726 0
-6583 -6674 6725 0
c ((aux1287 + aux1288 - aux1303)<=0)
6611 -6740 0
6612 -6741 0
6614 -6743 0
6616 -6745 0
6604 -6740 0
6604 6611 -6741 0
6604 6612 -6743 0
6604 6614 -6745 0
6604 6616 -6747 0
6605 -6741 0
6605 6611 -6743 0
6605 6612 -6745 0
6605 6614 -6747 0
6605 6616 -6749 0
6607 -6743 0
6607 6611 -6745 0
6607 6612 -6747 0
6607 6614 -6749 0
6607 6616 -6751 0
6609 -6745 0
6609 6611 -6747 0
6609 6612 -6749 0
6609 6614 -6751 0
6609 6616 -6753 0
c (0<=(aux1287 + aux1288 - aux1303))
-6616 6753 0
-6614 6751 0
-6612 6749 0
-6611 6747 0
-6609 6753 0
-6609 -6616 6751 0
-6609 -6614 6749 0
-6609 -6612 6747 0
-6609 -6611 6745 0
-6607 6751 0
-6607 -6616 6749 0
-6607 -6614 6747 0
-6607 -6612 6745 0
-6607 -6611 6743 0
-6605 6749 0
-6605 -6616 6747 0
-6605 -6614 6745 0
-6605 -6612 6743 0
-6605 -6611 6741 0
-6604 6747 0
-6604 -6616 6745 0
-6604 -6614 6743 0
-6604 -6612 6741 0
-6604 -6611 6740 0
c ((aux1290 + aux1294 - aux1304)<=0)
6653 -6755 0
6654 -6756 0
6656 -6758 0
6658 -6760 0
6625 -6755 0
6625 6653 -6756 0
6625 6654 -6758 0
6625 6656 -6760 0
6625 6658 -6762 0
6626 -6756 0
6626 6653 -6758 0
6626 6654 -6760 0
6626 6656 -6762 0
6626 6658 -6764 0
6628 -6758 0
6628 6653 -6760 0
6628 6654 -6762 0
6628 6656 -6764 0
6628 6658 -6766 0
6630 -6760 0
6630 6653 -6762 0
6630 6654 -6764 0
6630 6656 -6766 0
6630 6658 -6768 0
c (0<=(aux1290 + aux1294 - aux1304))
-6658 6768 0
-6656 6766 0
-6654 6764 0
-6653 6762 0
-6630 6768 0
-6630 -6658 6766 0
-6630 -6656 6764 0
-6630 -6654 6762 0
-6630 -6653 6760 0
-6628 6766 0
-6628 -6658 6764 0
-6628 -6656 6762 0
-6628 -6654 6760 0
-6628 -6653 6758 0
-6626 6764 0
-6626 -6658 6762 0
-6626 -6656 6760 0
-6626 -6654 6758 0
-6626 -6653 6756 0
-6625 6762 0
-6625 -6658 6760 0
-6625 -6656 6758 0
-6625 -6654 6756 0
-6625 -6653 6755 0
c ((aux1292 + aux1295 - aux1305)<=0)
6660 -6770 0
6661 -6771 0
6663 -6773 0
6665 -6775 0
6639 -6770 0
6639 6660 -6771 0
6639 6661 -6773 0
6639 6663 -6775 0
6639 6665 -6777 0
6640 -6771 0
6640 6660 -6773 0
6640 6661 -6775 0
6640 6663 -6777 0
6640 6665 -6779 0
6642 -6773 0
6642 6660 -6775 0
6642 6661 -6777 0
6642 6663 -6779 0
6642 6665 -6781 0
6644 -6775 0
6644 6660 -6777 0
6644 6661 -6779 0
6644 6663 -6781 0
6644 6665 -6783 0
c (0<=(aux1292 + aux1295 - aux1305))
-6665 6783 0
-6663 6781 0
-6661 6779 0
-6660 6777 0
-6644 6783 0
-6644 -6665 6781 0
-6644 -6663 6779 0
-6644 -6661 6777 0
-6644 -6660 6775 0
-6642 6781 0
-6642 -6665 6779 0
-6642 -6663 6777 0
-6642 -6661 6775 0
-6642 -6660 6773 0
-6640 6779 0
-6640 -6665 6777 0
-6640 -6663 6775 0
-6640 -6661 6773 0
-6640 -6660 6771 0
-6639 6777 0
-6639 -6665 6775 0
-6639 -6663 6773 0
-6639 -6661 6771 0
-6639 -6660 6770 0
c ((aux1293 + aux1298 - aux1306)<=0)
6681 -6785 0
6682 -6786 0
6684 -6788 0
6686 -6790 0
6646 -6785 0
6646 6681 -6786 0
6646 6682 -6788 0
6646 6684 -6790 0
6646 6686 -6792 0
6647 -6786 0
6647 6681 -6788 0
6647 6682 -6790 0
6647 6684 -6792 0
6647 6686 -6794 0
6649 -6788 0
6649 6681 -6790 0
6649 6682 -6792 0
6649 6684 -6794 0
6649 6686 -6796 0
6651 -6790 0
6651 6681 -6792 0
6651 6682 -6794 0
6651 6684 -6796 0
6651 6686 -6798 0
c (0<=(aux1293 + aux1298 - aux1306))
-6686 6798 0
-6684 6796 0
-6682 6794 0
-6681 6792 0
-6651 6798 0
-6651 -6686 6796 0
-6651 -6684 6794 0
-6651 -6682 6792 0
-6651 -6681 6790 0
-6649 6796 0
-6649 -6686 6794 0
-6649 -6684 6792 0
-6649 -6682 6790 0
-6649 -6681 6788 0
-6647 6794 0
-6647 -6686 6792 0
-6647 -6684 6790 0
-6647 -6682 6788 0
-6647 -6681 6786 0
-6646 6792 0
-6646 -6686 6790 0
-6646 -6684 6788 0
-6646 -6682 6786 0
-6646 -6681 6785 0
c ((aux1286 + aux1296 - aux1307)<=0)
6667 -6800 0
6668 -6801 0
6670 -6803 0
6672 -6805 0
6597 -6800 0
6597 6667 -6801 0
6597 6668 -6803 0
6597 6670 -6805 0
6597 6672 -6807 0
6598 -6801 0
6598 6667 -6803 0
6598 6668 -6805 0
6598 6670 -6807 0
6598 6672 -6809 0
6600 -6803 0
6600 6667 -6805 0
6600 6668 -6807 0
6600 6670 -6809 0
6600 6672 -6811 0
6602 -6805 0
6602 6667 -6807 0
6602 6668 -6809 0
6602 6670 -6811 0
6602 6672 -6813 0
c (0<=(aux1286 + aux1296 - aux1307))
-6672 6813 0
-6670 6811 0
-6668 6809 0
-6667 6807 0
-6602 6813 0
-6602 -6672 6811 0
-6602 -6670 6809 0
-6602 -6668 6807 0
-6602 -6667 6805 0
-6600 6811 0
-6600 -6672 6809 0
-6600 -6670 6807 0
-6600 -6668 6805 0
-6600 -6667 6803 0
-6598 6809 0
-6598 -6672 6807 0
-6598 -6670 6805 0
-6598 -6668 6803 0
-6598 -6667 6801 0
-6597 6807 0
-6597 -6672 6805 0
-6597 -6670 6803 0
-6597 -6668 6801 0
-6597 -6667 6800 0
c ((aux1303 + aux1307 - aux1308)<=0)
6800 -6815 0
6801 -6816 0
6803 -6818 0
6805 -6820 0
6807 -6822 0
6809 -6824 0
6811 -6826 0
6813 -6828 0
6740 -6815 0
6740 6800 -6816 0
6740 6801 -6818 0
6740 6803 -6820 0
6740 6805 -6822 0
6740 6807 -6824 0
6740 6809 -6826 0
6740 6811 -6828 0
6740 6813 -6830 0
6741 -6816 0
6741 6800 -6818 0
6741 6801 -6820 0
6741 6803 -6822 0
6741 6805 -6824 0
6741 6807 -6826 0
6741 6809 -6828 0
6741 6811 -6830 0
6741 6813 -6832 0
6743 -6818 0
6743 6800 -6820 0
6743 6801 -6822 0
6743 6803 -6824 0
6743 6805 -6826 0
6743 6807 -6828 0
6743 6809 -6830 0
6743 6811 -6832 0
6743 6813 -6834 0
6745 -6820 0
6745 6800 -6822 0
6745 6801 -6824 0
6745 6803 -6826 0
6745 6805 -6828 0
6745 6807 -6830 0
6745 6809 -6832 0
6745 6811 -6834 0
6745 6813 -6836 0
6747 -6822 0
6747 6800 -6824 0
6747 6801 -6826 0
6747 6803 -6828 0
6747 6805 -6830 0
6747 6807 -6832 0
6747 6809 -6834 0
6747 6811 -6836 0
6747 6813 -6838 0
6749 -6824 0
6749 6800 -6826 0
6749 6801 -6828 0
6749 6803 -6830 0
6749 6805 -6832 0
6749 6807 -6834 0
6749 6809 -6836 0
6749 6811 -6838 0
6749 6813 -6840 0
6751 -6826 0
6751 6800 -6828 0
6751 6801 -6830 0
6751 6803 -6832 0
6751 6805 -6834 0
6751 6807 -6836 0
6751 6809 -6838 0
6751 6811 -6840 0
6751 6813 -6842 0
6753 -6828 0
6753 6800 -6830 0
6753 6801 -6832 0
6753 6803 -6834 0
6753 6805 -6836 0
6753 6807 -6838 0
6753 6809 -6840 0
6753 6811 -6842 0
6753 6813 -6844 0
c (0<=(aux1303 + aux1307 - aux1308))
-6813 6844 0
-6811 6842 0
-6809 6840 0
-6807 6838 0
-6805 6836 0
-6803 6834 0
-6801 6832 0
-6800 6830 0
-6753 6844 0
-6753 -6813 6842 0
-6753 -6811 6840 0
-6753 -6809 6838 0
-6753 -6807 6836 0
-6753 -6805 6834 0
-6753 -6803 6832 0
-6753 -6801 6830 0
-6753 -6800 6828 0
-6751 6842 0
-6751 -6813 6840 0
-6751 -6811 6838 0
-6751 -6809 6836 0
-6751 -6807 6834 0
-6751 -6805 6832 0
-6751 -6803 6830 0
-6751 -6801 6828 0
-6751 -6800 6826 0
-6749 6840 0
-6749 -6813 6838 0
-6749 -6811 6836 0
-6749 -6809 6834 0
-6749 -6807 6832 0
-6749 -6805 6830 0
-6749 -6803 6828 0
-6749 -6801 6826 0
-6749 -6800 6824 0
-6747 6838 0
-6747 -6813 6836 0
-6747 -6811 6834 0
-6747 -6809 6832 0
-6747 -6807 6830 0
-6747 -6805 6828 0
-6747 -6803 6826 0
-6747 -6801 6824 0
-6747 -6800 6822 0
-6745 6836 0
-6745 -6813 6834 0
-6745 -6811 6832 0
-6745 -6809 6830 0
-6745 -6807 6828 0
-6745 -6805 6826 0
-6745 -6803 6824 0
-6745 -6801 6822 0
-6745 -6800 6820 0
-6743 6834 0
-6743 -6813 6832 0
-6743 -6811 6830 0
-6743 -6809 6828 0
-6743 -6807 6826 0
-6743 -6805 6824 0
-6743 -6803 6822 0
-6743 -6801 6820 0
-6743 -6800 6818 0
-6741 6832 0
-6741 -6813 6830 0
-6741 -6811 6828 0
-6741 -6809 6826 0
-6741 -6807 6824 0
-6741 -6805 6822 0
-6741 -6803 6820 0
-6741 -6801 6818 0
-6741 -6800 6816 0
-6740 6830 0
-6740 -6813 6828 0
-6740 -6811 6826 0
-6740 -6809 6824 0
-6740 -6807 6822 0
-6740 -6805 6820 0
-6740 -6803 6818 0
-6740 -6801 6816 0
-6740 -6800 6815 0
c ((aux1300 + aux1301 - aux1309)<=0)
6710 -6846 0
6711 -6847 0
6713 -6849 0
6715 -6851 0
6717 -6853 0
6719 -6855 0
6721 -6857 0
6723 -6859 0
6695 -6846 0
6695 6710 -6847 0
6695 6711 -6849 0
6695 6713 -6851 0
6695 6715 -6853 0
6695 6717 -6855 0
6695 6719 -6857 0
6695 6721 -6859 0
6695 6723 -6861 0
6696 -6847 0
6696 6710 -6849 0
6696 6711 -6851 0
6696 6713 -6853 0
6696 6715 -6855 0
6696 6717 -6857 0
6696 6719 -6859 0
6696 6721 -6861 0
6696 6723 -6863 0
6698 -6849 0
6698 6710 -6851 0
6698 6711 -6853 0
6698 6713 -6855 0
6698 6715 -6857 0
6698 6717 -6859 0
6698 6719 -6861 0
6698 6721 -6863 0
6698 6723 -6865 0
6700 -6851 0
6700 6710 -6853 0
6700 6711 -6855 0
6700 6713 -6857 0
6700 6715 -6859 0
6700 6717 -6861 0
6700 6719 -6863 0
6700 6721 -6865 0
6700 6723 -6867 0
6702 -6853 0
6702 6710 -6855 0
6702 6711 -6857 0
6702 6713 -6859 0
6702 6715 -6861 0
6702 6717 -6863 0
6702 6719 -6865 0
6702 6721 -6867 0
6702 6723 -6869 0
6704 -6855 0
6704 6710 -6857 0
6704 6711 -6859 0
6704 6713 -6861 0
6704 6715 -6863 0
6704 6717 -6865 0
6704 6719 -6867 0
6704 6721 -6869 0
6704 6723 -6871 0
6706 -6857 0
6706 6710 -6859 0
6706 6711 -6861 0
6706 6713 -6863 0
6706 6715 -6865 0
6706 6717 -6867 0
6706 6719 -6869 0
6706 6721 -6871 0
6706 6723 -6873 0
6708 -6859 0
6708 6710 -6861 0
6708 6711 -6863 0
6708 6713 -6865 0
6708 6715 -6867 0
6708 6717 -6869 0
6708 6719 -6871 0
6708 6721 -6873 0
6708 6723 -6875 0
c (0<=(aux1300 + aux1301 - aux1309))
-6723 6875 0
-6721 6873 0
-6719 6871 0
-6717 6869 0
-6715 6867 0
-6713 6865 0
-6711 6863 0
-6710 6861 0
-6708 6875 0
-6708 -6723 6873 0
-6708 -6721 6871 0
-6708 -6719 6869 0
-6708 -6717 6867 0
-6708 -6715 6865 0
-6708 -6713 6863 0
-6708 -6711 6861 0
-6708 -6710 6859 0
-6706 6873 0
-6706 -6723 6871 0
-6706 -6721 6869 0
-6706 -6719 6867 0
-6706 -6717 6865 0
-6706 -6715 6863 0
-6706 -6713 6861 0
-6706 -6711 6859 0
-6706 -6710 6857 0
-6704 6871 0
-6704 -6723 6869 0
-6704 -6721 6867 0
-6704 -6719 6865 0
-6704 -6717 6863 0
-6704 -6715 6861 0
-6704 -6713 6859 0
-6704 -6711 6857 0
-6704 -6710 6855 0
-6702 6869 0
-6702 -6723 6867 0
-6702 -6721 6865 0
-6702 -6719 6863 0
-6702 -6717 6861 0
-6702 -6715 6859 0
-6702 -6713 6857 0
-6702 -6711 6855 0
-6702 -6710 6853 0
-6700 6867 0
-6700 -6723 6865 0
-6700 -6721 6863 0
-6700 -6719 6861 0
-6700 -6717 6859 0
-6700 -6715 6857 0
-6700 -6713 6855 0
-6700 -6711 6853 0
-6700 -6710 6851 0
-6698 6865 0
-6698 -6723 6863 0
-6698 -6721 6861 0
-6698 -6719 6859 0
-6698 -6717 6857 0
-6698 -6715 6855 0
-6698 -6713 6853 0
-6698 -6711 6851 0
-6698 -6710 6849 0
-6696 6863 0
-6696 -6723 6861 0
-6696 -6721 6859 0
-6696 -6719 6857 0
-6696 -6717 6855 0
-6696 -6715 6853 0
-6696 -6713 6851 0
-6696 -6711 6849 0
-6696 -6710 6847 0
-6695 6861 0
-6695 -6723 6859 0
-6695 -6721 6857 0
-6695 -6719 6855 0
-6695 -6717 6853 0
-6695 -6715 6851 0
-6695 -6713 6849 0
-6695 -6711 6847 0
-6695 -6710 6846 0
c ((aux1302 + aux1304 - aux1310)<=0)
6755 -6877 0
6756 -6878 0
6758 -6880 0
6760 -6882 0
6762 -6884 0
6764 -6886 0
6766 -6888 0
6768 -6890 0
6725 -6877 0
6725 6755 -6878 0
6725 6756 -6880 0
6725 6758 -6882 0
6725 6760 -6884 0
6725 6762 -6886 0
6725 6764 -6888 0
6725 6766 -6890 0
6725 6768 -6892 0
6726 -6878 0
6726 6755 -6880 0
6726 6756 -6882 0
6726 6758 -6884 0
6726 6760 -6886 0
6726 6762 -6888 0
6726 6764 -6890 0
6726 6766 -6892 0
6726 6768 -6894 0
6728 -6880 0
6728 6755 -6882 0
6728 6756 -6884 0
6728 6758 -6886 0
6728 6760 -6888 0
6728 6762 -6890 0
6728 6764 -6892 0
6728 6766 -6894 0
6728 6768 -6896 0
6730 -6882 0
6730 6755 -6884 0
6730 6756 -6886 0
6730 6758 -6888 0
6730 6760 -6890 0
6730 6762 -6892 0
6730 6764 -6894 0
6730 6766 -6896 0
6730 6768 -6898 0
6732 -6884 0
6732 6755 -6886 0
6732 6756 -6888 0
6732 6758 -6890 0
6732 6760 -6892 0
6732 6762 -6894 0
6732 6764 -6896 0
6732 6766 -6898 0
6732 6768 -6900 0
6734 -6886 0
6734 6755 -6888 0
6734 6756 -6890 0
6734 6758 -6892 0
6734 6760 -6894 0
6734 6762 -6896 0
6734 6764 -6898 0
6734 6766 -6900 0
6734 6768 -6902 0
6736 -6888 0
6736 6755 -6890 0
6736 6756 -6892 0
6736 6758 -6894 0
6736 6760 -6896 0
6736 6762 -6898 0
6736 6764 -6900 0
6736 6766 -6902 0
6736 6768 -6904 0
6738 -6890 0
6738 6755 -6892 0
6738 6756 -6894 0
6738 6758 -6896 0
6738 6760 -6898 0
6738 6762 -6900 0
6738 6764 -6902 0
6738 6766 -6904 0
6738 6768 -6906 0
c (0<=(aux1302 + aux1304 - aux1310))
-6768 6906 0
-6766 6904 0
-6764 6902 0
-6762 6900 0
-6760 6898 0
-6758 6896 0
-6756 6894 0
-6755 6892 0
-6738 6906 0
-6738 -6768 6904 0
-6738 -6766 6902 0
-6738 -6764 6900 0
-6738 -6762 6898 0
-6738 -6760 6896 0
-6738 -6758 6894 0
-6738 -6756 6892 0
-6738 -6755 6890 0
-6736 6904 0
-6736 -6768 6902 0
-6736 -6766 6900 0
-6736 -6764 6898 0
-6736 -6762 6896 0
-6736 -6760 6894 0
-6736 -6758 6892 0
-6736 -6756 6890 0
-6736 -6755 6888 0
-6734 6902 0
-6734 -6768 6900 0
-6734 -6766 6898 0
-6734 -6764 6896 0
-6734 -6762 6894 0
-6734 -6760 6892 0
-6734 -6758 6890 0
-6734 -6756 6888 0
-6734 -6755 6886 0
-6732 6900 0
-6732 -6768 6898 0
-6732 -6766 6896 0
-6732 -6764 6894 0
-6732 -6762 6892 0
-6732 -6760 6890 0
-6732 -6758 6888 0
-6732 -6756 6886 0
-6732 -6755 6884 0
-6730 6898 0
-6730 -6768 6896 0
-6730 -6766 6894 0
-6730 -6764 6892 0
-6730 -6762 6890 0
-6730 -6760 6888 0
-6730 -6758 6886 0
-6730 -6756 6884 0
-6730 -6755 6882 0
-6728 6896 0
-6728 -6768 6894 0
-6728 -6766 6892 0
-6728 -6764 6890 0
-6728 -6762 6888 0
-6728 -6760 6886 0
-6728 -6758 6884 0
-6728 -6756 6882 0
-6728 -6755 6880 0
-6726 6894 0
-6726 -6768 6892 0
-6726 -6766 6890 0
-6726 -6764 6888 0
-6726 -6762 6886 0
-6726 -6760 6884 0
-6726 -6758 6882 0
-6726 -6756 6880 0
-6726 -6755 6878 0
-6725 6892 0
-6725 -6768 6890 0
-6725 -6766 6888 0
-6725 -6764 6886 0
-6725 -6762 6884 0
-6725 -6760 6882 0
-6725 -6758 6880 0
-6725 -6756 6878 0
-6725 -6755 6877 0
c ((aux1305 + aux1306 - aux1311)<=0)
6785 -6908 0
6786 -6909 0
6788 -6911 0
6790 -6913 0
6792 -6915 0
6794 -6917 0
6796 -6919 0
6798 -6921 0
6770 -6908 0
6770 6785 -6909 0
6770 6786 -6911 0
6770 6788 -6913 0
6770 6790 -6915 0
6770 6792 -6917 0
6770 6794 -6919 0
6770 6796 -6921 0
6770 6798 -6923 0
6771 -6909 0
6771 6785 -6911 0
6771 6786 -6913 0
6771 6788 -6915 0
6771 6790 -6917 0
6771 6792 -6919 0
6771 6794 -6921 0
6771 6796 -6923 0
6771 6798 -6925 0
6773 -6911 0
6773 6785 -6913 0
6773 6786 -6915 0
6773 6788 -6917 0
6773 6790 -6919 0
6773 6792 -6921 0
6773 6794 -6923 0
6773 6796 -6925 0
6773 6798 -6927 0
6775 -6913 0
6775 6785 -6915 0
6775 6786 -6917 0
6775 6788 -6919 0
6775 6790 -6921 0
6775 6792 -6923 0
6775 6794 -6925 0
6775 6796 -6927 0
6775 6798 -6929 0
6777 -6915 0
6777 6785 -6917 0
6777 6786 -6919 0
6777 6788 -6921 0
6777 6790 -6923 0
6777 6792 -6925 0
6777 6794 -6927 0
6777 6796 -6929 0
6777 6798 -6931 0
6779 -6917 0
6779 6785 -6919 0
6779 6786 -6921 0
6779 6788 -6923 0
6779 6790 -6925 0
6779 6792 -6927 0
6779 6794 -6929 0
6779 6796 -6931 0
6779 6798 -6933 0
6781 -6919 0
6781 6785 -6921 0
6781 6786 -6923 0
6781 6788 -6925 0
6781 6790 -6927 0
6781 6792 -6929 0
6781 6794 -6931 0
6781 6796 -6933 0
6781 6798 -6935 0
6783 -6921 0
6783 6785 -6923 0
6783 6786 -6925 0
6783 6788 -6927 0
6783 6790 -6929 0
6783 6792 -6931 0
6783 6794 -6933 0
6783 6796 -6935 0
6783 6798 -6937 0
c (0<=(aux1305 + aux1306 - aux1311))
-6798 6937 0
-6796 6935 0
-6794 6933 0
-6792 6931 0
-6790 6929 0
-6788 6927 0
-6786 6925 0
-6785 6923 0
-6783 6937 0
-6783 -6798 6935 0
-6783 -6796 6933 0
-6783 -6794 6931 0
-6783 -6792 6929 0
-6783 -6790 6927 0
-6783 -6788 6925 0
-6783 -6786 6923 0
-6783 -6785 6921 0
-6781 6935 0
-6781 -6798 6933 0
-6781 -6796 6931 0
-6781 -6794 6929 0
-6781 -6792 6927 0
-6781 -6790 6925 0
-6781 -6788 6923 0
-6781 -6786 6921 0
-6781 -6785 6919 0
-6779 6933 0
-6779 -6798 6931 0
-6779 -6796 6929 0
-6779 -6794 6927 0
-6779 -6792 6925 0
-6779 -6790 6923 0
-6779 -6788 6921 0
-6779 -6786 6919 0
-6779 -6785 6917 0
-6777 6931 0
-6777 -6798 6929 0
-6777 -6796 6927 0
-6777 -6794 6925 0
-6777 -6792 6923 0
-6777 -6790 6921 0
-6777 -6788 6919 0
-6777 -6786 6917 0
-6777 -6785 6915 0
-6775 6929 0
-6775 -6798 6927 0
-6775 -6796 6925 0
-6775 -6794 6923 0
-6775 -6792 6921 0
-6775 -6790 6919 0
-6775 -6788 6917 0
-6775 -6786 6915 0
-6775 -6785 6913 0
-6773 6927 0
-6773 -6798 6925 0
-6773 -6796 6923 0
-6773 -6794 6921 0
-6773 -6792 6919 0
-6773 -6790 6917 0
-6773 -6788 6915 0
-6773 -6786 6913 0
-6773 -6785 6911 0
-6771 6925 0
-6771 -6798 6923 0
-6771 -6796 6921 0
-6771 -6794 6919 0
-6771 -6792 6917 0
-6771 -6790 6915 0
-6771 -6788 6913 0
-6771 -6786 6911 0
-6771 -6785 6909 0
-6770 6923 0
-6770 -6798 6921 0
-6770 -6796 6919 0
-6770 -6794 6917 0
-6770 -6792 6915 0
-6770 -6790 6913 0
-6770 -6788 6911 0
-6770 -6786 6909 0
-6770 -6785 6908 0
c ((aux1309 + aux1311 - aux1312)<=0)
6908 -6939 0
6909 -6940 0
6911 -6942 0
6913 -6944 0
6915 -6946 0
6917 -6948 0
6919 -6950 0
6921 -6952 0
6923 -6954 0
6925 -6956 0
6927 -6958 0
6929 -6960 0
6931 -6962 0
6933 -6964 0
6935 -6966 0
6937 -6968 0
6846 -6939 0
6846 6908 -6940 0
6846 6909 -6942 0
6846 6911 -6944 0
6846 6913 -6946 0
6846 6915 -6948 0
6846 6917 -6950 0
6846 6919 -6952 0
6846 6921 -6954 0
6846 6923 -6956 0
6846 6925 -6958 0
6846 6927 -6960 0
6846 6929 -6962 0
6846 6931 -6964 0
6846 6933 -6966 0
6846 6935 -6968 0
6846 6937 -6970 0
6847 -6940 0
6847 6908 -6942 0
6847 6909 -6944 0
6847 6911 -6946 0
6847 6913 -6948 0
6847 6915 -6950 0
6847 6917 -6952 0
6847 6919 -6954 0
6847 6921 -6956 0
6847 6923 -6958 0
6847 6925 -6960 0
6847 6927 -6962 0
6847 6929 -6964 0
6847 6931 -6966 0
6847 6933 -6968 0
6847 6935 -6970 0
6847 6937 -6972 0
6849 -6942 0
6849 6908 -6944 0
6849 6909 -6946 0
6849 6911 -6948 0
6849 6913 -6950 0
6849 6915 -6952 0
6849 6917 -6954 0
6849 6919 -6956 0
6849 6921 -6958 0
6849 6923 -6960 0
6849 6925 -6962 0
6849 6927 -6964 0
6849 6929 -6966 0
6849 6931 -6968 0
6849 6933 -6970 0
6849 6935 -6972 0
6849 6937 -6974 0
6851 -6944 0
6851 6908 -6946 0
6851 6909 -6948 0
6851 6911 -6950 0
6851 6913 -6952 0
6851 6915 -6954 0
6851 6917 -6956 0
6851 6919 -6958 0
6851 6921 -6960 0
6851 6923 -6962 0
6851 6925 -6964 0
6851 6927 -6966 0
6851 6929 -6968 0
6851 6931 -6970 0
6851 6933 -6972 0
6851 6935 -6974 0
6851 6937 -6976 0
6853 -6946 0
6853 6908 -6948 0
6853 6909 -6950 0
6853 6911 -6952 0
6853 6913 -6954 0
6853 6915 -6956 0
6853 6917 -6958 0
6853 6919 -6960 0
6853 6921 -6962 0
6853 6923 -6964 0
6853 6925 -6966 0
6853 6927 -6968 0
6853 6929 -6970 0
6853 6931 -6972 0
6853 6933 -6974 0
6853 6935 -6976 0
6853 6937 -6978 0
6855 -6948 0
6855 6908 -6950 0
6855 6909 -6952 0
6855 6911 -6954 0
6855 6913 -6956 0
6855 6915 -6958 0
6855 6917 -6960 0
6855 6919 -6962 0
6855 6921 -6964 0
6855 6923 -6966 0
6855 6925 -6968 0
6855 6927 -6970 0
6855 6929 -6972 0
6855 6931 -6974 0
6855 6933 -6976 0
6855 6935 -6978 0
6855 6937 -6980 0
6857 -6950 0
6857 6908 -6952 0
6857 6909 -6954 0
6857 6911 -6956 0
6857 6913 -6958 0
6857 6915 -6960 0
6857 6917 -6962 0
6857 6919 -6964 0
6857 6921 -6966 0
6857 6923 -6968 0
6857 6925 -6970 0
6857 6927 -6972 0
6857 6929 -6974 0
6857 6931 -6976 0
6857 6933 -6978 0
6857 6935 -6980 0
6857 6937 -6982 0
6859 -6952 0
6859 6908 -6954 0
6859 6909 -6956 0
6859 6911 -6958 0
6859 6913 -6960 0
6859 6915 -6962 0
6859 6917 -6964 0
6859 6919 -6966 0
6859 6921 -6968 0
6859 6923 -6970 0
6859 6925 -6972 0
6859 6927 -6974 0
6859 6929 -6976 0
6859 6931 -6978 0
6859 6933 -6980 0
6859 6935 -6982 0
6859 6937 -6984 0
6861 -6954 0
6861 6908 -6956 0
6861 6909 -6958 0
6861 6911 -6960 0
6861 6913 -6962 0
6861 6915 -6964 0
6861 6917 -6966 0
6861 6919 -6968 0
6861 6921 -6970 0
6861 6923 -6972 0
6861 6925 -6974 0
6861 6927 -6976 0
6861 6929 -6978 0
6861 6931 -6980 0
6861 6933 -6982 0
6861 6935 -6984 0
6861 6937 -6986 0
6863 -6956 0
6863 6908 -6958 0
6863 6909 -6960 0
6863 6911 -6962 0
6863 6913 -6964 0
6863 6915 -6966 0
6863 6917 -6968 0
6863 6919 -6970 0
6863 6921 -6972 0
6863 6923 -6974 0
6863 6925 -6976 0
6863 6927 -6978 0
6863 6929 -6980 0
6863 6931 -6982 0
6863 6933 -6984 0
6863 6935 -6986 0
6863 6937 -6988 0
6865 -6958 0
6865 6908 -6960 0
6865 6909 -6962 0
6865 6911 -6964 0
6865 6913 -6966 0
6865 6915 -6968 0
6865 6917 -6970 0
6865 6919 -6972 0
6865 6921 -6974 0
6865 6923 -6976 0
6865 6925 -6978 0
6865 6927 -6980 0
6865 6929 -6982 0
6865 6931 -6984 0
6865 6933 -6986 0
6865 6935 -6988 0
6865 6937 -6990 0
6867 -6960 0
6867 6908 -6962 0
6867 6909 -6964 0
6867 6911 -6966 0
6867 6913 -6968 0
6867 6915 -6970 0
6867 6917 -6972 0
6867 6919 -6974 0
6867 6921 -6976 0
6867 6923 -6978 0
6867 6925 -6980 0
6867 6927 -6982 0
6867 6929 -6984 0
6867 6931 -6986 0
6867 6933 -6988 0
6867 6935 -6990 0
6867 6937 -6992 0
6869 -6962 0
6869 6908 -6964 0
6869 6909 -6966 0
6869 6911 -6968 0
6869 6913 -6970 0
6869 6915 -6972 0
6869 6917 -6974 0
6869 6919 -6976 0
6869 6921 -6978 0
6869 6923 -6980 0
6869 6925 -6982 0
6869 6927 -6984 0
6869 6929 -6986 0
6869 6931 -6988 0
6869 6933 -6990 0
6869 6935 -6992 0
6869 6937 -6994 0
6871 -6964 0
6871 6908 -6966 0
6871 6909 -6968 0
6871 6911 -6970 0
6871 6913 -6972 0
6871 6915 -6974 0
6871 6917 -6976 0
6871 6919 -6978 0
6871 6921 -6980 0
6871 6923 -6982 0
6871 6925 -6984 0
6871 6927 -6986 0
6871 6929 -6988 0
6871 6931 -6990 0
6871 6933 -6992 0
6871 6935 -6994 0
6871 6937 -6996 0
6873 -6966 0
6873 6908 -6968 0
6873 6909 -6970 0
6873 6911 -6972 0
6873 6913 -6974 0
6873 6915 -6976 0
6873 6917 -6978 0
6873 6919 -6980 0
6873 6921 -6982 0
6873 6923 -6984 0
6873 6925 -6986 0
6873 6927 -6988 0
6873 6929 -6990 0
6873 6931 -6992 0
6873 6933 -6994 0
6873 6935 -6996 0
6873 6937 -6998 0
6875 -6968 0
6875 6908 -6970 0
6875 6909 -6972 0
6875 6911 -6974 0
6875 6913 -6976 0
6875 6915 -6978 0
6875 6917 -6980 0
6875 6919 -6982 0
6875 6921 -6984 0
6875 6923 -6986 0
6875 6925 -6988 0
6875 6927 -6990 0
6875 6929 -6992 0
6875 6931 -6994 0
6875 6933 -6996 0
6875 6935 -6998 0
6875 6937 -7000 0
c (0<=(aux1309 + aux1311 - aux1312))
-6937 7000 0
-6935 6998 0
-6933 6996 0
-6931 6994 0
-6929 6992 0
-6927 6990 0
-6925 6988 0
-6923 6986 0
-6921 6984 0
-6919 6982 0
-6917 6980 0
-6915 6978 0
-6913 6976 0
-6911 6974 0
-6909 6972 0
-6908 6970 0
-6875 7000 0
-6875 -6937 6998 0
-6875 -6935 6996 0
-6875 -6933 6994 0
-6875 -6931 6992 0
-6875 -6929 6990 0
-6875 -6927 6988 0
-6875 -6925 6986 0
-6875 -6923 6984 0
-6875 -6921 6982 0
-6875 -6919 6980 0
-6875 -6917 6978 0
-6875 -6915 6976 0
-6875 -6913 6974 0
-6875 -6911 6972 0
-6875 -6909 6970 0
-6875 -6908 6968 0
-6873 6998 0
-6873 -6937 6996 0
-6873 -6935 6994 0
-6873 -6933 6992 0
-6873 -6931 6990 0
-6873 -6929 6988 0
-6873 -6927 6986 0
-6873 -6925 6984 0
-6873 -6923 6982 0
-6873 -6921 6980 0
-6873 -6919 6978 0
-6873 -6917 6976 0
-6873 -6915 6974 0
-6873 -6913 6972 0
-6873 -6911 6970 0
-6873 -6909 6968 0
-6873 -6908 6966 0
-6871 6996 0
-6871 -6937 6994 0
-6871 -6935 6992 0
-6871 -6933 6990 0
-6871 -6931 6988 0
-6871 -6929 6986 0
-6871 -6927 6984 0
-6871 -6925 6982 0
-6871 -6923 6980 0
-6871 -6921 6978 0
-6871 -6919 6976 0
-6871 -6917 6974 0
-6871 -6915 6972 0
-6871 -6913 6970 0
-6871 -6911 6968 0
-6871 -6909 6966 0
-6871 -6908 6964 0
-6869 6994 0
-6869 -6937 6992 0
-6869 -6935 6990 0
-6869 -6933 6988 0
-6869 -6931 6986 0
-6869 -6929 6984 0
-6869 -6927 6982 0
-6869 -6925 6980 0
-6869 -6923 6978 0
-6869 -6921 6976 0
-6869 -6919 6974 0
-6869 -6917 6972 0
-6869 -6915 6970 0
-6869 -6913 6968 0
-6869 -6911 6966 0
-6869 -6909 6964 0
-6869 -6908 6962 0
-6867 6992 0
-6867 -6937 6990 0
-6867 -6935 6988 0
-6867 -6933 6986 0
-6867 -6931 6984 0
-6867 -6929 6982 0
-6867 -6927 6980 0
-6867 -6925 6978 0
-6867 -6923 6976 0
-6867 -6921 6974 0
-6867 -6919 6972 0
-6867 -6917 6970 0
-6867 -6915 6968 0
-6867 -6913 6966 0
-6867 -6911 6964 0
-6867 -6909 6962 0
-6867 -6908 6960 0
-6865 6990 0
-6865 -6937 6988 0
-6865 -6935 6986 0
-6865 -6933 6984 0
-6865 -6931 6982 0
-6865 -6929 6980 0
-6865 -6927 6978 0
-6865 -6925 6976 0
-6865 -6923 6974 0
-6865 -6921 6972 0
-6865 -6919 6970 0
-6865 -6917 6968 0
-6865 -6915 6966 0
-6865 -6913 6964 0
-6865 -6911 6962 0
-6865 -6909 6960 0
-6865 -6908 6958 0
-6863 6988 0
-6863 -6937 6986 0
-6863 -6935 6984 0
-6863 -6933 6982 0
-6863 -6931 6980 0
-6863 -6929 6978 0
-6863 -6927 6976 0
-6863 -6925 6974 0
-6863 -6923 6972 0
-6863 -6921 6970 0
-6863 -6919 6968 0
-6863 -6917 6966 0
-6863 -6915 6964 0
-6863 -6913 6962 0
-6863 -6911 6960 0
-6863 -6909 6958 0
-6863 -6908 6956 0
-6861 6986 0
-6861 -6937 6984 0
-6861 -6935 6982 0
-6861 -6933 6980 0
-6861 -6931 6978 0
-6861 -6929 6976 0
-6861 -6927 6974 0
-6861 -6925 6972 0
-6861 -6923 6970 0
-6861 -6921 6968 0
-6861 -6919 6966 0
-6861 -6917 6964 0
-6861 -6915 6962 0
-6861 -6913 6960 0
-6861 -6911 6958 0
-6861 -6909 6956 0
-6861 -6908 6954 0
-6859 6984 0
-6859 -6937 6982 0
-6859 -6935 6980 0
-6859 -6933 6978 0
-6859 -6931 6976 0
-6859 -6929 6974 0
-6859 -6927 6972 0
-6859 -6925 6970 0
-6859 -6923 6968 0
-6859 -6921 6966 0
-6859 -6919 6964 0
-6859 -6917 6962 0
-6859 -6915 6960 0
-6859 -6913 6958 0
-6859 -6911 6956 0
-6859 -6909 6954 0
-6859 -6908 6952 0
-6857 6982 0
-6857 -6937 6980 0
-6857 -6935 6978 0
-6857 -6933 6976 0
-6857 -6931 6974 0
-6857 -6929 6972 0
-6857 -6927 6970 0
-6857 -6925 6968 0
-6857 -6923 6966 0
-6857 -6921 6964 0
-6857 -6919 6962 0
-6857 -6917 6960 0
-6857 -6915 6958 0
-6857 -6913 6956 0
-6857 -6911 6954 0
-6857 -6909 6952 0
-6857 -6908 6950 0
-6855 6980 0
-6855 -6937 6978 0
-6855 -6935 6976 0
-6855 -6933 6974 0
-6855 -6931 6972 0
-6855 -6929 6970 0
-6855 -6927 6968 0
-6855 -6925 6966 0
-6855 -6923 6964 0
-6855 -6921 6962 0
-6855 -6919 6960 0
-6855 -6917 6958 0
-6855 -6915 6956 0
-6855 -6913 6954 0
-6855 -6911 6952 0
-6855 -6909 6950 0
-6855 -6908 6948 0
-6853 6978 0
-6853 -6937 6976 0
-6853 -6935 6974 0
-6853 -6933 6972 0
-6853 -6931 6970 0
-6853 -6929 6968 0
-6853 -6927 6966 0
-6853 -6925 6964 0
-6853 -6923 6962 0
-6853 -6921 6960 0
-6853 -6919 6958 0
-6853 -6917 6956 0
-6853 -6915 6954 0
-6853 -6913 6952 0
-6853 -6911 6950 0
-6853 -6909 6948 0
-6853 -6908 6946 0
-6851 6976 0
-6851 -6937 6974 0
-6851 -6935 6972 0
-6851 -6933 6970 0
-6851 -6931 6968 0
-6851 -6929 6966 0
-6851 -6927 6964 0
-6851 -6925 6962 0
-6851 -6923 6960 0
-6851 -6921 6958 0
-6851 -6919 6956 0
-6851 -6917 6954 0
-6851 -6915 6952 0
-6851 -6913 6950 0
-6851 -6911 6948 0
-6851 -6909 6946 0
-6851 -6908 6944 0
-6849 6974 0
-6849 -6937 6972 0
-6849 -6935 6970 0
-6849 -6933 6968 0
-6849 -6931 6966 0
-6849 -6929 6964 0
-6849 -6927 6962 0
-6849 -6925 6960 0
-6849 -6923 6958 0
-6849 -6921 6956 0
-6849 -6919 6954 0
-6849 -6917 6952 0
-6849 -6915 6950 0
-6849 -6913 6948 0
-6849 -6911 6946 0
-6849 -6909 6944 0
-6849 -6908 6942 0
-6847 6972 0
-6847 -6937 6970 0
-6847 -6935 6968 0
-6847 -6933 6966 0
-6847 -6931 6964 0
-6847 -6929 6962 0
-6847 -6927 6960 0
-6847 -6925 6958 0
-6847 -6923 6956 0
-6847 -6921 6954 0
-6847 -6919 6952 0
-6847 -6917 6950 0
-6847 -6915 6948 0
-6847 -6913 6946 0
-6847 -6911 6944 0
-6847 -6909 6942 0
-6847 -6908 6940 0
-6846 6970 0
-6846 -6937 6968 0
-6846 -6935 6966 0
-6846 -6933 6964 0
-6846 -6931 6962 0
-6846 -6929 6960 0
-6846 -6927 6958 0
-6846 -6925 6956 0
-6846 -6923 6954 0
-6846 -6921 6952 0
-6846 -6919 6950 0
-6846 -6917 6948 0
-6846 -6915 6946 0
-6846 -6913 6944 0
-6846 -6911 6942 0
-6846 -6909 6940 0
-6846 -6908 6939 0
c ((aux1308 + aux1310 - aux1313)<=0)
6877 -7002 0
6878 -7003 0
6880 -7005 0
6882 -7007 0
6884 -7009 0
6886 -7011 0
6888 -7013 0
6890 -7015 0
6892 -7017 0
6894 -7019 0
6896 -7021 0
6898 -7023 0
6900 -7025 0
6902 -7027 0
6904 -7029 0
6906 -7031 0
6815 -7002 0
6815 6877 -7003 0
6815 6878 -7005 0
6815 6880 -7007 0
6815 6882 -7009 0
6815 6884 -7011 0
6815 6886 -7013 0
6815 6888 -7015 0
6815 6890 -7017 0
6815 6892 -7019 0
6815 6894 -7021 0
6815 6896 -7023 0
6815 6898 -7025 0
6815 6900 -7027 0
6815 6902 -7029 0
6815 6904 -7031 0
6815 6906 -7033 0
6816 -7003 0
6816 6877 -7005 0
6816 6878 -7007 0
6816 6880 -7009 0
6816 6882 -7011 0
6816 6884 -7013 0
6816 6886 -7015 0
6816 6888 -7017 0
6816 6890 -7019 0
6816 6892 -7021 0
6816 6894 -7023 0
6816 6896 -7025 0
6816 6898 -7027 0
6816 6900 -7029 0
6816 6902 -7031 0
6816 6904 -7033 0
6816 6906 -7035 0
6818 -7005 0
6818 6877 -7007 0
6818 6878 -7009 0
6818 6880 -7011 0
6818 6882 -7013 0
6818 6884 -7015 0
6818 6886 -7017 0
6818 6888 -7019 0
6818 6890 -7021 0
6818 6892 -7023 0
6818 6894 -7025 0
6818 6896 -7027 0
6818 6898 -7029 0
6818 6900 -7031 0
6818 6902 -7033 0
6818 6904 -7035 0
6818 6906 -7037 0
6820 -7007 0
6820 6877 -7009 0
6820 6878 -7011 0
6820 6880 -7013 0
6820 6882 -7015 0
6820 6884 -7017 0
6820 6886 -7019 0
6820 6888 -7021 0
6820 6890 -7023 0
6820 6892 -7025 0
6820 6894 -7027 0
6820 6896 -7029 0
6820 6898 -7031 0
6820 6900 -7033 0
6820 6902 -7035 0
6820 6904 -7037 0
6820 6906 -7039 0
6822 -7009 0
6822 6877 -7011 0
6822 6878 -7013 0
6822 6880 -7015 0
6822 6882 -7017 0
6822 6884 -7019 0
6822 6886 -7021 0
6822 6888 -7023 0
6822 6890 -7025 0
6822 6892 -7027 0
6822 6894 -7029 0
6822 6896 -7031 0
6822 6898 -7033 0
6822 6900 -7035 0
6822 6902 -7037 0
6822 6904 -7039 0
6822 6906 -7041 0
6824 -7011 0
6824 6877 -7013 0
6824 6878 -7015 0
6824 6880 -7017 0
6824 6882 -7019 0
6824 6884 -7021 0
6824 6886 -7023 0
6824 6888 -7025 0
6824 6890 -7027 0
6824 6892 -7029 0
6824 6894 -7031 0
6824 6896 -7033 0
6824 6898 -7035 0
6824 6900 -7037 0
6824 6902 -7039 0
6824 6904 -7041 0
6824 6906 -7043 0
6826 -7013 0
6826 6877 -7015 0
6826 6878 -7017 0
6826 6880 -7019 0
6826 6882 -7021 0
6826 6884 -7023 0
6826 6886 -7025 0
6826 6888 -7027 0
6826 6890 -7029 0
6826 6892 -7031 0
6826 6894 -7033 0
6826 6896 -7035 0
6826 6898 -7037 0
6826 6900 -7039 0
6826 6902 -7041 0
6826 6904 -7043 0
6826 6906 -7045 0
6828 -7015 0
6828 6877 -7017 0
6828 6878 -7019 0
6828 6880 -7021 0
6828 6882 -7023 0
6828 6884 -7025 0
6828 6886 -7027 0
6828 6888 -7029 0
6828 6890 -7031 0
6828 6892 -7033 0
6828 6894 -7035 0
6828 6896 -7037 0
6828 6898 -7039 0
6828 6900 -7041 0
6828 6902 -7043 0
6828 6904 -7045 0
6828 6906 -7047 0
6830 -7017 0
6830 6877 -7019 0
6830 6878 -7021 0
6830 6880 -7023 0
6830 6882 -7025 0
6830 6884 -7027 0
6830 6886 -7029 0
6830 6888 -7031 0
6830 6890 -7033 0
6830 6892 -7035 0
6830 6894 -7037 0
6830 6896 -7039 0
6830 6898 -7041 0
6830 6900 -7043 0
6830 6902 -7045 0
6830 6904 -7047 0
6830 6906 -7049 0
6832 -7019 0
6832 6877 -7021 0
6832 6878 -7023 0
6832 6880 -7025 0
6832 6882 -7027 0
6832 6884 -7029 0
6832 6886 -7031 0
6832 6888 -7033 0
6832 6890 -7035 0
6832 6892 -7037 0
6832 6894 -7039 0
6832 6896 -7041 0
6832 6898 -7043 0
6832 6900 -7045 0
6832 6902 -7047 0
6832 6904 -7049 0
6832 6906 -7051 0
6834 -7021 0
6834 6877 -7023 0
6834 6878 -7025 0
6834 6880 -7027 0
6834 6882 -7029 0
6834 6884 -7031 0
6834 6886 -7033 0
6834 6888 -7035 0
6834 6890 -7037 0
6834 6892 -7039 0
6834 6894 -7041 0
6834 6896 -7043 0
6834 6898 -7045 0
6834 6900 -7047 0
6834 6902 -7049 0
6834 6904 -7051 0
6834 6906 -7053 0
6836 -7023 0
6836 6877 -7025 0
6836 6878 -7027 0
6836 6880 -7029 0
6836 6882 -7031 0
6836 6884 -7033 0
6836 6886 -7035 0
6836 6888 -7037 0
6836 6890 -7039 0
6836 6892 -7041 0
6836 6894 -7043 0
6836 6896 -7045 0
6836 6898 -7047 0
6836 6900 -7049 0
6836 6902 -7051 0
6836 6904 -7053 0
6836 6906 -7055 0
6838 -7025 0
6838 6877 -7027 0
6838 6878 -7029 0
6838 6880 -7031 0
6838 6882 -7033 0
6838 6884 -7035 0
6838 6886 -7037 0
6838 6888 -7039 0
6838 6890 -7041 0
6838 6892 -7043 0
6838 6894 -7045 0
6838 6896 -7047 0
6838 6898 -7049 0
6838 6900 -7051 0
6838 6902 -7053 0
6838 6904 -7055 0
6838 6906 -7057 0
6840 -7027 0
6840 6877 -7029 0
6840 6878 -7031 0
6840 6880 -7033 0
6840 6882 -7035 0
6840 6884 -7037 0
6840 6886 -7039 0
6840 6888 -7041 0
6840 6890 -7043 0
6840 6892 -7045 0
6840 6894 -7047 0
6840 6896 -7049 0
6840 6898 -7051 0
6840 6900 -7053 0
6840 6902 -7055 0
6840 6904 -7057 0
6840 6906 -7059 0
6842 -7029 0
6842 6877 -7031 0
6842 6878 -7033 0
6842 6880 -7035 0
6842 6882 -7037 0
6842 6884 -7039 0
6842 6886 -7041 0
6842 6888 -7043 0
6842 6890 -7045 0
6842 6892 -7047 0
6842 6894 -7049 0
6842 6896 -7051 0
6842 6898 -7053 0
6842 6900 -7055 0
6842 6902 -7057 0
6842 6904 -7059 0
6842 6906 -7061 0
6844 -7031 0
6844 6877 -7033 0
6844 6878 -7035 0
6844 6880 -7037 0
6844 6882 -7039 0
6844 6884 -7041 0
6844 6886 -7043 0
6844 6888 -7045 0
6844 6890 -7047 0
6844 6892 -7049 0
6844 6894 -7051 0
6844 6896 -7053 0
6844 6898 -7055 0
6844 6900 -7057 0
6844 6902 -7059 0
6844 6904 -7061 0
6844 6906 -7063 0
c (0<=(aux1308 + aux1310 - aux1313))
-6906 7063 0
-6904 7061 0
-6902 7059 0
-6900 7057 0
-6898 7055 0
-6896 7053 0
-6894 7051 0
-6892 7049 0
-6890 7047 0
-6888 7045 0
-6886 7043 0
-6884 7041 0
-6882 7039 0
-6880 7037 0
-6878 7035 0
-6877 7033 0
-6844 7063 0
-6844 -6906 7061 0
-6844 -6904 7059 0
-6844 -6902 7057 0
-6844 -6900 7055 0
-6844 -6898 7053 0
-6844 -6896 7051 0
-6844 -6894 7049 0
-6844 -6892 7047 0
-6844 -6890 7045 0
-6844 -6888 7043 0
-6844 -6886 7041 0
-6844 -6884 7039 0
-6844 -6882 7037 0
-6844 -6880 7035 0
-6844 -6878 7033 0
-6844 -6877 7031 0
-6842 7061 0
-6842 -6906 7059 0
-6842 -6904 7057 0
-6842 -6902 7055 0
-6842 -6900 7053 0
-6842 -6898 7051 0
-6842 -6896 7049 0
-6842 -6894 7047 0
-6842 -6892 7045 0
-6842 -6890 7043 0
-6842 -6888 7041 0
-6842 -6886 7039 0
-6842 -6884 7037 0
-6842 -6882 7035 0
-6842 -6880 7033 0
-6842 -6878 7031 0
-6842 -6877 7029 0
-6840 7059 0
-6840 -6906 7057 0
-6840 -6904 7055 0
-6840 -6902 7053 0
-6840 -6900 7051 0
-6840 -6898 7049 0
-6840 -6896 7047 0
-6840 -6894 7045 0
-6840 -6892 7043 0
-6840 -6890 7041 0
-6840 -6888 7039 0
-6840 -6886 7037 0
-6840 -6884 7035 0
-6840 -6882 7033 0
-6840 -6880 7031 0
-6840 -6878 7029 0
-6840 -6877 7027 0
-6838 7057 0
-6838 -6906 7055 0
-6838 -6904 7053 0
-6838 -6902 7051 0
-6838 -6900 7049 0
-6838 -6898 7047 0
-6838 -6896 7045 0
-6838 -6894 7043 0
-6838 -6892 7041 0
-6838 -6890 7039 0
-6838 -6888 7037 0
-6838 -6886 7035 0
-6838 -6884 7033 0
-6838 -6882 7031 0
-6838 -6880 7029 0
-6838 -6878 7027 0
-6838 -6877 7025 0
-6836 7055 0
-6836 -6906 7053 0
-6836 -6904 7051 0
-6836 -6902 7049 0
-6836 -6900 7047 0
-6836 -6898 7045 0
-6836 -6896 7043 0
-6836 -6894 7041 0
-6836 -6892 7039 0
-6836 -6890 7037 0
-6836 -6888 7035 0
-6836 -6886 7033 0
-6836 -6884 7031 0
-6836 -6882 7029 0
-6836 -6880 7027 0
-6836 -6878 7025 0
-6836 -6877 7023 0
-6834 7053 0
-6834 -6906 7051 0
-6834 -6904 7049 0
-6834 -6902 7047 0
-6834 -6900 7045 0
-6834 -6898 7043 0
-6834 -6896 7041 0
-6834 -6894 7039 0
-6834 -6892 7037 0
-6834 -6890 7035 0
-6834 -6888 7033 0
-6834 -6886 7031 0
-6834 -6884 7029 0
-6834 -6882 7027 0
-6834 -6880 7025 0
-6834 -6878 7023 0
-6834 -6877 7021 0
-6832 7051 0
-6832 -6906 7049 0
-6832 -6904 7047 0
-6832 -6902 7045 0
-6832 -6900 7043 0
-6832 -6898 7041 0
-6832 -6896 7039 0
-6832 -6894 7037 0
-6832 -6892 7035 0
-6832 -6890 7033 0
-6832 -6888 7031 0
-6832 -6886 7029 0
-6832 -6884 7027 0
-6832 -6882 7025 0
-6832 -6880 7023 0
-6832 -6878 7021 0
-6832 -6877 7019 0
-6830 7049 0
-6830 -6906 7047 0
-6830 -6904 7045 0
-6830 -6902 7043 0
-6830 -6900 7041 0
-6830 -6898 7039 0
-6830 -6896 7037 0
-6830 -6894 7035 0
-6830 -6892 7033 0
-6830 -6890 7031 0
-6830 -6888 7029 0
-6830 -6886 7027 0
-6830 -6884 7025 0
-6830 -6882 7023 0
-6830 -6880 7021 0
-6830 -6878 7019 0
-6830 -6877 7017 0
-6828 7047 0
-6828 -6906 7045 0
-6828 -6904 7043 0
-6828 -6902 7041 0
-6828 -6900 7039 0
-6828 -6898 7037 0
-6828 -6896 7035 0
-6828 -6894 7033 0
-6828 -6892 7031 0
-6828 -6890 7029 0
-6828 -6888 7027 0
-6828 -6886 7025 0
-6828 -6884 7023 0
-6828 -6882 7021 0
-6828 -6880 7019 0
-6828 -6878 7017 0
-6828 -6877 7015 0
-6826 7045 0
-6826 -6906 7043 0
-6826 -6904 7041 0
-6826 -6902 7039 0
-6826 -6900 7037 0
-6826 -6898 7035 0
-6826 -6896 7033 0
-6826 -6894 7031 0
-6826 -6892 7029 0
-6826 -6890 7027 0
-6826 -6888 7025 0
-6826 -6886 7023 0
-6826 -6884 7021 0
-6826 -6882 7019 0
-6826 -6880 7017 0
-6826 -6878 7015 0
-6826 -6877 7013 0
-6824 7043 0
-6824 -6906 7041 0
-6824 -6904 7039 0
-6824 -6902 7037 0
-6824 -6900 7035 0
-6824 -6898 7033 0
-6824 -6896 7031 0
-6824 -6894 7029 0
-6824 -6892 7027 0
-6824 -6890 7025 0
-6824 -6888 7023 0
-6824 -6886 7021 0
-6824 -6884 7019 0
-6824 -6882 7017 0
-6824 -6880 7015 0
-6824 -6878 7013 0
-6824 -6877 7011 0
-6822 7041 0
-6822 -6906 7039 0
-6822 -6904 7037 0
-6822 -6902 7035 0
-6822 -6900 7033 0
-6822 -6898 7031 0
-6822 -6896 7029 0
-6822 -6894 7027 0
-6822 -6892 7025 0
-6822 -6890 7023 0
-6822 -6888 7021 0
-6822 -6886 7019 0
-6822 -6884 7017 0
-6822 -6882 7015 0
-6822 -6880 7013 0
-6822 -6878 7011 0
-6822 -6877 7009 0
-6820 7039 0
-6820 -6906 7037 0
-6820 -6904 7035 0
-6820 -6902 7033 0
-6820 -6900 7031 0
-6820 -6898 7029 0
-6820 -6896 7027 0
-6820 -6894 7025 0
-6820 -6892 7023 0
-6820 -6890 7021 0
-6820 -6888 7019 0
-6820 -6886 7017 0
-6820 -6884 7015 0
-6820 -6882 7013 0
-6820 -6880 7011 0
-6820 -6878 7009 0
-6820 -6877 7007 0
-6818 7037 0
-6818 -6906 7035 0
-6818 -6904 7033 0
-6818 -6902 7031 0
-6818 -6900 7029 0
-6818 -6898 7027 0
-6818 -6896 7025 0
-6818 -6894 7023 0
-6818 -6892 7021 0
-6818 -6890 7019 0
-6818 -6888 7017 0
-6818 -6886 7015 0
-6818 -6884 7013 0
-6818 -6882 7011 0
-6818 -6880 7009 0
-6818 -6878 7007 0
-6818 -6877 7005 0
-6816 7035 0
-6816 -6906 7033 0
-6816 -6904 7031 0
-6816 -6902 7029 0
-6816 -6900 7027 0
-6816 -6898 7025 0
-6816 -6896 7023 0
-6816 -6894 7021 0
-6816 -6892 7019 0
-6816 -6890 7017 0
-6816 -6888 7015 0
-6816 -6886 7013 0
-6816 -6884 7011 0
-6816 -6882 7009 0
-6816 -6880 7007 0
-6816 -6878 7005 0
-6816 -6877 7003 0
-6815 7033 0
-6815 -6906 7031 0
-6815 -6904 7029 0
-6815 -6902 7027 0
-6815 -6900 7025 0
-6815 -6898 7023 0
-6815 -6896 7021 0
-6815 -6894 7019 0
-6815 -6892 7017 0
-6815 -6890 7015 0
-6815 -6888 7013 0
-6815 -6886 7011 0
-6815 -6884 7009 0
-6815 -6882 7007 0
-6815 -6880 7005 0
-6815 -6878 7003 0
-6815 -6877 7002 0
c ((SATLiteral(174) + SATLiteral(181) - aux1314)<=0)
-181 -7065 0
-174 -7065 0
-174 -181 -7066 0
c (0<=(SATLiteral(174) + SATLiteral(181) - aux1314))
181 7066 0
174 7066 0
174 181 7065 0
c ((SATLiteral(195) + SATLiteral(223) - aux1315)<=0)
-223 -7068 0
-195 -7068 0
-195 -223 -7069 0
c (0<=(SATLiteral(195) + SATLiteral(223) - aux1315))
223 7069 0
195 7069 0
195 223 7068 0
c ((SATLiteral(111) - aux1316 + SATLiteral(328))<=0)
-328 -7071 0
-111 -7071 0
-111 -328 -7072 0
c (0<=(SATLiteral(111) - aux1316 + SATLiteral(328)))
328 7072 0
111 7072 0
111 328 7071 0
c (( - aux1317 + SATLiteral(279) + SATLiteral(321))<=0)
-321 -7074 0
-279 -7074 0
-279 -321 -7075 0
c (0<=( - aux1317 + SATLiteral(279) + SATLiteral(321)))
321 7075 0
279 7075 0
279 321 7074 0
c (( - aux1318 + SATLiteral(314) + SATLiteral(335))<=0)
-335 -7077 0
-314 -7077 0
-314 -335 -7078 0
c (0<=( - aux1318 + SATLiteral(314) + SATLiteral(335)))
335 7078 0
314 7078 0
314 335 7077 0
c (( - aux1319 + SATLiteral(118) + SATLiteral(307))<=0)
-307 -7080 0
-118 -7080 0
-118 -307 -7081 0
c (0<=( - aux1319 + SATLiteral(118) + SATLiteral(307)))
307 7081 0
118 7081 0
118 307 7080 0
c ((SATLiteral(342) - aux1320 + SATLiteral(300))<=0)
-300 -7083 0
-342 -7083 0
-342 -300 -7084 0
c (0<=(SATLiteral(342) - aux1320 + SATLiteral(300)))
300 7084 0
342 7084 0
342 300 7083 0
c (( - aux1321 + SATLiteral(125) + SATLiteral(293))<=0)
-293 -7086 0
-125 -7086 0
-125 -293 -7087 0
c (0<=( - aux1321 + SATLiteral(125) + SATLiteral(293)))
293 7087 0
125 7087 0
125 293 7086 0
c (( - aux1322 + SATLiteral(132) + SATLiteral(286))<=0)
-286 -7089 0
-132 -7089 0
-132 -286 -7090 0
c (0<=( - aux1322 + SATLiteral(132) + SATLiteral(286)))
286 7090 0
132 7090 0
132 286 7089 0
c ((SATLiteral(62) - aux1323 + SATLiteral(55))<=0)
-55 -7092 0
-62 -7092 0
-62 -55 -7093 0
c (0<=(SATLiteral(62) - aux1323 + SATLiteral(55)))
55 7093 0
62 7093 0
62 55 7092 0
c ((SATLiteral(349) - aux1324 + SATLiteral(48))<=0)
-48 -7095 0
-349 -7095 0
-349 -48 -7096 0
c (0<=(SATLiteral(349) - aux1324 + SATLiteral(48)))
48 7096 0
349 7096 0
349 48 7095 0
c (( - aux1325 + SATLiteral(139) + SATLiteral(41))<=0)
-41 -7098 0
-139 -7098 0
-139 -41 -7099 0
c (0<=( - aux1325 + SATLiteral(139) + SATLiteral(41)))
41 7099 0
139 7099 0
139 41 7098 0
c (( - aux1326 + SATLiteral(146) + SATLiteral(34))<=0)
-34 -7101 0
-146 -7101 0
-146 -34 -7102 0
c (0<=( - aux1326 + SATLiteral(146) + SATLiteral(34)))
34 7102 0
146 7102 0
146 34 7101 0
c ((SATLiteral(356) - aux1327 + SATLiteral(27))<=0)
-27 -7104 0
-356 -7104 0
-356 -27 -7105 0
c (0<=(SATLiteral(356) - aux1327 + SATLiteral(27)))
27 7105 0
356 7105 0
356 27 7104 0
c (( - aux1328 + SATLiteral(153) + SATLiteral(20))<=0)
-20 -7107 0
-153 -7107 0
-153 -20 -7108 0
c (0<=( - aux1328 + SATLiteral(153) + SATLiteral(20)))
20 7108 0
153 7108 0
153 20 7107 0
c (( - aux1329 + SATLiteral(160) + SATLiteral(13))<=0)
-13 -7110 0
-160 -7110 0
-160 -13 -7111 0
c (0<=( - aux1329 + SATLiteral(160) + SATLiteral(13)))
13 7111 0
160 7111 0
160 13 7110 0
c ((SATLiteral(202) - aux1330 + SATLiteral(6))<=0)
-6 -7113 0
-202 -7113 0
-202 -6 -7114 0
c (0<=(SATLiteral(202) - aux1330 + SATLiteral(6)))
6 7114 0
202 7114 0
202 6 7113 0
c ((SATLiteral(69) - aux1331 + SATLiteral(447))<=0)
-447 -7116 0
-69 -7116 0
-69 -447 -7117 0
c (0<=(SATLiteral(69) - aux1331 + SATLiteral(447)))
447 7117 0
69 7117 0
69 447 7116 0
c ((SATLiteral(363) - aux1332 + SATLiteral(440))<=0)
-440 -7119 0
-363 -7119 0
-363 -440 -7120 0
c (0<=(SATLiteral(363) - aux1332 + SATLiteral(440)))
440 7120 0
363 7120 0
363 440 7119 0
c (( - aux1333 + SATLiteral(167) + SATLiteral(433))<=0)
-433 -7122 0
-167 -7122 0
-167 -433 -7123 0
c (0<=( - aux1333 + SATLiteral(167) + SATLiteral(433)))
433 7123 0
167 7123 0
167 433 7122 0
c (( - aux1334 + SATLiteral(398) + SATLiteral(426))<=0)
-426 -7125 0
-398 -7125 0
-398 -426 -7126 0
c (0<=( - aux1334 + SATLiteral(398) + SATLiteral(426)))
426 7126 0
398 7126 0
398 426 7125 0
c ((SATLiteral(370) - aux1335 + SATLiteral(419))<=0)
-419 -7128 0
-370 -7128 0
-370 -419 -7129 0
c (0<=(SATLiteral(370) - aux1335 + SATLiteral(419)))
419 7129 0
370 7129 0
370 419 7128 0
c (( - aux1336 + SATLiteral(405) + SATLiteral(412))<=0)
-412 -7131 0
-405 -7131 0
-405 -412 -7132 0
c (0<=( - aux1336 + SATLiteral(405) + SATLiteral(412)))
412 7132 0
405 7132 0
405 412 7131 0
c ((SATLiteral(76) + SATLiteral(377) - aux1337)<=0)
-377 -7134 0
-76 -7134 0
-76 -377 -7135 0
c (0<=(SATLiteral(76) + SATLiteral(377) - aux1337))
377 7135 0
76 7135 0
76 377 7134 0
c ((SATLiteral(188) + SATLiteral(384) - aux1338)<=0)
-384 -7137 0
-188 -7137 0
-188 -384 -7138 0
c (0<=(SATLiteral(188) + SATLiteral(384) - aux1338))
384 7138 0
188 7138 0
188 384 7137 0
c ((SATLiteral(209) + SATLiteral(83) - aux1339)<=0)
-83 -7140 0
-209 -7140 0
-209 -83 -7141 0
c (0<=(SATLiteral(209) + SATLiteral(83) - aux1339))
83 7141 0
209 7141 0
209 83 7140 0
c ((SATLiteral(391) - aux1340 + SATLiteral(230))<=0)
-230 -7143 0
-391 -7143 0
-391 -230 -7144 0
c (0<=(SATLiteral(391) - aux1340 + SATLiteral(230)))
230 7144 0
391 7144 0
391 230 7143 0
c ((SATLiteral(90) - aux1341 + SATLiteral(237))<=0)
-237 -7146 0
-90 -7146 0
-90 -237 -7147 0
c (0<=(SATLiteral(90) - aux1341 + SATLiteral(237)))
237 7147 0
90 7147 0
90 237 7146 0
c ((SATLiteral(216) - aux1342 + SATLiteral(244))<=0)
-244 -7149 0
-216 -7149 0
-216 -244 -7150 0
c (0<=(SATLiteral(216) - aux1342 + SATLiteral(244)))
244 7150 0
216 7150 0
216 244 7149 0
c ((SATLiteral(97) - aux1343 + SATLiteral(251))<=0)
-251 -7152 0
-97 -7152 0
-97 -251 -7153 0
c (0<=(SATLiteral(97) - aux1343 + SATLiteral(251)))
251 7153 0
97 7153 0
97 251 7152 0
c ((SATLiteral(104) - aux1344 + SATLiteral(258))<=0)
-258 -7155 0
-104 -7155 0
-104 -258 -7156 0
c (0<=(SATLiteral(104) - aux1344 + SATLiteral(258)))
258 7156 0
104 7156 0
104 258 7155 0
c (( - aux1345 + SATLiteral(265) + SATLiteral(272))<=0)
-272 -7158 0
-265 -7158 0
-265 -272 -7159 0
c (0<=( - aux1345 + SATLiteral(265) + SATLiteral(272)))
272 7159 0
265 7159 0
265 272 7158 0
c ((aux1329 + aux1345 - aux1346)<=0)
7158 -7161 0
7159 -7162 0
7110 -7161 0
7110 7158 -7162 0
7110 7159 -7164 0
7111 -7162 0
7111 7158 -7164 0
7111 7159 -7166 0
c (0<=(aux1329 + aux1345 - aux1346))
-7159 7166 0
-7158 7164 0
-7111 7166 0
-7111 -7159 7164 0
-7111 -7158 7162 0
-7110 7164 0
-7110 -7159 7162 0
-7110 -7158 7161 0
c ((aux1319 + aux1327 - aux1347)<=0)
7104 -7168 0
7105 -7169 0
7080 -7168 0
7080 7104 -7169 0
7080 7105 -7171 0
7081 -7169 0
7081 7104 -7171 0
7081 7105 -7173 0
c (0<=(aux1319 + aux1327 - aux1347))
-7105 7173 0
-7104 7171 0
-7081 7173 0
-7081 -7105 7171 0
-7081 -7104 7169 0
-7080 7171 0
-7080 -7105 7169 0
-7080 -7104 7168 0
c ((aux1315 + aux1317 - aux1348)<=0)
7074 -7175 0
7075 -7176 0
7068 -7175 0
7068 7074 -7176 0
7068 7075 -7178 0
7069 -7176 0
7069 7074 -7178 0
7069 7075 -7180 0
c (0<=(aux1315 + aux1317 - aux1348))
-7075 7180 0
-7074 7178 0
-7069 7180 0
-7069 -7075 7178 0
-7069 -7074 7176 0
-7068 7178 0
-7068 -7075 7176 0
-7068 -7074 7175 0
c ((aux1314 + aux1342 - aux1349)<=0)
7149 -7182 0
7150 -7183 0
7065 -7182 0
7065 7149 -7183 0
7065 7150 -7185 0
7066 -7183 0
7066 7149 -7185 0
7066 7150 -7187 0
c (0<=(aux1314 + aux1342 - aux1349))
-7150 7187 0
-7149 7185 0
-7066 7187 0
-7066 -7150 7185 0
-7066 -7149 7183 0
-7065 7185 0
-7065 -7150 7183 0
-7065 -7149 7182 0
c ((aux1318 + aux1341 - aux1350)<=0)
7146 -7189 0
7147 -7190 0
7077 -7189 0
7077 7146 -7190 0
7077 7147 -7192 0
7078 -7190 0
7078 7146 -7192 0
7078 7147 -7194 0
c (0<=(aux1318 + aux1341 - aux1350))
-7147 7194 0
-7146 7192 0
-7078 7194 0
-7078 -7147 7192 0
-7078 -7146 7190 0
-7077 7192 0
-7077 -7147 7190 0
-7077 -7146 7189 0
c ((aux1321 + aux1326 - aux1351)<=0)
7101 -7196 0
7102 -7197 0
7086 -7196 0
7086 7101 -7197 0
7086 7102 -7199 0
7087 -7197 0
7087 7101 -7199 0
7087 7102 -7201 0
c (0<=(aux1321 + aux1326 - aux1351))
-7102 7201 0
-7101 7199 0
-7087 7201 0
-7087 -7102 7199 0
-7087 -7101 7197 0
-7086 7199 0
-7086 -7102 7197 0
-7086 -7101 7196 0
c ((aux1322 + aux1339 - aux1352)<=0)
7140 -7203 0
7141 -7204 0
7089 -7203 0
7089 7140 -7204 0
7089 7141 -7206 0
7090 -7204 0
7090 7140 -7206 0
7090 7141 -7208 0
c (0<=(aux1322 + aux1339 - aux1352))
-7141 7208 0
-7140 7206 0
-7090 7208 0
-7090 -7141 7206 0
-7090 -7140 7204 0
-7089 7206 0
-7089 -7141 7204 0
-7089 -7140 7203 0
c ((aux1324 + aux1325 - aux1353)<=0)
7098 -7210 0
7099 -7211 0
7095 -7210 0
7095 7098 -7211 0
7095 7099 -7213 0
7096 -7211 0
7096 7098 -7213 0
7096 7099 -7215 0
c (0<=(aux1324 + aux1325 - aux1353))
-7099 7215 0
-7098 7213 0
-7096 7215 0
-7096 -7099 7213 0
-7096 -7098 7211 0
-7095 7213 0
-7095 -7099 7211 0
-7095 -7098 7210 0
c ((aux1328 + aux1336 - aux1354)<=0)
7131 -7217 0
7132 -7218 0
7107 -7217 0
7107 7131 -7218 0
7107 7132 -7220 0
7108 -7218 0
7108 7131 -7220 0
7108 7132 -7222 0
c (0<=(aux1328 + aux1336 - aux1354))
-7132 7222 0
-7131 7220 0
-7108 7222 0
-7108 -7132 7220 0
-7108 -7131 7218 0
-7107 7220 0
-7107 -7132 7218 0
-7107 -7131 7217 0
c ((aux1334 + aux1337 - aux1355)<=0)
7134 -7224 0
7135 -7225 0
7125 -7224 0
7125 7134 -7225 0
7125 7135 -7227 0
7126 -7225 0
7126 7134 -7227 0
7126 7135 -7229 0
c (0<=(aux1334 + aux1337 - aux1355))
-7135 7229 0
-7134 7227 0
-7126 7229 0
-7126 -7135 7227 0
-7126 -7134 7225 0
-7125 7227 0
-7125 -7135 7225 0
-7125 -7134 7224 0
c ((aux1330 + aux1335 - aux1356)<=0)
7128 -7231 0
7129 -7232 0
7113 -7231 0
7113 7128 -7232 0
7113 7129 -7234 0
7114 -7232 0
7114 7128 -7234 0
7114 7129 -7236 0
c (0<=(aux1330 + aux1335 - aux1356))
-7129 7236 0
-7128 7234 0
-7114 7236 0
-7114 -7129 7234 0
-7114 -7128 7232 0
-7113 7234 0
-7113 -7129 7232 0
-7113 -7128 7231 0
c ((aux1331 + aux1333 - aux1357)<=0)
7122 -7238 0
7123 -7239 0
7116 -7238 0
7116 7122 -7239 0
7116 7123 -7241 0
7117 -7239 0
7117 7122 -7241 0
7117 7123 -7243 0
c (0<=(aux1331 + aux1333 - aux1357))
-7123 7243 0
-7122 7241 0
-7117 7243 0
-7117 -7123 7241 0
-7117 -7122 7239 0
-7116 7241 0
-7116 -7123 7239 0
-7116 -7122 7238 0
c ((aux1332 + aux1344 - aux1358)<=0)
7155 -7245 0
7156 -7246 0
7119 -7245 0
7119 7155 -7246 0
7119 7156 -7248 0
7120 -7246 0
7120 7155 -7248 0
7120 7156 -7250 0
c (0<=(aux1332 + aux1344 - aux1358))
-7156 7250 0
-7155 7248 0
-7120 7250 0
-7120 -7156 7248 0
-7120 -7155 7246 0
-7119 7248 0
-7119 -7156 7246 0
-7119 -7155 7245 0
c ((aux1338 + aux1340 - aux1359)<=0)
7143 -7252 0
7144 -7253 0
7137 -7252 0
7137 7143 -7253 0
7137 7144 -7255 0
7138 -7253 0
7138 7143 -7255 0
7138 7144 -7257 0
c (0<=(aux1338 + aux1340 - aux1359))
-7144 7257 0
-7143 7255 0
-7138 7257 0
-7138 -7144 7255 0
-7138 -7143 7253 0
-7137 7255 0
-7137 -7144 7253 0
-7137 -7143 7252 0
c ((aux1316 + aux1323 - aux1360)<=0)
7092 -7259 0
7093 -7260 0
7071 -7259 0
7071 7092 -7260 0
7071 7093 -7262 0
7072 -7260 0
7072 7092 -7262 0
7072 7093 -7264 0
c (0<=(aux1316 + aux1323 - aux1360))
-7093 7264 0
-7092 7262 0
-7072 7264 0
-7072 -7093 7262 0
-7072 -7092 7260 0
-7071 7262 0
-7071 -7093 7260 0
-7071 -7092 7259 0
c ((aux1320 + aux1343 - aux1361)<=0)
7152 -7266 0
7153 -7267 0
7083 -7266 0
7083 7152 -7267 0
7083 7153 -7269 0
7084 -7267 0
7084 7152 -7269 0
7084 7153 -7271 0
c (0<=(aux1320 + aux1343 - aux1361))
-7153 7271 0
-7152 7269 0
-7084 7271 0
-7084 -7153 7269 0
-7084 -7152 7267 0
-7083 7269 0
-7083 -7153 7267 0
-7083 -7152 7266 0
c ((aux1353 + aux1361 - aux1362)<=0)
7266 -7273 0
7267 -7274 0
7269 -7276 0
7271 -7278 0
7210 -7273 0
7210 7266 -7274 0
7210 7267 -7276 0
7210 7269 -7278 0
7210 7271 -7280 0
7211 -7274 0
7211 7266 -7276 0
7211 7267 -7278 0
7211 7269 -7280 0
7211 7271 -7282 0
7213 -7276 0
7213 7266 -7278 0
7213 7267 -7280 0
7213 7269 -7282 0
7213 7271 -7284 0
7215 -7278 0
7215 7266 -7280 0
7215 7267 -7282 0
7215 7269 -7284 0
7215 7271 -7286 0
c (0<=(aux1353 + aux1361 - aux1362))
-7271 7286 0
-7269 7284 0
-7267 7282 0
-7266 7280 0
-7215 7286 0
-7215 -7271 7284 0
-7215 -7269 7282 0
-7215 -7267 7280 0
-7215 -7266 7278 0
-7213 7284 0
-7213 -7271 7282 0
-7213 -7269 7280 0
-7213 -7267 7278 0
-7213 -7266 7276 0
-7211 7282 0
-7211 -7271 7280 0
-7211 -7269 7278 0
-7211 -7267 7276 0
-7211 -7266 7274 0
-7210 7280 0
-7210 -7271 7278 0
-7210 -7269 7276 0
-7210 -7267 7274 0
-7210 -7266 7273 0
c ((aux1347 + aux1351 - aux1363)<=0)
7196 -7288 0
7197 -7289 0
7199 -7291 0
7201 -7293 0
7168 -7288 0
7168 7196 -7289 0
7168 7197 -7291 0
7168 7199 -7293 0
7168 7201 -7295 0
7169 -7289 0
7169 7196 -7291 0
7169 7197 -7293 0
7169 7199 -7295 0
7169 7201 -7297 0
7171 -7291 0
7171 7196 -7293 0
7171 7197 -7295 0
7171 7199 -7297 0
7171 7201 -7299 0
7173 -7293 0
7173 7196 -7295 0
7173 7197 -7297 0
7173 7199 -7299 0
7173 7201 -7301 0
c (0<=(aux1347 + aux1351 - aux1363))
-7201 7301 0
-7199 7299 0
-7197 7297 0
-7196 7295 0
-7173 7301 0
-7173 -7201 7299 0
-7173 -7199 7297 0
-7173 -7197 7295 0
-7173 -7196 7293 0
-7171 7299 0
-7171 -7201 7297 0
-7171 -7199 7295 0
-7171 -7197 7293 0
-7171 -7196 7291 0
-7169 7297 0
-7169 -7201 7295 0
-7169 -7199 7293 0
-7169 -7197 7291 0
-7169 -7196 7289 0
-7168 7295 0
-7168 -7201 7293 0
-7168 -7199 7291 0
-7168 -7197 7289 0
-7168 -7196 7288 0
c ((aux1346 + aux1359 - aux1364)<=0)
7252 -7303 0
7253 -7304 0
7255 -7306 0
7257 -7308 0
7161 -7303 0
7161 7252 -7304 0
7161 7253 -7306 0
7161 7255 -7308 0
7161 7257 -7310 0
7162 -7304 0
7162 7252 -7306 0
7162 7253 -7308 0
7162 7255 -7310 0
7162 7257 -7312 0
7164 -7306 0
7164 7252 -7308 0
7164 7253 -7310 0
7164 7255 -7312 0
7164 7257 -7314 0
7166 -7308 0
7166 7252 -7310 0
7166 7253 -7312 0
7166 7255 -7314 0
7166 7257 -7316 0
c (0<=(aux1346 + aux1359 - aux1364))
-7257 7316 0
-7255 7314 0
-7253 7312 0
-7252 7310 0
-7166 7316 0
-7166 -7257 7314 0
-7166 -7255 7312 0
-7166 -7253 7310 0
-7166 -7252 7308 0
-7164 7314 0
-7164 -7257 7312 0
-7164 -7255 7310 0
-7164 -7253 7308 0
-7164 -7252 7306 0
-7162 7312 0
-7162 -7257 7310 0
-7162 -7255 7308 0
-7162 -7253 7306 0
-7162 -7252 7304 0
-7161 7310 0
-7161 -7257 7308 0
-7161 -7255 7306 0
-7161 -7253 7304 0
-7161 -7252 7303 0
c ((aux1349 + aux1350 - aux1365)<=0)
7189 -7318 0
7190 -7319 0
7192 -7321 0
7194 -7323 0
7182 -7318 0
7182 7189 -7319 0
7182 7190 -7321 0
7182 7192 -7323 0
7182 7194 -7325 0
7183 -7319 0
7183 7189 -7321 0
7183 7190 -7323 0
7183 7192 -7325 0
7183 7194 -7327 0
7185 -7321 0
7185 7189 -7323 0
7185 7190 -7325 0
7185 7192 -7327 0
7185 7194 -7329 0
7187 -7323 0
7187 7189 -7325 0
7187 7190 -7327 0
7187 7192 -7329 0
7187 7194 -7331 0
c (0<=(aux1349 + aux1350 - aux1365))
-7194 7331 0
-7192 7329 0
-7190 7327 0
-7189 7325 0
-7187 7331 0
-7187 -7194 7329 0
-7187 -7192 7327 0
-7187 -7190 7325 0
-7187 -7189 7323 0
-7185 7329 0
-7185 -7194 7327 0
-7185 -7192 7325 0
-7185 -7190 7323 0
-7185 -7189 7321 0
-7183 7327 0
-7183 -7194 7325 0
-7183 -7192 7323 0
-7183 -7190 7321 0
-7183 -7189 7319 0
-7182 7325 0
-7182 -7194 7323 0
-7182 -7192 7321 0
-7182 -7190 7319 0
-7182 -7189 7318 0
c ((aux1352 + aux1356 - aux1366)<=0)
7231 -7333 0
7232 -7334 0
7234 -7336 0
7236 -7338 0
7203 -7333 0
7203 7231 -7334 0
7203 7232 -7336 0
7203 7234 -7338 0
7203 7236 -7340 0
7204 -7334 0
7204 7231 -7336 0
7204 7232 -7338 0
7204 7234 -7340 0
7204 7236 -7342 0
7206 -7336 0
7206 7231 -7338 0
7206 7232 -7340 0
7206 7234 -7342 0
7206 7236 -7344 0
7208 -7338 0
7208 7231 -7340 0
7208 7232 -7342 0
7208 7234 -7344 0
7208 7236 -7346 0
c (0<=(aux1352 + aux1356 - aux1366))
-7236 7346 0
-7234 7344 0
-7232 7342 0
-7231 7340 0
-7208 7346 0
-7208 -7236 7344 0
-7208 -7234 7342 0
-7208 -7232 7340 0
-7208 -7231 7338 0
-7206 7344 0
-7206 -7236 7342 0
-7206 -7234 7340 0
-7206 -7232 7338 0
-7206 -7231 7336 0
-7204 7342 0
-7204 -7236 7340 0
-7204 -7234 7338 0
-7204 -7232 7336 0
-7204 -7231 7334 0
-7203 7340 0
-7203 -7236 7338 0
-7203 -7234 7336 0
-7203 -7232 7334 0
-7203 -7231 7333 0
c ((aux1354 + aux1357 - aux1367)<=0)
7238 -7348 0
7239 -7349 0
7241 -7351 0
7243 -7353 0
7217 -7348 0
7217 7238 -7349 0
7217 7239 -7351 0
7217 7241 -7353 0
7217 7243 -7355 0
7218 -7349 0
7218 7238 -7351 0
7218 7239 -7353 0
7218 7241 -7355 0
7218 7243 -7357 0
7220 -7351 0
7220 7238 -7353 0
7220 7239 -7355 0
7220 7241 -7357 0
7220 7243 -7359 0
7222 -7353 0
7222 7238 -7355 0
7222 7239 -7357 0
7222 7241 -7359 0
7222 7243 -7361 0
c (0<=(aux1354 + aux1357 - aux1367))
-7243 7361 0
-7241 7359 0
-7239 7357 0
-7238 7355 0
-7222 7361 0
-7222 -7243 7359 0
-7222 -7241 7357 0
-7222 -7239 7355 0
-7222 -7238 7353 0
-7220 7359 0
-7220 -7243 7357 0
-7220 -7241 7355 0
-7220 -7239 7353 0
-7220 -7238 7351 0
-7218 7357 0
-7218 -7243 7355 0
-7218 -7241 7353 0
-7218 -7239 7351 0
-7218 -7238 7349 0
-7217 7355 0
-7217 -7243 7353 0
-7217 -7241 7351 0
-7217 -7239 7349 0
-7217 -7238 7348 0
c ((aux1355 + aux1360 - aux1368)<=0)
7259 -7363 0
7260 -7364 0
7262 -7366 0
7264 -7368 0
7224 -7363 0
7224 7259 -7364 0
7224 7260 -7366 0
7224 7262 -7368 0
7224 7264 -7370 0
7225 -7364 0
7225 7259 -7366 0
7225 7260 -7368 0
7225 7262 -7370 0
7225 7264 -7372 0
7227 -7366 0
7227 7259 -7368 0
7227 7260 -7370 0
7227 7262 -7372 0
7227 7264 -7374 0
7229 -7368 0
7229 7259 -7370 0
7229 7260 -7372 0
7229 7262 -7374 0
7229 7264 -7376 0
c (0<=(aux1355 + aux1360 - aux1368))
-7264 7376 0
-7262 7374 0
-7260 7372 0
-7259 7370 0
-7229 7376 0
-7229 -7264 7374 0
-7229 -7262 7372 0
-7229 -7260 7370 0
-7229 -7259 7368 0
-7227 7374 0
-7227 -7264 7372 0
-7227 -7262 7370 0
-7227 -7260 7368 0
-7227 -7259 7366 0
-7225 7372 0
-7225 -7264 7370 0
-7225 -7262 7368 0
-7225 -7260 7366 0
-7225 -7259 7364 0
-7224 7370 0
-7224 -7264 7368 0
-7224 -7262 7366 0
-7224 -7260 7364 0
-7224 -7259 7363 0
c ((aux1348 + aux1358 - aux1369)<=0)
7245 -7378 0
7246 -7379 0
7248 -7381 0
7250 -7383 0
7175 -7378 0
7175 7245 -7379 0
7175 7246 -7381 0
7175 7248 -7383 0
7175 7250 -7385 0
7176 -7379 0
7176 7245 -7381 0
7176 7246 -7383 0
7176 7248 -7385 0
7176 7250 -7387 0
7178 -7381 0
7178 7245 -7383 0
7178 7246 -7385 0
7178 7248 -7387 0
7178 7250 -7389 0
7180 -7383 0
7180 7245 -7385 0
7180 7246 -7387 0
7180 7248 -7389 0
7180 7250 -7391 0
c (0<=(aux1348 + aux1358 - aux1369))
-7250 7391 0
-7248 7389 0
-7246 7387 0
-7245 7385 0
-7180 7391 0
-7180 -7250 7389 0
-7180 -7248 7387 0
-7180 -7246 7385 0
-7180 -7245 7383 0
-7178 7389 0
-7178 -7250 7387 0
-7178 -7248 7385 0
-7178 -7246 7383 0
-7178 -7245 7381 0
-7176 7387 0
-7176 -7250 7385 0
-7176 -7248 7383 0
-7176 -7246 7381 0
-7176 -7245 7379 0
-7175 7385 0
-7175 -7250 7383 0
-7175 -7248 7381 0
-7175 -7246 7379 0
-7175 -7245 7378 0
c ((aux1365 + aux1369 - aux1370)<=0)
7378 -7393 0
7379 -7394 0
7381 -7396 0
7383 -7398 0
7385 -7400 0
7387 -7402 0
7389 -7404 0
7391 -7406 0
7318 -7393 0
7318 7378 -7394 0
7318 7379 -7396 0
7318 7381 -7398 0
7318 7383 -7400 0
7318 7385 -7402 0
7318 7387 -7404 0
7318 7389 -7406 0
7318 7391 -7408 0
7319 -7394 0
7319 7378 -7396 0
7319 7379 -7398 0
7319 7381 -7400 0
7319 7383 -7402 0
7319 7385 -7404 0
7319 7387 -7406 0
7319 7389 -7408 0
7319 7391 -7410 0
7321 -7396 0
7321 7378 -7398 0
7321 7379 -7400 0
7321 7381 -7402 0
7321 7383 -7404 0
7321 7385 -7406 0
7321 7387 -7408 0
7321 7389 -7410 0
7321 7391 -7412 0
7323 -7398 0
7323 7378 -7400 0
7323 7379 -7402 0
7323 7381 -7404 0
7323 7383 -7406 0
7323 7385 -7408 0
7323 7387 -7410 0
7323 7389 -7412 0
7323 7391 -7414 0
7325 -7400 0
7325 7378 -7402 0
7325 7379 -7404 0
7325 7381 -7406 0
7325 7383 -7408 0
7325 7385 -7410 0
7325 7387 -7412 0
7325 7389 -7414 0
7325 7391 -7416 0
7327 -7402 0
7327 7378 -7404 0
7327 7379 -7406 0
7327 7381 -7408 0
7327 7383 -7410 0
7327 7385 -7412 0
7327 7387 -7414 0
7327 7389 -7416 0
7327 7391 -7418 0
7329 -7404 0
7329 7378 -7406 0
7329 7379 -7408 0
7329 7381 -7410 0
7329 7383 -7412 0
7329 7385 -7414 0
7329 7387 -7416 0
7329 7389 -7418 0
7329 7391 -7420 0
7331 -7406 0
7331 7378 -7408 0
7331 7379 -7410 0
7331 7381 -7412 0
7331 7383 -7414 0
7331 7385 -7416 0
7331 7387 -7418 0
7331 7389 -7420 0
7331 7391 -7422 0
c (0<=(aux1365 + aux1369 - aux1370))
-7391 7422 0
-7389 7420 0
-7387 7418 0
-7385 7416 0
-7383 7414 0
-7381 7412 0
-7379 7410 0
-7378 7408 0
-7331 7422 0
-7331 -7391 7420 0
-7331 -7389 7418 0
-7331 -7387 7416 0
-7331 -7385 7414 0
-7331 -7383 7412 0
-7331 -7381 7410 0
-7331 -7379 7408 0
-7331 -7378 7406 0
-7329 7420 0
-7329 -7391 7418 0
-7329 -7389 7416 0
-7329 -7387 7414 0
-7329 -7385 7412 0
-7329 -7383 7410 0
-7329 -7381 7408 0
-7329 -7379 7406 0
-7329 -7378 7404 0
-7327 7418 0
-7327 -7391 7416 0
-7327 -7389 7414 0
-7327 -7387 7412 0
-7327 -7385 7410 0
-7327 -7383 7408 0
-7327 -7381 7406 0
-7327 -7379 7404 0
-7327 -7378 7402 0
-7325 7416 0
-7325 -7391 7414 0
-7325 -7389 7412 0
-7325 -7387 7410 0
-7325 -7385 7408 0
-7325 -7383 7406 0
-7325 -7381 7404 0
-7325 -7379 7402 0
-7325 -7378 7400 0
-7323 7414 0
-7323 -7391 7412 0
-7323 -7389 7410 0
-7323 -7387 7408 0
-7323 -7385 7406 0
-7323 -7383 7404 0
-7323 -7381 7402 0
-7323 -7379 7400 0
-7323 -7378 7398 0
-7321 7412 0
-7321 -7391 7410 0
-7321 -7389 7408 0
-7321 -7387 7406 0
-7321 -7385 7404 0
-7321 -7383 7402 0
-7321 -7381 7400 0
-7321 -7379 7398 0
-7321 -7378 7396 0
-7319 7410 0
-7319 -7391 7408 0
-7319 -7389 7406 0
-7319 -7387 7404 0
-7319 -7385 7402 0
-7319 -7383 7400 0
-7319 -7381 7398 0
-7319 -7379 7396 0
-7319 -7378 7394 0
-7318 7408 0
-7318 -7391 7406 0
-7318 -7389 7404 0
-7318 -7387 7402 0
-7318 -7385 7400 0
-7318 -7383 7398 0
-7318 -7381 7396 0
-7318 -7379 7394 0
-7318 -7378 7393 0
c ((aux1362 + aux1363 - aux1371)<=0)
7288 -7424 0
7289 -7425 0
7291 -7427 0
7293 -7429 0
7295 -7431 0
7297 -7433 0
7299 -7435 0
7301 -7437 0
7273 -7424 0
7273 7288 -7425 0
7273 7289 -7427 0
7273 7291 -7429 0
7273 7293 -7431 0
7273 7295 -7433 0
7273 7297 -7435 0
7273 7299 -7437 0
7273 7301 -7439 0
7274 -7425 0
7274 7288 -7427 0
7274 7289 -7429 0
7274 7291 -7431 0
7274 7293 -7433 0
7274 7295 -7435 0
7274 7297 -7437 0
7274 7299 -7439 0
7274 7301 -7441 0
7276 -7427 0
7276 7288 -7429 0
7276 7289 -7431 0
7276 7291 -7433 0
7276 7293 -7435 0
7276 7295 -7437 0
7276 7297 -7439 0
7276 7299 -7441 0
7276 7301 -7443 0
7278 -7429 0
7278 7288 -7431 0
7278 7289 -7433 0
7278 7291 -7435 0
7278 7293 -7437 0
7278 7295 -7439 0
7278 7297 -7441 0
7278 7299 -7443 0
7278 7301 -7445 0
7280 -7431 0
7280 7288 -7433 0
7280 7289 -7435 0
7280 7291 -7437 0
7280 7293 -7439 0
7280 7295 -7441 0
7280 7297 -7443 0
7280 7299 -7445 0
7280 7301 -7447 0
7282 -7433 0
7282 7288 -7435 0
7282 7289 -7437 0
7282 7291 -7439 0
7282 7293 -7441 0
7282 7295 -7443 0
7282 7297 -7445 0
7282 7299 -7447 0
7282 7301 -7449 0
7284 -7435 0
7284 7288 -7437 0
7284 7289 -7439 0
7284 7291 -7441 0
7284 7293 -7443 0
7284 7295 -7445 0
7284 7297 -7447 0
7284 7299 -7449 0
7284 7301 -7451 0
7286 -7437 0
7286 7288 -7439 0
7286 7289 -7441 0
7286 7291 -7443 0
7286 7293 -7445 0
7286 7295 -7447 0
7286 7297 -7449 0
7286 7299 -7451 0
7286 7301 -7453 0
c (0<=(aux1362 + aux1363 - aux1371))
-7301 7453 0
-7299 7451 0
-7297 7449 0
-7295 7447 0
-7293 7445 0
-7291 7443 0
-7289 7441 0
-7288 7439 0
-7286 7453 0
-7286 -7301 7451 0
-7286 -7299 7449 0
-7286 -7297 7447 0
-7286 -7295 7445 0
-7286 -7293 7443 0
-7286 -7291 7441 0
-7286 -7289 7439 0
-7286 -7288 7437 0
-7284 7451 0
-7284 -7301 7449 0
-7284 -7299 7447 0
-7284 -7297 7445 0
-7284 -7295 7443 0
-7284 -7293 7441 0
-7284 -7291 7439 0
-7284 -7289 7437 0
-7284 -7288 7435 0
-7282 7449 0
-7282 -7301 7447 0
-7282 -7299 7445 0
-7282 -7297 7443 0
-7282 -7295 7441 0
-7282 -7293 7439 0
-7282 -7291 7437 0
-7282 -7289 7435 0
-7282 -7288 7433 0
-7280 7447 0
-7280 -7301 7445 0
-7280 -7299 7443 0
-7280 -7297 7441 0
-7280 -7295 7439 0
-7280 -7293 7437 0
-7280 -7291 7435 0
-7280 -7289 7433 0
-7280 -7288 7431 0
-7278 7445 0
-7278 -7301 7443 0
-7278 -7299 7441 0
-7278 -7297 7439 0
-7278 -7295 7437 0
-7278 -7293 7435 0
-7278 -7291 7433 0
-7278 -7289 7431 0
-7278 -7288 7429 0
-7276 7443 0
-7276 -7301 7441 0
-7276 -7299 7439 0
-7276 -7297 7437 0
-7276 -7295 7435 0
-7276 -7293 7433 0
-7276 -7291 7431 0
-7276 -7289 7429 0
-7276 -7288 7427 0
-7274 7441 0
-7274 -7301 7439 0
-7274 -7299 7437 0
-7274 -7297 7435 0
-7274 -7295 7433 0
-7274 -7293 7431 0
-7274 -7291 7429 0
-7274 -7289 7427 0
-7274 -7288 7425 0
-7273 7439 0
-7273 -7301 7437 0
-7273 -7299 7435 0
-7273 -7297 7433 0
-7273 -7295 7431 0
-7273 -7293 7429 0
-7273 -7291 7427 0
-7273 -7289 7425 0
-7273 -7288 7424 0
c ((aux1364 + aux1366 - aux1372)<=0)
7333 -7455 0
7334 -7456 0
7336 -7458 0
7338 -7460 0
7340 -7462 0
7342 -7464 0
7344 -7466 0
7346 -7468 0
7303 -7455 0
7303 7333 -7456 0
7303 7334 -7458 0
7303 7336 -7460 0
7303 7338 -7462 0
7303 7340 -7464 0
7303 7342 -7466 0
7303 7344 -7468 0
7303 7346 -7470 0
7304 -7456 0
7304 7333 -7458 0
7304 7334 -7460 0
7304 7336 -7462 0
7304 7338 -7464 0
7304 7340 -7466 0
7304 7342 -7468 0
7304 7344 -7470 0
7304 7346 -7472 0
7306 -7458 0
7306 7333 -7460 0
7306 7334 -7462 0
7306 7336 -7464 0
7306 7338 -7466 0
7306 7340 -7468 0
7306 7342 -7470 0
7306 7344 -7472 0
7306 7346 -7474 0
7308 -7460 0
7308 7333 -7462 0
7308 7334 -7464 0
7308 7336 -7466 0
7308 7338 -7468 0
7308 7340 -7470 0
7308 7342 -7472 0
7308 7344 -7474 0
7308 7346 -7476 0
7310 -7462 0
7310 7333 -7464 0
7310 7334 -7466 0
7310 7336 -7468 0
7310 7338 -7470 0
7310 7340 -7472 0
7310 7342 -7474 0
7310 7344 -7476 0
7310 7346 -7478 0
7312 -7464 0
7312 7333 -7466 0
7312 7334 -7468 0
7312 7336 -7470 0
7312 7338 -7472 0
7312 7340 -7474 0
7312 7342 -7476 0
7312 7344 -7478 0
7312 7346 -7480 0
7314 -7466 0
7314 7333 -7468 0
7314 7334 -7470 0
7314 7336 -7472 0
7314 7338 -7474 0
7314 7340 -7476 0
7314 7342 -7478 0
7314 7344 -7480 0
7314 7346 -7482 0
7316 -7468 0
7316 7333 -7470 0
7316 7334 -7472 0
7316 7336 -7474 0
7316 7338 -7476 0
7316 7340 -7478 0
7316 7342 -7480 0
7316 7344 -7482 0
7316 7346 -7484 0
c (0<=(aux1364 + aux1366 - aux1372))
-7346 7484 0
-7344 7482 0
-7342 7480 0
-7340 7478 0
-7338 7476 0
-7336 7474 0
-7334 7472 0
-7333 7470 0
-7316 7484 0
-7316 -7346 7482 0
-7316 -7344 7480 0
-7316 -7342 7478 0
-7316 -7340 7476 0
-7316 -7338 7474 0
-7316 -7336 7472 0
-7316 -7334 7470 0
-7316 -7333 7468 0
-7314 7482 0
-7314 -7346 7480 0
-7314 -7344 7478 0
-7314 -7342 7476 0
-7314 -7340 7474 0
-7314 -7338 7472 0
-7314 -7336 7470 0
-7314 -7334 7468 0
-7314 -7333 7466 0
-7312 7480 0
-7312 -7346 7478 0
-7312 -7344 7476 0
-7312 -7342 7474 0
-7312 -7340 7472 0
-7312 -7338 7470 0
-7312 -7336 7468 0
-7312 -7334 7466 0
-7312 -7333 7464 0
-7310 7478 0
-7310 -7346 7476 0
-7310 -7344 7474 0
-7310 -7342 7472 0
-7310 -7340 7470 0
-7310 -7338 7468 0
-7310 -7336 7466 0
-7310 -7334 7464 0
-7310 -7333 7462 0
-7308 7476 0
-7308 -7346 7474 0
-7308 -7344 7472 0
-7308 -7342 7470 0
-7308 -7340 7468 0
-7308 -7338 7466 0
-7308 -7336 7464 0
-7308 -7334 7462 0
-7308 -7333 7460 0
-7306 7474 0
-7306 -7346 7472 0
-7306 -7344 7470 0
-7306 -7342 7468 0
-7306 -7340 7466 0
-7306 -7338 7464 0
-7306 -7336 7462 0
-7306 -7334 7460 0
-7306 -7333 7458 0
-7304 7472 0
-7304 -7346 7470 0
-7304 -7344 7468 0
-7304 -7342 7466 0
-7304 -7340 7464 0
-7304 -7338 7462 0
-7304 -7336 7460 0
-7304 -7334 7458 0
-7304 -7333 7456 0
-7303 7470 0
-7303 -7346 7468 0
-7303 -7344 7466 0
-7303 -7342 7464 0
-7303 -7340 7462 0
-7303 -7338 7460 0
-7303 -7336 7458 0
-7303 -7334 7456 0
-7303 -7333 7455 0
c ((aux1367 + aux1368 - aux1373)<=0)
7363 -7486 0
7364 -7487 0
7366 -7489 0
7368 -7491 0
7370 -7493 0
7372 -7495 0
7374 -7497 0
7376 -7499 0
7348 -7486 0
7348 7363 -7487 0
7348 7364 -7489 0
7348 7366 -7491 0
7348 7368 -7493 0
7348 7370 -7495 0
7348 7372 -7497 0
7348 7374 -7499 0
7348 7376 -7501 0
7349 -7487 0
7349 7363 -7489 0
7349 7364 -7491 0
7349 7366 -7493 0
7349 7368 -7495 0
7349 7370 -7497 0
7349 7372 -7499 0
7349 7374 -7501 0
7349 7376 -7503 0
7351 -7489 0
7351 7363 -7491 0
7351 7364 -7493 0
7351 7366 -7495 0
7351 7368 -7497 0
7351 7370 -7499 0
7351 7372 -7501 0
7351 7374 -7503 0
7351 7376 -7505 0
7353 -7491 0
7353 7363 -7493 0
7353 7364 -7495 0
7353 7366 -7497 0
7353 7368 -7499 0
7353 7370 -7501 0
7353 7372 -7503 0
7353 7374 -7505 0
7353 7376 -7507 0
7355 -7493 0
7355 7363 -7495 0
7355 7364 -7497 0
7355 7366 -7499 0
7355 7368 -7501 0
7355 7370 -7503 0
7355 7372 -7505 0
7355 7374 -7507 0
7355 7376 -7509 0
7357 -7495 0
7357 7363 -7497 0
7357 7364 -7499 0
7357 7366 -7501 0
7357 7368 -7503 0
7357 7370 -7505 0
7357 7372 -7507 0
7357 7374 -7509 0
7357 7376 -7511 0
7359 -7497 0
7359 7363 -7499 0
7359 7364 -7501 0
7359 7366 -7503 0
7359 7368 -7505 0
7359 7370 -7507 0
7359 7372 -7509 0
7359 7374 -7511 0
7359 7376 -7513 0
7361 -7499 0
7361 7363 -7501 0
7361 7364 -7503 0
7361 7366 -7505 0
7361 7368 -7507 0
7361 7370 -7509 0
7361 7372 -7511 0
7361 7374 -7513 0
7361 7376 -7515 0
c (0<=(aux1367 + aux1368 - aux1373))
-7376 7515 0
-7374 7513 0
-7372 7511 0
-7370 7509 0
-7368 7507 0
-7366 7505 0
-7364 7503 0
-7363 7501 0
-7361 7515 0
-7361 -7376 7513 0
-7361 -7374 7511 0
-7361 -7372 7509 0
-7361 -7370 7507 0
-7361 -7368 7505 0
-7361 -7366 7503 0
-7361 -7364 7501 0
-7361 -7363 7499 0
-7359 7513 0
-7359 -7376 7511 0
-7359 -7374 7509 0
-7359 -7372 7507 0
-7359 -7370 7505 0
-7359 -7368 7503 0
-7359 -7366 7501 0
-7359 -7364 7499 0
-7359 -7363 7497 0
-7357 7511 0
-7357 -7376 7509 0
-7357 -7374 7507 0
-7357 -7372 7505 0
-7357 -7370 7503 0
-7357 -7368 7501 0
-7357 -7366 7499 0
-7357 -7364 7497 0
-7357 -7363 7495 0
-7355 7509 0
-7355 -7376 7507 0
-7355 -7374 7505 0
-7355 -7372 7503 0
-7355 -7370 7501 0
-7355 -7368 7499 0
-7355 -7366 7497 0
-7355 -7364 7495 0
-7355 -7363 7493 0
-7353 7507 0
-7353 -7376 7505 0
-7353 -7374 7503 0
-7353 -7372 7501 0
-7353 -7370 7499 0
-7353 -7368 7497 0
-7353 -7366 7495 0
-7353 -7364 7493 0
-7353 -7363 7491 0
-7351 7505 0
-7351 -7376 7503 0
-7351 -7374 7501 0
-7351 -7372 7499 0
-7351 -7370 7497 0
-7351 -7368 7495 0
-7351 -7366 7493 0
-7351 -7364 7491 0
-7351 -7363 7489 0
-7349 7503 0
-7349 -7376 7501 0
-7349 -7374 7499 0
-7349 -7372 7497 0
-7349 -7370 7495 0
-7349 -7368 7493 0
-7349 -7366 7491 0
-7349 -7364 7489 0
-7349 -7363 7487 0
-7348 7501 0
-7348 -7376 7499 0
-7348 -7374 7497 0
-7348 -7372 7495 0
-7348 -7370 7493 0
-7348 -7368 7491 0
-7348 -7366 7489 0
-7348 -7364 7487 0
-7348 -7363 7486 0
c ((aux1371 + aux1373 - aux1374)<=0)
7486 -7517 0
7487 -7518 0
7489 -7520 0
7491 -7522 0
7493 -7524 0
7495 -7526 0
7497 -7528 0
7499 -7530 0
7501 -7532 0
7503 -7534 0
7505 -7536 0
7507 -7538 0
7509 -7540 0
7511 -7542 0
7513 -7544 0
7515 -7546 0
7424 -7517 0
7424 7486 -7518 0
7424 7487 -7520 0
7424 7489 -7522 0
7424 7491 -7524 0
7424 7493 -7526 0
7424 7495 -7528 0
7424 7497 -7530 0
7424 7499 -7532 0
7424 7501 -7534 0
7424 7503 -7536 0
7424 7505 -7538 0
7424 7507 -7540 0
7424 7509 -7542 0
7424 7511 -7544 0
7424 7513 -7546 0
7424 7515 -7548 0
7425 -7518 0
7425 7486 -7520 0
7425 7487 -7522 0
7425 7489 -7524 0
7425 7491 -7526 0
7425 7493 -7528 0
7425 7495 -7530 0
7425 7497 -7532 0
7425 7499 -7534 0
7425 7501 -7536 0
7425 7503 -7538 0
7425 7505 -7540 0
7425 7507 -7542 0
7425 7509 -7544 0
7425 7511 -7546 0
7425 7513 -7548 0
7425 7515 -7550 0
7427 -7520 0
7427 7486 -7522 0
7427 7487 -7524 0
7427 7489 -7526 0
7427 7491 -7528 0
7427 7493 -7530 0
7427 7495 -7532 0
7427 7497 -7534 0
7427 7499 -7536 0
7427 7501 -7538 0
7427 7503 -7540 0
7427 7505 -7542 0
7427 7507 -7544 0
7427 7509 -7546 0
7427 7511 -7548 0
7427 7513 -7550 0
7427 7515 -7552 0
7429 -7522 0
7429 7486 -7524 0
7429 7487 -7526 0
7429 7489 -7528 0
7429 7491 -7530 0
7429 7493 -7532 0
7429 7495 -7534 0
7429 7497 -7536 0
7429 7499 -7538 0
7429 7501 -7540 0
7429 7503 -7542 0
7429 7505 -7544 0
7429 7507 -7546 0
7429 7509 -7548 0
7429 7511 -7550 0
7429 7513 -7552 0
7429 7515 -7554 0
7431 -7524 0
7431 7486 -7526 0
7431 7487 -7528 0
7431 7489 -7530 0
7431 7491 -7532 0
7431 7493 -7534 0
7431 7495 -7536 0
7431 7497 -7538 0
7431 7499 -7540 0
7431 7501 -7542 0
7431 7503 -7544 0
7431 7505 -7546 0
7431 7507 -7548 0
7431 7509 -7550 0
7431 7511 -7552 0
7431 7513 -7554 0
7431 7515 -7556 0
7433 -7526 0
7433 7486 -7528 0
7433 7487 -7530 0
7433 7489 -7532 0
7433 7491 -7534 0
7433 7493 -7536 0
7433 7495 -7538 0
7433 7497 -7540 0
7433 7499 -7542 0
7433 7501 -7544 0
7433 7503 -7546 0
7433 7505 -7548 0
7433 7507 -7550 0
7433 7509 -7552 0
7433 7511 -7554 0
7433 7513 -7556 0
7433 7515 -7558 0
7435 -7528 0
7435 7486 -7530 0
7435 7487 -7532 0
7435 7489 -7534 0
7435 7491 -7536 0
7435 7493 -7538 0
7435 7495 -7540 0
7435 7497 -7542 0
7435 7499 -7544 0
7435 7501 -7546 0
7435 7503 -7548 0
7435 7505 -7550 0
7435 7507 -7552 0
7435 7509 -7554 0
7435 7511 -7556 0
7435 7513 -7558 0
7435 7515 -7560 0
7437 -7530 0
7437 7486 -7532 0
7437 7487 -7534 0
7437 7489 -7536 0
7437 7491 -7538 0
7437 7493 -7540 0
7437 7495 -7542 0
7437 7497 -7544 0
7437 7499 -7546 0
7437 7501 -7548 0
7437 7503 -7550 0
7437 7505 -7552 0
7437 7507 -7554 0
7437 7509 -7556 0
7437 7511 -7558 0
7437 7513 -7560 0
7437 7515 -7562 0
7439 -7532 0
7439 7486 -7534 0
7439 7487 -7536 0
7439 7489 -7538 0
7439 7491 -7540 0
7439 7493 -7542 0
7439 7495 -7544 0
7439 7497 -7546 0
7439 7499 -7548 0
7439 7501 -7550 0
7439 7503 -7552 0
7439 7505 -7554 0
7439 7507 -7556 0
7439 7509 -7558 0
7439 7511 -7560 0
7439 7513 -7562 0
7439 7515 -7564 0
7441 -7534 0
7441 7486 -7536 0
7441 7487 -7538 0
7441 7489 -7540 0
7441 7491 -7542 0
7441 7493 -7544 0
7441 7495 -7546 0
7441 7497 -7548 0
7441 7499 -7550 0
7441 7501 -7552 0
7441 7503 -7554 0
7441 7505 -7556 0
7441 7507 -7558 0
7441 7509 -7560 0
7441 7511 -7562 0
7441 7513 -7564 0
7441 7515 -7566 0
7443 -7536 0
7443 7486 -7538 0
7443 7487 -7540 0
7443 7489 -7542 0
7443 7491 -7544 0
7443 7493 -7546 0
7443 7495 -7548 0
7443 7497 -7550 0
7443 7499 -7552 0
7443 7501 -7554 0
7443 7503 -7556 0
7443 7505 -7558 0
7443 7507 -7560 0
7443 7509 -7562 0
7443 7511 -7564 0
7443 7513 -7566 0
7443 7515 -7568 0
7445 -7538 0
7445 7486 -7540 0
7445 7487 -7542 0
7445 7489 -7544 0
7445 7491 -7546 0
7445 7493 -7548 0
7445 7495 -7550 0
7445 7497 -7552 0
7445 7499 -7554 0
7445 7501 -7556 0
7445 7503 -7558 0
7445 7505 -7560 0
7445 7507 -7562 0
7445 7509 -7564 0
7445 7511 -7566 0
7445 7513 -7568 0
7445 7515 -7570 0
7447 -7540 0
7447 7486 -7542 0
7447 7487 -7544 0
7447 7489 -7546 0
7447 7491 -7548 0
7447 7493 -7550 0
7447 7495 -7552 0
7447 7497 -7554 0
7447 7499 -7556 0
7447 7501 -7558 0
7447 7503 -7560 0
7447 7505 -7562 0
7447 7507 -7564 0
7447 7509 -7566 0
7447 7511 -7568 0
7447 7513 -7570 0
7447 7515 -7572 0
7449 -7542 0
7449 7486 -7544 0
7449 7487 -7546 0
7449 7489 -7548 0
7449 7491 -7550 0
7449 7493 -7552 0
7449 7495 -7554 0
7449 7497 -7556 0
7449 7499 -7558 0
7449 7501 -7560 0
7449 7503 -7562 0
7449 7505 -7564 0
7449 7507 -7566 0
7449 7509 -7568 0
7449 7511 -7570 0
7449 7513 -7572 0
7449 7515 -7574 0
7451 -7544 0
7451 7486 -7546 0
7451 7487 -7548 0
7451 7489 -7550 0
7451 7491 -7552 0
7451 7493 -7554 0
7451 7495 -7556 0
7451 7497 -7558 0
7451 7499 -7560 0
7451 7501 -7562 0
7451 7503 -7564 0
7451 7505 -7566 0
7451 7507 -7568 0
7451 7509 -7570 0
7451 7511 -7572 0
7451 7513 -7574 0
7451 7515 -7576 0
7453 -7546 0
7453 7486 -7548 0
7453 7487 -7550 0
7453 7489 -7552 0
7453 7491 -7554 0
7453 7493 -7556 0
7453 7495 -7558 0
7453 7497 -7560 0
7453 7499 -7562 0
7453 7501 -7564 0
7453 7503 -7566 0
7453 7505 -7568 0
7453 7507 -7570 0
7453 7509 -7572 0
7453 7511 -7574 0
7453 7513 -7576 0
7453 7515 -7578 0
c (0<=(aux1371 + aux1373 - aux1374))
-7515 7578 0
-7513 7576 0
-7511 7574 0
-7509 7572 0
-7507 7570 0
-7505 7568 0
-7503 7566 0
-7501 7564 0
-7499 7562 0
-7497 7560 0
-7495 7558 0
-7493 7556 0
-7491 7554 0
-7489 7552 0
-7487 7550 0
-7486 7548 0
-7453 7578 0
-7453 -7515 7576 0
-7453 -7513 7574 0
-7453 -7511 7572 0
-7453 -7509 7570 0
-7453 -7507 7568 0
-7453 -7505 7566 0
-7453 -7503 7564 0
-7453 -7501 7562 0
-7453 -7499 7560 0
-7453 -7497 7558 0
-7453 -7495 7556 0
-7453 -7493 7554 0
-7453 -7491 7552 0
-7453 -7489 7550 0
-7453 -7487 7548 0
-7453 -7486 7546 0
-7451 7576 0
-7451 -7515 7574 0
-7451 -7513 7572 0
-7451 -7511 7570 0
-7451 -7509 7568 0
-7451 -7507 7566 0
-7451 -7505 7564 0
-7451 -7503 7562 0
-7451 -7501 7560 0
-7451 -7499 7558 0
-7451 -7497 7556 0
-7451 -7495 7554 0
-7451 -7493 7552 0
-7451 -7491 7550 0
-7451 -7489 7548 0
-7451 -7487 7546 0
-7451 -7486 7544 0
-7449 7574 0
-7449 -7515 7572 0
-7449 -7513 7570 0
-7449 -7511 7568 0
-7449 -7509 7566 0
-7449 -7507 7564 0
-7449 -7505 7562 0
-7449 -7503 7560 0
-7449 -7501 7558 0
-7449 -7499 7556 0
-7449 -7497 7554 0
-7449 -7495 7552 0
-7449 -7493 7550 0
-7449 -7491 7548 0
-7449 -7489 7546 0
-7449 -7487 7544 0
-7449 -7486 7542 0
-7447 7572 0
-7447 -7515 7570 0
-7447 -7513 7568 0
-7447 -7511 7566 0
-7447 -7509 7564 0
-7447 -7507 7562 0
-7447 -7505 7560 0
-7447 -7503 7558 0
-7447 -7501 7556 0
-7447 -7499 7554 0
-7447 -7497 7552 0
-7447 -7495 7550 0
-7447 -7493 7548 0
-7447 -7491 7546 0
-7447 -7489 7544 0
-7447 -7487 7542 0
-7447 -7486 7540 0
-7445 7570 0
-7445 -7515 7568 0
-7445 -7513 7566 0
-7445 -7511 7564 0
-7445 -7509 7562 0
-7445 -7507 7560 0
-7445 -7505 7558 0
-7445 -7503 7556 0
-7445 -7501 7554 0
-7445 -7499 7552 0
-7445 -7497 7550 0
-7445 -7495 7548 0
-7445 -7493 7546 0
-7445 -7491 7544 0
-7445 -7489 7542 0
-7445 -7487 7540 0
-7445 -7486 7538 0
-7443 7568 0
-7443 -7515 7566 0
-7443 -7513 7564 0
-7443 -7511 7562 0
-7443 -7509 7560 0
-7443 -7507 7558 0
-7443 -7505 7556 0
-7443 -7503 7554 0
-7443 -7501 7552 0
-7443 -7499 7550 0
-7443 -7497 7548 0
-7443 -7495 7546 0
-7443 -7493 7544 0
-7443 -7491 7542 0
-7443 -7489 7540 0
-7443 -7487 7538 0
-7443 -7486 7536 0
-7441 7566 0
-7441 -7515 7564 0
-7441 -7513 7562 0
-7441 -7511 7560 0
-7441 -7509 7558 0
-7441 -7507 7556 0
-7441 -7505 7554 0
-7441 -7503 7552 0
-7441 -7501 7550 0
-7441 -7499 7548 0
-7441 -7497 7546 0
-7441 -7495 7544 0
-7441 -7493 7542 0
-7441 -7491 7540 0
-7441 -7489 7538 0
-7441 -7487 7536 0
-7441 -7486 7534 0
-7439 7564 0
-7439 -7515 7562 0
-7439 -7513 7560 0
-7439 -7511 7558 0
-7439 -7509 7556 0
-7439 -7507 7554 0
-7439 -7505 7552 0
-7439 -7503 7550 0
-7439 -7501 7548 0
-7439 -7499 7546 0
-7439 -7497 7544 0
-7439 -7495 7542 0
-7439 -7493 7540 0
-7439 -7491 7538 0
-7439 -7489 7536 0
-7439 -7487 7534 0
-7439 -7486 7532 0
-7437 7562 0
-7437 -7515 7560 0
-7437 -7513 7558 0
-7437 -7511 7556 0
-7437 -7509 7554 0
-7437 -7507 7552 0
-7437 -7505 7550 0
-7437 -7503 7548 0
-7437 -7501 7546 0
-7437 -7499 7544 0
-7437 -7497 7542 0
-7437 -7495 7540 0
-7437 -7493 7538 0
-7437 -7491 7536 0
-7437 -7489 7534 0
-7437 -7487 7532 0
-7437 -7486 7530 0
-7435 7560 0
-7435 -7515 7558 0
-7435 -7513 7556 0
-7435 -7511 7554 0
-7435 -7509 7552 0
-7435 -7507 7550 0
-7435 -7505 7548 0
-7435 -7503 7546 0
-7435 -7501 7544 0
-7435 -7499 7542 0
-7435 -7497 7540 0
-7435 -7495 7538 0
-7435 -7493 7536 0
-7435 -7491 7534 0
-7435 -7489 7532 0
-7435 -7487 7530 0
-7435 -7486 7528 0
-7433 7558 0
-7433 -7515 7556 0
-7433 -7513 7554 0
-7433 -7511 7552 0
-7433 -7509 7550 0
-7433 -7507 7548 0
-7433 -7505 7546 0
-7433 -7503 7544 0
-7433 -7501 7542 0
-7433 -7499 7540 0
-7433 -7497 7538 0
-7433 -7495 7536 0
-7433 -7493 7534 0
-7433 -7491 7532 0
-7433 -7489 7530 0
-7433 -7487 7528 0
-7433 -7486 7526 0
-7431 7556 0
-7431 -7515 7554 0
-7431 -7513 7552 0
-7431 -7511 7550 0
-7431 -7509 7548 0
-7431 -7507 7546 0
-7431 -7505 7544 0
-7431 -7503 7542 0
-7431 -7501 7540 0
-7431 -7499 7538 0
-7431 -7497 7536 0
-7431 -7495 7534 0
-7431 -7493 7532 0
-7431 -7491 7530 0
-7431 -7489 7528 0
-7431 -7487 7526 0
-7431 -7486 7524 0
-7429 7554 0
-7429 -7515 7552 0
-7429 -7513 7550 0
-7429 -7511 7548 0
-7429 -7509 7546 0
-7429 -7507 7544 0
-7429 -7505 7542 0
-7429 -7503 7540 0
-7429 -7501 7538 0
-7429 -7499 7536 0
-7429 -7497 7534 0
-7429 -7495 7532 0
-7429 -7493 7530 0
-7429 -7491 7528 0
-7429 -7489 7526 0
-7429 -7487 7524 0
-7429 -7486 7522 0
-7427 7552 0
-7427 -7515 7550 0
-7427 -7513 7548 0
-7427 -7511 7546 0
-7427 -7509 7544 0
-7427 -7507 7542 0
-7427 -7505 7540 0
-7427 -7503 7538 0
-7427 -7501 7536 0
-7427 -7499 7534 0
-7427 -7497 7532 0
-7427 -7495 7530 0
-7427 -7493 7528 0
-7427 -7491 7526 0
-7427 -7489 7524 0
-7427 -7487 7522 0
-7427 -7486 7520 0
-7425 7550 0
-7425 -7515 7548 0
-7425 -7513 7546 0
-7425 -7511 7544 0
-7425 -7509 7542 0
-7425 -7507 7540 0
-7425 -7505 7538 0
-7425 -7503 7536 0
-7425 -7501 7534 0
-7425 -7499 7532 0
-7425 -7497 7530 0
-7425 -7495 7528 0
-7425 -7493 7526 0
-7425 -7491 7524 0
-7425 -7489 7522 0
-7425 -7487 7520 0
-7425 -7486 7518 0
-7424 7548 0
-7424 -7515 7546 0
-7424 -7513 7544 0
-7424 -7511 7542 0
-7424 -7509 7540 0
-7424 -7507 7538 0
-7424 -7505 7536 0
-7424 -7503 7534 0
-7424 -7501 7532 0
-7424 -7499 7530 0
-7424 -7497 7528 0
-7424 -7495 7526 0
-7424 -7493 7524 0
-7424 -7491 7522 0
-7424 -7489 7520 0
-7424 -7487 7518 0
-7424 -7486 7517 0
c ((aux1370 + aux1372 - aux1375)<=0)
7455 -7580 0
7456 -7581 0
7458 -7583 0
7460 -7585 0
7462 -7587 0
7464 -7589 0
7466 -7591 0
7468 -7593 0
7470 -7595 0
7472 -7597 0
7474 -7599 0
7476 -7601 0
7478 -7603 0
7480 -7605 0
7482 -7607 0
7484 -7609 0
7393 -7580 0
7393 7455 -7581 0
7393 7456 -7583 0
7393 7458 -7585 0
7393 7460 -7587 0
7393 7462 -7589 0
7393 7464 -7591 0
7393 7466 -7593 0
7393 7468 -7595 0
7393 7470 -7597 0
7393 7472 -7599 0
7393 7474 -7601 0
7393 7476 -7603 0
7393 7478 -7605 0
7393 7480 -7607 0
7393 7482 -7609 0
7393 7484 -7611 0
7394 -7581 0
7394 7455 -7583 0
7394 7456 -7585 0
7394 7458 -7587 0
7394 7460 -7589 0
7394 7462 -7591 0
7394 7464 -7593 0
7394 7466 -7595 0
7394 7468 -7597 0
7394 7470 -7599 0
7394 7472 -7601 0
7394 7474 -7603 0
7394 7476 -7605 0
7394 7478 -7607 0
7394 7480 -7609 0
7394 7482 -7611 0
7394 7484 -7613 0
7396 -7583 0
7396 7455 -7585 0
7396 7456 -7587 0
7396 7458 -7589 0
7396 7460 -7591 0
7396 7462 -7593 0
7396 7464 -7595 0
7396 7466 -7597 0
7396 7468 -7599 0
7396 7470 -7601 0
7396 7472 -7603 0
7396 7474 -7605 0
7396 7476 -7607 0
7396 7478 -7609 0
7396 7480 -7611 0
7396 7482 -7613 0
7396 7484 -7615 0
7398 -7585 0
7398 7455 -7587 0
7398 7456 -7589 0
7398 7458 -7591 0
7398 7460 -7593 0
7398 7462 -7595 0
7398 7464 -7597 0
7398 7466 -7599 0
7398 7468 -7601 0
7398 7470 -7603 0
7398 7472 -7605 0
7398 7474 -7607 0
7398 7476 -7609 0
7398 7478 -7611 0
7398 7480 -7613 0
7398 7482 -7615 0
7398 7484 -7617 0
7400 -7587 0
7400 7455 -7589 0
7400 7456 -7591 0
7400 7458 -7593 0
7400 7460 -7595 0
7400 7462 -7597 0
7400 7464 -7599 0
7400 7466 -7601 0
7400 7468 -7603 0
7400 7470 -7605 0
7400 7472 -7607 0
7400 7474 -7609 0
7400 7476 -7611 0
7400 7478 -7613 0
7400 7480 -7615 0
7400 7482 -7617 0
7400 7484 -7619 0
7402 -7589 0
7402 7455 -7591 0
7402 7456 -7593 0
7402 7458 -7595 0
7402 7460 -7597 0
7402 7462 -7599 0
7402 7464 -7601 0
7402 7466 -7603 0
7402 7468 -7605 0
7402 7470 -7607 0
7402 7472 -7609 0
7402 7474 -7611 0
7402 7476 -7613 0
7402 7478 -7615 0
7402 7480 -7617 0
7402 7482 -7619 0
7402 7484 -7621 0
7404 -7591 0
7404 7455 -7593 0
7404 7456 -7595 0
7404 7458 -7597 0
7404 7460 -7599 0
7404 7462 -7601 0
7404 7464 -7603 0
7404 7466 -7605 0
7404 7468 -7607 0
7404 7470 -7609 0
7404 7472 -7611 0
7404 7474 -7613 0
7404 7476 -7615 0
7404 7478 -7617 0
7404 7480 -7619 0
7404 7482 -7621 0
7404 7484 -7623 0
7406 -7593 0
7406 7455 -7595 0
7406 7456 -7597 0
7406 7458 -7599 0
7406 7460 -7601 0
7406 7462 -7603 0
7406 7464 -7605 0
7406 7466 -7607 0
7406 7468 -7609 0
7406 7470 -7611 0
7406 7472 -7613 0
7406 7474 -7615 0
7406 7476 -7617 0
7406 7478 -7619 0
7406 7480 -7621 0
7406 7482 -7623 0
7406 7484 -7625 0
7408 -7595 0
7408 7455 -7597 0
7408 7456 -7599 0
7408 7458 -7601 0
7408 7460 -7603 0
7408 7462 -7605 0
7408 7464 -7607 0
7408 7466 -7609 0
7408 7468 -7611 0
7408 7470 -7613 0
7408 7472 -7615 0
7408 7474 -7617 0
7408 7476 -7619 0
7408 7478 -7621 0
7408 7480 -7623 0
7408 7482 -7625 0
7408 7484 -7627 0
7410 -7597 0
7410 7455 -7599 0
7410 7456 -7601 0
7410 7458 -7603 0
7410 7460 -7605 0
7410 7462 -7607 0
7410 7464 -7609 0
7410 7466 -7611 0
7410 7468 -7613 0
7410 7470 -7615 0
7410 7472 -7617 0
7410 7474 -7619 0
7410 7476 -7621 0
7410 7478 -7623 0
7410 7480 -7625 0
7410 7482 -7627 0
7410 7484 -7629 0
7412 -7599 0
7412 7455 -7601 0
7412 7456 -7603 0
7412 7458 -7605 0
7412 7460 -7607 0
7412 7462 -7609 0
7412 7464 -7611 0
7412 7466 -7613 0
7412 7468 -7615 0
7412 7470 -7617 0
7412 7472 -7619 0
7412 7474 -7621 0
7412 7476 -7623 0
7412 7478 -7625 0
7412 7480 -7627 0
7412 7482 -7629 0
7412 7484 -7631 0
7414 -7601 0
7414 7455 -7603 0
7414 7456 -7605 0
7414 7458 -7607 0
7414 7460 -7609 0
7414 7462 -7611 0
7414 7464 -7613 0
7414 7466 -7615 0
7414 7468 -7617 0
7414 7470 -7619 0
7414 7472 -7621 0
7414 7474 -7623 0
7414 7476 -7625 0
7414 7478 -7627 0
7414 7480 -7629 0
7414 7482 -7631 0
7414 7484 -7633 0
7416 -7603 0
7416 7455 -7605 0
7416 7456 -7607 0
7416 7458 -7609 0
7416 7460 -7611 0
7416 7462 -7613 0
7416 7464 -7615 0
7416 7466 -7617 0
7416 7468 -7619 0
7416 7470 -7621 0
7416 7472 -7623 0
7416 7474 -7625 0
7416 7476 -7627 0
7416 7478 -7629 0
7416 7480 -7631 0
7416 7482 -7633 0
7416 7484 -7635 0
7418 -7605 0
7418 7455 -7607 0
7418 7456 -7609 0
7418 7458 -7611 0
7418 7460 -7613 0
7418 7462 -7615 0
7418 7464 -7617 0
7418 7466 -7619 0
7418 7468 -7621 0
7418 7470 -7623 0
7418 7472 -7625 0
7418 7474 -7627 0
7418 7476 -7629 0
7418 7478 -7631 0
7418 7480 -7633 0
7418 7482 -7635 0
7418 7484 -7637 0
7420 -7607 0
7420 7455 -7609 0
7420 7456 -7611 0
7420 7458 -7613 0
7420 7460 -7615 0
7420 7462 -7617 0
7420 7464 -7619 0
7420 7466 -7621 0
7420 7468 -7623 0
7420 7470 -7625 0
7420 7472 -7627 0
7420 7474 -7629 0
7420 7476 -7631 0
7420 7478 -7633 0
7420 7480 -7635 0
7420 7482 -7637 0
7420 7484 -7639 0
7422 -7609 0
7422 7455 -7611 0
7422 7456 -7613 0
7422 7458 -7615 0
7422 7460 -7617 0
7422 7462 -7619 0
7422 7464 -7621 0
7422 7466 -7623 0
7422 7468 -7625 0
7422 7470 -7627 0
7422 7472 -7629 0
7422 7474 -7631 0
7422 7476 -7633 0
7422 7478 -7635 0
7422 7480 -7637 0
7422 7482 -7639 0
7422 7484 -7641 0
c (0<=(aux1370 + aux1372 - aux1375))
-7484 7641 0
-7482 7639 0
-7480 7637 0
-7478 7635 0
-7476 7633 0
-7474 7631 0
-7472 7629 0
-7470 7627 0
-7468 7625 0
-7466 7623 0
-7464 7621 0
-7462 7619 0
-7460 7617 0
-7458 7615 0
-7456 7613 0
-7455 7611 0
-7422 7641 0
-7422 -7484 7639 0
-7422 -7482 7637 0
-7422 -7480 7635 0
-7422 -7478 7633 0
-7422 -7476 7631 0
-7422 -7474 7629 0
-7422 -7472 7627 0
-7422 -7470 7625 0
-7422 -7468 7623 0
-7422 -7466 7621 0
-7422 -7464 7619 0
-7422 -7462 7617 0
-7422 -7460 7615 0
-7422 -7458 7613 0
-7422 -7456 7611 0
-7422 -7455 7609 0
-7420 7639 0
-7420 -7484 7637 0
-7420 -7482 7635 0
-7420 -7480 7633 0
-7420 -7478 7631 0
-7420 -7476 7629 0
-7420 -7474 7627 0
-7420 -7472 7625 0
-7420 -7470 7623 0
-7420 -7468 7621 0
-7420 -7466 7619 0
-7420 -7464 7617 0
-7420 -7462 7615 0
-7420 -7460 7613 0
-7420 -7458 7611 0
-7420 -7456 7609 0
-7420 -7455 7607 0
-7418 7637 0
-7418 -7484 7635 0
-7418 -7482 7633 0
-7418 -7480 7631 0
-7418 -7478 7629 0
-7418 -7476 7627 0
-7418 -7474 7625 0
-7418 -7472 7623 0
-7418 -7470 7621 0
-7418 -7468 7619 0
-7418 -7466 7617 0
-7418 -7464 7615 0
-7418 -7462 7613 0
-7418 -7460 7611 0
-7418 -7458 7609 0
-7418 -7456 7607 0
-7418 -7455 7605 0
-7416 7635 0
-7416 -7484 7633 0
-7416 -7482 7631 0
-7416 -7480 7629 0
-7416 -7478 7627 0
-7416 -7476 7625 0
-7416 -7474 7623 0
-7416 -7472 7621 0
-7416 -7470 7619 0
-7416 -7468 7617 0
-7416 -7466 7615 0
-7416 -7464 7613 0
-7416 -7462 7611 0
-7416 -7460 7609 0
-7416 -7458 7607 0
-7416 -7456 7605 0
-7416 -7455 7603 0
-7414 7633 0
-7414 -7484 7631 0
-7414 -7482 7629 0
-7414 -7480 7627 0
-7414 -7478 7625 0
-7414 -7476 7623 0
-7414 -7474 7621 0
-7414 -7472 7619 0
-7414 -7470 7617 0
-7414 -7468 7615 0
-7414 -7466 7613 0
-7414 -7464 7611 0
-7414 -7462 7609 0
-7414 -7460 7607 0
-7414 -7458 7605 0
-7414 -7456 7603 0
-7414 -7455 7601 0
-7412 7631 0
-7412 -7484 7629 0
-7412 -7482 7627 0
-7412 -7480 7625 0
-7412 -7478 7623 0
-7412 -7476 7621 0
-7412 -7474 7619 0
-7412 -7472 7617 0
-7412 -7470 7615 0
-7412 -7468 7613 0
-7412 -7466 7611 0
-7412 -7464 7609 0
-7412 -7462 7607 0
-7412 -7460 7605 0
-7412 -7458 7603 0
-7412 -7456 7601 0
-7412 -7455 7599 0
-7410 7629 0
-7410 -7484 7627 0
-7410 -7482 7625 0
-7410 -7480 7623 0
-7410 -7478 7621 0
-7410 -7476 7619 0
-7410 -7474 7617 0
-7410 -7472 7615 0
-7410 -7470 7613 0
-7410 -7468 7611 0
-7410 -7466 7609 0
-7410 -7464 7607 0
-7410 -7462 7605 0
-7410 -7460 7603 0
-7410 -7458 7601 0
-7410 -7456 7599 0
-7410 -7455 7597 0
-7408 7627 0
-7408 -7484 7625 0
-7408 -7482 7623 0
-7408 -7480 7621 0
-7408 -7478 7619 0
-7408 -7476 7617 0
-7408 -7474 7615 0
-7408 -7472 7613 0
-7408 -7470 7611 0
-7408 -7468 7609 0
-7408 -7466 7607 0
-7408 -7464 7605 0
-7408 -7462 7603 0
-7408 -7460 7601 0
-7408 -7458 7599 0
-7408 -7456 7597 0
-7408 -7455 7595 0
-7406 7625 0
-7406 -7484 7623 0
-7406 -7482 7621 0
-7406 -7480 7619 0
-7406 -7478 7617 0
-7406 -7476 7615 0
-7406 -7474 7613 0
-7406 -7472 7611 0
-7406 -7470 7609 0
-7406 -7468 7607 0
-7406 -7466 7605 0
-7406 -7464 7603 0
-7406 -7462 7601 0
-7406 -7460 7599 0
-7406 -7458 7597 0
-7406 -7456 7595 0
-7406 -7455 7593 0
-7404 7623 0
-7404 -7484 7621 0
-7404 -7482 7619 0
-7404 -7480 7617 0
-7404 -7478 7615 0
-7404 -7476 7613 0
-7404 -7474 7611 0
-7404 -7472 7609 0
-7404 -7470 7607 0
-7404 -7468 7605 0
-7404 -7466 7603 0
-7404 -7464 7601 0
-7404 -7462 7599 0
-7404 -7460 7597 0
-7404 -7458 7595 0
-7404 -7456 7593 0
-7404 -7455 7591 0
-7402 7621 0
-7402 -7484 7619 0
-7402 -7482 7617 0
-7402 -7480 7615 0
-7402 -7478 7613 0
-7402 -7476 7611 0
-7402 -7474 7609 0
-7402 -7472 7607 0
-7402 -7470 7605 0
-7402 -7468 7603 0
-7402 -7466 7601 0
-7402 -7464 7599 0
-7402 -7462 7597 0
-7402 -7460 7595 0
-7402 -7458 7593 0
-7402 -7456 7591 0
-7402 -7455 7589 0
-7400 7619 0
-7400 -7484 7617 0
-7400 -7482 7615 0
-7400 -7480 7613 0
-7400 -7478 7611 0
-7400 -7476 7609 0
-7400 -7474 7607 0
-7400 -7472 7605 0
-7400 -7470 7603 0
-7400 -7468 7601 0
-7400 -7466 7599 0
-7400 -7464 7597 0
-7400 -7462 7595 0
-7400 -7460 7593 0
-7400 -7458 7591 0
-7400 -7456 7589 0
-7400 -7455 7587 0
-7398 7617 0
-7398 -7484 7615 0
-7398 -7482 7613 0
-7398 -7480 7611 0
-7398 -7478 7609 0
-7398 -7476 7607 0
-7398 -7474 7605 0
-7398 -7472 7603 0
-7398 -7470 7601 0
-7398 -7468 7599 0
-7398 -7466 7597 0
-7398 -7464 7595 0
-7398 -7462 7593 0
-7398 -7460 7591 0
-7398 -7458 7589 0
-7398 -7456 7587 0
-7398 -7455 7585 0
-7396 7615 0
-7396 -7484 7613 0
-7396 -7482 7611 0
-7396 -7480 7609 0
-7396 -7478 7607 0
-7396 -7476 7605 0
-7396 -7474 7603 0
-7396 -7472 7601 0
-7396 -7470 7599 0
-7396 -7468 7597 0
-7396 -7466 7595 0
-7396 -7464 7593 0
-7396 -7462 7591 0
-7396 -7460 7589 0
-7396 -7458 7587 0
-7396 -7456 7585 0
-7396 -7455 7583 0
-7394 7613 0
-7394 -7484 7611 0
-7394 -7482 7609 0
-7394 -7480 7607 0
-7394 -7478 7605 0
-7394 -7476 7603 0
-7394 -7474 7601 0
-7394 -7472 7599 0
-7394 -7470 7597 0
-7394 -7468 7595 0
-7394 -7466 7593 0
-7394 -7464 7591 0
-7394 -7462 7589 0
-7394 -7460 7587 0
-7394 -7458 7585 0
-7394 -7456 7583 0
-7394 -7455 7581 0
-7393 7611 0
-7393 -7484 7609 0
-7393 -7482 7607 0
-7393 -7480 7605 0
-7393 -7478 7603 0
-7393 -7476 7601 0
-7393 -7474 7599 0
-7393 -7472 7597 0
-7393 -7470 7595 0
-7393 -7468 7593 0
-7393 -7466 7591 0
-7393 -7464 7589 0
-7393 -7462 7587 0
-7393 -7460 7585 0
-7393 -7458 7583 0
-7393 -7456 7581 0
-7393 -7455 7580 0
c ((SATLiteral(176) + SATLiteral(183) - aux1376)<=0)
-183 -7643 0
-176 -7643 0
-176 -183 -7644 0
c (0<=(SATLiteral(176) + SATLiteral(183) - aux1376))
183 7644 0
176 7644 0
176 183 7643 0
c ((SATLiteral(197) + SATLiteral(225) - aux1377)<=0)
-225 -7646 0
-197 -7646 0
-197 -225 -7647 0
c (0<=(SATLiteral(197) + SATLiteral(225) - aux1377))
225 7647 0
197 7647 0
197 225 7646 0
c ((SATLiteral(113) - aux1378 + SATLiteral(330))<=0)
-330 -7649 0
-113 -7649 0
-113 -330 -7650 0
c (0<=(SATLiteral(113) - aux1378 + SATLiteral(330)))
330 7650 0
113 7650 0
113 330 7649 0
c (( - aux1379 + SATLiteral(281) + SATLiteral(323))<=0)
-323 -7652 0
-281 -7652 0
-281 -323 -7653 0
c (0<=( - aux1379 + SATLiteral(281) + SATLiteral(323)))
323 7653 0
281 7653 0
281 323 7652 0
c (( - aux1380 + SATLiteral(316) + SATLiteral(337))<=0)
-337 -7655 0
-316 -7655 0
-316 -337 -7656 0
c (0<=( - aux1380 + SATLiteral(316) + SATLiteral(337)))
337 7656 0
316 7656 0
316 337 7655 0
c (( - aux1381 + SATLiteral(120) + SATLiteral(309))<=0)
-309 -7658 0
-120 -7658 0
-120 -309 -7659 0
c (0<=( - aux1381 + SATLiteral(120) + SATLiteral(309)))
309 7659 0
120 7659 0
120 309 7658 0
c ((SATLiteral(344) - aux1382 + SATLiteral(302))<=0)
-302 -7661 0
-344 -7661 0
-344 -302 -7662 0
c (0<=(SATLiteral(344) - aux1382 + SATLiteral(302)))
302 7662 0
344 7662 0
344 302 7661 0
c (( - aux1383 + SATLiteral(127) + SATLiteral(295))<=0)
-295 -7664 0
-127 -7664 0
-127 -295 -7665 0
c (0<=( - aux1383 + SATLiteral(127) + SATLiteral(295)))
295 7665 0
127 7665 0
127 295 7664 0
c (( - aux1384 + SATLiteral(134) + SATLiteral(288))<=0)
-288 -7667 0
-134 -7667 0
-134 -288 -7668 0
c (0<=( - aux1384 + SATLiteral(134) + SATLiteral(288)))
288 7668 0
134 7668 0
134 288 7667 0
c ((SATLiteral(64) - aux1385 + SATLiteral(57))<=0)
-57 -7670 0
-64 -7670 0
-64 -57 -7671 0
c (0<=(SATLiteral(64) - aux1385 + SATLiteral(57)))
57 7671 0
64 7671 0
64 57 7670 0
c ((SATLiteral(351) - aux1386 + SATLiteral(50))<=0)
-50 -7673 0
-351 -7673 0
-351 -50 -7674 0
c (0<=(SATLiteral(351) - aux1386 + SATLiteral(50)))
50 7674 0
351 7674 0
351 50 7673 0
c (( - aux1387 + SATLiteral(141) + SATLiteral(43))<=0)
-43 -7676 0
-141 -7676 0
-141 -43 -7677 0
c (0<=( - aux1387 + SATLiteral(141) + SATLiteral(43)))
43 7677 0
141 7677 0
141 43 7676 0
c (( - aux1388 + SATLiteral(148) + SATLiteral(36))<=0)
-36 -7679 0
-148 -7679 0
-148 -36 -7680 0
c (0<=( - aux1388 + SATLiteral(148) + SATLiteral(36)))
36 7680 0
148 7680 0
148 36 7679 0
c ((SATLiteral(358) - aux1389 + SATLiteral(29))<=0)
-29 -7682 0
-358 -7682 0
-358 -29 -7683 0
c (0<=(SATLiteral(358) - aux1389 + SATLiteral(29)))
29 7683 0
358 7683 0
358 29 7682 0
c (( - aux1390 + SATLiteral(155) + SATLiteral(22))<=0)
-22 -7685 0
-155 -7685 0
-155 -22 -7686 0
c (0<=( - aux1390 + SATLiteral(155) + SATLiteral(22)))
22 7686 0
155 7686 0
155 22 7685 0
c (( - aux1391 + SATLiteral(162) + SATLiteral(15))<=0)
-15 -7688 0
-162 -7688 0
-162 -15 -7689 0
c (0<=( - aux1391 + SATLiteral(162) + SATLiteral(15)))
15 7689 0
162 7689 0
162 15 7688 0
c ((SATLiteral(204) - aux1392 + SATLiteral(8))<=0)
-8 -7691 0
-204 -7691 0
-204 -8 -7692 0
c (0<=(SATLiteral(204) - aux1392 + SATLiteral(8)))
8 7692 0
204 7692 0
204 8 7691 0
c ((SATLiteral(71) - aux1393 + SATLiteral(449))<=0)
-449 -7694 0
-71 -7694 0
-71 -449 -7695 0
c (0<=(SATLiteral(71) - aux1393 + SATLiteral(449)))
449 7695 0
71 7695 0
71 449 7694 0
c ((SATLiteral(365) - aux1394 + SATLiteral(442))<=0)
-442 -7697 0
-365 -7697 0
-365 -442 -7698 0
c (0<=(SATLiteral(365) - aux1394 + SATLiteral(442)))
442 7698 0
365 7698 0
365 442 7697 0
c (( - aux1395 + SATLiteral(169) + SATLiteral(435))<=0)
-435 -7700 0
-169 -7700 0
-169 -435 -7701 0
c (0<=( - aux1395 + SATLiteral(169) + SATLiteral(435)))
435 7701 0
169 7701 0
169 435 7700 0
c (( - aux1396 + SATLiteral(400) + SATLiteral(428))<=0)
-428 -7703 0
-400 -7703 0
-400 -428 -7704 0
c (0<=( - aux1396 + SATLiteral(400) + SATLiteral(428)))
428 7704 0
400 7704 0
400 428 7703 0
c ((SATLiteral(372) - aux1397 + SATLiteral(421))<=0)
-421 -7706 0
-372 -7706 0
-372 -421 -7707 0
c (0<=(SATLiteral(372) - aux1397 + SATLiteral(421)))
421 7707 0
372 7707 0
372 421 7706 0
c (( - aux1398 + SATLiteral(407) + SATLiteral(414))<=0)
-414 -7709 0
-407 -7709 0
-407 -414 -7710 0
c (0<=( - aux1398 + SATLiteral(407) + SATLiteral(414)))
414 7710 0
407 7710 0
407 414 7709 0
c ((SATLiteral(78) + SATLiteral(379) - aux1399)<=0)
-379 -7712 0
-78 -7712 0
-78 -379 -7713 0
c (0<=(SATLiteral(78) + SATLiteral(379) - aux1399))
379 7713 0
78 7713 0
78 379 7712 0
c ((SATLiteral(190) + SATLiteral(386) - aux1400)<=0)
-386 -7715 0
-190 -7715 0
-190 -386 -7716 0
c (0<=(SATLiteral(190) + SATLiteral(386) - aux1400))
386 7716 0
190 7716 0
190 386 7715 0
c ((SATLiteral(211) + SATLiteral(85) - aux1401)<=0)
-85 -7718 0
-211 -7718 0
-211 -85 -7719 0
c (0<=(SATLiteral(211) + SATLiteral(85) - aux1401))
85 7719 0
211 7719 0
211 85 7718 0
c ((SATLiteral(393) - aux1402 + SATLiteral(232))<=0)
-232 -7721 0
-393 -7721 0
-393 -232 -7722 0
c (0<=(SATLiteral(393) - aux1402 + SATLiteral(232)))
232 7722 0
393 7722 0
393 232 7721 0
c ((SATLiteral(92) - aux1403 + SATLiteral(239))<=0)
-239 -7724 0
-92 -7724 0
-92 -239 -7725 0
c (0<=(SATLiteral(92) - aux1403 + SATLiteral(239)))
239 7725 0
92 7725 0
92 239 7724 0
c ((SATLiteral(218) - aux1404 + SATLiteral(246))<=0)
-246 -7727 0
-218 -7727 0
-218 -246 -7728 0
c (0<=(SATLiteral(218) - aux1404 + SATLiteral(246)))
246 7728 0
218 7728 0
218 246 7727 0
c ((SATLiteral(99) - aux1405 + SATLiteral(253))<=0)
-253 -7730 0
-99 -7730 0
-99 -253 -7731 0
c (0<=(SATLiteral(99) - aux1405 + SATLiteral(253)))
253 7731 0
99 7731 0
99 253 7730 0
c ((SATLiteral(106) - aux1406 + SATLiteral(260))<=0)
-260 -7733 0
-106 -7733 0
-106 -260 -7734 0
c (0<=(SATLiteral(106) - aux1406 + SATLiteral(260)))
260 7734 0
106 7734 0
106 260 7733 0
c (( - aux1407 + SATLiteral(267) + SATLiteral(274))<=0)
-274 -7736 0
-267 -7736 0
-267 -274 -7737 0
c (0<=( - aux1407 + SATLiteral(267) + SATLiteral(274)))
274 7737 0
267 7737 0
267 274 7736 0
c ((aux1391 + aux1407 - aux1408)<=0)
7736 -7739 0
7737 -7740 0
7688 -7739 0
7688 7736 -7740 0
7688 7737 -7742 0
7689 -7740 0
7689 7736 -7742 0
7689 7737 -7744 0
c (0<=(aux1391 + aux1407 - aux1408))
-7737 7744 0
-7736 7742 0
-7689 7744 0
-7689 -7737 7742 0
-7689 -7736 7740 0
-7688 7742 0
-7688 -7737 7740 0
-7688 -7736 7739 0
c ((aux1381 + aux1389 - aux1409)<=0)
7682 -7746 0
7683 -7747 0
7658 -7746 0
7658 7682 -7747 0
7658 7683 -7749 0
7659 -7747 0
7659 7682 -7749 0
7659 7683 -7751 0
c (0<=(aux1381 + aux1389 - aux1409))
-7683 7751 0
-7682 7749 0
-7659 7751 0
-7659 -7683 7749 0
-7659 -7682 7747 0
-7658 7749 0
-7658 -7683 7747 0
-7658 -7682 7746 0
c ((aux1377 + aux1379 - aux1410)<=0)
7652 -7753 0
7653 -7754 0
7646 -7753 0
7646 7652 -7754 0
7646 7653 -7756 0
7647 -7754 0
7647 7652 -7756 0
7647 7653 -7758 0
c (0<=(aux1377 + aux1379 - aux1410))
-7653 7758 0
-7652 7756 0
-7647 7758 0
-7647 -7653 7756 0
-7647 -7652 7754 0
-7646 7756 0
-7646 -7653 7754 0
-7646 -7652 7753 0
c ((aux1376 + aux1404 - aux1411)<=0)
7727 -7760 0
7728 -7761 0
7643 -7760 0
7643 7727 -7761 0
7643 7728 -7763 0
7644 -7761 0
7644 7727 -7763 0
7644 7728 -7765 0
c (0<=(aux1376 + aux1404 - aux1411))
-7728 7765 0
-7727 7763 0
-7644 7765 0
-7644 -7728 7763 0
-7644 -7727 7761 0
-7643 7763 0
-7643 -7728 7761 0
-7643 -7727 7760 0
c ((aux1380 + aux1403 - aux1412)<=0)
7724 -7767 0
7725 -7768 0
7655 -7767 0
7655 7724 -7768 0
7655 7725 -7770 0
7656 -7768 0
7656 7724 -7770 0
7656 7725 -7772 0
c (0<=(aux1380 + aux1403 - aux1412))
-7725 7772 0
-7724 7770 0
-7656 7772 0
-7656 -7725 7770 0
-7656 -7724 7768 0
-7655 7770 0
-7655 -7725 7768 0
-7655 -7724 7767 0
c ((aux1383 + aux1388 - aux1413)<=0)
7679 -7774 0
7680 -7775 0
7664 -7774 0
7664 7679 -7775 0
7664 7680 -7777 0
7665 -7775 0
7665 7679 -7777 0
7665 7680 -7779 0
c (0<=(aux1383 + aux1388 - aux1413))
-7680 7779 0
-7679 7777 0
-7665 7779 0
-7665 -7680 7777 0
-7665 -7679 7775 0
-7664 7777 0
-7664 -7680 7775 0
-7664 -7679 7774 0
c ((aux1384 + aux1401 - aux1414)<=0)
7718 -7781 0
7719 -7782 0
7667 -7781 0
7667 7718 -7782 0
7667 7719 -7784 0
7668 -7782 0
7668 7718 -7784 0
7668 7719 -7786 0
c (0<=(aux1384 + aux1401 - aux1414))
-7719 7786 0
-7718 7784 0
-7668 7786 0
-7668 -7719 7784 0
-7668 -7718 7782 0
-7667 7784 0
-7667 -7719 7782 0
-7667 -7718 7781 0
c ((aux1386 + aux1387 - aux1415)<=0)
7676 -7788 0
7677 -7789 0
7673 -7788 0
7673 7676 -7789 0
7673 7677 -7791 0
7674 -7789 0
7674 7676 -7791 0
7674 7677 -7793 0
c (0<=(aux1386 + aux1387 - aux1415))
-7677 7793 0
-7676 7791 0
-7674 7793 0
-7674 -7677 7791 0
-7674 -7676 7789 0
-7673 7791 0
-7673 -7677 7789 0
-7673 -7676 7788 0
c ((aux1390 + aux1398 - aux1416)<=0)
7709 -7795 0
7710 -7796 0
7685 -7795 0
7685 7709 -7796 0
7685 7710 -7798 0
7686 -7796 0
7686 7709 -7798 0
7686 7710 -7800 0
c (0<=(aux1390 + aux1398 - aux1416))
-7710 7800 0
-7709 7798 0
-7686 7800 0
-7686 -7710 7798 0
-7686 -7709 7796 0
-7685 7798 0
-7685 -7710 7796 0
-7685 -7709 7795 0
c ((aux1396 + aux1399 - aux1417)<=0)
7712 -7802 0
7713 -7803 0
7703 -7802 0
7703 7712 -7803 0
7703 7713 -7805 0
7704 -7803 0
7704 7712 -7805 0
7704 7713 -7807 0
c (0<=(aux1396 + aux1399 - aux1417))
-7713 7807 0
-7712 7805 0
-7704 7807 0
-7704 -7713 7805 0
-7704 -7712 7803 0
-7703 7805 0
-7703 -7713 7803 0
-7703 -7712 7802 0
c ((aux1392 + aux1397 - aux1418)<=0)
7706 -7809 0
7707 -7810 0
7691 -7809 0
7691 7706 -7810 0
7691 7707 -7812 0
7692 -7810 0
7692 7706 -7812 0
7692 7707 -7814 0
c (0<=(aux1392 + aux1397 - aux1418))
-7707 7814 0
-7706 7812 0
-7692 7814 0
-7692 -7707 7812 0
-7692 -7706 7810 0
-7691 7812 0
-7691 -7707 7810 0
-7691 -7706 7809 0
c ((aux1393 + aux1395 - aux1419)<=0)
7700 -7816 0
7701 -7817 0
7694 -7816 0
7694 7700 -7817 0
7694 7701 -7819 0
7695 -7817 0
7695 7700 -7819 0
7695 7701 -7821 0
c (0<=(aux1393 + aux1395 - aux1419))
-7701 7821 0
-7700 7819 0
-7695 7821 0
-7695 -7701 7819 0
-7695 -7700 7817 0
-7694 7819 0
-7694 -7701 7817 0
-7694 -7700 7816 0
c ((aux1394 + aux1406 - aux1420)<=0)
7733 -7823 0
7734 -7824 0
7697 -7823 0
7697 7733 -7824 0
7697 7734 -7826 0
7698 -7824 0
7698 7733 -7826 0
7698 7734 -7828 0
c (0<=(aux1394 + aux1406 - aux1420))
-7734 7828 0
-7733 7826 0
-7698 7828 0
-7698 -7734 7826 0
-7698 -7733 7824 0
-7697 7826 0
-7697 -7734 7824 0
-7697 -7733 7823 0
c ((aux1400 + aux1402 - aux1421)<=0)
7721 -7830 0
7722 -7831 0
7715 -7830 0
7715 7721 -7831 0
7715 7722 -7833 0
7716 -7831 0
7716 7721 -7833 0
7716 7722 -7835 0
c (0<=(aux1400 + aux1402 - aux1421))
-7722 7835 0
-7721 7833 0
-7716 7835 0
-7716 -7722 7833 0
-7716 -7721 7831 0
-7715 7833 0
-7715 -7722 7831 0
-7715 -7721 7830 0
c ((aux1378 + aux1385 - aux1422)<=0)
7670 -7837 0
7671 -7838 0
7649 -7837 0
7649 7670 -7838 0
7649 7671 -7840 0
7650 -7838 0
7650 7670 -7840 0
7650 7671 -7842 0
c (0<=(aux1378 + aux1385 - aux1422))
-7671 7842 0
-7670 7840 0
-7650 7842 0
-7650 -7671 7840 0
-7650 -7670 7838 0
-7649 7840 0
-7649 -7671 7838 0
-7649 -7670 7837 0
c ((aux1382 + aux1405 - aux1423)<=0)
7730 -7844 0
7731 -7845 0
7661 -7844 0
7661 7730 -7845 0
7661 7731 -7847 0
7662 -7845 0
7662 7730 -7847 0
7662 7731 -7849 0
c (0<=(aux1382 + aux1405 - aux1423))
-7731 7849 0
-7730 7847 0
-7662 7849 0
-7662 -7731 7847 0
-7662 -7730 7845 0
-7661 7847 0
-7661 -7731 7845 0
-7661 -7730 7844 0
c ((aux1415 + aux1423 - aux1424)<=0)
7844 -7851 0
7845 -7852 0
7847 -7854 0
7849 -7856 0
7788 -7851 0
7788 7844 -7852 0
7788 7845 -7854 0
7788 7847 -7856 0
7788 7849 -7858 0
7789 -7852 0
7789 7844 -7854 0
7789 7845 -7856 0
7789 7847 -7858 0
7789 7849 -7860 0
7791 -7854 0
7791 7844 -7856 0
7791 7845 -7858 0
7791 7847 -7860 0
7791 7849 -7862 0
7793 -7856 0
7793 7844 -7858 0
7793 7845 -7860 0
7793 7847 -7862 0
7793 7849 -7864 0
c (0<=(aux1415 + aux1423 - aux1424))
-7849 7864 0
-7847 7862 0
-7845 7860 0
-7844 7858 0
-7793 7864 0
-7793 -7849 7862 0
-7793 -7847 7860 0
-7793 -7845 7858 0
-7793 -7844 7856 0
-7791 7862 0
-7791 -7849 7860 0
-7791 -7847 7858 0
-7791 -7845 7856 0
-7791 -7844 7854 0
-7789 7860 0
-7789 -7849 7858 0
-7789 -7847 7856 0
-7789 -7845 7854 0
-7789 -7844 7852 0
-7788 7858 0
-7788 -7849 7856 0
-7788 -7847 7854 0
-7788 -7845 7852 0
-7788 -7844 7851 0
c ((aux1409 + aux1413 - aux1425)<=0)
7774 -7866 0
7775 -7867 0
7777 -7869 0
7779 -7871 0
7746 -7866 0
7746 7774 -7867 0
7746 7775 -7869 0
7746 7777 -7871 0
7746 7779 -7873 0
7747 -7867 0
7747 7774 -7869 0
7747 7775 -7871 0
7747 7777 -7873 0
7747 7779 -7875 0
7749 -7869 0
7749 7774 -7871 0
7749 7775 -7873 0
7749 7777 -7875 0
7749 7779 -7877 0
7751 -7871 0
7751 7774 -7873 0
7751 7775 -7875 0
7751 7777 -7877 0
7751 7779 -7879 0
c (0<=(aux1409 + aux1413 - aux1425))
-7779 7879 0
-7777 7877 0
-7775 7875 0
-7774 7873 0
-7751 7879 0
-7751 -7779 7877 0
-7751 -7777 7875 0
-7751 -7775 7873 0
-7751 -7774 7871 0
-7749 7877 0
-7749 -7779 7875 0
-7749 -7777 7873 0
-7749 -7775 7871 0
-7749 -7774 7869 0
-7747 7875 0
-7747 -7779 7873 0
-7747 -7777 7871 0
-7747 -7775 7869 0
-7747 -7774 7867 0
-7746 7873 0
-7746 -7779 7871 0
-7746 -7777 7869 0
-7746 -7775 7867 0
-7746 -7774 7866 0
c ((aux1408 + aux1421 - aux1426)<=0)
7830 -7881 0
7831 -7882 0
7833 -7884 0
7835 -7886 0
7739 -7881 0
7739 7830 -7882 0
7739 7831 -7884 0
7739 7833 -7886 0
7739 7835 -7888 0
7740 -7882 0
7740 7830 -7884 0
7740 7831 -7886 0
7740 7833 -7888 0
7740 7835 -7890 0
7742 -7884 0
7742 7830 -7886 0
7742 7831 -7888 0
7742 7833 -7890 0
7742 7835 -7892 0
7744 -7886 0
7744 7830 -7888 0
7744 7831 -7890 0
7744 7833 -7892 0
7744 7835 -7894 0
c (0<=(aux1408 + aux1421 - aux1426))
-7835 7894 0
-7833 7892 0
-7831 7890 0
-7830 7888 0
-7744 7894 0
-7744 -7835 7892 0
-7744 -7833 7890 0
-7744 -7831 7888 0
-7744 -7830 7886 0
-7742 7892 0
-7742 -7835 7890 0
-7742 -7833 7888 0
-7742 -7831 7886 0
-7742 -7830 7884 0
-7740 7890 0
-7740 -7835 7888 0
-7740 -7833 7886 0
-7740 -7831 7884 0
-7740 -7830 7882 0
-7739 7888 0
-7739 -7835 7886 0
-7739 -7833 7884 0
-7739 -7831 7882 0
-7739 -7830 7881 0
c ((aux1411 + aux1412 - aux1427)<=0)
7767 -7896 0
7768 -7897 0
7770 -7899 0
7772 -7901 0
7760 -7896 0
7760 7767 -7897 0
7760 7768 -7899 0
7760 7770 -7901 0
7760 7772 -7903 0
7761 -7897 0
7761 7767 -7899 0
7761 7768 -7901 0
7761 7770 -7903 0
7761 7772 -7905 0
7763 -7899 0
7763 7767 -7901 0
7763 7768 -7903 0
7763 7770 -7905 0
7763 7772 -7907 0
7765 -7901 0
7765 7767 -7903 0
7765 7768 -7905 0
7765 7770 -7907 0
7765 7772 -7909 0
c (0<=(aux1411 + aux1412 - aux1427))
-7772 7909 0
-7770 7907 0
-7768 7905 0
-7767 7903 0
-7765 7909 0
-7765 -7772 7907 0
-7765 -7770 7905 0
-7765 -7768 7903 0
-7765 -7767 7901 0
-7763 7907 0
-7763 -7772 7905 0
-7763 -7770 7903 0
-7763 -7768 7901 0
-7763 -7767 7899 0
-7761 7905 0
-7761 -7772 7903 0
-7761 -7770 7901 0
-7761 -7768 7899 0
-7761 -7767 7897 0
-7760 7903 0
-7760 -7772 7901 0
-7760 -7770 7899 0
-7760 -7768 7897 0
-7760 -7767 7896 0
c ((aux1414 + aux1418 - aux1428)<=0)
7809 -7911 0
7810 -7912 0
7812 -7914 0
7814 -7916 0
7781 -7911 0
7781 7809 -7912 0
7781 7810 -7914 0
7781 7812 -7916 0
7781 7814 -7918 0
7782 -7912 0
7782 7809 -7914 0
7782 7810 -7916 0
7782 7812 -7918 0
7782 7814 -7920 0
7784 -7914 0
7784 7809 -7916 0
7784 7810 -7918 0
7784 7812 -7920 0
7784 7814 -7922 0
7786 -7916 0
7786 7809 -7918 0
7786 7810 -7920 0
7786 7812 -7922 0
7786 7814 -7924 0
c (0<=(aux1414 + aux1418 - aux1428))
-7814 7924 0
-7812 7922 0
-7810 7920 0
-7809 7918 0
-7786 7924 0
-7786 -7814 7922 0
-7786 -7812 7920 0
-7786 -7810 7918 0
-7786 -7809 7916 0
-7784 7922 0
-7784 -7814 7920 0
-7784 -7812 7918 0
-7784 -7810 7916 0
-7784 -7809 7914 0
-7782 7920 0
-7782 -7814 7918 0
-7782 -7812 7916 0
-7782 -7810 7914 0
-7782 -7809 7912 0
-7781 7918 0
-7781 -7814 7916 0
-7781 -7812 7914 0
-7781 -7810 7912 0
-7781 -7809 7911 0
c ((aux1416 + aux1419 - aux1429)<=0)
7816 -7926 0
7817 -7927 0
7819 -7929 0
7821 -7931 0
7795 -7926 0
7795 7816 -7927 0
7795 7817 -7929 0
7795 7819 -7931 0
7795 7821 -7933 0
7796 -7927 0
7796 7816 -7929 0
7796 7817 -7931 0
7796 7819 -7933 0
7796 7821 -7935 0
7798 -7929 0
7798 7816 -7931 0
7798 7817 -7933 0
7798 7819 -7935 0
7798 7821 -7937 0
7800 -7931 0
7800 7816 -7933 0
7800 7817 -7935 0
7800 7819 -7937 0
7800 7821 -7939 0
c (0<=(aux1416 + aux1419 - aux1429))
-7821 7939 0
-7819 7937 0
-7817 7935 0
-7816 7933 0
-7800 7939 0
-7800 -7821 7937 0
-7800 -7819 7935 0
-7800 -7817 7933 0
-7800 -7816 7931 0
-7798 7937 0
-7798 -7821 7935 0
-7798 -7819 7933 0
-7798 -7817 7931 0
-7798 -7816 7929 0
-7796 7935 0
-7796 -7821 7933 0
-7796 -7819 7931 0
-7796 -7817 7929 0
-7796 -7816 7927 0
-7795 7933 0
-7795 -7821 7931 0
-7795 -7819 7929 0
-7795 -7817 7927 0
-7795 -7816 7926 0
c ((aux1417 + aux1422 - aux1430)<=0)
7837 -7941 0
7838 -7942 0
7840 -7944 0
7842 -7946 0
7802 -7941 0
7802 7837 -7942 0
7802 7838 -7944 0
7802 7840 -7946 0
7802 7842 -7948 0
7803 -7942 0
7803 7837 -7944 0
7803 7838 -7946 0
7803 7840 -7948 0
7803 7842 -7950 0
7805 -7944 0
7805 7837 -7946 0
7805 7838 -7948 0
7805 7840 -7950 0
7805 7842 -7952 0
7807 -7946 0
7807 7837 -7948 0
7807 7838 -7950 0
7807 7840 -7952 0
7807 7842 -7954 0
c (0<=(aux1417 + aux1422 - aux1430))
-7842 7954 0
-7840 7952 0
-7838 7950 0
-7837 7948 0
-7807 7954 0
-7807 -7842 7952 0
-7807 -7840 7950 0
-7807 -7838 7948 0
-7807 -7837 7946 0
-7805 7952 0
-7805 -7842 7950 0
-7805 -7840 7948 0
-7805 -7838 7946 0
-7805 -7837 7944 0
-7803 7950 0
-7803 -7842 7948 0
-7803 -7840 7946 0
-7803 -7838 7944 0
-7803 -7837 7942 0
-7802 7948 0
-7802 -7842 7946 0
-7802 -7840 7944 0
-7802 -7838 7942 0
-7802 -7837 7941 0
c ((aux1410 + aux1420 - aux1431)<=0)
7823 -7956 0
7824 -7957 0
7826 -7959 0
7828 -7961 0
7753 -7956 0
7753 7823 -7957 0
7753 7824 -7959 0
7753 7826 -7961 0
7753 7828 -7963 0
7754 -7957 0
7754 7823 -7959 0
7754 7824 -7961 0
7754 7826 -7963 0
7754 7828 -7965 0
7756 -7959 0
7756 7823 -7961 0
7756 7824 -7963 0
7756 7826 -7965 0
7756 7828 -7967 0
7758 -7961 0
7758 7823 -7963 0
7758 7824 -7965 0
7758 7826 -7967 0
7758 7828 -7969 0
c (0<=(aux1410 + aux1420 - aux1431))
-7828 7969 0
-7826 7967 0
-7824 7965 0
-7823 7963 0
-7758 7969 0
-7758 -7828 7967 0
-7758 -7826 7965 0
-7758 -7824 7963 0
-7758 -7823 7961 0
-7756 7967 0
-7756 -7828 7965 0
-7756 -7826 7963 0
-7756 -7824 7961 0
-7756 -7823 7959 0
-7754 7965 0
-7754 -7828 7963 0
-7754 -7826 7961 0
-7754 -7824 7959 0
-7754 -7823 7957 0
-7753 7963 0
-7753 -7828 7961 0
-7753 -7826 7959 0
-7753 -7824 7957 0
-7753 -7823 7956 0
c ((aux1427 + aux1431 - aux1432)<=0)
7956 -7971 0
7957 -7972 0
7959 -7974 0
7961 -7976 0
7963 -7978 0
7965 -7980 0
7967 -7982 0
7969 -7984 0
7896 -7971 0
7896 7956 -7972 0
7896 7957 -7974 0
7896 7959 -7976 0
7896 7961 -7978 0
7896 7963 -7980 0
7896 7965 -7982 0
7896 7967 -7984 0
7896 7969 -7986 0
7897 -7972 0
7897 7956 -7974 0
7897 7957 -7976 0
7897 7959 -7978 0
7897 7961 -7980 0
7897 7963 -7982 0
7897 7965 -7984 0
7897 7967 -7986 0
7897 7969 -7988 0
7899 -7974 0
7899 7956 -7976 0
7899 7957 -7978 0
7899 7959 -7980 0
7899 7961 -7982 0
7899 7963 -7984 0
7899 7965 -7986 0
7899 7967 -7988 0
7899 7969 -7990 0
7901 -7976 0
7901 7956 -7978 0
7901 7957 -7980 0
7901 7959 -7982 0
7901 7961 -7984 0
7901 7963 -7986 0
7901 7965 -7988 0
7901 7967 -7990 0
7901 7969 -7992 0
7903 -7978 0
7903 7956 -7980 0
7903 7957 -7982 0
7903 7959 -7984 0
7903 7961 -7986 0
7903 7963 -7988 0
7903 7965 -7990 0
7903 7967 -7992 0
7903 7969 -7994 0
7905 -7980 0
7905 7956 -7982 0
7905 7957 -7984 0
7905 7959 -7986 0
7905 7961 -7988 0
7905 7963 -7990 0
7905 7965 -7992 0
7905 7967 -7994 0
7905 7969 -7996 0
7907 -7982 0
7907 7956 -7984 0
7907 7957 -7986 0
7907 7959 -7988 0
7907 7961 -7990 0
7907 7963 -7992 0
7907 7965 -7994 0
7907 7967 -7996 0
7907 7969 -7998 0
7909 -7984 0
7909 7956 -7986 0
7909 7957 -7988 0
7909 7959 -7990 0
7909 7961 -7992 0
7909 7963 -7994 0
7909 7965 -7996 0
7909 7967 -7998 0
7909 7969 -8000 0
c (0<=(aux1427 + aux1431 - aux1432))
-7969 8000 0
-7967 7998 0
-7965 7996 0
-7963 7994 0
-7961 7992 0
-7959 7990 0
-7957 7988 0
-7956 7986 0
-7909 8000 0
-7909 -7969 7998 0
-7909 -7967 7996 0
-7909 -7965 7994 0
-7909 -7963 7992 0
-7909 -7961 7990 0
-7909 -7959 7988 0
-7909 -7957 7986 0
-7909 -7956 7984 0
-7907 7998 0
-7907 -7969 7996 0
-7907 -7967 7994 0
-7907 -7965 7992 0
-7907 -7963 7990 0
-7907 -7961 7988 0
-7907 -7959 7986 0
-7907 -7957 7984 0
-7907 -7956 7982 0
-7905 7996 0
-7905 -7969 7994 0
-7905 -7967 7992 0
-7905 -7965 7990 0
-7905 -7963 7988 0
-7905 -7961 7986 0
-7905 -7959 7984 0
-7905 -7957 7982 0
-7905 -7956 7980 0
-7903 7994 0
-7903 -7969 7992 0
-7903 -7967 7990 0
-7903 -7965 7988 0
-7903 -7963 7986 0
-7903 -7961 7984 0
-7903 -7959 7982 0
-7903 -7957 7980 0
-7903 -7956 7978 0
-7901 7992 0
-7901 -7969 7990 0
-7901 -7967 7988 0
-7901 -7965 7986 0
-7901 -7963 7984 0
-7901 -7961 7982 0
-7901 -7959 7980 0
-7901 -7957 7978 0
-7901 -7956 7976 0
-7899 7990 0
-7899 -7969 7988 0
-7899 -7967 7986 0
-7899 -7965 7984 0
-7899 -7963 7982 0
-7899 -7961 7980 0
-7899 -7959 7978 0
-7899 -7957 7976 0
-7899 -7956 7974 0
-7897 7988 0
-7897 -7969 7986 0
-7897 -7967 7984 0
-7897 -7965 7982 0
-7897 -7963 7980 0
-7897 -7961 7978 0
-7897 -7959 7976 0
-7897 -7957 7974 0
-7897 -7956 7972 0
-7896 7986 0
-7896 -7969 7984 0
-7896 -7967 7982 0
-7896 -7965 7980 0
-7896 -7963 7978 0
-7896 -7961 7976 0
-7896 -7959 7974 0
-7896 -7957 7972 0
-7896 -7956 7971 0
c ((aux1424 + aux1425 - aux1433)<=0)
7866 -8002 0
7867 -8003 0
7869 -8005 0
7871 -8007 0
7873 -8009 0
7875 -8011 0
7877 -8013 0
7879 -8015 0
7851 -8002 0
7851 7866 -8003 0
7851 7867 -8005 0
7851 7869 -8007 0
7851 7871 -8009 0
7851 7873 -8011 0
7851 7875 -8013 0
7851 7877 -8015 0
7851 7879 -8017 0
7852 -8003 0
7852 7866 -8005 0
7852 7867 -8007 0
7852 7869 -8009 0
7852 7871 -8011 0
7852 7873 -8013 0
7852 7875 -8015 0
7852 7877 -8017 0
7852 7879 -8019 0
7854 -8005 0
7854 7866 -8007 0
7854 7867 -8009 0
7854 7869 -8011 0
7854 7871 -8013 0
7854 7873 -8015 0
7854 7875 -8017 0
7854 7877 -8019 0
7854 7879 -8021 0
7856 -8007 0
7856 7866 -8009 0
7856 7867 -8011 0
7856 7869 -8013 0
7856 7871 -8015 0
7856 7873 -8017 0
7856 7875 -8019 0
7856 7877 -8021 0
7856 7879 -8023 0
7858 -8009 0
7858 7866 -8011 0
7858 7867 -8013 0
7858 7869 -8015 0
7858 7871 -8017 0
7858 7873 -8019 0
7858 7875 -8021 0
7858 7877 -8023 0
7858 7879 -8025 0
7860 -8011 0
7860 7866 -8013 0
7860 7867 -8015 0
7860 7869 -8017 0
7860 7871 -8019 0
7860 7873 -8021 0
7860 7875 -8023 0
7860 7877 -8025 0
7860 7879 -8027 0
7862 -8013 0
7862 7866 -8015 0
7862 7867 -8017 0
7862 7869 -8019 0
7862 7871 -8021 0
7862 7873 -8023 0
7862 7875 -8025 0
7862 7877 -8027 0
7862 7879 -8029 0
7864 -8015 0
7864 7866 -8017 0
7864 7867 -8019 0
7864 7869 -8021 0
7864 7871 -8023 0
7864 7873 -8025 0
7864 7875 -8027 0
7864 7877 -8029 0
7864 7879 -8031 0
c (0<=(aux1424 + aux1425 - aux1433))
-7879 8031 0
-7877 8029 0
-7875 8027 0
-7873 8025 0
-7871 8023 0
-7869 8021 0
-7867 8019 0
-7866 8017 0
-7864 8031 0
-7864 -7879 8029 0
-7864 -7877 8027 0
-7864 -7875 8025 0
-7864 -7873 8023 0
-7864 -7871 8021 0
-7864 -7869 8019 0
-7864 -7867 8017 0
-7864 -7866 8015 0
-7862 8029 0
-7862 -7879 8027 0
-7862 -7877 8025 0
-7862 -7875 8023 0
-7862 -7873 8021 0
-7862 -7871 8019 0
-7862 -7869 8017 0
-7862 -7867 8015 0
-7862 -7866 8013 0
-7860 8027 0
-7860 -7879 8025 0
-7860 -7877 8023 0
-7860 -7875 8021 0
-7860 -7873 8019 0
-7860 -7871 8017 0
-7860 -7869 8015 0
-7860 -7867 8013 0
-7860 -7866 8011 0
-7858 8025 0
-7858 -7879 8023 0
-7858 -7877 8021 0
-7858 -7875 8019 0
-7858 -7873 8017 0
-7858 -7871 8015 0
-7858 -7869 8013 0
-7858 -7867 8011 0
-7858 -7866 8009 0
-7856 8023 0
-7856 -7879 8021 0
-7856 -7877 8019 0
-7856 -7875 8017 0
-7856 -7873 8015 0
-7856 -7871 8013 0
-7856 -7869 8011 0
-7856 -7867 8009 0
-7856 -7866 8007 0
-7854 8021 0
-7854 -7879 8019 0
-7854 -7877 8017 0
-7854 -7875 8015 0
-7854 -7873 8013 0
-7854 -7871 8011 0
-7854 -7869 8009 0
-7854 -7867 8007 0
-7854 -7866 8005 0
-7852 8019 0
-7852 -7879 8017 0
-7852 -7877 8015 0
-7852 -7875 8013 0
-7852 -7873 8011 0
-7852 -7871 8009 0
-7852 -7869 8007 0
-7852 -7867 8005 0
-7852 -7866 8003 0
-7851 8017 0
-7851 -7879 8015 0
-7851 -7877 8013 0
-7851 -7875 8011 0
-7851 -7873 8009 0
-7851 -7871 8007 0
-7851 -7869 8005 0
-7851 -7867 8003 0
-7851 -7866 8002 0
c ((aux1426 + aux1428 - aux1434)<=0)
7911 -8033 0
7912 -8034 0
7914 -8036 0
7916 -8038 0
7918 -8040 0
7920 -8042 0
7922 -8044 0
7924 -8046 0
7881 -8033 0
7881 7911 -8034 0
7881 7912 -8036 0
7881 7914 -8038 0
7881 7916 -8040 0
7881 7918 -8042 0
7881 7920 -8044 0
7881 7922 -8046 0
7881 7924 -8048 0
7882 -8034 0
7882 7911 -8036 0
7882 7912 -8038 0
7882 7914 -8040 0
7882 7916 -8042 0
7882 7918 -8044 0
7882 7920 -8046 0
7882 7922 -8048 0
7882 7924 -8050 0
7884 -8036 0
7884 7911 -8038 0
7884 7912 -8040 0
7884 7914 -8042 0
7884 7916 -8044 0
7884 7918 -8046 0
7884 7920 -8048 0
7884 7922 -8050 0
7884 7924 -8052 0
7886 -8038 0
7886 7911 -8040 0
7886 7912 -8042 0
7886 7914 -8044 0
7886 7916 -8046 0
7886 7918 -8048 0
7886 7920 -8050 0
7886 7922 -8052 0
7886 7924 -8054 0
7888 -8040 0
7888 7911 -8042 0
7888 7912 -8044 0
7888 7914 -8046 0
7888 7916 -8048 0
7888 7918 -8050 0
7888 7920 -8052 0
7888 7922 -8054 0
7888 7924 -8056 0
7890 -8042 0
7890 7911 -8044 0
7890 7912 -8046 0
7890 7914 -8048 0
7890 7916 -8050 0
7890 7918 -8052 0
7890 7920 -8054 0
7890 7922 -8056 0
7890 7924 -8058 0
7892 -8044 0
7892 7911 -8046 0
7892 7912 -8048 0
7892 7914 -8050 0
7892 7916 -8052 0
7892 7918 -8054 0
7892 7920 -8056 0
7892 7922 -8058 0
7892 7924 -8060 0
7894 -8046 0
7894 7911 -8048 0
7894 7912 -8050 0
7894 7914 -8052 0
7894 7916 -8054 0
7894 7918 -8056 0
7894 7920 -8058 0
7894 7922 -8060 0
7894 7924 -8062 0
c (0<=(aux1426 + aux1428 - aux1434))
-7924 8062 0
-7922 8060 0
-7920 8058 0
-7918 8056 0
-7916 8054 0
-7914 8052 0
-7912 8050 0
-7911 8048 0
-7894 8062 0
-7894 -7924 8060 0
-7894 -7922 8058 0
-7894 -7920 8056 0
-7894 -7918 8054 0
-7894 -7916 8052 0
-7894 -7914 8050 0
-7894 -7912 8048 0
-7894 -7911 8046 0
-7892 8060 0
-7892 -7924 8058 0
-7892 -7922 8056 0
-7892 -7920 8054 0
-7892 -7918 8052 0
-7892 -7916 8050 0
-7892 -7914 8048 0
-7892 -7912 8046 0
-7892 -7911 8044 0
-7890 8058 0
-7890 -7924 8056 0
-7890 -7922 8054 0
-7890 -7920 8052 0
-7890 -7918 8050 0
-7890 -7916 8048 0
-7890 -7914 8046 0
-7890 -7912 8044 0
-7890 -7911 8042 0
-7888 8056 0
-7888 -7924 8054 0
-7888 -7922 8052 0
-7888 -7920 8050 0
-7888 -7918 8048 0
-7888 -7916 8046 0
-7888 -7914 8044 0
-7888 -7912 8042 0
-7888 -7911 8040 0
-7886 8054 0
-7886 -7924 8052 0
-7886 -7922 8050 0
-7886 -7920 8048 0
-7886 -7918 8046 0
-7886 -7916 8044 0
-7886 -7914 8042 0
-7886 -7912 8040 0
-7886 -7911 8038 0
-7884 8052 0
-7884 -7924 8050 0
-7884 -7922 8048 0
-7884 -7920 8046 0
-7884 -7918 8044 0
-7884 -7916 8042 0
-7884 -7914 8040 0
-7884 -7912 8038 0
-7884 -7911 8036 0
-7882 8050 0
-7882 -7924 8048 0
-7882 -7922 8046 0
-7882 -7920 8044 0
-7882 -7918 8042 0
-7882 -7916 8040 0
-7882 -7914 8038 0
-7882 -7912 8036 0
-7882 -7911 8034 0
-7881 8048 0
-7881 -7924 8046 0
-7881 -7922 8044 0
-7881 -7920 8042 0
-7881 -7918 8040 0
-7881 -7916 8038 0
-7881 -7914 8036 0
-7881 -7912 8034 0
-7881 -7911 8033 0
c ((aux1429 + aux1430 - aux1435)<=0)
7941 -8064 0
7942 -8065 0
7944 -8067 0
7946 -8069 0
7948 -8071 0
7950 -8073 0
7952 -8075 0
7954 -8077 0
7926 -8064 0
7926 7941 -8065 0
7926 7942 -8067 0
7926 7944 -8069 0
7926 7946 -8071 0
7926 7948 -8073 0
7926 7950 -8075 0
7926 7952 -8077 0
7926 7954 -8079 0
7927 -8065 0
7927 7941 -8067 0
7927 7942 -8069 0
7927 7944 -8071 0
7927 7946 -8073 0
7927 7948 -8075 0
7927 7950 -8077 0
7927 7952 -8079 0
7927 7954 -8081 0
7929 -8067 0
7929 7941 -8069 0
7929 7942 -8071 0
7929 7944 -8073 0
7929 7946 -8075 0
7929 7948 -8077 0
7929 7950 -8079 0
7929 7952 -8081 0
7929 7954 -8083 0
7931 -8069 0
7931 7941 -8071 0
7931 7942 -8073 0
7931 7944 -8075 0
7931 7946 -8077 0
7931 7948 -8079 0
7931 7950 -8081 0
7931 7952 -8083 0
7931 7954 -8085 0
7933 -8071 0
7933 7941 -8073 0
7933 7942 -8075 0
7933 7944 -8077 0
7933 7946 -8079 0
7933 7948 -8081 0
7933 7950 -8083 0
7933 7952 -8085 0
7933 7954 -8087 0
7935 -8073 0
7935 7941 -8075 0
7935 7942 -8077 0
7935 7944 -8079 0
7935 7946 -8081 0
7935 7948 -8083 0
7935 7950 -8085 0
7935 7952 -8087 0
7935 7954 -8089 0
7937 -8075 0
7937 7941 -8077 0
7937 7942 -8079 0
7937 7944 -8081 0
7937 7946 -8083 0
7937 7948 -8085 0
7937 7950 -8087 0
7937 7952 -8089 0
7937 7954 -8091 0
7939 -8077 0
7939 7941 -8079 0
7939 7942 -8081 0
7939 7944 -8083 0
7939 7946 -8085 0
7939 7948 -8087 0
7939 7950 -8089 0
7939 7952 -8091 0
7939 7954 -8093 0
c (0<=(aux1429 + aux1430 - aux1435))
-7954 8093 0
-7952 8091 0
-7950 8089 0
-7948 8087 0
-7946 8085 0
-7944 8083 0
-7942 8081 0
-7941 8079 0
-7939 8093 0
-7939 -7954 8091 0
-7939 -7952 8089 0
-7939 -7950 8087 0
-7939 -7948 8085 0
-7939 -7946 8083 0
-7939 -7944 8081 0
-7939 -7942 8079 0
-7939 -7941 8077 0
-7937 8091 0
-7937 -7954 8089 0
-7937 -7952 8087 0
-7937 -7950 8085 0
-7937 -7948 8083 0
-7937 -7946 8081 0
-7937 -7944 8079 0
-7937 -7942 8077 0
-7937 -7941 8075 0
-7935 8089 0
-7935 -7954 8087 0
-7935 -7952 8085 0
-7935 -7950 8083 0
-7935 -7948 8081 0
-7935 -7946 8079 0
-7935 -7944 8077 0
-7935 -7942 8075 0
-7935 -7941 8073 0
-7933 8087 0
-7933 -7954 8085 0
-7933 -7952 8083 0
-7933 -7950 8081 0
-7933 -7948 8079 0
-7933 -7946 8077 0
-7933 -7944 8075 0
-7933 -7942 8073 0
-7933 -7941 8071 0
-7931 8085 0
-7931 -7954 8083 0
-7931 -7952 8081 0
-7931 -7950 8079 0
-7931 -7948 8077 0
-7931 -7946 8075 0
-7931 -7944 8073 0
-7931 -7942 8071 0
-7931 -7941 8069 0
-7929 8083 0
-7929 -7954 8081 0
-7929 -7952 8079 0
-7929 -7950 8077 0
-7929 -7948 8075 0
-7929 -7946 8073 0
-7929 -7944 8071 0
-7929 -7942 8069 0
-7929 -7941 8067 0
-7927 8081 0
-7927 -7954 8079 0
-7927 -7952 8077 0
-7927 -7950 8075 0
-7927 -7948 8073 0
-7927 -7946 8071 0
-7927 -7944 8069 0
-7927 -7942 8067 0
-7927 -7941 8065 0
-7926 8079 0
-7926 -7954 8077 0
-7926 -7952 8075 0
-7926 -7950 8073 0
-7926 -7948 8071 0
-7926 -7946 8069 0
-7926 -7944 8067 0
-7926 -7942 8065 0
-7926 -7941 8064 0
c ((aux1433 + aux1435 - aux1436)<=0)
8064 -8095 0
8065 -8096 0
8067 -8098 0
8069 -8100 0
8071 -8102 0
8073 -8104 0
8075 -8106 0
8077 -8108 0
8079 -8110 0
8081 -8112 0
8083 -8114 0
8085 -8116 0
8087 -8118 0
8089 -8120 0
8091 -8122 0
8093 -8124 0
8002 -8095 0
8002 8064 -8096 0
8002 8065 -8098 0
8002 8067 -8100 0
8002 8069 -8102 0
8002 8071 -8104 0
8002 8073 -8106 0
8002 8075 -8108 0
8002 8077 -8110 0
8002 8079 -8112 0
8002 8081 -8114 0
8002 8083 -8116 0
8002 8085 -8118 0
8002 8087 -8120 0
8002 8089 -8122 0
8002 8091 -8124 0
8002 8093 -8126 0
8003 -8096 0
8003 8064 -8098 0
8003 8065 -8100 0
8003 8067 -8102 0
8003 8069 -8104 0
8003 8071 -8106 0
8003 8073 -8108 0
8003 8075 -8110 0
8003 8077 -8112 0
8003 8079 -8114 0
8003 8081 -8116 0
8003 8083 -8118 0
8003 8085 -8120 0
8003 8087 -8122 0
8003 8089 -8124 0
8003 8091 -8126 0
8003 8093 -8128 0
8005 -8098 0
8005 8064 -8100 0
8005 8065 -8102 0
8005 8067 -8104 0
8005 8069 -8106 0
8005 8071 -8108 0
8005 8073 -8110 0
8005 8075 -8112 0
8005 8077 -8114 0
8005 8079 -8116 0
8005 8081 -8118 0
8005 8083 -8120 0
8005 8085 -8122 0
8005 8087 -8124 0
8005 8089 -8126 0
8005 8091 -8128 0
8005 8093 -8130 0
8007 -8100 0
8007 8064 -8102 0
8007 8065 -8104 0
8007 8067 -8106 0
8007 8069 -8108 0
8007 8071 -8110 0
8007 8073 -8112 0
8007 8075 -8114 0
8007 8077 -8116 0
8007 8079 -8118 0
8007 8081 -8120 0
8007 8083 -8122 0
8007 8085 -8124 0
8007 8087 -8126 0
8007 8089 -8128 0
8007 8091 -8130 0
8007 8093 -8132 0
8009 -8102 0
8009 8064 -8104 0
8009 8065 -8106 0
8009 8067 -8108 0
8009 8069 -8110 0
8009 8071 -8112 0
8009 8073 -8114 0
8009 8075 -8116 0
8009 8077 -8118 0
8009 8079 -8120 0
8009 8081 -8122 0
8009 8083 -8124 0
8009 8085 -8126 0
8009 8087 -8128 0
8009 8089 -8130 0
8009 8091 -8132 0
8009 8093 -8134 0
8011 -8104 0
8011 8064 -8106 0
8011 8065 -8108 0
8011 8067 -8110 0
8011 8069 -8112 0
8011 8071 -8114 0
8011 8073 -8116 0
8011 8075 -8118 0
8011 8077 -8120 0
8011 8079 -8122 0
8011 8081 -8124 0
8011 8083 -8126 0
8011 8085 -8128 0
8011 8087 -8130 0
8011 8089 -8132 0
8011 8091 -8134 0
8011 8093 -8136 0
8013 -8106 0
8013 8064 -8108 0
8013 8065 -8110 0
8013 8067 -8112 0
8013 8069 -8114 0
8013 8071 -8116 0
8013 8073 -8118 0
8013 8075 -8120 0
8013 8077 -8122 0
8013 8079 -8124 0
8013 8081 -8126 0
8013 8083 -8128 0
8013 8085 -8130 0
8013 8087 -8132 0
8013 8089 -8134 0
8013 8091 -8136 0
8013 8093 -8138 0
8015 -8108 0
8015 8064 -8110 0
8015 8065 -8112 0
8015 8067 -8114 0
8015 8069 -8116 0
8015 8071 -8118 0
8015 8073 -8120 0
8015 8075 -8122 0
8015 8077 -8124 0
8015 8079 -8126 0
8015 8081 -8128 0
8015 8083 -8130 0
8015 8085 -8132 0
8015 8087 -8134 0
8015 8089 -8136 0
8015 8091 -8138 0
8015 8093 -8140 0
8017 -8110 0
8017 8064 -8112 0
8017 8065 -8114 0
8017 8067 -8116 0
8017 8069 -8118 0
8017 8071 -8120 0
8017 8073 -8122 0
8017 8075 -8124 0
8017 8077 -8126 0
8017 8079 -8128 0
8017 8081 -8130 0
8017 8083 -8132 0
8017 8085 -8134 0
8017 8087 -8136 0
8017 8089 -8138 0
8017 8091 -8140 0
8017 8093 -8142 0
8019 -8112 0
8019 8064 -8114 0
8019 8065 -8116 0
8019 8067 -8118 0
8019 8069 -8120 0
8019 8071 -8122 0
8019 8073 -8124 0
8019 8075 -8126 0
8019 8077 -8128 0
8019 8079 -8130 0
8019 8081 -8132 0
8019 8083 -8134 0
8019 8085 -8136 0
8019 8087 -8138 0
8019 8089 -8140 0
8019 8091 -8142 0
8019 8093 -8144 0
8021 -8114 0
8021 8064 -8116 0
8021 8065 -8118 0
8021 8067 -8120 0
8021 8069 -8122 0
8021 8071 -8124 0
8021 8073 -8126 0
8021 8075 -8128 0
8021 8077 -8130 0
8021 8079 -8132 0
8021 8081 -8134 0
8021 8083 -8136 0
8021 8085 -8138 0
8021 8087 -8140 0
8021 8089 -8142 0
8021 8091 -8144 0
8021 8093 -8146 0
8023 -8116 0
8023 8064 -8118 0
8023 8065 -8120 0
8023 8067 -8122 0
8023 8069 -8124 0
8023 8071 -8126 0
8023 8073 -8128 0
8023 8075 -8130 0
8023 8077 -8132 0
8023 8079 -8134 0
8023 8081 -8136 0
8023 8083 -8138 0
8023 8085 -8140 0
8023 8087 -8142 0
8023 8089 -8144 0
8023 8091 -8146 0
8023 8093 -8148 0
8025 -8118 0
8025 8064 -8120 0
8025 8065 -8122 0
8025 8067 -8124 0
8025 8069 -8126 0
8025 8071 -8128 0
8025 8073 -8130 0
8025 8075 -8132 0
8025 8077 -8134 0
8025 8079 -8136 0
8025 8081 -8138 0
8025 8083 -8140 0
8025 8085 -8142 0
8025 8087 -8144 0
8025 8089 -8146 0
8025 8091 -8148 0
8025 8093 -8150 0
8027 -8120 0
8027 8064 -8122 0
8027 8065 -8124 0
8027 8067 -8126 0
8027 8069 -8128 0
8027 8071 -8130 0
8027 8073 -8132 0
8027 8075 -8134 0
8027 8077 -8136 0
8027 8079 -8138 0
8027 8081 -8140 0
8027 8083 -8142 0
8027 8085 -8144 0
8027 8087 -8146 0
8027 8089 -8148 0
8027 8091 -8150 0
8027 8093 -8152 0
8029 -8122 0
8029 8064 -8124 0
8029 8065 -8126 0
8029 8067 -8128 0
8029 8069 -8130 0
8029 8071 -8132 0
8029 8073 -8134 0
8029 8075 -8136 0
8029 8077 -8138 0
8029 8079 -8140 0
8029 8081 -8142 0
8029 8083 -8144 0
8029 8085 -8146 0
8029 8087 -8148 0
8029 8089 -8150 0
8029 8091 -8152 0
8029 8093 -8154 0
8031 -8124 0
8031 8064 -8126 0
8031 8065 -8128 0
8031 8067 -8130 0
8031 8069 -8132 0
8031 8071 -8134 0
8031 8073 -8136 0
8031 8075 -8138 0
8031 8077 -8140 0
8031 8079 -8142 0
8031 8081 -8144 0
8031 8083 -8146 0
8031 8085 -8148 0
8031 8087 -8150 0
8031 8089 -8152 0
8031 8091 -8154 0
8031 8093 -8156 0
c (0<=(aux1433 + aux1435 - aux1436))
-8093 8156 0
-8091 8154 0
-8089 8152 0
-8087 8150 0
-8085 8148 0
-8083 8146 0
-8081 8144 0
-8079 8142 0
-8077 8140 0
-8075 8138 0
-8073 8136 0
-8071 8134 0
-8069 8132 0
-8067 8130 0
-8065 8128 0
-8064 8126 0
-8031 8156 0
-8031 -8093 8154 0
-8031 -8091 8152 0
-8031 -8089 8150 0
-8031 -8087 8148 0
-8031 -8085 8146 0
-8031 -8083 8144 0
-8031 -8081 8142 0
-8031 -8079 8140 0
-8031 -8077 8138 0
-8031 -8075 8136 0
-8031 -8073 8134 0
-8031 -8071 8132 0
-8031 -8069 8130 0
-8031 -8067 8128 0
-8031 -8065 8126 0
-8031 -8064 8124 0
-8029 8154 0
-8029 -8093 8152 0
-8029 -8091 8150 0
-8029 -8089 8148 0
-8029 -8087 8146 0
-8029 -8085 8144 0
-8029 -8083 8142 0
-8029 -8081 8140 0
-8029 -8079 8138 0
-8029 -8077 8136 0
-8029 -8075 8134 0
-8029 -8073 8132 0
-8029 -8071 8130 0
-8029 -8069 8128 0
-8029 -8067 8126 0
-8029 -8065 8124 0
-8029 -8064 8122 0
-8027 8152 0
-8027 -8093 8150 0
-8027 -8091 8148 0
-8027 -8089 8146 0
-8027 -8087 8144 0
-8027 -8085 8142 0
-8027 -8083 8140 0
-8027 -8081 8138 0
-8027 -8079 8136 0
-8027 -8077 8134 0
-8027 -8075 8132 0
-8027 -8073 8130 0
-8027 -8071 8128 0
-8027 -8069 8126 0
-8027 -8067 8124 0
-8027 -8065 8122 0
-8027 -8064 8120 0
-8025 8150 0
-8025 -8093 8148 0
-8025 -8091 8146 0
-8025 -8089 8144 0
-8025 -8087 8142 0
-8025 -8085 8140 0
-8025 -8083 8138 0
-8025 -8081 8136 0
-8025 -8079 8134 0
-8025 -8077 8132 0
-8025 -8075 8130 0
-8025 -8073 8128 0
-8025 -8071 8126 0
-8025 -8069 8124 0
-8025 -8067 8122 0
-8025 -8065 8120 0
-8025 -8064 8118 0
-8023 8148 0
-8023 -8093 8146 0
-8023 -8091 8144 0
-8023 -8089 8142 0
-8023 -8087 8140 0
-8023 -8085 8138 0
-8023 -8083 8136 0
-8023 -8081 8134 0
-8023 -8079 8132 0
-8023 -8077 8130 0
-8023 -8075 8128 0
-8023 -8073 8126 0
-8023 -8071 8124 0
-8023 -8069 8122 0
-8023 -8067 8120 0
-8023 -8065 8118 0
-8023 -8064 8116 0
-8021 8146 0
-8021 -8093 8144 0
-8021 -8091 8142 0
-8021 -8089 8140 0
-8021 -8087 8138 0
-8021 -8085 8136 0
-8021 -8083 8134 0
-8021 -8081 8132 0
-8021 -8079 8130 0
-8021 -8077 8128 0
-8021 -8075 8126 0
-8021 -8073 8124 0
-8021 -8071 8122 0
-8021 -8069 8120 0
-8021 -8067 8118 0
-8021 -8065 8116 0
-8021 -8064 8114 0
-8019 8144 0
-8019 -8093 8142 0
-8019 -8091 8140 0
-8019 -8089 8138 0
-8019 -8087 8136 0
-8019 -8085 8134 0
-8019 -8083 8132 0
-8019 -8081 8130 0
-8019 -8079 8128 0
-8019 -8077 8126 0
-8019 -8075 8124 0
-8019 -8073 8122 0
-8019 -8071 8120 0
-8019 -8069 8118 0
-8019 -8067 8116 0
-8019 -8065 8114 0
-8019 -8064 8112 0
-8017 8142 0
-8017 -8093 8140 0
-8017 -8091 8138 0
-8017 -8089 8136 0
-8017 -8087 8134 0
-8017 -8085 8132 0
-8017 -8083 8130 0
-8017 -8081 8128 0
-8017 -8079 8126 0
-8017 -8077 8124 0
-8017 -8075 8122 0
-8017 -8073 8120 0
-8017 -8071 8118 0
-8017 -8069 8116 0
-8017 -8067 8114 0
-8017 -8065 8112 0
-8017 -8064 8110 0
-8015 8140 0
-8015 -8093 8138 0
-8015 -8091 8136 0
-8015 -8089 8134 0
-8015 -8087 8132 0
-8015 -8085 8130 0
-8015 -8083 8128 0
-8015 -8081 8126 0
-8015 -8079 8124 0
-8015 -8077 8122 0
-8015 -8075 8120 0
-8015 -8073 8118 0
-8015 -8071 8116 0
-8015 -8069 8114 0
-8015 -8067 8112 0
-8015 -8065 8110 0
-8015 -8064 8108 0
-8013 8138 0
-8013 -8093 8136 0
-8013 -8091 8134 0
-8013 -8089 8132 0
-8013 -8087 8130 0
-8013 -8085 8128 0
-8013 -8083 8126 0
-8013 -8081 8124 0
-8013 -8079 8122 0
-8013 -8077 8120 0
-8013 -8075 8118 0
-8013 -8073 8116 0
-8013 -8071 8114 0
-8013 -8069 8112 0
-8013 -8067 8110 0
-8013 -8065 8108 0
-8013 -8064 8106 0
-8011 8136 0
-8011 -8093 8134 0
-8011 -8091 8132 0
-8011 -8089 8130 0
-8011 -8087 8128 0
-8011 -8085 8126 0
-8011 -8083 8124 0
-8011 -8081 8122 0
-8011 -8079 8120 0
-8011 -8077 8118 0
-8011 -8075 8116 0
-8011 -8073 8114 0
-8011 -8071 8112 0
-8011 -8069 8110 0
-8011 -8067 8108 0
-8011 -8065 8106 0
-8011 -8064 8104 0
-8009 8134 0
-8009 -8093 8132 0
-8009 -8091 8130 0
-8009 -8089 8128 0
-8009 -8087 8126 0
-8009 -8085 8124 0
-8009 -8083 8122 0
-8009 -8081 8120 0
-8009 -8079 8118 0
-8009 -8077 8116 0
-8009 -8075 8114 0
-8009 -8073 8112 0
-8009 -8071 8110 0
-8009 -8069 8108 0
-8009 -8067 8106 0
-8009 -8065 8104 0
-8009 -8064 8102 0
-8007 8132 0
-8007 -8093 8130 0
-8007 -8091 8128 0
-8007 -8089 8126 0
-8007 -8087 8124 0
-8007 -8085 8122 0
-8007 -8083 8120 0
-8007 -8081 8118 0
-8007 -8079 8116 0
-8007 -8077 8114 0
-8007 -8075 8112 0
-8007 -8073 8110 0
-8007 -8071 8108 0
-8007 -8069 8106 0
-8007 -8067 8104 0
-8007 -8065 8102 0
-8007 -8064 8100 0
-8005 8130 0
-8005 -8093 8128 0
-8005 -8091 8126 0
-8005 -8089 8124 0
-8005 -8087 8122 0
-8005 -8085 8120 0
-8005 -8083 8118 0
-8005 -8081 8116 0
-8005 -8079 8114 0
-8005 -8077 8112 0
-8005 -8075 8110 0
-8005 -8073 8108 0
-8005 -8071 8106 0
-8005 -8069 8104 0
-8005 -8067 8102 0
-8005 -8065 8100 0
-8005 -8064 8098 0
-8003 8128 0
-8003 -8093 8126 0
-8003 -8091 8124 0
-8003 -8089 8122 0
-8003 -8087 8120 0
-8003 -8085 8118 0
-8003 -8083 8116 0
-8003 -8081 8114 0
-8003 -8079 8112 0
-8003 -8077 8110 0
-8003 -8075 8108 0
-8003 -8073 8106 0
-8003 -8071 8104 0
-8003 -8069 8102 0
-8003 -8067 8100 0
-8003 -8065 8098 0
-8003 -8064 8096 0
-8002 8126 0
-8002 -8093 8124 0
-8002 -8091 8122 0
-8002 -8089 8120 0
-8002 -8087 8118 0
-8002 -8085 8116 0
-8002 -8083 8114 0
-8002 -8081 8112 0
-8002 -8079 8110 0
-8002 -8077 8108 0
-8002 -8075 8106 0
-8002 -8073 8104 0
-8002 -8071 8102 0
-8002 -8069 8100 0
-8002 -8067 8098 0
-8002 -8065 8096 0
-8002 -8064 8095 0
c ((aux1432 + aux1434 - aux1437)<=0)
8033 -8158 0
8034 -8159 0
8036 -8161 0
8038 -8163 0
8040 -8165 0
8042 -8167 0
8044 -8169 0
8046 -8171 0
8048 -8173 0
8050 -8175 0
8052 -8177 0
8054 -8179 0
8056 -8181 0
8058 -8183 0
8060 -8185 0
8062 -8187 0
7971 -8158 0
7971 8033 -8159 0
7971 8034 -8161 0
7971 8036 -8163 0
7971 8038 -8165 0
7971 8040 -8167 0
7971 8042 -8169 0
7971 8044 -8171 0
7971 8046 -8173 0
7971 8048 -8175 0
7971 8050 -8177 0
7971 8052 -8179 0
7971 8054 -8181 0
7971 8056 -8183 0
7971 8058 -8185 0
7971 8060 -8187 0
7971 8062 -8189 0
7972 -8159 0
7972 8033 -8161 0
7972 8034 -8163 0
7972 8036 -8165 0
7972 8038 -8167 0
7972 8040 -8169 0
7972 8042 -8171 0
7972 8044 -8173 0
7972 8046 -8175 0
7972 8048 -8177 0
7972 8050 -8179 0
7972 8052 -8181 0
7972 8054 -8183 0
7972 8056 -8185 0
7972 8058 -8187 0
7972 8060 -8189 0
7972 8062 -8191 0
7974 -8161 0
7974 8033 -8163 0
7974 8034 -8165 0
7974 8036 -8167 0
7974 8038 -8169 0
7974 8040 -8171 0
7974 8042 -8173 0
7974 8044 -8175 0
7974 8046 -8177 0
7974 8048 -8179 0
7974 8050 -8181 0
7974 8052 -8183 0
7974 8054 -8185 0
7974 8056 -8187 0
7974 8058 -8189 0
7974 8060 -8191 0
7974 8062 -8193 0
7976 -8163 0
7976 8033 -8165 0
7976 8034 -8167 0
7976 8036 -8169 0
7976 8038 -8171 0
7976 8040 -8173 0
7976 8042 -8175 0
7976 8044 -8177 0
7976 8046 -8179 0
7976 8048 -8181 0
7976 8050 -8183 0
7976 8052 -8185 0
7976 8054 -8187 0
7976 8056 -8189 0
7976 8058 -8191 0
7976 8060 -8193 0
7976 8062 -8195 0
7978 -8165 0
7978 8033 -8167 0
7978 8034 -8169 0
7978 8036 -8171 0
7978 8038 -8173 0
7978 8040 -8175 0
7978 8042 -8177 0
7978 8044 -8179 0
7978 8046 -8181 0
7978 8048 -8183 0
7978 8050 -8185 0
7978 8052 -8187 0
7978 8054 -8189 0
7978 8056 -8191 0
7978 8058 -8193 0
7978 8060 -8195 0
7978 8062 -8197 0
7980 -8167 0
7980 8033 -8169 0
7980 8034 -8171 0
7980 8036 -8173 0
7980 8038 -8175 0
7980 8040 -8177 0
7980 8042 -8179 0
7980 8044 -8181 0
7980 8046 -8183 0
7980 8048 -8185 0
7980 8050 -8187 0
7980 8052 -8189 0
7980 8054 -8191 0
7980 8056 -8193 0
7980 8058 -8195 0
7980 8060 -8197 0
7980 8062 -8199 0
7982 -8169 0
7982 8033 -8171 0
7982 8034 -8173 0
7982 8036 -8175 0
7982 8038 -8177 0
7982 8040 -8179 0
7982 8042 -8181 0
7982 8044 -8183 0
7982 8046 -8185 0
7982 8048 -8187 0
7982 8050 -8189 0
7982 8052 -8191 0
7982 8054 -8193 0
7982 8056 -8195 0
7982 8058 -8197 0
7982 8060 -8199 0
7982 8062 -8201 0
7984 -8171 0
7984 8033 -8173 0
7984 8034 -8175 0
7984 8036 -8177 0
7984 8038 -8179 0
7984 8040 -8181 0
7984 8042 -8183 0
7984 8044 -8185 0
7984 8046 -8187 0
7984 8048 -8189 0
7984 8050 -8191 0
7984 8052 -8193 0
7984 8054 -8195 0
7984 8056 -8197 0
7984 8058 -8199 0
7984 8060 -8201 0
7984 8062 -8203 0
7986 -8173 0
7986 8033 -8175 0
7986 8034 -8177 0
7986 8036 -8179 0
7986 8038 -8181 0
7986 8040 -8183 0
7986 8042 -8185 0
7986 8044 -8187 0
7986 8046 -8189 0
7986 8048 -8191 0
7986 8050 -8193 0
7986 8052 -8195 0
7986 8054 -8197 0
7986 8056 -8199 0
7986 8058 -8201 0
7986 8060 -8203 0
7986 8062 -8205 0
7988 -8175 0
7988 8033 -8177 0
7988 8034 -8179 0
7988 8036 -8181 0
7988 8038 -8183 0
7988 8040 -8185 0
7988 8042 -8187 0
7988 8044 -8189 0
7988 8046 -8191 0
7988 8048 -8193 0
7988 8050 -8195 0
7988 8052 -8197 0
7988 8054 -8199 0
7988 8056 -8201 0
7988 8058 -8203 0
7988 8060 -8205 0
7988 8062 -8207 0
7990 -8177 0
7990 8033 -8179 0
7990 8034 -8181 0
7990 8036 -8183 0
7990 8038 -8185 0
7990 8040 -8187 0
7990 8042 -8189 0
7990 8044 -8191 0
7990 8046 -8193 0
7990 8048 -8195 0
7990 8050 -8197 0
7990 8052 -8199 0
7990 8054 -8201 0
7990 8056 -8203 0
7990 8058 -8205 0
7990 8060 -8207 0
7990 8062 -8209 0
7992 -8179 0
7992 8033 -8181 0
7992 8034 -8183 0
7992 8036 -8185 0
7992 8038 -8187 0
7992 8040 -8189 0
7992 8042 -8191 0
7992 8044 -8193 0
7992 8046 -8195 0
7992 8048 -8197 0
7992 8050 -8199 0
7992 8052 -8201 0
7992 8054 -8203 0
7992 8056 -8205 0
7992 8058 -8207 0
7992 8060 -8209 0
7992 8062 -8211 0
7994 -8181 0
7994 8033 -8183 0
7994 8034 -8185 0
7994 8036 -8187 0
7994 8038 -8189 0
7994 8040 -8191 0
7994 8042 -8193 0
7994 8044 -8195 0
7994 8046 -8197 0
7994 8048 -8199 0
7994 8050 -8201 0
7994 8052 -8203 0
7994 8054 -8205 0
7994 8056 -8207 0
7994 8058 -8209 0
7994 8060 -8211 0
7994 8062 -8213 0
7996 -8183 0
7996 8033 -8185 0
7996 8034 -8187 0
7996 8036 -8189 0
7996 8038 -8191 0
7996 8040 -8193 0
7996 8042 -8195 0
7996 8044 -8197 0
7996 8046 -8199 0
7996 8048 -8201 0
7996 8050 -8203 0
7996 8052 -8205 0
7996 8054 -8207 0
7996 8056 -8209 0
7996 8058 -8211 0
7996 8060 -8213 0
7996 8062 -8215 0
7998 -8185 0
7998 8033 -8187 0
7998 8034 -8189 0
7998 8036 -8191 0
7998 8038 -8193 0
7998 8040 -8195 0
7998 8042 -8197 0
7998 8044 -8199 0
7998 8046 -8201 0
7998 8048 -8203 0
7998 8050 -8205 0
7998 8052 -8207 0
7998 8054 -8209 0
7998 8056 -8211 0
7998 8058 -8213 0
7998 8060 -8215 0
7998 8062 -8217 0
8000 -8187 0
8000 8033 -8189 0
8000 8034 -8191 0
8000 8036 -8193 0
8000 8038 -8195 0
8000 8040 -8197 0
8000 8042 -8199 0
8000 8044 -8201 0
8000 8046 -8203 0
8000 8048 -8205 0
8000 8050 -8207 0
8000 8052 -8209 0
8000 8054 -8211 0
8000 8056 -8213 0
8000 8058 -8215 0
8000 8060 -8217 0
8000 8062 -8219 0
c (0<=(aux1432 + aux1434 - aux1437))
-8062 8219 0
-8060 8217 0
-8058 8215 0
-8056 8213 0
-8054 8211 0
-8052 8209 0
-8050 8207 0
-8048 8205 0
-8046 8203 0
-8044 8201 0
-8042 8199 0
-8040 8197 0
-8038 8195 0
-8036 8193 0
-8034 8191 0
-8033 8189 0
-8000 8219 0
-8000 -8062 8217 0
-8000 -8060 8215 0
-8000 -8058 8213 0
-8000 -8056 8211 0
-8000 -8054 8209 0
-8000 -8052 8207 0
-8000 -8050 8205 0
-8000 -8048 8203 0
-8000 -8046 8201 0
-8000 -8044 8199 0
-8000 -8042 8197 0
-8000 -8040 8195 0
-8000 -8038 8193 0
-8000 -8036 8191 0
-8000 -8034 8189 0
-8000 -8033 8187 0
-7998 8217 0
-7998 -8062 8215 0
-7998 -8060 8213 0
-7998 -8058 8211 0
-7998 -8056 8209 0
-7998 -8054 8207 0
-7998 -8052 8205 0
-7998 -8050 8203 0
-7998 -8048 8201 0
-7998 -8046 8199 0
-7998 -8044 8197 0
-7998 -8042 8195 0
-7998 -8040 8193 0
-7998 -8038 8191 0
-7998 -8036 8189 0
-7998 -8034 8187 0
-7998 -8033 8185 0
-7996 8215 0
-7996 -8062 8213 0
-7996 -8060 8211 0
-7996 -8058 8209 0
-7996 -8056 8207 0
-7996 -8054 8205 0
-7996 -8052 8203 0
-7996 -8050 8201 0
-7996 -8048 8199 0
-7996 -8046 8197 0
-7996 -8044 8195 0
-7996 -8042 8193 0
-7996 -8040 8191 0
-7996 -8038 8189 0
-7996 -8036 8187 0
-7996 -8034 8185 0
-7996 -8033 8183 0
-7994 8213 0
-7994 -8062 8211 0
-7994 -8060 8209 0
-7994 -8058 8207 0
-7994 -8056 8205 0
-7994 -8054 8203 0
-7994 -8052 8201 0
-7994 -8050 8199 0
-7994 -8048 8197 0
-7994 -8046 8195 0
-7994 -8044 8193 0
-7994 -8042 8191 0
-7994 -8040 8189 0
-7994 -8038 8187 0
-7994 -8036 8185 0
-7994 -8034 8183 0
-7994 -8033 8181 0
-7992 8211 0
-7992 -8062 8209 0
-7992 -8060 8207 0
-7992 -8058 8205 0
-7992 -8056 8203 0
-7992 -8054 8201 0
-7992 -8052 8199 0
-7992 -8050 8197 0
-7992 -8048 8195 0
-7992 -8046 8193 0
-7992 -8044 8191 0
-7992 -8042 8189 0
-7992 -8040 8187 0
-7992 -8038 8185 0
-7992 -8036 8183 0
-7992 -8034 8181 0
-7992 -8033 8179 0
-7990 8209 0
-7990 -8062 8207 0
-7990 -8060 8205 0
-7990 -8058 8203 0
-7990 -8056 8201 0
-7990 -8054 8199 0
-7990 -8052 8197 0
-7990 -8050 8195 0
-7990 -8048 8193 0
-7990 -8046 8191 0
-7990 -8044 8189 0
-7990 -8042 8187 0
-7990 -8040 8185 0
-7990 -8038 8183 0
-7990 -8036 8181 0
-7990 -8034 8179 0
-7990 -8033 8177 0
-7988 8207 0
-7988 -8062 8205 0
-7988 -8060 8203 0
-7988 -8058 8201 0
-7988 -8056 8199 0
-7988 -8054 8197 0
-7988 -8052 8195 0
-7988 -8050 8193 0
-7988 -8048 8191 0
-7988 -8046 8189 0
-7988 -8044 8187 0
-7988 -8042 8185 0
-7988 -8040 8183 0
-7988 -8038 8181 0
-7988 -8036 8179 0
-7988 -8034 8177 0
-7988 -8033 8175 0
-7986 8205 0
-7986 -8062 8203 0
-7986 -8060 8201 0
-7986 -8058 8199 0
-7986 -8056 8197 0
-7986 -8054 8195 0
-7986 -8052 8193 0
-7986 -8050 8191 0
-7986 -8048 8189 0
-7986 -8046 8187 0
-7986 -8044 8185 0
-7986 -8042 8183 0
-7986 -8040 8181 0
-7986 -8038 8179 0
-7986 -8036 8177 0
-7986 -8034 8175 0
-7986 -8033 8173 0
-7984 8203 0
-7984 -8062 8201 0
-7984 -8060 8199 0
-7984 -8058 8197 0
-7984 -8056 8195 0
-7984 -8054 8193 0
-7984 -8052 8191 0
-7984 -8050 8189 0
-7984 -8048 8187 0
-7984 -8046 8185 0
-7984 -8044 8183 0
-7984 -8042 8181 0
-7984 -8040 8179 0
-7984 -8038 8177 0
-7984 -8036 8175 0
-7984 -8034 8173 0
-7984 -8033 8171 0
-7982 8201 0
-7982 -8062 8199 0
-7982 -8060 8197 0
-7982 -8058 8195 0
-7982 -8056 8193 0
-7982 -8054 8191 0
-7982 -8052 8189 0
-7982 -8050 8187 0
-7982 -8048 8185 0
-7982 -8046 8183 0
-7982 -8044 8181 0
-7982 -8042 8179 0
-7982 -8040 8177 0
-7982 -8038 8175 0
-7982 -8036 8173 0
-7982 -8034 8171 0
-7982 -8033 8169 0
-7980 8199 0
-7980 -8062 8197 0
-7980 -8060 8195 0
-7980 -8058 8193 0
-7980 -8056 8191 0
-7980 -8054 8189 0
-7980 -8052 8187 0
-7980 -8050 8185 0
-7980 -8048 8183 0
-7980 -8046 8181 0
-7980 -8044 8179 0
-7980 -8042 8177 0
-7980 -8040 8175 0
-7980 -8038 8173 0
-7980 -8036 8171 0
-7980 -8034 8169 0
-7980 -8033 8167 0
-7978 8197 0
-7978 -8062 8195 0
-7978 -8060 8193 0
-7978 -8058 8191 0
-7978 -8056 8189 0
-7978 -8054 8187 0
-7978 -8052 8185 0
-7978 -8050 8183 0
-7978 -8048 8181 0
-7978 -8046 8179 0
-7978 -8044 8177 0
-7978 -8042 8175 0
-7978 -8040 8173 0
-7978 -8038 8171 0
-7978 -8036 8169 0
-7978 -8034 8167 0
-7978 -8033 8165 0
-7976 8195 0
-7976 -8062 8193 0
-7976 -8060 8191 0
-7976 -8058 8189 0
-7976 -8056 8187 0
-7976 -8054 8185 0
-7976 -8052 8183 0
-7976 -8050 8181 0
-7976 -8048 8179 0
-7976 -8046 8177 0
-7976 -8044 8175 0
-7976 -8042 8173 0
-7976 -8040 8171 0
-7976 -8038 8169 0
-7976 -8036 8167 0
-7976 -8034 8165 0
-7976 -8033 8163 0
-7974 8193 0
-7974 -8062 8191 0
-7974 -8060 8189 0
-7974 -8058 8187 0
-7974 -8056 8185 0
-7974 -8054 8183 0
-7974 -8052 8181 0
-7974 -8050 8179 0
-7974 -8048 8177 0
-7974 -8046 8175 0
-7974 -8044 8173 0
-7974 -8042 8171 0
-7974 -8040 8169 0
-7974 -8038 8167 0
-7974 -8036 8165 0
-7974 -8034 8163 0
-7974 -8033 8161 0
-7972 8191 0
-7972 -8062 8189 0
-7972 -8060 8187 0
-7972 -8058 8185 0
-7972 -8056 8183 0
-7972 -8054 8181 0
-7972 -8052 8179 0
-7972 -8050 8177 0
-7972 -8048 8175 0
-7972 -8046 8173 0
-7972 -8044 8171 0
-7972 -8042 8169 0
-7972 -8040 8167 0
-7972 -8038 8165 0
-7972 -8036 8163 0
-7972 -8034 8161 0
-7972 -8033 8159 0
-7971 8189 0
-7971 -8062 8187 0
-7971 -8060 8185 0
-7971 -8058 8183 0
-7971 -8056 8181 0
-7971 -8054 8179 0
-7971 -8052 8177 0
-7971 -8050 8175 0
-7971 -8048 8173 0
-7971 -8046 8171 0
-7971 -8044 8169 0
-7971 -8042 8167 0
-7971 -8040 8165 0
-7971 -8038 8163 0
-7971 -8036 8161 0
-7971 -8034 8159 0
-7971 -8033 8158 0
c ((SATLiteral(-175) + SATLiteral(-182) - aux1438)<=0)
182 -8221 0
175 -8221 0
175 182 -8222 0
c (0<=(SATLiteral(-175) + SATLiteral(-182) - aux1438))
-182 8222 0
-175 8222 0
-175 -182 8221 0
c ((SATLiteral(-196) + SATLiteral(-224) - aux1439)<=0)
224 -8224 0
196 -8224 0
196 224 -8225 0
c (0<=(SATLiteral(-196) + SATLiteral(-224) - aux1439))
-224 8225 0
-196 8225 0
-196 -224 8224 0
c ((SATLiteral(-112) - aux1440 + SATLiteral(-329))<=0)
329 -8227 0
112 -8227 0
112 329 -8228 0
c (0<=(SATLiteral(-112) - aux1440 + SATLiteral(-329)))
-329 8228 0
-112 8228 0
-112 -329 8227 0
c (( - aux1441 + SATLiteral(-280) + SATLiteral(-322))<=0)
322 -8230 0
280 -8230 0
280 322 -8231 0
c (0<=( - aux1441 + SATLiteral(-280) + SATLiteral(-322)))
-322 8231 0
-280 8231 0
-280 -322 8230 0
c (( - aux1442 + SATLiteral(-315) + SATLiteral(-336))<=0)
336 -8233 0
315 -8233 0
315 336 -8234 0
c (0<=( - aux1442 + SATLiteral(-315) + SATLiteral(-336)))
-336 8234 0
-315 8234 0
-315 -336 8233 0
c (( - aux1443 + SATLiteral(-119) + SATLiteral(-308))<=0)
308 -8236 0
119 -8236 0
119 308 -8237 0
c (0<=( - aux1443 + SATLiteral(-119) + SATLiteral(-308)))
-308 8237 0
-119 8237 0
-119 -308 8236 0
c ((SATLiteral(-343) - aux1444 + SATLiteral(-301))<=0)
301 -8239 0
343 -8239 0
343 301 -8240 0
c (0<=(SATLiteral(-343) - aux1444 + SATLiteral(-301)))
-301 8240 0
-343 8240 0
-343 -301 8239 0
c (( - aux1445 + SATLiteral(-126) + SATLiteral(-294))<=0)
294 -8242 0
126 -8242 0
126 294 -8243 0
c (0<=( - aux1445 + SATLiteral(-126) + SATLiteral(-294)))
-294 8243 0
-126 8243 0
-126 -294 8242 0
c (( - aux1446 + SATLiteral(-133) + SATLiteral(-287))<=0)
287 -8245 0
133 -8245 0
133 287 -8246 0
c (0<=( - aux1446 + SATLiteral(-133) + SATLiteral(-287)))
-287 8246 0
-133 8246 0
-133 -287 8245 0
c ((SATLiteral(-63) - aux1447 + SATLiteral(-56))<=0)
56 -8248 0
63 -8248 0
63 56 -8249 0
c (0<=(SATLiteral(-63) - aux1447 + SATLiteral(-56)))
-56 8249 0
-63 8249 0
-63 -56 8248 0
c ((SATLiteral(-350) - aux1448 + SATLiteral(-49))<=0)
49 -8251 0
350 -8251 0
350 49 -8252 0
c (0<=(SATLiteral(-350) - aux1448 + SATLiteral(-49)))
-49 8252 0
-350 8252 0
-350 -49 8251 0
c (( - aux1449 + SATLiteral(-140) + SATLiteral(-42))<=0)
42 -8254 0
140 -8254 0
140 42 -8255 0
c (0<=( - aux1449 + SATLiteral(-140) + SATLiteral(-42)))
-42 8255 0
-140 8255 0
-140 -42 8254 0
c (( - aux1450 + SATLiteral(-147) + SATLiteral(-35))<=0)
35 -8257 0
147 -8257 0
147 35 -8258 0
c (0<=( - aux1450 + SATLiteral(-147) + SATLiteral(-35)))
-35 8258 0
-147 8258 0
-147 -35 8257 0
c ((SATLiteral(-357) - aux1451 + SATLiteral(-28))<=0)
28 -8260 0
357 -8260 0
357 28 -8261 0
c (0<=(SATLiteral(-357) - aux1451 + SATLiteral(-28)))
-28 8261 0
-357 8261 0
-357 -28 8260 0
c (( - aux1452 + SATLiteral(-154) + SATLiteral(-21))<=0)
21 -8263 0
154 -8263 0
154 21 -8264 0
c (0<=( - aux1452 + SATLiteral(-154) + SATLiteral(-21)))
-21 8264 0
-154 8264 0
-154 -21 8263 0
c (( - aux1453 + SATLiteral(-161) + SATLiteral(-14))<=0)
14 -8266 0
161 -8266 0
161 14 -8267 0
c (0<=( - aux1453 + SATLiteral(-161) + SATLiteral(-14)))
-14 8267 0
-161 8267 0
-161 -14 8266 0
c ((SATLiteral(-203) - aux1454 + SATLiteral(-7))<=0)
7 -8269 0
203 -8269 0
203 7 -8270 0
c (0<=(SATLiteral(-203) - aux1454 + SATLiteral(-7)))
-7 8270 0
-203 8270 0
-203 -7 8269 0
c ((SATLiteral(-70) - aux1455 + SATLiteral(-448))<=0)
448 -8272 0
70 -8272 0
70 448 -8273 0
c (0<=(SATLiteral(-70) - aux1455 + SATLiteral(-448)))
-448 8273 0
-70 8273 0
-70 -448 8272 0
c ((SATLiteral(-364) - aux1456 + SATLiteral(-441))<=0)
441 -8275 0
364 -8275 0
364 441 -8276 0
c (0<=(SATLiteral(-364) - aux1456 + SATLiteral(-441)))
-441 8276 0
-364 8276 0
-364 -441 8275 0
c (( - aux1457 + SATLiteral(-168) + SATLiteral(-434))<=0)
434 -8278 0
168 -8278 0
168 434 -8279 0
c (0<=( - aux1457 + SATLiteral(-168) + SATLiteral(-434)))
-434 8279 0
-168 8279 0
-168 -434 8278 0
c (( - aux1458 + SATLiteral(-399) + SATLiteral(-427))<=0)
427 -8281 0
399 -8281 0
399 427 -8282 0
c (0<=( - aux1458 + SATLiteral(-399) + SATLiteral(-427)))
-427 8282 0
-399 8282 0
-399 -427 8281 0
c ((SATLiteral(-371) - aux1459 + SATLiteral(-420))<=0)
420 -8284 0
371 -8284 0
371 420 -8285 0
c (0<=(SATLiteral(-371) - aux1459 + SATLiteral(-420)))
-420 8285 0
-371 8285 0
-371 -420 8284 0
c (( - aux1460 + SATLiteral(-406) + SATLiteral(-413))<=0)
413 -8287 0
406 -8287 0
406 413 -8288 0
c (0<=( - aux1460 + SATLiteral(-406) + SATLiteral(-413)))
-413 8288 0
-406 8288 0
-406 -413 8287 0
c ((SATLiteral(-77) + SATLiteral(-378) - aux1461)<=0)
378 -8290 0
77 -8290 0
77 378 -8291 0
c (0<=(SATLiteral(-77) + SATLiteral(-378) - aux1461))
-378 8291 0
-77 8291 0
-77 -378 8290 0
c ((SATLiteral(-189) + SATLiteral(-385) - aux1462)<=0)
385 -8293 0
189 -8293 0
189 385 -8294 0
c (0<=(SATLiteral(-189) + SATLiteral(-385) - aux1462))
-385 8294 0
-189 8294 0
-189 -385 8293 0
c ((SATLiteral(-210) + SATLiteral(-84) - aux1463)<=0)
84 -8296 0
210 -8296 0
210 84 -8297 0
c (0<=(SATLiteral(-210) + SATLiteral(-84) - aux1463))
-84 8297 0
-210 8297 0
-210 -84 8296 0
c ((SATLiteral(-392) - aux1464 + SATLiteral(-231))<=0)
231 -8299 0
392 -8299 0
392 231 -8300 0
c (0<=(SATLiteral(-392) - aux1464 + SATLiteral(-231)))
-231 8300 0
-392 8300 0
-392 -231 8299 0
c ((SATLiteral(-91) - aux1465 + SATLiteral(-238))<=0)
238 -8302 0
91 -8302 0
91 238 -8303 0
c (0<=(SATLiteral(-91) - aux1465 + SATLiteral(-238)))
-238 8303 0
-91 8303 0
-91 -238 8302 0
c ((SATLiteral(-217) - aux1466 + SATLiteral(-245))<=0)
245 -8305 0
217 -8305 0
217 245 -8306 0
c (0<=(SATLiteral(-217) - aux1466 + SATLiteral(-245)))
-245 8306 0
-217 8306 0
-217 -245 8305 0
c ((SATLiteral(-98) - aux1467 + SATLiteral(-252))<=0)
252 -8308 0
98 -8308 0
98 252 -8309 0
c (0<=(SATLiteral(-98) - aux1467 + SATLiteral(-252)))
-252 8309 0
-98 8309 0
-98 -252 8308 0
c ((SATLiteral(-105) - aux1468 + SATLiteral(-259))<=0)
259 -8311 0
105 -8311 0
105 259 -8312 0
c (0<=(SATLiteral(-105) - aux1468 + SATLiteral(-259)))
-259 8312 0
-105 8312 0
-105 -259 8311 0
c (( - aux1469 + SATLiteral(-266) + SATLiteral(-273))<=0)
273 -8314 0
266 -8314 0
266 273 -8315 0
c (0<=( - aux1469 + SATLiteral(-266) + SATLiteral(-273)))
-273 8315 0
-266 8315 0
-266 -273 8314 0
c ((aux1453 + aux1469 - aux1470)<=0)
8314 -8317 0
8315 -8318 0
8266 -8317 0
8266 8314 -8318 0
8266 8315 -8320 0
8267 -8318 0
8267 8314 -8320 0
8267 8315 -8322 0
c (0<=(aux1453 + aux1469 - aux1470))
-8315 8322 0
-8314 8320 0
-8267 8322 0
-8267 -8315 8320 0
-8267 -8314 8318 0
-8266 8320 0
-8266 -8315 8318 0
-8266 -8314 8317 0
c ((aux1443 + aux1451 - aux1471)<=0)
8260 -8324 0
8261 -8325 0
8236 -8324 0
8236 8260 -8325 0
8236 8261 -8327 0
8237 -8325 0
8237 8260 -8327 0
8237 8261 -8329 0
c (0<=(aux1443 + aux1451 - aux1471))
-8261 8329 0
-8260 8327 0
-8237 8329 0
-8237 -8261 8327 0
-8237 -8260 8325 0
-8236 8327 0
-8236 -8261 8325 0
-8236 -8260 8324 0
c ((aux1439 + aux1441 - aux1472)<=0)
8230 -8331 0
8231 -8332 0
8224 -8331 0
8224 8230 -8332 0
8224 8231 -8334 0
8225 -8332 0
8225 8230 -8334 0
8225 8231 -8336 0
c (0<=(aux1439 + aux1441 - aux1472))
-8231 8336 0
-8230 8334 0
-8225 8336 0
-8225 -8231 8334 0
-8225 -8230 8332 0
-8224 8334 0
-8224 -8231 8332 0
-8224 -8230 8331 0
c ((aux1438 + aux1466 - aux1473)<=0)
8305 -8338 0
8306 -8339 0
8221 -8338 0
8221 8305 -8339 0
8221 8306 -8341 0
8222 -8339 0
8222 8305 -8341 0
8222 8306 -8343 0
c (0<=(aux1438 + aux1466 - aux1473))
-8306 8343 0
-8305 8341 0
-8222 8343 0
-8222 -8306 8341 0
-8222 -8305 8339 0
-8221 8341 0
-8221 -8306 8339 0
-8221 -8305 8338 0
c ((aux1442 + aux1465 - aux1474)<=0)
8302 -8345 0
8303 -8346 0
8233 -8345 0
8233 8302 -8346 0
8233 8303 -8348 0
8234 -8346 0
8234 8302 -8348 0
8234 8303 -8350 0
c (0<=(aux1442 + aux1465 - aux1474))
-8303 8350 0
-8302 8348 0
-8234 8350 0
-8234 -8303 8348 0
-8234 -8302 8346 0
-8233 8348 0
-8233 -8303 8346 0
-8233 -8302 8345 0
c ((aux1445 + aux1450 - aux1475)<=0)
8257 -8352 0
8258 -8353 0
8242 -8352 0
8242 8257 -8353 0
8242 8258 -8355 0
8243 -8353 0
8243 8257 -8355 0
8243 8258 -8357 0
c (0<=(aux1445 + aux1450 - aux1475))
-8258 8357 0
-8257 8355 0
-8243 8357 0
-8243 -8258 8355 0
-8243 -8257 8353 0
-8242 8355 0
-8242 -8258 8353 0
-8242 -8257 8352 0
c ((aux1446 + aux1463 - aux1476)<=0)
8296 -8359 0
8297 -8360 0
8245 -8359 0
8245 8296 -8360 0
8245 8297 -8362 0
8246 -8360 0
8246 8296 -8362 0
8246 8297 -8364 0
c (0<=(aux1446 + aux1463 - aux1476))
-8297 8364 0
-8296 8362 0
-8246 8364 0
-8246 -8297 8362 0
-8246 -8296 8360 0
-8245 8362 0
-8245 -8297 8360 0
-8245 -8296 8359 0
c ((aux1448 + aux1449 - aux1477)<=0)
8254 -8366 0
8255 -8367 0
8251 -8366 0
8251 8254 -8367 0
8251 8255 -8369 0
8252 -8367 0
8252 8254 -8369 0
8252 8255 -8371 0
c (0<=(aux1448 + aux1449 - aux1477))
-8255 8371 0
-8254 8369 0
-8252 8371 0
-8252 -8255 8369 0
-8252 -8254 8367 0
-8251 8369 0
-8251 -8255 8367 0
-8251 -8254 8366 0
c ((aux1452 + aux1460 - aux1478)<=0)
8287 -8373 0
8288 -8374 0
8263 -8373 0
8263 8287 -8374 0
8263 8288 -8376 0
8264 -8374 0
8264 8287 -8376 0
8264 8288 -8378 0
c (0<=(aux1452 + aux1460 - aux1478))
-8288 8378 0
-8287 8376 0
-8264 8378 0
-8264 -8288 8376 0
-8264 -8287 8374 0
-8263 8376 0
-8263 -8288 8374 0
-8263 -8287 8373 0
c ((aux1458 + aux1461 - aux1479)<=0)
8290 -8380 0
8291 -8381 0
8281 -8380 0
8281 8290 -8381 0
8281 8291 -8383 0
8282 -8381 0
8282 8290 -8383 0
8282 8291 -8385 0
c (0<=(aux1458 + aux1461 - aux1479))
-8291 8385 0
-8290 8383 0
-8282 8385 0
-8282 -8291 8383 0
-8282 -8290 8381 0
-8281 8383 0
-8281 -8291 8381 0
-8281 -8290 8380 0
c ((aux1454 + aux1459 - aux1480)<=0)
8284 -8387 0
8285 -8388 0
8269 -8387 0
8269 8284 -8388 0
8269 8285 -8390 0
8270 -8388 0
8270 8284 -8390 0
8270 8285 -8392 0
c (0<=(aux1454 + aux1459 - aux1480))
-8285 8392 0
-8284 8390 0
-8270 8392 0
-8270 -8285 8390 0
-8270 -8284 8388 0
-8269 8390 0
-8269 -8285 8388 0
-8269 -8284 8387 0
c ((aux1455 + aux1457 - aux1481)<=0)
8278 -8394 0
8279 -8395 0
8272 -8394 0
8272 8278 -8395 0
8272 8279 -8397 0
8273 -8395 0
8273 8278 -8397 0
8273 8279 -8399 0
c (0<=(aux1455 + aux1457 - aux1481))
-8279 8399 0
-8278 8397 0
-8273 8399 0
-8273 -8279 8397 0
-8273 -8278 8395 0
-8272 8397 0
-8272 -8279 8395 0
-8272 -8278 8394 0
c ((aux1456 + aux1468 - aux1482)<=0)
8311 -8401 0
8312 -8402 0
8275 -8401 0
8275 8311 -8402 0
8275 8312 -8404 0
8276 -8402 0
8276 8311 -8404 0
8276 8312 -8406 0
c (0<=(aux1456 + aux1468 - aux1482))
-8312 8406 0
-8311 8404 0
-8276 8406 0
-8276 -8312 8404 0
-8276 -8311 8402 0
-8275 8404 0
-8275 -8312 8402 0
-8275 -8311 8401 0
c ((aux1462 + aux1464 - aux1483)<=0)
8299 -8408 0
8300 -8409 0
8293 -8408 0
8293 8299 -8409 0
8293 8300 -8411 0
8294 -8409 0
8294 8299 -8411 0
8294 8300 -8413 0
c (0<=(aux1462 + aux1464 - aux1483))
-8300 8413 0
-8299 8411 0
-8294 8413 0
-8294 -8300 8411 0
-8294 -8299 8409 0
-8293 8411 0
-8293 -8300 8409 0
-8293 -8299 8408 0
c ((aux1440 + aux1447 - aux1484)<=0)
8248 -8415 0
8249 -8416 0
8227 -8415 0
8227 8248 -8416 0
8227 8249 -8418 0
8228 -8416 0
8228 8248 -8418 0
8228 8249 -8420 0
c (0<=(aux1440 + aux1447 - aux1484))
-8249 8420 0
-8248 8418 0
-8228 8420 0
-8228 -8249 8418 0
-8228 -8248 8416 0
-8227 8418 0
-8227 -8249 8416 0
-8227 -8248 8415 0
c ((aux1444 + aux1467 - aux1485)<=0)
8308 -8422 0
8309 -8423 0
8239 -8422 0
8239 8308 -8423 0
8239 8309 -8425 0
8240 -8423 0
8240 8308 -8425 0
8240 8309 -8427 0
c (0<=(aux1444 + aux1467 - aux1485))
-8309 8427 0
-8308 8425 0
-8240 8427 0
-8240 -8309 8425 0
-8240 -8308 8423 0
-8239 8425 0
-8239 -8309 8423 0
-8239 -8308 8422 0
c ((aux1477 + aux1485 - aux1486)<=0)
8422 -8429 0
8423 -8430 0
8425 -8432 0
8427 -8434 0
8366 -8429 0
8366 8422 -8430 0
8366 8423 -8432 0
8366 8425 -8434 0
8366 8427 -8436 0
8367 -8430 0
8367 8422 -8432 0
8367 8423 -8434 0
8367 8425 -8436 0
8367 8427 -8438 0
8369 -8432 0
8369 8422 -8434 0
8369 8423 -8436 0
8369 8425 -8438 0
8369 8427 -8440 0
8371 -8434 0
8371 8422 -8436 0
8371 8423 -8438 0
8371 8425 -8440 0
8371 8427 -8442 0
c (0<=(aux1477 + aux1485 - aux1486))
-8427 8442 0
-8425 8440 0
-8423 8438 0
-8422 8436 0
-8371 8442 0
-8371 -8427 8440 0
-8371 -8425 8438 0
-8371 -8423 8436 0
-8371 -8422 8434 0
-8369 8440 0
-8369 -8427 8438 0
-8369 -8425 8436 0
-8369 -8423 8434 0
-8369 -8422 8432 0
-8367 8438 0
-8367 -8427 8436 0
-8367 -8425 8434 0
-8367 -8423 8432 0
-8367 -8422 8430 0
-8366 8436 0
-8366 -8427 8434 0
-8366 -8425 8432 0
-8366 -8423 8430 0
-8366 -8422 8429 0
c ((aux1471 + aux1475 - aux1487)<=0)
8352 -8444 0
8353 -8445 0
8355 -8447 0
8357 -8449 0
8324 -8444 0
8324 8352 -8445 0
8324 8353 -8447 0
8324 8355 -8449 0
8324 8357 -8451 0
8325 -8445 0
8325 8352 -8447 0
8325 8353 -8449 0
8325 8355 -8451 0
8325 8357 -8453 0
8327 -8447 0
8327 8352 -8449 0
8327 8353 -8451 0
8327 8355 -8453 0
8327 8357 -8455 0
8329 -8449 0
8329 8352 -8451 0
8329 8353 -8453 0
8329 8355 -8455 0
8329 8357 -8457 0
c (0<=(aux1471 + aux1475 - aux1487))
-8357 8457 0
-8355 8455 0
-8353 8453 0
-8352 8451 0
-8329 8457 0
-8329 -8357 8455 0
-8329 -8355 8453 0
-8329 -8353 8451 0
-8329 -8352 8449 0
-8327 8455 0
-8327 -8357 8453 0
-8327 -8355 8451 0
-8327 -8353 8449 0
-8327 -8352 8447 0
-8325 8453 0
-8325 -8357 8451 0
-8325 -8355 8449 0
-8325 -8353 8447 0
-8325 -8352 8445 0
-8324 8451 0
-8324 -8357 8449 0
-8324 -8355 8447 0
-8324 -8353 8445 0
-8324 -8352 8444 0
c ((aux1470 + aux1483 - aux1488)<=0)
8408 -8459 0
8409 -8460 0
8411 -8462 0
8413 -8464 0
8317 -8459 0
8317 8408 -8460 0
8317 8409 -8462 0
8317 8411 -8464 0
8317 8413 -8466 0
8318 -8460 0
8318 8408 -8462 0
8318 8409 -8464 0
8318 8411 -8466 0
8318 8413 -8468 0
8320 -8462 0
8320 8408 -8464 0
8320 8409 -8466 0
8320 8411 -8468 0
8320 8413 -8470 0
8322 -8464 0
8322 8408 -8466 0
8322 8409 -8468 0
8322 8411 -8470 0
8322 8413 -8472 0
c (0<=(aux1470 + aux1483 - aux1488))
-8413 8472 0
-8411 8470 0
-8409 8468 0
-8408 8466 0
-8322 8472 0
-8322 -8413 8470 0
-8322 -8411 8468 0
-8322 -8409 8466 0
-8322 -8408 8464 0
-8320 8470 0
-8320 -8413 8468 0
-8320 -8411 8466 0
-8320 -8409 8464 0
-8320 -8408 8462 0
-8318 8468 0
-8318 -8413 8466 0
-8318 -8411 8464 0
-8318 -8409 8462 0
-8318 -8408 8460 0
-8317 8466 0
-8317 -8413 8464 0
-8317 -8411 8462 0
-8317 -8409 8460 0
-8317 -8408 8459 0
c ((aux1473 + aux1474 - aux1489)<=0)
8345 -8474 0
8346 -8475 0
8348 -8477 0
8350 -8479 0
8338 -8474 0
8338 8345 -8475 0
8338 8346 -8477 0
8338 8348 -8479 0
8338 8350 -8481 0
8339 -8475 0
8339 8345 -8477 0
8339 8346 -8479 0
8339 8348 -8481 0
8339 8350 -8483 0
8341 -8477 0
8341 8345 -8479 0
8341 8346 -8481 0
8341 8348 -8483 0
8341 8350 -8485 0
8343 -8479 0
8343 8345 -8481 0
8343 8346 -8483 0
8343 8348 -8485 0
8343 8350 -8487 0
c (0<=(aux1473 + aux1474 - aux1489))
-8350 8487 0
-8348 8485 0
-8346 8483 0
-8345 8481 0
-8343 8487 0
-8343 -8350 8485 0
-8343 -8348 8483 0
-8343 -8346 8481 0
-8343 -8345 8479 0
-8341 8485 0
-8341 -8350 8483 0
-8341 -8348 8481 0
-8341 -8346 8479 0
-8341 -8345 8477 0
-8339 8483 0
-8339 -8350 8481 0
-8339 -8348 8479 0
-8339 -8346 8477 0
-8339 -8345 8475 0
-8338 8481 0
-8338 -8350 8479 0
-8338 -8348 8477 0
-8338 -8346 8475 0
-8338 -8345 8474 0
c ((aux1476 + aux1480 - aux1490)<=0)
8387 -8489 0
8388 -8490 0
8390 -8492 0
8392 -8494 0
8359 -8489 0
8359 8387 -8490 0
8359 8388 -8492 0
8359 8390 -8494 0
8359 8392 -8496 0
8360 -8490 0
8360 8387 -8492 0
8360 8388 -8494 0
8360 8390 -8496 0
8360 8392 -8498 0
8362 -8492 0
8362 8387 -8494 0
8362 8388 -8496 0
8362 8390 -8498 0
8362 8392 -8500 0
8364 -8494 0
8364 8387 -8496 0
8364 8388 -8498 0
8364 8390 -8500 0
8364 8392 -8502 0
c (0<=(aux1476 + aux1480 - aux1490))
-8392 8502 0
-8390 8500 0
-8388 8498 0
-8387 8496 0
-8364 8502 0
-8364 -8392 8500 0
-8364 -8390 8498 0
-8364 -8388 8496 0
-8364 -8387 8494 0
-8362 8500 0
-8362 -8392 8498 0
-8362 -8390 8496 0
-8362 -8388 8494 0
-8362 -8387 8492 0
-8360 8498 0
-8360 -8392 8496 0
-8360 -8390 8494 0
-8360 -8388 8492 0
-8360 -8387 8490 0
-8359 8496 0
-8359 -8392 8494 0
-8359 -8390 8492 0
-8359 -8388 8490 0
-8359 -8387 8489 0
c ((aux1478 + aux1481 - aux1491)<=0)
8394 -8504 0
8395 -8505 0
8397 -8507 0
8399 -8509 0
8373 -8504 0
8373 8394 -8505 0
8373 8395 -8507 0
8373 8397 -8509 0
8373 8399 -8511 0
8374 -8505 0
8374 8394 -8507 0
8374 8395 -8509 0
8374 8397 -8511 0
8374 8399 -8513 0
8376 -8507 0
8376 8394 -8509 0
8376 8395 -8511 0
8376 8397 -8513 0
8376 8399 -8515 0
8378 -8509 0
8378 8394 -8511 0
8378 8395 -8513 0
8378 8397 -8515 0
8378 8399 -8517 0
c (0<=(aux1478 + aux1481 - aux1491))
-8399 8517 0
-8397 8515 0
-8395 8513 0
-8394 8511 0
-8378 8517 0
-8378 -8399 8515 0
-8378 -8397 8513 0
-8378 -8395 8511 0
-8378 -8394 8509 0
-8376 8515 0
-8376 -8399 8513 0
-8376 -8397 8511 0
-8376 -8395 8509 0
-8376 -8394 8507 0
-8374 8513 0
-8374 -8399 8511 0
-8374 -8397 8509 0
-8374 -8395 8507 0
-8374 -8394 8505 0
-8373 8511 0
-8373 -8399 8509 0
-8373 -8397 8507 0
-8373 -8395 8505 0
-8373 -8394 8504 0
c ((aux1479 + aux1484 - aux1492)<=0)
8415 -8519 0
8416 -8520 0
8418 -8522 0
8420 -8524 0
8380 -8519 0
8380 8415 -8520 0
8380 8416 -8522 0
8380 8418 -8524 0
8380 8420 -8526 0
8381 -8520 0
8381 8415 -8522 0
8381 8416 -8524 0
8381 8418 -8526 0
8381 8420 -8528 0
8383 -8522 0
8383 8415 -8524 0
8383 8416 -8526 0
8383 8418 -8528 0
8383 8420 -8530 0
8385 -8524 0
8385 8415 -8526 0
8385 8416 -8528 0
8385 8418 -8530 0
8385 8420 -8532 0
c (0<=(aux1479 + aux1484 - aux1492))
-8420 8532 0
-8418 8530 0
-8416 8528 0
-8415 8526 0
-8385 8532 0
-8385 -8420 8530 0
-8385 -8418 8528 0
-8385 -8416 8526 0
-8385 -8415 8524 0
-8383 8530 0
-8383 -8420 8528 0
-8383 -8418 8526 0
-8383 -8416 8524 0
-8383 -8415 8522 0
-8381 8528 0
-8381 -8420 8526 0
-8381 -8418 8524 0
-8381 -8416 8522 0
-8381 -8415 8520 0
-8380 8526 0
-8380 -8420 8524 0
-8380 -8418 8522 0
-8380 -8416 8520 0
-8380 -8415 8519 0
c ((aux1472 + aux1482 - aux1493)<=0)
8401 -8534 0
8402 -8535 0
8404 -8537 0
8406 -8539 0
8331 -8534 0
8331 8401 -8535 0
8331 8402 -8537 0
8331 8404 -8539 0
8331 8406 -8541 0
8332 -8535 0
8332 8401 -8537 0
8332 8402 -8539 0
8332 8404 -8541 0
8332 8406 -8543 0
8334 -8537 0
8334 8401 -8539 0
8334 8402 -8541 0
8334 8404 -8543 0
8334 8406 -8545 0
8336 -8539 0
8336 8401 -8541 0
8336 8402 -8543 0
8336 8404 -8545 0
8336 8406 -8547 0
c (0<=(aux1472 + aux1482 - aux1493))
-8406 8547 0
-8404 8545 0
-8402 8543 0
-8401 8541 0
-8336 8547 0
-8336 -8406 8545 0
-8336 -8404 8543 0
-8336 -8402 8541 0
-8336 -8401 8539 0
-8334 8545 0
-8334 -8406 8543 0
-8334 -8404 8541 0
-8334 -8402 8539 0
-8334 -8401 8537 0
-8332 8543 0
-8332 -8406 8541 0
-8332 -8404 8539 0
-8332 -8402 8537 0
-8332 -8401 8535 0
-8331 8541 0
-8331 -8406 8539 0
-8331 -8404 8537 0
-8331 -8402 8535 0
-8331 -8401 8534 0
c ((aux1489 + aux1493 - aux1494)<=0)
8534 -8549 0
8535 -8550 0
8537 -8552 0
8539 -8554 0
8541 -8556 0
8543 -8558 0
8545 -8560 0
8547 -8562 0
8474 -8549 0
8474 8534 -8550 0
8474 8535 -8552 0
8474 8537 -8554 0
8474 8539 -8556 0
8474 8541 -8558 0
8474 8543 -8560 0
8474 8545 -8562 0
8474 8547 -8564 0
8475 -8550 0
8475 8534 -8552 0
8475 8535 -8554 0
8475 8537 -8556 0
8475 8539 -8558 0
8475 8541 -8560 0
8475 8543 -8562 0
8475 8545 -8564 0
8475 8547 -8566 0
8477 -8552 0
8477 8534 -8554 0
8477 8535 -8556 0
8477 8537 -8558 0
8477 8539 -8560 0
8477 8541 -8562 0
8477 8543 -8564 0
8477 8545 -8566 0
8477 8547 -8568 0
8479 -8554 0
8479 8534 -8556 0
8479 8535 -8558 0
8479 8537 -8560 0
8479 8539 -8562 0
8479 8541 -8564 0
8479 8543 -8566 0
8479 8545 -8568 0
8479 8547 -8570 0
8481 -8556 0
8481 8534 -8558 0
8481 8535 -8560 0
8481 8537 -8562 0
8481 8539 -8564 0
8481 8541 -8566 0
8481 8543 -8568 0
8481 8545 -8570 0
8481 8547 -8572 0
8483 -8558 0
8483 8534 -8560 0
8483 8535 -8562 0
8483 8537 -8564 0
8483 8539 -8566 0
8483 8541 -8568 0
8483 8543 -8570 0
8483 8545 -8572 0
8483 8547 -8574 0
8485 -8560 0
8485 8534 -8562 0
8485 8535 -8564 0
8485 8537 -8566 0
8485 8539 -8568 0
8485 8541 -8570 0
8485 8543 -8572 0
8485 8545 -8574 0
8485 8547 -8576 0
8487 -8562 0
8487 8534 -8564 0
8487 8535 -8566 0
8487 8537 -8568 0
8487 8539 -8570 0
8487 8541 -8572 0
8487 8543 -8574 0
8487 8545 -8576 0
8487 8547 -8578 0
c (0<=(aux1489 + aux1493 - aux1494))
-8547 8578 0
-8545 8576 0
-8543 8574 0
-8541 8572 0
-8539 8570 0
-8537 8568 0
-8535 8566 0
-8534 8564 0
-8487 8578 0
-8487 -8547 8576 0
-8487 -8545 8574 0
-8487 -8543 8572 0
-8487 -8541 8570 0
-8487 -8539 8568 0
-8487 -8537 8566 0
-8487 -8535 8564 0
-8487 -8534 8562 0
-8485 8576 0
-8485 -8547 8574 0
-8485 -8545 8572 0
-8485 -8543 8570 0
-8485 -8541 8568 0
-8485 -8539 8566 0
-8485 -8537 8564 0
-8485 -8535 8562 0
-8485 -8534 8560 0
-8483 8574 0
-8483 -8547 8572 0
-8483 -8545 8570 0
-8483 -8543 8568 0
-8483 -8541 8566 0
-8483 -8539 8564 0
-8483 -8537 8562 0
-8483 -8535 8560 0
-8483 -8534 8558 0
-8481 8572 0
-8481 -8547 8570 0
-8481 -8545 8568 0
-8481 -8543 8566 0
-8481 -8541 8564 0
-8481 -8539 8562 0
-8481 -8537 8560 0
-8481 -8535 8558 0
-8481 -8534 8556 0
-8479 8570 0
-8479 -8547 8568 0
-8479 -8545 8566 0
-8479 -8543 8564 0
-8479 -8541 8562 0
-8479 -8539 8560 0
-8479 -8537 8558 0
-8479 -8535 8556 0
-8479 -8534 8554 0
-8477 8568 0
-8477 -8547 8566 0
-8477 -8545 8564 0
-8477 -8543 8562 0
-8477 -8541 8560 0
-8477 -8539 8558 0
-8477 -8537 8556 0
-8477 -8535 8554 0
-8477 -8534 8552 0
-8475 8566 0
-8475 -8547 8564 0
-8475 -8545 8562 0
-8475 -8543 8560 0
-8475 -8541 8558 0
-8475 -8539 8556 0
-8475 -8537 8554 0
-8475 -8535 8552 0
-8475 -8534 8550 0
-8474 8564 0
-8474 -8547 8562 0
-8474 -8545 8560 0
-8474 -8543 8558 0
-8474 -8541 8556 0
-8474 -8539 8554 0
-8474 -8537 8552 0
-8474 -8535 8550 0
-8474 -8534 8549 0
c ((aux1486 + aux1487 - aux1495)<=0)
8444 -8580 0
8445 -8581 0
8447 -8583 0
8449 -8585 0
8451 -8587 0
8453 -8589 0
8455 -8591 0
8457 -8593 0
8429 -8580 0
8429 8444 -8581 0
8429 8445 -8583 0
8429 8447 -8585 0
8429 8449 -8587 0
8429 8451 -8589 0
8429 8453 -8591 0
8429 8455 -8593 0
8429 8457 -8595 0
8430 -8581 0
8430 8444 -8583 0
8430 8445 -8585 0
8430 8447 -8587 0
8430 8449 -8589 0
8430 8451 -8591 0
8430 8453 -8593 0
8430 8455 -8595 0
8430 8457 -8597 0
8432 -8583 0
8432 8444 -8585 0
8432 8445 -8587 0
8432 8447 -8589 0
8432 8449 -8591 0
8432 8451 -8593 0
8432 8453 -8595 0
8432 8455 -8597 0
8432 8457 -8599 0
8434 -8585 0
8434 8444 -8587 0
8434 8445 -8589 0
8434 8447 -8591 0
8434 8449 -8593 0
8434 8451 -8595 0
8434 8453 -8597 0
8434 8455 -8599 0
8434 8457 -8601 0
8436 -8587 0
8436 8444 -8589 0
8436 8445 -8591 0
8436 8447 -8593 0
8436 8449 -8595 0
8436 8451 -8597 0
8436 8453 -8599 0
8436 8455 -8601 0
8436 8457 -8603 0
8438 -8589 0
8438 8444 -8591 0
8438 8445 -8593 0
8438 8447 -8595 0
8438 8449 -8597 0
8438 8451 -8599 0
8438 8453 -8601 0
8438 8455 -8603 0
8438 8457 -8605 0
8440 -8591 0
8440 8444 -8593 0
8440 8445 -8595 0
8440 8447 -8597 0
8440 8449 -8599 0
8440 8451 -8601 0
8440 8453 -8603 0
8440 8455 -8605 0
8440 8457 -8607 0
8442 -8593 0
8442 8444 -8595 0
8442 8445 -8597 0
8442 8447 -8599 0
8442 8449 -8601 0
8442 8451 -8603 0
8442 8453 -8605 0
8442 8455 -8607 0
8442 8457 -8609 0
c (0<=(aux1486 + aux1487 - aux1495))
-8457 8609 0
-8455 8607 0
-8453 8605 0
-8451 8603 0
-8449 8601 0
-8447 8599 0
-8445 8597 0
-8444 8595 0
-8442 8609 0
-8442 -8457 8607 0
-8442 -8455 8605 0
-8442 -8453 8603 0
-8442 -8451 8601 0
-8442 -8449 8599 0
-8442 -8447 8597 0
-8442 -8445 8595 0
-8442 -8444 8593 0
-8440 8607 0
-8440 -8457 8605 0
-8440 -8455 8603 0
-8440 -8453 8601 0
-8440 -8451 8599 0
-8440 -8449 8597 0
-8440 -8447 8595 0
-8440 -8445 8593 0
-8440 -8444 8591 0
-8438 8605 0
-8438 -8457 8603 0
-8438 -8455 8601 0
-8438 -8453 8599 0
-8438 -8451 8597 0
-8438 -8449 8595 0
-8438 -8447 8593 0
-8438 -8445 8591 0
-8438 -8444 8589 0
-8436 8603 0
-8436 -8457 8601 0
-8436 -8455 8599 0
-8436 -8453 8597 0
-8436 -8451 8595 0
-8436 -8449 8593 0
-8436 -8447 8591 0
-8436 -8445 8589 0
-8436 -8444 8587 0
-8434 8601 0
-8434 -8457 8599 0
-8434 -8455 8597 0
-8434 -8453 8595 0
-8434 -8451 8593 0
-8434 -8449 8591 0
-8434 -8447 8589 0
-8434 -8445 8587 0
-8434 -8444 8585 0
-8432 8599 0
-8432 -8457 8597 0
-8432 -8455 8595 0
-8432 -8453 8593 0
-8432 -8451 8591 0
-8432 -8449 8589 0
-8432 -8447 8587 0
-8432 -8445 8585 0
-8432 -8444 8583 0
-8430 8597 0
-8430 -8457 8595 0
-8430 -8455 8593 0
-8430 -8453 8591 0
-8430 -8451 8589 0
-8430 -8449 8587 0
-8430 -8447 8585 0
-8430 -8445 8583 0
-8430 -8444 8581 0
-8429 8595 0
-8429 -8457 8593 0
-8429 -8455 8591 0
-8429 -8453 8589 0
-8429 -8451 8587 0
-8429 -8449 8585 0
-8429 -8447 8583 0
-8429 -8445 8581 0
-8429 -8444 8580 0
c ((aux1488 + aux1490 - aux1496)<=0)
8489 -8611 0
8490 -8612 0
8492 -8614 0
8494 -8616 0
8496 -8618 0
8498 -8620 0
8500 -8622 0
8502 -8624 0
8459 -8611 0
8459 8489 -8612 0
8459 8490 -8614 0
8459 8492 -8616 0
8459 8494 -8618 0
8459 8496 -8620 0
8459 8498 -8622 0
8459 8500 -8624 0
8459 8502 -8626 0
8460 -8612 0
8460 8489 -8614 0
8460 8490 -8616 0
8460 8492 -8618 0
8460 8494 -8620 0
8460 8496 -8622 0
8460 8498 -8624 0
8460 8500 -8626 0
8460 8502 -8628 0
8462 -8614 0
8462 8489 -8616 0
8462 8490 -8618 0
8462 8492 -8620 0
8462 8494 -8622 0
8462 8496 -8624 0
8462 8498 -8626 0
8462 8500 -8628 0
8462 8502 -8630 0
8464 -8616 0
8464 8489 -8618 0
8464 8490 -8620 0
8464 8492 -8622 0
8464 8494 -8624 0
8464 8496 -8626 0
8464 8498 -8628 0
8464 8500 -8630 0
8464 8502 -8632 0
8466 -8618 0
8466 8489 -8620 0
8466 8490 -8622 0
8466 8492 -8624 0
8466 8494 -8626 0
8466 8496 -8628 0
8466 8498 -8630 0
8466 8500 -8632 0
8466 8502 -8634 0
8468 -8620 0
8468 8489 -8622 0
8468 8490 -8624 0
8468 8492 -8626 0
8468 8494 -8628 0
8468 8496 -8630 0
8468 8498 -8632 0
8468 8500 -8634 0
8468 8502 -8636 0
8470 -8622 0
8470 8489 -8624 0
8470 8490 -8626 0
8470 8492 -8628 0
8470 8494 -8630 0
8470 8496 -8632 0
8470 8498 -8634 0
8470 8500 -8636 0
8470 8502 -8638 0
8472 -8624 0
8472 8489 -8626 0
8472 8490 -8628 0
8472 8492 -8630 0
8472 8494 -8632 0
8472 8496 -8634 0
8472 8498 -8636 0
8472 8500 -8638 0
8472 8502 -8640 0
c (0<=(aux1488 + aux1490 - aux1496))
-8502 8640 0
-8500 8638 0
-8498 8636 0
-8496 8634 0
-8494 8632 0
-8492 8630 0
-8490 8628 0
-8489 8626 0
-8472 8640 0
-8472 -8502 8638 0
-8472 -8500 8636 0
-8472 -8498 8634 0
-8472 -8496 8632 0
-8472 -8494 8630 0
-8472 -8492 8628 0
-8472 -8490 8626 0
-8472 -8489 8624 0
-8470 8638 0
-8470 -8502 8636 0
-8470 -8500 8634 0
-8470 -8498 8632 0
-8470 -8496 8630 0
-8470 -8494 8628 0
-8470 -8492 8626 0
-8470 -8490 8624 0
-8470 -8489 8622 0
-8468 8636 0
-8468 -8502 8634 0
-8468 -8500 8632 0
-8468 -8498 8630 0
-8468 -8496 8628 0
-8468 -8494 8626 0
-8468 -8492 8624 0
-8468 -8490 8622 0
-8468 -8489 8620 0
-8466 8634 0
-8466 -8502 8632 0
-8466 -8500 8630 0
-8466 -8498 8628 0
-8466 -8496 8626 0
-8466 -8494 8624 0
-8466 -8492 8622 0
-8466 -8490 8620 0
-8466 -8489 8618 0
-8464 8632 0
-8464 -8502 8630 0
-8464 -8500 8628 0
-8464 -8498 8626 0
-8464 -8496 8624 0
-8464 -8494 8622 0
-8464 -8492 8620 0
-8464 -8490 8618 0
-8464 -8489 8616 0
-8462 8630 0
-8462 -8502 8628 0
-8462 -8500 8626 0
-8462 -8498 8624 0
-8462 -8496 8622 0
-8462 -8494 8620 0
-8462 -8492 8618 0
-8462 -8490 8616 0
-8462 -8489 8614 0
-8460 8628 0
-8460 -8502 8626 0
-8460 -8500 8624 0
-8460 -8498 8622 0
-8460 -8496 8620 0
-8460 -8494 8618 0
-8460 -8492 8616 0
-8460 -8490 8614 0
-8460 -8489 8612 0
-8459 8626 0
-8459 -8502 8624 0
-8459 -8500 8622 0
-8459 -8498 8620 0
-8459 -8496 8618 0
-8459 -8494 8616 0
-8459 -8492 8614 0
-8459 -8490 8612 0
-8459 -8489 8611 0
c ((aux1491 + aux1492 - aux1497)<=0)
8519 -8642 0
8520 -8643 0
8522 -8645 0
8524 -8647 0
8526 -8649 0
8528 -8651 0
8530 -8653 0
8532 -8655 0
8504 -8642 0
8504 8519 -8643 0
8504 8520 -8645 0
8504 8522 -8647 0
8504 8524 -8649 0
8504 8526 -8651 0
8504 8528 -8653 0
8504 8530 -8655 0
8504 8532 -8657 0
8505 -8643 0
8505 8519 -8645 0
8505 8520 -8647 0
8505 8522 -8649 0
8505 8524 -8651 0
8505 8526 -8653 0
8505 8528 -8655 0
8505 8530 -8657 0
8505 8532 -8659 0
8507 -8645 0
8507 8519 -8647 0
8507 8520 -8649 0
8507 8522 -8651 0
8507 8524 -8653 0
8507 8526 -8655 0
8507 8528 -8657 0
8507 8530 -8659 0
8507 8532 -8661 0
8509 -8647 0
8509 8519 -8649 0
8509 8520 -8651 0
8509 8522 -8653 0
8509 8524 -8655 0
8509 8526 -8657 0
8509 8528 -8659 0
8509 8530 -8661 0
8509 8532 -8663 0
8511 -8649 0
8511 8519 -8651 0
8511 8520 -8653 0
8511 8522 -8655 0
8511 8524 -8657 0
8511 8526 -8659 0
8511 8528 -8661 0
8511 8530 -8663 0
8511 8532 -8665 0
8513 -8651 0
8513 8519 -8653 0
8513 8520 -8655 0
8513 8522 -8657 0
8513 8524 -8659 0
8513 8526 -8661 0
8513 8528 -8663 0
8513 8530 -8665 0
8513 8532 -8667 0
8515 -8653 0
8515 8519 -8655 0
8515 8520 -8657 0
8515 8522 -8659 0
8515 8524 -8661 0
8515 8526 -8663 0
8515 8528 -8665 0
8515 8530 -8667 0
8515 8532 -8669 0
8517 -8655 0
8517 8519 -8657 0
8517 8520 -8659 0
8517 8522 -8661 0
8517 8524 -8663 0
8517 8526 -8665 0
8517 8528 -8667 0
8517 8530 -8669 0
8517 8532 -8671 0
c (0<=(aux1491 + aux1492 - aux1497))
-8532 8671 0
-8530 8669 0
-8528 8667 0
-8526 8665 0
-8524 8663 0
-8522 8661 0
-8520 8659 0
-8519 8657 0
-8517 8671 0
-8517 -8532 8669 0
-8517 -8530 8667 0
-8517 -8528 8665 0
-8517 -8526 8663 0
-8517 -8524 8661 0
-8517 -8522 8659 0
-8517 -8520 8657 0
-8517 -8519 8655 0
-8515 8669 0
-8515 -8532 8667 0
-8515 -8530 8665 0
-8515 -8528 8663 0
-8515 -8526 8661 0
-8515 -8524 8659 0
-8515 -8522 8657 0
-8515 -8520 8655 0
-8515 -8519 8653 0
-8513 8667 0
-8513 -8532 8665 0
-8513 -8530 8663 0
-8513 -8528 8661 0
-8513 -8526 8659 0
-8513 -8524 8657 0
-8513 -8522 8655 0
-8513 -8520 8653 0
-8513 -8519 8651 0
-8511 8665 0
-8511 -8532 8663 0
-8511 -8530 8661 0
-8511 -8528 8659 0
-8511 -8526 8657 0
-8511 -8524 8655 0
-8511 -8522 8653 0
-8511 -8520 8651 0
-8511 -8519 8649 0
-8509 8663 0
-8509 -8532 8661 0
-8509 -8530 8659 0
-8509 -8528 8657 0
-8509 -8526 8655 0
-8509 -8524 8653 0
-8509 -8522 8651 0
-8509 -8520 8649 0
-8509 -8519 8647 0
-8507 8661 0
-8507 -8532 8659 0
-8507 -8530 8657 0
-8507 -8528 8655 0
-8507 -8526 8653 0
-8507 -8524 8651 0
-8507 -8522 8649 0
-8507 -8520 8647 0
-8507 -8519 8645 0
-8505 8659 0
-8505 -8532 8657 0
-8505 -8530 8655 0
-8505 -8528 8653 0
-8505 -8526 8651 0
-8505 -8524 8649 0
-8505 -8522 8647 0
-8505 -8520 8645 0
-8505 -8519 8643 0
-8504 8657 0
-8504 -8532 8655 0
-8504 -8530 8653 0
-8504 -8528 8651 0
-8504 -8526 8649 0
-8504 -8524 8647 0
-8504 -8522 8645 0
-8504 -8520 8643 0
-8504 -8519 8642 0
c ((aux1495 + aux1497 - aux1498)<=0)
8642 -8673 0
8643 -8674 0
8645 -8676 0
8647 -8678 0
8649 -8680 0
8651 -8682 0
8653 -8684 0
8655 -8686 0
8657 -8688 0
8659 -8690 0
8661 -8692 0
8663 -8694 0
8665 -8696 0
8667 -8698 0
8669 -8700 0
8671 -8702 0
8580 -8673 0
8580 8642 -8674 0
8580 8643 -8676 0
8580 8645 -8678 0
8580 8647 -8680 0
8580 8649 -8682 0
8580 8651 -8684 0
8580 8653 -8686 0
8580 8655 -8688 0
8580 8657 -8690 0
8580 8659 -8692 0
8580 8661 -8694 0
8580 8663 -8696 0
8580 8665 -8698 0
8580 8667 -8700 0
8580 8669 -8702 0
8580 8671 -8704 0
8581 -8674 0
8581 8642 -8676 0
8581 8643 -8678 0
8581 8645 -8680 0
8581 8647 -8682 0
8581 8649 -8684 0
8581 8651 -8686 0
8581 8653 -8688 0
8581 8655 -8690 0
8581 8657 -8692 0
8581 8659 -8694 0
8581 8661 -8696 0
8581 8663 -8698 0
8581 8665 -8700 0
8581 8667 -8702 0
8581 8669 -8704 0
8581 8671 -8706 0
8583 -8676 0
8583 8642 -8678 0
8583 8643 -8680 0
8583 8645 -8682 0
8583 8647 -8684 0
8583 8649 -8686 0
8583 8651 -8688 0
8583 8653 -8690 0
8583 8655 -8692 0
8583 8657 -8694 0
8583 8659 -8696 0
8583 8661 -8698 0
8583 8663 -8700 0
8583 8665 -8702 0
8583 8667 -8704 0
8583 8669 -8706 0
8583 8671 -8708 0
8585 -8678 0
8585 8642 -8680 0
8585 8643 -8682 0
8585 8645 -8684 0
8585 8647 -8686 0
8585 8649 -8688 0
8585 8651 -8690 0
8585 8653 -8692 0
8585 8655 -8694 0
8585 8657 -8696 0
8585 8659 -8698 0
8585 8661 -8700 0
8585 8663 -8702 0
8585 8665 -8704 0
8585 8667 -8706 0
8585 8669 -8708 0
8585 8671 -8710 0
8587 -8680 0
8587 8642 -8682 0
8587 8643 -8684 0
8587 8645 -8686 0
8587 8647 -8688 0
8587 8649 -8690 0
8587 8651 -8692 0
8587 8653 -8694 0
8587 8655 -8696 0
8587 8657 -8698 0
8587 8659 -8700 0
8587 8661 -8702 0
8587 8663 -8704 0
8587 8665 -8706 0
8587 8667 -8708 0
8587 8669 -8710 0
8587 8671 -8712 0
8589 -8682 0
8589 8642 -8684 0
8589 8643 -8686 0
8589 8645 -8688 0
8589 8647 -8690 0
8589 8649 -8692 0
8589 8651 -8694 0
8589 8653 -8696 0
8589 8655 -8698 0
8589 8657 -8700 0
8589 8659 -8702 0
8589 8661 -8704 0
8589 8663 -8706 0
8589 8665 -8708 0
8589 8667 -8710 0
8589 8669 -8712 0
8589 8671 -8714 0
8591 -8684 0
8591 8642 -8686 0
8591 8643 -8688 0
8591 8645 -8690 0
8591 8647 -8692 0
8591 8649 -8694 0
8591 8651 -8696 0
8591 8653 -8698 0
8591 8655 -8700 0
8591 8657 -8702 0
8591 8659 -8704 0
8591 8661 -8706 0
8591 8663 -8708 0
8591 8665 -8710 0
8591 8667 -8712 0
8591 8669 -8714 0
8591 8671 -8716 0
8593 -8686 0
8593 8642 -8688 0
8593 8643 -8690 0
8593 8645 -8692 0
8593 8647 -8694 0
8593 8649 -8696 0
8593 8651 -8698 0
8593 8653 -8700 0
8593 8655 -8702 0
8593 8657 -8704 0
8593 8659 -8706 0
8593 8661 -8708 0
8593 8663 -8710 0
8593 8665 -8712 0
8593 8667 -8714 0
8593 8669 -8716 0
8593 8671 -8718 0
8595 -8688 0
8595 8642 -8690 0
8595 8643 -8692 0
8595 8645 -8694 0
8595 8647 -8696 0
8595 8649 -8698 0
8595 8651 -8700 0
8595 8653 -8702 0
8595 8655 -8704 0
8595 8657 -8706 0
8595 8659 -8708 0
8595 8661 -8710 0
8595 8663 -8712 0
8595 8665 -8714 0
8595 8667 -8716 0
8595 8669 -8718 0
8595 8671 -8720 0
8597 -8690 0
8597 8642 -8692 0
8597 8643 -8694 0
8597 8645 -8696 0
8597 8647 -8698 0
8597 8649 -8700 0
8597 8651 -8702 0
8597 8653 -8704 0
8597 8655 -8706 0
8597 8657 -8708 0
8597 8659 -8710 0
8597 8661 -8712 0
8597 8663 -8714 0
8597 8665 -8716 0
8597 8667 -8718 0
8597 8669 -8720 0
8597 8671 -8722 0
8599 -8692 0
8599 8642 -8694 0
8599 8643 -8696 0
8599 8645 -8698 0
8599 8647 -8700 0
8599 8649 -8702 0
8599 8651 -8704 0
8599 8653 -8706 0
8599 8655 -8708 0
8599 8657 -8710 0
8599 8659 -8712 0
8599 8661 -8714 0
8599 8663 -8716 0
8599 8665 -8718 0
8599 8667 -8720 0
8599 8669 -8722 0
8599 8671 -8724 0
8601 -8694 0
8601 8642 -8696 0
8601 8643 -8698 0
8601 8645 -8700 0
8601 8647 -8702 0
8601 8649 -8704 0
8601 8651 -8706 0
8601 8653 -8708 0
8601 8655 -8710 0
8601 8657 -8712 0
8601 8659 -8714 0
8601 8661 -8716 0
8601 8663 -8718 0
8601 8665 -8720 0
8601 8667 -8722 0
8601 8669 -8724 0
8601 8671 -8726 0
8603 -8696 0
8603 8642 -8698 0
8603 8643 -8700 0
8603 8645 -8702 0
8603 8647 -8704 0
8603 8649 -8706 0
8603 8651 -8708 0
8603 8653 -8710 0
8603 8655 -8712 0
8603 8657 -8714 0
8603 8659 -8716 0
8603 8661 -8718 0
8603 8663 -8720 0
8603 8665 -8722 0
8603 8667 -8724 0
8603 8669 -8726 0
8603 8671 -8728 0
8605 -8698 0
8605 8642 -8700 0
8605 8643 -8702 0
8605 8645 -8704 0
8605 8647 -8706 0
8605 8649 -8708 0
8605 8651 -8710 0
8605 8653 -8712 0
8605 8655 -8714 0
8605 8657 -8716 0
8605 8659 -8718 0
8605 8661 -8720 0
8605 8663 -8722 0
8605 8665 -8724 0
8605 8667 -8726 0
8605 8669 -8728 0
8605 8671 -8730 0
8607 -8700 0
8607 8642 -8702 0
8607 8643 -8704 0
8607 8645 -8706 0
8607 8647 -8708 0
8607 8649 -8710 0
8607 8651 -8712 0
8607 8653 -8714 0
8607 8655 -8716 0
8607 8657 -8718 0
8607 8659 -8720 0
8607 8661 -8722 0
8607 8663 -8724 0
8607 8665 -8726 0
8607 8667 -8728 0
8607 8669 -8730 0
8607 8671 -8732 0
8609 -8702 0
8609 8642 -8704 0
8609 8643 -8706 0
8609 8645 -8708 0
8609 8647 -8710 0
8609 8649 -8712 0
8609 8651 -8714 0
8609 8653 -8716 0
8609 8655 -8718 0
8609 8657 -8720 0
8609 8659 -8722 0
8609 8661 -8724 0
8609 8663 -8726 0
8609 8665 -8728 0
8609 8667 -8730 0
8609 8669 -8732 0
8609 8671 -8734 0
c (0<=(aux1495 + aux1497 - aux1498))
-8671 8734 0
-8669 8732 0
-8667 8730 0
-8665 8728 0
-8663 8726 0
-8661 8724 0
-8659 8722 0
-8657 8720 0
-8655 8718 0
-8653 8716 0
-8651 8714 0
-8649 8712 0
-8647 8710 0
-8645 8708 0
-8643 8706 0
-8642 8704 0
-8609 8734 0
-8609 -8671 8732 0
-8609 -8669 8730 0
-8609 -8667 8728 0
-8609 -8665 8726 0
-8609 -8663 8724 0
-8609 -8661 8722 0
-8609 -8659 8720 0
-8609 -8657 8718 0
-8609 -8655 8716 0
-8609 -8653 8714 0
-8609 -8651 8712 0
-8609 -8649 8710 0
-8609 -8647 8708 0
-8609 -8645 8706 0
-8609 -8643 8704 0
-8609 -8642 8702 0
-8607 8732 0
-8607 -8671 8730 0
-8607 -8669 8728 0
-8607 -8667 8726 0
-8607 -8665 8724 0
-8607 -8663 8722 0
-8607 -8661 8720 0
-8607 -8659 8718 0
-8607 -8657 8716 0
-8607 -8655 8714 0
-8607 -8653 8712 0
-8607 -8651 8710 0
-8607 -8649 8708 0
-8607 -8647 8706 0
-8607 -8645 8704 0
-8607 -8643 8702 0
-8607 -8642 8700 0
-8605 8730 0
-8605 -8671 8728 0
-8605 -8669 8726 0
-8605 -8667 8724 0
-8605 -8665 8722 0
-8605 -8663 8720 0
-8605 -8661 8718 0
-8605 -8659 8716 0
-8605 -8657 8714 0
-8605 -8655 8712 0
-8605 -8653 8710 0
-8605 -8651 8708 0
-8605 -8649 8706 0
-8605 -8647 8704 0
-8605 -8645 8702 0
-8605 -8643 8700 0
-8605 -8642 8698 0
-8603 8728 0
-8603 -8671 8726 0
-8603 -8669 8724 0
-8603 -8667 8722 0
-8603 -8665 8720 0
-8603 -8663 8718 0
-8603 -8661 8716 0
-8603 -8659 8714 0
-8603 -8657 8712 0
-8603 -8655 8710 0
-8603 -8653 8708 0
-8603 -8651 8706 0
-8603 -8649 8704 0
-8603 -8647 8702 0
-8603 -8645 8700 0
-8603 -8643 8698 0
-8603 -8642 8696 0
-8601 8726 0
-8601 -8671 8724 0
-8601 -8669 8722 0
-8601 -8667 8720 0
-8601 -8665 8718 0
-8601 -8663 8716 0
-8601 -8661 8714 0
-8601 -8659 8712 0
-8601 -8657 8710 0
-8601 -8655 8708 0
-8601 -8653 8706 0
-8601 -8651 8704 0
-8601 -8649 8702 0
-8601 -8647 8700 0
-8601 -8645 8698 0
-8601 -8643 8696 0
-8601 -8642 8694 0
-8599 8724 0
-8599 -8671 8722 0
-8599 -8669 8720 0
-8599 -8667 8718 0
-8599 -8665 8716 0
-8599 -8663 8714 0
-8599 -8661 8712 0
-8599 -8659 8710 0
-8599 -8657 8708 0
-8599 -8655 8706 0
-8599 -8653 8704 0
-8599 -8651 8702 0
-8599 -8649 8700 0
-8599 -8647 8698 0
-8599 -8645 8696 0
-8599 -8643 8694 0
-8599 -8642 8692 0
-8597 8722 0
-8597 -8671 8720 0
-8597 -8669 8718 0
-8597 -8667 8716 0
-8597 -8665 8714 0
-8597 -8663 8712 0
-8597 -8661 8710 0
-8597 -8659 8708 0
-8597 -8657 8706 0
-8597 -8655 8704 0
-8597 -8653 8702 0
-8597 -8651 8700 0
-8597 -8649 8698 0
-8597 -8647 8696 0
-8597 -8645 8694 0
-8597 -8643 8692 0
-8597 -8642 8690 0
-8595 8720 0
-8595 -8671 8718 0
-8595 -8669 8716 0
-8595 -8667 8714 0
-8595 -8665 8712 0
-8595 -8663 8710 0
-8595 -8661 8708 0
-8595 -8659 8706 0
-8595 -8657 8704 0
-8595 -8655 8702 0
-8595 -8653 8700 0
-8595 -8651 8698 0
-8595 -8649 8696 0
-8595 -8647 8694 0
-8595 -8645 8692 0
-8595 -8643 8690 0
-8595 -8642 8688 0
-8593 8718 0
-8593 -8671 8716 0
-8593 -8669 8714 0
-8593 -8667 8712 0
-8593 -8665 8710 0
-8593 -8663 8708 0
-8593 -8661 8706 0
-8593 -8659 8704 0
-8593 -8657 8702 0
-8593 -8655 8700 0
-8593 -8653 8698 0
-8593 -8651 8696 0
-8593 -8649 8694 0
-8593 -8647 8692 0
-8593 -8645 8690 0
-8593 -8643 8688 0
-8593 -8642 8686 0
-8591 8716 0
-8591 -8671 8714 0
-8591 -8669 8712 0
-8591 -8667 8710 0
-8591 -8665 8708 0
-8591 -8663 8706 0
-8591 -8661 8704 0
-8591 -8659 8702 0
-8591 -8657 8700 0
-8591 -8655 8698 0
-8591 -8653 8696 0
-8591 -8651 8694 0
-8591 -8649 8692 0
-8591 -8647 8690 0
-8591 -8645 8688 0
-8591 -8643 8686 0
-8591 -8642 8684 0
-8589 8714 0
-8589 -8671 8712 0
-8589 -8669 8710 0
-8589 -8667 8708 0
-8589 -8665 8706 0
-8589 -8663 8704 0
-8589 -8661 8702 0
-8589 -8659 8700 0
-8589 -8657 8698 0
-8589 -8655 8696 0
-8589 -8653 8694 0
-8589 -8651 8692 0
-8589 -8649 8690 0
-8589 -8647 8688 0
-8589 -8645 8686 0
-8589 -8643 8684 0
-8589 -8642 8682 0
-8587 8712 0
-8587 -8671 8710 0
-8587 -8669 8708 0
-8587 -8667 8706 0
-8587 -8665 8704 0
-8587 -8663 8702 0
-8587 -8661 8700 0
-8587 -8659 8698 0
-8587 -8657 8696 0
-8587 -8655 8694 0
-8587 -8653 8692 0
-8587 -8651 8690 0
-8587 -8649 8688 0
-8587 -8647 8686 0
-8587 -8645 8684 0
-8587 -8643 8682 0
-8587 -8642 8680 0
-8585 8710 0
-8585 -8671 8708 0
-8585 -8669 8706 0
-8585 -8667 8704 0
-8585 -8665 8702 0
-8585 -8663 8700 0
-8585 -8661 8698 0
-8585 -8659 8696 0
-8585 -8657 8694 0
-8585 -8655 8692 0
-8585 -8653 8690 0
-8585 -8651 8688 0
-8585 -8649 8686 0
-8585 -8647 8684 0
-8585 -8645 8682 0
-8585 -8643 8680 0
-8585 -8642 8678 0
-8583 8708 0
-8583 -8671 8706 0
-8583 -8669 8704 0
-8583 -8667 8702 0
-8583 -8665 8700 0
-8583 -8663 8698 0
-8583 -8661 8696 0
-8583 -8659 8694 0
-8583 -8657 8692 0
-8583 -8655 8690 0
-8583 -8653 8688 0
-8583 -8651 8686 0
-8583 -8649 8684 0
-8583 -8647 8682 0
-8583 -8645 8680 0
-8583 -8643 8678 0
-8583 -8642 8676 0
-8581 8706 0
-8581 -8671 8704 0
-8581 -8669 8702 0
-8581 -8667 8700 0
-8581 -8665 8698 0
-8581 -8663 8696 0
-8581 -8661 8694 0
-8581 -8659 8692 0
-8581 -8657 8690 0
-8581 -8655 8688 0
-8581 -8653 8686 0
-8581 -8651 8684 0
-8581 -8649 8682 0
-8581 -8647 8680 0
-8581 -8645 8678 0
-8581 -8643 8676 0
-8581 -8642 8674 0
-8580 8704 0
-8580 -8671 8702 0
-8580 -8669 8700 0
-8580 -8667 8698 0
-8580 -8665 8696 0
-8580 -8663 8694 0
-8580 -8661 8692 0
-8580 -8659 8690 0
-8580 -8657 8688 0
-8580 -8655 8686 0
-8580 -8653 8684 0
-8580 -8651 8682 0
-8580 -8649 8680 0
-8580 -8647 8678 0
-8580 -8645 8676 0
-8580 -8643 8674 0
-8580 -8642 8673 0
c ((aux1494 + aux1496 - aux1499)<=0)
8611 -8736 0
8612 -8737 0
8614 -8739 0
8616 -8741 0
8618 -8743 0
8620 -8745 0
8622 -8747 0
8624 -8749 0
8626 -8751 0
8628 -8753 0
8630 -8755 0
8632 -8757 0
8634 -8759 0
8636 -8761 0
8638 -8763 0
8640 -8765 0
8549 -8736 0
8549 8611 -8737 0
8549 8612 -8739 0
8549 8614 -8741 0
8549 8616 -8743 0
8549 8618 -8745 0
8549 8620 -8747 0
8549 8622 -8749 0
8549 8624 -8751 0
8549 8626 -8753 0
8549 8628 -8755 0
8549 8630 -8757 0
8549 8632 -8759 0
8549 8634 -8761 0
8549 8636 -8763 0
8549 8638 -8765 0
8549 8640 -8767 0
8550 -8737 0
8550 8611 -8739 0
8550 8612 -8741 0
8550 8614 -8743 0
8550 8616 -8745 0
8550 8618 -8747 0
8550 8620 -8749 0
8550 8622 -8751 0
8550 8624 -8753 0
8550 8626 -8755 0
8550 8628 -8757 0
8550 8630 -8759 0
8550 8632 -8761 0
8550 8634 -8763 0
8550 8636 -8765 0
8550 8638 -8767 0
8550 8640 -8769 0
8552 -8739 0
8552 8611 -8741 0
8552 8612 -8743 0
8552 8614 -8745 0
8552 8616 -8747 0
8552 8618 -8749 0
8552 8620 -8751 0
8552 8622 -8753 0
8552 8624 -8755 0
8552 8626 -8757 0
8552 8628 -8759 0
8552 8630 -8761 0
8552 8632 -8763 0
8552 8634 -8765 0
8552 8636 -8767 0
8552 8638 -8769 0
8552 8640 -8771 0
8554 -8741 0
8554 8611 -8743 0
8554 8612 -8745 0
8554 8614 -8747 0
8554 8616 -8749 0
8554 8618 -8751 0
8554 8620 -8753 0
8554 8622 -8755 0
8554 8624 -8757 0
8554 8626 -8759 0
8554 8628 -8761 0
8554 8630 -8763 0
8554 8632 -8765 0
8554 8634 -8767 0
8554 8636 -8769 0
8554 8638 -8771 0
8554 8640 -8773 0
8556 -8743 0
8556 8611 -8745 0
8556 8612 -8747 0
8556 8614 -8749 0
8556 8616 -8751 0
8556 8618 -8753 0
8556 8620 -8755 0
8556 8622 -8757 0
8556 8624 -8759 0
8556 8626 -8761 0
8556 8628 -8763 0
8556 8630 -8765 0
8556 8632 -8767 0
8556 8634 -8769 0
8556 8636 -8771 0
8556 8638 -8773 0
8556 8640 -8775 0
8558 -8745 0
8558 8611 -8747 0
8558 8612 -8749 0
8558 8614 -8751 0
8558 8616 -8753 0
8558 8618 -8755 0
8558 8620 -8757 0
8558 8622 -8759 0
8558 8624 -8761 0
8558 8626 -8763 0
8558 8628 -8765 0
8558 8630 -8767 0
8558 8632 -8769 0
8558 8634 -8771 0
8558 8636 -8773 0
8558 8638 -8775 0
8558 8640 -8777 0
8560 -8747 0
8560 8611 -8749 0
8560 8612 -8751 0
8560 8614 -8753 0
8560 8616 -8755 0
8560 8618 -8757 0
8560 8620 -8759 0
8560 8622 -8761 0
8560 8624 -8763 0
8560 8626 -8765 0
8560 8628 -8767 0
8560 8630 -8769 0
8560 8632 -8771 0
8560 8634 -8773 0
8560 8636 -8775 0
8560 8638 -8777 0
8560 8640 -8779 0
8562 -8749 0
8562 8611 -8751 0
8562 8612 -8753 0
8562 8614 -8755 0
8562 8616 -8757 0
8562 8618 -8759 0
8562 8620 -8761 0
8562 8622 -8763 0
8562 8624 -8765 0
8562 8626 -8767 0
8562 8628 -8769 0
8562 8630 -8771 0
8562 8632 -8773 0
8562 8634 -8775 0
8562 8636 -8777 0
8562 8638 -8779 0
8562 8640 -8781 0
8564 -8751 0
8564 8611 -8753 0
8564 8612 -8755 0
8564 8614 -8757 0
8564 8616 -8759 0
8564 8618 -8761 0
8564 8620 -8763 0
8564 8622 -8765 0
8564 8624 -8767 0
8564 8626 -8769 0
8564 8628 -8771 0
8564 8630 -8773 0
8564 8632 -8775 0
8564 8634 -8777 0
8564 8636 -8779 0
8564 8638 -8781 0
8564 8640 -8783 0
8566 -8753 0
8566 8611 -8755 0
8566 8612 -8757 0
8566 8614 -8759 0
8566 8616 -8761 0
8566 8618 -8763 0
8566 8620 -8765 0
8566 8622 -8767 0
8566 8624 -8769 0
8566 8626 -8771 0
8566 8628 -8773 0
8566 8630 -8775 0
8566 8632 -8777 0
8566 8634 -8779 0
8566 8636 -8781 0
8566 8638 -8783 0
8566 8640 -8785 0
8568 -8755 0
8568 8611 -8757 0
8568 8612 -8759 0
8568 8614 -8761 0
8568 8616 -8763 0
8568 8618 -8765 0
8568 8620 -8767 0
8568 8622 -8769 0
8568 8624 -8771 0
8568 8626 -8773 0
8568 8628 -8775 0
8568 8630 -8777 0
8568 8632 -8779 0
8568 8634 -8781 0
8568 8636 -8783 0
8568 8638 -8785 0
8568 8640 -8787 0
8570 -8757 0
8570 8611 -8759 0
8570 8612 -8761 0
8570 8614 -8763 0
8570 8616 -8765 0
8570 8618 -8767 0
8570 8620 -8769 0
8570 8622 -8771 0
8570 8624 -8773 0
8570 8626 -8775 0
8570 8628 -8777 0
8570 8630 -8779 0
8570 8632 -8781 0
8570 8634 -8783 0
8570 8636 -8785 0
8570 8638 -8787 0
8570 8640 -8789 0
8572 -8759 0
8572 8611 -8761 0
8572 8612 -8763 0
8572 8614 -8765 0
8572 8616 -8767 0
8572 8618 -8769 0
8572 8620 -8771 0
8572 8622 -8773 0
8572 8624 -8775 0
8572 8626 -8777 0
8572 8628 -8779 0
8572 8630 -8781 0
8572 8632 -8783 0
8572 8634 -8785 0
8572 8636 -8787 0
8572 8638 -8789 0
8572 8640 -8791 0
8574 -8761 0
8574 8611 -8763 0
8574 8612 -8765 0
8574 8614 -8767 0
8574 8616 -8769 0
8574 8618 -8771 0
8574 8620 -8773 0
8574 8622 -8775 0
8574 8624 -8777 0
8574 8626 -8779 0
8574 8628 -8781 0
8574 8630 -8783 0
8574 8632 -8785 0
8574 8634 -8787 0
8574 8636 -8789 0
8574 8638 -8791 0
8574 8640 -8793 0
8576 -8763 0
8576 8611 -8765 0
8576 8612 -8767 0
8576 8614 -8769 0
8576 8616 -8771 0
8576 8618 -8773 0
8576 8620 -8775 0
8576 8622 -8777 0
8576 8624 -8779 0
8576 8626 -8781 0
8576 8628 -8783 0
8576 8630 -8785 0
8576 8632 -8787 0
8576 8634 -8789 0
8576 8636 -8791 0
8576 8638 -8793 0
8576 8640 -8795 0
8578 -8765 0
8578 8611 -8767 0
8578 8612 -8769 0
8578 8614 -8771 0
8578 8616 -8773 0
8578 8618 -8775 0
8578 8620 -8777 0
8578 8622 -8779 0
8578 8624 -8781 0
8578 8626 -8783 0
8578 8628 -8785 0
8578 8630 -8787 0
8578 8632 -8789 0
8578 8634 -8791 0
8578 8636 -8793 0
8578 8638 -8795 0
8578 8640 -8797 0
c (0<=(aux1494 + aux1496 - aux1499))
-8640 8797 0
-8638 8795 0
-8636 8793 0
-8634 8791 0
-8632 8789 0
-8630 8787 0
-8628 8785 0
-8626 8783 0
-8624 8781 0
-8622 8779 0
-8620 8777 0
-8618 8775 0
-8616 8773 0
-8614 8771 0
-8612 8769 0
-8611 8767 0
-8578 8797 0
-8578 -8640 8795 0
-8578 -8638 8793 0
-8578 -8636 8791 0
-8578 -8634 8789 0
-8578 -8632 8787 0
-8578 -8630 8785 0
-8578 -8628 8783 0
-8578 -8626 8781 0
-8578 -8624 8779 0
-8578 -8622 8777 0
-8578 -8620 8775 0
-8578 -8618 8773 0
-8578 -8616 8771 0
-8578 -8614 8769 0
-8578 -8612 8767 0
-8578 -8611 8765 0
-8576 8795 0
-8576 -8640 8793 0
-8576 -8638 8791 0
-8576 -8636 8789 0
-8576 -8634 8787 0
-8576 -8632 8785 0
-8576 -8630 8783 0
-8576 -8628 8781 0
-8576 -8626 8779 0
-8576 -8624 8777 0
-8576 -8622 8775 0
-8576 -8620 8773 0
-8576 -8618 8771 0
-8576 -8616 8769 0
-8576 -8614 8767 0
-8576 -8612 8765 0
-8576 -8611 8763 0
-8574 8793 0
-8574 -8640 8791 0
-8574 -8638 8789 0
-8574 -8636 8787 0
-8574 -8634 8785 0
-8574 -8632 8783 0
-8574 -8630 8781 0
-8574 -8628 8779 0
-8574 -8626 8777 0
-8574 -8624 8775 0
-8574 -8622 8773 0
-8574 -8620 8771 0
-8574 -8618 8769 0
-8574 -8616 8767 0
-8574 -8614 8765 0
-8574 -8612 8763 0
-8574 -8611 8761 0
-8572 8791 0
-8572 -8640 8789 0
-8572 -8638 8787 0
-8572 -8636 8785 0
-8572 -8634 8783 0
-8572 -8632 8781 0
-8572 -8630 8779 0
-8572 -8628 8777 0
-8572 -8626 8775 0
-8572 -8624 8773 0
-8572 -8622 8771 0
-8572 -8620 8769 0
-8572 -8618 8767 0
-8572 -8616 8765 0
-8572 -8614 8763 0
-8572 -8612 8761 0
-8572 -8611 8759 0
-8570 8789 0
-8570 -8640 8787 0
-8570 -8638 8785 0
-8570 -8636 8783 0
-8570 -8634 8781 0
-8570 -8632 8779 0
-8570 -8630 8777 0
-8570 -8628 8775 0
-8570 -8626 8773 0
-8570 -8624 8771 0
-8570 -8622 8769 0
-8570 -8620 8767 0
-8570 -8618 8765 0
-8570 -8616 8763 0
-8570 -8614 8761 0
-8570 -8612 8759 0
-8570 -8611 8757 0
-8568 8787 0
-8568 -8640 8785 0
-8568 -8638 8783 0
-8568 -8636 8781 0
-8568 -8634 8779 0
-8568 -8632 8777 0
-8568 -8630 8775 0
-8568 -8628 8773 0
-8568 -8626 8771 0
-8568 -8624 8769 0
-8568 -8622 8767 0
-8568 -8620 8765 0
-8568 -8618 8763 0
-8568 -8616 8761 0
-8568 -8614 8759 0
-8568 -8612 8757 0
-8568 -8611 8755 0
-8566 8785 0
-8566 -8640 8783 0
-8566 -8638 8781 0
-8566 -8636 8779 0
-8566 -8634 8777 0
-8566 -8632 8775 0
-8566 -8630 8773 0
-8566 -8628 8771 0
-8566 -8626 8769 0
-8566 -8624 8767 0
-8566 -8622 8765 0
-8566 -8620 8763 0
-8566 -8618 8761 0
-8566 -8616 8759 0
-8566 -8614 8757 0
-8566 -8612 8755 0
-8566 -8611 8753 0
-8564 8783 0
-8564 -8640 8781 0
-8564 -8638 8779 0
-8564 -8636 8777 0
-8564 -8634 8775 0
-8564 -8632 8773 0
-8564 -8630 8771 0
-8564 -8628 8769 0
-8564 -8626 8767 0
-8564 -8624 8765 0
-8564 -8622 8763 0
-8564 -8620 8761 0
-8564 -8618 8759 0
-8564 -8616 8757 0
-8564 -8614 8755 0
-8564 -8612 8753 0
-8564 -8611 8751 0
-8562 8781 0
-8562 -8640 8779 0
-8562 -8638 8777 0
-8562 -8636 8775 0
-8562 -8634 8773 0
-8562 -8632 8771 0
-8562 -8630 8769 0
-8562 -8628 8767 0
-8562 -8626 8765 0
-8562 -8624 8763 0
-8562 -8622 8761 0
-8562 -8620 8759 0
-8562 -8618 8757 0
-8562 -8616 8755 0
-8562 -8614 8753 0
-8562 -8612 8751 0
-8562 -8611 8749 0
-8560 8779 0
-8560 -8640 8777 0
-8560 -8638 8775 0
-8560 -8636 8773 0
-8560 -8634 8771 0
-8560 -8632 8769 0
-8560 -8630 8767 0
-8560 -8628 8765 0
-8560 -8626 8763 0
-8560 -8624 8761 0
-8560 -8622 8759 0
-8560 -8620 8757 0
-8560 -8618 8755 0
-8560 -8616 8753 0
-8560 -8614 8751 0
-8560 -8612 8749 0
-8560 -8611 8747 0
-8558 8777 0
-8558 -8640 8775 0
-8558 -8638 8773 0
-8558 -8636 8771 0
-8558 -8634 8769 0
-8558 -8632 8767 0
-8558 -8630 8765 0
-8558 -8628 8763 0
-8558 -8626 8761 0
-8558 -8624 8759 0
-8558 -8622 8757 0
-8558 -8620 8755 0
-8558 -8618 8753 0
-8558 -8616 8751 0
-8558 -8614 8749 0
-8558 -8612 8747 0
-8558 -8611 8745 0
-8556 8775 0
-8556 -8640 8773 0
-8556 -8638 8771 0
-8556 -8636 8769 0
-8556 -8634 8767 0
-8556 -8632 8765 0
-8556 -8630 8763 0
-8556 -8628 8761 0
-8556 -8626 8759 0
-8556 -8624 8757 0
-8556 -8622 8755 0
-8556 -8620 8753 0
-8556 -8618 8751 0
-8556 -8616 8749 0
-8556 -8614 8747 0
-8556 -8612 8745 0
-8556 -8611 8743 0
-8554 8773 0
-8554 -8640 8771 0
-8554 -8638 8769 0
-8554 -8636 8767 0
-8554 -8634 8765 0
-8554 -8632 8763 0
-8554 -8630 8761 0
-8554 -8628 8759 0
-8554 -8626 8757 0
-8554 -8624 8755 0
-8554 -8622 8753 0
-8554 -8620 8751 0
-8554 -8618 8749 0
-8554 -8616 8747 0
-8554 -8614 8745 0
-8554 -8612 8743 0
-8554 -8611 8741 0
-8552 8771 0
-8552 -8640 8769 0
-8552 -8638 8767 0
-8552 -8636 8765 0
-8552 -8634 8763 0
-8552 -8632 8761 0
-8552 -8630 8759 0
-8552 -8628 8757 0
-8552 -8626 8755 0
-8552 -8624 8753 0
-8552 -8622 8751 0
-8552 -8620 8749 0
-8552 -8618 8747 0
-8552 -8616 8745 0
-8552 -8614 8743 0
-8552 -8612 8741 0
-8552 -8611 8739 0
-8550 8769 0
-8550 -8640 8767 0
-8550 -8638 8765 0
-8550 -8636 8763 0
-8550 -8634 8761 0
-8550 -8632 8759 0
-8550 -8630 8757 0
-8550 -8628 8755 0
-8550 -8626 8753 0
-8550 -8624 8751 0
-8550 -8622 8749 0
-8550 -8620 8747 0
-8550 -8618 8745 0
-8550 -8616 8743 0
-8550 -8614 8741 0
-8550 -8612 8739 0
-8550 -8611 8737 0
-8549 8767 0
-8549 -8640 8765 0
-8549 -8638 8763 0
-8549 -8636 8761 0
-8549 -8634 8759 0
-8549 -8632 8757 0
-8549 -8630 8755 0
-8549 -8628 8753 0
-8549 -8626 8751 0
-8549 -8624 8749 0
-8549 -8622 8747 0
-8549 -8620 8745 0
-8549 -8618 8743 0
-8549 -8616 8741 0
-8549 -8614 8739 0
-8549 -8612 8737 0
-8549 -8611 8736 0
c ((aux1250 + aux1251 - shift(num_occupied_by_types_00000, -64))<=64)
6424 -1318 0
6425 -1319 0
6427 -1321 0
6429 -1323 0
6431 -1325 0
6433 -1327 0
6435 -1329 0
6437 -1331 0
6439 -1333 0
6441 -1335 0
6443 -1337 0
6445 -1339 0
6447 -1341 0
6449 -1343 0
6451 -1345 0
6453 -1347 0
6455 -1349 0
6457 -1351 0
6459 -1353 0
6461 -1355 0
6463 -1357 0
6465 -1359 0
6467 -1361 0
6469 -1363 0
6471 -1365 0
6473 -1367 0
6475 -1369 0
6477 -1371 0
6479 -1373 0
6481 -1375 0
6483 -1377 0
6485 -1379 0
6361 -1318 0
6361 6424 -1319 0
6361 6425 -1321 0
6361 6427 -1323 0
6361 6429 -1325 0
6361 6431 -1327 0
6361 6433 -1329 0
6361 6435 -1331 0
6361 6437 -1333 0
6361 6439 -1335 0
6361 6441 -1337 0
6361 6443 -1339 0
6361 6445 -1341 0
6361 6447 -1343 0
6361 6449 -1345 0
6361 6451 -1347 0
6361 6453 -1349 0
6361 6455 -1351 0
6361 6457 -1353 0
6361 6459 -1355 0
6361 6461 -1357 0
6361 6463 -1359 0
6361 6465 -1361 0
6361 6467 -1363 0
6361 6469 -1365 0
6361 6471 -1367 0
6361 6473 -1369 0
6361 6475 -1371 0
6361 6477 -1373 0
6361 6479 -1375 0
6361 6481 -1377 0
6361 6483 -1379 0
6361 6485 -1381 0
6362 -1319 0
6362 6424 -1321 0
6362 6425 -1323 0
6362 6427 -1325 0
6362 6429 -1327 0
6362 6431 -1329 0
6362 6433 -1331 0
6362 6435 -1333 0
6362 6437 -1335 0
6362 6439 -1337 0
6362 6441 -1339 0
6362 6443 -1341 0
6362 6445 -1343 0
6362 6447 -1345 0
6362 6449 -1347 0
6362 6451 -1349 0
6362 6453 -1351 0
6362 6455 -1353 0
6362 6457 -1355 0
6362 6459 -1357 0
6362 6461 -1359 0
6362 6463 -1361 0
6362 6465 -1363 0
6362 6467 -1365 0
6362 6469 -1367 0
6362 6471 -1369 0
6362 6473 -1371 0
6362 6475 -1373 0
6362 6477 -1375 0
6362 6479 -1377 0
6362 6481 -1379 0
6362 6483 -1381 0
6362 6485 -1383 0
6364 -1321 0
6364 6424 -1323 0
6364 6425 -1325 0
6364 6427 -1327 0
6364 6429 -1329 0
6364 6431 -1331 0
6364 6433 -1333 0
6364 6435 -1335 0
6364 6437 -1337 0
6364 6439 -1339 0
6364 6441 -1341 0
6364 6443 -1343 0
6364 6445 -1345 0
6364 6447 -1347 0
6364 6449 -1349 0
6364 6451 -1351 0
6364 6453 -1353 0
6364 6455 -1355 0
6364 6457 -1357 0
6364 6459 -1359 0
6364 6461 -1361 0
6364 6463 -1363 0
6364 6465 -1365 0
6364 6467 -1367 0
6364 6469 -1369 0
6364 6471 -1371 0
6364 6473 -1373 0
6364 6475 -1375 0
6364 6477 -1377 0
6364 6479 -1379 0
6364 6481 -1381 0
6364 6483 -1383 0
6364 6485 -1385 0
6366 -1323 0
6366 6424 -1325 0
6366 6425 -1327 0
6366 6427 -1329 0
6366 6429 -1331 0
6366 6431 -1333 0
6366 6433 -1335 0
6366 6435 -1337 0
6366 6437 -1339 0
6366 6439 -1341 0
6366 6441 -1343 0
6366 6443 -1345 0
6366 6445 -1347 0
6366 6447 -1349 0
6366 6449 -1351 0
6366 6451 -1353 0
6366 6453 -1355 0
6366 6455 -1357 0
6366 6457 -1359 0
6366 6459 -1361 0
6366 6461 -1363 0
6366 6463 -1365 0
6366 6465 -1367 0
6366 6467 -1369 0
6366 6469 -1371 0
6366 6471 -1373 0
6366 6473 -1375 0
6366 6475 -1377 0
6366 6477 -1379 0
6366 6479 -1381 0
6366 6481 -1383 0
6366 6483 -1385 0
6366 6485 -1387 0
6368 -1325 0
6368 6424 -1327 0
6368 6425 -1329 0
6368 6427 -1331 0
6368 6429 -1333 0
6368 6431 -1335 0
6368 6433 -1337 0
6368 6435 -1339 0
6368 6437 -1341 0
6368 6439 -1343 0
6368 6441 -1345 0
6368 6443 -1347 0
6368 6445 -1349 0
6368 6447 -1351 0
6368 6449 -1353 0
6368 6451 -1355 0
6368 6453 -1357 0
6368 6455 -1359 0
6368 6457 -1361 0
6368 6459 -1363 0
6368 6461 -1365 0
6368 6463 -1367 0
6368 6465 -1369 0
6368 6467 -1371 0
6368 6469 -1373 0
6368 6471 -1375 0
6368 6473 -1377 0
6368 6475 -1379 0
6368 6477 -1381 0
6368 6479 -1383 0
6368 6481 -1385 0
6368 6483 -1387 0
6368 6485 -1389 0
6370 -1327 0
6370 6424 -1329 0
6370 6425 -1331 0
6370 6427 -1333 0
6370 6429 -1335 0
6370 6431 -1337 0
6370 6433 -1339 0
6370 6435 -1341 0
6370 6437 -1343 0
6370 6439 -1345 0
6370 6441 -1347 0
6370 6443 -1349 0
6370 6445 -1351 0
6370 6447 -1353 0
6370 6449 -1355 0
6370 6451 -1357 0
6370 6453 -1359 0
6370 6455 -1361 0
6370 6457 -1363 0
6370 6459 -1365 0
6370 6461 -1367 0
6370 6463 -1369 0
6370 6465 -1371 0
6370 6467 -1373 0
6370 6469 -1375 0
6370 6471 -1377 0
6370 6473 -1379 0
6370 6475 -1381 0
6370 6477 -1383 0
6370 6479 -1385 0
6370 6481 -1387 0
6370 6483 -1389 0
6370 6485 -1391 0
6372 -1329 0
6372 6424 -1331 0
6372 6425 -1333 0
6372 6427 -1335 0
6372 6429 -1337 0
6372 6431 -1339 0
6372 6433 -1341 0
6372 6435 -1343 0
6372 6437 -1345 0
6372 6439 -1347 0
6372 6441 -1349 0
6372 6443 -1351 0
6372 6445 -1353 0
6372 6447 -1355 0
6372 6449 -1357 0
6372 6451 -1359 0
6372 6453 -1361 0
6372 6455 -1363 0
6372 6457 -1365 0
6372 6459 -1367 0
6372 6461 -1369 0
6372 6463 -1371 0
6372 6465 -1373 0
6372 6467 -1375 0
6372 6469 -1377 0
6372 6471 -1379 0
6372 6473 -1381 0
6372 6475 -1383 0
6372 6477 -1385 0
6372 6479 -1387 0
6372 6481 -1389 0
6372 6483 -1391 0
6372 6485 -1393 0
6374 -1331 0
6374 6424 -1333 0
6374 6425 -1335 0
6374 6427 -1337 0
6374 6429 -1339 0
6374 6431 -1341 0
6374 6433 -1343 0
6374 6435 -1345 0
6374 6437 -1347 0
6374 6439 -1349 0
6374 6441 -1351 0
6374 6443 -1353 0
6374 6445 -1355 0
6374 6447 -1357 0
6374 6449 -1359 0
6374 6451 -1361 0
6374 6453 -1363 0
6374 6455 -1365 0
6374 6457 -1367 0
6374 6459 -1369 0
6374 6461 -1371 0
6374 6463 -1373 0
6374 6465 -1375 0
6374 6467 -1377 0
6374 6469 -1379 0
6374 6471 -1381 0
6374 6473 -1383 0
6374 6475 -1385 0
6374 6477 -1387 0
6374 6479 -1389 0
6374 6481 -1391 0
6374 6483 -1393 0
6374 6485 -1395 0
6376 -1333 0
6376 6424 -1335 0
6376 6425 -1337 0
6376 6427 -1339 0
6376 6429 -1341 0
6376 6431 -1343 0
6376 6433 -1345 0
6376 6435 -1347 0
6376 6437 -1349 0
6376 6439 -1351 0
6376 6441 -1353 0
6376 6443 -1355 0
6376 6445 -1357 0
6376 6447 -1359 0
6376 6449 -1361 0
6376 6451 -1363 0
6376 6453 -1365 0
6376 6455 -1367 0
6376 6457 -1369 0
6376 6459 -1371 0
6376 6461 -1373 0
6376 6463 -1375 0
6376 6465 -1377 0
6376 6467 -1379 0
6376 6469 -1381 0
6376 6471 -1383 0
6376 6473 -1385 0
6376 6475 -1387 0
6376 6477 -1389 0
6376 6479 -1391 0
6376 6481 -1393 0
6376 6483 -1395 0
6376 6485 -1397 0
6378 -1335 0
6378 6424 -1337 0
6378 6425 -1339 0
6378 6427 -1341 0
6378 6429 -1343 0
6378 6431 -1345 0
6378 6433 -1347 0
6378 6435 -1349 0
6378 6437 -1351 0
6378 6439 -1353 0
6378 6441 -1355 0
6378 6443 -1357 0
6378 6445 -1359 0
6378 6447 -1361 0
6378 6449 -1363 0
6378 6451 -1365 0
6378 6453 -1367 0
6378 6455 -1369 0
6378 6457 -1371 0
6378 6459 -1373 0
6378 6461 -1375 0
6378 6463 -1377 0
6378 6465 -1379 0
6378 6467 -1381 0
6378 6469 -1383 0
6378 6471 -1385 0
6378 6473 -1387 0
6378 6475 -1389 0
6378 6477 -1391 0
6378 6479 -1393 0
6378 6481 -1395 0
6378 6483 -1397 0
6378 6485 -1399 0
6380 -1337 0
6380 6424 -1339 0
6380 6425 -1341 0
6380 6427 -1343 0
6380 6429 -1345 0
6380 6431 -1347 0
6380 6433 -1349 0
6380 6435 -1351 0
6380 6437 -1353 0
6380 6439 -1355 0
6380 6441 -1357 0
6380 6443 -1359 0
6380 6445 -1361 0
6380 6447 -1363 0
6380 6449 -1365 0
6380 6451 -1367 0
6380 6453 -1369 0
6380 6455 -1371 0
6380 6457 -1373 0
6380 6459 -1375 0
6380 6461 -1377 0
6380 6463 -1379 0
6380 6465 -1381 0
6380 6467 -1383 0
6380 6469 -1385 0
6380 6471 -1387 0
6380 6473 -1389 0
6380 6475 -1391 0
6380 6477 -1393 0
6380 6479 -1395 0
6380 6481 -1397 0
6380 6483 -1399 0
6380 6485 -1401 0
6382 -1339 0
6382 6424 -1341 0
6382 6425 -1343 0
6382 6427 -1345 0
6382 6429 -1347 0
6382 6431 -1349 0
6382 6433 -1351 0
6382 6435 -1353 0
6382 6437 -1355 0
6382 6439 -1357 0
6382 6441 -1359 0
6382 6443 -1361 0
6382 6445 -1363 0
6382 6447 -1365 0
6382 6449 -1367 0
6382 6451 -1369 0
6382 6453 -1371 0
6382 6455 -1373 0
6382 6457 -1375 0
6382 6459 -1377 0
6382 6461 -1379 0
6382 6463 -1381 0
6382 6465 -1383 0
6382 6467 -1385 0
6382 6469 -1387 0
6382 6471 -1389 0
6382 6473 -1391 0
6382 6475 -1393 0
6382 6477 -1395 0
6382 6479 -1397 0
6382 6481 -1399 0
6382 6483 -1401 0
6382 6485 -1403 0
6384 -1341 0
6384 6424 -1343 0
6384 6425 -1345 0
6384 6427 -1347 0
6384 6429 -1349 0
6384 6431 -1351 0
6384 6433 -1353 0
6384 6435 -1355 0
6384 6437 -1357 0
6384 6439 -1359 0
6384 6441 -1361 0
6384 6443 -1363 0
6384 6445 -1365 0
6384 6447 -1367 0
6384 6449 -1369 0
6384 6451 -1371 0
6384 6453 -1373 0
6384 6455 -1375 0
6384 6457 -1377 0
6384 6459 -1379 0
6384 6461 -1381 0
6384 6463 -1383 0
6384 6465 -1385 0
6384 6467 -1387 0
6384 6469 -1389 0
6384 6471 -1391 0
6384 6473 -1393 0
6384 6475 -1395 0
6384 6477 -1397 0
6384 6479 -1399 0
6384 6481 -1401 0
6384 6483 -1403 0
6384 6485 -1405 0
6386 -1343 0
6386 6424 -1345 0
6386 6425 -1347 0
6386 6427 -1349 0
6386 6429 -1351 0
6386 6431 -1353 0
6386 6433 -1355 0
6386 6435 -1357 0
6386 6437 -1359 0
6386 6439 -1361 0
6386 6441 -1363 0
6386 6443 -1365 0
6386 6445 -1367 0
6386 6447 -1369 0
6386 6449 -1371 0
6386 6451 -1373 0
6386 6453 -1375 0
6386 6455 -1377 0
6386 6457 -1379 0
6386 6459 -1381 0
6386 6461 -1383 0
6386 6463 -1385 0
6386 6465 -1387 0
6386 6467 -1389 0
6386 6469 -1391 0
6386 6471 -1393 0
6386 6473 -1395 0
6386 6475 -1397 0
6386 6477 -1399 0
6386 6479 -1401 0
6386 6481 -1403 0
6386 6483 -1405 0
6386 6485 -1407 0
6388 -1345 0
6388 6424 -1347 0
6388 6425 -1349 0
6388 6427 -1351 0
6388 6429 -1353 0
6388 6431 -1355 0
6388 6433 -1357 0
6388 6435 -1359 0
6388 6437 -1361 0
6388 6439 -1363 0
6388 6441 -1365 0
6388 6443 -1367 0
6388 6445 -1369 0
6388 6447 -1371 0
6388 6449 -1373 0
6388 6451 -1375 0
6388 6453 -1377 0
6388 6455 -1379 0
6388 6457 -1381 0
6388 6459 -1383 0
6388 6461 -1385 0
6388 6463 -1387 0
6388 6465 -1389 0
6388 6467 -1391 0
6388 6469 -1393 0
6388 6471 -1395 0
6388 6473 -1397 0
6388 6475 -1399 0
6388 6477 -1401 0
6388 6479 -1403 0
6388 6481 -1405 0
6388 6483 -1407 0
6388 6485 -1409 0
6390 -1347 0
6390 6424 -1349 0
6390 6425 -1351 0
6390 6427 -1353 0
6390 6429 -1355 0
6390 6431 -1357 0
6390 6433 -1359 0
6390 6435 -1361 0
6390 6437 -1363 0
6390 6439 -1365 0
6390 6441 -1367 0
6390 6443 -1369 0
6390 6445 -1371 0
6390 6447 -1373 0
6390 6449 -1375 0
6390 6451 -1377 0
6390 6453 -1379 0
6390 6455 -1381 0
6390 6457 -1383 0
6390 6459 -1385 0
6390 6461 -1387 0
6390 6463 -1389 0
6390 6465 -1391 0
6390 6467 -1393 0
6390 6469 -1395 0
6390 6471 -1397 0
6390 6473 -1399 0
6390 6475 -1401 0
6390 6477 -1403 0
6390 6479 -1405 0
6390 6481 -1407 0
6390 6483 -1409 0
6390 6485 -1411 0
6392 -1349 0
6392 6424 -1351 0
6392 6425 -1353 0
6392 6427 -1355 0
6392 6429 -1357 0
6392 6431 -1359 0
6392 6433 -1361 0
6392 6435 -1363 0
6392 6437 -1365 0
6392 6439 -1367 0
6392 6441 -1369 0
6392 6443 -1371 0
6392 6445 -1373 0
6392 6447 -1375 0
6392 6449 -1377 0
6392 6451 -1379 0
6392 6453 -1381 0
6392 6455 -1383 0
6392 6457 -1385 0
6392 6459 -1387 0
6392 6461 -1389 0
6392 6463 -1391 0
6392 6465 -1393 0
6392 6467 -1395 0
6392 6469 -1397 0
6392 6471 -1399 0
6392 6473 -1401 0
6392 6475 -1403 0
6392 6477 -1405 0
6392 6479 -1407 0
6392 6481 -1409 0
6392 6483 -1411 0
6392 6485 -1413 0
6394 -1351 0
6394 6424 -1353 0
6394 6425 -1355 0
6394 6427 -1357 0
6394 6429 -1359 0
6394 6431 -1361 0
6394 6433 -1363 0
6394 6435 -1365 0
6394 6437 -1367 0
6394 6439 -1369 0
6394 6441 -1371 0
6394 6443 -1373 0
6394 6445 -1375 0
6394 6447 -1377 0
6394 6449 -1379 0
6394 6451 -1381 0
6394 6453 -1383 0
6394 6455 -1385 0
6394 6457 -1387 0
6394 6459 -1389 0
6394 6461 -1391 0
6394 6463 -1393 0
6394 6465 -1395 0
6394 6467 -1397 0
6394 6469 -1399 0
6394 6471 -1401 0
6394 6473 -1403 0
6394 6475 -1405 0
6394 6477 -1407 0
6394 6479 -1409 0
6394 6481 -1411 0
6394 6483 -1413 0
6394 6485 -1415 0
6396 -1353 0
6396 6424 -1355 0
6396 6425 -1357 0
6396 6427 -1359 0
6396 6429 -1361 0
6396 6431 -1363 0
6396 6433 -1365 0
6396 6435 -1367 0
6396 6437 -1369 0
6396 6439 -1371 0
6396 6441 -1373 0
6396 6443 -1375 0
6396 6445 -1377 0
6396 6447 -1379 0
6396 6449 -1381 0
6396 6451 -1383 0
6396 6453 -1385 0
6396 6455 -1387 0
6396 6457 -1389 0
6396 6459 -1391 0
6396 6461 -1393 0
6396 6463 -1395 0
6396 6465 -1397 0
6396 6467 -1399 0
6396 6469 -1401 0
6396 6471 -1403 0
6396 6473 -1405 0
6396 6475 -1407 0
6396 6477 -1409 0
6396 6479 -1411 0
6396 6481 -1413 0
6396 6483 -1415 0
6396 6485 -1417 0
6398 -1355 0
6398 6424 -1357 0
6398 6425 -1359 0
6398 6427 -1361 0
6398 6429 -1363 0
6398 6431 -1365 0
6398 6433 -1367 0
6398 6435 -1369 0
6398 6437 -1371 0
6398 6439 -1373 0
6398 6441 -1375 0
6398 6443 -1377 0
6398 6445 -1379 0
6398 6447 -1381 0
6398 6449 -1383 0
6398 6451 -1385 0
6398 6453 -1387 0
6398 6455 -1389 0
6398 6457 -1391 0
6398 6459 -1393 0
6398 6461 -1395 0
6398 6463 -1397 0
6398 6465 -1399 0
6398 6467 -1401 0
6398 6469 -1403 0
6398 6471 -1405 0
6398 6473 -1407 0
6398 6475 -1409 0
6398 6477 -1411 0
6398 6479 -1413 0
6398 6481 -1415 0
6398 6483 -1417 0
6398 6485 -1419 0
6400 -1357 0
6400 6424 -1359 0
6400 6425 -1361 0
6400 6427 -1363 0
6400 6429 -1365 0
6400 6431 -1367 0
6400 6433 -1369 0
6400 6435 -1371 0
6400 6437 -1373 0
6400 6439 -1375 0
6400 6441 -1377 0
6400 6443 -1379 0
6400 6445 -1381 0
6400 6447 -1383 0
6400 6449 -1385 0
6400 6451 -1387 0
6400 6453 -1389 0
6400 6455 -1391 0
6400 6457 -1393 0
6400 6459 -1395 0
6400 6461 -1397 0
6400 6463 -1399 0
6400 6465 -1401 0
6400 6467 -1403 0
6400 6469 -1405 0
6400 6471 -1407 0
6400 6473 -1409 0
6400 6475 -1411 0
6400 6477 -1413 0
6400 6479 -1415 0
6400 6481 -1417 0
6400 6483 -1419 0
6400 6485 -1421 0
6402 -1359 0
6402 6424 -1361 0
6402 6425 -1363 0
6402 6427 -1365 0
6402 6429 -1367 0
6402 6431 -1369 0
6402 6433 -1371 0
6402 6435 -1373 0
6402 6437 -1375 0
6402 6439 -1377 0
6402 6441 -1379 0
6402 6443 -1381 0
6402 6445 -1383 0
6402 6447 -1385 0
6402 6449 -1387 0
6402 6451 -1389 0
6402 6453 -1391 0
6402 6455 -1393 0
6402 6457 -1395 0
6402 6459 -1397 0
6402 6461 -1399 0
6402 6463 -1401 0
6402 6465 -1403 0
6402 6467 -1405 0
6402 6469 -1407 0
6402 6471 -1409 0
6402 6473 -1411 0
6402 6475 -1413 0
6402 6477 -1415 0
6402 6479 -1417 0
6402 6481 -1419 0
6402 6483 -1421 0
6402 6485 -1423 0
6404 -1361 0
6404 6424 -1363 0
6404 6425 -1365 0
6404 6427 -1367 0
6404 6429 -1369 0
6404 6431 -1371 0
6404 6433 -1373 0
6404 6435 -1375 0
6404 6437 -1377 0
6404 6439 -1379 0
6404 6441 -1381 0
6404 6443 -1383 0
6404 6445 -1385 0
6404 6447 -1387 0
6404 6449 -1389 0
6404 6451 -1391 0
6404 6453 -1393 0
6404 6455 -1395 0
6404 6457 -1397 0
6404 6459 -1399 0
6404 6461 -1401 0
6404 6463 -1403 0
6404 6465 -1405 0
6404 6467 -1407 0
6404 6469 -1409 0
6404 6471 -1411 0
6404 6473 -1413 0
6404 6475 -1415 0
6404 6477 -1417 0
6404 6479 -1419 0
6404 6481 -1421 0
6404 6483 -1423 0
6404 6485 -1425 0
6406 -1363 0
6406 6424 -1365 0
6406 6425 -1367 0
6406 6427 -1369 0
6406 6429 -1371 0
6406 6431 -1373 0
6406 6433 -1375 0
6406 6435 -1377 0
6406 6437 -1379 0
6406 6439 -1381 0
6406 6441 -1383 0
6406 6443 -1385 0
6406 6445 -1387 0
6406 6447 -1389 0
6406 6449 -1391 0
6406 6451 -1393 0
6406 6453 -1395 0
6406 6455 -1397 0
6406 6457 -1399 0
6406 6459 -1401 0
6406 6461 -1403 0
6406 6463 -1405 0
6406 6465 -1407 0
6406 6467 -1409 0
6406 6469 -1411 0
6406 6471 -1413 0
6406 6473 -1415 0
6406 6475 -1417 0
6406 6477 -1419 0
6406 6479 -1421 0
6406 6481 -1423 0
6406 6483 -1425 0
6406 6485 -1427 0
6408 -1365 0
6408 6424 -1367 0
6408 6425 -1369 0
6408 6427 -1371 0
6408 6429 -1373 0
6408 6431 -1375 0
6408 6433 -1377 0
6408 6435 -1379 0
6408 6437 -1381 0
6408 6439 -1383 0
6408 6441 -1385 0
6408 6443 -1387 0
6408 6445 -1389 0
6408 6447 -1391 0
6408 6449 -1393 0
6408 6451 -1395 0
6408 6453 -1397 0
6408 6455 -1399 0
6408 6457 -1401 0
6408 6459 -1403 0
6408 6461 -1405 0
6408 6463 -1407 0
6408 6465 -1409 0
6408 6467 -1411 0
6408 6469 -1413 0
6408 6471 -1415 0
6408 6473 -1417 0
6408 6475 -1419 0
6408 6477 -1421 0
6408 6479 -1423 0
6408 6481 -1425 0
6408 6483 -1427 0
6408 6485 -1429 0
6410 -1367 0
6410 6424 -1369 0
6410 6425 -1371 0
6410 6427 -1373 0
6410 6429 -1375 0
6410 6431 -1377 0
6410 6433 -1379 0
6410 6435 -1381 0
6410 6437 -1383 0
6410 6439 -1385 0
6410 6441 -1387 0
6410 6443 -1389 0
6410 6445 -1391 0
6410 6447 -1393 0
6410 6449 -1395 0
6410 6451 -1397 0
6410 6453 -1399 0
6410 6455 -1401 0
6410 6457 -1403 0
6410 6459 -1405 0
6410 6461 -1407 0
6410 6463 -1409 0
6410 6465 -1411 0
6410 6467 -1413 0
6410 6469 -1415 0
6410 6471 -1417 0
6410 6473 -1419 0
6410 6475 -1421 0
6410 6477 -1423 0
6410 6479 -1425 0
6410 6481 -1427 0
6410 6483 -1429 0
6410 6485 -1431 0
6412 -1369 0
6412 6424 -1371 0
6412 6425 -1373 0
6412 6427 -1375 0
6412 6429 -1377 0
6412 6431 -1379 0
6412 6433 -1381 0
6412 6435 -1383 0
6412 6437 -1385 0
6412 6439 -1387 0
6412 6441 -1389 0
6412 6443 -1391 0
6412 6445 -1393 0
6412 6447 -1395 0
6412 6449 -1397 0
6412 6451 -1399 0
6412 6453 -1401 0
6412 6455 -1403 0
6412 6457 -1405 0
6412 6459 -1407 0
6412 6461 -1409 0
6412 6463 -1411 0
6412 6465 -1413 0
6412 6467 -1415 0
6412 6469 -1417 0
6412 6471 -1419 0
6412 6473 -1421 0
6412 6475 -1423 0
6412 6477 -1425 0
6412 6479 -1427 0
6412 6481 -1429 0
6412 6483 -1431 0
6412 6485 -1433 0
6414 -1371 0
6414 6424 -1373 0
6414 6425 -1375 0
6414 6427 -1377 0
6414 6429 -1379 0
6414 6431 -1381 0
6414 6433 -1383 0
6414 6435 -1385 0
6414 6437 -1387 0
6414 6439 -1389 0
6414 6441 -1391 0
6414 6443 -1393 0
6414 6445 -1395 0
6414 6447 -1397 0
6414 6449 -1399 0
6414 6451 -1401 0
6414 6453 -1403 0
6414 6455 -1405 0
6414 6457 -1407 0
6414 6459 -1409 0
6414 6461 -1411 0
6414 6463 -1413 0
6414 6465 -1415 0
6414 6467 -1417 0
6414 6469 -1419 0
6414 6471 -1421 0
6414 6473 -1423 0
6414 6475 -1425 0
6414 6477 -1427 0
6414 6479 -1429 0
6414 6481 -1431 0
6414 6483 -1433 0
6414 6485 -1435 0
6416 -1373 0
6416 6424 -1375 0
6416 6425 -1377 0
6416 6427 -1379 0
6416 6429 -1381 0
6416 6431 -1383 0
6416 6433 -1385 0
6416 6435 -1387 0
6416 6437 -1389 0
6416 6439 -1391 0
6416 6441 -1393 0
6416 6443 -1395 0
6416 6445 -1397 0
6416 6447 -1399 0
6416 6449 -1401 0
6416 6451 -1403 0
6416 6453 -1405 0
6416 6455 -1407 0
6416 6457 -1409 0
6416 6459 -1411 0
6416 6461 -1413 0
6416 6463 -1415 0
6416 6465 -1417 0
6416 6467 -1419 0
6416 6469 -1421 0
6416 6471 -1423 0
6416 6473 -1425 0
6416 6475 -1427 0
6416 6477 -1429 0
6416 6479 -1431 0
6416 6481 -1433 0
6416 6483 -1435 0
6416 6485 -1437 0
6418 -1375 0
6418 6424 -1377 0
6418 6425 -1379 0
6418 6427 -1381 0
6418 6429 -1383 0
6418 6431 -1385 0
6418 6433 -1387 0
6418 6435 -1389 0
6418 6437 -1391 0
6418 6439 -1393 0
6418 6441 -1395 0
6418 6443 -1397 0
6418 6445 -1399 0
6418 6447 -1401 0
6418 6449 -1403 0
6418 6451 -1405 0
6418 6453 -1407 0
6418 6455 -1409 0
6418 6457 -1411 0
6418 6459 -1413 0
6418 6461 -1415 0
6418 6463 -1417 0
6418 6465 -1419 0
6418 6467 -1421 0
6418 6469 -1423 0
6418 6471 -1425 0
6418 6473 -1427 0
6418 6475 -1429 0
6418 6477 -1431 0
6418 6479 -1433 0
6418 6481 -1435 0
6418 6483 -1437 0
6418 6485 -1439 0
6420 -1377 0
6420 6424 -1379 0
6420 6425 -1381 0
6420 6427 -1383 0
6420 6429 -1385 0
6420 6431 -1387 0
6420 6433 -1389 0
6420 6435 -1391 0
6420 6437 -1393 0
6420 6439 -1395 0
6420 6441 -1397 0
6420 6443 -1399 0
6420 6445 -1401 0
6420 6447 -1403 0
6420 6449 -1405 0
6420 6451 -1407 0
6420 6453 -1409 0
6420 6455 -1411 0
6420 6457 -1413 0
6420 6459 -1415 0
6420 6461 -1417 0
6420 6463 -1419 0
6420 6465 -1421 0
6420 6467 -1423 0
6420 6469 -1425 0
6420 6471 -1427 0
6420 6473 -1429 0
6420 6475 -1431 0
6420 6477 -1433 0
6420 6479 -1435 0
6420 6481 -1437 0
6420 6483 -1439 0
6420 6485 -1441 0
6422 -1379 0
6422 6424 -1381 0
6422 6425 -1383 0
6422 6427 -1385 0
6422 6429 -1387 0
6422 6431 -1389 0
6422 6433 -1391 0
6422 6435 -1393 0
6422 6437 -1395 0
6422 6439 -1397 0
6422 6441 -1399 0
6422 6443 -1401 0
6422 6445 -1403 0
6422 6447 -1405 0
6422 6449 -1407 0
6422 6451 -1409 0
6422 6453 -1411 0
6422 6455 -1413 0
6422 6457 -1415 0
6422 6459 -1417 0
6422 6461 -1419 0
6422 6463 -1421 0
6422 6465 -1423 0
6422 6467 -1425 0
6422 6469 -1427 0
6422 6471 -1429 0
6422 6473 -1431 0
6422 6475 -1433 0
6422 6477 -1435 0
6422 6479 -1437 0
6422 6481 -1439 0
6422 6483 -1441 0
6422 6485 -1443 0
c (64<=(aux1250 + aux1251 - shift(num_occupied_by_types_00000, -64)))
-6485 1443 0
-6483 1441 0
-6481 1439 0
-6479 1437 0
-6477 1435 0
-6475 1433 0
-6473 1431 0
-6471 1429 0
-6469 1427 0
-6467 1425 0
-6465 1423 0
-6463 1421 0
-6461 1419 0
-6459 1417 0
-6457 1415 0
-6455 1413 0
-6453 1411 0
-6451 1409 0
-6449 1407 0
-6447 1405 0
-6445 1403 0
-6443 1401 0
-6441 1399 0
-6439 1397 0
-6437 1395 0
-6435 1393 0
-6433 1391 0
-6431 1389 0
-6429 1387 0
-6427 1385 0
-6425 1383 0
-6424 1381 0
-6422 1443 0
-6422 -6485 1441 0
-6422 -6483 1439 0
-6422 -6481 1437 0
-6422 -6479 1435 0
-6422 -6477 1433 0
-6422 -6475 1431 0
-6422 -6473 1429 0
-6422 -6471 1427 0
-6422 -6469 1425 0
-6422 -6467 1423 0
-6422 -6465 1421 0
-6422 -6463 1419 0
-6422 -6461 1417 0
-6422 -6459 1415 0
-6422 -6457 1413 0
-6422 -6455 1411 0
-6422 -6453 1409 0
-6422 -6451 1407 0
-6422 -6449 1405 0
-6422 -6447 1403 0
-6422 -6445 1401 0
-6422 -6443 1399 0
-6422 -6441 1397 0
-6422 -6439 1395 0
-6422 -6437 1393 0
-6422 -6435 1391 0
-6422 -6433 1389 0
-6422 -6431 1387 0
-6422 -6429 1385 0
-6422 -6427 1383 0
-6422 -6425 1381 0
-6422 -6424 1379 0
-6420 1441 0
-6420 -6485 1439 0
-6420 -6483 1437 0
-6420 -6481 1435 0
-6420 -6479 1433 0
-6420 -6477 1431 0
-6420 -6475 1429 0
-6420 -6473 1427 0
-6420 -6471 1425 0
-6420 -6469 1423 0
-6420 -6467 1421 0
-6420 -6465 1419 0
-6420 -6463 1417 0
-6420 -6461 1415 0
-6420 -6459 1413 0
-6420 -6457 1411 0
-6420 -6455 1409 0
-6420 -6453 1407 0
-6420 -6451 1405 0
-6420 -6449 1403 0
-6420 -6447 1401 0
-6420 -6445 1399 0
-6420 -6443 1397 0
-6420 -6441 1395 0
-6420 -6439 1393 0
-6420 -6437 1391 0
-6420 -6435 1389 0
-6420 -6433 1387 0
-6420 -6431 1385 0
-6420 -6429 1383 0
-6420 -6427 1381 0
-6420 -6425 1379 0
-6420 -6424 1377 0
-6418 1439 0
-6418 -6485 1437 0
-6418 -6483 1435 0
-6418 -6481 1433 0
-6418 -6479 1431 0
-6418 -6477 1429 0
-6418 -6475 1427 0
-6418 -6473 1425 0
-6418 -6471 1423 0
-6418 -6469 1421 0
-6418 -6467 1419 0
-6418 -6465 1417 0
-6418 -6463 1415 0
-6418 -6461 1413 0
-6418 -6459 1411 0
-6418 -6457 1409 0
-6418 -6455 1407 0
-6418 -6453 1405 0
-6418 -6451 1403 0
-6418 -6449 1401 0
-6418 -6447 1399 0
-6418 -6445 1397 0
-6418 -6443 1395 0
-6418 -6441 1393 0
-6418 -6439 1391 0
-6418 -6437 1389 0
-6418 -6435 1387 0
-6418 -6433 1385 0
-6418 -6431 1383 0
-6418 -6429 1381 0
-6418 -6427 1379 0
-6418 -6425 1377 0
-6418 -6424 1375 0
-6416 1437 0
-6416 -6485 1435 0
-6416 -6483 1433 0
-6416 -6481 1431 0
-6416 -6479 1429 0
-6416 -6477 1427 0
-6416 -6475 1425 0
-6416 -6473 1423 0
-6416 -6471 1421 0
-6416 -6469 1419 0
-6416 -6467 1417 0
-6416 -6465 1415 0
-6416 -6463 1413 0
-6416 -6461 1411 0
-6416 -6459 1409 0
-6416 -6457 1407 0
-6416 -6455 1405 0
-6416 -6453 1403 0
-6416 -6451 1401 0
-6416 -6449 1399 0
-6416 -6447 1397 0
-6416 -6445 1395 0
-6416 -6443 1393 0
-6416 -6441 1391 0
-6416 -6439 1389 0
-6416 -6437 1387 0
-6416 -6435 1385 0
-6416 -6433 1383 0
-6416 -6431 1381 0
-6416 -6429 1379 0
-6416 -6427 1377 0
-6416 -6425 1375 0
-6416 -6424 1373 0
-6414 1435 0
-6414 -6485 1433 0
-6414 -6483 1431 0
-6414 -6481 1429 0
-6414 -6479 1427 0
-6414 -6477 1425 0
-6414 -6475 1423 0
-6414 -6473 1421 0
-6414 -6471 1419 0
-6414 -6469 1417 0
-6414 -6467 1415 0
-6414 -6465 1413 0
-6414 -6463 1411 0
-6414 -6461 1409 0
-6414 -6459 1407 0
-6414 -6457 1405 0
-6414 -6455 1403 0
-6414 -6453 1401 0
-6414 -6451 1399 0
-6414 -6449 1397 0
-6414 -6447 1395 0
-6414 -6445 1393 0
-6414 -6443 1391 0
-6414 -6441 1389 0
-6414 -6439 1387 0
-6414 -6437 1385 0
-6414 -6435 1383 0
-6414 -6433 1381 0
-6414 -6431 1379 0
-6414 -6429 1377 0
-6414 -6427 1375 0
-6414 -6425 1373 0
-6414 -6424 1371 0
-6412 1433 0
-6412 -6485 1431 0
-6412 -6483 1429 0
-6412 -6481 1427 0
-6412 -6479 1425 0
-6412 -6477 1423 0
-6412 -6475 1421 0
-6412 -6473 1419 0
-6412 -6471 1417 0
-6412 -6469 1415 0
-6412 -6467 1413 0
-6412 -6465 1411 0
-6412 -6463 1409 0
-6412 -6461 1407 0
-6412 -6459 1405 0
-6412 -6457 1403 0
-6412 -6455 1401 0
-6412 -6453 1399 0
-6412 -6451 1397 0
-6412 -6449 1395 0
-6412 -6447 1393 0
-6412 -6445 1391 0
-6412 -6443 1389 0
-6412 -6441 1387 0
-6412 -6439 1385 0
-6412 -6437 1383 0
-6412 -6435 1381 0
-6412 -6433 1379 0
-6412 -6431 1377 0
-6412 -6429 1375 0
-6412 -6427 1373 0
-6412 -6425 1371 0
-6412 -6424 1369 0
-6410 1431 0
-6410 -6485 1429 0
-6410 -6483 1427 0
-6410 -6481 1425 0
-6410 -6479 1423 0
-6410 -6477 1421 0
-6410 -6475 1419 0
-6410 -6473 1417 0
-6410 -6471 1415 0
-6410 -6469 1413 0
-6410 -6467 1411 0
-6410 -6465 1409 0
-6410 -6463 1407 0
-6410 -6461 1405 0
-6410 -6459 1403 0
-6410 -6457 1401 0
-6410 -6455 1399 0
-6410 -6453 1397 0
-6410 -6451 1395 0
-6410 -6449 1393 0
-6410 -6447 1391 0
-6410 -6445 1389 0
-6410 -6443 1387 0
-6410 -6441 1385 0
-6410 -6439 1383 0
-6410 -6437 1381 0
-6410 -6435 1379 0
-6410 -6433 1377 0
-6410 -6431 1375 0
-6410 -6429 1373 0
-6410 -6427 1371 0
-6410 -6425 1369 0
-6410 -6424 1367 0
-6408 1429 0
-6408 -6485 1427 0
-6408 -6483 1425 0
-6408 -6481 1423 0
-6408 -6479 1421 0
-6408 -6477 1419 0
-6408 -6475 1417 0
-6408 -6473 1415 0
-6408 -6471 1413 0
-6408 -6469 1411 0
-6408 -6467 1409 0
-6408 -6465 1407 0
-6408 -6463 1405 0
-6408 -6461 1403 0
-6408 -6459 1401 0
-6408 -6457 1399 0
-6408 -6455 1397 0
-6408 -6453 1395 0
-6408 -6451 1393 0
-6408 -6449 1391 0
-6408 -6447 1389 0
-6408 -6445 1387 0
-6408 -6443 1385 0
-6408 -6441 1383 0
-6408 -6439 1381 0
-6408 -6437 1379 0
-6408 -6435 1377 0
-6408 -6433 1375 0
-6408 -6431 1373 0
-6408 -6429 1371 0
-6408 -6427 1369 0
-6408 -6425 1367 0
-6408 -6424 1365 0
-6406 1427 0
-6406 -6485 1425 0
-6406 -6483 1423 0
-6406 -6481 1421 0
-6406 -6479 1419 0
-6406 -6477 1417 0
-6406 -6475 1415 0
-6406 -6473 1413 0
-6406 -6471 1411 0
-6406 -6469 1409 0
-6406 -6467 1407 0
-6406 -6465 1405 0
-6406 -6463 1403 0
-6406 -6461 1401 0
-6406 -6459 1399 0
-6406 -6457 1397 0
-6406 -6455 1395 0
-6406 -6453 1393 0
-6406 -6451 1391 0
-6406 -6449 1389 0
-6406 -6447 1387 0
-6406 -6445 1385 0
-6406 -6443 1383 0
-6406 -6441 1381 0
-6406 -6439 1379 0
-6406 -6437 1377 0
-6406 -6435 1375 0
-6406 -6433 1373 0
-6406 -6431 1371 0
-6406 -6429 1369 0
-6406 -6427 1367 0
-6406 -6425 1365 0
-6406 -6424 1363 0
-6404 1425 0
-6404 -6485 1423 0
-6404 -6483 1421 0
-6404 -6481 1419 0
-6404 -6479 1417 0
-6404 -6477 1415 0
-6404 -6475 1413 0
-6404 -6473 1411 0
-6404 -6471 1409 0
-6404 -6469 1407 0
-6404 -6467 1405 0
-6404 -6465 1403 0
-6404 -6463 1401 0
-6404 -6461 1399 0
-6404 -6459 1397 0
-6404 -6457 1395 0
-6404 -6455 1393 0
-6404 -6453 1391 0
-6404 -6451 1389 0
-6404 -6449 1387 0
-6404 -6447 1385 0
-6404 -6445 1383 0
-6404 -6443 1381 0
-6404 -6441 1379 0
-6404 -6439 1377 0
-6404 -6437 1375 0
-6404 -6435 1373 0
-6404 -6433 1371 0
-6404 -6431 1369 0
-6404 -6429 1367 0
-6404 -6427 1365 0
-6404 -6425 1363 0
-6404 -6424 1361 0
-6402 1423 0
-6402 -6485 1421 0
-6402 -6483 1419 0
-6402 -6481 1417 0
-6402 -6479 1415 0
-6402 -6477 1413 0
-6402 -6475 1411 0
-6402 -6473 1409 0
-6402 -6471 1407 0
-6402 -6469 1405 0
-6402 -6467 1403 0
-6402 -6465 1401 0
-6402 -6463 1399 0
-6402 -6461 1397 0
-6402 -6459 1395 0
-6402 -6457 1393 0
-6402 -6455 1391 0
-6402 -6453 1389 0
-6402 -6451 1387 0
-6402 -6449 1385 0
-6402 -6447 1383 0
-6402 -6445 1381 0
-6402 -6443 1379 0
-6402 -6441 1377 0
-6402 -6439 1375 0
-6402 -6437 1373 0
-6402 -6435 1371 0
-6402 -6433 1369 0
-6402 -6431 1367 0
-6402 -6429 1365 0
-6402 -6427 1363 0
-6402 -6425 1361 0
-6402 -6424 1359 0
-6400 1421 0
-6400 -6485 1419 0
-6400 -6483 1417 0
-6400 -6481 1415 0
-6400 -6479 1413 0
-6400 -6477 1411 0
-6400 -6475 1409 0
-6400 -6473 1407 0
-6400 -6471 1405 0
-6400 -6469 1403 0
-6400 -6467 1401 0
-6400 -6465 1399 0
-6400 -6463 1397 0
-6400 -6461 1395 0
-6400 -6459 1393 0
-6400 -6457 1391 0
-6400 -6455 1389 0
-6400 -6453 1387 0
-6400 -6451 1385 0
-6400 -6449 1383 0
-6400 -6447 1381 0
-6400 -6445 1379 0
-6400 -6443 1377 0
-6400 -6441 1375 0
-6400 -6439 1373 0
-6400 -6437 1371 0
-6400 -6435 1369 0
-6400 -6433 1367 0
-6400 -6431 1365 0
-6400 -6429 1363 0
-6400 -6427 1361 0
-6400 -6425 1359 0
-6400 -6424 1357 0
-6398 1419 0
-6398 -6485 1417 0
-6398 -6483 1415 0
-6398 -6481 1413 0
-6398 -6479 1411 0
-6398 -6477 1409 0
-6398 -6475 1407 0
-6398 -6473 1405 0
-6398 -6471 1403 0
-6398 -6469 1401 0
-6398 -6467 1399 0
-6398 -6465 1397 0
-6398 -6463 1395 0
-6398 -6461 1393 0
-6398 -6459 1391 0
-6398 -6457 1389 0
-6398 -6455 1387 0
-6398 -6453 1385 0
-6398 -6451 1383 0
-6398 -6449 1381 0
-6398 -6447 1379 0
-6398 -6445 1377 0
-6398 -6443 1375 0
-6398 -6441 1373 0
-6398 -6439 1371 0
-6398 -6437 1369 0
-6398 -6435 1367 0
-6398 -6433 1365 0
-6398 -6431 1363 0
-6398 -6429 1361 0
-6398 -6427 1359 0
-6398 -6425 1357 0
-6398 -6424 1355 0
-6396 1417 0
-6396 -6485 1415 0
-6396 -6483 1413 0
-6396 -6481 1411 0
-6396 -6479 1409 0
-6396 -6477 1407 0
-6396 -6475 1405 0
-6396 -6473 1403 0
-6396 -6471 1401 0
-6396 -6469 1399 0
-6396 -6467 1397 0
-6396 -6465 1395 0
-6396 -6463 1393 0
-6396 -6461 1391 0
-6396 -6459 1389 0
-6396 -6457 1387 0
-6396 -6455 1385 0
-6396 -6453 1383 0
-6396 -6451 1381 0
-6396 -6449 1379 0
-6396 -6447 1377 0
-6396 -6445 1375 0
-6396 -6443 1373 0
-6396 -6441 1371 0
-6396 -6439 1369 0
-6396 -6437 1367 0
-6396 -6435 1365 0
-6396 -6433 1363 0
-6396 -6431 1361 0
-6396 -6429 1359 0
-6396 -6427 1357 0
-6396 -6425 1355 0
-6396 -6424 1353 0
-6394 1415 0
-6394 -6485 1413 0
-6394 -6483 1411 0
-6394 -6481 1409 0
-6394 -6479 1407 0
-6394 -6477 1405 0
-6394 -6475 1403 0
-6394 -6473 1401 0
-6394 -6471 1399 0
-6394 -6469 1397 0
-6394 -6467 1395 0
-6394 -6465 1393 0
-6394 -6463 1391 0
-6394 -6461 1389 0
-6394 -6459 1387 0
-6394 -6457 1385 0
-6394 -6455 1383 0
-6394 -6453 1381 0
-6394 -6451 1379 0
-6394 -6449 1377 0
-6394 -6447 1375 0
-6394 -6445 1373 0
-6394 -6443 1371 0
-6394 -6441 1369 0
-6394 -6439 1367 0
-6394 -6437 1365 0
-6394 -6435 1363 0
-6394 -6433 1361 0
-6394 -6431 1359 0
-6394 -6429 1357 0
-6394 -6427 1355 0
-6394 -6425 1353 0
-6394 -6424 1351 0
-6392 1413 0
-6392 -6485 1411 0
-6392 -6483 1409 0
-6392 -6481 1407 0
-6392 -6479 1405 0
-6392 -6477 1403 0
-6392 -6475 1401 0
-6392 -6473 1399 0
-6392 -6471 1397 0
-6392 -6469 1395 0
-6392 -6467 1393 0
-6392 -6465 1391 0
-6392 -6463 1389 0
-6392 -6461 1387 0
-6392 -6459 1385 0
-6392 -6457 1383 0
-6392 -6455 1381 0
-6392 -6453 1379 0
-6392 -6451 1377 0
-6392 -6449 1375 0
-6392 -6447 1373 0
-6392 -6445 1371 0
-6392 -6443 1369 0
-6392 -6441 1367 0
-6392 -6439 1365 0
-6392 -6437 1363 0
-6392 -6435 1361 0
-6392 -6433 1359 0
-6392 -6431 1357 0
-6392 -6429 1355 0
-6392 -6427 1353 0
-6392 -6425 1351 0
-6392 -6424 1349 0
-6390 1411 0
-6390 -6485 1409 0
-6390 -6483 1407 0
-6390 -6481 1405 0
-6390 -6479 1403 0
-6390 -6477 1401 0
-6390 -6475 1399 0
-6390 -6473 1397 0
-6390 -6471 1395 0
-6390 -6469 1393 0
-6390 -6467 1391 0
-6390 -6465 1389 0
-6390 -6463 1387 0
-6390 -6461 1385 0
-6390 -6459 1383 0
-6390 -6457 1381 0
-6390 -6455 1379 0
-6390 -6453 1377 0
-6390 -6451 1375 0
-6390 -6449 1373 0
-6390 -6447 1371 0
-6390 -6445 1369 0
-6390 -6443 1367 0
-6390 -6441 1365 0
-6390 -6439 1363 0
-6390 -6437 1361 0
-6390 -6435 1359 0
-6390 -6433 1357 0
-6390 -6431 1355 0
-6390 -6429 1353 0
-6390 -6427 1351 0
-6390 -6425 1349 0
-6390 -6424 1347 0
-6388 1409 0
-6388 -6485 1407 0
-6388 -6483 1405 0
-6388 -6481 1403 0
-6388 -6479 1401 0
-6388 -6477 1399 0
-6388 -6475 1397 0
-6388 -6473 1395 0
-6388 -6471 1393 0
-6388 -6469 1391 0
-6388 -6467 1389 0
-6388 -6465 1387 0
-6388 -6463 1385 0
-6388 -6461 1383 0
-6388 -6459 1381 0
-6388 -6457 1379 0
-6388 -6455 1377 0
-6388 -6453 1375 0
-6388 -6451 1373 0
-6388 -6449 1371 0
-6388 -6447 1369 0
-6388 -6445 1367 0
-6388 -6443 1365 0
-6388 -6441 1363 0
-6388 -6439 1361 0
-6388 -6437 1359 0
-6388 -6435 1357 0
-6388 -6433 1355 0
-6388 -6431 1353 0
-6388 -6429 1351 0
-6388 -6427 1349 0
-6388 -6425 1347 0
-6388 -6424 1345 0
-6386 1407 0
-6386 -6485 1405 0
-6386 -6483 1403 0
-6386 -6481 1401 0
-6386 -6479 1399 0
-6386 -6477 1397 0
-6386 -6475 1395 0
-6386 -6473 1393 0
-6386 -6471 1391 0
-6386 -6469 1389 0
-6386 -6467 1387 0
-6386 -6465 1385 0
-6386 -6463 1383 0
-6386 -6461 1381 0
-6386 -6459 1379 0
-6386 -6457 1377 0
-6386 -6455 1375 0
-6386 -6453 1373 0
-6386 -6451 1371 0
-6386 -6449 1369 0
-6386 -6447 1367 0
-6386 -6445 1365 0
-6386 -6443 1363 0
-6386 -6441 1361 0
-6386 -6439 1359 0
-6386 -6437 1357 0
-6386 -6435 1355 0
-6386 -6433 1353 0
-6386 -6431 1351 0
-6386 -6429 1349 0
-6386 -6427 1347 0
-6386 -6425 1345 0
-6386 -6424 1343 0
-6384 1405 0
-6384 -6485 1403 0
-6384 -6483 1401 0
-6384 -6481 1399 0
-6384 -6479 1397 0
-6384 -6477 1395 0
-6384 -6475 1393 0
-6384 -6473 1391 0
-6384 -6471 1389 0
-6384 -6469 1387 0
-6384 -6467 1385 0
-6384 -6465 1383 0
-6384 -6463 1381 0
-6384 -6461 1379 0
-6384 -6459 1377 0
-6384 -6457 1375 0
-6384 -6455 1373 0
-6384 -6453 1371 0
-6384 -6451 1369 0
-6384 -6449 1367 0
-6384 -6447 1365 0
-6384 -6445 1363 0
-6384 -6443 1361 0
-6384 -6441 1359 0
-6384 -6439 1357 0
-6384 -6437 1355 0
-6384 -6435 1353 0
-6384 -6433 1351 0
-6384 -6431 1349 0
-6384 -6429 1347 0
-6384 -6427 1345 0
-6384 -6425 1343 0
-6384 -6424 1341 0
-6382 1403 0
-6382 -6485 1401 0
-6382 -6483 1399 0
-6382 -6481 1397 0
-6382 -6479 1395 0
-6382 -6477 1393 0
-6382 -6475 1391 0
-6382 -6473 1389 0
-6382 -6471 1387 0
-6382 -6469 1385 0
-6382 -6467 1383 0
-6382 -6465 1381 0
-6382 -6463 1379 0
-6382 -6461 1377 0
-6382 -6459 1375 0
-6382 -6457 1373 0
-6382 -6455 1371 0
-6382 -6453 1369 0
-6382 -6451 1367 0
-6382 -6449 1365 0
-6382 -6447 1363 0
-6382 -6445 1361 0
-6382 -6443 1359 0
-6382 -6441 1357 0
-6382 -6439 1355 0
-6382 -6437 1353 0
-6382 -6435 1351 0
-6382 -6433 1349 0
-6382 -6431 1347 0
-6382 -6429 1345 0
-6382 -6427 1343 0
-6382 -6425 1341 0
-6382 -6424 1339 0
-6380 1401 0
-6380 -6485 1399 0
-6380 -6483 1397 0
-6380 -6481 1395 0
-6380 -6479 1393 0
-6380 -6477 1391 0
-6380 -6475 1389 0
-6380 -6473 1387 0
-6380 -6471 1385 0
-6380 -6469 1383 0
-6380 -6467 1381 0
-6380 -6465 1379 0
-6380 -6463 1377 0
-6380 -6461 1375 0
-6380 -6459 1373 0
-6380 -6457 1371 0
-6380 -6455 1369 0
-6380 -6453 1367 0
-6380 -6451 1365 0
-6380 -6449 1363 0
-6380 -6447 1361 0
-6380 -6445 1359 0
-6380 -6443 1357 0
-6380 -6441 1355 0
-6380 -6439 1353 0
-6380 -6437 1351 0
-6380 -6435 1349 0
-6380 -6433 1347 0
-6380 -6431 1345 0
-6380 -6429 1343 0
-6380 -6427 1341 0
-6380 -6425 1339 0
-6380 -6424 1337 0
-6378 1399 0
-6378 -6485 1397 0
-6378 -6483 1395 0
-6378 -6481 1393 0
-6378 -6479 1391 0
-6378 -6477 1389 0
-6378 -6475 1387 0
-6378 -6473 1385 0
-6378 -6471 1383 0
-6378 -6469 1381 0
-6378 -6467 1379 0
-6378 -6465 1377 0
-6378 -6463 1375 0
-6378 -6461 1373 0
-6378 -6459 1371 0
-6378 -6457 1369 0
-6378 -6455 1367 0
-6378 -6453 1365 0
-6378 -6451 1363 0
-6378 -6449 1361 0
-6378 -6447 1359 0
-6378 -6445 1357 0
-6378 -6443 1355 0
-6378 -6441 1353 0
-6378 -6439 1351 0
-6378 -6437 1349 0
-6378 -6435 1347 0
-6378 -6433 1345 0
-6378 -6431 1343 0
-6378 -6429 1341 0
-6378 -6427 1339 0
-6378 -6425 1337 0
-6378 -6424 1335 0
-6376 1397 0
-6376 -6485 1395 0
-6376 -6483 1393 0
-6376 -6481 1391 0
-6376 -6479 1389 0
-6376 -6477 1387 0
-6376 -6475 1385 0
-6376 -6473 1383 0
-6376 -6471 1381 0
-6376 -6469 1379 0
-6376 -6467 1377 0
-6376 -6465 1375 0
-6376 -6463 1373 0
-6376 -6461 1371 0
-6376 -6459 1369 0
-6376 -6457 1367 0
-6376 -6455 1365 0
-6376 -6453 1363 0
-6376 -6451 1361 0
-6376 -6449 1359 0
-6376 -6447 1357 0
-6376 -6445 1355 0
-6376 -6443 1353 0
-6376 -6441 1351 0
-6376 -6439 1349 0
-6376 -6437 1347 0
-6376 -6435 1345 0
-6376 -6433 1343 0
-6376 -6431 1341 0
-6376 -6429 1339 0
-6376 -6427 1337 0
-6376 -6425 1335 0
-6376 -6424 1333 0
-6374 1395 0
-6374 -6485 1393 0
-6374 -6483 1391 0
-6374 -6481 1389 0
-6374 -6479 1387 0
-6374 -6477 1385 0
-6374 -6475 1383 0
-6374 -6473 1381 0
-6374 -6471 1379 0
-6374 -6469 1377 0
-6374 -6467 1375 0
-6374 -6465 1373 0
-6374 -6463 1371 0
-6374 -6461 1369 0
-6374 -6459 1367 0
-6374 -6457 1365 0
-6374 -6455 1363 0
-6374 -6453 1361 0
-6374 -6451 1359 0
-6374 -6449 1357 0
-6374 -6447 1355 0
-6374 -6445 1353 0
-6374 -6443 1351 0
-6374 -6441 1349 0
-6374 -6439 1347 0
-6374 -6437 1345 0
-6374 -6435 1343 0
-6374 -6433 1341 0
-6374 -6431 1339 0
-6374 -6429 1337 0
-6374 -6427 1335 0
-6374 -6425 1333 0
-6374 -6424 1331 0
-6372 1393 0
-6372 -6485 1391 0
-6372 -6483 1389 0
-6372 -6481 1387 0
-6372 -6479 1385 0
-6372 -6477 1383 0
-6372 -6475 1381 0
-6372 -6473 1379 0
-6372 -6471 1377 0
-6372 -6469 1375 0
-6372 -6467 1373 0
-6372 -6465 1371 0
-6372 -6463 1369 0
-6372 -6461 1367 0
-6372 -6459 1365 0
-6372 -6457 1363 0
-6372 -6455 1361 0
-6372 -6453 1359 0
-6372 -6451 1357 0
-6372 -6449 1355 0
-6372 -6447 1353 0
-6372 -6445 1351 0
-6372 -6443 1349 0
-6372 -6441 1347 0
-6372 -6439 1345 0
-6372 -6437 1343 0
-6372 -6435 1341 0
-6372 -6433 1339 0
-6372 -6431 1337 0
-6372 -6429 1335 0
-6372 -6427 1333 0
-6372 -6425 1331 0
-6372 -6424 1329 0
-6370 1391 0
-6370 -6485 1389 0
-6370 -6483 1387 0
-6370 -6481 1385 0
-6370 -6479 1383 0
-6370 -6477 1381 0
-6370 -6475 1379 0
-6370 -6473 1377 0
-6370 -6471 1375 0
-6370 -6469 1373 0
-6370 -6467 1371 0
-6370 -6465 1369 0
-6370 -6463 1367 0
-6370 -6461 1365 0
-6370 -6459 1363 0
-6370 -6457 1361 0
-6370 -6455 1359 0
-6370 -6453 1357 0
-6370 -6451 1355 0
-6370 -6449 1353 0
-6370 -6447 1351 0
-6370 -6445 1349 0
-6370 -6443 1347 0
-6370 -6441 1345 0
-6370 -6439 1343 0
-6370 -6437 1341 0
-6370 -6435 1339 0
-6370 -6433 1337 0
-6370 -6431 1335 0
-6370 -6429 1333 0
-6370 -6427 1331 0
-6370 -6425 1329 0
-6370 -6424 1327 0
-6368 1389 0
-6368 -6485 1387 0
-6368 -6483 1385 0
-6368 -6481 1383 0
-6368 -6479 1381 0
-6368 -6477 1379 0
-6368 -6475 1377 0
-6368 -6473 1375 0
-6368 -6471 1373 0
-6368 -6469 1371 0
-6368 -6467 1369 0
-6368 -6465 1367 0
-6368 -6463 1365 0
-6368 -6461 1363 0
-6368 -6459 1361 0
-6368 -6457 1359 0
-6368 -6455 1357 0
-6368 -6453 1355 0
-6368 -6451 1353 0
-6368 -6449 1351 0
-6368 -6447 1349 0
-6368 -6445 1347 0
-6368 -6443 1345 0
-6368 -6441 1343 0
-6368 -6439 1341 0
-6368 -6437 1339 0
-6368 -6435 1337 0
-6368 -6433 1335 0
-6368 -6431 1333 0
-6368 -6429 1331 0
-6368 -6427 1329 0
-6368 -6425 1327 0
-6368 -6424 1325 0
-6366 1387 0
-6366 -6485 1385 0
-6366 -6483 1383 0
-6366 -6481 1381 0
-6366 -6479 1379 0
-6366 -6477 1377 0
-6366 -6475 1375 0
-6366 -6473 1373 0
-6366 -6471 1371 0
-6366 -6469 1369 0
-6366 -6467 1367 0
-6366 -6465 1365 0
-6366 -6463 1363 0
-6366 -6461 1361 0
-6366 -6459 1359 0
-6366 -6457 1357 0
-6366 -6455 1355 0
-6366 -6453 1353 0
-6366 -6451 1351 0
-6366 -6449 1349 0
-6366 -6447 1347 0
-6366 -6445 1345 0
-6366 -6443 1343 0
-6366 -6441 1341 0
-6366 -6439 1339 0
-6366 -6437 1337 0
-6366 -6435 1335 0
-6366 -6433 1333 0
-6366 -6431 1331 0
-6366 -6429 1329 0
-6366 -6427 1327 0
-6366 -6425 1325 0
-6366 -6424 1323 0
-6364 1385 0
-6364 -6485 1383 0
-6364 -6483 1381 0
-6364 -6481 1379 0
-6364 -6479 1377 0
-6364 -6477 1375 0
-6364 -6475 1373 0
-6364 -6473 1371 0
-6364 -6471 1369 0
-6364 -6469 1367 0
-6364 -6467 1365 0
-6364 -6465 1363 0
-6364 -6463 1361 0
-6364 -6461 1359 0
-6364 -6459 1357 0
-6364 -6457 1355 0
-6364 -6455 1353 0
-6364 -6453 1351 0
-6364 -6451 1349 0
-6364 -6449 1347 0
-6364 -6447 1345 0
-6364 -6445 1343 0
-6364 -6443 1341 0
-6364 -6441 1339 0
-6364 -6439 1337 0
-6364 -6437 1335 0
-6364 -6435 1333 0
-6364 -6433 1331 0
-6364 -6431 1329 0
-6364 -6429 1327 0
-6364 -6427 1325 0
-6364 -6425 1323 0
-6364 -6424 1321 0
-6362 1383 0
-6362 -6485 1381 0
-6362 -6483 1379 0
-6362 -6481 1377 0
-6362 -6479 1375 0
-6362 -6477 1373 0
-6362 -6475 1371 0
-6362 -6473 1369 0
-6362 -6471 1367 0
-6362 -6469 1365 0
-6362 -6467 1363 0
-6362 -6465 1361 0
-6362 -6463 1359 0
-6362 -6461 1357 0
-6362 -6459 1355 0
-6362 -6457 1353 0
-6362 -6455 1351 0
-6362 -6453 1349 0
-6362 -6451 1347 0
-6362 -6449 1345 0
-6362 -6447 1343 0
-6362 -6445 1341 0
-6362 -6443 1339 0
-6362 -6441 1337 0
-6362 -6439 1335 0
-6362 -6437 1333 0
-6362 -6435 1331 0
-6362 -6433 1329 0
-6362 -6431 1327 0
-6362 -6429 1325 0
-6362 -6427 1323 0
-6362 -6425 1321 0
-6362 -6424 1319 0
-6361 1381 0
-6361 -6485 1379 0
-6361 -6483 1377 0
-6361 -6481 1375 0
-6361 -6479 1373 0
-6361 -6477 1371 0
-6361 -6475 1369 0
-6361 -6473 1367 0
-6361 -6471 1365 0
-6361 -6469 1363 0
-6361 -6467 1361 0
-6361 -6465 1359 0
-6361 -6463 1357 0
-6361 -6461 1355 0
-6361 -6459 1353 0
-6361 -6457 1351 0
-6361 -6455 1349 0
-6361 -6453 1347 0
-6361 -6451 1345 0
-6361 -6449 1343 0
-6361 -6447 1341 0
-6361 -6445 1339 0
-6361 -6443 1337 0
-6361 -6441 1335 0
-6361 -6439 1333 0
-6361 -6437 1331 0
-6361 -6435 1329 0
-6361 -6433 1327 0
-6361 -6431 1325 0
-6361 -6429 1323 0
-6361 -6427 1321 0
-6361 -6425 1319 0
-6361 -6424 1318 0
c ((aux1312 + aux1313 - shift(num_occupied_by_types_00001, -64))<=64)
7002 -1445 0
7003 -1446 0
7005 -1448 0
7007 -1450 0
7009 -1452 0
7011 -1454 0
7013 -1456 0
7015 -1458 0
7017 -1460 0
7019 -1462 0
7021 -1464 0
7023 -1466 0
7025 -1468 0
7027 -1470 0
7029 -1472 0
7031 -1474 0
7033 -1476 0
7035 -1478 0
7037 -1480 0
7039 -1482 0
7041 -1484 0
7043 -1486 0
7045 -1488 0
7047 -1490 0
7049 -1492 0
7051 -1494 0
7053 -1496 0
7055 -1498 0
7057 -1500 0
7059 -1502 0
7061 -1504 0
7063 -1506 0
6939 -1445 0
6939 7002 -1446 0
6939 7003 -1448 0
6939 7005 -1450 0
6939 7007 -1452 0
6939 7009 -1454 0
6939 7011 -1456 0
6939 7013 -1458 0
6939 7015 -1460 0
6939 7017 -1462 0
6939 7019 -1464 0
6939 7021 -1466 0
6939 7023 -1468 0
6939 7025 -1470 0
6939 7027 -1472 0
6939 7029 -1474 0
6939 7031 -1476 0
6939 7033 -1478 0
6939 7035 -1480 0
6939 7037 -1482 0
6939 7039 -1484 0
6939 7041 -1486 0
6939 7043 -1488 0
6939 7045 -1490 0
6939 7047 -1492 0
6939 7049 -1494 0
6939 7051 -1496 0
6939 7053 -1498 0
6939 7055 -1500 0
6939 7057 -1502 0
6939 7059 -1504 0
6939 7061 -1506 0
6939 7063 -1508 0
6940 -1446 0
6940 7002 -1448 0
6940 7003 -1450 0
6940 7005 -1452 0
6940 7007 -1454 0
6940 7009 -1456 0
6940 7011 -1458 0
6940 7013 -1460 0
6940 7015 -1462 0
6940 7017 -1464 0
6940 7019 -1466 0
6940 7021 -1468 0
6940 7023 -1470 0
6940 7025 -1472 0
6940 7027 -1474 0
6940 7029 -1476 0
6940 7031 -1478 0
6940 7033 -1480 0
6940 7035 -1482 0
6940 7037 -1484 0
6940 7039 -1486 0
6940 7041 -1488 0
6940 7043 -1490 0
6940 7045 -1492 0
6940 7047 -1494 0
6940 7049 -1496 0
6940 7051 -1498 0
6940 7053 -1500 0
6940 7055 -1502 0
6940 7057 -1504 0
6940 7059 -1506 0
6940 7061 -1508 0
6940 7063 -1510 0
6942 -1448 0
6942 7002 -1450 0
6942 7003 -1452 0
6942 7005 -1454 0
6942 7007 -1456 0
6942 7009 -1458 0
6942 7011 -1460 0
6942 7013 -1462 0
6942 7015 -1464 0
6942 7017 -1466 0
6942 7019 -1468 0
6942 7021 -1470 0
6942 7023 -1472 0
6942 7025 -1474 0
6942 7027 -1476 0
6942 7029 -1478 0
6942 7031 -1480 0
6942 7033 -1482 0
6942 7035 -1484 0
6942 7037 -1486 0
6942 7039 -1488 0
6942 7041 -1490 0
6942 7043 -1492 0
6942 7045 -1494 0
6942 7047 -1496 0
6942 7049 -1498 0
6942 7051 -1500 0
6942 7053 -1502 0
6942 7055 -1504 0
6942 7057 -1506 0
6942 7059 -1508 0
6942 7061 -1510 0
6942 7063 -1512 0
6944 -1450 0
6944 7002 -1452 0
6944 7003 -1454 0
6944 7005 -1456 0
6944 7007 -1458 0
6944 7009 -1460 0
6944 7011 -1462 0
6944 7013 -1464 0
6944 7015 -1466 0
6944 7017 -1468 0
6944 7019 -1470 0
6944 7021 -1472 0
6944 7023 -1474 0
6944 7025 -1476 0
6944 7027 -1478 0
6944 7029 -1480 0
6944 7031 -1482 0
6944 7033 -1484 0
6944 7035 -1486 0
6944 7037 -1488 0
6944 7039 -1490 0
6944 7041 -1492 0
6944 7043 -1494 0
6944 7045 -1496 0
6944 7047 -1498 0
6944 7049 -1500 0
6944 7051 -1502 0
6944 7053 -1504 0
6944 7055 -1506 0
6944 7057 -1508 0
6944 7059 -1510 0
6944 7061 -1512 0
6944 7063 -1514 0
6946 -1452 0
6946 7002 -1454 0
6946 7003 -1456 0
6946 7005 -1458 0
6946 7007 -1460 0
6946 7009 -1462 0
6946 7011 -1464 0
6946 7013 -1466 0
6946 7015 -1468 0
6946 7017 -1470 0
6946 7019 -1472 0
6946 7021 -1474 0
6946 7023 -1476 0
6946 7025 -1478 0
6946 7027 -1480 0
6946 7029 -1482 0
6946 7031 -1484 0
6946 7033 -1486 0
6946 7035 -1488 0
6946 7037 -1490 0
6946 7039 -1492 0
6946 7041 -1494 0
6946 7043 -1496 0
6946 7045 -1498 0
6946 7047 -1500 0
6946 7049 -1502 0
6946 7051 -1504 0
6946 7053 -1506 0
6946 7055 -1508 0
6946 7057 -1510 0
6946 7059 -1512 0
6946 7061 -1514 0
6946 7063 -1516 0
6948 -1454 0
6948 7002 -1456 0
6948 7003 -1458 0
6948 7005 -1460 0
6948 7007 -1462 0
6948 7009 -1464 0
6948 7011 -1466 0
6948 7013 -1468 0
6948 7015 -1470 0
6948 7017 -1472 0
6948 7019 -1474 0
6948 7021 -1476 0
6948 7023 -1478 0
6948 7025 -1480 0
6948 7027 -1482 0
6948 7029 -1484 0
6948 7031 -1486 0
6948 7033 -1488 0
6948 7035 -1490 0
6948 7037 -1492 0
6948 7039 -1494 0
6948 7041 -1496 0
6948 7043 -1498 0
6948 7045 -1500 0
6948 7047 -1502 0
6948 7049 -1504 0
6948 7051 -1506 0
6948 7053 -1508 0
6948 7055 -1510 0
6948 7057 -1512 0
6948 7059 -1514 0
6948 7061 -1516 0
6948 7063 -1518 0
6950 -1456 0
6950 7002 -1458 0
6950 7003 -1460 0
6950 7005 -1462 0
6950 7007 -1464 0
6950 7009 -1466 0
6950 7011 -1468 0
6950 7013 -1470 0
6950 7015 -1472 0
6950 7017 -1474 0
6950 7019 -1476 0
6950 7021 -1478 0
6950 7023 -1480 0
6950 7025 -1482 0
6950 7027 -1484 0
6950 7029 -1486 0
6950 7031 -1488 0
6950 7033 -1490 0
6950 7035 -1492 0
6950 7037 -1494 0
6950 7039 -1496 0
6950 7041 -1498 0
6950 7043 -1500 0
6950 7045 -1502 0
6950 7047 -1504 0
6950 7049 -1506 0
6950 7051 -1508 0
6950 7053 -1510 0
6950 7055 -1512 0
6950 7057 -1514 0
6950 7059 -1516 0
6950 7061 -1518 0
6950 7063 -1520 0
6952 -1458 0
6952 7002 -1460 0
6952 7003 -1462 0
6952 7005 -1464 0
6952 7007 -1466 0
6952 7009 -1468 0
6952 7011 -1470 0
6952 7013 -1472 0
6952 7015 -1474 0
6952 7017 -1476 0
6952 7019 -1478 0
6952 7021 -1480 0
6952 7023 -1482 0
6952 7025 -1484 0
6952 7027 -1486 0
6952 7029 -1488 0
6952 7031 -1490 0
6952 7033 -1492 0
6952 7035 -1494 0
6952 7037 -1496 0
6952 7039 -1498 0
6952 7041 -1500 0
6952 7043 -1502 0
6952 7045 -1504 0
6952 7047 -1506 0
6952 7049 -1508 0
6952 7051 -1510 0
6952 7053 -1512 0
6952 7055 -1514 0
6952 7057 -1516 0
6952 7059 -1518 0
6952 7061 -1520 0
6952 7063 -1522 0
6954 -1460 0
6954 7002 -1462 0
6954 7003 -1464 0
6954 7005 -1466 0
6954 7007 -1468 0
6954 7009 -1470 0
6954 7011 -1472 0
6954 7013 -1474 0
6954 7015 -1476 0
6954 7017 -1478 0
6954 7019 -1480 0
6954 7021 -1482 0
6954 7023 -1484 0
6954 7025 -1486 0
6954 7027 -1488 0
6954 7029 -1490 0
6954 7031 -1492 0
6954 7033 -1494 0
6954 7035 -1496 0
6954 7037 -1498 0
6954 7039 -1500 0
6954 7041 -1502 0
6954 7043 -1504 0
6954 7045 -1506 0
6954 7047 -1508 0
6954 7049 -1510 0
6954 7051 -1512 0
6954 7053 -1514 0
6954 7055 -1516 0
6954 7057 -1518 0
6954 7059 -1520 0
6954 7061 -1522 0
6954 7063 -1524 0
6956 -1462 0
6956 7002 -1464 0
6956 7003 -1466 0
6956 7005 -1468 0
6956 7007 -1470 0
6956 7009 -1472 0
6956 7011 -1474 0
6956 7013 -1476 0
6956 7015 -1478 0
6956 7017 -1480 0
6956 7019 -1482 0
6956 7021 -1484 0
6956 7023 -1486 0
6956 7025 -1488 0
6956 7027 -1490 0
6956 7029 -1492 0
6956 7031 -1494 0
6956 7033 -1496 0
6956 7035 -1498 0
6956 7037 -1500 0
6956 7039 -1502 0
6956 7041 -1504 0
6956 7043 -1506 0
6956 7045 -1508 0
6956 7047 -1510 0
6956 7049 -1512 0
6956 7051 -1514 0
6956 7053 -1516 0
6956 7055 -1518 0
6956 7057 -1520 0
6956 7059 -1522 0
6956 7061 -1524 0
6956 7063 -1526 0
6958 -1464 0
6958 7002 -1466 0
6958 7003 -1468 0
6958 7005 -1470 0
6958 7007 -1472 0
6958 7009 -1474 0
6958 7011 -1476 0
6958 7013 -1478 0
6958 7015 -1480 0
6958 7017 -1482 0
6958 7019 -1484 0
6958 7021 -1486 0
6958 7023 -1488 0
6958 7025 -1490 0
6958 7027 -1492 0
6958 7029 -1494 0
6958 7031 -1496 0
6958 7033 -1498 0
6958 7035 -1500 0
6958 7037 -1502 0
6958 7039 -1504 0
6958 7041 -1506 0
6958 7043 -1508 0
6958 7045 -1510 0
6958 7047 -1512 0
6958 7049 -1514 0
6958 7051 -1516 0
6958 7053 -1518 0
6958 7055 -1520 0
6958 7057 -1522 0
6958 7059 -1524 0
6958 7061 -1526 0
6958 7063 -1528 0
6960 -1466 0
6960 7002 -1468 0
6960 7003 -1470 0
6960 7005 -1472 0
6960 7007 -1474 0
6960 7009 -1476 0
6960 7011 -1478 0
6960 7013 -1480 0
6960 7015 -1482 0
6960 7017 -1484 0
6960 7019 -1486 0
6960 7021 -1488 0
6960 7023 -1490 0
6960 7025 -1492 0
6960 7027 -1494 0
6960 7029 -1496 0
6960 7031 -1498 0
6960 7033 -1500 0
6960 7035 -1502 0
6960 7037 -1504 0
6960 7039 -1506 0
6960 7041 -1508 0
6960 7043 -1510 0
6960 7045 -1512 0
6960 7047 -1514 0
6960 7049 -1516 0
6960 7051 -1518 0
6960 7053 -1520 0
6960 7055 -1522 0
6960 7057 -1524 0
6960 7059 -1526 0
6960 7061 -1528 0
6960 7063 -1530 0
6962 -1468 0
6962 7002 -1470 0
6962 7003 -1472 0
6962 7005 -1474 0
6962 7007 -1476 0
6962 7009 -1478 0
6962 7011 -1480 0
6962 7013 -1482 0
6962 7015 -1484 0
6962 7017 -1486 0
6962 7019 -1488 0
6962 7021 -1490 0
6962 7023 -1492 0
6962 7025 -1494 0
6962 7027 -1496 0
6962 7029 -1498 0
6962 7031 -1500 0
6962 7033 -1502 0
6962 7035 -1504 0
6962 7037 -1506 0
6962 7039 -1508 0
6962 7041 -1510 0
6962 7043 -1512 0
6962 7045 -1514 0
6962 7047 -1516 0
6962 7049 -1518 0
6962 7051 -1520 0
6962 7053 -1522 0
6962 7055 -1524 0
6962 7057 -1526 0
6962 7059 -1528 0
6962 7061 -1530 0
6962 7063 -1532 0
6964 -1470 0
6964 7002 -1472 0
6964 7003 -1474 0
6964 7005 -1476 0
6964 7007 -1478 0
6964 7009 -1480 0
6964 7011 -1482 0
6964 7013 -1484 0
6964 7015 -1486 0
6964 7017 -1488 0
6964 7019 -1490 0
6964 7021 -1492 0
6964 7023 -1494 0
6964 7025 -1496 0
6964 7027 -1498 0
6964 7029 -1500 0
6964 7031 -1502 0
6964 7033 -1504 0
6964 7035 -1506 0
6964 7037 -1508 0
6964 7039 -1510 0
6964 7041 -1512 0
6964 7043 -1514 0
6964 7045 -1516 0
6964 7047 -1518 0
6964 7049 -1520 0
6964 7051 -1522 0
6964 7053 -1524 0
6964 7055 -1526 0
6964 7057 -1528 0
6964 7059 -1530 0
6964 7061 -1532 0
6964 7063 -1534 0
6966 -1472 0
6966 7002 -1474 0
6966 7003 -1476 0
6966 7005 -1478 0
6966 7007 -1480 0
6966 7009 -1482 0
6966 7011 -1484 0
6966 7013 -1486 0
6966 7015 -1488 0
6966 7017 -1490 0
6966 7019 -1492 0
6966 7021 -1494 0
6966 7023 -1496 0
6966 7025 -1498 0
6966 7027 -1500 0
6966 7029 -1502 0
6966 7031 -1504 0
6966 7033 -1506 0
6966 7035 -1508 0
6966 7037 -1510 0
6966 7039 -1512 0
6966 7041 -1514 0
6966 7043 -1516 0
6966 7045 -1518 0
6966 7047 -1520 0
6966 7049 -1522 0
6966 7051 -1524 0
6966 7053 -1526 0
6966 7055 -1528 0
6966 7057 -1530 0
6966 7059 -1532 0
6966 7061 -1534 0
6966 7063 -1536 0
6968 -1474 0
6968 7002 -1476 0
6968 7003 -1478 0
6968 7005 -1480 0
6968 7007 -1482 0
6968 7009 -1484 0
6968 7011 -1486 0
6968 7013 -1488 0
6968 7015 -1490 0
6968 7017 -1492 0
6968 7019 -1494 0
6968 7021 -1496 0
6968 7023 -1498 0
6968 7025 -1500 0
6968 7027 -1502 0
6968 7029 -1504 0
6968 7031 -1506 0
6968 7033 -1508 0
6968 7035 -1510 0
6968 7037 -1512 0
6968 7039 -1514 0
6968 7041 -1516 0
6968 7043 -1518 0
6968 7045 -1520 0
6968 7047 -1522 0
6968 7049 -1524 0
6968 7051 -1526 0
6968 7053 -1528 0
6968 7055 -1530 0
6968 7057 -1532 0
6968 7059 -1534 0
6968 7061 -1536 0
6968 7063 -1538 0
6970 -1476 0
6970 7002 -1478 0
6970 7003 -1480 0
6970 7005 -1482 0
6970 7007 -1484 0
6970 7009 -1486 0
6970 7011 -1488 0
6970 7013 -1490 0
6970 7015 -1492 0
6970 7017 -1494 0
6970 7019 -1496 0
6970 7021 -1498 0
6970 7023 -1500 0
6970 7025 -1502 0
6970 7027 -1504 0
6970 7029 -1506 0
6970 7031 -1508 0
6970 7033 -1510 0
6970 7035 -1512 0
6970 7037 -1514 0
6970 7039 -1516 0
6970 7041 -1518 0
6970 7043 -1520 0
6970 7045 -1522 0
6970 7047 -1524 0
6970 7049 -1526 0
6970 7051 -1528 0
6970 7053 -1530 0
6970 7055 -1532 0
6970 7057 -1534 0
6970 7059 -1536 0
6970 7061 -1538 0
6970 7063 -1540 0
6972 -1478 0
6972 7002 -1480 0
6972 7003 -1482 0
6972 7005 -1484 0
6972 7007 -1486 0
6972 7009 -1488 0
6972 7011 -1490 0
6972 7013 -1492 0
6972 7015 -1494 0
6972 7017 -1496 0
6972 7019 -1498 0
6972 7021 -1500 0
6972 7023 -1502 0
6972 7025 -1504 0
6972 7027 -1506 0
6972 7029 -1508 0
6972 7031 -1510 0
6972 7033 -1512 0
6972 7035 -1514 0
6972 7037 -1516 0
6972 7039 -1518 0
6972 7041 -1520 0
6972 7043 -1522 0
6972 7045 -1524 0
6972 7047 -1526 0
6972 7049 -1528 0
6972 7051 -1530 0
6972 7053 -1532 0
6972 7055 -1534 0
6972 7057 -1536 0
6972 7059 -1538 0
6972 7061 -1540 0
6972 7063 -1542 0
6974 -1480 0
6974 7002 -1482 0
6974 7003 -1484 0
6974 7005 -1486 0
6974 7007 -1488 0
6974 7009 -1490 0
6974 7011 -1492 0
6974 7013 -1494 0
6974 7015 -1496 0
6974 7017 -1498 0
6974 7019 -1500 0
6974 7021 -1502 0
6974 7023 -1504 0
6974 7025 -1506 0
6974 7027 -1508 0
6974 7029 -1510 0
6974 7031 -1512 0
6974 7033 -1514 0
6974 7035 -1516 0
6974 7037 -1518 0
6974 7039 -1520 0
6974 7041 -1522 0
6974 7043 -1524 0
6974 7045 -1526 0
6974 7047 -1528 0
6974 7049 -1530 0
6974 7051 -1532 0
6974 7053 -1534 0
6974 7055 -1536 0
6974 7057 -1538 0
6974 7059 -1540 0
6974 7061 -1542 0
6974 7063 -1544 0
6976 -1482 0
6976 7002 -1484 0
6976 7003 -1486 0
6976 7005 -1488 0
6976 7007 -1490 0
6976 7009 -1492 0
6976 7011 -1494 0
6976 7013 -1496 0
6976 7015 -1498 0
6976 7017 -1500 0
6976 7019 -1502 0
6976 7021 -1504 0
6976 7023 -1506 0
6976 7025 -1508 0
6976 7027 -1510 0
6976 7029 -1512 0
6976 7031 -1514 0
6976 7033 -1516 0
6976 7035 -1518 0
6976 7037 -1520 0
6976 7039 -1522 0
6976 7041 -1524 0
6976 7043 -1526 0
6976 7045 -1528 0
6976 7047 -1530 0
6976 7049 -1532 0
6976 7051 -1534 0
6976 7053 -1536 0
6976 7055 -1538 0
6976 7057 -1540 0
6976 7059 -1542 0
6976 7061 -1544 0
6976 7063 -1546 0
6978 -1484 0
6978 7002 -1486 0
6978 7003 -1488 0
6978 7005 -1490 0
6978 7007 -1492 0
6978 7009 -1494 0
6978 7011 -1496 0
6978 7013 -1498 0
6978 7015 -1500 0
6978 7017 -1502 0
6978 7019 -1504 0
6978 7021 -1506 0
6978 7023 -1508 0
6978 7025 -1510 0
6978 7027 -1512 0
6978 7029 -1514 0
6978 7031 -1516 0
6978 7033 -1518 0
6978 7035 -1520 0
6978 7037 -1522 0
6978 7039 -1524 0
6978 7041 -1526 0
6978 7043 -1528 0
6978 7045 -1530 0
6978 7047 -1532 0
6978 7049 -1534 0
6978 7051 -1536 0
6978 7053 -1538 0
6978 7055 -1540 0
6978 7057 -1542 0
6978 7059 -1544 0
6978 7061 -1546 0
6978 7063 -1548 0
6980 -1486 0
6980 7002 -1488 0
6980 7003 -1490 0
6980 7005 -1492 0
6980 7007 -1494 0
6980 7009 -1496 0
6980 7011 -1498 0
6980 7013 -1500 0
6980 7015 -1502 0
6980 7017 -1504 0
6980 7019 -1506 0
6980 7021 -1508 0
6980 7023 -1510 0
6980 7025 -1512 0
6980 7027 -1514 0
6980 7029 -1516 0
6980 7031 -1518 0
6980 7033 -1520 0
6980 7035 -1522 0
6980 7037 -1524 0
6980 7039 -1526 0
6980 7041 -1528 0
6980 7043 -1530 0
6980 7045 -1532 0
6980 7047 -1534 0
6980 7049 -1536 0
6980 7051 -1538 0
6980 7053 -1540 0
6980 7055 -1542 0
6980 7057 -1544 0
6980 7059 -1546 0
6980 7061 -1548 0
6980 7063 -1550 0
6982 -1488 0
6982 7002 -1490 0
6982 7003 -1492 0
6982 7005 -1494 0
6982 7007 -1496 0
6982 7009 -1498 0
6982 7011 -1500 0
6982 7013 -1502 0
6982 7015 -1504 0
6982 7017 -1506 0
6982 7019 -1508 0
6982 7021 -1510 0
6982 7023 -1512 0
6982 7025 -1514 0
6982 7027 -1516 0
6982 7029 -1518 0
6982 7031 -1520 0
6982 7033 -1522 0
6982 7035 -1524 0
6982 7037 -1526 0
6982 7039 -1528 0
6982 7041 -1530 0
6982 7043 -1532 0
6982 7045 -1534 0
6982 7047 -1536 0
6982 7049 -1538 0
6982 7051 -1540 0
6982 7053 -1542 0
6982 7055 -1544 0
6982 7057 -1546 0
6982 7059 -1548 0
6982 7061 -1550 0
6982 7063 -1552 0
6984 -1490 0
6984 7002 -1492 0
6984 7003 -1494 0
6984 7005 -1496 0
6984 7007 -1498 0
6984 7009 -1500 0
6984 7011 -1502 0
6984 7013 -1504 0
6984 7015 -1506 0
6984 7017 -1508 0
6984 7019 -1510 0
6984 7021 -1512 0
6984 7023 -1514 0
6984 7025 -1516 0
6984 7027 -1518 0
6984 7029 -1520 0
6984 7031 -1522 0
6984 7033 -1524 0
6984 7035 -1526 0
6984 7037 -1528 0
6984 7039 -1530 0
6984 7041 -1532 0
6984 7043 -1534 0
6984 7045 -1536 0
6984 7047 -1538 0
6984 7049 -1540 0
6984 7051 -1542 0
6984 7053 -1544 0
6984 7055 -1546 0
6984 7057 -1548 0
6984 7059 -1550 0
6984 7061 -1552 0
6984 7063 -1554 0
6986 -1492 0
6986 7002 -1494 0
6986 7003 -1496 0
6986 7005 -1498 0
6986 7007 -1500 0
6986 7009 -1502 0
6986 7011 -1504 0
6986 7013 -1506 0
6986 7015 -1508 0
6986 7017 -1510 0
6986 7019 -1512 0
6986 7021 -1514 0
6986 7023 -1516 0
6986 7025 -1518 0
6986 7027 -1520 0
6986 7029 -1522 0
6986 7031 -1524 0
6986 7033 -1526 0
6986 7035 -1528 0
6986 7037 -1530 0
6986 7039 -1532 0
6986 7041 -1534 0
6986 7043 -1536 0
6986 7045 -1538 0
6986 7047 -1540 0
6986 7049 -1542 0
6986 7051 -1544 0
6986 7053 -1546 0
6986 7055 -1548 0
6986 7057 -1550 0
6986 7059 -1552 0
6986 7061 -1554 0
6986 7063 -1556 0
6988 -1494 0
6988 7002 -1496 0
6988 7003 -1498 0
6988 7005 -1500 0
6988 7007 -1502 0
6988 7009 -1504 0
6988 7011 -1506 0
6988 7013 -1508 0
6988 7015 -1510 0
6988 7017 -1512 0
6988 7019 -1514 0
6988 7021 -1516 0
6988 7023 -1518 0
6988 7025 -1520 0
6988 7027 -1522 0
6988 7029 -1524 0
6988 7031 -1526 0
6988 7033 -1528 0
6988 7035 -1530 0
6988 7037 -1532 0
6988 7039 -1534 0
6988 7041 -1536 0
6988 7043 -1538 0
6988 7045 -1540 0
6988 7047 -1542 0
6988 7049 -1544 0
6988 7051 -1546 0
6988 7053 -1548 0
6988 7055 -1550 0
6988 7057 -1552 0
6988 7059 -1554 0
6988 7061 -1556 0
6988 7063 -1558 0
6990 -1496 0
6990 7002 -1498 0
6990 7003 -1500 0
6990 7005 -1502 0
6990 7007 -1504 0
6990 7009 -1506 0
6990 7011 -1508 0
6990 7013 -1510 0
6990 7015 -1512 0
6990 7017 -1514 0
6990 7019 -1516 0
6990 7021 -1518 0
6990 7023 -1520 0
6990 7025 -1522 0
6990 7027 -1524 0
6990 7029 -1526 0
6990 7031 -1528 0
6990 7033 -1530 0
6990 7035 -1532 0
6990 7037 -1534 0
6990 7039 -1536 0
6990 7041 -1538 0
6990 7043 -1540 0
6990 7045 -1542 0
6990 7047 -1544 0
6990 7049 -1546 0
6990 7051 -1548 0
6990 7053 -1550 0
6990 7055 -1552 0
6990 7057 -1554 0
6990 7059 -1556 0
6990 7061 -1558 0
6990 7063 -1560 0
6992 -1498 0
6992 7002 -1500 0
6992 7003 -1502 0
6992 7005 -1504 0
6992 7007 -1506 0
6992 7009 -1508 0
6992 7011 -1510 0
6992 7013 -1512 0
6992 7015 -1514 0
6992 7017 -1516 0
6992 7019 -1518 0
6992 7021 -1520 0
6992 7023 -1522 0
6992 7025 -1524 0
6992 7027 -1526 0
6992 7029 -1528 0
6992 7031 -1530 0
6992 7033 -1532 0
6992 7035 -1534 0
6992 7037 -1536 0
6992 7039 -1538 0
6992 7041 -1540 0
6992 7043 -1542 0
6992 7045 -1544 0
6992 7047 -1546 0
6992 7049 -1548 0
6992 7051 -1550 0
6992 7053 -1552 0
6992 7055 -1554 0
6992 7057 -1556 0
6992 7059 -1558 0
6992 7061 -1560 0
6992 7063 -1562 0
6994 -1500 0
6994 7002 -1502 0
6994 7003 -1504 0
6994 7005 -1506 0
6994 7007 -1508 0
6994 7009 -1510 0
6994 7011 -1512 0
6994 7013 -1514 0
6994 7015 -1516 0
6994 7017 -1518 0
6994 7019 -1520 0
6994 7021 -1522 0
6994 7023 -1524 0
6994 7025 -1526 0
6994 7027 -1528 0
6994 7029 -1530 0
6994 7031 -1532 0
6994 7033 -1534 0
6994 7035 -1536 0
6994 7037 -1538 0
6994 7039 -1540 0
6994 7041 -1542 0
6994 7043 -1544 0
6994 7045 -1546 0
6994 7047 -1548 0
6994 7049 -1550 0
6994 7051 -1552 0
6994 7053 -1554 0
6994 7055 -1556 0
6994 7057 -1558 0
6994 7059 -1560 0
6994 7061 -1562 0
6994 7063 -1564 0
6996 -1502 0
6996 7002 -1504 0
6996 7003 -1506 0
6996 7005 -1508 0
6996 7007 -1510 0
6996 7009 -1512 0
6996 7011 -1514 0
6996 7013 -1516 0
6996 7015 -1518 0
6996 7017 -1520 0
6996 7019 -1522 0
6996 7021 -1524 0
6996 7023 -1526 0
6996 7025 -1528 0
6996 7027 -1530 0
6996 7029 -1532 0
6996 7031 -1534 0
6996 7033 -1536 0
6996 7035 -1538 0
6996 7037 -1540 0
6996 7039 -1542 0
6996 7041 -1544 0
6996 7043 -1546 0
6996 7045 -1548 0
6996 7047 -1550 0
6996 7049 -1552 0
6996 7051 -1554 0
6996 7053 -1556 0
6996 7055 -1558 0
6996 7057 -1560 0
6996 7059 -1562 0
6996 7061 -1564 0
6996 7063 -1566 0
6998 -1504 0
6998 7002 -1506 0
6998 7003 -1508 0
6998 7005 -1510 0
6998 7007 -1512 0
6998 7009 -1514 0
6998 7011 -1516 0
6998 7013 -1518 0
6998 7015 -1520 0
6998 7017 -1522 0
6998 7019 -1524 0
6998 7021 -1526 0
6998 7023 -1528 0
6998 7025 -1530 0
6998 7027 -1532 0
6998 7029 -1534 0
6998 7031 -1536 0
6998 7033 -1538 0
6998 7035 -1540 0
6998 7037 -1542 0
6998 7039 -1544 0
6998 7041 -1546 0
6998 7043 -1548 0
6998 7045 -1550 0
6998 7047 -1552 0
6998 7049 -1554 0
6998 7051 -1556 0
6998 7053 -1558 0
6998 7055 -1560 0
6998 7057 -1562 0
6998 7059 -1564 0
6998 7061 -1566 0
6998 7063 -1568 0
7000 -1506 0
7000 7002 -1508 0
7000 7003 -1510 0
7000 7005 -1512 0
7000 7007 -1514 0
7000 7009 -1516 0
7000 7011 -1518 0
7000 7013 -1520 0
7000 7015 -1522 0
7000 7017 -1524 0
7000 7019 -1526 0
7000 7021 -1528 0
7000 7023 -1530 0
7000 7025 -1532 0
7000 7027 -1534 0
7000 7029 -1536 0
7000 7031 -1538 0
7000 7033 -1540 0
7000 7035 -1542 0
7000 7037 -1544 0
7000 7039 -1546 0
7000 7041 -1548 0
7000 7043 -1550 0
7000 7045 -1552 0
7000 7047 -1554 0
7000 7049 -1556 0
7000 7051 -1558 0
7000 7053 -1560 0
7000 7055 -1562 0
7000 7057 -1564 0
7000 7059 -1566 0
7000 7061 -1568 0
7000 7063 -1570 0
c (64<=(aux1312 + aux1313 - shift(num_occupied_by_types_00001, -64)))
-7063 1570 0
-7061 1568 0
-7059 1566 0
-7057 1564 0
-7055 1562 0
-7053 1560 0
-7051 1558 0
-7049 1556 0
-7047 1554 0
-7045 1552 0
-7043 1550 0
-7041 1548 0
-7039 1546 0
-7037 1544 0
-7035 1542 0
-7033 1540 0
-7031 1538 0
-7029 1536 0
-7027 1534 0
-7025 1532 0
-7023 1530 0
-7021 1528 0
-7019 1526 0
-7017 1524 0
-7015 1522 0
-7013 1520 0
-7011 1518 0
-7009 1516 0
-7007 1514 0
-7005 1512 0
-7003 1510 0
-7002 1508 0
-7000 1570 0
-7000 -7063 1568 0
-7000 -7061 1566 0
-7000 -7059 1564 0
-7000 -7057 1562 0
-7000 -7055 1560 0
-7000 -7053 1558 0
-7000 -7051 1556 0
-7000 -7049 1554 0
-7000 -7047 1552 0
-7000 -7045 1550 0
-7000 -7043 1548 0
-7000 -7041 1546 0
-7000 -7039 1544 0
-7000 -7037 1542 0
-7000 -7035 1540 0
-7000 -7033 1538 0
-7000 -7031 1536 0
-7000 -7029 1534 0
-7000 -7027 1532 0
-7000 -7025 1530 0
-7000 -7023 1528 0
-7000 -7021 1526 0
-7000 -7019 1524 0
-7000 -7017 1522 0
-7000 -7015 1520 0
-7000 -7013 1518 0
-7000 -7011 1516 0
-7000 -7009 1514 0
-7000 -7007 1512 0
-7000 -7005 1510 0
-7000 -7003 1508 0
-7000 -7002 1506 0
-6998 1568 0
-6998 -7063 1566 0
-6998 -7061 1564 0
-6998 -7059 1562 0
-6998 -7057 1560 0
-6998 -7055 1558 0
-6998 -7053 1556 0
-6998 -7051 1554 0
-6998 -7049 1552 0
-6998 -7047 1550 0
-6998 -7045 1548 0
-6998 -7043 1546 0
-6998 -7041 1544 0
-6998 -7039 1542 0
-6998 -7037 1540 0
-6998 -7035 1538 0
-6998 -7033 1536 0
-6998 -7031 1534 0
-6998 -7029 1532 0
-6998 -7027 1530 0
-6998 -7025 1528 0
-6998 -7023 1526 0
-6998 -7021 1524 0
-6998 -7019 1522 0
-6998 -7017 1520 0
-6998 -7015 1518 0
-6998 -7013 1516 0
-6998 -7011 1514 0
-6998 -7009 1512 0
-6998 -7007 1510 0
-6998 -7005 1508 0
-6998 -7003 1506 0
-6998 -7002 1504 0
-6996 1566 0
-6996 -7063 1564 0
-6996 -7061 1562 0
-6996 -7059 1560 0
-6996 -7057 1558 0
-6996 -7055 1556 0
-6996 -7053 1554 0
-6996 -7051 1552 0
-6996 -7049 1550 0
-6996 -7047 1548 0
-6996 -7045 1546 0
-6996 -7043 1544 0
-6996 -7041 1542 0
-6996 -7039 1540 0
-6996 -7037 1538 0
-6996 -7035 1536 0
-6996 -7033 1534 0
-6996 -7031 1532 0
-6996 -7029 1530 0
-6996 -7027 1528 0
-6996 -7025 1526 0
-6996 -7023 1524 0
-6996 -7021 1522 0
-6996 -7019 1520 0
-6996 -7017 1518 0
-6996 -7015 1516 0
-6996 -7013 1514 0
-6996 -7011 1512 0
-6996 -7009 1510 0
-6996 -7007 1508 0
-6996 -7005 1506 0
-6996 -7003 1504 0
-6996 -7002 1502 0
-6994 1564 0
-6994 -7063 1562 0
-6994 -7061 1560 0
-6994 -7059 1558 0
-6994 -7057 1556 0
-6994 -7055 1554 0
-6994 -7053 1552 0
-6994 -7051 1550 0
-6994 -7049 1548 0
-6994 -7047 1546 0
-6994 -7045 1544 0
-6994 -7043 1542 0
-6994 -7041 1540 0
-6994 -7039 1538 0
-6994 -7037 1536 0
-6994 -7035 1534 0
-6994 -7033 1532 0
-6994 -7031 1530 0
-6994 -7029 1528 0
-6994 -7027 1526 0
-6994 -7025 1524 0
-6994 -7023 1522 0
-6994 -7021 1520 0
-6994 -7019 1518 0
-6994 -7017 1516 0
-6994 -7015 1514 0
-6994 -7013 1512 0
-6994 -7011 1510 0
-6994 -7009 1508 0
-6994 -7007 1506 0
-6994 -7005 1504 0
-6994 -7003 1502 0
-6994 -7002 1500 0
-6992 1562 0
-6992 -7063 1560 0
-6992 -7061 1558 0
-6992 -7059 1556 0
-6992 -7057 1554 0
-6992 -7055 1552 0
-6992 -7053 1550 0
-6992 -7051 1548 0
-6992 -7049 1546 0
-6992 -7047 1544 0
-6992 -7045 1542 0
-6992 -7043 1540 0
-6992 -7041 1538 0
-6992 -7039 1536 0
-6992 -7037 1534 0
-6992 -7035 1532 0
-6992 -7033 1530 0
-6992 -7031 1528 0
-6992 -7029 1526 0
-6992 -7027 1524 0
-6992 -7025 1522 0
-6992 -7023 1520 0
-6992 -7021 1518 0
-6992 -7019 1516 0
-6992 -7017 1514 0
-6992 -7015 1512 0
-6992 -7013 1510 0
-6992 -7011 1508 0
-6992 -7009 1506 0
-6992 -7007 1504 0
-6992 -7005 1502 0
-6992 -7003 1500 0
-6992 -7002 1498 0
-6990 1560 0
-6990 -7063 1558 0
-6990 -7061 1556 0
-6990 -7059 1554 0
-6990 -7057 1552 0
-6990 -7055 1550 0
-6990 -7053 1548 0
-6990 -7051 1546 0
-6990 -7049 1544 0
-6990 -7047 1542 0
-6990 -7045 1540 0
-6990 -7043 1538 0
-6990 -7041 1536 0
-6990 -7039 1534 0
-6990 -7037 1532 0
-6990 -7035 1530 0
-6990 -7033 1528 0
-6990 -7031 1526 0
-6990 -7029 1524 0
-6990 -7027 1522 0
-6990 -7025 1520 0
-6990 -7023 1518 0
-6990 -7021 1516 0
-6990 -7019 1514 0
-6990 -7017 1512 0
-6990 -7015 1510 0
-6990 -7013 1508 0
-6990 -7011 1506 0
-6990 -7009 1504 0
-6990 -7007 1502 0
-6990 -7005 1500 0
-6990 -7003 1498 0
-6990 -7002 1496 0
-6988 1558 0
-6988 -7063 1556 0
-6988 -7061 1554 0
-6988 -7059 1552 0
-6988 -7057 1550 0
-6988 -7055 1548 0
-6988 -7053 1546 0
-6988 -7051 1544 0
-6988 -7049 1542 0
-6988 -7047 1540 0
-6988 -7045 1538 0
-6988 -7043 1536 0
-6988 -7041 1534 0
-6988 -7039 1532 0
-6988 -7037 1530 0
-6988 -7035 1528 0
-6988 -7033 1526 0
-6988 -7031 1524 0
-6988 -7029 1522 0
-6988 -7027 1520 0
-6988 -7025 1518 0
-6988 -7023 1516 0
-6988 -7021 1514 0
-6988 -7019 1512 0
-6988 -7017 1510 0
-6988 -7015 1508 0
-6988 -7013 1506 0
-6988 -7011 1504 0
-6988 -7009 1502 0
-6988 -7007 1500 0
-6988 -7005 1498 0
-6988 -7003 1496 0
-6988 -7002 1494 0
-6986 1556 0
-6986 -7063 1554 0
-6986 -7061 1552 0
-6986 -7059 1550 0
-6986 -7057 1548 0
-6986 -7055 1546 0
-6986 -7053 1544 0
-6986 -7051 1542 0
-6986 -7049 1540 0
-6986 -7047 1538 0
-6986 -7045 1536 0
-6986 -7043 1534 0
-6986 -7041 1532 0
-6986 -7039 1530 0
-6986 -7037 1528 0
-6986 -7035 1526 0
-6986 -7033 1524 0
-6986 -7031 1522 0
-6986 -7029 1520 0
-6986 -7027 1518 0
-6986 -7025 1516 0
-6986 -7023 1514 0
-6986 -7021 1512 0
-6986 -7019 1510 0
-6986 -7017 1508 0
-6986 -7015 1506 0
-6986 -7013 1504 0
-6986 -7011 1502 0
-6986 -7009 1500 0
-6986 -7007 1498 0
-6986 -7005 1496 0
-6986 -7003 1494 0
-6986 -7002 1492 0
-6984 1554 0
-6984 -7063 1552 0
-6984 -7061 1550 0
-6984 -7059 1548 0
-6984 -7057 1546 0
-6984 -7055 1544 0
-6984 -7053 1542 0
-6984 -7051 1540 0
-6984 -7049 1538 0
-6984 -7047 1536 0
-6984 -7045 1534 0
-6984 -7043 1532 0
-6984 -7041 1530 0
-6984 -7039 1528 0
-6984 -7037 1526 0
-6984 -7035 1524 0
-6984 -7033 1522 0
-6984 -7031 1520 0
-6984 -7029 1518 0
-6984 -7027 1516 0
-6984 -7025 1514 0
-6984 -7023 1512 0
-6984 -7021 1510 0
-6984 -7019 1508 0
-6984 -7017 1506 0
-6984 -7015 1504 0
-6984 -7013 1502 0
-6984 -7011 1500 0
-6984 -7009 1498 0
-6984 -7007 1496 0
-6984 -7005 1494 0
-6984 -7003 1492 0
-6984 -7002 1490 0
-6982 1552 0
-6982 -7063 1550 0
-6982 -7061 1548 0
-6982 -7059 1546 0
-6982 -7057 1544 0
-6982 -7055 1542 0
-6982 -7053 1540 0
-6982 -7051 1538 0
-6982 -7049 1536 0
-6982 -7047 1534 0
-6982 -7045 1532 0
-6982 -7043 1530 0
-6982 -7041 1528 0
-6982 -7039 1526 0
-6982 -7037 1524 0
-6982 -7035 1522 0
-6982 -7033 1520 0
-6982 -7031 1518 0
-6982 -7029 1516 0
-6982 -7027 1514 0
-6982 -7025 1512 0
-6982 -7023 1510 0
-6982 -7021 1508 0
-6982 -7019 1506 0
-6982 -7017 1504 0
-6982 -7015 1502 0
-6982 -7013 1500 0
-6982 -7011 1498 0
-6982 -7009 1496 0
-6982 -7007 1494 0
-6982 -7005 1492 0
-6982 -7003 1490 0
-6982 -7002 1488 0
-6980 1550 0
-6980 -7063 1548 0
-6980 -7061 1546 0
-6980 -7059 1544 0
-6980 -7057 1542 0
-6980 -7055 1540 0
-6980 -7053 1538 0
-6980 -7051 1536 0
-6980 -7049 1534 0
-6980 -7047 1532 0
-6980 -7045 1530 0
-6980 -7043 1528 0
-6980 -7041 1526 0
-6980 -7039 1524 0
-6980 -7037 1522 0
-6980 -7035 1520 0
-6980 -7033 1518 0
-6980 -7031 1516 0
-6980 -7029 1514 0
-6980 -7027 1512 0
-6980 -7025 1510 0
-6980 -7023 1508 0
-6980 -7021 1506 0
-6980 -7019 1504 0
-6980 -7017 1502 0
-6980 -7015 1500 0
-6980 -7013 1498 0
-6980 -7011 1496 0
-6980 -7009 1494 0
-6980 -7007 1492 0
-6980 -7005 1490 0
-6980 -7003 1488 0
-6980 -7002 1486 0
-6978 1548 0
-6978 -7063 1546 0
-6978 -7061 1544 0
-6978 -7059 1542 0
-6978 -7057 1540 0
-6978 -7055 1538 0
-6978 -7053 1536 0
-6978 -7051 1534 0
-6978 -7049 1532 0
-6978 -7047 1530 0
-6978 -7045 1528 0
-6978 -7043 1526 0
-6978 -7041 1524 0
-6978 -7039 1522 0
-6978 -7037 1520 0
-6978 -7035 1518 0
-6978 -7033 1516 0
-6978 -7031 1514 0
-6978 -7029 1512 0
-6978 -7027 1510 0
-6978 -7025 1508 0
-6978 -7023 1506 0
-6978 -7021 1504 0
-6978 -7019 1502 0
-6978 -7017 1500 0
-6978 -7015 1498 0
-6978 -7013 1496 0
-6978 -7011 1494 0
-6978 -7009 1492 0
-6978 -7007 1490 0
-6978 -7005 1488 0
-6978 -7003 1486 0
-6978 -7002 1484 0
-6976 1546 0
-6976 -7063 1544 0
-6976 -7061 1542 0
-6976 -7059 1540 0
-6976 -7057 1538 0
-6976 -7055 1536 0
-6976 -7053 1534 0
-6976 -7051 1532 0
-6976 -7049 1530 0
-6976 -7047 1528 0
-6976 -7045 1526 0
-6976 -7043 1524 0
-6976 -7041 1522 0
-6976 -7039 1520 0
-6976 -7037 1518 0
-6976 -7035 1516 0
-6976 -7033 1514 0
-6976 -7031 1512 0
-6976 -7029 1510 0
-6976 -7027 1508 0
-6976 -7025 1506 0
-6976 -7023 1504 0
-6976 -7021 1502 0
-6976 -7019 1500 0
-6976 -7017 1498 0
-6976 -7015 1496 0
-6976 -7013 1494 0
-6976 -7011 1492 0
-6976 -7009 1490 0
-6976 -7007 1488 0
-6976 -7005 1486 0
-6976 -7003 1484 0
-6976 -7002 1482 0
-6974 1544 0
-6974 -7063 1542 0
-6974 -7061 1540 0
-6974 -7059 1538 0
-6974 -7057 1536 0
-6974 -7055 1534 0
-6974 -7053 1532 0
-6974 -7051 1530 0
-6974 -7049 1528 0
-6974 -7047 1526 0
-6974 -7045 1524 0
-6974 -7043 1522 0
-6974 -7041 1520 0
-6974 -7039 1518 0
-6974 -7037 1516 0
-6974 -7035 1514 0
-6974 -7033 1512 0
-6974 -7031 1510 0
-6974 -7029 1508 0
-6974 -7027 1506 0
-6974 -7025 1504 0
-6974 -7023 1502 0
-6974 -7021 1500 0
-6974 -7019 1498 0
-6974 -7017 1496 0
-6974 -7015 1494 0
-6974 -7013 1492 0
-6974 -7011 1490 0
-6974 -7009 1488 0
-6974 -7007 1486 0
-6974 -7005 1484 0
-6974 -7003 1482 0
-6974 -7002 1480 0
-6972 1542 0
-6972 -7063 1540 0
-6972 -7061 1538 0
-6972 -7059 1536 0
-6972 -7057 1534 0
-6972 -7055 1532 0
-6972 -7053 1530 0
-6972 -7051 1528 0
-6972 -7049 1526 0
-6972 -7047 1524 0
-6972 -7045 1522 0
-6972 -7043 1520 0
-6972 -7041 1518 0
-6972 -7039 1516 0
-6972 -7037 1514 0
-6972 -7035 1512 0
-6972 -7033 1510 0
-6972 -7031 1508 0
-6972 -7029 1506 0
-6972 -7027 1504 0
-6972 -7025 1502 0
-6972 -7023 1500 0
-6972 -7021 1498 0
-6972 -7019 1496 0
-6972 -7017 1494 0
-6972 -7015 1492 0
-6972 -7013 1490 0
-6972 -7011 1488 0
-6972 -7009 1486 0
-6972 -7007 1484 0
-6972 -7005 1482 0
-6972 -7003 1480 0
-6972 -7002 1478 0
-6970 1540 0
-6970 -7063 1538 0
-6970 -7061 1536 0
-6970 -7059 1534 0
-6970 -7057 1532 0
-6970 -7055 1530 0
-6970 -7053 1528 0
-6970 -7051 1526 0
-6970 -7049 1524 0
-6970 -7047 1522 0
-6970 -7045 1520 0
-6970 -7043 1518 0
-6970 -7041 1516 0
-6970 -7039 1514 0
-6970 -7037 1512 0
-6970 -7035 1510 0
-6970 -7033 1508 0
-6970 -7031 1506 0
-6970 -7029 1504 0
-6970 -7027 1502 0
-6970 -7025 1500 0
-6970 -7023 1498 0
-6970 -7021 1496 0
-6970 -7019 1494 0
-6970 -7017 1492 0
-6970 -7015 1490 0
-6970 -7013 1488 0
-6970 -7011 1486 0
-6970 -7009 1484 0
-6970 -7007 1482 0
-6970 -7005 1480 0
-6970 -7003 1478 0
-6970 -7002 1476 0
-6968 1538 0
-6968 -7063 1536 0
-6968 -7061 1534 0
-6968 -7059 1532 0
-6968 -7057 1530 0
-6968 -7055 1528 0
-6968 -7053 1526 0
-6968 -7051 1524 0
-6968 -7049 1522 0
-6968 -7047 1520 0
-6968 -7045 1518 0
-6968 -7043 1516 0
-6968 -7041 1514 0
-6968 -7039 1512 0
-6968 -7037 1510 0
-6968 -7035 1508 0
-6968 -7033 1506 0
-6968 -7031 1504 0
-6968 -7029 1502 0
-6968 -7027 1500 0
-6968 -7025 1498 0
-6968 -7023 1496 0
-6968 -7021 1494 0
-6968 -7019 1492 0
-6968 -7017 1490 0
-6968 -7015 1488 0
-6968 -7013 1486 0
-6968 -7011 1484 0
-6968 -7009 1482 0
-6968 -7007 1480 0
-6968 -7005 1478 0
-6968 -7003 1476 0
-6968 -7002 1474 0
-6966 1536 0
-6966 -7063 1534 0
-6966 -7061 1532 0
-6966 -7059 1530 0
-6966 -7057 1528 0
-6966 -7055 1526 0
-6966 -7053 1524 0
-6966 -7051 1522 0
-6966 -7049 1520 0
-6966 -7047 1518 0
-6966 -7045 1516 0
-6966 -7043 1514 0
-6966 -7041 1512 0
-6966 -7039 1510 0
-6966 -7037 1508 0
-6966 -7035 1506 0
-6966 -7033 1504 0
-6966 -7031 1502 0
-6966 -7029 1500 0
-6966 -7027 1498 0
-6966 -7025 1496 0
-6966 -7023 1494 0
-6966 -7021 1492 0
-6966 -7019 1490 0
-6966 -7017 1488 0
-6966 -7015 1486 0
-6966 -7013 1484 0
-6966 -7011 1482 0
-6966 -7009 1480 0
-6966 -7007 1478 0
-6966 -7005 1476 0
-6966 -7003 1474 0
-6966 -7002 1472 0
-6964 1534 0
-6964 -7063 1532 0
-6964 -7061 1530 0
-6964 -7059 1528 0
-6964 -7057 1526 0
-6964 -7055 1524 0
-6964 -7053 1522 0
-6964 -7051 1520 0
-6964 -7049 1518 0
-6964 -7047 1516 0
-6964 -7045 1514 0
-6964 -7043 1512 0
-6964 -7041 1510 0
-6964 -7039 1508 0
-6964 -7037 1506 0
-6964 -7035 1504 0
-6964 -7033 1502 0
-6964 -7031 1500 0
-6964 -7029 1498 0
-6964 -7027 1496 0
-6964 -7025 1494 0
-6964 -7023 1492 0
-6964 -7021 1490 0
-6964 -7019 1488 0
-6964 -7017 1486 0
-6964 -7015 1484 0
-6964 -7013 1482 0
-6964 -7011 1480 0
-6964 -7009 1478 0
-6964 -7007 1476 0
-6964 -7005 1474 0
-6964 -7003 1472 0
-6964 -7002 1470 0
-6962 1532 0
-6962 -7063 1530 0
-6962 -7061 1528 0
-6962 -7059 1526 0
-6962 -7057 1524 0
-6962 -7055 1522 0
-6962 -7053 1520 0
-6962 -7051 1518 0
-6962 -7049 1516 0
-6962 -7047 1514 0
-6962 -7045 1512 0
-6962 -7043 1510 0
-6962 -7041 1508 0
-6962 -7039 1506 0
-6962 -7037 1504 0
-6962 -7035 1502 0
-6962 -7033 1500 0
-6962 -7031 1498 0
-6962 -7029 1496 0
-6962 -7027 1494 0
-6962 -7025 1492 0
-6962 -7023 1490 0
-6962 -7021 1488 0
-6962 -7019 1486 0
-6962 -7017 1484 0
-6962 -7015 1482 0
-6962 -7013 1480 0
-6962 -7011 1478 0
-6962 -7009 1476 0
-6962 -7007 1474 0
-6962 -7005 1472 0
-6962 -7003 1470 0
-6962 -7002 1468 0
-6960 1530 0
-6960 -7063 1528 0
-6960 -7061 1526 0
-6960 -7059 1524 0
-6960 -7057 1522 0
-6960 -7055 1520 0
-6960 -7053 1518 0
-6960 -7051 1516 0
-6960 -7049 1514 0
-6960 -7047 1512 0
-6960 -7045 1510 0
-6960 -7043 1508 0
-6960 -7041 1506 0
-6960 -7039 1504 0
-6960 -7037 1502 0
-6960 -7035 1500 0
-6960 -7033 1498 0
-6960 -7031 1496 0
-6960 -7029 1494 0
-6960 -7027 1492 0
-6960 -7025 1490 0
-6960 -7023 1488 0
-6960 -7021 1486 0
-6960 -7019 1484 0
-6960 -7017 1482 0
-6960 -7015 1480 0
-6960 -7013 1478 0
-6960 -7011 1476 0
-6960 -7009 1474 0
-6960 -7007 1472 0
-6960 -7005 1470 0
-6960 -7003 1468 0
-6960 -7002 1466 0
-6958 1528 0
-6958 -7063 1526 0
-6958 -7061 1524 0
-6958 -7059 1522 0
-6958 -7057 1520 0
-6958 -7055 1518 0
-6958 -7053 1516 0
-6958 -7051 1514 0
-6958 -7049 1512 0
-6958 -7047 1510 0
-6958 -7045 1508 0
-6958 -7043 1506 0
-6958 -7041 1504 0
-6958 -7039 1502 0
-6958 -7037 1500 0
-6958 -7035 1498 0
-6958 -7033 1496 0
-6958 -7031 1494 0
-6958 -7029 1492 0
-6958 -7027 1490 0
-6958 -7025 1488 0
-6958 -7023 1486 0
-6958 -7021 1484 0
-6958 -7019 1482 0
-6958 -7017 1480 0
-6958 -7015 1478 0
-6958 -7013 1476 0
-6958 -7011 1474 0
-6958 -7009 1472 0
-6958 -7007 1470 0
-6958 -7005 1468 0
-6958 -7003 1466 0
-6958 -7002 1464 0
-6956 1526 0
-6956 -7063 1524 0
-6956 -7061 1522 0
-6956 -7059 1520 0
-6956 -7057 1518 0
-6956 -7055 1516 0
-6956 -7053 1514 0
-6956 -7051 1512 0
-6956 -7049 1510 0
-6956 -7047 1508 0
-6956 -7045 1506 0
-6956 -7043 1504 0
-6956 -7041 1502 0
-6956 -7039 1500 0
-6956 -7037 1498 0
-6956 -7035 1496 0
-6956 -7033 1494 0
-6956 -7031 1492 0
-6956 -7029 1490 0
-6956 -7027 1488 0
-6956 -7025 1486 0
-6956 -7023 1484 0
-6956 -7021 1482 0
-6956 -7019 1480 0
-6956 -7017 1478 0
-6956 -7015 1476 0
-6956 -7013 1474 0
-6956 -7011 1472 0
-6956 -7009 1470 0
-6956 -7007 1468 0
-6956 -7005 1466 0
-6956 -7003 1464 0
-6956 -7002 1462 0
-6954 1524 0
-6954 -7063 1522 0
-6954 -7061 1520 0
-6954 -7059 1518 0
-6954 -7057 1516 0
-6954 -7055 1514 0
-6954 -7053 1512 0
-6954 -7051 1510 0
-6954 -7049 1508 0
-6954 -7047 1506 0
-6954 -7045 1504 0
-6954 -7043 1502 0
-6954 -7041 1500 0
-6954 -7039 1498 0
-6954 -7037 1496 0
-6954 -7035 1494 0
-6954 -7033 1492 0
-6954 -7031 1490 0
-6954 -7029 1488 0
-6954 -7027 1486 0
-6954 -7025 1484 0
-6954 -7023 1482 0
-6954 -7021 1480 0
-6954 -7019 1478 0
-6954 -7017 1476 0
-6954 -7015 1474 0
-6954 -7013 1472 0
-6954 -7011 1470 0
-6954 -7009 1468 0
-6954 -7007 1466 0
-6954 -7005 1464 0
-6954 -7003 1462 0
-6954 -7002 1460 0
-6952 1522 0
-6952 -7063 1520 0
-6952 -7061 1518 0
-6952 -7059 1516 0
-6952 -7057 1514 0
-6952 -7055 1512 0
-6952 -7053 1510 0
-6952 -7051 1508 0
-6952 -7049 1506 0
-6952 -7047 1504 0
-6952 -7045 1502 0
-6952 -7043 1500 0
-6952 -7041 1498 0
-6952 -7039 1496 0
-6952 -7037 1494 0
-6952 -7035 1492 0
-6952 -7033 1490 0
-6952 -7031 1488 0
-6952 -7029 1486 0
-6952 -7027 1484 0
-6952 -7025 1482 0
-6952 -7023 1480 0
-6952 -7021 1478 0
-6952 -7019 1476 0
-6952 -7017 1474 0
-6952 -7015 1472 0
-6952 -7013 1470 0
-6952 -7011 1468 0
-6952 -7009 1466 0
-6952 -7007 1464 0
-6952 -7005 1462 0
-6952 -7003 1460 0
-6952 -7002 1458 0
-6950 1520 0
-6950 -7063 1518 0
-6950 -7061 1516 0
-6950 -7059 1514 0
-6950 -7057 1512 0
-6950 -7055 1510 0
-6950 -7053 1508 0
-6950 -7051 1506 0
-6950 -7049 1504 0
-6950 -7047 1502 0
-6950 -7045 1500 0
-6950 -7043 1498 0
-6950 -7041 1496 0
-6950 -7039 1494 0
-6950 -7037 1492 0
-6950 -7035 1490 0
-6950 -7033 1488 0
-6950 -7031 1486 0
-6950 -7029 1484 0
-6950 -7027 1482 0
-6950 -7025 1480 0
-6950 -7023 1478 0
-6950 -7021 1476 0
-6950 -7019 1474 0
-6950 -7017 1472 0
-6950 -7015 1470 0
-6950 -7013 1468 0
-6950 -7011 1466 0
-6950 -7009 1464 0
-6950 -7007 1462 0
-6950 -7005 1460 0
-6950 -7003 1458 0
-6950 -7002 1456 0
-6948 1518 0
-6948 -7063 1516 0
-6948 -7061 1514 0
-6948 -7059 1512 0
-6948 -7057 1510 0
-6948 -7055 1508 0
-6948 -7053 1506 0
-6948 -7051 1504 0
-6948 -7049 1502 0
-6948 -7047 1500 0
-6948 -7045 1498 0
-6948 -7043 1496 0
-6948 -7041 1494 0
-6948 -7039 1492 0
-6948 -7037 1490 0
-6948 -7035 1488 0
-6948 -7033 1486 0
-6948 -7031 1484 0
-6948 -7029 1482 0
-6948 -7027 1480 0
-6948 -7025 1478 0
-6948 -7023 1476 0
-6948 -7021 1474 0
-6948 -7019 1472 0
-6948 -7017 1470 0
-6948 -7015 1468 0
-6948 -7013 1466 0
-6948 -7011 1464 0
-6948 -7009 1462 0
-6948 -7007 1460 0
-6948 -7005 1458 0
-6948 -7003 1456 0
-6948 -7002 1454 0
-6946 1516 0
-6946 -7063 1514 0
-6946 -7061 1512 0
-6946 -7059 1510 0
-6946 -7057 1508 0
-6946 -7055 1506 0
-6946 -7053 1504 0
-6946 -7051 1502 0
-6946 -7049 1500 0
-6946 -7047 1498 0
-6946 -7045 1496 0
-6946 -7043 1494 0
-6946 -7041 1492 0
-6946 -7039 1490 0
-6946 -7037 1488 0
-6946 -7035 1486 0
-6946 -7033 1484 0
-6946 -7031 1482 0
-6946 -7029 1480 0
-6946 -7027 1478 0
-6946 -7025 1476 0
-6946 -7023 1474 0
-6946 -7021 1472 0
-6946 -7019 1470 0
-6946 -7017 1468 0
-6946 -7015 1466 0
-6946 -7013 1464 0
-6946 -7011 1462 0
-6946 -7009 1460 0
-6946 -7007 1458 0
-6946 -7005 1456 0
-6946 -7003 1454 0
-6946 -7002 1452 0
-6944 1514 0
-6944 -7063 1512 0
-6944 -7061 1510 0
-6944 -7059 1508 0
-6944 -7057 1506 0
-6944 -7055 1504 0
-6944 -7053 1502 0
-6944 -7051 1500 0
-6944 -7049 1498 0
-6944 -7047 1496 0
-6944 -7045 1494 0
-6944 -7043 1492 0
-6944 -7041 1490 0
-6944 -7039 1488 0
-6944 -7037 1486 0
-6944 -7035 1484 0
-6944 -7033 1482 0
-6944 -7031 1480 0
-6944 -7029 1478 0
-6944 -7027 1476 0
-6944 -7025 1474 0
-6944 -7023 1472 0
-6944 -7021 1470 0
-6944 -7019 1468 0
-6944 -7017 1466 0
-6944 -7015 1464 0
-6944 -7013 1462 0
-6944 -7011 1460 0
-6944 -7009 1458 0
-6944 -7007 1456 0
-6944 -7005 1454 0
-6944 -7003 1452 0
-6944 -7002 1450 0
-6942 1512 0
-6942 -7063 1510 0
-6942 -7061 1508 0
-6942 -7059 1506 0
-6942 -7057 1504 0
-6942 -7055 1502 0
-6942 -7053 1500 0
-6942 -7051 1498 0
-6942 -7049 1496 0
-6942 -7047 1494 0
-6942 -7045 1492 0
-6942 -7043 1490 0
-6942 -7041 1488 0
-6942 -7039 1486 0
-6942 -7037 1484 0
-6942 -7035 1482 0
-6942 -7033 1480 0
-6942 -7031 1478 0
-6942 -7029 1476 0
-6942 -7027 1474 0
-6942 -7025 1472 0
-6942 -7023 1470 0
-6942 -7021 1468 0
-6942 -7019 1466 0
-6942 -7017 1464 0
-6942 -7015 1462 0
-6942 -7013 1460 0
-6942 -7011 1458 0
-6942 -7009 1456 0
-6942 -7007 1454 0
-6942 -7005 1452 0
-6942 -7003 1450 0
-6942 -7002 1448 0
-6940 1510 0
-6940 -7063 1508 0
-6940 -7061 1506 0
-6940 -7059 1504 0
-6940 -7057 1502 0
-6940 -7055 1500 0
-6940 -7053 1498 0
-6940 -7051 1496 0
-6940 -7049 1494 0
-6940 -7047 1492 0
-6940 -7045 1490 0
-6940 -7043 1488 0
-6940 -7041 1486 0
-6940 -7039 1484 0
-6940 -7037 1482 0
-6940 -7035 1480 0
-6940 -7033 1478 0
-6940 -7031 1476 0
-6940 -7029 1474 0
-6940 -7027 1472 0
-6940 -7025 1470 0
-6940 -7023 1468 0
-6940 -7021 1466 0
-6940 -7019 1464 0
-6940 -7017 1462 0
-6940 -7015 1460 0
-6940 -7013 1458 0
-6940 -7011 1456 0
-6940 -7009 1454 0
-6940 -7007 1452 0
-6940 -7005 1450 0
-6940 -7003 1448 0
-6940 -7002 1446 0
-6939 1508 0
-6939 -7063 1506 0
-6939 -7061 1504 0
-6939 -7059 1502 0
-6939 -7057 1500 0
-6939 -7055 1498 0
-6939 -7053 1496 0
-6939 -7051 1494 0
-6939 -7049 1492 0
-6939 -7047 1490 0
-6939 -7045 1488 0
-6939 -7043 1486 0
-6939 -7041 1484 0
-6939 -7039 1482 0
-6939 -7037 1480 0
-6939 -7035 1478 0
-6939 -7033 1476 0
-6939 -7031 1474 0
-6939 -7029 1472 0
-6939 -7027 1470 0
-6939 -7025 1468 0
-6939 -7023 1466 0
-6939 -7021 1464 0
-6939 -7019 1462 0
-6939 -7017 1460 0
-6939 -7015 1458 0
-6939 -7013 1456 0
-6939 -7011 1454 0
-6939 -7009 1452 0
-6939 -7007 1450 0
-6939 -7005 1448 0
-6939 -7003 1446 0
-6939 -7002 1445 0
c ((aux1374 + aux1375 - shift(num_occupied_by_types_00002, -64))<=64)
7580 -1572 0
7581 -1573 0
7583 -1575 0
7585 -1577 0
7587 -1579 0
7589 -1581 0
7591 -1583 0
7593 -1585 0
7595 -1587 0
7597 -1589 0
7599 -1591 0
7601 -1593 0
7603 -1595 0
7605 -1597 0
7607 -1599 0
7609 -1601 0
7611 -1603 0
7613 -1605 0
7615 -1607 0
7617 -1609 0
7619 -1611 0
7621 -1613 0
7623 -1615 0
7625 -1617 0
7627 -1619 0
7629 -1621 0
7631 -1623 0
7633 -1625 0
7635 -1627 0
7637 -1629 0
7639 -1631 0
7641 -1633 0
7517 -1572 0
7517 7580 -1573 0
7517 7581 -1575 0
7517 7583 -1577 0
7517 7585 -1579 0
7517 7587 -1581 0
7517 7589 -1583 0
7517 7591 -1585 0
7517 7593 -1587 0
7517 7595 -1589 0
7517 7597 -1591 0
7517 7599 -1593 0
7517 7601 -1595 0
7517 7603 -1597 0
7517 7605 -1599 0
7517 7607 -1601 0
7517 7609 -1603 0
7517 7611 -1605 0
7517 7613 -1607 0
7517 7615 -1609 0
7517 7617 -1611 0
7517 7619 -1613 0
7517 7621 -1615 0
7517 7623 -1617 0
7517 7625 -1619 0
7517 7627 -1621 0
7517 7629 -1623 0
7517 7631 -1625 0
7517 7633 -1627 0
7517 7635 -1629 0
7517 7637 -1631 0
7517 7639 -1633 0
7517 7641 -1635 0
7518 -1573 0
7518 7580 -1575 0
7518 7581 -1577 0
7518 7583 -1579 0
7518 7585 -1581 0
7518 7587 -1583 0
7518 7589 -1585 0
7518 7591 -1587 0
7518 7593 -1589 0
7518 7595 -1591 0
7518 7597 -1593 0
7518 7599 -1595 0
7518 7601 -1597 0
7518 7603 -1599 0
7518 7605 -1601 0
7518 7607 -1603 0
7518 7609 -1605 0
7518 7611 -1607 0
7518 7613 -1609 0
7518 7615 -1611 0
7518 7617 -1613 0
7518 7619 -1615 0
7518 7621 -1617 0
7518 7623 -1619 0
7518 7625 -1621 0
7518 7627 -1623 0
7518 7629 -1625 0
7518 7631 -1627 0
7518 7633 -1629 0
7518 7635 -1631 0
7518 7637 -1633 0
7518 7639 -1635 0
7518 7641 -1637 0
7520 -1575 0
7520 7580 -1577 0
7520 7581 -1579 0
7520 7583 -1581 0
7520 7585 -1583 0
7520 7587 -1585 0
7520 7589 -1587 0
7520 7591 -1589 0
7520 7593 -1591 0
7520 7595 -1593 0
7520 7597 -1595 0
7520 7599 -1597 0
7520 7601 -1599 0
7520 7603 -1601 0
7520 7605 -1603 0
7520 7607 -1605 0
7520 7609 -1607 0
7520 7611 -1609 0
7520 7613 -1611 0
7520 7615 -1613 0
7520 7617 -1615 0
7520 7619 -1617 0
7520 7621 -1619 0
7520 7623 -1621 0
7520 7625 -1623 0
7520 7627 -1625 0
7520 7629 -1627 0
7520 7631 -1629 0
7520 7633 -1631 0
7520 7635 -1633 0
7520 7637 -1635 0
7520 7639 -1637 0
7520 7641 -1639 0
7522 -1577 0
7522 7580 -1579 0
7522 7581 -1581 0
7522 7583 -1583 0
7522 7585 -1585 0
7522 7587 -1587 0
7522 7589 -1589 0
7522 7591 -1591 0
7522 7593 -1593 0
7522 7595 -1595 0
7522 7597 -1597 0
7522 7599 -1599 0
7522 7601 -1601 0
7522 7603 -1603 0
7522 7605 -1605 0
7522 7607 -1607 0
7522 7609 -1609 0
7522 7611 -1611 0
7522 7613 -1613 0
7522 7615 -1615 0
7522 7617 -1617 0
7522 7619 -1619 0
7522 7621 -1621 0
7522 7623 -1623 0
7522 7625 -1625 0
7522 7627 -1627 0
7522 7629 -1629 0
7522 7631 -1631 0
7522 7633 -1633 0
7522 7635 -1635 0
7522 7637 -1637 0
7522 7639 -1639 0
7522 7641 -1641 0
7524 -1579 0
7524 7580 -1581 0
7524 7581 -1583 0
7524 7583 -1585 0
7524 7585 -1587 0
7524 7587 -1589 0
7524 7589 -1591 0
7524 7591 -1593 0
7524 7593 -1595 0
7524 7595 -1597 0
7524 7597 -1599 0
7524 7599 -1601 0
7524 7601 -1603 0
7524 7603 -1605 0
7524 7605 -1607 0
7524 7607 -1609 0
7524 7609 -1611 0
7524 7611 -1613 0
7524 7613 -1615 0
7524 7615 -1617 0
7524 7617 -1619 0
7524 7619 -1621 0
7524 7621 -1623 0
7524 7623 -1625 0
7524 7625 -1627 0
7524 7627 -1629 0
7524 7629 -1631 0
7524 7631 -1633 0
7524 7633 -1635 0
7524 7635 -1637 0
7524 7637 -1639 0
7524 7639 -1641 0
7524 7641 -1643 0
7526 -1581 0
7526 7580 -1583 0
7526 7581 -1585 0
7526 7583 -1587 0
7526 7585 -1589 0
7526 7587 -1591 0
7526 7589 -1593 0
7526 7591 -1595 0
7526 7593 -1597 0
7526 7595 -1599 0
7526 7597 -1601 0
7526 7599 -1603 0
7526 7601 -1605 0
7526 7603 -1607 0
7526 7605 -1609 0
7526 7607 -1611 0
7526 7609 -1613 0
7526 7611 -1615 0
7526 7613 -1617 0
7526 7615 -1619 0
7526 7617 -1621 0
7526 7619 -1623 0
7526 7621 -1625 0
7526 7623 -1627 0
7526 7625 -1629 0
7526 7627 -1631 0
7526 7629 -1633 0
7526 7631 -1635 0
7526 7633 -1637 0
7526 7635 -1639 0
7526 7637 -1641 0
7526 7639 -1643 0
7526 7641 -1645 0
7528 -1583 0
7528 7580 -1585 0
7528 7581 -1587 0
7528 7583 -1589 0
7528 7585 -1591 0
7528 7587 -1593 0
7528 7589 -1595 0
7528 7591 -1597 0
7528 7593 -1599 0
7528 7595 -1601 0
7528 7597 -1603 0
7528 7599 -1605 0
7528 7601 -1607 0
7528 7603 -1609 0
7528 7605 -1611 0
7528 7607 -1613 0
7528 7609 -1615 0
7528 7611 -1617 0
7528 7613 -1619 0
7528 7615 -1621 0
7528 7617 -1623 0
7528 7619 -1625 0
7528 7621 -1627 0
7528 7623 -1629 0
7528 7625 -1631 0
7528 7627 -1633 0
7528 7629 -1635 0
7528 7631 -1637 0
7528 7633 -1639 0
7528 7635 -1641 0
7528 7637 -1643 0
7528 7639 -1645 0
7528 7641 -1647 0
7530 -1585 0
7530 7580 -1587 0
7530 7581 -1589 0
7530 7583 -1591 0
7530 7585 -1593 0
7530 7587 -1595 0
7530 7589 -1597 0
7530 7591 -1599 0
7530 7593 -1601 0
7530 7595 -1603 0
7530 7597 -1605 0
7530 7599 -1607 0
7530 7601 -1609 0
7530 7603 -1611 0
7530 7605 -1613 0
7530 7607 -1615 0
7530 7609 -1617 0
7530 7611 -1619 0
7530 7613 -1621 0
7530 7615 -1623 0
7530 7617 -1625 0
7530 7619 -1627 0
7530 7621 -1629 0
7530 7623 -1631 0
7530 7625 -1633 0
7530 7627 -1635 0
7530 7629 -1637 0
7530 7631 -1639 0
7530 7633 -1641 0
7530 7635 -1643 0
7530 7637 -1645 0
7530 7639 -1647 0
7530 7641 -1649 0
7532 -1587 0
7532 7580 -1589 0
7532 7581 -1591 0
7532 7583 -1593 0
7532 7585 -1595 0
7532 7587 -1597 0
7532 7589 -1599 0
7532 7591 -1601 0
7532 7593 -1603 0
7532 7595 -1605 0
7532 7597 -1607 0
7532 7599 -1609 0
7532 7601 -1611 0
7532 7603 -1613 0
7532 7605 -1615 0
7532 7607 -1617 0
7532 7609 -1619 0
7532 7611 -1621 0
7532 7613 -1623 0
7532 7615 -1625 0
7532 7617 -1627 0
7532 7619 -1629 0
7532 7621 -1631 0
7532 7623 -1633 0
7532 7625 -1635 0
7532 7627 -1637 0
7532 7629 -1639 0
7532 7631 -1641 0
7532 7633 -1643 0
7532 7635 -1645 0
7532 7637 -1647 0
7532 7639 -1649 0
7532 7641 -1651 0
7534 -1589 0
7534 7580 -1591 0
7534 7581 -1593 0
7534 7583 -1595 0
7534 7585 -1597 0
7534 7587 -1599 0
7534 7589 -1601 0
7534 7591 -1603 0
7534 7593 -1605 0
7534 7595 -1607 0
7534 7597 -1609 0
7534 7599 -1611 0
7534 7601 -1613 0
7534 7603 -1615 0
7534 7605 -1617 0
7534 7607 -1619 0
7534 7609 -1621 0
7534 7611 -1623 0
7534 7613 -1625 0
7534 7615 -1627 0
7534 7617 -1629 0
7534 7619 -1631 0
7534 7621 -1633 0
7534 7623 -1635 0
7534 7625 -1637 0
7534 7627 -1639 0
7534 7629 -1641 0
7534 7631 -1643 0
7534 7633 -1645 0
7534 7635 -1647 0
7534 7637 -1649 0
7534 7639 -1651 0
7534 7641 -1653 0
7536 -1591 0
7536 7580 -1593 0
7536 7581 -1595 0
7536 7583 -1597 0
7536 7585 -1599 0
7536 7587 -1601 0
7536 7589 -1603 0
7536 7591 -1605 0
7536 7593 -1607 0
7536 7595 -1609 0
7536 7597 -1611 0
7536 7599 -1613 0
7536 7601 -1615 0
7536 7603 -1617 0
7536 7605 -1619 0
7536 7607 -1621 0
7536 7609 -1623 0
7536 7611 -1625 0
7536 7613 -1627 0
7536 7615 -1629 0
7536 7617 -1631 0
7536 7619 -1633 0
7536 7621 -1635 0
7536 7623 -1637 0
7536 7625 -1639 0
7536 7627 -1641 0
7536 7629 -1643 0
7536 7631 -1645 0
7536 7633 -1647 0
7536 7635 -1649 0
7536 7637 -1651 0
7536 7639 -1653 0
7536 7641 -1655 0
7538 -1593 0
7538 7580 -1595 0
7538 7581 -1597 0
7538 7583 -1599 0
7538 7585 -1601 0
7538 7587 -1603 0
7538 7589 -1605 0
7538 7591 -1607 0
7538 7593 -1609 0
7538 7595 -1611 0
7538 7597 -1613 0
7538 7599 -1615 0
7538 7601 -1617 0
7538 7603 -1619 0
7538 7605 -1621 0
7538 7607 -1623 0
7538 7609 -1625 0
7538 7611 -1627 0
7538 7613 -1629 0
7538 7615 -1631 0
7538 7617 -1633 0
7538 7619 -1635 0
7538 7621 -1637 0
7538 7623 -1639 0
7538 7625 -1641 0
7538 7627 -1643 0
7538 7629 -1645 0
7538 7631 -1647 0
7538 7633 -1649 0
7538 7635 -1651 0
7538 7637 -1653 0
7538 7639 -1655 0
7538 7641 -1657 0
7540 -1595 0
7540 7580 -1597 0
7540 7581 -1599 0
7540 7583 -1601 0
7540 7585 -1603 0
7540 7587 -1605 0
7540 7589 -1607 0
7540 7591 -1609 0
7540 7593 -1611 0
7540 7595 -1613 0
7540 7597 -1615 0
7540 7599 -1617 0
7540 7601 -1619 0
7540 7603 -1621 0
7540 7605 -1623 0
7540 7607 -1625 0
7540 7609 -1627 0
7540 7611 -1629 0
7540 7613 -1631 0
7540 7615 -1633 0
7540 7617 -1635 0
7540 7619 -1637 0
7540 7621 -1639 0
7540 7623 -1641 0
7540 7625 -1643 0
7540 7627 -1645 0
7540 7629 -1647 0
7540 7631 -1649 0
7540 7633 -1651 0
7540 7635 -1653 0
7540 7637 -1655 0
7540 7639 -1657 0
7540 7641 -1659 0
7542 -1597 0
7542 7580 -1599 0
7542 7581 -1601 0
7542 7583 -1603 0
7542 7585 -1605 0
7542 7587 -1607 0
7542 7589 -1609 0
7542 7591 -1611 0
7542 7593 -1613 0
7542 7595 -1615 0
7542 7597 -1617 0
7542 7599 -1619 0
7542 7601 -1621 0
7542 7603 -1623 0
7542 7605 -1625 0
7542 7607 -1627 0
7542 7609 -1629 0
7542 7611 -1631 0
7542 7613 -1633 0
7542 7615 -1635 0
7542 7617 -1637 0
7542 7619 -1639 0
7542 7621 -1641 0
7542 7623 -1643 0
7542 7625 -1645 0
7542 7627 -1647 0
7542 7629 -1649 0
7542 7631 -1651 0
7542 7633 -1653 0
7542 7635 -1655 0
7542 7637 -1657 0
7542 7639 -1659 0
7542 7641 -1661 0
7544 -1599 0
7544 7580 -1601 0
7544 7581 -1603 0
7544 7583 -1605 0
7544 7585 -1607 0
7544 7587 -1609 0
7544 7589 -1611 0
7544 7591 -1613 0
7544 7593 -1615 0
7544 7595 -1617 0
7544 7597 -1619 0
7544 7599 -1621 0
7544 7601 -1623 0
7544 7603 -1625 0
7544 7605 -1627 0
7544 7607 -1629 0
7544 7609 -1631 0
7544 7611 -1633 0
7544 7613 -1635 0
7544 7615 -1637 0
7544 7617 -1639 0
7544 7619 -1641 0
7544 7621 -1643 0
7544 7623 -1645 0
7544 7625 -1647 0
7544 7627 -1649 0
7544 7629 -1651 0
7544 7631 -1653 0
7544 7633 -1655 0
7544 7635 -1657 0
7544 7637 -1659 0
7544 7639 -1661 0
7544 7641 -1663 0
7546 -1601 0
7546 7580 -1603 0
7546 7581 -1605 0
7546 7583 -1607 0
7546 7585 -1609 0
7546 7587 -1611 0
7546 7589 -1613 0
7546 7591 -1615 0
7546 7593 -1617 0
7546 7595 -1619 0
7546 7597 -1621 0
7546 7599 -1623 0
7546 7601 -1625 0
7546 7603 -1627 0
7546 7605 -1629 0
7546 7607 -1631 0
7546 7609 -1633 0
7546 7611 -1635 0
7546 7613 -1637 0
7546 7615 -1639 0
7546 7617 -1641 0
7546 7619 -1643 0
7546 7621 -1645 0
7546 7623 -1647 0
7546 7625 -1649 0
7546 7627 -1651 0
7546 7629 -1653 0
7546 7631 -1655 0
7546 7633 -1657 0
7546 7635 -1659 0
7546 7637 -1661 0
7546 7639 -1663 0
7546 7641 -1665 0
7548 -1603 0
7548 7580 -1605 0
7548 7581 -1607 0
7548 7583 -1609 0
7548 7585 -1611 0
7548 7587 -1613 0
7548 7589 -1615 0
7548 7591 -1617 0
7548 7593 -1619 0
7548 7595 -1621 0
7548 7597 -1623 0
7548 7599 -1625 0
7548 7601 -1627 0
7548 7603 -1629 0
7548 7605 -1631 0
7548 7607 -1633 0
7548 7609 -1635 0
7548 7611 -1637 0
7548 7613 -1639 0
7548 7615 -1641 0
7548 7617 -1643 0
7548 7619 -1645 0
7548 7621 -1647 0
7548 7623 -1649 0
7548 7625 -1651 0
7548 7627 -1653 0
7548 7629 -1655 0
7548 7631 -1657 0
7548 7633 -1659 0
7548 7635 -1661 0
7548 7637 -1663 0
7548 7639 -1665 0
7548 7641 -1667 0
7550 -1605 0
7550 7580 -1607 0
7550 7581 -1609 0
7550 7583 -1611 0
7550 7585 -1613 0
7550 7587 -1615 0
7550 7589 -1617 0
7550 7591 -1619 0
7550 7593 -1621 0
7550 7595 -1623 0
7550 7597 -1625 0
7550 7599 -1627 0
7550 7601 -1629 0
7550 7603 -1631 0
7550 7605 -1633 0
7550 7607 -1635 0
7550 7609 -1637 0
7550 7611 -1639 0
7550 7613 -1641 0
7550 7615 -1643 0
7550 7617 -1645 0
7550 7619 -1647 0
7550 7621 -1649 0
7550 7623 -1651 0
7550 7625 -1653 0
7550 7627 -1655 0
7550 7629 -1657 0
7550 7631 -1659 0
7550 7633 -1661 0
7550 7635 -1663 0
7550 7637 -1665 0
7550 7639 -1667 0
7550 7641 -1669 0
7552 -1607 0
7552 7580 -1609 0
7552 7581 -1611 0
7552 7583 -1613 0
7552 7585 -1615 0
7552 7587 -1617 0
7552 7589 -1619 0
7552 7591 -1621 0
7552 7593 -1623 0
7552 7595 -1625 0
7552 7597 -1627 0
7552 7599 -1629 0
7552 7601 -1631 0
7552 7603 -1633 0
7552 7605 -1635 0
7552 7607 -1637 0
7552 7609 -1639 0
7552 7611 -1641 0
7552 7613 -1643 0
7552 7615 -1645 0
7552 7617 -1647 0
7552 7619 -1649 0
7552 7621 -1651 0
7552 7623 -1653 0
7552 7625 -1655 0
7552 7627 -1657 0
7552 7629 -1659 0
7552 7631 -1661 0
7552 7633 -1663 0
7552 7635 -1665 0
7552 7637 -1667 0
7552 7639 -1669 0
7552 7641 -1671 0
7554 -1609 0
7554 7580 -1611 0
7554 7581 -1613 0
7554 7583 -1615 0
7554 7585 -1617 0
7554 7587 -1619 0
7554 7589 -1621 0
7554 7591 -1623 0
7554 7593 -1625 0
7554 7595 -1627 0
7554 7597 -1629 0
7554 7599 -1631 0
7554 7601 -1633 0
7554 7603 -1635 0
7554 7605 -1637 0
7554 7607 -1639 0
7554 7609 -1641 0
7554 7611 -1643 0
7554 7613 -1645 0
7554 7615 -1647 0
7554 7617 -1649 0
7554 7619 -1651 0
7554 7621 -1653 0
7554 7623 -1655 0
7554 7625 -1657 0
7554 7627 -1659 0
7554 7629 -1661 0
7554 7631 -1663 0
7554 7633 -1665 0
7554 7635 -1667 0
7554 7637 -1669 0
7554 7639 -1671 0
7554 7641 -1673 0
7556 -1611 0
7556 7580 -1613 0
7556 7581 -1615 0
7556 7583 -1617 0
7556 7585 -1619 0
7556 7587 -1621 0
7556 7589 -1623 0
7556 7591 -1625 0
7556 7593 -1627 0
7556 7595 -1629 0
7556 7597 -1631 0
7556 7599 -1633 0
7556 7601 -1635 0
7556 7603 -1637 0
7556 7605 -1639 0
7556 7607 -1641 0
7556 7609 -1643 0
7556 7611 -1645 0
7556 7613 -1647 0
7556 7615 -1649 0
7556 7617 -1651 0
7556 7619 -1653 0
7556 7621 -1655 0
7556 7623 -1657 0
7556 7625 -1659 0
7556 7627 -1661 0
7556 7629 -1663 0
7556 7631 -1665 0
7556 7633 -1667 0
7556 7635 -1669 0
7556 7637 -1671 0
7556 7639 -1673 0
7556 7641 -1675 0
7558 -1613 0
7558 7580 -1615 0
7558 7581 -1617 0
7558 7583 -1619 0
7558 7585 -1621 0
7558 7587 -1623 0
7558 7589 -1625 0
7558 7591 -1627 0
7558 7593 -1629 0
7558 7595 -1631 0
7558 7597 -1633 0
7558 7599 -1635 0
7558 7601 -1637 0
7558 7603 -1639 0
7558 7605 -1641 0
7558 7607 -1643 0
7558 7609 -1645 0
7558 7611 -1647 0
7558 7613 -1649 0
7558 7615 -1651 0
7558 7617 -1653 0
7558 7619 -1655 0
7558 7621 -1657 0
7558 7623 -1659 0
7558 7625 -1661 0
7558 7627 -1663 0
7558 7629 -1665 0
7558 7631 -1667 0
7558 7633 -1669 0
7558 7635 -1671 0
7558 7637 -1673 0
7558 7639 -1675 0
7558 7641 -1677 0
7560 -1615 0
7560 7580 -1617 0
7560 7581 -1619 0
7560 7583 -1621 0
7560 7585 -1623 0
7560 7587 -1625 0
7560 7589 -1627 0
7560 7591 -1629 0
7560 7593 -1631 0
7560 7595 -1633 0
7560 7597 -1635 0
7560 7599 -1637 0
7560 7601 -1639 0
7560 7603 -1641 0
7560 7605 -1643 0
7560 7607 -1645 0
7560 7609 -1647 0
7560 7611 -1649 0
7560 7613 -1651 0
7560 7615 -1653 0
7560 7617 -1655 0
7560 7619 -1657 0
7560 7621 -1659 0
7560 7623 -1661 0
7560 7625 -1663 0
7560 7627 -1665 0
7560 7629 -1667 0
7560 7631 -1669 0
7560 7633 -1671 0
7560 7635 -1673 0
7560 7637 -1675 0
7560 7639 -1677 0
7560 7641 -1679 0
7562 -1617 0
7562 7580 -1619 0
7562 7581 -1621 0
7562 7583 -1623 0
7562 7585 -1625 0
7562 7587 -1627 0
7562 7589 -1629 0
7562 7591 -1631 0
7562 7593 -1633 0
7562 7595 -1635 0
7562 7597 -1637 0
7562 7599 -1639 0
7562 7601 -1641 0
7562 7603 -1643 0
7562 7605 -1645 0
7562 7607 -1647 0
7562 7609 -1649 0
7562 7611 -1651 0
7562 7613 -1653 0
7562 7615 -1655 0
7562 7617 -1657 0
7562 7619 -1659 0
7562 7621 -1661 0
7562 7623 -1663 0
7562 7625 -1665 0
7562 7627 -1667 0
7562 7629 -1669 0
7562 7631 -1671 0
7562 7633 -1673 0
7562 7635 -1675 0
7562 7637 -1677 0
7562 7639 -1679 0
7562 7641 -1681 0
7564 -1619 0
7564 7580 -1621 0
7564 7581 -1623 0
7564 7583 -1625 0
7564 7585 -1627 0
7564 7587 -1629 0
7564 7589 -1631 0
7564 7591 -1633 0
7564 7593 -1635 0
7564 7595 -1637 0
7564 7597 -1639 0
7564 7599 -1641 0
7564 7601 -1643 0
7564 7603 -1645 0
7564 7605 -1647 0
7564 7607 -1649 0
7564 7609 -1651 0
7564 7611 -1653 0
7564 7613 -1655 0
7564 7615 -1657 0
7564 7617 -1659 0
7564 7619 -1661 0
7564 7621 -1663 0
7564 7623 -1665 0
7564 7625 -1667 0
7564 7627 -1669 0
7564 7629 -1671 0
7564 7631 -1673 0
7564 7633 -1675 0
7564 7635 -1677 0
7564 7637 -1679 0
7564 7639 -1681 0
7564 7641 -1683 0
7566 -1621 0
7566 7580 -1623 0
7566 7581 -1625 0
7566 7583 -1627 0
7566 7585 -1629 0
7566 7587 -1631 0
7566 7589 -1633 0
7566 7591 -1635 0
7566 7593 -1637 0
7566 7595 -1639 0
7566 7597 -1641 0
7566 7599 -1643 0
7566 7601 -1645 0
7566 7603 -1647 0
7566 7605 -1649 0
7566 7607 -1651 0
7566 7609 -1653 0
7566 7611 -1655 0
7566 7613 -1657 0
7566 7615 -1659 0
7566 7617 -1661 0
7566 7619 -1663 0
7566 7621 -1665 0
7566 7623 -1667 0
7566 7625 -1669 0
7566 7627 -1671 0
7566 7629 -1673 0
7566 7631 -1675 0
7566 7633 -1677 0
7566 7635 -1679 0
7566 7637 -1681 0
7566 7639 -1683 0
7566 7641 -1685 0
7568 -1623 0
7568 7580 -1625 0
7568 7581 -1627 0
7568 7583 -1629 0
7568 7585 -1631 0
7568 7587 -1633 0
7568 7589 -1635 0
7568 7591 -1637 0
7568 7593 -1639 0
7568 7595 -1641 0
7568 7597 -1643 0
7568 7599 -1645 0
7568 7601 -1647 0
7568 7603 -1649 0
7568 7605 -1651 0
7568 7607 -1653 0
7568 7609 -1655 0
7568 7611 -1657 0
7568 7613 -1659 0
7568 7615 -1661 0
7568 7617 -1663 0
7568 7619 -1665 0
7568 7621 -1667 0
7568 7623 -1669 0
7568 7625 -1671 0
7568 7627 -1673 0
7568 7629 -1675 0
7568 7631 -1677 0
7568 7633 -1679 0
7568 7635 -1681 0
7568 7637 -1683 0
7568 7639 -1685 0
7568 7641 -1687 0
7570 -1625 0
7570 7580 -1627 0
7570 7581 -1629 0
7570 7583 -1631 0
7570 7585 -1633 0
7570 7587 -1635 0
7570 7589 -1637 0
7570 7591 -1639 0
7570 7593 -1641 0
7570 7595 -1643 0
7570 7597 -1645 0
7570 7599 -1647 0
7570 7601 -1649 0
7570 7603 -1651 0
7570 7605 -1653 0
7570 7607 -1655 0
7570 7609 -1657 0
7570 7611 -1659 0
7570 7613 -1661 0
7570 7615 -1663 0
7570 7617 -1665 0
7570 7619 -1667 0
7570 7621 -1669 0
7570 7623 -1671 0
7570 7625 -1673 0
7570 7627 -1675 0
7570 7629 -1677 0
7570 7631 -1679 0
7570 7633 -1681 0
7570 7635 -1683 0
7570 7637 -1685 0
7570 7639 -1687 0
7570 7641 -1689 0
7572 -1627 0
7572 7580 -1629 0
7572 7581 -1631 0
7572 7583 -1633 0
7572 7585 -1635 0
7572 7587 -1637 0
7572 7589 -1639 0
7572 7591 -1641 0
7572 7593 -1643 0
7572 7595 -1645 0
7572 7597 -1647 0
7572 7599 -1649 0
7572 7601 -1651 0
7572 7603 -1653 0
7572 7605 -1655 0
7572 7607 -1657 0
7572 7609 -1659 0
7572 7611 -1661 0
7572 7613 -1663 0
7572 7615 -1665 0
7572 7617 -1667 0
7572 7619 -1669 0
7572 7621 -1671 0
7572 7623 -1673 0
7572 7625 -1675 0
7572 7627 -1677 0
7572 7629 -1679 0
7572 7631 -1681 0
7572 7633 -1683 0
7572 7635 -1685 0
7572 7637 -1687 0
7572 7639 -1689 0
7572 7641 -1691 0
7574 -1629 0
7574 7580 -1631 0
7574 7581 -1633 0
7574 7583 -1635 0
7574 7585 -1637 0
7574 7587 -1639 0
7574 7589 -1641 0
7574 7591 -1643 0
7574 7593 -1645 0
7574 7595 -1647 0
7574 7597 -1649 0
7574 7599 -1651 0
7574 7601 -1653 0
7574 7603 -1655 0
7574 7605 -1657 0
7574 7607 -1659 0
7574 7609 -1661 0
7574 7611 -1663 0
7574 7613 -1665 0
7574 7615 -1667 0
7574 7617 -1669 0
7574 7619 -1671 0
7574 7621 -1673 0
7574 7623 -1675 0
7574 7625 -1677 0
7574 7627 -1679 0
7574 7629 -1681 0
7574 7631 -1683 0
7574 7633 -1685 0
7574 7635 -1687 0
7574 7637 -1689 0
7574 7639 -1691 0
7574 7641 -1693 0
7576 -1631 0
7576 7580 -1633 0
7576 7581 -1635 0
7576 7583 -1637 0
7576 7585 -1639 0
7576 7587 -1641 0
7576 7589 -1643 0
7576 7591 -1645 0
7576 7593 -1647 0
7576 7595 -1649 0
7576 7597 -1651 0
7576 7599 -1653 0
7576 7601 -1655 0
7576 7603 -1657 0
7576 7605 -1659 0
7576 7607 -1661 0
7576 7609 -1663 0
7576 7611 -1665 0
7576 7613 -1667 0
7576 7615 -1669 0
7576 7617 -1671 0
7576 7619 -1673 0
7576 7621 -1675 0
7576 7623 -1677 0
7576 7625 -1679 0
7576 7627 -1681 0
7576 7629 -1683 0
7576 7631 -1685 0
7576 7633 -1687 0
7576 7635 -1689 0
7576 7637 -1691 0
7576 7639 -1693 0
7576 7641 -1695 0
7578 -1633 0
7578 7580 -1635 0
7578 7581 -1637 0
7578 7583 -1639 0
7578 7585 -1641 0
7578 7587 -1643 0
7578 7589 -1645 0
7578 7591 -1647 0
7578 7593 -1649 0
7578 7595 -1651 0
7578 7597 -1653 0
7578 7599 -1655 0
7578 7601 -1657 0
7578 7603 -1659 0
7578 7605 -1661 0
7578 7607 -1663 0
7578 7609 -1665 0
7578 7611 -1667 0
7578 7613 -1669 0
7578 7615 -1671 0
7578 7617 -1673 0
7578 7619 -1675 0
7578 7621 -1677 0
7578 7623 -1679 0
7578 7625 -1681 0
7578 7627 -1683 0
7578 7629 -1685 0
7578 7631 -1687 0
7578 7633 -1689 0
7578 7635 -1691 0
7578 7637 -1693 0
7578 7639 -1695 0
7578 7641 -1697 0
c (64<=(aux1374 + aux1375 - shift(num_occupied_by_types_00002, -64)))
-7641 1697 0
-7639 1695 0
-7637 1693 0
-7635 1691 0
-7633 1689 0
-7631 1687 0
-7629 1685 0
-7627 1683 0
-7625 1681 0
-7623 1679 0
-7621 1677 0
-7619 1675 0
-7617 1673 0
-7615 1671 0
-7613 1669 0
-7611 1667 0
-7609 1665 0
-7607 1663 0
-7605 1661 0
-7603 1659 0
-7601 1657 0
-7599 1655 0
-7597 1653 0
-7595 1651 0
-7593 1649 0
-7591 1647 0
-7589 1645 0
-7587 1643 0
-7585 1641 0
-7583 1639 0
-7581 1637 0
-7580 1635 0
-7578 1697 0
-7578 -7641 1695 0
-7578 -7639 1693 0
-7578 -7637 1691 0
-7578 -7635 1689 0
-7578 -7633 1687 0
-7578 -7631 1685 0
-7578 -7629 1683 0
-7578 -7627 1681 0
-7578 -7625 1679 0
-7578 -7623 1677 0
-7578 -7621 1675 0
-7578 -7619 1673 0
-7578 -7617 1671 0
-7578 -7615 1669 0
-7578 -7613 1667 0
-7578 -7611 1665 0
-7578 -7609 1663 0
-7578 -7607 1661 0
-7578 -7605 1659 0
-7578 -7603 1657 0
-7578 -7601 1655 0
-7578 -7599 1653 0
-7578 -7597 1651 0
-7578 -7595 1649 0
-7578 -7593 1647 0
-7578 -7591 1645 0
-7578 -7589 1643 0
-7578 -7587 1641 0
-7578 -7585 1639 0
-7578 -7583 1637 0
-7578 -7581 1635 0
-7578 -7580 1633 0
-7576 1695 0
-7576 -7641 1693 0
-7576 -7639 1691 0
-7576 -7637 1689 0
-7576 -7635 1687 0
-7576 -7633 1685 0
-7576 -7631 1683 0
-7576 -7629 1681 0
-7576 -7627 1679 0
-7576 -7625 1677 0
-7576 -7623 1675 0
-7576 -7621 1673 0
-7576 -7619 1671 0
-7576 -7617 1669 0
-7576 -7615 1667 0
-7576 -7613 1665 0
-7576 -7611 1663 0
-7576 -7609 1661 0
-7576 -7607 1659 0
-7576 -7605 1657 0
-7576 -7603 1655 0
-7576 -7601 1653 0
-7576 -7599 1651 0
-7576 -7597 1649 0
-7576 -7595 1647 0
-7576 -7593 1645 0
-7576 -7591 1643 0
-7576 -7589 1641 0
-7576 -7587 1639 0
-7576 -7585 1637 0
-7576 -7583 1635 0
-7576 -7581 1633 0
-7576 -7580 1631 0
-7574 1693 0
-7574 -7641 1691 0
-7574 -7639 1689 0
-7574 -7637 1687 0
-7574 -7635 1685 0
-7574 -7633 1683 0
-7574 -7631 1681 0
-7574 -7629 1679 0
-7574 -7627 1677 0
-7574 -7625 1675 0
-7574 -7623 1673 0
-7574 -7621 1671 0
-7574 -7619 1669 0
-7574 -7617 1667 0
-7574 -7615 1665 0
-7574 -7613 1663 0
-7574 -7611 1661 0
-7574 -7609 1659 0
-7574 -7607 1657 0
-7574 -7605 1655 0
-7574 -7603 1653 0
-7574 -7601 1651 0
-7574 -7599 1649 0
-7574 -7597 1647 0
-7574 -7595 1645 0
-7574 -7593 1643 0
-7574 -7591 1641 0
-7574 -7589 1639 0
-7574 -7587 1637 0
-7574 -7585 1635 0
-7574 -7583 1633 0
-7574 -7581 1631 0
-7574 -7580 1629 0
-7572 1691 0
-7572 -7641 1689 0
-7572 -7639 1687 0
-7572 -7637 1685 0
-7572 -7635 1683 0
-7572 -7633 1681 0
-7572 -7631 1679 0
-7572 -7629 1677 0
-7572 -7627 1675 0
-7572 -7625 1673 0
-7572 -7623 1671 0
-7572 -7621 1669 0
-7572 -7619 1667 0
-7572 -7617 1665 0
-7572 -7615 1663 0
-7572 -7613 1661 0
-7572 -7611 1659 0
-7572 -7609 1657 0
-7572 -7607 1655 0
-7572 -7605 1653 0
-7572 -7603 1651 0
-7572 -7601 1649 0
-7572 -7599 1647 0
-7572 -7597 1645 0
-7572 -7595 1643 0
-7572 -7593 1641 0
-7572 -7591 1639 0
-7572 -7589 1637 0
-7572 -7587 1635 0
-7572 -7585 1633 0
-7572 -7583 1631 0
-7572 -7581 1629 0
-7572 -7580 1627 0
-7570 1689 0
-7570 -7641 1687 0
-7570 -7639 1685 0
-7570 -7637 1683 0
-7570 -7635 1681 0
-7570 -7633 1679 0
-7570 -7631 1677 0
-7570 -7629 1675 0
-7570 -7627 1673 0
-7570 -7625 1671 0
-7570 -7623 1669 0
-7570 -7621 1667 0
-7570 -7619 1665 0
-7570 -7617 1663 0
-7570 -7615 1661 0
-7570 -7613 1659 0
-7570 -7611 1657 0
-7570 -7609 1655 0
-7570 -7607 1653 0
-7570 -7605 1651 0
-7570 -7603 1649 0
-7570 -7601 1647 0
-7570 -7599 1645 0
-7570 -7597 1643 0
-7570 -7595 1641 0
-7570 -7593 1639 0
-7570 -7591 1637 0
-7570 -7589 1635 0
-7570 -7587 1633 0
-7570 -7585 1631 0
-7570 -7583 1629 0
-7570 -7581 1627 0
-7570 -7580 1625 0
-7568 1687 0
-7568 -7641 1685 0
-7568 -7639 1683 0
-7568 -7637 1681 0
-7568 -7635 1679 0
-7568 -7633 1677 0
-7568 -7631 1675 0
-7568 -7629 1673 0
-7568 -7627 1671 0
-7568 -7625 1669 0
-7568 -7623 1667 0
-7568 -7621 1665 0
-7568 -7619 1663 0
-7568 -7617 1661 0
-7568 -7615 1659 0
-7568 -7613 1657 0
-7568 -7611 1655 0
-7568 -7609 1653 0
-7568 -7607 1651 0
-7568 -7605 1649 0
-7568 -7603 1647 0
-7568 -7601 1645 0
-7568 -7599 1643 0
-7568 -7597 1641 0
-7568 -7595 1639 0
-7568 -7593 1637 0
-7568 -7591 1635 0
-7568 -7589 1633 0
-7568 -7587 1631 0
-7568 -7585 1629 0
-7568 -7583 1627 0
-7568 -7581 1625 0
-7568 -7580 1623 0
-7566 1685 0
-7566 -7641 1683 0
-7566 -7639 1681 0
-7566 -7637 1679 0
-7566 -7635 1677 0
-7566 -7633 1675 0
-7566 -7631 1673 0
-7566 -7629 1671 0
-7566 -7627 1669 0
-7566 -7625 1667 0
-7566 -7623 1665 0
-7566 -7621 1663 0
-7566 -7619 1661 0
-7566 -7617 1659 0
-7566 -7615 1657 0
-7566 -7613 1655 0
-7566 -7611 1653 0
-7566 -7609 1651 0
-7566 -7607 1649 0
-7566 -7605 1647 0
-7566 -7603 1645 0
-7566 -7601 1643 0
-7566 -7599 1641 0
-7566 -7597 1639 0
-7566 -7595 1637 0
-7566 -7593 1635 0
-7566 -7591 1633 0
-7566 -7589 1631 0
-7566 -7587 1629 0
-7566 -7585 1627 0
-7566 -7583 1625 0
-7566 -7581 1623 0
-7566 -7580 1621 0
-7564 1683 0
-7564 -7641 1681 0
-7564 -7639 1679 0
-7564 -7637 1677 0
-7564 -7635 1675 0
-7564 -7633 1673 0
-7564 -7631 1671 0
-7564 -7629 1669 0
-7564 -7627 1667 0
-7564 -7625 1665 0
-7564 -7623 1663 0
-7564 -7621 1661 0
-7564 -7619 1659 0
-7564 -7617 1657 0
-7564 -7615 1655 0
-7564 -7613 1653 0
-7564 -7611 1651 0
-7564 -7609 1649 0
-7564 -7607 1647 0
-7564 -7605 1645 0
-7564 -7603 1643 0
-7564 -7601 1641 0
-7564 -7599 1639 0
-7564 -7597 1637 0
-7564 -7595 1635 0
-7564 -7593 1633 0
-7564 -7591 1631 0
-7564 -7589 1629 0
-7564 -7587 1627 0
-7564 -7585 1625 0
-7564 -7583 1623 0
-7564 -7581 1621 0
-7564 -7580 1619 0
-7562 1681 0
-7562 -7641 1679 0
-7562 -7639 1677 0
-7562 -7637 1675 0
-7562 -7635 1673 0
-7562 -7633 1671 0
-7562 -7631 1669 0
-7562 -7629 1667 0
-7562 -7627 1665 0
-7562 -7625 1663 0
-7562 -7623 1661 0
-7562 -7621 1659 0
-7562 -7619 1657 0
-7562 -7617 1655 0
-7562 -7615 1653 0
-7562 -7613 1651 0
-7562 -7611 1649 0
-7562 -7609 1647 0
-7562 -7607 1645 0
-7562 -7605 1643 0
-7562 -7603 1641 0
-7562 -7601 1639 0
-7562 -7599 1637 0
-7562 -7597 1635 0
-7562 -7595 1633 0
-7562 -7593 1631 0
-7562 -7591 1629 0
-7562 -7589 1627 0
-7562 -7587 1625 0
-7562 -7585 1623 0
-7562 -7583 1621 0
-7562 -7581 1619 0
-7562 -7580 1617 0
-7560 1679 0
-7560 -7641 1677 0
-7560 -7639 1675 0
-7560 -7637 1673 0
-7560 -7635 1671 0
-7560 -7633 1669 0
-7560 -7631 1667 0
-7560 -7629 1665 0
-7560 -7627 1663 0
-7560 -7625 1661 0
-7560 -7623 1659 0
-7560 -7621 1657 0
-7560 -7619 1655 0
-7560 -7617 1653 0
-7560 -7615 1651 0
-7560 -7613 1649 0
-7560 -7611 1647 0
-7560 -7609 1645 0
-7560 -7607 1643 0
-7560 -7605 1641 0
-7560 -7603 1639 0
-7560 -7601 1637 0
-7560 -7599 1635 0
-7560 -7597 1633 0
-7560 -7595 1631 0
-7560 -7593 1629 0
-7560 -7591 1627 0
-7560 -7589 1625 0
-7560 -7587 1623 0
-7560 -7585 1621 0
-7560 -7583 1619 0
-7560 -7581 1617 0
-7560 -7580 1615 0
-7558 1677 0
-7558 -7641 1675 0
-7558 -7639 1673 0
-7558 -7637 1671 0
-7558 -7635 1669 0
-7558 -7633 1667 0
-7558 -7631 1665 0
-7558 -7629 1663 0
-7558 -7627 1661 0
-7558 -7625 1659 0
-7558 -7623 1657 0
-7558 -7621 1655 0
-7558 -7619 1653 0
-7558 -7617 1651 0
-7558 -7615 1649 0
-7558 -7613 1647 0
-7558 -7611 1645 0
-7558 -7609 1643 0
-7558 -7607 1641 0
-7558 -7605 1639 0
-7558 -7603 1637 0
-7558 -7601 1635 0
-7558 -7599 1633 0
-7558 -7597 1631 0
-7558 -7595 1629 0
-7558 -7593 1627 0
-7558 -7591 1625 0
-7558 -7589 1623 0
-7558 -7587 1621 0
-7558 -7585 1619 0
-7558 -7583 1617 0
-7558 -7581 1615 0
-7558 -7580 1613 0
-7556 1675 0
-7556 -7641 1673 0
-7556 -7639 1671 0
-7556 -7637 1669 0
-7556 -7635 1667 0
-7556 -7633 1665 0
-7556 -7631 1663 0
-7556 -7629 1661 0
-7556 -7627 1659 0
-7556 -7625 1657 0
-7556 -7623 1655 0
-7556 -7621 1653 0
-7556 -7619 1651 0
-7556 -7617 1649 0
-7556 -7615 1647 0
-7556 -7613 1645 0
-7556 -7611 1643 0
-7556 -7609 1641 0
-7556 -7607 1639 0
-7556 -7605 1637 0
-7556 -7603 1635 0
-7556 -7601 1633 0
-7556 -7599 1631 0
-7556 -7597 1629 0
-7556 -7595 1627 0
-7556 -7593 1625 0
-7556 -7591 1623 0
-7556 -7589 1621 0
-7556 -7587 1619 0
-7556 -7585 1617 0
-7556 -7583 1615 0
-7556 -7581 1613 0
-7556 -7580 1611 0
-7554 1673 0
-7554 -7641 1671 0
-7554 -7639 1669 0
-7554 -7637 1667 0
-7554 -7635 1665 0
-7554 -7633 1663 0
-7554 -7631 1661 0
-7554 -7629 1659 0
-7554 -7627 1657 0
-7554 -7625 1655 0
-7554 -7623 1653 0
-7554 -7621 1651 0
-7554 -7619 1649 0
-7554 -7617 1647 0
-7554 -7615 1645 0
-7554 -7613 1643 0
-7554 -7611 1641 0
-7554 -7609 1639 0
-7554 -7607 1637 0
-7554 -7605 1635 0
-7554 -7603 1633 0
-7554 -7601 1631 0
-7554 -7599 1629 0
-7554 -7597 1627 0
-7554 -7595 1625 0
-7554 -7593 1623 0
-7554 -7591 1621 0
-7554 -7589 1619 0
-7554 -7587 1617 0
-7554 -7585 1615 0
-7554 -7583 1613 0
-7554 -7581 1611 0
-7554 -7580 1609 0
-7552 1671 0
-7552 -7641 1669 0
-7552 -7639 1667 0
-7552 -7637 1665 0
-7552 -7635 1663 0
-7552 -7633 1661 0
-7552 -7631 1659 0
-7552 -7629 1657 0
-7552 -7627 1655 0
-7552 -7625 1653 0
-7552 -7623 1651 0
-7552 -7621 1649 0
-7552 -7619 1647 0
-7552 -7617 1645 0
-7552 -7615 1643 0
-7552 -7613 1641 0
-7552 -7611 1639 0
-7552 -7609 1637 0
-7552 -7607 1635 0
-7552 -7605 1633 0
-7552 -7603 1631 0
-7552 -7601 1629 0
-7552 -7599 1627 0
-7552 -7597 1625 0
-7552 -7595 1623 0
-7552 -7593 1621 0
-7552 -7591 1619 0
-7552 -7589 1617 0
-7552 -7587 1615 0
-7552 -7585 1613 0
-7552 -7583 1611 0
-7552 -7581 1609 0
-7552 -7580 1607 0
-7550 1669 0
-7550 -7641 1667 0
-7550 -7639 1665 0
-7550 -7637 1663 0
-7550 -7635 1661 0
-7550 -7633 1659 0
-7550 -7631 1657 0
-7550 -7629 1655 0
-7550 -7627 1653 0
-7550 -7625 1651 0
-7550 -7623 1649 0
-7550 -7621 1647 0
-7550 -7619 1645 0
-7550 -7617 1643 0
-7550 -7615 1641 0
-7550 -7613 1639 0
-7550 -7611 1637 0
-7550 -7609 1635 0
-7550 -7607 1633 0
-7550 -7605 1631 0
-7550 -7603 1629 0
-7550 -7601 1627 0
-7550 -7599 1625 0
-7550 -7597 1623 0
-7550 -7595 1621 0
-7550 -7593 1619 0
-7550 -7591 1617 0
-7550 -7589 1615 0
-7550 -7587 1613 0
-7550 -7585 1611 0
-7550 -7583 1609 0
-7550 -7581 1607 0
-7550 -7580 1605 0
-7548 1667 0
-7548 -7641 1665 0
-7548 -7639 1663 0
-7548 -7637 1661 0
-7548 -7635 1659 0
-7548 -7633 1657 0
-7548 -7631 1655 0
-7548 -7629 1653 0
-7548 -7627 1651 0
-7548 -7625 1649 0
-7548 -7623 1647 0
-7548 -7621 1645 0
-7548 -7619 1643 0
-7548 -7617 1641 0
-7548 -7615 1639 0
-7548 -7613 1637 0
-7548 -7611 1635 0
-7548 -7609 1633 0
-7548 -7607 1631 0
-7548 -7605 1629 0
-7548 -7603 1627 0
-7548 -7601 1625 0
-7548 -7599 1623 0
-7548 -7597 1621 0
-7548 -7595 1619 0
-7548 -7593 1617 0
-7548 -7591 1615 0
-7548 -7589 1613 0
-7548 -7587 1611 0
-7548 -7585 1609 0
-7548 -7583 1607 0
-7548 -7581 1605 0
-7548 -7580 1603 0
-7546 1665 0
-7546 -7641 1663 0
-7546 -7639 1661 0
-7546 -7637 1659 0
-7546 -7635 1657 0
-7546 -7633 1655 0
-7546 -7631 1653 0
-7546 -7629 1651 0
-7546 -7627 1649 0
-7546 -7625 1647 0
-7546 -7623 1645 0
-7546 -7621 1643 0
-7546 -7619 1641 0
-7546 -7617 1639 0
-7546 -7615 1637 0
-7546 -7613 1635 0
-7546 -7611 1633 0
-7546 -7609 1631 0
-7546 -7607 1629 0
-7546 -7605 1627 0
-7546 -7603 1625 0
-7546 -7601 1623 0
-7546 -7599 1621 0
-7546 -7597 1619 0
-7546 -7595 1617 0
-7546 -7593 1615 0
-7546 -7591 1613 0
-7546 -7589 1611 0
-7546 -7587 1609 0
-7546 -7585 1607 0
-7546 -7583 1605 0
-7546 -7581 1603 0
-7546 -7580 1601 0
-7544 1663 0
-7544 -7641 1661 0
-7544 -7639 1659 0
-7544 -7637 1657 0
-7544 -7635 1655 0
-7544 -7633 1653 0
-7544 -7631 1651 0
-7544 -7629 1649 0
-7544 -7627 1647 0
-7544 -7625 1645 0
-7544 -7623 1643 0
-7544 -7621 1641 0
-7544 -7619 1639 0
-7544 -7617 1637 0
-7544 -7615 1635 0
-7544 -7613 1633 0
-7544 -7611 1631 0
-7544 -7609 1629 0
-7544 -7607 1627 0
-7544 -7605 1625 0
-7544 -7603 1623 0
-7544 -7601 1621 0
-7544 -7599 1619 0
-7544 -7597 1617 0
-7544 -7595 1615 0
-7544 -7593 1613 0
-7544 -7591 1611 0
-7544 -7589 1609 0
-7544 -7587 1607 0
-7544 -7585 1605 0
-7544 -7583 1603 0
-7544 -7581 1601 0
-7544 -7580 1599 0
-7542 1661 0
-7542 -7641 1659 0
-7542 -7639 1657 0
-7542 -7637 1655 0
-7542 -7635 1653 0
-7542 -7633 1651 0
-7542 -7631 1649 0
-7542 -7629 1647 0
-7542 -7627 1645 0
-7542 -7625 1643 0
-7542 -7623 1641 0
-7542 -7621 1639 0
-7542 -7619 1637 0
-7542 -7617 1635 0
-7542 -7615 1633 0
-7542 -7613 1631 0
-7542 -7611 1629 0
-7542 -7609 1627 0
-7542 -7607 1625 0
-7542 -7605 1623 0
-7542 -7603 1621 0
-7542 -7601 1619 0
-7542 -7599 1617 0
-7542 -7597 1615 0
-7542 -7595 1613 0
-7542 -7593 1611 0
-7542 -7591 1609 0
-7542 -7589 1607 0
-7542 -7587 1605 0
-7542 -7585 1603 0
-7542 -7583 1601 0
-7542 -7581 1599 0
-7542 -7580 1597 0
-7540 1659 0
-7540 -7641 1657 0
-7540 -7639 1655 0
-7540 -7637 1653 0
-7540 -7635 1651 0
-7540 -7633 1649 0
-7540 -7631 1647 0
-7540 -7629 1645 0
-7540 -7627 1643 0
-7540 -7625 1641 0
-7540 -7623 1639 0
-7540 -7621 1637 0
-7540 -7619 1635 0
-7540 -7617 1633 0
-7540 -7615 1631 0
-7540 -7613 1629 0
-7540 -7611 1627 0
-7540 -7609 1625 0
-7540 -7607 1623 0
-7540 -7605 1621 0
-7540 -7603 1619 0
-7540 -7601 1617 0
-7540 -7599 1615 0
-7540 -7597 1613 0
-7540 -7595 1611 0
-7540 -7593 1609 0
-7540 -7591 1607 0
-7540 -7589 1605 0
-7540 -7587 1603 0
-7540 -7585 1601 0
-7540 -7583 1599 0
-7540 -7581 1597 0
-7540 -7580 1595 0
-7538 1657 0
-7538 -7641 1655 0
-7538 -7639 1653 0
-7538 -7637 1651 0
-7538 -7635 1649 0
-7538 -7633 1647 0
-7538 -7631 1645 0
-7538 -7629 1643 0
-7538 -7627 1641 0
-7538 -7625 1639 0
-7538 -7623 1637 0
-7538 -7621 1635 0
-7538 -7619 1633 0
-7538 -7617 1631 0
-7538 -7615 1629 0
-7538 -7613 1627 0
-7538 -7611 1625 0
-7538 -7609 1623 0
-7538 -7607 1621 0
-7538 -7605 1619 0
-7538 -7603 1617 0
-7538 -7601 1615 0
-7538 -7599 1613 0
-7538 -7597 1611 0
-7538 -7595 1609 0
-7538 -7593 1607 0
-7538 -7591 1605 0
-7538 -7589 1603 0
-7538 -7587 1601 0
-7538 -7585 1599 0
-7538 -7583 1597 0
-7538 -7581 1595 0
-7538 -7580 1593 0
-7536 1655 0
-7536 -7641 1653 0
-7536 -7639 1651 0
-7536 -7637 1649 0
-7536 -7635 1647 0
-7536 -7633 1645 0
-7536 -7631 1643 0
-7536 -7629 1641 0
-7536 -7627 1639 0
-7536 -7625 1637 0
-7536 -7623 1635 0
-7536 -7621 1633 0
-7536 -7619 1631 0
-7536 -7617 1629 0
-7536 -7615 1627 0
-7536 -7613 1625 0
-7536 -7611 1623 0
-7536 -7609 1621 0
-7536 -7607 1619 0
-7536 -7605 1617 0
-7536 -7603 1615 0
-7536 -7601 1613 0
-7536 -7599 1611 0
-7536 -7597 1609 0
-7536 -7595 1607 0
-7536 -7593 1605 0
-7536 -7591 1603 0
-7536 -7589 1601 0
-7536 -7587 1599 0
-7536 -7585 1597 0
-7536 -7583 1595 0
-7536 -7581 1593 0
-7536 -7580 1591 0
-7534 1653 0
-7534 -7641 1651 0
-7534 -7639 1649 0
-7534 -7637 1647 0
-7534 -7635 1645 0
-7534 -7633 1643 0
-7534 -7631 1641 0
-7534 -7629 1639 0
-7534 -7627 1637 0
-7534 -7625 1635 0
-7534 -7623 1633 0
-7534 -7621 1631 0
-7534 -7619 1629 0
-7534 -7617 1627 0
-7534 -7615 1625 0
-7534 -7613 1623 0
-7534 -7611 1621 0
-7534 -7609 1619 0
-7534 -7607 1617 0
-7534 -7605 1615 0
-7534 -7603 1613 0
-7534 -7601 1611 0
-7534 -7599 1609 0
-7534 -7597 1607 0
-7534 -7595 1605 0
-7534 -7593 1603 0
-7534 -7591 1601 0
-7534 -7589 1599 0
-7534 -7587 1597 0
-7534 -7585 1595 0
-7534 -7583 1593 0
-7534 -7581 1591 0
-7534 -7580 1589 0
-7532 1651 0
-7532 -7641 1649 0
-7532 -7639 1647 0
-7532 -7637 1645 0
-7532 -7635 1643 0
-7532 -7633 1641 0
-7532 -7631 1639 0
-7532 -7629 1637 0
-7532 -7627 1635 0
-7532 -7625 1633 0
-7532 -7623 1631 0
-7532 -7621 1629 0
-7532 -7619 1627 0
-7532 -7617 1625 0
-7532 -7615 1623 0
-7532 -7613 1621 0
-7532 -7611 1619 0
-7532 -7609 1617 0
-7532 -7607 1615 0
-7532 -7605 1613 0
-7532 -7603 1611 0
-7532 -7601 1609 0
-7532 -7599 1607 0
-7532 -7597 1605 0
-7532 -7595 1603 0
-7532 -7593 1601 0
-7532 -7591 1599 0
-7532 -7589 1597 0
-7532 -7587 1595 0
-7532 -7585 1593 0
-7532 -7583 1591 0
-7532 -7581 1589 0
-7532 -7580 1587 0
-7530 1649 0
-7530 -7641 1647 0
-7530 -7639 1645 0
-7530 -7637 1643 0
-7530 -7635 1641 0
-7530 -7633 1639 0
-7530 -7631 1637 0
-7530 -7629 1635 0
-7530 -7627 1633 0
-7530 -7625 1631 0
-7530 -7623 1629 0
-7530 -7621 1627 0
-7530 -7619 1625 0
-7530 -7617 1623 0
-7530 -7615 1621 0
-7530 -7613 1619 0
-7530 -7611 1617 0
-7530 -7609 1615 0
-7530 -7607 1613 0
-7530 -7605 1611 0
-7530 -7603 1609 0
-7530 -7601 1607 0
-7530 -7599 1605 0
-7530 -7597 1603 0
-7530 -7595 1601 0
-7530 -7593 1599 0
-7530 -7591 1597 0
-7530 -7589 1595 0
-7530 -7587 1593 0
-7530 -7585 1591 0
-7530 -7583 1589 0
-7530 -7581 1587 0
-7530 -7580 1585 0
-7528 1647 0
-7528 -7641 1645 0
-7528 -7639 1643 0
-7528 -7637 1641 0
-7528 -7635 1639 0
-7528 -7633 1637 0
-7528 -7631 1635 0
-7528 -7629 1633 0
-7528 -7627 1631 0
-7528 -7625 1629 0
-7528 -7623 1627 0
-7528 -7621 1625 0
-7528 -7619 1623 0
-7528 -7617 1621 0
-7528 -7615 1619 0
-7528 -7613 1617 0
-7528 -7611 1615 0
-7528 -7609 1613 0
-7528 -7607 1611 0
-7528 -7605 1609 0
-7528 -7603 1607 0
-7528 -7601 1605 0
-7528 -7599 1603 0
-7528 -7597 1601 0
-7528 -7595 1599 0
-7528 -7593 1597 0
-7528 -7591 1595 0
-7528 -7589 1593 0
-7528 -7587 1591 0
-7528 -7585 1589 0
-7528 -7583 1587 0
-7528 -7581 1585 0
-7528 -7580 1583 0
-7526 1645 0
-7526 -7641 1643 0
-7526 -7639 1641 0
-7526 -7637 1639 0
-7526 -7635 1637 0
-7526 -7633 1635 0
-7526 -7631 1633 0
-7526 -7629 1631 0
-7526 -7627 1629 0
-7526 -7625 1627 0
-7526 -7623 1625 0
-7526 -7621 1623 0
-7526 -7619 1621 0
-7526 -7617 1619 0
-7526 -7615 1617 0
-7526 -7613 1615 0
-7526 -7611 1613 0
-7526 -7609 1611 0
-7526 -7607 1609 0
-7526 -7605 1607 0
-7526 -7603 1605 0
-7526 -7601 1603 0
-7526 -7599 1601 0
-7526 -7597 1599 0
-7526 -7595 1597 0
-7526 -7593 1595 0
-7526 -7591 1593 0
-7526 -7589 1591 0
-7526 -7587 1589 0
-7526 -7585 1587 0
-7526 -7583 1585 0
-7526 -7581 1583 0
-7526 -7580 1581 0
-7524 1643 0
-7524 -7641 1641 0
-7524 -7639 1639 0
-7524 -7637 1637 0
-7524 -7635 1635 0
-7524 -7633 1633 0
-7524 -7631 1631 0
-7524 -7629 1629 0
-7524 -7627 1627 0
-7524 -7625 1625 0
-7524 -7623 1623 0
-7524 -7621 1621 0
-7524 -7619 1619 0
-7524 -7617 1617 0
-7524 -7615 1615 0
-7524 -7613 1613 0
-7524 -7611 1611 0
-7524 -7609 1609 0
-7524 -7607 1607 0
-7524 -7605 1605 0
-7524 -7603 1603 0
-7524 -7601 1601 0
-7524 -7599 1599 0
-7524 -7597 1597 0
-7524 -7595 1595 0
-7524 -7593 1593 0
-7524 -7591 1591 0
-7524 -7589 1589 0
-7524 -7587 1587 0
-7524 -7585 1585 0
-7524 -7583 1583 0
-7524 -7581 1581 0
-7524 -7580 1579 0
-7522 1641 0
-7522 -7641 1639 0
-7522 -7639 1637 0
-7522 -7637 1635 0
-7522 -7635 1633 0
-7522 -7633 1631 0
-7522 -7631 1629 0
-7522 -7629 1627 0
-7522 -7627 1625 0
-7522 -7625 1623 0
-7522 -7623 1621 0
-7522 -7621 1619 0
-7522 -7619 1617 0
-7522 -7617 1615 0
-7522 -7615 1613 0
-7522 -7613 1611 0
-7522 -7611 1609 0
-7522 -7609 1607 0
-7522 -7607 1605 0
-7522 -7605 1603 0
-7522 -7603 1601 0
-7522 -7601 1599 0
-7522 -7599 1597 0
-7522 -7597 1595 0
-7522 -7595 1593 0
-7522 -7593 1591 0
-7522 -7591 1589 0
-7522 -7589 1587 0
-7522 -7587 1585 0
-7522 -7585 1583 0
-7522 -7583 1581 0
-7522 -7581 1579 0
-7522 -7580 1577 0
-7520 1639 0
-7520 -7641 1637 0
-7520 -7639 1635 0
-7520 -7637 1633 0
-7520 -7635 1631 0
-7520 -7633 1629 0
-7520 -7631 1627 0
-7520 -7629 1625 0
-7520 -7627 1623 0
-7520 -7625 1621 0
-7520 -7623 1619 0
-7520 -7621 1617 0
-7520 -7619 1615 0
-7520 -7617 1613 0
-7520 -7615 1611 0
-7520 -7613 1609 0
-7520 -7611 1607 0
-7520 -7609 1605 0
-7520 -7607 1603 0
-7520 -7605 1601 0
-7520 -7603 1599 0
-7520 -7601 1597 0
-7520 -7599 1595 0
-7520 -7597 1593 0
-7520 -7595 1591 0
-7520 -7593 1589 0
-7520 -7591 1587 0
-7520 -7589 1585 0
-7520 -7587 1583 0
-7520 -7585 1581 0
-7520 -7583 1579 0
-7520 -7581 1577 0
-7520 -7580 1575 0
-7518 1637 0
-7518 -7641 1635 0
-7518 -7639 1633 0
-7518 -7637 1631 0
-7518 -7635 1629 0
-7518 -7633 1627 0
-7518 -7631 1625 0
-7518 -7629 1623 0
-7518 -7627 1621 0
-7518 -7625 1619 0
-7518 -7623 1617 0
-7518 -7621 1615 0
-7518 -7619 1613 0
-7518 -7617 1611 0
-7518 -7615 1609 0
-7518 -7613 1607 0
-7518 -7611 1605 0
-7518 -7609 1603 0
-7518 -7607 1601 0
-7518 -7605 1599 0
-7518 -7603 1597 0
-7518 -7601 1595 0
-7518 -7599 1593 0
-7518 -7597 1591 0
-7518 -7595 1589 0
-7518 -7593 1587 0
-7518 -7591 1585 0
-7518 -7589 1583 0
-7518 -7587 1581 0
-7518 -7585 1579 0
-7518 -7583 1577 0
-7518 -7581 1575 0
-7518 -7580 1573 0
-7517 1635 0
-7517 -7641 1633 0
-7517 -7639 1631 0
-7517 -7637 1629 0
-7517 -7635 1627 0
-7517 -7633 1625 0
-7517 -7631 1623 0
-7517 -7629 1621 0
-7517 -7627 1619 0
-7517 -7625 1617 0
-7517 -7623 1615 0
-7517 -7621 1613 0
-7517 -7619 1611 0
-7517 -7617 1609 0
-7517 -7615 1607 0
-7517 -7613 1605 0
-7517 -7611 1603 0
-7517 -7609 1601 0
-7517 -7607 1599 0
-7517 -7605 1597 0
-7517 -7603 1595 0
-7517 -7601 1593 0
-7517 -7599 1591 0
-7517 -7597 1589 0
-7517 -7595 1587 0
-7517 -7593 1585 0
-7517 -7591 1583 0
-7517 -7589 1581 0
-7517 -7587 1579 0
-7517 -7585 1577 0
-7517 -7583 1575 0
-7517 -7581 1573 0
-7517 -7580 1572 0
c ((aux1436 + aux1437 - shift(num_occupied_by_types_00003, -64))<=64)
8158 -1699 0
8159 -1700 0
8161 -1702 0
8163 -1704 0
8165 -1706 0
8167 -1708 0
8169 -1710 0
8171 -1712 0
8173 -1714 0
8175 -1716 0
8177 -1718 0
8179 -1720 0
8181 -1722 0
8183 -1724 0
8185 -1726 0
8187 -1728 0
8189 -1730 0
8191 -1732 0
8193 -1734 0
8195 -1736 0
8197 -1738 0
8199 -1740 0
8201 -1742 0
8203 -1744 0
8205 -1746 0
8207 -1748 0
8209 -1750 0
8211 -1752 0
8213 -1754 0
8215 -1756 0
8217 -1758 0
8219 -1760 0
8095 -1699 0
8095 8158 -1700 0
8095 8159 -1702 0
8095 8161 -1704 0
8095 8163 -1706 0
8095 8165 -1708 0
8095 8167 -1710 0
8095 8169 -1712 0
8095 8171 -1714 0
8095 8173 -1716 0
8095 8175 -1718 0
8095 8177 -1720 0
8095 8179 -1722 0
8095 8181 -1724 0
8095 8183 -1726 0
8095 8185 -1728 0
8095 8187 -1730 0
8095 8189 -1732 0
8095 8191 -1734 0
8095 8193 -1736 0
8095 8195 -1738 0
8095 8197 -1740 0
8095 8199 -1742 0
8095 8201 -1744 0
8095 8203 -1746 0
8095 8205 -1748 0
8095 8207 -1750 0
8095 8209 -1752 0
8095 8211 -1754 0
8095 8213 -1756 0
8095 8215 -1758 0
8095 8217 -1760 0
8095 8219 -1762 0
8096 -1700 0
8096 8158 -1702 0
8096 8159 -1704 0
8096 8161 -1706 0
8096 8163 -1708 0
8096 8165 -1710 0
8096 8167 -1712 0
8096 8169 -1714 0
8096 8171 -1716 0
8096 8173 -1718 0
8096 8175 -1720 0
8096 8177 -1722 0
8096 8179 -1724 0
8096 8181 -1726 0
8096 8183 -1728 0
8096 8185 -1730 0
8096 8187 -1732 0
8096 8189 -1734 0
8096 8191 -1736 0
8096 8193 -1738 0
8096 8195 -1740 0
8096 8197 -1742 0
8096 8199 -1744 0
8096 8201 -1746 0
8096 8203 -1748 0
8096 8205 -1750 0
8096 8207 -1752 0
8096 8209 -1754 0
8096 8211 -1756 0
8096 8213 -1758 0
8096 8215 -1760 0
8096 8217 -1762 0
8096 8219 -1764 0
8098 -1702 0
8098 8158 -1704 0
8098 8159 -1706 0
8098 8161 -1708 0
8098 8163 -1710 0
8098 8165 -1712 0
8098 8167 -1714 0
8098 8169 -1716 0
8098 8171 -1718 0
8098 8173 -1720 0
8098 8175 -1722 0
8098 8177 -1724 0
8098 8179 -1726 0
8098 8181 -1728 0
8098 8183 -1730 0
8098 8185 -1732 0
8098 8187 -1734 0
8098 8189 -1736 0
8098 8191 -1738 0
8098 8193 -1740 0
8098 8195 -1742 0
8098 8197 -1744 0
8098 8199 -1746 0
8098 8201 -1748 0
8098 8203 -1750 0
8098 8205 -1752 0
8098 8207 -1754 0
8098 8209 -1756 0
8098 8211 -1758 0
8098 8213 -1760 0
8098 8215 -1762 0
8098 8217 -1764 0
8098 8219 -1766 0
8100 -1704 0
8100 8158 -1706 0
8100 8159 -1708 0
8100 8161 -1710 0
8100 8163 -1712 0
8100 8165 -1714 0
8100 8167 -1716 0
8100 8169 -1718 0
8100 8171 -1720 0
8100 8173 -1722 0
8100 8175 -1724 0
8100 8177 -1726 0
8100 8179 -1728 0
8100 8181 -1730 0
8100 8183 -1732 0
8100 8185 -1734 0
8100 8187 -1736 0
8100 8189 -1738 0
8100 8191 -1740 0
8100 8193 -1742 0
8100 8195 -1744 0
8100 8197 -1746 0
8100 8199 -1748 0
8100 8201 -1750 0
8100 8203 -1752 0
8100 8205 -1754 0
8100 8207 -1756 0
8100 8209 -1758 0
8100 8211 -1760 0
8100 8213 -1762 0
8100 8215 -1764 0
8100 8217 -1766 0
8100 8219 -1768 0
8102 -1706 0
8102 8158 -1708 0
8102 8159 -1710 0
8102 8161 -1712 0
8102 8163 -1714 0
8102 8165 -1716 0
8102 8167 -1718 0
8102 8169 -1720 0
8102 8171 -1722 0
8102 8173 -1724 0
8102 8175 -1726 0
8102 8177 -1728 0
8102 8179 -1730 0
8102 8181 -1732 0
8102 8183 -1734 0
8102 8185 -1736 0
8102 8187 -1738 0
8102 8189 -1740 0
8102 8191 -1742 0
8102 8193 -1744 0
8102 8195 -1746 0
8102 8197 -1748 0
8102 8199 -1750 0
8102 8201 -1752 0
8102 8203 -1754 0
8102 8205 -1756 0
8102 8207 -1758 0
8102 8209 -1760 0
8102 8211 -1762 0
8102 8213 -1764 0
8102 8215 -1766 0
8102 8217 -1768 0
8102 8219 -1770 0
8104 -1708 0
8104 8158 -1710 0
8104 8159 -1712 0
8104 8161 -1714 0
8104 8163 -1716 0
8104 8165 -1718 0
8104 8167 -1720 0
8104 8169 -1722 0
8104 8171 -1724 0
8104 8173 -1726 0
8104 8175 -1728 0
8104 8177 -1730 0
8104 8179 -1732 0
8104 8181 -1734 0
8104 8183 -1736 0
8104 8185 -1738 0
8104 8187 -1740 0
8104 8189 -1742 0
8104 8191 -1744 0
8104 8193 -1746 0
8104 8195 -1748 0
8104 8197 -1750 0
8104 8199 -1752 0
8104 8201 -1754 0
8104 8203 -1756 0
8104 8205 -1758 0
8104 8207 -1760 0
8104 8209 -1762 0
8104 8211 -1764 0
8104 8213 -1766 0
8104 8215 -1768 0
8104 8217 -1770 0
8104 8219 -1772 0
8106 -1710 0
8106 8158 -1712 0
8106 8159 -1714 0
8106 8161 -1716 0
8106 8163 -1718 0
8106 8165 -1720 0
8106 8167 -1722 0
8106 8169 -1724 0
8106 8171 -1726 0
8106 8173 -1728 0
8106 8175 -1730 0
8106 8177 -1732 0
8106 8179 -1734 0
8106 8181 -1736 0
8106 8183 -1738 0
8106 8185 -1740 0
8106 8187 -1742 0
8106 8189 -1744 0
8106 8191 -1746 0
8106 8193 -1748 0
8106 8195 -1750 0
8106 8197 -1752 0
8106 8199 -1754 0
8106 8201 -1756 0
8106 8203 -1758 0
8106 8205 -1760 0
8106 8207 -1762 0
8106 8209 -1764 0
8106 8211 -1766 0
8106 8213 -1768 0
8106 8215 -1770 0
8106 8217 -1772 0
8106 8219 -1774 0
8108 -1712 0
8108 8158 -1714 0
8108 8159 -1716 0
8108 8161 -1718 0
8108 8163 -1720 0
8108 8165 -1722 0
8108 8167 -1724 0
8108 8169 -1726 0
8108 8171 -1728 0
8108 8173 -1730 0
8108 8175 -1732 0
8108 8177 -1734 0
8108 8179 -1736 0
8108 8181 -1738 0
8108 8183 -1740 0
8108 8185 -1742 0
8108 8187 -1744 0
8108 8189 -1746 0
8108 8191 -1748 0
8108 8193 -1750 0
8108 8195 -1752 0
8108 8197 -1754 0
8108 8199 -1756 0
8108 8201 -1758 0
8108 8203 -1760 0
8108 8205 -1762 0
8108 8207 -1764 0
8108 8209 -1766 0
8108 8211 -1768 0
8108 8213 -1770 0
8108 8215 -1772 0
8108 8217 -1774 0
8108 8219 -1776 0
8110 -1714 0
8110 8158 -1716 0
8110 8159 -1718 0
8110 8161 -1720 0
8110 8163 -1722 0
8110 8165 -1724 0
8110 8167 -1726 0
8110 8169 -1728 0
8110 8171 -1730 0
8110 8173 -1732 0
8110 8175 -1734 0
8110 8177 -1736 0
8110 8179 -1738 0
8110 8181 -1740 0
8110 8183 -1742 0
8110 8185 -1744 0
8110 8187 -1746 0
8110 8189 -1748 0
8110 8191 -1750 0
8110 8193 -1752 0
8110 8195 -1754 0
8110 8197 -1756 0
8110 8199 -1758 0
8110 8201 -1760 0
8110 8203 -1762 0
8110 8205 -1764 0
8110 8207 -1766 0
8110 8209 -1768 0
8110 8211 -1770 0
8110 8213 -1772 0
8110 8215 -1774 0
8110 8217 -1776 0
8110 8219 -1778 0
8112 -1716 0
8112 8158 -1718 0
8112 8159 -1720 0
8112 8161 -1722 0
8112 8163 -1724 0
8112 8165 -1726 0
8112 8167 -1728 0
8112 8169 -1730 0
8112 8171 -1732 0
8112 8173 -1734 0
8112 8175 -1736 0
8112 8177 -1738 0
8112 8179 -1740 0
8112 8181 -1742 0
8112 8183 -1744 0
8112 8185 -1746 0
8112 8187 -1748 0
8112 8189 -1750 0
8112 8191 -1752 0
8112 8193 -1754 0
8112 8195 -1756 0
8112 8197 -1758 0
8112 8199 -1760 0
8112 8201 -1762 0
8112 8203 -1764 0
8112 8205 -1766 0
8112 8207 -1768 0
8112 8209 -1770 0
8112 8211 -1772 0
8112 8213 -1774 0
8112 8215 -1776 0
8112 8217 -1778 0
8112 8219 -1780 0
8114 -1718 0
8114 8158 -1720 0
8114 8159 -1722 0
8114 8161 -1724 0
8114 8163 -1726 0
8114 8165 -1728 0
8114 8167 -1730 0
8114 8169 -1732 0
8114 8171 -1734 0
8114 8173 -1736 0
8114 8175 -1738 0
8114 8177 -1740 0
8114 8179 -1742 0
8114 8181 -1744 0
8114 8183 -1746 0
8114 8185 -1748 0
8114 8187 -1750 0
8114 8189 -1752 0
8114 8191 -1754 0
8114 8193 -1756 0
8114 8195 -1758 0
8114 8197 -1760 0
8114 8199 -1762 0
8114 8201 -1764 0
8114 8203 -1766 0
8114 8205 -1768 0
8114 8207 -1770 0
8114 8209 -1772 0
8114 8211 -1774 0
8114 8213 -1776 0
8114 8215 -1778 0
8114 8217 -1780 0
8114 8219 -1782 0
8116 -1720 0
8116 8158 -1722 0
8116 8159 -1724 0
8116 8161 -1726 0
8116 8163 -1728 0
8116 8165 -1730 0
8116 8167 -1732 0
8116 8169 -1734 0
8116 8171 -1736 0
8116 8173 -1738 0
8116 8175 -1740 0
8116 8177 -1742 0
8116 8179 -1744 0
8116 8181 -1746 0
8116 8183 -1748 0
8116 8185 -1750 0
8116 8187 -1752 0
8116 8189 -1754 0
8116 8191 -1756 0
8116 8193 -1758 0
8116 8195 -1760 0
8116 8197 -1762 0
8116 8199 -1764 0
8116 8201 -1766 0
8116 8203 -1768 0
8116 8205 -1770 0
8116 8207 -1772 0
8116 8209 -1774 0
8116 8211 -1776 0
8116 8213 -1778 0
8116 8215 -1780 0
8116 8217 -1782 0
8116 8219 -1784 0
8118 -1722 0
8118 8158 -1724 0
8118 8159 -1726 0
8118 8161 -1728 0
8118 8163 -1730 0
8118 8165 -1732 0
8118 8167 -1734 0
8118 8169 -1736 0
8118 8171 -1738 0
8118 8173 -1740 0
8118 8175 -1742 0
8118 8177 -1744 0
8118 8179 -1746 0
8118 8181 -1748 0
8118 8183 -1750 0
8118 8185 -1752 0
8118 8187 -1754 0
8118 8189 -1756 0
8118 8191 -1758 0
8118 8193 -1760 0
8118 8195 -1762 0
8118 8197 -1764 0
8118 8199 -1766 0
8118 8201 -1768 0
8118 8203 -1770 0
8118 8205 -1772 0
8118 8207 -1774 0
8118 8209 -1776 0
8118 8211 -1778 0
8118 8213 -1780 0
8118 8215 -1782 0
8118 8217 -1784 0
8118 8219 -1786 0
8120 -1724 0
8120 8158 -1726 0
8120 8159 -1728 0
8120 8161 -1730 0
8120 8163 -1732 0
8120 8165 -1734 0
8120 8167 -1736 0
8120 8169 -1738 0
8120 8171 -1740 0
8120 8173 -1742 0
8120 8175 -1744 0
8120 8177 -1746 0
8120 8179 -1748 0
8120 8181 -1750 0
8120 8183 -1752 0
8120 8185 -1754 0
8120 8187 -1756 0
8120 8189 -1758 0
8120 8191 -1760 0
8120 8193 -1762 0
8120 8195 -1764 0
8120 8197 -1766 0
8120 8199 -1768 0
8120 8201 -1770 0
8120 8203 -1772 0
8120 8205 -1774 0
8120 8207 -1776 0
8120 8209 -1778 0
8120 8211 -1780 0
8120 8213 -1782 0
8120 8215 -1784 0
8120 8217 -1786 0
8120 8219 -1788 0
8122 -1726 0
8122 8158 -1728 0
8122 8159 -1730 0
8122 8161 -1732 0
8122 8163 -1734 0
8122 8165 -1736 0
8122 8167 -1738 0
8122 8169 -1740 0
8122 8171 -1742 0
8122 8173 -1744 0
8122 8175 -1746 0
8122 8177 -1748 0
8122 8179 -1750 0
8122 8181 -1752 0
8122 8183 -1754 0
8122 8185 -1756 0
8122 8187 -1758 0
8122 8189 -1760 0
8122 8191 -1762 0
8122 8193 -1764 0
8122 8195 -1766 0
8122 8197 -1768 0
8122 8199 -1770 0
8122 8201 -1772 0
8122 8203 -1774 0
8122 8205 -1776 0
8122 8207 -1778 0
8122 8209 -1780 0
8122 8211 -1782 0
8122 8213 -1784 0
8122 8215 -1786 0
8122 8217 -1788 0
8122 8219 -1790 0
8124 -1728 0
8124 8158 -1730 0
8124 8159 -1732 0
8124 8161 -1734 0
8124 8163 -1736 0
8124 8165 -1738 0
8124 8167 -1740 0
8124 8169 -1742 0
8124 8171 -1744 0
8124 8173 -1746 0
8124 8175 -1748 0
8124 8177 -1750 0
8124 8179 -1752 0
8124 8181 -1754 0
8124 8183 -1756 0
8124 8185 -1758 0
8124 8187 -1760 0
8124 8189 -1762 0
8124 8191 -1764 0
8124 8193 -1766 0
8124 8195 -1768 0
8124 8197 -1770 0
8124 8199 -1772 0
8124 8201 -1774 0
8124 8203 -1776 0
8124 8205 -1778 0
8124 8207 -1780 0
8124 8209 -1782 0
8124 8211 -1784 0
8124 8213 -1786 0
8124 8215 -1788 0
8124 8217 -1790 0
8124 8219 -1792 0
8126 -1730 0
8126 8158 -1732 0
8126 8159 -1734 0
8126 8161 -1736 0
8126 8163 -1738 0
8126 8165 -1740 0
8126 8167 -1742 0
8126 8169 -1744 0
8126 8171 -1746 0
8126 8173 -1748 0
8126 8175 -1750 0
8126 8177 -1752 0
8126 8179 -1754 0
8126 8181 -1756 0
8126 8183 -1758 0
8126 8185 -1760 0
8126 8187 -1762 0
8126 8189 -1764 0
8126 8191 -1766 0
8126 8193 -1768 0
8126 8195 -1770 0
8126 8197 -1772 0
8126 8199 -1774 0
8126 8201 -1776 0
8126 8203 -1778 0
8126 8205 -1780 0
8126 8207 -1782 0
8126 8209 -1784 0
8126 8211 -1786 0
8126 8213 -1788 0
8126 8215 -1790 0
8126 8217 -1792 0
8126 8219 -1794 0
8128 -1732 0
8128 8158 -1734 0
8128 8159 -1736 0
8128 8161 -1738 0
8128 8163 -1740 0
8128 8165 -1742 0
8128 8167 -1744 0
8128 8169 -1746 0
8128 8171 -1748 0
8128 8173 -1750 0
8128 8175 -1752 0
8128 8177 -1754 0
8128 8179 -1756 0
8128 8181 -1758 0
8128 8183 -1760 0
8128 8185 -1762 0
8128 8187 -1764 0
8128 8189 -1766 0
8128 8191 -1768 0
8128 8193 -1770 0
8128 8195 -1772 0
8128 8197 -1774 0
8128 8199 -1776 0
8128 8201 -1778 0
8128 8203 -1780 0
8128 8205 -1782 0
8128 8207 -1784 0
8128 8209 -1786 0
8128 8211 -1788 0
8128 8213 -1790 0
8128 8215 -1792 0
8128 8217 -1794 0
8128 8219 -1796 0
8130 -1734 0
8130 8158 -1736 0
8130 8159 -1738 0
8130 8161 -1740 0
8130 8163 -1742 0
8130 8165 -1744 0
8130 8167 -1746 0
8130 8169 -1748 0
8130 8171 -1750 0
8130 8173 -1752 0
8130 8175 -1754 0
8130 8177 -1756 0
8130 8179 -1758 0
8130 8181 -1760 0
8130 8183 -1762 0
8130 8185 -1764 0
8130 8187 -1766 0
8130 8189 -1768 0
8130 8191 -1770 0
8130 8193 -1772 0
8130 8195 -1774 0
8130 8197 -1776 0
8130 8199 -1778 0
8130 8201 -1780 0
8130 8203 -1782 0
8130 8205 -1784 0
8130 8207 -1786 0
8130 8209 -1788 0
8130 8211 -1790 0
8130 8213 -1792 0
8130 8215 -1794 0
8130 8217 -1796 0
8130 8219 -1798 0
8132 -1736 0
8132 8158 -1738 0
8132 8159 -1740 0
8132 8161 -1742 0
8132 8163 -1744 0
8132 8165 -1746 0
8132 8167 -1748 0
8132 8169 -1750 0
8132 8171 -1752 0
8132 8173 -1754 0
8132 8175 -1756 0
8132 8177 -1758 0
8132 8179 -1760 0
8132 8181 -1762 0
8132 8183 -1764 0
8132 8185 -1766 0
8132 8187 -1768 0
8132 8189 -1770 0
8132 8191 -1772 0
8132 8193 -1774 0
8132 8195 -1776 0
8132 8197 -1778 0
8132 8199 -1780 0
8132 8201 -1782 0
8132 8203 -1784 0
8132 8205 -1786 0
8132 8207 -1788 0
8132 8209 -1790 0
8132 8211 -1792 0
8132 8213 -1794 0
8132 8215 -1796 0
8132 8217 -1798 0
8132 8219 -1800 0
8134 -1738 0
8134 8158 -1740 0
8134 8159 -1742 0
8134 8161 -1744 0
8134 8163 -1746 0
8134 8165 -1748 0
8134 8167 -1750 0
8134 8169 -1752 0
8134 8171 -1754 0
8134 8173 -1756 0
8134 8175 -1758 0
8134 8177 -1760 0
8134 8179 -1762 0
8134 8181 -1764 0
8134 8183 -1766 0
8134 8185 -1768 0
8134 8187 -1770 0
8134 8189 -1772 0
8134 8191 -1774 0
8134 8193 -1776 0
8134 8195 -1778 0
8134 8197 -1780 0
8134 8199 -1782 0
8134 8201 -1784 0
8134 8203 -1786 0
8134 8205 -1788 0
8134 8207 -1790 0
8134 8209 -1792 0
8134 8211 -1794 0
8134 8213 -1796 0
8134 8215 -1798 0
8134 8217 -1800 0
8134 8219 -1802 0
8136 -1740 0
8136 8158 -1742 0
8136 8159 -1744 0
8136 8161 -1746 0
8136 8163 -1748 0
8136 8165 -1750 0
8136 8167 -1752 0
8136 8169 -1754 0
8136 8171 -1756 0
8136 8173 -1758 0
8136 8175 -1760 0
8136 8177 -1762 0
8136 8179 -1764 0
8136 8181 -1766 0
8136 8183 -1768 0
8136 8185 -1770 0
8136 8187 -1772 0
8136 8189 -1774 0
8136 8191 -1776 0
8136 8193 -1778 0
8136 8195 -1780 0
8136 8197 -1782 0
8136 8199 -1784 0
8136 8201 -1786 0
8136 8203 -1788 0
8136 8205 -1790 0
8136 8207 -1792 0
8136 8209 -1794 0
8136 8211 -1796 0
8136 8213 -1798 0
8136 8215 -1800 0
8136 8217 -1802 0
8136 8219 -1804 0
8138 -1742 0
8138 8158 -1744 0
8138 8159 -1746 0
8138 8161 -1748 0
8138 8163 -1750 0
8138 8165 -1752 0
8138 8167 -1754 0
8138 8169 -1756 0
8138 8171 -1758 0
8138 8173 -1760 0
8138 8175 -1762 0
8138 8177 -1764 0
8138 8179 -1766 0
8138 8181 -1768 0
8138 8183 -1770 0
8138 8185 -1772 0
8138 8187 -1774 0
8138 8189 -1776 0
8138 8191 -1778 0
8138 8193 -1780 0
8138 8195 -1782 0
8138 8197 -1784 0
8138 8199 -1786 0
8138 8201 -1788 0
8138 8203 -1790 0
8138 8205 -1792 0
8138 8207 -1794 0
8138 8209 -1796 0
8138 8211 -1798 0
8138 8213 -1800 0
8138 8215 -1802 0
8138 8217 -1804 0
8138 8219 -1806 0
8140 -1744 0
8140 8158 -1746 0
8140 8159 -1748 0
8140 8161 -1750 0
8140 8163 -1752 0
8140 8165 -1754 0
8140 8167 -1756 0
8140 8169 -1758 0
8140 8171 -1760 0
8140 8173 -1762 0
8140 8175 -1764 0
8140 8177 -1766 0
8140 8179 -1768 0
8140 8181 -1770 0
8140 8183 -1772 0
8140 8185 -1774 0
8140 8187 -1776 0
8140 8189 -1778 0
8140 8191 -1780 0
8140 8193 -1782 0
8140 8195 -1784 0
8140 8197 -1786 0
8140 8199 -1788 0
8140 8201 -1790 0
8140 8203 -1792 0
8140 8205 -1794 0
8140 8207 -1796 0
8140 8209 -1798 0
8140 8211 -1800 0
8140 8213 -1802 0
8140 8215 -1804 0
8140 8217 -1806 0
8140 8219 -1808 0
8142 -1746 0
8142 8158 -1748 0
8142 8159 -1750 0
8142 8161 -1752 0
8142 8163 -1754 0
8142 8165 -1756 0
8142 8167 -1758 0
8142 8169 -1760 0
8142 8171 -1762 0
8142 8173 -1764 0
8142 8175 -1766 0
8142 8177 -1768 0
8142 8179 -1770 0
8142 8181 -1772 0
8142 8183 -1774 0
8142 8185 -1776 0
8142 8187 -1778 0
8142 8189 -1780 0
8142 8191 -1782 0
8142 8193 -1784 0
8142 8195 -1786 0
8142 8197 -1788 0
8142 8199 -1790 0
8142 8201 -1792 0
8142 8203 -1794 0
8142 8205 -1796 0
8142 8207 -1798 0
8142 8209 -1800 0
8142 8211 -1802 0
8142 8213 -1804 0
8142 8215 -1806 0
8142 8217 -1808 0
8142 8219 -1810 0
8144 -1748 0
8144 8158 -1750 0
8144 8159 -1752 0
8144 8161 -1754 0
8144 8163 -1756 0
8144 8165 -1758 0
8144 8167 -1760 0
8144 8169 -1762 0
8144 8171 -1764 0
8144 8173 -1766 0
8144 8175 -1768 0
8144 8177 -1770 0
8144 8179 -1772 0
8144 8181 -1774 0
8144 8183 -1776 0
8144 8185 -1778 0
8144 8187 -1780 0
8144 8189 -1782 0
8144 8191 -1784 0
8144 8193 -1786 0
8144 8195 -1788 0
8144 8197 -1790 0
8144 8199 -1792 0
8144 8201 -1794 0
8144 8203 -1796 0
8144 8205 -1798 0
8144 8207 -1800 0
8144 8209 -1802 0
8144 8211 -1804 0
8144 8213 -1806 0
8144 8215 -1808 0
8144 8217 -1810 0
8144 8219 -1812 0
8146 -1750 0
8146 8158 -1752 0
8146 8159 -1754 0
8146 8161 -1756 0
8146 8163 -1758 0
8146 8165 -1760 0
8146 8167 -1762 0
8146 8169 -1764 0
8146 8171 -1766 0
8146 8173 -1768 0
8146 8175 -1770 0
8146 8177 -1772 0
8146 8179 -1774 0
8146 8181 -1776 0
8146 8183 -1778 0
8146 8185 -1780 0
8146 8187 -1782 0
8146 8189 -1784 0
8146 8191 -1786 0
8146 8193 -1788 0
8146 8195 -1790 0
8146 8197 -1792 0
8146 8199 -1794 0
8146 8201 -1796 0
8146 8203 -1798 0
8146 8205 -1800 0
8146 8207 -1802 0
8146 8209 -1804 0
8146 8211 -1806 0
8146 8213 -1808 0
8146 8215 -1810 0
8146 8217 -1812 0
8146 8219 -1814 0
8148 -1752 0
8148 8158 -1754 0
8148 8159 -1756 0
8148 8161 -1758 0
8148 8163 -1760 0
8148 8165 -1762 0
8148 8167 -1764 0
8148 8169 -1766 0
8148 8171 -1768 0
8148 8173 -1770 0
8148 8175 -1772 0
8148 8177 -1774 0
8148 8179 -1776 0
8148 8181 -1778 0
8148 8183 -1780 0
8148 8185 -1782 0
8148 8187 -1784 0
8148 8189 -1786 0
8148 8191 -1788 0
8148 8193 -1790 0
8148 8195 -1792 0
8148 8197 -1794 0
8148 8199 -1796 0
8148 8201 -1798 0
8148 8203 -1800 0
8148 8205 -1802 0
8148 8207 -1804 0
8148 8209 -1806 0
8148 8211 -1808 0
8148 8213 -1810 0
8148 8215 -1812 0
8148 8217 -1814 0
8148 8219 -1816 0
8150 -1754 0
8150 8158 -1756 0
8150 8159 -1758 0
8150 8161 -1760 0
8150 8163 -1762 0
8150 8165 -1764 0
8150 8167 -1766 0
8150 8169 -1768 0
8150 8171 -1770 0
8150 8173 -1772 0
8150 8175 -1774 0
8150 8177 -1776 0
8150 8179 -1778 0
8150 8181 -1780 0
8150 8183 -1782 0
8150 8185 -1784 0
8150 8187 -1786 0
8150 8189 -1788 0
8150 8191 -1790 0
8150 8193 -1792 0
8150 8195 -1794 0
8150 8197 -1796 0
8150 8199 -1798 0
8150 8201 -1800 0
8150 8203 -1802 0
8150 8205 -1804 0
8150 8207 -1806 0
8150 8209 -1808 0
8150 8211 -1810 0
8150 8213 -1812 0
8150 8215 -1814 0
8150 8217 -1816 0
8150 8219 -1818 0
8152 -1756 0
8152 8158 -1758 0
8152 8159 -1760 0
8152 8161 -1762 0
8152 8163 -1764 0
8152 8165 -1766 0
8152 8167 -1768 0
8152 8169 -1770 0
8152 8171 -1772 0
8152 8173 -1774 0
8152 8175 -1776 0
8152 8177 -1778 0
8152 8179 -1780 0
8152 8181 -1782 0
8152 8183 -1784 0
8152 8185 -1786 0
8152 8187 -1788 0
8152 8189 -1790 0
8152 8191 -1792 0
8152 8193 -1794 0
8152 8195 -1796 0
8152 8197 -1798 0
8152 8199 -1800 0
8152 8201 -1802 0
8152 8203 -1804 0
8152 8205 -1806 0
8152 8207 -1808 0
8152 8209 -1810 0
8152 8211 -1812 0
8152 8213 -1814 0
8152 8215 -1816 0
8152 8217 -1818 0
8152 8219 -1820 0
8154 -1758 0
8154 8158 -1760 0
8154 8159 -1762 0
8154 8161 -1764 0
8154 8163 -1766 0
8154 8165 -1768 0
8154 8167 -1770 0
8154 8169 -1772 0
8154 8171 -1774 0
8154 8173 -1776 0
8154 8175 -1778 0
8154 8177 -1780 0
8154 8179 -1782 0
8154 8181 -1784 0
8154 8183 -1786 0
8154 8185 -1788 0
8154 8187 -1790 0
8154 8189 -1792 0
8154 8191 -1794 0
8154 8193 -1796 0
8154 8195 -1798 0
8154 8197 -1800 0
8154 8199 -1802 0
8154 8201 -1804 0
8154 8203 -1806 0
8154 8205 -1808 0
8154 8207 -1810 0
8154 8209 -1812 0
8154 8211 -1814 0
8154 8213 -1816 0
8154 8215 -1818 0
8154 8217 -1820 0
8154 8219 -1822 0
8156 -1760 0
8156 8158 -1762 0
8156 8159 -1764 0
8156 8161 -1766 0
8156 8163 -1768 0
8156 8165 -1770 0
8156 8167 -1772 0
8156 8169 -1774 0
8156 8171 -1776 0
8156 8173 -1778 0
8156 8175 -1780 0
8156 8177 -1782 0
8156 8179 -1784 0
8156 8181 -1786 0
8156 8183 -1788 0
8156 8185 -1790 0
8156 8187 -1792 0
8156 8189 -1794 0
8156 8191 -1796 0
8156 8193 -1798 0
8156 8195 -1800 0
8156 8197 -1802 0
8156 8199 -1804 0
8156 8201 -1806 0
8156 8203 -1808 0
8156 8205 -1810 0
8156 8207 -1812 0
8156 8209 -1814 0
8156 8211 -1816 0
8156 8213 -1818 0
8156 8215 -1820 0
8156 8217 -1822 0
8156 8219 -1824 0
c (64<=(aux1436 + aux1437 - shift(num_occupied_by_types_00003, -64)))
-8219 1824 0
-8217 1822 0
-8215 1820 0
-8213 1818 0
-8211 1816 0
-8209 1814 0
-8207 1812 0
-8205 1810 0
-8203 1808 0
-8201 1806 0
-8199 1804 0
-8197 1802 0
-8195 1800 0
-8193 1798 0
-8191 1796 0
-8189 1794 0
-8187 1792 0
-8185 1790 0
-8183 1788 0
-8181 1786 0
-8179 1784 0
-8177 1782 0
-8175 1780 0
-8173 1778 0
-8171 1776 0
-8169 1774 0
-8167 1772 0
-8165 1770 0
-8163 1768 0
-8161 1766 0
-8159 1764 0
-8158 1762 0
-8156 1824 0
-8156 -8219 1822 0
-8156 -8217 1820 0
-8156 -8215 1818 0
-8156 -8213 1816 0
-8156 -8211 1814 0
-8156 -8209 1812 0
-8156 -8207 1810 0
-8156 -8205 1808 0
-8156 -8203 1806 0
-8156 -8201 1804 0
-8156 -8199 1802 0
-8156 -8197 1800 0
-8156 -8195 1798 0
-8156 -8193 1796 0
-8156 -8191 1794 0
-8156 -8189 1792 0
-8156 -8187 1790 0
-8156 -8185 1788 0
-8156 -8183 1786 0
-8156 -8181 1784 0
-8156 -8179 1782 0
-8156 -8177 1780 0
-8156 -8175 1778 0
-8156 -8173 1776 0
-8156 -8171 1774 0
-8156 -8169 1772 0
-8156 -8167 1770 0
-8156 -8165 1768 0
-8156 -8163 1766 0
-8156 -8161 1764 0
-8156 -8159 1762 0
-8156 -8158 1760 0
-8154 1822 0
-8154 -8219 1820 0
-8154 -8217 1818 0
-8154 -8215 1816 0
-8154 -8213 1814 0
-8154 -8211 1812 0
-8154 -8209 1810 0
-8154 -8207 1808 0
-8154 -8205 1806 0
-8154 -8203 1804 0
-8154 -8201 1802 0
-8154 -8199 1800 0
-8154 -8197 1798 0
-8154 -8195 1796 0
-8154 -8193 1794 0
-8154 -8191 1792 0
-8154 -8189 1790 0
-8154 -8187 1788 0
-8154 -8185 1786 0
-8154 -8183 1784 0
-8154 -8181 1782 0
-8154 -8179 1780 0
-8154 -8177 1778 0
-8154 -8175 1776 0
-8154 -8173 1774 0
-8154 -8171 1772 0
-8154 -8169 1770 0
-8154 -8167 1768 0
-8154 -8165 1766 0
-8154 -8163 1764 0
-8154 -8161 1762 0
-8154 -8159 1760 0
-8154 -8158 1758 0
-8152 1820 0
-8152 -8219 1818 0
-8152 -8217 1816 0
-8152 -8215 1814 0
-8152 -8213 1812 0
-8152 -8211 1810 0
-8152 -8209 1808 0
-8152 -8207 1806 0
-8152 -8205 1804 0
-8152 -8203 1802 0
-8152 -8201 1800 0
-8152 -8199 1798 0
-8152 -8197 1796 0
-8152 -8195 1794 0
-8152 -8193 1792 0
-8152 -8191 1790 0
-8152 -8189 1788 0
-8152 -8187 1786 0
-8152 -8185 1784 0
-8152 -8183 1782 0
-8152 -8181 1780 0
-8152 -8179 1778 0
-8152 -8177 1776 0
-8152 -8175 1774 0
-8152 -8173 1772 0
-8152 -8171 1770 0
-8152 -8169 1768 0
-8152 -8167 1766 0
-8152 -8165 1764 0
-8152 -8163 1762 0
-8152 -8161 1760 0
-8152 -8159 1758 0
-8152 -8158 1756 0
-8150 1818 0
-8150 -8219 1816 0
-8150 -8217 1814 0
-8150 -8215 1812 0
-8150 -8213 1810 0
-8150 -8211 1808 0
-8150 -8209 1806 0
-8150 -8207 1804 0
-8150 -8205 1802 0
-8150 -8203 1800 0
-8150 -8201 1798 0
-8150 -8199 1796 0
-8150 -8197 1794 0
-8150 -8195 1792 0
-8150 -8193 1790 0
-8150 -8191 1788 0
-8150 -8189 1786 0
-8150 -8187 1784 0
-8150 -8185 1782 0
-8150 -8183 1780 0
-8150 -8181 1778 0
-8150 -8179 1776 0
-8150 -8177 1774 0
-8150 -8175 1772 0
-8150 -8173 1770 0
-8150 -8171 1768 0
-8150 -8169 1766 0
-8150 -8167 1764 0
-8150 -8165 1762 0
-8150 -8163 1760 0
-8150 -8161 1758 0
-8150 -8159 1756 0
-8150 -8158 1754 0
-8148 1816 0
-8148 -8219 1814 0
-8148 -8217 1812 0
-8148 -8215 1810 0
-8148 -8213 1808 0
-8148 -8211 1806 0
-8148 -8209 1804 0
-8148 -8207 1802 0
-8148 -8205 1800 0
-8148 -8203 1798 0
-8148 -8201 1796 0
-8148 -8199 1794 0
-8148 -8197 1792 0
-8148 -8195 1790 0
-8148 -8193 1788 0
-8148 -8191 1786 0
-8148 -8189 1784 0
-8148 -8187 1782 0
-8148 -8185 1780 0
-8148 -8183 1778 0
-8148 -8181 1776 0
-8148 -8179 1774 0
-8148 -8177 1772 0
-8148 -8175 1770 0
-8148 -8173 1768 0
-8148 -8171 1766 0
-8148 -8169 1764 0
-8148 -8167 1762 0
-8148 -8165 1760 0
-8148 -8163 1758 0
-8148 -8161 1756 0
-8148 -8159 1754 0
-8148 -8158 1752 0
-8146 1814 0
-8146 -8219 1812 0
-8146 -8217 1810 0
-8146 -8215 1808 0
-8146 -8213 1806 0
-8146 -8211 1804 0
-8146 -8209 1802 0
-8146 -8207 1800 0
-8146 -8205 1798 0
-8146 -8203 1796 0
-8146 -8201 1794 0
-8146 -8199 1792 0
-8146 -8197 1790 0
-8146 -8195 1788 0
-8146 -8193 1786 0
-8146 -8191 1784 0
-8146 -8189 1782 0
-8146 -8187 1780 0
-8146 -8185 1778 0
-8146 -8183 1776 0
-8146 -8181 1774 0
-8146 -8179 1772 0
-8146 -8177 1770 0
-8146 -8175 1768 0
-8146 -8173 1766 0
-8146 -8171 1764 0
-8146 -8169 1762 0
-8146 -8167 1760 0
-8146 -8165 1758 0
-8146 -8163 1756 0
-8146 -8161 1754 0
-8146 -8159 1752 0
-8146 -8158 1750 0
-8144 1812 0
-8144 -8219 1810 0
-8144 -8217 1808 0
-8144 -8215 1806 0
-8144 -8213 1804 0
-8144 -8211 1802 0
-8144 -8209 1800 0
-8144 -8207 1798 0
-8144 -8205 1796 0
-8144 -8203 1794 0
-8144 -8201 1792 0
-8144 -8199 1790 0
-8144 -8197 1788 0
-8144 -8195 1786 0
-8144 -8193 1784 0
-8144 -8191 1782 0
-8144 -8189 1780 0
-8144 -8187 1778 0
-8144 -8185 1776 0
-8144 -8183 1774 0
-8144 -8181 1772 0
-8144 -8179 1770 0
-8144 -8177 1768 0
-8144 -8175 1766 0
-8144 -8173 1764 0
-8144 -8171 1762 0
-8144 -8169 1760 0
-8144 -8167 1758 0
-8144 -8165 1756 0
-8144 -8163 1754 0
-8144 -8161 1752 0
-8144 -8159 1750 0
-8144 -8158 1748 0
-8142 1810 0
-8142 -8219 1808 0
-8142 -8217 1806 0
-8142 -8215 1804 0
-8142 -8213 1802 0
-8142 -8211 1800 0
-8142 -8209 1798 0
-8142 -8207 1796 0
-8142 -8205 1794 0
-8142 -8203 1792 0
-8142 -8201 1790 0
-8142 -8199 1788 0
-8142 -8197 1786 0
-8142 -8195 1784 0
-8142 -8193 1782 0
-8142 -8191 1780 0
-8142 -8189 1778 0
-8142 -8187 1776 0
-8142 -8185 1774 0
-8142 -8183 1772 0
-8142 -8181 1770 0
-8142 -8179 1768 0
-8142 -8177 1766 0
-8142 -8175 1764 0
-8142 -8173 1762 0
-8142 -8171 1760 0
-8142 -8169 1758 0
-8142 -8167 1756 0
-8142 -8165 1754 0
-8142 -8163 1752 0
-8142 -8161 1750 0
-8142 -8159 1748 0
-8142 -8158 1746 0
-8140 1808 0
-8140 -8219 1806 0
-8140 -8217 1804 0
-8140 -8215 1802 0
-8140 -8213 1800 0
-8140 -8211 1798 0
-8140 -8209 1796 0
-8140 -8207 1794 0
-8140 -8205 1792 0
-8140 -8203 1790 0
-8140 -8201 1788 0
-8140 -8199 1786 0
-8140 -8197 1784 0
-8140 -8195 1782 0
-8140 -8193 1780 0
-8140 -8191 1778 0
-8140 -8189 1776 0
-8140 -8187 1774 0
-8140 -8185 1772 0
-8140 -8183 1770 0
-8140 -8181 1768 0
-8140 -8179 1766 0
-8140 -8177 1764 0
-8140 -8175 1762 0
-8140 -8173 1760 0
-8140 -8171 1758 0
-8140 -8169 1756 0
-8140 -8167 1754 0
-8140 -8165 1752 0
-8140 -8163 1750 0
-8140 -8161 1748 0
-8140 -8159 1746 0
-8140 -8158 1744 0
-8138 1806 0
-8138 -8219 1804 0
-8138 -8217 1802 0
-8138 -8215 1800 0
-8138 -8213 1798 0
-8138 -8211 1796 0
-8138 -8209 1794 0
-8138 -8207 1792 0
-8138 -8205 1790 0
-8138 -8203 1788 0
-8138 -8201 1786 0
-8138 -8199 1784 0
-8138 -8197 1782 0
-8138 -8195 1780 0
-8138 -8193 1778 0
-8138 -8191 1776 0
-8138 -8189 1774 0
-8138 -8187 1772 0
-8138 -8185 1770 0
-8138 -8183 1768 0
-8138 -8181 1766 0
-8138 -8179 1764 0
-8138 -8177 1762 0
-8138 -8175 1760 0
-8138 -8173 1758 0
-8138 -8171 1756 0
-8138 -8169 1754 0
-8138 -8167 1752 0
-8138 -8165 1750 0
-8138 -8163 1748 0
-8138 -8161 1746 0
-8138 -8159 1744 0
-8138 -8158 1742 0
-8136 1804 0
-8136 -8219 1802 0
-8136 -8217 1800 0
-8136 -8215 1798 0
-8136 -8213 1796 0
-8136 -8211 1794 0
-8136 -8209 1792 0
-8136 -8207 1790 0
-8136 -8205 1788 0
-8136 -8203 1786 0
-8136 -8201 1784 0
-8136 -8199 1782 0
-8136 -8197 1780 0
-8136 -8195 1778 0
-8136 -8193 1776 0
-8136 -8191 1774 0
-8136 -8189 1772 0
-8136 -8187 1770 0
-8136 -8185 1768 0
-8136 -8183 1766 0
-8136 -8181 1764 0
-8136 -8179 1762 0
-8136 -8177 1760 0
-8136 -8175 1758 0
-8136 -8173 1756 0
-8136 -8171 1754 0
-8136 -8169 1752 0
-8136 -8167 1750 0
-8136 -8165 1748 0
-8136 -8163 1746 0
-8136 -8161 1744 0
-8136 -8159 1742 0
-8136 -8158 1740 0
-8134 1802 0
-8134 -8219 1800 0
-8134 -8217 1798 0
-8134 -8215 1796 0
-8134 -8213 1794 0
-8134 -8211 1792 0
-8134 -8209 1790 0
-8134 -8207 1788 0
-8134 -8205 1786 0
-8134 -8203 1784 0
-8134 -8201 1782 0
-8134 -8199 1780 0
-8134 -8197 1778 0
-8134 -8195 1776 0
-8134 -8193 1774 0
-8134 -8191 1772 0
-8134 -8189 1770 0
-8134 -8187 1768 0
-8134 -8185 1766 0
-8134 -8183 1764 0
-8134 -8181 1762 0
-8134 -8179 1760 0
-8134 -8177 1758 0
-8134 -8175 1756 0
-8134 -8173 1754 0
-8134 -8171 1752 0
-8134 -8169 1750 0
-8134 -8167 1748 0
-8134 -8165 1746 0
-8134 -8163 1744 0
-8134 -8161 1742 0
-8134 -8159 1740 0
-8134 -8158 1738 0
-8132 1800 0
-8132 -8219 1798 0
-8132 -8217 1796 0
-8132 -8215 1794 0
-8132 -8213 1792 0
-8132 -8211 1790 0
-8132 -8209 1788 0
-8132 -8207 1786 0
-8132 -8205 1784 0
-8132 -8203 1782 0
-8132 -8201 1780 0
-8132 -8199 1778 0
-8132 -8197 1776 0
-8132 -8195 1774 0
-8132 -8193 1772 0
-8132 -8191 1770 0
-8132 -8189 1768 0
-8132 -8187 1766 0
-8132 -8185 1764 0
-8132 -8183 1762 0
-8132 -8181 1760 0
-8132 -8179 1758 0
-8132 -8177 1756 0
-8132 -8175 1754 0
-8132 -8173 1752 0
-8132 -8171 1750 0
-8132 -8169 1748 0
-8132 -8167 1746 0
-8132 -8165 1744 0
-8132 -8163 1742 0
-8132 -8161 1740 0
-8132 -8159 1738 0
-8132 -8158 1736 0
-8130 1798 0
-8130 -8219 1796 0
-8130 -8217 1794 0
-8130 -8215 1792 0
-8130 -8213 1790 0
-8130 -8211 1788 0
-8130 -8209 1786 0
-8130 -8207 1784 0
-8130 -8205 1782 0
-8130 -8203 1780 0
-8130 -8201 1778 0
-8130 -8199 1776 0
-8130 -8197 1774 0
-8130 -8195 1772 0
-8130 -8193 1770 0
-8130 -8191 1768 0
-8130 -8189 1766 0
-8130 -8187 1764 0
-8130 -8185 1762 0
-8130 -8183 1760 0
-8130 -8181 1758 0
-8130 -8179 1756 0
-8130 -8177 1754 0
-8130 -8175 1752 0
-8130 -8173 1750 0
-8130 -8171 1748 0
-8130 -8169 1746 0
-8130 -8167 1744 0
-8130 -8165 1742 0
-8130 -8163 1740 0
-8130 -8161 1738 0
-8130 -8159 1736 0
-8130 -8158 1734 0
-8128 1796 0
-8128 -8219 1794 0
-8128 -8217 1792 0
-8128 -8215 1790 0
-8128 -8213 1788 0
-8128 -8211 1786 0
-8128 -8209 1784 0
-8128 -8207 1782 0
-8128 -8205 1780 0
-8128 -8203 1778 0
-8128 -8201 1776 0
-8128 -8199 1774 0
-8128 -8197 1772 0
-8128 -8195 1770 0
-8128 -8193 1768 0
-8128 -8191 1766 0
-8128 -8189 1764 0
-8128 -8187 1762 0
-8128 -8185 1760 0
-8128 -8183 1758 0
-8128 -8181 1756 0
-8128 -8179 1754 0
-8128 -8177 1752 0
-8128 -8175 1750 0
-8128 -8173 1748 0
-8128 -8171 1746 0
-8128 -8169 1744 0
-8128 -8167 1742 0
-8128 -8165 1740 0
-8128 -8163 1738 0
-8128 -8161 1736 0
-8128 -8159 1734 0
-8128 -8158 1732 0
-8126 1794 0
-8126 -8219 1792 0
-8126 -8217 1790 0
-8126 -8215 1788 0
-8126 -8213 1786 0
-8126 -8211 1784 0
-8126 -8209 1782 0
-8126 -8207 1780 0
-8126 -8205 1778 0
-8126 -8203 1776 0
-8126 -8201 1774 0
-8126 -8199 1772 0
-8126 -8197 1770 0
-8126 -8195 1768 0
-8126 -8193 1766 0
-8126 -8191 1764 0
-8126 -8189 1762 0
-8126 -8187 1760 0
-8126 -8185 1758 0
-8126 -8183 1756 0
-8126 -8181 1754 0
-8126 -8179 1752 0
-8126 -8177 1750 0
-8126 -8175 1748 0
-8126 -8173 1746 0
-8126 -8171 1744 0
-8126 -8169 1742 0
-8126 -8167 1740 0
-8126 -8165 1738 0
-8126 -8163 1736 0
-8126 -8161 1734 0
-8126 -8159 1732 0
-8126 -8158 1730 0
-8124 1792 0
-8124 -8219 1790 0
-8124 -8217 1788 0
-8124 -8215 1786 0
-8124 -8213 1784 0
-8124 -8211 1782 0
-8124 -8209 1780 0
-8124 -8207 1778 0
-8124 -8205 1776 0
-8124 -8203 1774 0
-8124 -8201 1772 0
-8124 -8199 1770 0
-8124 -8197 1768 0
-8124 -8195 1766 0
-8124 -8193 1764 0
-8124 -8191 1762 0
-8124 -8189 1760 0
-8124 -8187 1758 0
-8124 -8185 1756 0
-8124 -8183 1754 0
-8124 -8181 1752 0
-8124 -8179 1750 0
-8124 -8177 1748 0
-8124 -8175 1746 0
-8124 -8173 1744 0
-8124 -8171 1742 0
-8124 -8169 1740 0
-8124 -8167 1738 0
-8124 -8165 1736 0
-8124 -8163 1734 0
-8124 -8161 1732 0
-8124 -8159 1730 0
-8124 -8158 1728 0
-8122 1790 0
-8122 -8219 1788 0
-8122 -8217 1786 0
-8122 -8215 1784 0
-8122 -8213 1782 0
-8122 -8211 1780 0
-8122 -8209 1778 0
-8122 -8207 1776 0
-8122 -8205 1774 0
-8122 -8203 1772 0
-8122 -8201 1770 0
-8122 -8199 1768 0
-8122 -8197 1766 0
-8122 -8195 1764 0
-8122 -8193 1762 0
-8122 -8191 1760 0
-8122 -8189 1758 0
-8122 -8187 1756 0
-8122 -8185 1754 0
-8122 -8183 1752 0
-8122 -8181 1750 0
-8122 -8179 1748 0
-8122 -8177 1746 0
-8122 -8175 1744 0
-8122 -8173 1742 0
-8122 -8171 1740 0
-8122 -8169 1738 0
-8122 -8167 1736 0
-8122 -8165 1734 0
-8122 -8163 1732 0
-8122 -8161 1730 0
-8122 -8159 1728 0
-8122 -8158 1726 0
-8120 1788 0
-8120 -8219 1786 0
-8120 -8217 1784 0
-8120 -8215 1782 0
-8120 -8213 1780 0
-8120 -8211 1778 0
-8120 -8209 1776 0
-8120 -8207 1774 0
-8120 -8205 1772 0
-8120 -8203 1770 0
-8120 -8201 1768 0
-8120 -8199 1766 0
-8120 -8197 1764 0
-8120 -8195 1762 0
-8120 -8193 1760 0
-8120 -8191 1758 0
-8120 -8189 1756 0
-8120 -8187 1754 0
-8120 -8185 1752 0
-8120 -8183 1750 0
-8120 -8181 1748 0
-8120 -8179 1746 0
-8120 -8177 1744 0
-8120 -8175 1742 0
-8120 -8173 1740 0
-8120 -8171 1738 0
-8120 -8169 1736 0
-8120 -8167 1734 0
-8120 -8165 1732 0
-8120 -8163 1730 0
-8120 -8161 1728 0
-8120 -8159 1726 0
-8120 -8158 1724 0
-8118 1786 0
-8118 -8219 1784 0
-8118 -8217 1782 0
-8118 -8215 1780 0
-8118 -8213 1778 0
-8118 -8211 1776 0
-8118 -8209 1774 0
-8118 -8207 1772 0
-8118 -8205 1770 0
-8118 -8203 1768 0
-8118 -8201 1766 0
-8118 -8199 1764 0
-8118 -8197 1762 0
-8118 -8195 1760 0
-8118 -8193 1758 0
-8118 -8191 1756 0
-8118 -8189 1754 0
-8118 -8187 1752 0
-8118 -8185 1750 0
-8118 -8183 1748 0
-8118 -8181 1746 0
-8118 -8179 1744 0
-8118 -8177 1742 0
-8118 -8175 1740 0
-8118 -8173 1738 0
-8118 -8171 1736 0
-8118 -8169 1734 0
-8118 -8167 1732 0
-8118 -8165 1730 0
-8118 -8163 1728 0
-8118 -8161 1726 0
-8118 -8159 1724 0
-8118 -8158 1722 0
-8116 1784 0
-8116 -8219 1782 0
-8116 -8217 1780 0
-8116 -8215 1778 0
-8116 -8213 1776 0
-8116 -8211 1774 0
-8116 -8209 1772 0
-8116 -8207 1770 0
-8116 -8205 1768 0
-8116 -8203 1766 0
-8116 -8201 1764 0
-8116 -8199 1762 0
-8116 -8197 1760 0
-8116 -8195 1758 0
-8116 -8193 1756 0
-8116 -8191 1754 0
-8116 -8189 1752 0
-8116 -8187 1750 0
-8116 -8185 1748 0
-8116 -8183 1746 0
-8116 -8181 1744 0
-8116 -8179 1742 0
-8116 -8177 1740 0
-8116 -8175 1738 0
-8116 -8173 1736 0
-8116 -8171 1734 0
-8116 -8169 1732 0
-8116 -8167 1730 0
-8116 -8165 1728 0
-8116 -8163 1726 0
-8116 -8161 1724 0
-8116 -8159 1722 0
-8116 -8158 1720 0
-8114 1782 0
-8114 -8219 1780 0
-8114 -8217 1778 0
-8114 -8215 1776 0
-8114 -8213 1774 0
-8114 -8211 1772 0
-8114 -8209 1770 0
-8114 -8207 1768 0
-8114 -8205 1766 0
-8114 -8203 1764 0
-8114 -8201 1762 0
-8114 -8199 1760 0
-8114 -8197 1758 0
-8114 -8195 1756 0
-8114 -8193 1754 0
-8114 -8191 1752 0
-8114 -8189 1750 0
-8114 -8187 1748 0
-8114 -8185 1746 0
-8114 -8183 1744 0
-8114 -8181 1742 0
-8114 -8179 1740 0
-8114 -8177 1738 0
-8114 -8175 1736 0
-8114 -8173 1734 0
-8114 -8171 1732 0
-8114 -8169 1730 0
-8114 -8167 1728 0
-8114 -8165 1726 0
-8114 -8163 1724 0
-8114 -8161 1722 0
-8114 -8159 1720 0
-8114 -8158 1718 0
-8112 1780 0
-8112 -8219 1778 0
-8112 -8217 1776 0
-8112 -8215 1774 0
-8112 -8213 1772 0
-8112 -8211 1770 0
-8112 -8209 1768 0
-8112 -8207 1766 0
-8112 -8205 1764 0
-8112 -8203 1762 0
-8112 -8201 1760 0
-8112 -8199 1758 0
-8112 -8197 1756 0
-8112 -8195 1754 0
-8112 -8193 1752 0
-8112 -8191 1750 0
-8112 -8189 1748 0
-8112 -8187 1746 0
-8112 -8185 1744 0
-8112 -8183 1742 0
-8112 -8181 1740 0
-8112 -8179 1738 0
-8112 -8177 1736 0
-8112 -8175 1734 0
-8112 -8173 1732 0
-8112 -8171 1730 0
-8112 -8169 1728 0
-8112 -8167 1726 0
-8112 -8165 1724 0
-8112 -8163 1722 0
-8112 -8161 1720 0
-8112 -8159 1718 0
-8112 -8158 1716 0
-8110 1778 0
-8110 -8219 1776 0
-8110 -8217 1774 0
-8110 -8215 1772 0
-8110 -8213 1770 0
-8110 -8211 1768 0
-8110 -8209 1766 0
-8110 -8207 1764 0
-8110 -8205 1762 0
-8110 -8203 1760 0
-8110 -8201 1758 0
-8110 -8199 1756 0
-8110 -8197 1754 0
-8110 -8195 1752 0
-8110 -8193 1750 0
-8110 -8191 1748 0
-8110 -8189 1746 0
-8110 -8187 1744 0
-8110 -8185 1742 0
-8110 -8183 1740 0
-8110 -8181 1738 0
-8110 -8179 1736 0
-8110 -8177 1734 0
-8110 -8175 1732 0
-8110 -8173 1730 0
-8110 -8171 1728 0
-8110 -8169 1726 0
-8110 -8167 1724 0
-8110 -8165 1722 0
-8110 -8163 1720 0
-8110 -8161 1718 0
-8110 -8159 1716 0
-8110 -8158 1714 0
-8108 1776 0
-8108 -8219 1774 0
-8108 -8217 1772 0
-8108 -8215 1770 0
-8108 -8213 1768 0
-8108 -8211 1766 0
-8108 -8209 1764 0
-8108 -8207 1762 0
-8108 -8205 1760 0
-8108 -8203 1758 0
-8108 -8201 1756 0
-8108 -8199 1754 0
-8108 -8197 1752 0
-8108 -8195 1750 0
-8108 -8193 1748 0
-8108 -8191 1746 0
-8108 -8189 1744 0
-8108 -8187 1742 0
-8108 -8185 1740 0
-8108 -8183 1738 0
-8108 -8181 1736 0
-8108 -8179 1734 0
-8108 -8177 1732 0
-8108 -8175 1730 0
-8108 -8173 1728 0
-8108 -8171 1726 0
-8108 -8169 1724 0
-8108 -8167 1722 0
-8108 -8165 1720 0
-8108 -8163 1718 0
-8108 -8161 1716 0
-8108 -8159 1714 0
-8108 -8158 1712 0
-8106 1774 0
-8106 -8219 1772 0
-8106 -8217 1770 0
-8106 -8215 1768 0
-8106 -8213 1766 0
-8106 -8211 1764 0
-8106 -8209 1762 0
-8106 -8207 1760 0
-8106 -8205 1758 0
-8106 -8203 1756 0
-8106 -8201 1754 0
-8106 -8199 1752 0
-8106 -8197 1750 0
-8106 -8195 1748 0
-8106 -8193 1746 0
-8106 -8191 1744 0
-8106 -8189 1742 0
-8106 -8187 1740 0
-8106 -8185 1738 0
-8106 -8183 1736 0
-8106 -8181 1734 0
-8106 -8179 1732 0
-8106 -8177 1730 0
-8106 -8175 1728 0
-8106 -8173 1726 0
-8106 -8171 1724 0
-8106 -8169 1722 0
-8106 -8167 1720 0
-8106 -8165 1718 0
-8106 -8163 1716 0
-8106 -8161 1714 0
-8106 -8159 1712 0
-8106 -8158 1710 0
-8104 1772 0
-8104 -8219 1770 0
-8104 -8217 1768 0
-8104 -8215 1766 0
-8104 -8213 1764 0
-8104 -8211 1762 0
-8104 -8209 1760 0
-8104 -8207 1758 0
-8104 -8205 1756 0
-8104 -8203 1754 0
-8104 -8201 1752 0
-8104 -8199 1750 0
-8104 -8197 1748 0
-8104 -8195 1746 0
-8104 -8193 1744 0
-8104 -8191 1742 0
-8104 -8189 1740 0
-8104 -8187 1738 0
-8104 -8185 1736 0
-8104 -8183 1734 0
-8104 -8181 1732 0
-8104 -8179 1730 0
-8104 -8177 1728 0
-8104 -8175 1726 0
-8104 -8173 1724 0
-8104 -8171 1722 0
-8104 -8169 1720 0
-8104 -8167 1718 0
-8104 -8165 1716 0
-8104 -8163 1714 0
-8104 -8161 1712 0
-8104 -8159 1710 0
-8104 -8158 1708 0
-8102 1770 0
-8102 -8219 1768 0
-8102 -8217 1766 0
-8102 -8215 1764 0
-8102 -8213 1762 0
-8102 -8211 1760 0
-8102 -8209 1758 0
-8102 -8207 1756 0
-8102 -8205 1754 0
-8102 -8203 1752 0
-8102 -8201 1750 0
-8102 -8199 1748 0
-8102 -8197 1746 0
-8102 -8195 1744 0
-8102 -8193 1742 0
-8102 -8191 1740 0
-8102 -8189 1738 0
-8102 -8187 1736 0
-8102 -8185 1734 0
-8102 -8183 1732 0
-8102 -8181 1730 0
-8102 -8179 1728 0
-8102 -8177 1726 0
-8102 -8175 1724 0
-8102 -8173 1722 0
-8102 -8171 1720 0
-8102 -8169 1718 0
-8102 -8167 1716 0
-8102 -8165 1714 0
-8102 -8163 1712 0
-8102 -8161 1710 0
-8102 -8159 1708 0
-8102 -8158 1706 0
-8100 1768 0
-8100 -8219 1766 0
-8100 -8217 1764 0
-8100 -8215 1762 0
-8100 -8213 1760 0
-8100 -8211 1758 0
-8100 -8209 1756 0
-8100 -8207 1754 0
-8100 -8205 1752 0
-8100 -8203 1750 0
-8100 -8201 1748 0
-8100 -8199 1746 0
-8100 -8197 1744 0
-8100 -8195 1742 0
-8100 -8193 1740 0
-8100 -8191 1738 0
-8100 -8189 1736 0
-8100 -8187 1734 0
-8100 -8185 1732 0
-8100 -8183 1730 0
-8100 -8181 1728 0
-8100 -8179 1726 0
-8100 -8177 1724 0
-8100 -8175 1722 0
-8100 -8173 1720 0
-8100 -8171 1718 0
-8100 -8169 1716 0
-8100 -8167 1714 0
-8100 -8165 1712 0
-8100 -8163 1710 0
-8100 -8161 1708 0
-8100 -8159 1706 0
-8100 -8158 1704 0
-8098 1766 0
-8098 -8219 1764 0
-8098 -8217 1762 0
-8098 -8215 1760 0
-8098 -8213 1758 0
-8098 -8211 1756 0
-8098 -8209 1754 0
-8098 -8207 1752 0
-8098 -8205 1750 0
-8098 -8203 1748 0
-8098 -8201 1746 0
-8098 -8199 1744 0
-8098 -8197 1742 0
-8098 -8195 1740 0
-8098 -8193 1738 0
-8098 -8191 1736 0
-8098 -8189 1734 0
-8098 -8187 1732 0
-8098 -8185 1730 0
-8098 -8183 1728 0
-8098 -8181 1726 0
-8098 -8179 1724 0
-8098 -8177 1722 0
-8098 -8175 1720 0
-8098 -8173 1718 0
-8098 -8171 1716 0
-8098 -8169 1714 0
-8098 -8167 1712 0
-8098 -8165 1710 0
-8098 -8163 1708 0
-8098 -8161 1706 0
-8098 -8159 1704 0
-8098 -8158 1702 0
-8096 1764 0
-8096 -8219 1762 0
-8096 -8217 1760 0
-8096 -8215 1758 0
-8096 -8213 1756 0
-8096 -8211 1754 0
-8096 -8209 1752 0
-8096 -8207 1750 0
-8096 -8205 1748 0
-8096 -8203 1746 0
-8096 -8201 1744 0
-8096 -8199 1742 0
-8096 -8197 1740 0
-8096 -8195 1738 0
-8096 -8193 1736 0
-8096 -8191 1734 0
-8096 -8189 1732 0
-8096 -8187 1730 0
-8096 -8185 1728 0
-8096 -8183 1726 0
-8096 -8181 1724 0
-8096 -8179 1722 0
-8096 -8177 1720 0
-8096 -8175 1718 0
-8096 -8173 1716 0
-8096 -8171 1714 0
-8096 -8169 1712 0
-8096 -8167 1710 0
-8096 -8165 1708 0
-8096 -8163 1706 0
-8096 -8161 1704 0
-8096 -8159 1702 0
-8096 -8158 1700 0
-8095 1762 0
-8095 -8219 1760 0
-8095 -8217 1758 0
-8095 -8215 1756 0
-8095 -8213 1754 0
-8095 -8211 1752 0
-8095 -8209 1750 0
-8095 -8207 1748 0
-8095 -8205 1746 0
-8095 -8203 1744 0
-8095 -8201 1742 0
-8095 -8199 1740 0
-8095 -8197 1738 0
-8095 -8195 1736 0
-8095 -8193 1734 0
-8095 -8191 1732 0
-8095 -8189 1730 0
-8095 -8187 1728 0
-8095 -8185 1726 0
-8095 -8183 1724 0
-8095 -8181 1722 0
-8095 -8179 1720 0
-8095 -8177 1718 0
-8095 -8175 1716 0
-8095 -8173 1714 0
-8095 -8171 1712 0
-8095 -8169 1710 0
-8095 -8167 1708 0
-8095 -8165 1706 0
-8095 -8163 1704 0
-8095 -8161 1702 0
-8095 -8159 1700 0
-8095 -8158 1699 0
c ((aux1498 + aux1499 - shift(num_occupied_by_types_00004, -64))<=64)
8736 -1826 0
8737 -1827 0
8739 -1829 0
8741 -1831 0
8743 -1833 0
8745 -1835 0
8747 -1837 0
8749 -1839 0
8751 -1841 0
8753 -1843 0
8755 -1845 0
8757 -1847 0
8759 -1849 0
8761 -1851 0
8763 -1853 0
8765 -1855 0
8767 -1857 0
8769 -1859 0
8771 -1861 0
8773 -1863 0
8775 -1865 0
8777 -1867 0
8779 -1869 0
8781 -1871 0
8783 -1873 0
8785 -1875 0
8787 -1877 0
8789 -1879 0
8791 -1881 0
8793 -1883 0
8795 -1885 0
8797 -1887 0
8673 -1826 0
8673 8736 -1827 0
8673 8737 -1829 0
8673 8739 -1831 0
8673 8741 -1833 0
8673 8743 -1835 0
8673 8745 -1837 0
8673 8747 -1839 0
8673 8749 -1841 0
8673 8751 -1843 0
8673 8753 -1845 0
8673 8755 -1847 0
8673 8757 -1849 0
8673 8759 -1851 0
8673 8761 -1853 0
8673 8763 -1855 0
8673 8765 -1857 0
8673 8767 -1859 0
8673 8769 -1861 0
8673 8771 -1863 0
8673 8773 -1865 0
8673 8775 -1867 0
8673 8777 -1869 0
8673 8779 -1871 0
8673 8781 -1873 0
8673 8783 -1875 0
8673 8785 -1877 0
8673 8787 -1879 0
8673 8789 -1881 0
8673 8791 -1883 0
8673 8793 -1885 0
8673 8795 -1887 0
8673 8797 -1889 0
8674 -1827 0
8674 8736 -1829 0
8674 8737 -1831 0
8674 8739 -1833 0
8674 8741 -1835 0
8674 8743 -1837 0
8674 8745 -1839 0
8674 8747 -1841 0
8674 8749 -1843 0
8674 8751 -1845 0
8674 8753 -1847 0
8674 8755 -1849 0
8674 8757 -1851 0
8674 8759 -1853 0
8674 8761 -1855 0
8674 8763 -1857 0
8674 8765 -1859 0
8674 8767 -1861 0
8674 8769 -1863 0
8674 8771 -1865 0
8674 8773 -1867 0
8674 8775 -1869 0
8674 8777 -1871 0
8674 8779 -1873 0
8674 8781 -1875 0
8674 8783 -1877 0
8674 8785 -1879 0
8674 8787 -1881 0
8674 8789 -1883 0
8674 8791 -1885 0
8674 8793 -1887 0
8674 8795 -1889 0
8674 8797 -1891 0
8676 -1829 0
8676 8736 -1831 0
8676 8737 -1833 0
8676 8739 -1835 0
8676 8741 -1837 0
8676 8743 -1839 0
8676 8745 -1841 0
8676 8747 -1843 0
8676 8749 -1845 0
8676 8751 -1847 0
8676 8753 -1849 0
8676 8755 -1851 0
8676 8757 -1853 0
8676 8759 -1855 0
8676 8761 -1857 0
8676 8763 -1859 0
8676 8765 -1861 0
8676 8767 -1863 0
8676 8769 -1865 0
8676 8771 -1867 0
8676 8773 -1869 0
8676 8775 -1871 0
8676 8777 -1873 0
8676 8779 -1875 0
8676 8781 -1877 0
8676 8783 -1879 0
8676 8785 -1881 0
8676 8787 -1883 0
8676 8789 -1885 0
8676 8791 -1887 0
8676 8793 -1889 0
8676 8795 -1891 0
8676 8797 -1893 0
8678 -1831 0
8678 8736 -1833 0
8678 8737 -1835 0
8678 8739 -1837 0
8678 8741 -1839 0
8678 8743 -1841 0
8678 8745 -1843 0
8678 8747 -1845 0
8678 8749 -1847 0
8678 8751 -1849 0
8678 8753 -1851 0
8678 8755 -1853 0
8678 8757 -1855 0
8678 8759 -1857 0
8678 8761 -1859 0
8678 8763 -1861 0
8678 8765 -1863 0
8678 8767 -1865 0
8678 8769 -1867 0
8678 8771 -1869 0
8678 8773 -1871 0
8678 8775 -1873 0
8678 8777 -1875 0
8678 8779 -1877 0
8678 8781 -1879 0
8678 8783 -1881 0
8678 8785 -1883 0
8678 8787 -1885 0
8678 8789 -1887 0
8678 8791 -1889 0
8678 8793 -1891 0
8678 8795 -1893 0
8678 8797 -1895 0
8680 -1833 0
8680 8736 -1835 0
8680 8737 -1837 0
8680 8739 -1839 0
8680 8741 -1841 0
8680 8743 -1843 0
8680 8745 -1845 0
8680 8747 -1847 0
8680 8749 -1849 0
8680 8751 -1851 0
8680 8753 -1853 0
8680 8755 -1855 0
8680 8757 -1857 0
8680 8759 -1859 0
8680 8761 -1861 0
8680 8763 -1863 0
8680 8765 -1865 0
8680 8767 -1867 0
8680 8769 -1869 0
8680 8771 -1871 0
8680 8773 -1873 0
8680 8775 -1875 0
8680 8777 -1877 0
8680 8779 -1879 0
8680 8781 -1881 0
8680 8783 -1883 0
8680 8785 -1885 0
8680 8787 -1887 0
8680 8789 -1889 0
8680 8791 -1891 0
8680 8793 -1893 0
8680 8795 -1895 0
8680 8797 -1897 0
8682 -1835 0
8682 8736 -1837 0
8682 8737 -1839 0
8682 8739 -1841 0
8682 8741 -1843 0
8682 8743 -1845 0
8682 8745 -1847 0
8682 8747 -1849 0
8682 8749 -1851 0
8682 8751 -1853 0
8682 8753 -1855 0
8682 8755 -1857 0
8682 8757 -1859 0
8682 8759 -1861 0
8682 8761 -1863 0
8682 8763 -1865 0
8682 8765 -1867 0
8682 8767 -1869 0
8682 8769 -1871 0
8682 8771 -1873 0
8682 8773 -1875 0
8682 8775 -1877 0
8682 8777 -1879 0
8682 8779 -1881 0
8682 8781 -1883 0
8682 8783 -1885 0
8682 8785 -1887 0
8682 8787 -1889 0
8682 8789 -1891 0
8682 8791 -1893 0
8682 8793 -1895 0
8682 8795 -1897 0
8682 8797 -1899 0
8684 -1837 0
8684 8736 -1839 0
8684 8737 -1841 0
8684 8739 -1843 0
8684 8741 -1845 0
8684 8743 -1847 0
8684 8745 -1849 0
8684 8747 -1851 0
8684 8749 -1853 0
8684 8751 -1855 0
8684 8753 -1857 0
8684 8755 -1859 0
8684 8757 -1861 0
8684 8759 -1863 0
8684 8761 -1865 0
8684 8763 -1867 0
8684 8765 -1869 0
8684 8767 -1871 0
8684 8769 -1873 0
8684 8771 -1875 0
8684 8773 -1877 0
8684 8775 -1879 0
8684 8777 -1881 0
8684 8779 -1883 0
8684 8781 -1885 0
8684 8783 -1887 0
8684 8785 -1889 0
8684 8787 -1891 0
8684 8789 -1893 0
8684 8791 -1895 0
8684 8793 -1897 0
8684 8795 -1899 0
8684 8797 -1901 0
8686 -1839 0
8686 8736 -1841 0
8686 8737 -1843 0
8686 8739 -1845 0
8686 8741 -1847 0
8686 8743 -1849 0
8686 8745 -1851 0
8686 8747 -1853 0
8686 8749 -1855 0
8686 8751 -1857 0
8686 8753 -1859 0
8686 8755 -1861 0
8686 8757 -1863 0
8686 8759 -1865 0
8686 8761 -1867 0
8686 8763 -1869 0
8686 8765 -1871 0
8686 8767 -1873 0
8686 8769 -1875 0
8686 8771 -1877 0
8686 8773 -1879 0
8686 8775 -1881 0
8686 8777 -1883 0
8686 8779 -1885 0
8686 8781 -1887 0
8686 8783 -1889 0
8686 8785 -1891 0
8686 8787 -1893 0
8686 8789 -1895 0
8686 8791 -1897 0
8686 8793 -1899 0
8686 8795 -1901 0
8686 8797 -1903 0
8688 -1841 0
8688 8736 -1843 0
8688 8737 -1845 0
8688 8739 -1847 0
8688 8741 -1849 0
8688 8743 -1851 0
8688 8745 -1853 0
8688 8747 -1855 0
8688 8749 -1857 0
8688 8751 -1859 0
8688 8753 -1861 0
8688 8755 -1863 0
8688 8757 -1865 0
8688 8759 -1867 0
8688 8761 -1869 0
8688 8763 -1871 0
8688 8765 -1873 0
8688 8767 -1875 0
8688 8769 -1877 0
8688 8771 -1879 0
8688 8773 -1881 0
8688 8775 -1883 0
8688 8777 -1885 0
8688 8779 -1887 0
8688 8781 -1889 0
8688 8783 -1891 0
8688 8785 -1893 0
8688 8787 -1895 0
8688 8789 -1897 0
8688 8791 -1899 0
8688 8793 -1901 0
8688 8795 -1903 0
8688 8797 -1905 0
8690 -1843 0
8690 8736 -1845 0
8690 8737 -1847 0
8690 8739 -1849 0
8690 8741 -1851 0
8690 8743 -1853 0
8690 8745 -1855 0
8690 8747 -1857 0
8690 8749 -1859 0
8690 8751 -1861 0
8690 8753 -1863 0
8690 8755 -1865 0
8690 8757 -1867 0
8690 8759 -1869 0
8690 8761 -1871 0
8690 8763 -1873 0
8690 8765 -1875 0
8690 8767 -1877 0
8690 8769 -1879 0
8690 8771 -1881 0
8690 8773 -1883 0
8690 8775 -1885 0
8690 8777 -1887 0
8690 8779 -1889 0
8690 8781 -1891 0
8690 8783 -1893 0
8690 8785 -1895 0
8690 8787 -1897 0
8690 8789 -1899 0
8690 8791 -1901 0
8690 8793 -1903 0
8690 8795 -1905 0
8690 8797 -1907 0
8692 -1845 0
8692 8736 -1847 0
8692 8737 -1849 0
8692 8739 -1851 0
8692 8741 -1853 0
8692 8743 -1855 0
8692 8745 -1857 0
8692 8747 -1859 0
8692 8749 -1861 0
8692 8751 -1863 0
8692 8753 -1865 0
8692 8755 -1867 0
8692 8757 -1869 0
8692 8759 -1871 0
8692 8761 -1873 0
8692 8763 -1875 0
8692 8765 -1877 0
8692 8767 -1879 0
8692 8769 -1881 0
8692 8771 -1883 0
8692 8773 -1885 0
8692 8775 -1887 0
8692 8777 -1889 0
8692 8779 -1891 0
8692 8781 -1893 0
8692 8783 -1895 0
8692 8785 -1897 0
8692 8787 -1899 0
8692 8789 -1901 0
8692 8791 -1903 0
8692 8793 -1905 0
8692 8795 -1907 0
8692 8797 -1909 0
8694 -1847 0
8694 8736 -1849 0
8694 8737 -1851 0
8694 8739 -1853 0
8694 8741 -1855 0
8694 8743 -1857 0
8694 8745 -1859 0
8694 8747 -1861 0
8694 8749 -1863 0
8694 8751 -1865 0
8694 8753 -1867 0
8694 8755 -1869 0
8694 8757 -1871 0
8694 8759 -1873 0
8694 8761 -1875 0
8694 8763 -1877 0
8694 8765 -1879 0
8694 8767 -1881 0
8694 8769 -1883 0
8694 8771 -1885 0
8694 8773 -1887 0
8694 8775 -1889 0
8694 8777 -1891 0
8694 8779 -1893 0
8694 8781 -1895 0
8694 8783 -1897 0
8694 8785 -1899 0
8694 8787 -1901 0
8694 8789 -1903 0
8694 8791 -1905 0
8694 8793 -1907 0
8694 8795 -1909 0
8694 8797 -1911 0
8696 -1849 0
8696 8736 -1851 0
8696 8737 -1853 0
8696 8739 -1855 0
8696 8741 -1857 0
8696 8743 -1859 0
8696 8745 -1861 0
8696 8747 -1863 0
8696 8749 -1865 0
8696 8751 -1867 0
8696 8753 -1869 0
8696 8755 -1871 0
8696 8757 -1873 0
8696 8759 -1875 0
8696 8761 -1877 0
8696 8763 -1879 0
8696 8765 -1881 0
8696 8767 -1883 0
8696 8769 -1885 0
8696 8771 -1887 0
8696 8773 -1889 0
8696 8775 -1891 0
8696 8777 -1893 0
8696 8779 -1895 0
8696 8781 -1897 0
8696 8783 -1899 0
8696 8785 -1901 0
8696 8787 -1903 0
8696 8789 -1905 0
8696 8791 -1907 0
8696 8793 -1909 0
8696 8795 -1911 0
8696 8797 -1913 0
8698 -1851 0
8698 8736 -1853 0
8698 8737 -1855 0
8698 8739 -1857 0
8698 8741 -1859 0
8698 8743 -1861 0
8698 8745 -1863 0
8698 8747 -1865 0
8698 8749 -1867 0
8698 8751 -1869 0
8698 8753 -1871 0
8698 8755 -1873 0
8698 8757 -1875 0
8698 8759 -1877 0
8698 8761 -1879 0
8698 8763 -1881 0
8698 8765 -1883 0
8698 8767 -1885 0
8698 8769 -1887 0
8698 8771 -1889 0
8698 8773 -1891 0
8698 8775 -1893 0
8698 8777 -1895 0
8698 8779 -1897 0
8698 8781 -1899 0
8698 8783 -1901 0
8698 8785 -1903 0
8698 8787 -1905 0
8698 8789 -1907 0
8698 8791 -1909 0
8698 8793 -1911 0
8698 8795 -1913 0
8698 8797 -1915 0
8700 -1853 0
8700 8736 -1855 0
8700 8737 -1857 0
8700 8739 -1859 0
8700 8741 -1861 0
8700 8743 -1863 0
8700 8745 -1865 0
8700 8747 -1867 0
8700 8749 -1869 0
8700 8751 -1871 0
8700 8753 -1873 0
8700 8755 -1875 0
8700 8757 -1877 0
8700 8759 -1879 0
8700 8761 -1881 0
8700 8763 -1883 0
8700 8765 -1885 0
8700 8767 -1887 0
8700 8769 -1889 0
8700 8771 -1891 0
8700 8773 -1893 0
8700 8775 -1895 0
8700 8777 -1897 0
8700 8779 -1899 0
8700 8781 -1901 0
8700 8783 -1903 0
8700 8785 -1905 0
8700 8787 -1907 0
8700 8789 -1909 0
8700 8791 -1911 0
8700 8793 -1913 0
8700 8795 -1915 0
8700 8797 -1917 0
8702 -1855 0
8702 8736 -1857 0
8702 8737 -1859 0
8702 8739 -1861 0
8702 8741 -1863 0
8702 8743 -1865 0
8702 8745 -1867 0
8702 8747 -1869 0
8702 8749 -1871 0
8702 8751 -1873 0
8702 8753 -1875 0
8702 8755 -1877 0
8702 8757 -1879 0
8702 8759 -1881 0
8702 8761 -1883 0
8702 8763 -1885 0
8702 8765 -1887 0
8702 8767 -1889 0
8702 8769 -1891 0
8702 8771 -1893 0
8702 8773 -1895 0
8702 8775 -1897 0
8702 8777 -1899 0
8702 8779 -1901 0
8702 8781 -1903 0
8702 8783 -1905 0
8702 8785 -1907 0
8702 8787 -1909 0
8702 8789 -1911 0
8702 8791 -1913 0
8702 8793 -1915 0
8702 8795 -1917 0
8702 8797 -1919 0
8704 -1857 0
8704 8736 -1859 0
8704 8737 -1861 0
8704 8739 -1863 0
8704 8741 -1865 0
8704 8743 -1867 0
8704 8745 -1869 0
8704 8747 -1871 0
8704 8749 -1873 0
8704 8751 -1875 0
8704 8753 -1877 0
8704 8755 -1879 0
8704 8757 -1881 0
8704 8759 -1883 0
8704 8761 -1885 0
8704 8763 -1887 0
8704 8765 -1889 0
8704 8767 -1891 0
8704 8769 -1893 0
8704 8771 -1895 0
8704 8773 -1897 0
8704 8775 -1899 0
8704 8777 -1901 0
8704 8779 -1903 0
8704 8781 -1905 0
8704 8783 -1907 0
8704 8785 -1909 0
8704 8787 -1911 0
8704 8789 -1913 0
8704 8791 -1915 0
8704 8793 -1917 0
8704 8795 -1919 0
8704 8797 -1921 0
8706 -1859 0
8706 8736 -1861 0
8706 8737 -1863 0
8706 8739 -1865 0
8706 8741 -1867 0
8706 8743 -1869 0
8706 8745 -1871 0
8706 8747 -1873 0
8706 8749 -1875 0
8706 8751 -1877 0
8706 8753 -1879 0
8706 8755 -1881 0
8706 8757 -1883 0
8706 8759 -1885 0
8706 8761 -1887 0
8706 8763 -1889 0
8706 8765 -1891 0
8706 8767 -1893 0
8706 8769 -1895 0
8706 8771 -1897 0
8706 8773 -1899 0
8706 8775 -1901 0
8706 8777 -1903 0
8706 8779 -1905 0
8706 8781 -1907 0
8706 8783 -1909 0
8706 8785 -1911 0
8706 8787 -1913 0
8706 8789 -1915 0
8706 8791 -1917 0
8706 8793 -1919 0
8706 8795 -1921 0
8706 8797 -1923 0
8708 -1861 0
8708 8736 -1863 0
8708 8737 -1865 0
8708 8739 -1867 0
8708 8741 -1869 0
8708 8743 -1871 0
8708 8745 -1873 0
8708 8747 -1875 0
8708 8749 -1877 0
8708 8751 -1879 0
8708 8753 -1881 0
8708 8755 -1883 0
8708 8757 -1885 0
8708 8759 -1887 0
8708 8761 -1889 0
8708 8763 -1891 0
8708 8765 -1893 0
8708 8767 -1895 0
8708 8769 -1897 0
8708 8771 -1899 0
8708 8773 -1901 0
8708 8775 -1903 0
8708 8777 -1905 0
8708 8779 -1907 0
8708 8781 -1909 0
8708 8783 -1911 0
8708 8785 -1913 0
8708 8787 -1915 0
8708 8789 -1917 0
8708 8791 -1919 0
8708 8793 -1921 0
8708 8795 -1923 0
8708 8797 -1925 0
8710 -1863 0
8710 8736 -1865 0
8710 8737 -1867 0
8710 8739 -1869 0
8710 8741 -1871 0
8710 8743 -1873 0
8710 8745 -1875 0
8710 8747 -1877 0
8710 8749 -1879 0
8710 8751 -1881 0
8710 8753 -1883 0
8710 8755 -1885 0
8710 8757 -1887 0
8710 8759 -1889 0
8710 8761 -1891 0
8710 8763 -1893 0
8710 8765 -1895 0
8710 8767 -1897 0
8710 8769 -1899 0
8710 8771 -1901 0
8710 8773 -1903 0
8710 8775 -1905 0
8710 8777 -1907 0
8710 8779 -1909 0
8710 8781 -1911 0
8710 8783 -1913 0
8710 8785 -1915 0
8710 8787 -1917 0
8710 8789 -1919 0
8710 8791 -1921 0
8710 8793 -1923 0
8710 8795 -1925 0
8710 8797 -1927 0
8712 -1865 0
8712 8736 -1867 0
8712 8737 -1869 0
8712 8739 -1871 0
8712 8741 -1873 0
8712 8743 -1875 0
8712 8745 -1877 0
8712 8747 -1879 0
8712 8749 -1881 0
8712 8751 -1883 0
8712 8753 -1885 0
8712 8755 -1887 0
8712 8757 -1889 0
8712 8759 -1891 0
8712 8761 -1893 0
8712 8763 -1895 0
8712 8765 -1897 0
8712 8767 -1899 0
8712 8769 -1901 0
8712 8771 -1903 0
8712 8773 -1905 0
8712 8775 -1907 0
8712 8777 -1909 0
8712 8779 -1911 0
8712 8781 -1913 0
8712 8783 -1915 0
8712 8785 -1917 0
8712 8787 -1919 0
8712 8789 -1921 0
8712 8791 -1923 0
8712 8793 -1925 0
8712 8795 -1927 0
8712 8797 -1929 0
8714 -1867 0
8714 8736 -1869 0
8714 8737 -1871 0
8714 8739 -1873 0
8714 8741 -1875 0
8714 8743 -1877 0
8714 8745 -1879 0
8714 8747 -1881 0
8714 8749 -1883 0
8714 8751 -1885 0
8714 8753 -1887 0
8714 8755 -1889 0
8714 8757 -1891 0
8714 8759 -1893 0
8714 8761 -1895 0
8714 8763 -1897 0
8714 8765 -1899 0
8714 8767 -1901 0
8714 8769 -1903 0
8714 8771 -1905 0
8714 8773 -1907 0
8714 8775 -1909 0
8714 8777 -1911 0
8714 8779 -1913 0
8714 8781 -1915 0
8714 8783 -1917 0
8714 8785 -1919 0
8714 8787 -1921 0
8714 8789 -1923 0
8714 8791 -1925 0
8714 8793 -1927 0
8714 8795 -1929 0
8714 8797 -1931 0
8716 -1869 0
8716 8736 -1871 0
8716 8737 -1873 0
8716 8739 -1875 0
8716 8741 -1877 0
8716 8743 -1879 0
8716 8745 -1881 0
8716 8747 -1883 0
8716 8749 -1885 0
8716 8751 -1887 0
8716 8753 -1889 0
8716 8755 -1891 0
8716 8757 -1893 0
8716 8759 -1895 0
8716 8761 -1897 0
8716 8763 -1899 0
8716 8765 -1901 0
8716 8767 -1903 0
8716 8769 -1905 0
8716 8771 -1907 0
8716 8773 -1909 0
8716 8775 -1911 0
8716 8777 -1913 0
8716 8779 -1915 0
8716 8781 -1917 0
8716 8783 -1919 0
8716 8785 -1921 0
8716 8787 -1923 0
8716 8789 -1925 0
8716 8791 -1927 0
8716 8793 -1929 0
8716 8795 -1931 0
8716 8797 -1933 0
8718 -1871 0
8718 8736 -1873 0
8718 8737 -1875 0
8718 8739 -1877 0
8718 8741 -1879 0
8718 8743 -1881 0
8718 8745 -1883 0
8718 8747 -1885 0
8718 8749 -1887 0
8718 8751 -1889 0
8718 8753 -1891 0
8718 8755 -1893 0
8718 8757 -1895 0
8718 8759 -1897 0
8718 8761 -1899 0
8718 8763 -1901 0
8718 8765 -1903 0
8718 8767 -1905 0
8718 8769 -1907 0
8718 8771 -1909 0
8718 8773 -1911 0
8718 8775 -1913 0
8718 8777 -1915 0
8718 8779 -1917 0
8718 8781 -1919 0
8718 8783 -1921 0
8718 8785 -1923 0
8718 8787 -1925 0
8718 8789 -1927 0
8718 8791 -1929 0
8718 8793 -1931 0
8718 8795 -1933 0
8718 8797 -1935 0
8720 -1873 0
8720 8736 -1875 0
8720 8737 -1877 0
8720 8739 -1879 0
8720 8741 -1881 0
8720 8743 -1883 0
8720 8745 -1885 0
8720 8747 -1887 0
8720 8749 -1889 0
8720 8751 -1891 0
8720 8753 -1893 0
8720 8755 -1895 0
8720 8757 -1897 0
8720 8759 -1899 0
8720 8761 -1901 0
8720 8763 -1903 0
8720 8765 -1905 0
8720 8767 -1907 0
8720 8769 -1909 0
8720 8771 -1911 0
8720 8773 -1913 0
8720 8775 -1915 0
8720 8777 -1917 0
8720 8779 -1919 0
8720 8781 -1921 0
8720 8783 -1923 0
8720 8785 -1925 0
8720 8787 -1927 0
8720 8789 -1929 0
8720 8791 -1931 0
8720 8793 -1933 0
8720 8795 -1935 0
8720 8797 -1937 0
8722 -1875 0
8722 8736 -1877 0
8722 8737 -1879 0
8722 8739 -1881 0
8722 8741 -1883 0
8722 8743 -1885 0
8722 8745 -1887 0
8722 8747 -1889 0
8722 8749 -1891 0
8722 8751 -1893 0
8722 8753 -1895 0
8722 8755 -1897 0
8722 8757 -1899 0
8722 8759 -1901 0
8722 8761 -1903 0
8722 8763 -1905 0
8722 8765 -1907 0
8722 8767 -1909 0
8722 8769 -1911 0
8722 8771 -1913 0
8722 8773 -1915 0
8722 8775 -1917 0
8722 8777 -1919 0
8722 8779 -1921 0
8722 8781 -1923 0
8722 8783 -1925 0
8722 8785 -1927 0
8722 8787 -1929 0
8722 8789 -1931 0
8722 8791 -1933 0
8722 8793 -1935 0
8722 8795 -1937 0
8722 8797 -1939 0
8724 -1877 0
8724 8736 -1879 0
8724 8737 -1881 0
8724 8739 -1883 0
8724 8741 -1885 0
8724 8743 -1887 0
8724 8745 -1889 0
8724 8747 -1891 0
8724 8749 -1893 0
8724 8751 -1895 0
8724 8753 -1897 0
8724 8755 -1899 0
8724 8757 -1901 0
8724 8759 -1903 0
8724 8761 -1905 0
8724 8763 -1907 0
8724 8765 -1909 0
8724 8767 -1911 0
8724 8769 -1913 0
8724 8771 -1915 0
8724 8773 -1917 0
8724 8775 -1919 0
8724 8777 -1921 0
8724 8779 -1923 0
8724 8781 -1925 0
8724 8783 -1927 0
8724 8785 -1929 0
8724 8787 -1931 0
8724 8789 -1933 0
8724 8791 -1935 0
8724 8793 -1937 0
8724 8795 -1939 0
8724 8797 -1941 0
8726 -1879 0
8726 8736 -1881 0
8726 8737 -1883 0
8726 8739 -1885 0
8726 8741 -1887 0
8726 8743 -1889 0
8726 8745 -1891 0
8726 8747 -1893 0
8726 8749 -1895 0
8726 8751 -1897 0
8726 8753 -1899 0
8726 8755 -1901 0
8726 8757 -1903 0
8726 8759 -1905 0
8726 8761 -1907 0
8726 8763 -1909 0
8726 8765 -1911 0
8726 8767 -1913 0
8726 8769 -1915 0
8726 8771 -1917 0
8726 8773 -1919 0
8726 8775 -1921 0
8726 8777 -1923 0
8726 8779 -1925 0
8726 8781 -1927 0
8726 8783 -1929 0
8726 8785 -1931 0
8726 8787 -1933 0
8726 8789 -1935 0
8726 8791 -1937 0
8726 8793 -1939 0
8726 8795 -1941 0
8726 8797 -1943 0
8728 -1881 0
8728 8736 -1883 0
8728 8737 -1885 0
8728 8739 -1887 0
8728 8741 -1889 0
8728 8743 -1891 0
8728 8745 -1893 0
8728 8747 -1895 0
8728 8749 -1897 0
8728 8751 -1899 0
8728 8753 -1901 0
8728 8755 -1903 0
8728 8757 -1905 0
8728 8759 -1907 0
8728 8761 -1909 0
8728 8763 -1911 0
8728 8765 -1913 0
8728 8767 -1915 0
8728 8769 -1917 0
8728 8771 -1919 0
8728 8773 -1921 0
8728 8775 -1923 0
8728 8777 -1925 0
8728 8779 -1927 0
8728 8781 -1929 0
8728 8783 -1931 0
8728 8785 -1933 0
8728 8787 -1935 0
8728 8789 -1937 0
8728 8791 -1939 0
8728 8793 -1941 0
8728 8795 -1943 0
8728 8797 -1945 0
8730 -1883 0
8730 8736 -1885 0
8730 8737 -1887 0
8730 8739 -1889 0
8730 8741 -1891 0
8730 8743 -1893 0
8730 8745 -1895 0
8730 8747 -1897 0
8730 8749 -1899 0
8730 8751 -1901 0
8730 8753 -1903 0
8730 8755 -1905 0
8730 8757 -1907 0
8730 8759 -1909 0
8730 8761 -1911 0
8730 8763 -1913 0
8730 8765 -1915 0
8730 8767 -1917 0
8730 8769 -1919 0
8730 8771 -1921 0
8730 8773 -1923 0
8730 8775 -1925 0
8730 8777 -1927 0
8730 8779 -1929 0
8730 8781 -1931 0
8730 8783 -1933 0
8730 8785 -1935 0
8730 8787 -1937 0
8730 8789 -1939 0
8730 8791 -1941 0
8730 8793 -1943 0
8730 8795 -1945 0
8730 8797 -1947 0
8732 -1885 0
8732 8736 -1887 0
8732 8737 -1889 0
8732 8739 -1891 0
8732 8741 -1893 0
8732 8743 -1895 0
8732 8745 -1897 0
8732 8747 -1899 0
8732 8749 -1901 0
8732 8751 -1903 0
8732 8753 -1905 0
8732 8755 -1907 0
8732 8757 -1909 0
8732 8759 -1911 0
8732 8761 -1913 0
8732 8763 -1915 0
8732 8765 -1917 0
8732 8767 -1919 0
8732 8769 -1921 0
8732 8771 -1923 0
8732 8773 -1925 0
8732 8775 -1927 0
8732 8777 -1929 0
8732 8779 -1931 0
8732 8781 -1933 0
8732 8783 -1935 0
8732 8785 -1937 0
8732 8787 -1939 0
8732 8789 -1941 0
8732 8791 -1943 0
8732 8793 -1945 0
8732 8795 -1947 0
8732 8797 -1949 0
8734 -1887 0
8734 8736 -1889 0
8734 8737 -1891 0
8734 8739 -1893 0
8734 8741 -1895 0
8734 8743 -1897 0
8734 8745 -1899 0
8734 8747 -1901 0
8734 8749 -1903 0
8734 8751 -1905 0
8734 8753 -1907 0
8734 8755 -1909 0
8734 8757 -1911 0
8734 8759 -1913 0
8734 8761 -1915 0
8734 8763 -1917 0
8734 8765 -1919 0
8734 8767 -1921 0
8734 8769 -1923 0
8734 8771 -1925 0
8734 8773 -1927 0
8734 8775 -1929 0
8734 8777 -1931 0
8734 8779 -1933 0
8734 8781 -1935 0
8734 8783 -1937 0
8734 8785 -1939 0
8734 8787 -1941 0
8734 8789 -1943 0
8734 8791 -1945 0
8734 8793 -1947 0
8734 8795 -1949 0
8734 8797 -1951 0
c (64<=(aux1498 + aux1499 - shift(num_occupied_by_types_00004, -64)))
-8797 1951 0
-8795 1949 0
-8793 1947 0
-8791 1945 0
-8789 1943 0
-8787 1941 0
-8785 1939 0
-8783 1937 0
-8781 1935 0
-8779 1933 0
-8777 1931 0
-8775 1929 0
-8773 1927 0
-8771 1925 0
-8769 1923 0
-8767 1921 0
-8765 1919 0
-8763 1917 0
-8761 1915 0
-8759 1913 0
-8757 1911 0
-8755 1909 0
-8753 1907 0
-8751 1905 0
-8749 1903 0
-8747 1901 0
-8745 1899 0
-8743 1897 0
-8741 1895 0
-8739 1893 0
-8737 1891 0
-8736 1889 0
-8734 1951 0
-8734 -8797 1949 0
-8734 -8795 1947 0
-8734 -8793 1945 0
-8734 -8791 1943 0
-8734 -8789 1941 0
-8734 -8787 1939 0
-8734 -8785 1937 0
-8734 -8783 1935 0
-8734 -8781 1933 0
-8734 -8779 1931 0
-8734 -8777 1929 0
-8734 -8775 1927 0
-8734 -8773 1925 0
-8734 -8771 1923 0
-8734 -8769 1921 0
-8734 -8767 1919 0
-8734 -8765 1917 0
-8734 -8763 1915 0
-8734 -8761 1913 0
-8734 -8759 1911 0
-8734 -8757 1909 0
-8734 -8755 1907 0
-8734 -8753 1905 0
-8734 -8751 1903 0
-8734 -8749 1901 0
-8734 -8747 1899 0
-8734 -8745 1897 0
-8734 -8743 1895 0
-8734 -8741 1893 0
-8734 -8739 1891 0
-8734 -8737 1889 0
-8734 -8736 1887 0
-8732 1949 0
-8732 -8797 1947 0
-8732 -8795 1945 0
-8732 -8793 1943 0
-8732 -8791 1941 0
-8732 -8789 1939 0
-8732 -8787 1937 0
-8732 -8785 1935 0
-8732 -8783 1933 0
-8732 -8781 1931 0
-8732 -8779 1929 0
-8732 -8777 1927 0
-8732 -8775 1925 0
-8732 -8773 1923 0
-8732 -8771 1921 0
-8732 -8769 1919 0
-8732 -8767 1917 0
-8732 -8765 1915 0
-8732 -8763 1913 0
-8732 -8761 1911 0
-8732 -8759 1909 0
-8732 -8757 1907 0
-8732 -8755 1905 0
-8732 -8753 1903 0
-8732 -8751 1901 0
-8732 -8749 1899 0
-8732 -8747 1897 0
-8732 -8745 1895 0
-8732 -8743 1893 0
-8732 -8741 1891 0
-8732 -8739 1889 0
-8732 -8737 1887 0
-8732 -8736 1885 0
-8730 1947 0
-8730 -8797 1945 0
-8730 -8795 1943 0
-8730 -8793 1941 0
-8730 -8791 1939 0
-8730 -8789 1937 0
-8730 -8787 1935 0
-8730 -8785 1933 0
-8730 -8783 1931 0
-8730 -8781 1929 0
-8730 -8779 1927 0
-8730 -8777 1925 0
-8730 -8775 1923 0
-8730 -8773 1921 0
-8730 -8771 1919 0
-8730 -8769 1917 0
-8730 -8767 1915 0
-8730 -8765 1913 0
-8730 -8763 1911 0
-8730 -8761 1909 0
-8730 -8759 1907 0
-8730 -8757 1905 0
-8730 -8755 1903 0
-8730 -8753 1901 0
-8730 -8751 1899 0
-8730 -8749 1897 0
-8730 -8747 1895 0
-8730 -8745 1893 0
-8730 -8743 1891 0
-8730 -8741 1889 0
-8730 -8739 1887 0
-8730 -8737 1885 0
-8730 -8736 1883 0
-8728 1945 0
-8728 -8797 1943 0
-8728 -8795 1941 0
-8728 -8793 1939 0
-8728 -8791 1937 0
-8728 -8789 1935 0
-8728 -8787 1933 0
-8728 -8785 1931 0
-8728 -8783 1929 0
-8728 -8781 1927 0
-8728 -8779 1925 0
-8728 -8777 1923 0
-8728 -8775 1921 0
-8728 -8773 1919 0
-8728 -8771 1917 0
-8728 -8769 1915 0
-8728 -8767 1913 0
-8728 -8765 1911 0
-8728 -8763 1909 0
-8728 -8761 1907 0
-8728 -8759 1905 0
-8728 -8757 1903 0
-8728 -8755 1901 0
-8728 -8753 1899 0
-8728 -8751 1897 0
-8728 -8749 1895 0
-8728 -8747 1893 0
-8728 -8745 1891 0
-8728 -8743 1889 0
-8728 -8741 1887 0
-8728 -8739 1885 0
-8728 -8737 1883 0
-8728 -8736 1881 0
-8726 1943 0
-8726 -8797 1941 0
-8726 -8795 1939 0
-8726 -8793 1937 0
-8726 -8791 1935 0
-8726 -8789 1933 0
-8726 -8787 1931 0
-8726 -8785 1929 0
-8726 -8783 1927 0
-8726 -8781 1925 0
-8726 -8779 1923 0
-8726 -8777 1921 0
-8726 -8775 1919 0
-8726 -8773 1917 0
-8726 -8771 1915 0
-8726 -8769 1913 0
-8726 -8767 1911 0
-8726 -8765 1909 0
-8726 -8763 1907 0
-8726 -8761 1905 0
-8726 -8759 1903 0
-8726 -8757 1901 0
-8726 -8755 1899 0
-8726 -8753 1897 0
-8726 -8751 1895 0
-8726 -8749 1893 0
-8726 -8747 1891 0
-8726 -8745 1889 0
-8726 -8743 1887 0
-8726 -8741 1885 0
-8726 -8739 1883 0
-8726 -8737 1881 0
-8726 -8736 1879 0
-8724 1941 0
-8724 -8797 1939 0
-8724 -8795 1937 0
-8724 -8793 1935 0
-8724 -8791 1933 0
-8724 -8789 1931 0
-8724 -8787 1929 0
-8724 -8785 1927 0
-8724 -8783 1925 0
-8724 -8781 1923 0
-8724 -8779 1921 0
-8724 -8777 1919 0
-8724 -8775 1917 0
-8724 -8773 1915 0
-8724 -8771 1913 0
-8724 -8769 1911 0
-8724 -8767 1909 0
-8724 -8765 1907 0
-8724 -8763 1905 0
-8724 -8761 1903 0
-8724 -8759 1901 0
-8724 -8757 1899 0
-8724 -8755 1897 0
-8724 -8753 1895 0
-8724 -8751 1893 0
-8724 -8749 1891 0
-8724 -8747 1889 0
-8724 -8745 1887 0
-8724 -8743 1885 0
-8724 -8741 1883 0
-8724 -8739 1881 0
-8724 -8737 1879 0
-8724 -8736 1877 0
-8722 1939 0
-8722 -8797 1937 0
-8722 -8795 1935 0
-8722 -8793 1933 0
-8722 -8791 1931 0
-8722 -8789 1929 0
-8722 -8787 1927 0
-8722 -8785 1925 0
-8722 -8783 1923 0
-8722 -8781 1921 0
-8722 -8779 1919 0
-8722 -8777 1917 0
-8722 -8775 1915 0
-8722 -8773 1913 0
-8722 -8771 1911 0
-8722 -8769 1909 0
-8722 -8767 1907 0
-8722 -8765 1905 0
-8722 -8763 1903 0
-8722 -8761 1901 0
-8722 -8759 1899 0
-8722 -8757 1897 0
-8722 -8755 1895 0
-8722 -8753 1893 0
-8722 -8751 1891 0
-8722 -8749 1889 0
-8722 -8747 1887 0
-8722 -8745 1885 0
-8722 -8743 1883 0
-8722 -8741 1881 0
-8722 -8739 1879 0
-8722 -8737 1877 0
-8722 -8736 1875 0
-8720 1937 0
-8720 -8797 1935 0
-8720 -8795 1933 0
-8720 -8793 1931 0
-8720 -8791 1929 0
-8720 -8789 1927 0
-8720 -8787 1925 0
-8720 -8785 1923 0
-8720 -8783 1921 0
-8720 -8781 1919 0
-8720 -8779 1917 0
-8720 -8777 1915 0
-8720 -8775 1913 0
-8720 -8773 1911 0
-8720 -8771 1909 0
-8720 -8769 1907 0
-8720 -8767 1905 0
-8720 -8765 1903 0
-8720 -8763 1901 0
-8720 -8761 1899 0
-8720 -8759 1897 0
-8720 -8757 1895 0
-8720 -8755 1893 0
-8720 -8753 1891 0
-8720 -8751 1889 0
-8720 -8749 1887 0
-8720 -8747 1885 0
-8720 -8745 1883 0
-8720 -8743 1881 0
-8720 -8741 1879 0
-8720 -8739 1877 0
-8720 -8737 1875 0
-8720 -8736 1873 0
-8718 1935 0
-8718 -8797 1933 0
-8718 -8795 1931 0
-8718 -8793 1929 0
-8718 -8791 1927 0
-8718 -8789 1925 0
-8718 -8787 1923 0
-8718 -8785 1921 0
-8718 -8783 1919 0
-8718 -8781 1917 0
-8718 -8779 1915 0
-8718 -8777 1913 0
-8718 -8775 1911 0
-8718 -8773 1909 0
-8718 -8771 1907 0
-8718 -8769 1905 0
-8718 -8767 1903 0
-8718 -8765 1901 0
-8718 -8763 1899 0
-8718 -8761 1897 0
-8718 -8759 1895 0
-8718 -8757 1893 0
-8718 -8755 1891 0
-8718 -8753 1889 0
-8718 -8751 1887 0
-8718 -8749 1885 0
-8718 -8747 1883 0
-8718 -8745 1881 0
-8718 -8743 1879 0
-8718 -8741 1877 0
-8718 -8739 1875 0
-8718 -8737 1873 0
-8718 -8736 1871 0
-8716 1933 0
-8716 -8797 1931 0
-8716 -8795 1929 0
-8716 -8793 1927 0
-8716 -8791 1925 0
-8716 -8789 1923 0
-8716 -8787 1921 0
-8716 -8785 1919 0
-8716 -8783 1917 0
-8716 -8781 1915 0
-8716 -8779 1913 0
-8716 -8777 1911 0
-8716 -8775 1909 0
-8716 -8773 1907 0
-8716 -8771 1905 0
-8716 -8769 1903 0
-8716 -8767 1901 0
-8716 -8765 1899 0
-8716 -8763 1897 0
-8716 -8761 1895 0
-8716 -8759 1893 0
-8716 -8757 1891 0
-8716 -8755 1889 0
-8716 -8753 1887 0
-8716 -8751 1885 0
-8716 -8749 1883 0
-8716 -8747 1881 0
-8716 -8745 1879 0
-8716 -8743 1877 0
-8716 -8741 1875 0
-8716 -8739 1873 0
-8716 -8737 1871 0
-8716 -8736 1869 0
-8714 1931 0
-8714 -8797 1929 0
-8714 -8795 1927 0
-8714 -8793 1925 0
-8714 -8791 1923 0
-8714 -8789 1921 0
-8714 -8787 1919 0
-8714 -8785 1917 0
-8714 -8783 1915 0
-8714 -8781 1913 0
-8714 -8779 1911 0
-8714 -8777 1909 0
-8714 -8775 1907 0
-8714 -8773 1905 0
-8714 -8771 1903 0
-8714 -8769 1901 0
-8714 -8767 1899 0
-8714 -8765 1897 0
-8714 -8763 1895 0
-8714 -8761 1893 0
-8714 -8759 1891 0
-8714 -8757 1889 0
-8714 -8755 1887 0
-8714 -8753 1885 0
-8714 -8751 1883 0
-8714 -8749 1881 0
-8714 -8747 1879 0
-8714 -8745 1877 0
-8714 -8743 1875 0
-8714 -8741 1873 0
-8714 -8739 1871 0
-8714 -8737 1869 0
-8714 -8736 1867 0
-8712 1929 0
-8712 -8797 1927 0
-8712 -8795 1925 0
-8712 -8793 1923 0
-8712 -8791 1921 0
-8712 -8789 1919 0
-8712 -8787 1917 0
-8712 -8785 1915 0
-8712 -8783 1913 0
-8712 -8781 1911 0
-8712 -8779 1909 0
-8712 -8777 1907 0
-8712 -8775 1905 0
-8712 -8773 1903 0
-8712 -8771 1901 0
-8712 -8769 1899 0
-8712 -8767 1897 0
-8712 -8765 1895 0
-8712 -8763 1893 0
-8712 -8761 1891 0
-8712 -8759 1889 0
-8712 -8757 1887 0
-8712 -8755 1885 0
-8712 -8753 1883 0
-8712 -8751 1881 0
-8712 -8749 1879 0
-8712 -8747 1877 0
-8712 -8745 1875 0
-8712 -8743 1873 0
-8712 -8741 1871 0
-8712 -8739 1869 0
-8712 -8737 1867 0
-8712 -8736 1865 0
-8710 1927 0
-8710 -8797 1925 0
-8710 -8795 1923 0
-8710 -8793 1921 0
-8710 -8791 1919 0
-8710 -8789 1917 0
-8710 -8787 1915 0
-8710 -8785 1913 0
-8710 -8783 1911 0
-8710 -8781 1909 0
-8710 -8779 1907 0
-8710 -8777 1905 0
-8710 -8775 1903 0
-8710 -8773 1901 0
-8710 -8771 1899 0
-8710 -8769 1897 0
-8710 -8767 1895 0
-8710 -8765 1893 0
-8710 -8763 1891 0
-8710 -8761 1889 0
-8710 -8759 1887 0
-8710 -8757 1885 0
-8710 -8755 1883 0
-8710 -8753 1881 0
-8710 -8751 1879 0
-8710 -8749 1877 0
-8710 -8747 1875 0
-8710 -8745 1873 0
-8710 -8743 1871 0
-8710 -8741 1869 0
-8710 -8739 1867 0
-8710 -8737 1865 0
-8710 -8736 1863 0
-8708 1925 0
-8708 -8797 1923 0
-8708 -8795 1921 0
-8708 -8793 1919 0
-8708 -8791 1917 0
-8708 -8789 1915 0
-8708 -8787 1913 0
-8708 -8785 1911 0
-8708 -8783 1909 0
-8708 -8781 1907 0
-8708 -8779 1905 0
-8708 -8777 1903 0
-8708 -8775 1901 0
-8708 -8773 1899 0
-8708 -8771 1897 0
-8708 -8769 1895 0
-8708 -8767 1893 0
-8708 -8765 1891 0
-8708 -8763 1889 0
-8708 -8761 1887 0
-8708 -8759 1885 0
-8708 -8757 1883 0
-8708 -8755 1881 0
-8708 -8753 1879 0
-8708 -8751 1877 0
-8708 -8749 1875 0
-8708 -8747 1873 0
-8708 -8745 1871 0
-8708 -8743 1869 0
-8708 -8741 1867 0
-8708 -8739 1865 0
-8708 -8737 1863 0
-8708 -8736 1861 0
-8706 1923 0
-8706 -8797 1921 0
-8706 -8795 1919 0
-8706 -8793 1917 0
-8706 -8791 1915 0
-8706 -8789 1913 0
-8706 -8787 1911 0
-8706 -8785 1909 0
-8706 -8783 1907 0
-8706 -8781 1905 0
-8706 -8779 1903 0
-8706 -8777 1901 0
-8706 -8775 1899 0
-8706 -8773 1897 0
-8706 -8771 1895 0
-8706 -8769 1893 0
-8706 -8767 1891 0
-8706 -8765 1889 0
-8706 -8763 1887 0
-8706 -8761 1885 0
-8706 -8759 1883 0
-8706 -8757 1881 0
-8706 -8755 1879 0
-8706 -8753 1877 0
-8706 -8751 1875 0
-8706 -8749 1873 0
-8706 -8747 1871 0
-8706 -8745 1869 0
-8706 -8743 1867 0
-8706 -8741 1865 0
-8706 -8739 1863 0
-8706 -8737 1861 0
-8706 -8736 1859 0
-8704 1921 0
-8704 -8797 1919 0
-8704 -8795 1917 0
-8704 -8793 1915 0
-8704 -8791 1913 0
-8704 -8789 1911 0
-8704 -8787 1909 0
-8704 -8785 1907 0
-8704 -8783 1905 0
-8704 -8781 1903 0
-8704 -8779 1901 0
-8704 -8777 1899 0
-8704 -8775 1897 0
-8704 -8773 1895 0
-8704 -8771 1893 0
-8704 -8769 1891 0
-8704 -8767 1889 0
-8704 -8765 1887 0
-8704 -8763 1885 0
-8704 -8761 1883 0
-8704 -8759 1881 0
-8704 -8757 1879 0
-8704 -8755 1877 0
-8704 -8753 1875 0
-8704 -8751 1873 0
-8704 -8749 1871 0
-8704 -8747 1869 0
-8704 -8745 1867 0
-8704 -8743 1865 0
-8704 -8741 1863 0
-8704 -8739 1861 0
-8704 -8737 1859 0
-8704 -8736 1857 0
-8702 1919 0
-8702 -8797 1917 0
-8702 -8795 1915 0
-8702 -8793 1913 0
-8702 -8791 1911 0
-8702 -8789 1909 0
-8702 -8787 1907 0
-8702 -8785 1905 0
-8702 -8783 1903 0
-8702 -8781 1901 0
-8702 -8779 1899 0
-8702 -8777 1897 0
-8702 -8775 1895 0
-8702 -8773 1893 0
-8702 -8771 1891 0
-8702 -8769 1889 0
-8702 -8767 1887 0
-8702 -8765 1885 0
-8702 -8763 1883 0
-8702 -8761 1881 0
-8702 -8759 1879 0
-8702 -8757 1877 0
-8702 -8755 1875 0
-8702 -8753 1873 0
-8702 -8751 1871 0
-8702 -8749 1869 0
-8702 -8747 1867 0
-8702 -8745 1865 0
-8702 -8743 1863 0
-8702 -8741 1861 0
-8702 -8739 1859 0
-8702 -8737 1857 0
-8702 -8736 1855 0
-8700 1917 0
-8700 -8797 1915 0
-8700 -8795 1913 0
-8700 -8793 1911 0
-8700 -8791 1909 0
-8700 -8789 1907 0
-8700 -8787 1905 0
-8700 -8785 1903 0
-8700 -8783 1901 0
-8700 -8781 1899 0
-8700 -8779 1897 0
-8700 -8777 1895 0
-8700 -8775 1893 0
-8700 -8773 1891 0
-8700 -8771 1889 0
-8700 -8769 1887 0
-8700 -8767 1885 0
-8700 -8765 1883 0
-8700 -8763 1881 0
-8700 -8761 1879 0
-8700 -8759 1877 0
-8700 -8757 1875 0
-8700 -8755 1873 0
-8700 -8753 1871 0
-8700 -8751 1869 0
-8700 -8749 1867 0
-8700 -8747 1865 0
-8700 -8745 1863 0
-8700 -8743 1861 0
-8700 -8741 1859 0
-8700 -8739 1857 0
-8700 -8737 1855 0
-8700 -8736 1853 0
-8698 1915 0
-8698 -8797 1913 0
-8698 -8795 1911 0
-8698 -8793 1909 0
-8698 -8791 1907 0
-8698 -8789 1905 0
-8698 -8787 1903 0
-8698 -8785 1901 0
-8698 -8783 1899 0
-8698 -8781 1897 0
-8698 -8779 1895 0
-8698 -8777 1893 0
-8698 -8775 1891 0
-8698 -8773 1889 0
-8698 -8771 1887 0
-8698 -8769 1885 0
-8698 -8767 1883 0
-8698 -8765 1881 0
-8698 -8763 1879 0
-8698 -8761 1877 0
-8698 -8759 1875 0
-8698 -8757 1873 0
-8698 -8755 1871 0
-8698 -8753 1869 0
-8698 -8751 1867 0
-8698 -8749 1865 0
-8698 -8747 1863 0
-8698 -8745 1861 0
-8698 -8743 1859 0
-8698 -8741 1857 0
-8698 -8739 1855 0
-8698 -8737 1853 0
-8698 -8736 1851 0
-8696 1913 0
-8696 -8797 1911 0
-8696 -8795 1909 0
-8696 -8793 1907 0
-8696 -8791 1905 0
-8696 -8789 1903 0
-8696 -8787 1901 0
-8696 -8785 1899 0
-8696 -8783 1897 0
-8696 -8781 1895 0
-8696 -8779 1893 0
-8696 -8777 1891 0
-8696 -8775 1889 0
-8696 -8773 1887 0
-8696 -8771 1885 0
-8696 -8769 1883 0
-8696 -8767 1881 0
-8696 -8765 1879 0
-8696 -8763 1877 0
-8696 -8761 1875 0
-8696 -8759 1873 0
-8696 -8757 1871 0
-8696 -8755 1869 0
-8696 -8753 1867 0
-8696 -8751 1865 0
-8696 -8749 1863 0
-8696 -8747 1861 0
-8696 -8745 1859 0
-8696 -8743 1857 0
-8696 -8741 1855 0
-8696 -8739 1853 0
-8696 -8737 1851 0
-8696 -8736 1849 0
-8694 1911 0
-8694 -8797 1909 0
-8694 -8795 1907 0
-8694 -8793 1905 0
-8694 -8791 1903 0
-8694 -8789 1901 0
-8694 -8787 1899 0
-8694 -8785 1897 0
-8694 -8783 1895 0
-8694 -8781 1893 0
-8694 -8779 1891 0
-8694 -8777 1889 0
-8694 -8775 1887 0
-8694 -8773 1885 0
-8694 -8771 1883 0
-8694 -8769 1881 0
-8694 -8767 1879 0
-8694 -8765 1877 0
-8694 -8763 1875 0
-8694 -8761 1873 0
-8694 -8759 1871 0
-8694 -8757 1869 0
-8694 -8755 1867 0
-8694 -8753 1865 0
-8694 -8751 1863 0
-8694 -8749 1861 0
-8694 -8747 1859 0
-8694 -8745 1857 0
-8694 -8743 1855 0
-8694 -8741 1853 0
-8694 -8739 1851 0
-8694 -8737 1849 0
-8694 -8736 1847 0
-8692 1909 0
-8692 -8797 1907 0
-8692 -8795 1905 0
-8692 -8793 1903 0
-8692 -8791 1901 0
-8692 -8789 1899 0
-8692 -8787 1897 0
-8692 -8785 1895 0
-8692 -8783 1893 0
-8692 -8781 1891 0
-8692 -8779 1889 0
-8692 -8777 1887 0
-8692 -8775 1885 0
-8692 -8773 1883 0
-8692 -8771 1881 0
-8692 -8769 1879 0
-8692 -8767 1877 0
-8692 -8765 1875 0
-8692 -8763 1873 0
-8692 -8761 1871 0
-8692 -8759 1869 0
-8692 -8757 1867 0
-8692 -8755 1865 0
-8692 -8753 1863 0
-8692 -8751 1861 0
-8692 -8749 1859 0
-8692 -8747 1857 0
-8692 -8745 1855 0
-8692 -8743 1853 0
-8692 -8741 1851 0
-8692 -8739 1849 0
-8692 -8737 1847 0
-8692 -8736 1845 0
-8690 1907 0
-8690 -8797 1905 0
-8690 -8795 1903 0
-8690 -8793 1901 0
-8690 -8791 1899 0
-8690 -8789 1897 0
-8690 -8787 1895 0
-8690 -8785 1893 0
-8690 -8783 1891 0
-8690 -8781 1889 0
-8690 -8779 1887 0
-8690 -8777 1885 0
-8690 -8775 1883 0
-8690 -8773 1881 0
-8690 -8771 1879 0
-8690 -8769 1877 0
-8690 -8767 1875 0
-8690 -8765 1873 0
-8690 -8763 1871 0
-8690 -8761 1869 0
-8690 -8759 1867 0
-8690 -8757 1865 0
-8690 -8755 1863 0
-8690 -8753 1861 0
-8690 -8751 1859 0
-8690 -8749 1857 0
-8690 -8747 1855 0
-8690 -8745 1853 0
-8690 -8743 1851 0
-8690 -8741 1849 0
-8690 -8739 1847 0
-8690 -8737 1845 0
-8690 -8736 1843 0
-8688 1905 0
-8688 -8797 1903 0
-8688 -8795 1901 0
-8688 -8793 1899 0
-8688 -8791 1897 0
-8688 -8789 1895 0
-8688 -8787 1893 0
-8688 -8785 1891 0
-8688 -8783 1889 0
-8688 -8781 1887 0
-8688 -8779 1885 0
-8688 -8777 1883 0
-8688 -8775 1881 0
-8688 -8773 1879 0
-8688 -8771 1877 0
-8688 -8769 1875 0
-8688 -8767 1873 0
-8688 -8765 1871 0
-8688 -8763 1869 0
-8688 -8761 1867 0
-8688 -8759 1865 0
-8688 -8757 1863 0
-8688 -8755 1861 0
-8688 -8753 1859 0
-8688 -8751 1857 0
-8688 -8749 1855 0
-8688 -8747 1853 0
-8688 -8745 1851 0
-8688 -8743 1849 0
-8688 -8741 1847 0
-8688 -8739 1845 0
-8688 -8737 1843 0
-8688 -8736 1841 0
-8686 1903 0
-8686 -8797 1901 0
-8686 -8795 1899 0
-8686 -8793 1897 0
-8686 -8791 1895 0
-8686 -8789 1893 0
-8686 -8787 1891 0
-8686 -8785 1889 0
-8686 -8783 1887 0
-8686 -8781 1885 0
-8686 -8779 1883 0
-8686 -8777 1881 0
-8686 -8775 1879 0
-8686 -8773 1877 0
-8686 -8771 1875 0
-8686 -8769 1873 0
-8686 -8767 1871 0
-8686 -8765 1869 0
-8686 -8763 1867 0
-8686 -8761 1865 0
-8686 -8759 1863 0
-8686 -8757 1861 0
-8686 -8755 1859 0
-8686 -8753 1857 0
-8686 -8751 1855 0
-8686 -8749 1853 0
-8686 -8747 1851 0
-8686 -8745 1849 0
-8686 -8743 1847 0
-8686 -8741 1845 0
-8686 -8739 1843 0
-8686 -8737 1841 0
-8686 -8736 1839 0
-8684 1901 0
-8684 -8797 1899 0
-8684 -8795 1897 0
-8684 -8793 1895 0
-8684 -8791 1893 0
-8684 -8789 1891 0
-8684 -8787 1889 0
-8684 -8785 1887 0
-8684 -8783 1885 0
-8684 -8781 1883 0
-8684 -8779 1881 0
-8684 -8777 1879 0
-8684 -8775 1877 0
-8684 -8773 1875 0
-8684 -8771 1873 0
-8684 -8769 1871 0
-8684 -8767 1869 0
-8684 -8765 1867 0
-8684 -8763 1865 0
-8684 -8761 1863 0
-8684 -8759 1861 0
-8684 -8757 1859 0
-8684 -8755 1857 0
-8684 -8753 1855 0
-8684 -8751 1853 0
-8684 -8749 1851 0
-8684 -8747 1849 0
-8684 -8745 1847 0
-8684 -8743 1845 0
-8684 -8741 1843 0
-8684 -8739 1841 0
-8684 -8737 1839 0
-8684 -8736 1837 0
-8682 1899 0
-8682 -8797 1897 0
-8682 -8795 1895 0
-8682 -8793 1893 0
-8682 -8791 1891 0
-8682 -8789 1889 0
-8682 -8787 1887 0
-8682 -8785 1885 0
-8682 -8783 1883 0
-8682 -8781 1881 0
-8682 -8779 1879 0
-8682 -8777 1877 0
-8682 -8775 1875 0
-8682 -8773 1873 0
-8682 -8771 1871 0
-8682 -8769 1869 0
-8682 -8767 1867 0
-8682 -8765 1865 0
-8682 -8763 1863 0
-8682 -8761 1861 0
-8682 -8759 1859 0
-8682 -8757 1857 0
-8682 -8755 1855 0
-8682 -8753 1853 0
-8682 -8751 1851 0
-8682 -8749 1849 0
-8682 -8747 1847 0
-8682 -8745 1845 0
-8682 -8743 1843 0
-8682 -8741 1841 0
-8682 -8739 1839 0
-8682 -8737 1837 0
-8682 -8736 1835 0
-8680 1897 0
-8680 -8797 1895 0
-8680 -8795 1893 0
-8680 -8793 1891 0
-8680 -8791 1889 0
-8680 -8789 1887 0
-8680 -8787 1885 0
-8680 -8785 1883 0
-8680 -8783 1881 0
-8680 -8781 1879 0
-8680 -8779 1877 0
-8680 -8777 1875 0
-8680 -8775 1873 0
-8680 -8773 1871 0
-8680 -8771 1869 0
-8680 -8769 1867 0
-8680 -8767 1865 0
-8680 -8765 1863 0
-8680 -8763 1861 0
-8680 -8761 1859 0
-8680 -8759 1857 0
-8680 -8757 1855 0
-8680 -8755 1853 0
-8680 -8753 1851 0
-8680 -8751 1849 0
-8680 -8749 1847 0
-8680 -8747 1845 0
-8680 -8745 1843 0
-8680 -8743 1841 0
-8680 -8741 1839 0
-8680 -8739 1837 0
-8680 -8737 1835 0
-8680 -8736 1833 0
-8678 1895 0
-8678 -8797 1893 0
-8678 -8795 1891 0
-8678 -8793 1889 0
-8678 -8791 1887 0
-8678 -8789 1885 0
-8678 -8787 1883 0
-8678 -8785 1881 0
-8678 -8783 1879 0
-8678 -8781 1877 0
-8678 -8779 1875 0
-8678 -8777 1873 0
-8678 -8775 1871 0
-8678 -8773 1869 0
-8678 -8771 1867 0
-8678 -8769 1865 0
-8678 -8767 1863 0
-8678 -8765 1861 0
-8678 -8763 1859 0
-8678 -8761 1857 0
-8678 -8759 1855 0
-8678 -8757 1853 0
-8678 -8755 1851 0
-8678 -8753 1849 0
-8678 -8751 1847 0
-8678 -8749 1845 0
-8678 -8747 1843 0
-8678 -8745 1841 0
-8678 -8743 1839 0
-8678 -8741 1837 0
-8678 -8739 1835 0
-8678 -8737 1833 0
-8678 -8736 1831 0
-8676 1893 0
-8676 -8797 1891 0
-8676 -8795 1889 0
-8676 -8793 1887 0
-8676 -8791 1885 0
-8676 -8789 1883 0
-8676 -8787 1881 0
-8676 -8785 1879 0
-8676 -8783 1877 0
-8676 -8781 1875 0
-8676 -8779 1873 0
-8676 -8777 1871 0
-8676 -8775 1869 0
-8676 -8773 1867 0
-8676 -8771 1865 0
-8676 -8769 1863 0
-8676 -8767 1861 0
-8676 -8765 1859 0
-8676 -8763 1857 0
-8676 -8761 1855 0
-8676 -8759 1853 0
-8676 -8757 1851 0
-8676 -8755 1849 0
-8676 -8753 1847 0
-8676 -8751 1845 0
-8676 -8749 1843 0
-8676 -8747 1841 0
-8676 -8745 1839 0
-8676 -8743 1837 0
-8676 -8741 1835 0
-8676 -8739 1833 0
-8676 -8737 1831 0
-8676 -8736 1829 0
-8674 1891 0
-8674 -8797 1889 0
-8674 -8795 1887 0
-8674 -8793 1885 0
-8674 -8791 1883 0
-8674 -8789 1881 0
-8674 -8787 1879 0
-8674 -8785 1877 0
-8674 -8783 1875 0
-8674 -8781 1873 0
-8674 -8779 1871 0
-8674 -8777 1869 0
-8674 -8775 1867 0
-8674 -8773 1865 0
-8674 -8771 1863 0
-8674 -8769 1861 0
-8674 -8767 1859 0
-8674 -8765 1857 0
-8674 -8763 1855 0
-8674 -8761 1853 0
-8674 -8759 1851 0
-8674 -8757 1849 0
-8674 -8755 1847 0
-8674 -8753 1845 0
-8674 -8751 1843 0
-8674 -8749 1841 0
-8674 -8747 1839 0
-8674 -8745 1837 0
-8674 -8743 1835 0
-8674 -8741 1833 0
-8674 -8739 1831 0
-8674 -8737 1829 0
-8674 -8736 1827 0
-8673 1889 0
-8673 -8797 1887 0
-8673 -8795 1885 0
-8673 -8793 1883 0
-8673 -8791 1881 0
-8673 -8789 1879 0
-8673 -8787 1877 0
-8673 -8785 1875 0
-8673 -8783 1873 0
-8673 -8781 1871 0
-8673 -8779 1869 0
-8673 -8777 1867 0
-8673 -8775 1865 0
-8673 -8773 1863 0
-8673 -8771 1861 0
-8673 -8769 1859 0
-8673 -8767 1857 0
-8673 -8765 1855 0
-8673 -8763 1853 0
-8673 -8761 1851 0
-8673 -8759 1849 0
-8673 -8757 1847 0
-8673 -8755 1845 0
-8673 -8753 1843 0
-8673 -8751 1841 0
-8673 -8749 1839 0
-8673 -8747 1837 0
-8673 -8745 1835 0
-8673 -8743 1833 0
-8673 -8741 1831 0
-8673 -8739 1829 0
-8673 -8737 1827 0
-8673 -8736 1826 0
