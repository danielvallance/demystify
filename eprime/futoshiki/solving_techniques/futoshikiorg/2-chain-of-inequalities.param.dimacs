p cnf 282 1031                                                                                      

1 0
c Encoding variable: field_00001_00001 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00001_00001' order represents '1' with '2'
c Var 'field_00001_00001' direct represents '1' with '2'
c Var 'field_00001_00001' order represents '2' with '3'
-2 3 0
c Var 'field_00001_00001' direct represents '2' with '4'
2 -3 4 0
-4 3 0
-4 -2 0
c Var 'field_00001_00001' order represents '3' with '5'
-3 5 0
c Var 'field_00001_00001' direct represents '3' with '6'
3 -5 6 0
-6 5 0
-6 -3 0
c Var 'field_00001_00001' direct represents '4' with '-5'
2 4 6 -5 0
c Encoding variable: field_00001_00002 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00001_00002' order represents '1' with '7'
c Var 'field_00001_00002' direct represents '1' with '7'
c Var 'field_00001_00002' order represents '2' with '8'
-7 8 0
c Var 'field_00001_00002' direct represents '2' with '9'
7 -8 9 0
-9 8 0
-9 -7 0
c Var 'field_00001_00002' order represents '3' with '10'
-8 10 0
c Var 'field_00001_00002' direct represents '3' with '11'
8 -10 11 0
-11 10 0
-11 -8 0
c Var 'field_00001_00002' direct represents '4' with '-10'
7 9 11 -10 0
c Encoding variable: field_00001_00003 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00001_00003' direct represents '1' with '12'
c Var 'field_00001_00003' direct represents '2' with '13'
c Var 'field_00001_00003' direct represents '3' with '14'
c Var 'field_00001_00003' direct represents '4' with '15'
12 13 14 15 0
-12 -13 0
-12 -14 0
-12 -15 0
-13 -14 0
-13 -15 0
-14 -15 0
c Encoding variable: field_00001_00004 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00001_00004' direct represents '1' with '16'
c Var 'field_00001_00004' direct represents '2' with '17'
c Var 'field_00001_00004' direct represents '3' with '18'
c Var 'field_00001_00004' direct represents '4' with '19'
16 17 18 19 0
-16 -17 0
-16 -18 0
-16 -19 0
-17 -18 0
-17 -19 0
-18 -19 0
c Encoding variable: field_00002_00001 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00002_00001' direct represents '1' with '20'
c Var 'field_00002_00001' direct represents '2' with '21'
c Var 'field_00002_00001' direct represents '3' with '22'
c Var 'field_00002_00001' direct represents '4' with '23'
20 21 22 23 0
-20 -21 0
-20 -22 0
-20 -23 0
-21 -22 0
-21 -23 0
-22 -23 0
c Encoding variable: field_00002_00002 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00002_00002' order represents '1' with '24'
c Var 'field_00002_00002' direct represents '1' with '24'
c Var 'field_00002_00002' order represents '2' with '25'
-24 25 0
c Var 'field_00002_00002' direct represents '2' with '26'
24 -25 26 0
-26 25 0
-26 -24 0
c Var 'field_00002_00002' order represents '3' with '27'
-25 27 0
c Var 'field_00002_00002' direct represents '3' with '28'
25 -27 28 0
-28 27 0
-28 -25 0
c Var 'field_00002_00002' direct represents '4' with '-27'
24 26 28 -27 0
c Encoding variable: field_00002_00003 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00002_00003' order represents '1' with '29'
c Var 'field_00002_00003' direct represents '1' with '29'
c Var 'field_00002_00003' order represents '2' with '30'
-29 30 0
c Var 'field_00002_00003' direct represents '2' with '31'
29 -30 31 0
-31 30 0
-31 -29 0
c Var 'field_00002_00003' order represents '3' with '32'
-30 32 0
c Var 'field_00002_00003' direct represents '3' with '33'
30 -32 33 0
-33 32 0
-33 -30 0
c Var 'field_00002_00003' direct represents '4' with '-32'
29 31 33 -32 0
c Encoding variable: field_00002_00004 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00002_00004' order represents '1' with '34'
c Var 'field_00002_00004' direct represents '1' with '34'
c Var 'field_00002_00004' order represents '2' with '35'
-34 35 0
c Var 'field_00002_00004' direct represents '2' with '36'
34 -35 36 0
-36 35 0
-36 -34 0
c Var 'field_00002_00004' order represents '3' with '37'
-35 37 0
c Var 'field_00002_00004' direct represents '3' with '38'
35 -37 38 0
-38 37 0
-38 -35 0
c Var 'field_00002_00004' direct represents '4' with '-37'
34 36 38 -37 0
c Encoding variable: field_00003_00001 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00003_00001' direct represents '1' with '39'
c Var 'field_00003_00001' direct represents '2' with '40'
c Var 'field_00003_00001' direct represents '3' with '41'
c Var 'field_00003_00001' direct represents '4' with '42'
39 40 41 42 0
-39 -40 0
-39 -41 0
-39 -42 0
-40 -41 0
-40 -42 0
-41 -42 0
c Encoding variable: field_00003_00002 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00003_00002' direct represents '1' with '43'
c Var 'field_00003_00002' direct represents '2' with '44'
c Var 'field_00003_00002' direct represents '3' with '45'
c Var 'field_00003_00002' direct represents '4' with '46'
43 44 45 46 0
-43 -44 0
-43 -45 0
-43 -46 0
-44 -45 0
-44 -46 0
-45 -46 0
c Encoding variable: field_00003_00003 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00003_00003' order represents '1' with '47'
c Var 'field_00003_00003' direct represents '1' with '47'
c Var 'field_00003_00003' order represents '2' with '48'
-47 48 0
c Var 'field_00003_00003' direct represents '2' with '49'
47 -48 49 0
-49 48 0
-49 -47 0
c Var 'field_00003_00003' order represents '3' with '50'
-48 50 0
c Var 'field_00003_00003' direct represents '3' with '51'
48 -50 51 0
-51 50 0
-51 -48 0
c Var 'field_00003_00003' direct represents '4' with '-50'
47 49 51 -50 0
c Encoding variable: field_00003_00004 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00003_00004' direct represents '1' with '52'
c Var 'field_00003_00004' direct represents '2' with '53'
c Var 'field_00003_00004' direct represents '3' with '54'
c Var 'field_00003_00004' direct represents '4' with '55'
52 53 54 55 0
-52 -53 0
-52 -54 0
-52 -55 0
-53 -54 0
-53 -55 0
-54 -55 0
c Encoding variable: field_00004_00001 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00004_00001' direct represents '1' with '56'
c Var 'field_00004_00001' direct represents '2' with '57'
c Var 'field_00004_00001' direct represents '3' with '58'
c Var 'field_00004_00001' direct represents '4' with '59'
56 57 58 59 0
-56 -57 0
-56 -58 0
-56 -59 0
-57 -58 0
-57 -59 0
-58 -59 0
c Encoding variable: field_00004_00002 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00004_00002' direct represents '1' with '60'
c Var 'field_00004_00002' direct represents '2' with '61'
c Var 'field_00004_00002' direct represents '3' with '62'
c Var 'field_00004_00002' direct represents '4' with '63'
60 61 62 63 0
-60 -61 0
-60 -62 0
-60 -63 0
-61 -62 0
-61 -63 0
-62 -63 0
c Encoding variable: field_00004_00003 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00004_00003' order represents '1' with '64'
c Var 'field_00004_00003' direct represents '1' with '64'
c Var 'field_00004_00003' order represents '2' with '65'
-64 65 0
c Var 'field_00004_00003' direct represents '2' with '66'
64 -65 66 0
-66 65 0
-66 -64 0
c Var 'field_00004_00003' order represents '3' with '67'
-65 67 0
c Var 'field_00004_00003' direct represents '3' with '68'
65 -67 68 0
-68 67 0
-68 -65 0
c Var 'field_00004_00003' direct represents '4' with '-67'
64 66 68 -67 0
c Encoding variable: field_00004_00004 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00004_00004' direct represents '1' with '69'
c Var 'field_00004_00004' direct represents '2' with '70'
c Var 'field_00004_00004' direct represents '3' with '71'
c Var 'field_00004_00004' direct represents '4' with '72'
69 70 71 72 0
-69 -70 0
-69 -71 0
-69 -72 0
-70 -71 0
-70 -72 0
-71 -72 0
c Encoding variable: row_alldiff_00001 with domain: bool (representing constraint )
c Var 'row_alldiff_00001' direct represents '0' with '-73'
c Var 'row_alldiff_00001' direct represents '1' with '73'
c Var 'row_alldiff_00001' order represents '1' with '1'
c Var 'row_alldiff_00001' order represents '0' with '-73'
c Encoding variable: row_alldiff_00002 with domain: bool (representing constraint )
c Var 'row_alldiff_00002' direct represents '0' with '-74'
c Var 'row_alldiff_00002' direct represents '1' with '74'
c Var 'row_alldiff_00002' order represents '1' with '1'
c Var 'row_alldiff_00002' order represents '0' with '-74'
c Encoding variable: row_alldiff_00003 with domain: bool (representing constraint )
c Var 'row_alldiff_00003' direct represents '0' with '-75'
c Var 'row_alldiff_00003' direct represents '1' with '75'
c Var 'row_alldiff_00003' order represents '1' with '1'
c Var 'row_alldiff_00003' order represents '0' with '-75'
c Encoding variable: row_alldiff_00004 with domain: bool (representing constraint )
c Var 'row_alldiff_00004' direct represents '0' with '-76'
c Var 'row_alldiff_00004' direct represents '1' with '76'
c Var 'row_alldiff_00004' order represents '1' with '1'
c Var 'row_alldiff_00004' order represents '0' with '-76'
c Encoding variable: col_alldiff_00001 with domain: bool (representing constraint )
c Var 'col_alldiff_00001' direct represents '0' with '-77'
c Var 'col_alldiff_00001' direct represents '1' with '77'
c Var 'col_alldiff_00001' order represents '1' with '1'
c Var 'col_alldiff_00001' order represents '0' with '-77'
c Encoding variable: col_alldiff_00002 with domain: bool (representing constraint )
c Var 'col_alldiff_00002' direct represents '0' with '-78'
c Var 'col_alldiff_00002' direct represents '1' with '78'
c Var 'col_alldiff_00002' order represents '1' with '1'
c Var 'col_alldiff_00002' order represents '0' with '-78'
c Encoding variable: col_alldiff_00003 with domain: bool (representing constraint )
c Var 'col_alldiff_00003' direct represents '0' with '-79'
c Var 'col_alldiff_00003' direct represents '1' with '79'
c Var 'col_alldiff_00003' order represents '1' with '1'
c Var 'col_alldiff_00003' order represents '0' with '-79'
c Encoding variable: col_alldiff_00004 with domain: bool (representing constraint )
c Var 'col_alldiff_00004' direct represents '0' with '-80'
c Var 'col_alldiff_00004' direct represents '1' with '80'
c Var 'col_alldiff_00004' order represents '1' with '1'
c Var 'col_alldiff_00004' order represents '0' with '-80'
c Encoding variable: less_than_00000 with domain: bool (representing constraint )
c Var 'less_than_00000' direct represents '0' with '-81'
c Var 'less_than_00000' direct represents '1' with '81'
c Var 'less_than_00000' order represents '1' with '1'
c Var 'less_than_00000' order represents '0' with '-81'
c Encoding variable: less_than_00001 with domain: bool (representing constraint )
c Var 'less_than_00001' direct represents '0' with '-82'
c Var 'less_than_00001' direct represents '1' with '82'
c Var 'less_than_00001' order represents '1' with '1'
c Var 'less_than_00001' order represents '0' with '-82'
c Encoding variable: less_than_00002 with domain: bool (representing constraint )
c Var 'less_than_00002' direct represents '0' with '-83'
c Var 'less_than_00002' direct represents '1' with '83'
c Var 'less_than_00002' order represents '1' with '1'
c Var 'less_than_00002' order represents '0' with '-83'
c Encoding variable: less_than_00003 with domain: bool (representing constraint )
c Var 'less_than_00003' direct represents '0' with '-84'
c Var 'less_than_00003' direct represents '1' with '84'
c Var 'less_than_00003' order represents '1' with '1'
c Var 'less_than_00003' order represents '0' with '-84'
c Encoding variable: less_than_00004 with domain: bool (representing constraint )
c Var 'less_than_00004' direct represents '0' with '-85'
c Var 'less_than_00004' direct represents '1' with '85'
c Var 'less_than_00004' order represents '1' with '1'
c Var 'less_than_00004' order represents '0' with '-85'
c Encoding variable: aux0 with domain: bool (representing constraint (field_00001_00002<field_00001_00001))
c Var 'aux0' direct represents '0' with '-86'
c Var 'aux0' direct represents '1' with '86'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-86'
c Encoding variable: aux1 with domain: bool (representing constraint (field_00002_00002<field_00001_00002))
c Var 'aux1' direct represents '0' with '-87'
c Var 'aux1' direct represents '1' with '87'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-87'
c Encoding variable: aux2 with domain: bool (representing constraint (field_00002_00003<field_00002_00004))
c Var 'aux2' direct represents '0' with '-88'
c Var 'aux2' direct represents '1' with '88'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-88'
c Encoding variable: aux3 with domain: bool (representing constraint (field_00003_00003<field_00002_00003))
c Var 'aux3' direct represents '0' with '-89'
c Var 'aux3' direct represents '1' with '89'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-89'
c Encoding variable: aux4 with domain: bool (representing constraint (field_00004_00003<field_00003_00003))
c Var 'aux4' direct represents '0' with '-90'
c Var 'aux4' direct represents '1' with '90'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-90'
c Encoding variable: aux5 with domain: bool (representing constraint (((field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00003=1) + (field_00001_00004=1))=tv=1))
c Var 'aux5' direct represents '0' with '-91'
c Var 'aux5' direct represents '1' with '91'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-91'
c Encoding variable: aux6 with domain: bool (representing constraint (((field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00003=2) + (field_00001_00004=2))=tv=1))
c Var 'aux6' direct represents '0' with '-92'
c Var 'aux6' direct represents '1' with '92'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-92'
c Encoding variable: aux7 with domain: bool (representing constraint (((field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00003=3) + (field_00001_00004=3))=tv=1))
c Var 'aux7' direct represents '0' with '-93'
c Var 'aux7' direct represents '1' with '93'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-93'
c Encoding variable: aux8 with domain: bool (representing constraint (((field_00001_00001=4) + (field_00001_00002=4) + (field_00001_00003=4) + (field_00001_00004=4))=tv=1))
c Var 'aux8' direct represents '0' with '-94'
c Var 'aux8' direct represents '1' with '94'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-94'
c Encoding variable: aux9 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00002_00002=1) + (field_00002_00003=1) + (field_00002_00004=1))=tv=1))
c Var 'aux9' direct represents '0' with '-95'
c Var 'aux9' direct represents '1' with '95'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-95'
c Encoding variable: aux10 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00002_00002=2) + (field_00002_00003=2) + (field_00002_00004=2))=tv=1))
c Var 'aux10' direct represents '0' with '-96'
c Var 'aux10' direct represents '1' with '96'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-96'
c Encoding variable: aux11 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00002_00002=3) + (field_00002_00003=3) + (field_00002_00004=3))=tv=1))
c Var 'aux11' direct represents '0' with '-97'
c Var 'aux11' direct represents '1' with '97'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-97'
c Encoding variable: aux12 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00002_00002=4) + (field_00002_00003=4) + (field_00002_00004=4))=tv=1))
c Var 'aux12' direct represents '0' with '-98'
c Var 'aux12' direct represents '1' with '98'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-98'
c Encoding variable: aux13 with domain: bool (representing constraint (((field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1) + (field_00003_00004=1))=tv=1))
c Var 'aux13' direct represents '0' with '-99'
c Var 'aux13' direct represents '1' with '99'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-99'
c Encoding variable: aux14 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2) + (field_00003_00004=2))=tv=1))
c Var 'aux14' direct represents '0' with '-100'
c Var 'aux14' direct represents '1' with '100'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-100'
c Encoding variable: aux15 with domain: bool (representing constraint (((field_00003_00001=3) + (field_00003_00002=3) + (field_00003_00003=3) + (field_00003_00004=3))=tv=1))
c Var 'aux15' direct represents '0' with '-101'
c Var 'aux15' direct represents '1' with '101'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-101'
c Encoding variable: aux16 with domain: bool (representing constraint (((field_00003_00001=4) + (field_00003_00002=4) + (field_00003_00003=4) + (field_00003_00004=4))=tv=1))
c Var 'aux16' direct represents '0' with '-102'
c Var 'aux16' direct represents '1' with '102'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-102'
c Encoding variable: aux17 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00004_00002=1) + (field_00004_00003=1) + (field_00004_00004=1))=tv=1))
c Var 'aux17' direct represents '0' with '-103'
c Var 'aux17' direct represents '1' with '103'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-103'
c Encoding variable: aux18 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00004_00002=2) + (field_00004_00003=2) + (field_00004_00004=2))=tv=1))
c Var 'aux18' direct represents '0' with '-104'
c Var 'aux18' direct represents '1' with '104'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-104'
c Encoding variable: aux19 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00004_00002=3) + (field_00004_00003=3) + (field_00004_00004=3))=tv=1))
c Var 'aux19' direct represents '0' with '-105'
c Var 'aux19' direct represents '1' with '105'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-105'
c Encoding variable: aux20 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00004_00002=4) + (field_00004_00003=4) + (field_00004_00004=4))=tv=1))
c Var 'aux20' direct represents '0' with '-106'
c Var 'aux20' direct represents '1' with '106'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-106'
c Encoding variable: aux21 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00002_00001=1) + (field_00003_00001=1) + (field_00001_00001=1))=tv=1))
c Var 'aux21' direct represents '0' with '-107'
c Var 'aux21' direct represents '1' with '107'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-107'
c Encoding variable: aux22 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00002_00001=2) + (field_00003_00001=2) + (field_00001_00001=2))=tv=1))
c Var 'aux22' direct represents '0' with '-108'
c Var 'aux22' direct represents '1' with '108'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-108'
c Encoding variable: aux23 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00002_00001=3) + (field_00003_00001=3) + (field_00001_00001=3))=tv=1))
c Var 'aux23' direct represents '0' with '-109'
c Var 'aux23' direct represents '1' with '109'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-109'
c Encoding variable: aux24 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00002_00001=4) + (field_00003_00001=4) + (field_00001_00001=4))=tv=1))
c Var 'aux24' direct represents '0' with '-110'
c Var 'aux24' direct represents '1' with '110'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-110'
c Encoding variable: aux25 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00002_00002=1) + (field_00003_00002=1) + (field_00001_00002=1))=tv=1))
c Var 'aux25' direct represents '0' with '-111'
c Var 'aux25' direct represents '1' with '111'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-111'
c Encoding variable: aux26 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00002_00002=2) + (field_00003_00002=2) + (field_00001_00002=2))=tv=1))
c Var 'aux26' direct represents '0' with '-112'
c Var 'aux26' direct represents '1' with '112'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-112'
c Encoding variable: aux27 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00002_00002=3) + (field_00003_00002=3) + (field_00001_00002=3))=tv=1))
c Var 'aux27' direct represents '0' with '-113'
c Var 'aux27' direct represents '1' with '113'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-113'
c Encoding variable: aux28 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00002_00002=4) + (field_00003_00002=4) + (field_00001_00002=4))=tv=1))
c Var 'aux28' direct represents '0' with '-114'
c Var 'aux28' direct represents '1' with '114'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-114'
c Encoding variable: aux29 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00002_00003=1) + (field_00003_00003=1) + (field_00001_00003=1))=tv=1))
c Var 'aux29' direct represents '0' with '-115'
c Var 'aux29' direct represents '1' with '115'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-115'
c Encoding variable: aux30 with domain: bool (representing constraint (((field_00004_00003=2) + (field_00002_00003=2) + (field_00003_00003=2) + (field_00001_00003=2))=tv=1))
c Var 'aux30' direct represents '0' with '-116'
c Var 'aux30' direct represents '1' with '116'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-116'
c Encoding variable: aux31 with domain: bool (representing constraint (((field_00004_00003=3) + (field_00002_00003=3) + (field_00003_00003=3) + (field_00001_00003=3))=tv=1))
c Var 'aux31' direct represents '0' with '-117'
c Var 'aux31' direct represents '1' with '117'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-117'
c Encoding variable: aux32 with domain: bool (representing constraint (((field_00004_00003=4) + (field_00002_00003=4) + (field_00003_00003=4) + (field_00001_00003=4))=tv=1))
c Var 'aux32' direct represents '0' with '-118'
c Var 'aux32' direct represents '1' with '118'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-118'
c Encoding variable: aux33 with domain: bool (representing constraint (((field_00004_00004=1) + (field_00002_00004=1) + (field_00003_00004=1) + (field_00001_00004=1))=tv=1))
c Var 'aux33' direct represents '0' with '-119'
c Var 'aux33' direct represents '1' with '119'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-119'
c Encoding variable: aux34 with domain: bool (representing constraint (((field_00004_00004=2) + (field_00002_00004=2) + (field_00003_00004=2) + (field_00001_00004=2))=tv=1))
c Var 'aux34' direct represents '0' with '-120'
c Var 'aux34' direct represents '1' with '120'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-120'
c Encoding variable: aux35 with domain: bool (representing constraint (((field_00004_00004=3) + (field_00002_00004=3) + (field_00003_00004=3) + (field_00001_00004=3))=tv=1))
c Var 'aux35' direct represents '0' with '-121'
c Var 'aux35' direct represents '1' with '121'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-121'
c Encoding variable: aux36 with domain: bool (representing constraint (((field_00004_00004=4) + (field_00002_00004=4) + (field_00003_00004=4) + (field_00001_00004=4))=tv=1))
c Var 'aux36' direct represents '0' with '-122'
c Var 'aux36' direct represents '1' with '122'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-122'
c Encoding variable: aux37 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00001_00004=1)))
c Both direct and order encoding.
c Var 'aux37' order represents '0' with '123'
c Var 'aux37' direct represents '0' with '123'
c Var 'aux37' order represents '1' with '124'
-123 124 0
c Var 'aux37' direct represents '1' with '125'
123 -124 125 0
-125 124 0
-125 -123 0
c Var 'aux37' direct represents '2' with '-124'
123 125 -124 0
c Encoding variable: aux38 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00001_00004=2)))
c Both direct and order encoding.
c Var 'aux38' order represents '0' with '126'
c Var 'aux38' direct represents '0' with '126'
c Var 'aux38' order represents '1' with '127'
-126 127 0
c Var 'aux38' direct represents '1' with '128'
126 -127 128 0
-128 127 0
-128 -126 0
c Var 'aux38' direct represents '2' with '-127'
126 128 -127 0
c Encoding variable: aux39 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00001_00004=3)))
c Both direct and order encoding.
c Var 'aux39' order represents '0' with '129'
c Var 'aux39' direct represents '0' with '129'
c Var 'aux39' order represents '1' with '130'
-129 130 0
c Var 'aux39' direct represents '1' with '131'
129 -130 131 0
-131 130 0
-131 -129 0
c Var 'aux39' direct represents '2' with '-130'
129 131 -130 0
c Encoding variable: aux40 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00001_00004=4)))
c Both direct and order encoding.
c Var 'aux40' order represents '0' with '132'
c Var 'aux40' direct represents '0' with '132'
c Var 'aux40' order represents '1' with '133'
-132 133 0
c Var 'aux40' direct represents '1' with '134'
132 -133 134 0
-134 133 0
-134 -132 0
c Var 'aux40' direct represents '2' with '-133'
132 134 -133 0
c Encoding variable: aux41 with domain: int(0..2) (representing constraint ((field_00002_00001=1) + (field_00002_00004=1)))
c Both direct and order encoding.
c Var 'aux41' order represents '0' with '135'
c Var 'aux41' direct represents '0' with '135'
c Var 'aux41' order represents '1' with '136'
-135 136 0
c Var 'aux41' direct represents '1' with '137'
135 -136 137 0
-137 136 0
-137 -135 0
c Var 'aux41' direct represents '2' with '-136'
135 137 -136 0
c Encoding variable: aux42 with domain: int(0..2) (representing constraint ((field_00002_00001=2) + (field_00002_00004=2)))
c Both direct and order encoding.
c Var 'aux42' order represents '0' with '138'
c Var 'aux42' direct represents '0' with '138'
c Var 'aux42' order represents '1' with '139'
-138 139 0
c Var 'aux42' direct represents '1' with '140'
138 -139 140 0
-140 139 0
-140 -138 0
c Var 'aux42' direct represents '2' with '-139'
138 140 -139 0
c Encoding variable: aux43 with domain: int(0..2) (representing constraint ((field_00002_00001=3) + (field_00002_00004=3)))
c Both direct and order encoding.
c Var 'aux43' order represents '0' with '141'
c Var 'aux43' direct represents '0' with '141'
c Var 'aux43' order represents '1' with '142'
-141 142 0
c Var 'aux43' direct represents '1' with '143'
141 -142 143 0
-143 142 0
-143 -141 0
c Var 'aux43' direct represents '2' with '-142'
141 143 -142 0
c Encoding variable: aux44 with domain: int(0..2) (representing constraint ((field_00002_00001=4) + (field_00002_00004=4)))
c Both direct and order encoding.
c Var 'aux44' order represents '0' with '144'
c Var 'aux44' direct represents '0' with '144'
c Var 'aux44' order represents '1' with '145'
-144 145 0
c Var 'aux44' direct represents '1' with '146'
144 -145 146 0
-146 145 0
-146 -144 0
c Var 'aux44' direct represents '2' with '-145'
144 146 -145 0
c Encoding variable: aux45 with domain: int(0..2) (representing constraint ((field_00003_00001=1) + (field_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux45' order represents '0' with '147'
c Var 'aux45' direct represents '0' with '147'
c Var 'aux45' order represents '1' with '148'
-147 148 0
c Var 'aux45' direct represents '1' with '149'
147 -148 149 0
-149 148 0
-149 -147 0
c Var 'aux45' direct represents '2' with '-148'
147 149 -148 0
c Encoding variable: aux46 with domain: int(0..2) (representing constraint ((field_00003_00001=2) + (field_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux46' order represents '0' with '150'
c Var 'aux46' direct represents '0' with '150'
c Var 'aux46' order represents '1' with '151'
-150 151 0
c Var 'aux46' direct represents '1' with '152'
150 -151 152 0
-152 151 0
-152 -150 0
c Var 'aux46' direct represents '2' with '-151'
150 152 -151 0
c Encoding variable: aux47 with domain: int(0..2) (representing constraint ((field_00003_00001=3) + (field_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux47' order represents '0' with '153'
c Var 'aux47' direct represents '0' with '153'
c Var 'aux47' order represents '1' with '154'
-153 154 0
c Var 'aux47' direct represents '1' with '155'
153 -154 155 0
-155 154 0
-155 -153 0
c Var 'aux47' direct represents '2' with '-154'
153 155 -154 0
c Encoding variable: aux48 with domain: int(0..2) (representing constraint ((field_00003_00001=4) + (field_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux48' order represents '0' with '156'
c Var 'aux48' direct represents '0' with '156'
c Var 'aux48' order represents '1' with '157'
-156 157 0
c Var 'aux48' direct represents '1' with '158'
156 -157 158 0
-158 157 0
-158 -156 0
c Var 'aux48' direct represents '2' with '-157'
156 158 -157 0
c Encoding variable: aux49 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00004_00004=1)))
c Both direct and order encoding.
c Var 'aux49' order represents '0' with '159'
c Var 'aux49' direct represents '0' with '159'
c Var 'aux49' order represents '1' with '160'
-159 160 0
c Var 'aux49' direct represents '1' with '161'
159 -160 161 0
-161 160 0
-161 -159 0
c Var 'aux49' direct represents '2' with '-160'
159 161 -160 0
c Encoding variable: aux50 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00004_00004=2)))
c Both direct and order encoding.
c Var 'aux50' order represents '0' with '162'
c Var 'aux50' direct represents '0' with '162'
c Var 'aux50' order represents '1' with '163'
-162 163 0
c Var 'aux50' direct represents '1' with '164'
162 -163 164 0
-164 163 0
-164 -162 0
c Var 'aux50' direct represents '2' with '-163'
162 164 -163 0
c Encoding variable: aux51 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00004_00004=3)))
c Both direct and order encoding.
c Var 'aux51' order represents '0' with '165'
c Var 'aux51' direct represents '0' with '165'
c Var 'aux51' order represents '1' with '166'
-165 166 0
c Var 'aux51' direct represents '1' with '167'
165 -166 167 0
-167 166 0
-167 -165 0
c Var 'aux51' direct represents '2' with '-166'
165 167 -166 0
c Encoding variable: aux52 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00004_00004=4)))
c Both direct and order encoding.
c Var 'aux52' order represents '0' with '168'
c Var 'aux52' direct represents '0' with '168'
c Var 'aux52' order represents '1' with '169'
-168 169 0
c Var 'aux52' direct represents '1' with '170'
168 -169 170 0
-170 169 0
-170 -168 0
c Var 'aux52' direct represents '2' with '-169'
168 170 -169 0
c Encoding variable: aux53 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00001_00001=1)))
c Both direct and order encoding.
c Var 'aux53' order represents '0' with '171'
c Var 'aux53' direct represents '0' with '171'
c Var 'aux53' order represents '1' with '172'
-171 172 0
c Var 'aux53' direct represents '1' with '173'
171 -172 173 0
-173 172 0
-173 -171 0
c Var 'aux53' direct represents '2' with '-172'
171 173 -172 0
c Encoding variable: aux54 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00001_00001=2)))
c Both direct and order encoding.
c Var 'aux54' order represents '0' with '174'
c Var 'aux54' direct represents '0' with '174'
c Var 'aux54' order represents '1' with '175'
-174 175 0
c Var 'aux54' direct represents '1' with '176'
174 -175 176 0
-176 175 0
-176 -174 0
c Var 'aux54' direct represents '2' with '-175'
174 176 -175 0
c Encoding variable: aux55 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00001_00001=3)))
c Both direct and order encoding.
c Var 'aux55' order represents '0' with '177'
c Var 'aux55' direct represents '0' with '177'
c Var 'aux55' order represents '1' with '178'
-177 178 0
c Var 'aux55' direct represents '1' with '179'
177 -178 179 0
-179 178 0
-179 -177 0
c Var 'aux55' direct represents '2' with '-178'
177 179 -178 0
c Encoding variable: aux56 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00001_00001=4)))
c Both direct and order encoding.
c Var 'aux56' order represents '0' with '180'
c Var 'aux56' direct represents '0' with '180'
c Var 'aux56' order represents '1' with '181'
-180 181 0
c Var 'aux56' direct represents '1' with '182'
180 -181 182 0
-182 181 0
-182 -180 0
c Var 'aux56' direct represents '2' with '-181'
180 182 -181 0
c Encoding variable: aux57 with domain: int(0..2) (representing constraint ((field_00004_00002=1) + (field_00001_00002=1)))
c Both direct and order encoding.
c Var 'aux57' order represents '0' with '183'
c Var 'aux57' direct represents '0' with '183'
c Var 'aux57' order represents '1' with '184'
-183 184 0
c Var 'aux57' direct represents '1' with '185'
183 -184 185 0
-185 184 0
-185 -183 0
c Var 'aux57' direct represents '2' with '-184'
183 185 -184 0
c Encoding variable: aux58 with domain: int(0..2) (representing constraint ((field_00004_00002=2) + (field_00001_00002=2)))
c Both direct and order encoding.
c Var 'aux58' order represents '0' with '186'
c Var 'aux58' direct represents '0' with '186'
c Var 'aux58' order represents '1' with '187'
-186 187 0
c Var 'aux58' direct represents '1' with '188'
186 -187 188 0
-188 187 0
-188 -186 0
c Var 'aux58' direct represents '2' with '-187'
186 188 -187 0
c Encoding variable: aux59 with domain: int(0..2) (representing constraint ((field_00004_00002=3) + (field_00001_00002=3)))
c Both direct and order encoding.
c Var 'aux59' order represents '0' with '189'
c Var 'aux59' direct represents '0' with '189'
c Var 'aux59' order represents '1' with '190'
-189 190 0
c Var 'aux59' direct represents '1' with '191'
189 -190 191 0
-191 190 0
-191 -189 0
c Var 'aux59' direct represents '2' with '-190'
189 191 -190 0
c Encoding variable: aux60 with domain: int(0..2) (representing constraint ((field_00004_00002=4) + (field_00001_00002=4)))
c Both direct and order encoding.
c Var 'aux60' order represents '0' with '192'
c Var 'aux60' direct represents '0' with '192'
c Var 'aux60' order represents '1' with '193'
-192 193 0
c Var 'aux60' direct represents '1' with '194'
192 -193 194 0
-194 193 0
-194 -192 0
c Var 'aux60' direct represents '2' with '-193'
192 194 -193 0
c Encoding variable: aux61 with domain: int(0..2) (representing constraint ((field_00004_00003=1) + (field_00001_00003=1)))
c Both direct and order encoding.
c Var 'aux61' order represents '0' with '195'
c Var 'aux61' direct represents '0' with '195'
c Var 'aux61' order represents '1' with '196'
-195 196 0
c Var 'aux61' direct represents '1' with '197'
195 -196 197 0
-197 196 0
-197 -195 0
c Var 'aux61' direct represents '2' with '-196'
195 197 -196 0
c Encoding variable: aux62 with domain: int(0..2) (representing constraint ((field_00004_00003=2) + (field_00001_00003=2)))
c Both direct and order encoding.
c Var 'aux62' order represents '0' with '198'
c Var 'aux62' direct represents '0' with '198'
c Var 'aux62' order represents '1' with '199'
-198 199 0
c Var 'aux62' direct represents '1' with '200'
198 -199 200 0
-200 199 0
-200 -198 0
c Var 'aux62' direct represents '2' with '-199'
198 200 -199 0
c Encoding variable: aux63 with domain: int(0..2) (representing constraint ((field_00004_00003=3) + (field_00001_00003=3)))
c Both direct and order encoding.
c Var 'aux63' order represents '0' with '201'
c Var 'aux63' direct represents '0' with '201'
c Var 'aux63' order represents '1' with '202'
-201 202 0
c Var 'aux63' direct represents '1' with '203'
201 -202 203 0
-203 202 0
-203 -201 0
c Var 'aux63' direct represents '2' with '-202'
201 203 -202 0
c Encoding variable: aux64 with domain: int(0..2) (representing constraint ((field_00004_00003=4) + (field_00001_00003=4)))
c Both direct and order encoding.
c Var 'aux64' order represents '0' with '204'
c Var 'aux64' direct represents '0' with '204'
c Var 'aux64' order represents '1' with '205'
-204 205 0
c Var 'aux64' direct represents '1' with '206'
204 -205 206 0
-206 205 0
-206 -204 0
c Var 'aux64' direct represents '2' with '-205'
204 206 -205 0
c Encoding variable: aux65 with domain: int(0..2) (representing constraint ((field_00004_00004=1) + (field_00001_00004=1)))
c Both direct and order encoding.
c Var 'aux65' order represents '0' with '207'
c Var 'aux65' direct represents '0' with '207'
c Var 'aux65' order represents '1' with '208'
-207 208 0
c Var 'aux65' direct represents '1' with '209'
207 -208 209 0
-209 208 0
-209 -207 0
c Var 'aux65' direct represents '2' with '-208'
207 209 -208 0
c Encoding variable: aux66 with domain: int(0..2) (representing constraint ((field_00004_00004=2) + (field_00001_00004=2)))
c Both direct and order encoding.
c Var 'aux66' order represents '0' with '210'
c Var 'aux66' direct represents '0' with '210'
c Var 'aux66' order represents '1' with '211'
-210 211 0
c Var 'aux66' direct represents '1' with '212'
210 -211 212 0
-212 211 0
-212 -210 0
c Var 'aux66' direct represents '2' with '-211'
210 212 -211 0
c Encoding variable: aux67 with domain: int(0..2) (representing constraint ((field_00004_00004=3) + (field_00001_00004=3)))
c Both direct and order encoding.
c Var 'aux67' order represents '0' with '213'
c Var 'aux67' direct represents '0' with '213'
c Var 'aux67' order represents '1' with '214'
-213 214 0
c Var 'aux67' direct represents '1' with '215'
213 -214 215 0
-215 214 0
-215 -213 0
c Var 'aux67' direct represents '2' with '-214'
213 215 -214 0
c Encoding variable: aux68 with domain: int(0..2) (representing constraint ((field_00004_00004=4) + (field_00001_00004=4)))
c Both direct and order encoding.
c Var 'aux68' order represents '0' with '216'
c Var 'aux68' direct represents '0' with '216'
c Var 'aux68' order represents '1' with '217'
-216 217 0
c Var 'aux68' direct represents '1' with '218'
216 -217 218 0
-218 217 0
-218 -216 0
c Var 'aux68' direct represents '2' with '-217'
216 218 -217 0
c Encoding variable: aux69 with domain: bool (representing constraint ((aux37 + (field_00001_00002=1) + (field_00001_00003=1))<=1))
c Var 'aux69' direct represents '0' with '-219'
c Var 'aux69' direct represents '1' with '219'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-219'
c Encoding variable: aux70 with domain: bool (representing constraint (1<=(aux37 + (field_00001_00002=1) + (field_00001_00003=1))))
c Var 'aux70' direct represents '0' with '-220'
c Var 'aux70' direct represents '1' with '220'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-220'
c Encoding variable: aux71 with domain: bool (representing constraint ((aux38 + (field_00001_00002=2) + (field_00001_00003=2))<=1))
c Var 'aux71' direct represents '0' with '-221'
c Var 'aux71' direct represents '1' with '221'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-221'
c Encoding variable: aux72 with domain: bool (representing constraint (1<=(aux38 + (field_00001_00002=2) + (field_00001_00003=2))))
c Var 'aux72' direct represents '0' with '-222'
c Var 'aux72' direct represents '1' with '222'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-222'
c Encoding variable: aux73 with domain: bool (representing constraint ((aux39 + (field_00001_00002=3) + (field_00001_00003=3))<=1))
c Var 'aux73' direct represents '0' with '-223'
c Var 'aux73' direct represents '1' with '223'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-223'
c Encoding variable: aux74 with domain: bool (representing constraint (1<=(aux39 + (field_00001_00002=3) + (field_00001_00003=3))))
c Var 'aux74' direct represents '0' with '-224'
c Var 'aux74' direct represents '1' with '224'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-224'
c Encoding variable: aux75 with domain: bool (representing constraint ((aux40 + (field_00001_00002=4) + (field_00001_00003=4))<=1))
c Var 'aux75' direct represents '0' with '-225'
c Var 'aux75' direct represents '1' with '225'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-225'
c Encoding variable: aux76 with domain: bool (representing constraint (1<=(aux40 + (field_00001_00002=4) + (field_00001_00003=4))))
c Var 'aux76' direct represents '0' with '-226'
c Var 'aux76' direct represents '1' with '226'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-226'
c Encoding variable: aux77 with domain: bool (representing constraint (((field_00002_00002=1) + (field_00002_00003=1) + aux41)<=1))
c Var 'aux77' direct represents '0' with '-227'
c Var 'aux77' direct represents '1' with '227'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-227'
c Encoding variable: aux78 with domain: bool (representing constraint (1<=((field_00002_00002=1) + (field_00002_00003=1) + aux41)))
c Var 'aux78' direct represents '0' with '-228'
c Var 'aux78' direct represents '1' with '228'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-228'
c Encoding variable: aux79 with domain: bool (representing constraint (((field_00002_00002=2) + (field_00002_00003=2) + aux42)<=1))
c Var 'aux79' direct represents '0' with '-229'
c Var 'aux79' direct represents '1' with '229'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-229'
c Encoding variable: aux80 with domain: bool (representing constraint (1<=((field_00002_00002=2) + (field_00002_00003=2) + aux42)))
c Var 'aux80' direct represents '0' with '-230'
c Var 'aux80' direct represents '1' with '230'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-230'
c Encoding variable: aux81 with domain: bool (representing constraint (((field_00002_00002=3) + (field_00002_00003=3) + aux43)<=1))
c Var 'aux81' direct represents '0' with '-231'
c Var 'aux81' direct represents '1' with '231'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-231'
c Encoding variable: aux82 with domain: bool (representing constraint (1<=((field_00002_00002=3) + (field_00002_00003=3) + aux43)))
c Var 'aux82' direct represents '0' with '-232'
c Var 'aux82' direct represents '1' with '232'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-232'
c Encoding variable: aux83 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00002_00003=4) + aux44)<=1))
c Var 'aux83' direct represents '0' with '-233'
c Var 'aux83' direct represents '1' with '233'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-233'
c Encoding variable: aux84 with domain: bool (representing constraint (1<=((field_00002_00002=4) + (field_00002_00003=4) + aux44)))
c Var 'aux84' direct represents '0' with '-234'
c Var 'aux84' direct represents '1' with '234'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-234'
c Encoding variable: aux85 with domain: bool (representing constraint ((aux45 + (field_00003_00002=1) + (field_00003_00003=1))<=1))
c Var 'aux85' direct represents '0' with '-235'
c Var 'aux85' direct represents '1' with '235'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-235'
c Encoding variable: aux86 with domain: bool (representing constraint (1<=(aux45 + (field_00003_00002=1) + (field_00003_00003=1))))
c Var 'aux86' direct represents '0' with '-236'
c Var 'aux86' direct represents '1' with '236'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-236'
c Encoding variable: aux87 with domain: bool (representing constraint ((aux46 + (field_00003_00002=2) + (field_00003_00003=2))<=1))
c Var 'aux87' direct represents '0' with '-237'
c Var 'aux87' direct represents '1' with '237'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-237'
c Encoding variable: aux88 with domain: bool (representing constraint (1<=(aux46 + (field_00003_00002=2) + (field_00003_00003=2))))
c Var 'aux88' direct represents '0' with '-238'
c Var 'aux88' direct represents '1' with '238'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-238'
c Encoding variable: aux89 with domain: bool (representing constraint ((aux47 + (field_00003_00002=3) + (field_00003_00003=3))<=1))
c Var 'aux89' direct represents '0' with '-239'
c Var 'aux89' direct represents '1' with '239'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-239'
c Encoding variable: aux90 with domain: bool (representing constraint (1<=(aux47 + (field_00003_00002=3) + (field_00003_00003=3))))
c Var 'aux90' direct represents '0' with '-240'
c Var 'aux90' direct represents '1' with '240'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-240'
c Encoding variable: aux91 with domain: bool (representing constraint ((aux48 + (field_00003_00002=4) + (field_00003_00003=4))<=1))
c Var 'aux91' direct represents '0' with '-241'
c Var 'aux91' direct represents '1' with '241'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-241'
c Encoding variable: aux92 with domain: bool (representing constraint (1<=(aux48 + (field_00003_00002=4) + (field_00003_00003=4))))
c Var 'aux92' direct represents '0' with '-242'
c Var 'aux92' direct represents '1' with '242'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-242'
c Encoding variable: aux93 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1) + aux49)<=1))
c Var 'aux93' direct represents '0' with '-243'
c Var 'aux93' direct represents '1' with '243'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-243'
c Encoding variable: aux94 with domain: bool (representing constraint (1<=((field_00004_00002=1) + (field_00004_00003=1) + aux49)))
c Var 'aux94' direct represents '0' with '-244'
c Var 'aux94' direct represents '1' with '244'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-244'
c Encoding variable: aux95 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00004_00003=2) + aux50)<=1))
c Var 'aux95' direct represents '0' with '-245'
c Var 'aux95' direct represents '1' with '245'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-245'
c Encoding variable: aux96 with domain: bool (representing constraint (1<=((field_00004_00002=2) + (field_00004_00003=2) + aux50)))
c Var 'aux96' direct represents '0' with '-246'
c Var 'aux96' direct represents '1' with '246'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-246'
c Encoding variable: aux97 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00004_00003=3) + aux51)<=1))
c Var 'aux97' direct represents '0' with '-247'
c Var 'aux97' direct represents '1' with '247'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-247'
c Encoding variable: aux98 with domain: bool (representing constraint (1<=((field_00004_00002=3) + (field_00004_00003=3) + aux51)))
c Var 'aux98' direct represents '0' with '-248'
c Var 'aux98' direct represents '1' with '248'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-248'
c Encoding variable: aux99 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00004_00003=4) + aux52)<=1))
c Var 'aux99' direct represents '0' with '-249'
c Var 'aux99' direct represents '1' with '249'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-249'
c Encoding variable: aux100 with domain: bool (representing constraint (1<=((field_00004_00002=4) + (field_00004_00003=4) + aux52)))
c Var 'aux100' direct represents '0' with '-250'
c Var 'aux100' direct represents '1' with '250'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-250'
c Encoding variable: aux101 with domain: bool (representing constraint (((field_00002_00001=1) + aux53 + (field_00003_00001=1))<=1))
c Var 'aux101' direct represents '0' with '-251'
c Var 'aux101' direct represents '1' with '251'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-251'
c Encoding variable: aux102 with domain: bool (representing constraint (1<=((field_00002_00001=1) + aux53 + (field_00003_00001=1))))
c Var 'aux102' direct represents '0' with '-252'
c Var 'aux102' direct represents '1' with '252'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-252'
c Encoding variable: aux103 with domain: bool (representing constraint (((field_00002_00001=2) + aux54 + (field_00003_00001=2))<=1))
c Var 'aux103' direct represents '0' with '-253'
c Var 'aux103' direct represents '1' with '253'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-253'
c Encoding variable: aux104 with domain: bool (representing constraint (1<=((field_00002_00001=2) + aux54 + (field_00003_00001=2))))
c Var 'aux104' direct represents '0' with '-254'
c Var 'aux104' direct represents '1' with '254'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-254'
c Encoding variable: aux105 with domain: bool (representing constraint (((field_00002_00001=3) + aux55 + (field_00003_00001=3))<=1))
c Var 'aux105' direct represents '0' with '-255'
c Var 'aux105' direct represents '1' with '255'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-255'
c Encoding variable: aux106 with domain: bool (representing constraint (1<=((field_00002_00001=3) + aux55 + (field_00003_00001=3))))
c Var 'aux106' direct represents '0' with '-256'
c Var 'aux106' direct represents '1' with '256'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-256'
c Encoding variable: aux107 with domain: bool (representing constraint (((field_00002_00001=4) + aux56 + (field_00003_00001=4))<=1))
c Var 'aux107' direct represents '0' with '-257'
c Var 'aux107' direct represents '1' with '257'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-257'
c Encoding variable: aux108 with domain: bool (representing constraint (1<=((field_00002_00001=4) + aux56 + (field_00003_00001=4))))
c Var 'aux108' direct represents '0' with '-258'
c Var 'aux108' direct represents '1' with '258'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-258'
c Encoding variable: aux109 with domain: bool (representing constraint (((field_00002_00002=1) + aux57 + (field_00003_00002=1))<=1))
c Var 'aux109' direct represents '0' with '-259'
c Var 'aux109' direct represents '1' with '259'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-259'
c Encoding variable: aux110 with domain: bool (representing constraint (1<=((field_00002_00002=1) + aux57 + (field_00003_00002=1))))
c Var 'aux110' direct represents '0' with '-260'
c Var 'aux110' direct represents '1' with '260'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-260'
c Encoding variable: aux111 with domain: bool (representing constraint (((field_00002_00002=2) + aux58 + (field_00003_00002=2))<=1))
c Var 'aux111' direct represents '0' with '-261'
c Var 'aux111' direct represents '1' with '261'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-261'
c Encoding variable: aux112 with domain: bool (representing constraint (1<=((field_00002_00002=2) + aux58 + (field_00003_00002=2))))
c Var 'aux112' direct represents '0' with '-262'
c Var 'aux112' direct represents '1' with '262'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-262'
c Encoding variable: aux113 with domain: bool (representing constraint (((field_00002_00002=3) + aux59 + (field_00003_00002=3))<=1))
c Var 'aux113' direct represents '0' with '-263'
c Var 'aux113' direct represents '1' with '263'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-263'
c Encoding variable: aux114 with domain: bool (representing constraint (1<=((field_00002_00002=3) + aux59 + (field_00003_00002=3))))
c Var 'aux114' direct represents '0' with '-264'
c Var 'aux114' direct represents '1' with '264'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-264'
c Encoding variable: aux115 with domain: bool (representing constraint (((field_00002_00002=4) + aux60 + (field_00003_00002=4))<=1))
c Var 'aux115' direct represents '0' with '-265'
c Var 'aux115' direct represents '1' with '265'
c Var 'aux115' order represents '1' with '1'
c Var 'aux115' order represents '0' with '-265'
c Encoding variable: aux116 with domain: bool (representing constraint (1<=((field_00002_00002=4) + aux60 + (field_00003_00002=4))))
c Var 'aux116' direct represents '0' with '-266'
c Var 'aux116' direct represents '1' with '266'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-266'
c Encoding variable: aux117 with domain: bool (representing constraint (((field_00002_00003=1) + aux61 + (field_00003_00003=1))<=1))
c Var 'aux117' direct represents '0' with '-267'
c Var 'aux117' direct represents '1' with '267'
c Var 'aux117' order represents '1' with '1'
c Var 'aux117' order represents '0' with '-267'
c Encoding variable: aux118 with domain: bool (representing constraint (1<=((field_00002_00003=1) + aux61 + (field_00003_00003=1))))
c Var 'aux118' direct represents '0' with '-268'
c Var 'aux118' direct represents '1' with '268'
c Var 'aux118' order represents '1' with '1'
c Var 'aux118' order represents '0' with '-268'
c Encoding variable: aux119 with domain: bool (representing constraint (((field_00002_00003=2) + aux62 + (field_00003_00003=2))<=1))
c Var 'aux119' direct represents '0' with '-269'
c Var 'aux119' direct represents '1' with '269'
c Var 'aux119' order represents '1' with '1'
c Var 'aux119' order represents '0' with '-269'
c Encoding variable: aux120 with domain: bool (representing constraint (1<=((field_00002_00003=2) + aux62 + (field_00003_00003=2))))
c Var 'aux120' direct represents '0' with '-270'
c Var 'aux120' direct represents '1' with '270'
c Var 'aux120' order represents '1' with '1'
c Var 'aux120' order represents '0' with '-270'
c Encoding variable: aux121 with domain: bool (representing constraint (((field_00002_00003=3) + aux63 + (field_00003_00003=3))<=1))
c Var 'aux121' direct represents '0' with '-271'
c Var 'aux121' direct represents '1' with '271'
c Var 'aux121' order represents '1' with '1'
c Var 'aux121' order represents '0' with '-271'
c Encoding variable: aux122 with domain: bool (representing constraint (1<=((field_00002_00003=3) + aux63 + (field_00003_00003=3))))
c Var 'aux122' direct represents '0' with '-272'
c Var 'aux122' direct represents '1' with '272'
c Var 'aux122' order represents '1' with '1'
c Var 'aux122' order represents '0' with '-272'
c Encoding variable: aux123 with domain: bool (representing constraint (((field_00002_00003=4) + aux64 + (field_00003_00003=4))<=1))
c Var 'aux123' direct represents '0' with '-273'
c Var 'aux123' direct represents '1' with '273'
c Var 'aux123' order represents '1' with '1'
c Var 'aux123' order represents '0' with '-273'
c Encoding variable: aux124 with domain: bool (representing constraint (1<=((field_00002_00003=4) + aux64 + (field_00003_00003=4))))
c Var 'aux124' direct represents '0' with '-274'
c Var 'aux124' direct represents '1' with '274'
c Var 'aux124' order represents '1' with '1'
c Var 'aux124' order represents '0' with '-274'
c Encoding variable: aux125 with domain: bool (representing constraint (((field_00002_00004=1) + aux65 + (field_00003_00004=1))<=1))
c Var 'aux125' direct represents '0' with '-275'
c Var 'aux125' direct represents '1' with '275'
c Var 'aux125' order represents '1' with '1'
c Var 'aux125' order represents '0' with '-275'
c Encoding variable: aux126 with domain: bool (representing constraint (1<=((field_00002_00004=1) + aux65 + (field_00003_00004=1))))
c Var 'aux126' direct represents '0' with '-276'
c Var 'aux126' direct represents '1' with '276'
c Var 'aux126' order represents '1' with '1'
c Var 'aux126' order represents '0' with '-276'
c Encoding variable: aux127 with domain: bool (representing constraint (((field_00002_00004=2) + aux66 + (field_00003_00004=2))<=1))
c Var 'aux127' direct represents '0' with '-277'
c Var 'aux127' direct represents '1' with '277'
c Var 'aux127' order represents '1' with '1'
c Var 'aux127' order represents '0' with '-277'
c Encoding variable: aux128 with domain: bool (representing constraint (1<=((field_00002_00004=2) + aux66 + (field_00003_00004=2))))
c Var 'aux128' direct represents '0' with '-278'
c Var 'aux128' direct represents '1' with '278'
c Var 'aux128' order represents '1' with '1'
c Var 'aux128' order represents '0' with '-278'
c Encoding variable: aux129 with domain: bool (representing constraint (((field_00002_00004=3) + aux67 + (field_00003_00004=3))<=1))
c Var 'aux129' direct represents '0' with '-279'
c Var 'aux129' direct represents '1' with '279'
c Var 'aux129' order represents '1' with '1'
c Var 'aux129' order represents '0' with '-279'
c Encoding variable: aux130 with domain: bool (representing constraint (1<=((field_00002_00004=3) + aux67 + (field_00003_00004=3))))
c Var 'aux130' direct represents '0' with '-280'
c Var 'aux130' direct represents '1' with '280'
c Var 'aux130' order represents '1' with '1'
c Var 'aux130' order represents '0' with '-280'
c Encoding variable: aux131 with domain: bool (representing constraint (((field_00002_00004=4) + aux68 + (field_00003_00004=4))<=1))
c Var 'aux131' direct represents '0' with '-281'
c Var 'aux131' direct represents '1' with '281'
c Var 'aux131' order represents '1' with '1'
c Var 'aux131' order represents '0' with '-281'
c Encoding variable: aux132 with domain: bool (representing constraint (1<=((field_00002_00004=4) + aux68 + (field_00003_00004=4))))
c Var 'aux132' direct represents '0' with '-282'
c Var 'aux132' direct represents '1' with '282'
c Var 'aux132' order represents '1' with '1'
c Var 'aux132' order represents '0' with '-282'
c (((aux37 + SATLiteral(7) + SATLiteral(12))<=1)=tv=SATLiteral(219))
-219 124 0
-219 -12 123 0
-219 -7 123 0
-219 -7 -12 0
219 12 -123 0
219 7 -123 0
219 7 12 -124 0
c ((1<=(aux37 + SATLiteral(7) + SATLiteral(12)))=tv=SATLiteral(220))
-220 7 12 -123 0
220 123 0
220 -12 0
220 -7 0
220 -7 -12 0
c (((aux38 + SATLiteral(9) + SATLiteral(13))<=1)=tv=SATLiteral(221))
-221 127 0
-221 -13 126 0
-221 -9 126 0
-221 -9 -13 0
221 13 -126 0
221 9 -126 0
221 9 13 -127 0
c ((1<=(aux38 + SATLiteral(9) + SATLiteral(13)))=tv=SATLiteral(222))
-222 9 13 -126 0
222 126 0
222 -13 0
222 -9 0
222 -9 -13 0
c (((aux39 + SATLiteral(11) + SATLiteral(14))<=1)=tv=SATLiteral(223))
-223 130 0
-223 -14 129 0
-223 -11 129 0
-223 -11 -14 0
223 14 -129 0
223 11 -129 0
223 11 14 -130 0
c ((1<=(aux39 + SATLiteral(11) + SATLiteral(14)))=tv=SATLiteral(224))
-224 11 14 -129 0
224 129 0
224 -14 0
224 -11 0
224 -11 -14 0
c (((aux40 + SATLiteral(-10) + SATLiteral(15))<=1)=tv=SATLiteral(225))
-225 133 0
-225 -15 132 0
-225 10 132 0
-225 10 -15 0
225 15 -132 0
225 -10 -132 0
225 -10 15 -133 0
c ((1<=(aux40 + SATLiteral(-10) + SATLiteral(15)))=tv=SATLiteral(226))
-226 -10 15 -132 0
226 132 0
226 -15 0
226 10 0
226 10 -15 0
c (((SATLiteral(24) + SATLiteral(29) + aux41)<=1)=tv=SATLiteral(227))
-227 136 0
-227 -29 135 0
-227 -24 135 0
-227 -24 -29 0
227 29 -135 0
227 24 -135 0
227 24 29 -136 0
c ((1<=(SATLiteral(24) + SATLiteral(29) + aux41))=tv=SATLiteral(228))
-228 24 29 -135 0
228 135 0
228 -29 0
228 -24 0
228 -24 -29 0
c (((SATLiteral(26) + SATLiteral(31) + aux42)<=1)=tv=SATLiteral(229))
-229 139 0
-229 -31 138 0
-229 -26 138 0
-229 -26 -31 0
229 31 -138 0
229 26 -138 0
229 26 31 -139 0
c ((1<=(SATLiteral(26) + SATLiteral(31) + aux42))=tv=SATLiteral(230))
-230 26 31 -138 0
230 138 0
230 -31 0
230 -26 0
230 -26 -31 0
c (((SATLiteral(28) + SATLiteral(33) + aux43)<=1)=tv=SATLiteral(231))
-231 142 0
-231 -33 141 0
-231 -28 141 0
-231 -28 -33 0
231 33 -141 0
231 28 -141 0
231 28 33 -142 0
c ((1<=(SATLiteral(28) + SATLiteral(33) + aux43))=tv=SATLiteral(232))
-232 28 33 -141 0
232 141 0
232 -33 0
232 -28 0
232 -28 -33 0
c (((SATLiteral(-27) + SATLiteral(-32) + aux44)<=1)=tv=SATLiteral(233))
-233 145 0
-233 32 144 0
-233 27 144 0
-233 27 32 0
233 -32 -144 0
233 -27 -144 0
233 -27 -32 -145 0
c ((1<=(SATLiteral(-27) + SATLiteral(-32) + aux44))=tv=SATLiteral(234))
-234 -27 -32 -144 0
234 144 0
234 32 0
234 27 0
234 27 32 0
c (((aux45 + SATLiteral(43) + SATLiteral(47))<=1)=tv=SATLiteral(235))
-235 148 0
-235 -47 147 0
-235 -43 147 0
-235 -43 -47 0
235 47 -147 0
235 43 -147 0
235 43 47 -148 0
c ((1<=(aux45 + SATLiteral(43) + SATLiteral(47)))=tv=SATLiteral(236))
-236 43 47 -147 0
236 147 0
236 -47 0
236 -43 0
236 -43 -47 0
c (((aux46 + SATLiteral(44) + SATLiteral(49))<=1)=tv=SATLiteral(237))
-237 151 0
-237 -49 150 0
-237 -44 150 0
-237 -44 -49 0
237 49 -150 0
237 44 -150 0
237 44 49 -151 0
c ((1<=(aux46 + SATLiteral(44) + SATLiteral(49)))=tv=SATLiteral(238))
-238 44 49 -150 0
238 150 0
238 -49 0
238 -44 0
238 -44 -49 0
c (((aux47 + SATLiteral(45) + SATLiteral(51))<=1)=tv=SATLiteral(239))
-239 154 0
-239 -51 153 0
-239 -45 153 0
-239 -45 -51 0
239 51 -153 0
239 45 -153 0
239 45 51 -154 0
c ((1<=(aux47 + SATLiteral(45) + SATLiteral(51)))=tv=SATLiteral(240))
-240 45 51 -153 0
240 153 0
240 -51 0
240 -45 0
240 -45 -51 0
c (((aux48 + SATLiteral(46) + SATLiteral(-50))<=1)=tv=SATLiteral(241))
-241 157 0
-241 50 156 0
-241 -46 156 0
-241 -46 50 0
241 -50 -156 0
241 46 -156 0
241 46 -50 -157 0
c ((1<=(aux48 + SATLiteral(46) + SATLiteral(-50)))=tv=SATLiteral(242))
-242 46 -50 -156 0
242 156 0
242 50 0
242 -46 0
242 -46 50 0
c (((SATLiteral(60) + SATLiteral(64) + aux49)<=1)=tv=SATLiteral(243))
-243 160 0
-243 -64 159 0
-243 -60 159 0
-243 -60 -64 0
243 64 -159 0
243 60 -159 0
243 60 64 -160 0
c ((1<=(SATLiteral(60) + SATLiteral(64) + aux49))=tv=SATLiteral(244))
-244 60 64 -159 0
244 159 0
244 -64 0
244 -60 0
244 -60 -64 0
c (((SATLiteral(61) + SATLiteral(66) + aux50)<=1)=tv=SATLiteral(245))
-245 163 0
-245 -66 162 0
-245 -61 162 0
-245 -61 -66 0
245 66 -162 0
245 61 -162 0
245 61 66 -163 0
c ((1<=(SATLiteral(61) + SATLiteral(66) + aux50))=tv=SATLiteral(246))
-246 61 66 -162 0
246 162 0
246 -66 0
246 -61 0
246 -61 -66 0
c (((SATLiteral(62) + SATLiteral(68) + aux51)<=1)=tv=SATLiteral(247))
-247 166 0
-247 -68 165 0
-247 -62 165 0
-247 -62 -68 0
247 68 -165 0
247 62 -165 0
247 62 68 -166 0
c ((1<=(SATLiteral(62) + SATLiteral(68) + aux51))=tv=SATLiteral(248))
-248 62 68 -165 0
248 165 0
248 -68 0
248 -62 0
248 -62 -68 0
c (((SATLiteral(63) + SATLiteral(-67) + aux52)<=1)=tv=SATLiteral(249))
-249 169 0
-249 67 168 0
-249 -63 168 0
-249 -63 67 0
249 -67 -168 0
249 63 -168 0
249 63 -67 -169 0
c ((1<=(SATLiteral(63) + SATLiteral(-67) + aux52))=tv=SATLiteral(250))
-250 63 -67 -168 0
250 168 0
250 67 0
250 -63 0
250 -63 67 0
c (((SATLiteral(20) + aux53 + SATLiteral(39))<=1)=tv=SATLiteral(251))
-251 172 0
-251 -39 171 0
-251 -20 171 0
-251 -20 -39 0
251 39 -171 0
251 20 -171 0
251 20 39 -172 0
c ((1<=(SATLiteral(20) + aux53 + SATLiteral(39)))=tv=SATLiteral(252))
-252 20 39 -171 0
252 171 0
252 -39 0
252 -20 0
252 -20 -39 0
c (((SATLiteral(21) + aux54 + SATLiteral(40))<=1)=tv=SATLiteral(253))
-253 175 0
-253 -40 174 0
-253 -21 174 0
-253 -21 -40 0
253 40 -174 0
253 21 -174 0
253 21 40 -175 0
c ((1<=(SATLiteral(21) + aux54 + SATLiteral(40)))=tv=SATLiteral(254))
-254 21 40 -174 0
254 174 0
254 -40 0
254 -21 0
254 -21 -40 0
c (((SATLiteral(22) + aux55 + SATLiteral(41))<=1)=tv=SATLiteral(255))
-255 178 0
-255 -41 177 0
-255 -22 177 0
-255 -22 -41 0
255 41 -177 0
255 22 -177 0
255 22 41 -178 0
c ((1<=(SATLiteral(22) + aux55 + SATLiteral(41)))=tv=SATLiteral(256))
-256 22 41 -177 0
256 177 0
256 -41 0
256 -22 0
256 -22 -41 0
c (((SATLiteral(23) + aux56 + SATLiteral(42))<=1)=tv=SATLiteral(257))
-257 181 0
-257 -42 180 0
-257 -23 180 0
-257 -23 -42 0
257 42 -180 0
257 23 -180 0
257 23 42 -181 0
c ((1<=(SATLiteral(23) + aux56 + SATLiteral(42)))=tv=SATLiteral(258))
-258 23 42 -180 0
258 180 0
258 -42 0
258 -23 0
258 -23 -42 0
c (((SATLiteral(24) + aux57 + SATLiteral(43))<=1)=tv=SATLiteral(259))
-259 184 0
-259 -43 183 0
-259 -24 183 0
-259 -24 -43 0
259 43 -183 0
259 24 -183 0
259 24 43 -184 0
c ((1<=(SATLiteral(24) + aux57 + SATLiteral(43)))=tv=SATLiteral(260))
-260 24 43 -183 0
260 183 0
260 -43 0
260 -24 0
260 -24 -43 0
c (((SATLiteral(26) + aux58 + SATLiteral(44))<=1)=tv=SATLiteral(261))
-261 187 0
-261 -44 186 0
-261 -26 186 0
-261 -26 -44 0
261 44 -186 0
261 26 -186 0
261 26 44 -187 0
c ((1<=(SATLiteral(26) + aux58 + SATLiteral(44)))=tv=SATLiteral(262))
-262 26 44 -186 0
262 186 0
262 -44 0
262 -26 0
262 -26 -44 0
c (((SATLiteral(28) + aux59 + SATLiteral(45))<=1)=tv=SATLiteral(263))
-263 190 0
-263 -45 189 0
-263 -28 189 0
-263 -28 -45 0
263 45 -189 0
263 28 -189 0
263 28 45 -190 0
c ((1<=(SATLiteral(28) + aux59 + SATLiteral(45)))=tv=SATLiteral(264))
-264 28 45 -189 0
264 189 0
264 -45 0
264 -28 0
264 -28 -45 0
c (((SATLiteral(-27) + aux60 + SATLiteral(46))<=1)=tv=SATLiteral(265))
-265 193 0
-265 -46 192 0
-265 27 192 0
-265 27 -46 0
265 46 -192 0
265 -27 -192 0
265 -27 46 -193 0
c ((1<=(SATLiteral(-27) + aux60 + SATLiteral(46)))=tv=SATLiteral(266))
-266 -27 46 -192 0
266 192 0
266 -46 0
266 27 0
266 27 -46 0
c (((SATLiteral(29) + aux61 + SATLiteral(47))<=1)=tv=SATLiteral(267))
-267 196 0
-267 -47 195 0
-267 -29 195 0
-267 -29 -47 0
267 47 -195 0
267 29 -195 0
267 29 47 -196 0
c ((1<=(SATLiteral(29) + aux61 + SATLiteral(47)))=tv=SATLiteral(268))
-268 29 47 -195 0
268 195 0
268 -47 0
268 -29 0
268 -29 -47 0
c (((SATLiteral(31) + aux62 + SATLiteral(49))<=1)=tv=SATLiteral(269))
-269 199 0
-269 -49 198 0
-269 -31 198 0
-269 -31 -49 0
269 49 -198 0
269 31 -198 0
269 31 49 -199 0
c ((1<=(SATLiteral(31) + aux62 + SATLiteral(49)))=tv=SATLiteral(270))
-270 31 49 -198 0
270 198 0
270 -49 0
270 -31 0
270 -31 -49 0
c (((SATLiteral(33) + aux63 + SATLiteral(51))<=1)=tv=SATLiteral(271))
-271 202 0
-271 -51 201 0
-271 -33 201 0
-271 -33 -51 0
271 51 -201 0
271 33 -201 0
271 33 51 -202 0
c ((1<=(SATLiteral(33) + aux63 + SATLiteral(51)))=tv=SATLiteral(272))
-272 33 51 -201 0
272 201 0
272 -51 0
272 -33 0
272 -33 -51 0
c (((SATLiteral(-32) + aux64 + SATLiteral(-50))<=1)=tv=SATLiteral(273))
-273 205 0
-273 50 204 0
-273 32 204 0
-273 32 50 0
273 -50 -204 0
273 -32 -204 0
273 -32 -50 -205 0
c ((1<=(SATLiteral(-32) + aux64 + SATLiteral(-50)))=tv=SATLiteral(274))
-274 -32 -50 -204 0
274 204 0
274 50 0
274 32 0
274 32 50 0
c (((SATLiteral(34) + aux65 + SATLiteral(52))<=1)=tv=SATLiteral(275))
-275 208 0
-275 -52 207 0
-275 -34 207 0
-275 -34 -52 0
275 52 -207 0
275 34 -207 0
275 34 52 -208 0
c ((1<=(SATLiteral(34) + aux65 + SATLiteral(52)))=tv=SATLiteral(276))
-276 34 52 -207 0
276 207 0
276 -52 0
276 -34 0
276 -34 -52 0
c (((SATLiteral(36) + aux66 + SATLiteral(53))<=1)=tv=SATLiteral(277))
-277 211 0
-277 -53 210 0
-277 -36 210 0
-277 -36 -53 0
277 53 -210 0
277 36 -210 0
277 36 53 -211 0
c ((1<=(SATLiteral(36) + aux66 + SATLiteral(53)))=tv=SATLiteral(278))
-278 36 53 -210 0
278 210 0
278 -53 0
278 -36 0
278 -36 -53 0
c (((SATLiteral(38) + aux67 + SATLiteral(54))<=1)=tv=SATLiteral(279))
-279 214 0
-279 -54 213 0
-279 -38 213 0
-279 -38 -54 0
279 54 -213 0
279 38 -213 0
279 38 54 -214 0
c ((1<=(SATLiteral(38) + aux67 + SATLiteral(54)))=tv=SATLiteral(280))
-280 38 54 -213 0
280 213 0
280 -54 0
280 -38 0
280 -38 -54 0
c (((SATLiteral(-37) + aux68 + SATLiteral(55))<=1)=tv=SATLiteral(281))
-281 217 0
-281 -55 216 0
-281 37 216 0
-281 37 -55 0
281 55 -216 0
281 -37 -216 0
281 -37 55 -217 0
c ((1<=(SATLiteral(-37) + aux68 + SATLiteral(55)))=tv=SATLiteral(282))
-282 -37 55 -216 0
282 216 0
282 -55 0
282 37 0
282 37 -55 0
c ((field_00001_00002<field_00001_00001)=tv=SATLiteral(86))
-2 -86 0
7 -3 -86 0
8 -5 -86 0
10 -86 0
2 -7 86 0
3 -8 86 0
5 -10 86 0
c ((field_00002_00002<field_00001_00002)=tv=SATLiteral(87))
-7 -87 0
24 -8 -87 0
25 -10 -87 0
27 -87 0
7 -24 87 0
8 -25 87 0
10 -27 87 0
c ((field_00002_00003<field_00002_00004)=tv=SATLiteral(88))
-34 -88 0
29 -35 -88 0
30 -37 -88 0
32 -88 0
34 -29 88 0
35 -30 88 0
37 -32 88 0
c ((field_00003_00003<field_00002_00003)=tv=SATLiteral(89))
-29 -89 0
47 -30 -89 0
48 -32 -89 0
50 -89 0
29 -47 89 0
30 -48 89 0
32 -50 89 0
c ((field_00004_00003<field_00003_00003)=tv=SATLiteral(90))
-47 -90 0
64 -48 -90 0
65 -50 -90 0
67 -90 0
47 -64 90 0
48 -65 90 0
50 -67 90 0
c ((SATLiteral(219) /\ SATLiteral(220))=tv=SATLiteral(91))
91 -219 -220 0
219 -91 0
220 -91 0
c ((SATLiteral(221) /\ SATLiteral(222))=tv=SATLiteral(92))
92 -221 -222 0
221 -92 0
222 -92 0
c ((SATLiteral(223) /\ SATLiteral(224))=tv=SATLiteral(93))
93 -223 -224 0
223 -93 0
224 -93 0
c ((SATLiteral(225) /\ SATLiteral(226))=tv=SATLiteral(94))
94 -225 -226 0
225 -94 0
226 -94 0
c ((SATLiteral(227) /\ SATLiteral(228))=tv=SATLiteral(95))
95 -227 -228 0
227 -95 0
228 -95 0
c ((SATLiteral(229) /\ SATLiteral(230))=tv=SATLiteral(96))
96 -229 -230 0
229 -96 0
230 -96 0
c ((SATLiteral(231) /\ SATLiteral(232))=tv=SATLiteral(97))
97 -231 -232 0
231 -97 0
232 -97 0
c ((SATLiteral(233) /\ SATLiteral(234))=tv=SATLiteral(98))
98 -233 -234 0
233 -98 0
234 -98 0
c ((SATLiteral(235) /\ SATLiteral(236))=tv=SATLiteral(99))
99 -235 -236 0
235 -99 0
236 -99 0
c ((SATLiteral(237) /\ SATLiteral(238))=tv=SATLiteral(100))
100 -237 -238 0
237 -100 0
238 -100 0
c ((SATLiteral(239) /\ SATLiteral(240))=tv=SATLiteral(101))
101 -239 -240 0
239 -101 0
240 -101 0
c ((SATLiteral(241) /\ SATLiteral(242))=tv=SATLiteral(102))
102 -241 -242 0
241 -102 0
242 -102 0
c ((SATLiteral(243) /\ SATLiteral(244))=tv=SATLiteral(103))
103 -243 -244 0
243 -103 0
244 -103 0
c ((SATLiteral(245) /\ SATLiteral(246))=tv=SATLiteral(104))
104 -245 -246 0
245 -104 0
246 -104 0
c ((SATLiteral(247) /\ SATLiteral(248))=tv=SATLiteral(105))
105 -247 -248 0
247 -105 0
248 -105 0
c ((SATLiteral(249) /\ SATLiteral(250))=tv=SATLiteral(106))
106 -249 -250 0
249 -106 0
250 -106 0
c ((SATLiteral(251) /\ SATLiteral(252))=tv=SATLiteral(107))
107 -251 -252 0
251 -107 0
252 -107 0
c ((SATLiteral(253) /\ SATLiteral(254))=tv=SATLiteral(108))
108 -253 -254 0
253 -108 0
254 -108 0
c ((SATLiteral(255) /\ SATLiteral(256))=tv=SATLiteral(109))
109 -255 -256 0
255 -109 0
256 -109 0
c ((SATLiteral(257) /\ SATLiteral(258))=tv=SATLiteral(110))
110 -257 -258 0
257 -110 0
258 -110 0
c ((SATLiteral(259) /\ SATLiteral(260))=tv=SATLiteral(111))
111 -259 -260 0
259 -111 0
260 -111 0
c ((SATLiteral(261) /\ SATLiteral(262))=tv=SATLiteral(112))
112 -261 -262 0
261 -112 0
262 -112 0
c ((SATLiteral(263) /\ SATLiteral(264))=tv=SATLiteral(113))
113 -263 -264 0
263 -113 0
264 -113 0
c ((SATLiteral(265) /\ SATLiteral(266))=tv=SATLiteral(114))
114 -265 -266 0
265 -114 0
266 -114 0
c ((SATLiteral(267) /\ SATLiteral(268))=tv=SATLiteral(115))
115 -267 -268 0
267 -115 0
268 -115 0
c ((SATLiteral(269) /\ SATLiteral(270))=tv=SATLiteral(116))
116 -269 -270 0
269 -116 0
270 -116 0
c ((SATLiteral(271) /\ SATLiteral(272))=tv=SATLiteral(117))
117 -271 -272 0
271 -117 0
272 -117 0
c ((SATLiteral(273) /\ SATLiteral(274))=tv=SATLiteral(118))
118 -273 -274 0
273 -118 0
274 -118 0
c ((SATLiteral(275) /\ SATLiteral(276))=tv=SATLiteral(119))
119 -275 -276 0
275 -119 0
276 -119 0
c ((SATLiteral(277) /\ SATLiteral(278))=tv=SATLiteral(120))
120 -277 -278 0
277 -120 0
278 -120 0
c ((SATLiteral(279) /\ SATLiteral(280))=tv=SATLiteral(121))
121 -279 -280 0
279 -121 0
280 -121 0
c ((SATLiteral(281) /\ SATLiteral(282))=tv=SATLiteral(122))
122 -281 -282 0
281 -122 0
282 -122 0
c (SATLiteral(81) -> SATLiteral(86))
-81 86 0
c (SATLiteral(82) -> SATLiteral(87))
-82 87 0
c (SATLiteral(83) -> SATLiteral(88))
-83 88 0
c (SATLiteral(84) -> SATLiteral(89))
-84 89 0
c (SATLiteral(85) -> SATLiteral(90))
-85 90 0
c (SATLiteral(73) -> SATLiteral(91))
-73 91 0
c (SATLiteral(73) -> SATLiteral(92))
-73 92 0
c (SATLiteral(73) -> SATLiteral(93))
-73 93 0
c (SATLiteral(73) -> SATLiteral(94))
-73 94 0
c (SATLiteral(74) -> SATLiteral(95))
-74 95 0
c (SATLiteral(74) -> SATLiteral(96))
-74 96 0
c (SATLiteral(74) -> SATLiteral(97))
-74 97 0
c (SATLiteral(74) -> SATLiteral(98))
-74 98 0
c (SATLiteral(75) -> SATLiteral(99))
-75 99 0
c (SATLiteral(75) -> SATLiteral(100))
-75 100 0
c (SATLiteral(75) -> SATLiteral(101))
-75 101 0
c (SATLiteral(75) -> SATLiteral(102))
-75 102 0
c (SATLiteral(76) -> SATLiteral(103))
-76 103 0
c (SATLiteral(76) -> SATLiteral(104))
-76 104 0
c (SATLiteral(76) -> SATLiteral(105))
-76 105 0
c (SATLiteral(76) -> SATLiteral(106))
-76 106 0
c (SATLiteral(77) -> SATLiteral(107))
-77 107 0
c (SATLiteral(77) -> SATLiteral(108))
-77 108 0
c (SATLiteral(77) -> SATLiteral(109))
-77 109 0
c (SATLiteral(77) -> SATLiteral(110))
-77 110 0
c (SATLiteral(78) -> SATLiteral(111))
-78 111 0
c (SATLiteral(78) -> SATLiteral(112))
-78 112 0
c (SATLiteral(78) -> SATLiteral(113))
-78 113 0
c (SATLiteral(78) -> SATLiteral(114))
-78 114 0
c (SATLiteral(79) -> SATLiteral(115))
-79 115 0
c (SATLiteral(79) -> SATLiteral(116))
-79 116 0
c (SATLiteral(79) -> SATLiteral(117))
-79 117 0
c (SATLiteral(79) -> SATLiteral(118))
-79 118 0
c (SATLiteral(80) -> SATLiteral(119))
-80 119 0
c (SATLiteral(80) -> SATLiteral(120))
-80 120 0
c (SATLiteral(80) -> SATLiteral(121))
-80 121 0
c (SATLiteral(80) -> SATLiteral(122))
-80 122 0
c (( - aux37 + SATLiteral(2) + SATLiteral(16))<=0)
-16 -123 0
-2 -123 0
-2 -16 -124 0
c (0<=( - aux37 + SATLiteral(2) + SATLiteral(16)))
16 124 0
2 124 0
2 16 123 0
c (( - aux38 + SATLiteral(4) + SATLiteral(17))<=0)
-17 -126 0
-4 -126 0
-4 -17 -127 0
c (0<=( - aux38 + SATLiteral(4) + SATLiteral(17)))
17 127 0
4 127 0
4 17 126 0
c (( - aux39 + SATLiteral(6) + SATLiteral(18))<=0)
-18 -129 0
-6 -129 0
-6 -18 -130 0
c (0<=( - aux39 + SATLiteral(6) + SATLiteral(18)))
18 130 0
6 130 0
6 18 129 0
c (( - aux40 + SATLiteral(-5) + SATLiteral(19))<=0)
-19 -132 0
5 -132 0
5 -19 -133 0
c (0<=( - aux40 + SATLiteral(-5) + SATLiteral(19)))
19 133 0
-5 133 0
-5 19 132 0
c ((SATLiteral(20) + SATLiteral(34) - aux41)<=0)
-34 -135 0
-20 -135 0
-20 -34 -136 0
c (0<=(SATLiteral(20) + SATLiteral(34) - aux41))
34 136 0
20 136 0
20 34 135 0
c ((SATLiteral(21) + SATLiteral(36) - aux42)<=0)
-36 -138 0
-21 -138 0
-21 -36 -139 0
c (0<=(SATLiteral(21) + SATLiteral(36) - aux42))
36 139 0
21 139 0
21 36 138 0
c ((SATLiteral(22) + SATLiteral(38) - aux43)<=0)
-38 -141 0
-22 -141 0
-22 -38 -142 0
c (0<=(SATLiteral(22) + SATLiteral(38) - aux43))
38 142 0
22 142 0
22 38 141 0
c ((SATLiteral(23) + SATLiteral(-37) - aux44)<=0)
37 -144 0
-23 -144 0
-23 37 -145 0
c (0<=(SATLiteral(23) + SATLiteral(-37) - aux44))
-37 145 0
23 145 0
23 -37 144 0
c (( - aux45 + SATLiteral(39) + SATLiteral(52))<=0)
-52 -147 0
-39 -147 0
-39 -52 -148 0
c (0<=( - aux45 + SATLiteral(39) + SATLiteral(52)))
52 148 0
39 148 0
39 52 147 0
c (( - aux46 + SATLiteral(40) + SATLiteral(53))<=0)
-53 -150 0
-40 -150 0
-40 -53 -151 0
c (0<=( - aux46 + SATLiteral(40) + SATLiteral(53)))
53 151 0
40 151 0
40 53 150 0
c (( - aux47 + SATLiteral(41) + SATLiteral(54))<=0)
-54 -153 0
-41 -153 0
-41 -54 -154 0
c (0<=( - aux47 + SATLiteral(41) + SATLiteral(54)))
54 154 0
41 154 0
41 54 153 0
c (( - aux48 + SATLiteral(42) + SATLiteral(55))<=0)
-55 -156 0
-42 -156 0
-42 -55 -157 0
c (0<=( - aux48 + SATLiteral(42) + SATLiteral(55)))
55 157 0
42 157 0
42 55 156 0
c ((SATLiteral(56) + SATLiteral(69) - aux49)<=0)
-69 -159 0
-56 -159 0
-56 -69 -160 0
c (0<=(SATLiteral(56) + SATLiteral(69) - aux49))
69 160 0
56 160 0
56 69 159 0
c ((SATLiteral(57) + SATLiteral(70) - aux50)<=0)
-70 -162 0
-57 -162 0
-57 -70 -163 0
c (0<=(SATLiteral(57) + SATLiteral(70) - aux50))
70 163 0
57 163 0
57 70 162 0
c ((SATLiteral(58) + SATLiteral(71) - aux51)<=0)
-71 -165 0
-58 -165 0
-58 -71 -166 0
c (0<=(SATLiteral(58) + SATLiteral(71) - aux51))
71 166 0
58 166 0
58 71 165 0
c ((SATLiteral(59) + SATLiteral(72) - aux52)<=0)
-72 -168 0
-59 -168 0
-59 -72 -169 0
c (0<=(SATLiteral(59) + SATLiteral(72) - aux52))
72 169 0
59 169 0
59 72 168 0
c ((SATLiteral(56) - aux53 + SATLiteral(2))<=0)
-2 -171 0
-56 -171 0
-56 -2 -172 0
c (0<=(SATLiteral(56) - aux53 + SATLiteral(2)))
2 172 0
56 172 0
56 2 171 0
c ((SATLiteral(57) - aux54 + SATLiteral(4))<=0)
-4 -174 0
-57 -174 0
-57 -4 -175 0
c (0<=(SATLiteral(57) - aux54 + SATLiteral(4)))
4 175 0
57 175 0
57 4 174 0
c ((SATLiteral(58) - aux55 + SATLiteral(6))<=0)
-6 -177 0
-58 -177 0
-58 -6 -178 0
c (0<=(SATLiteral(58) - aux55 + SATLiteral(6)))
6 178 0
58 178 0
58 6 177 0
c ((SATLiteral(59) - aux56 + SATLiteral(-5))<=0)
5 -180 0
-59 -180 0
-59 5 -181 0
c (0<=(SATLiteral(59) - aux56 + SATLiteral(-5)))
-5 181 0
59 181 0
59 -5 180 0
c ((SATLiteral(60) - aux57 + SATLiteral(7))<=0)
-7 -183 0
-60 -183 0
-60 -7 -184 0
c (0<=(SATLiteral(60) - aux57 + SATLiteral(7)))
7 184 0
60 184 0
60 7 183 0
c ((SATLiteral(61) - aux58 + SATLiteral(9))<=0)
-9 -186 0
-61 -186 0
-61 -9 -187 0
c (0<=(SATLiteral(61) - aux58 + SATLiteral(9)))
9 187 0
61 187 0
61 9 186 0
c ((SATLiteral(62) - aux59 + SATLiteral(11))<=0)
-11 -189 0
-62 -189 0
-62 -11 -190 0
c (0<=(SATLiteral(62) - aux59 + SATLiteral(11)))
11 190 0
62 190 0
62 11 189 0
c ((SATLiteral(63) - aux60 + SATLiteral(-10))<=0)
10 -192 0
-63 -192 0
-63 10 -193 0
c (0<=(SATLiteral(63) - aux60 + SATLiteral(-10)))
-10 193 0
63 193 0
63 -10 192 0
c ((SATLiteral(64) - aux61 + SATLiteral(12))<=0)
-12 -195 0
-64 -195 0
-64 -12 -196 0
c (0<=(SATLiteral(64) - aux61 + SATLiteral(12)))
12 196 0
64 196 0
64 12 195 0
c ((SATLiteral(66) - aux62 + SATLiteral(13))<=0)
-13 -198 0
-66 -198 0
-66 -13 -199 0
c (0<=(SATLiteral(66) - aux62 + SATLiteral(13)))
13 199 0
66 199 0
66 13 198 0
c ((SATLiteral(68) - aux63 + SATLiteral(14))<=0)
-14 -201 0
-68 -201 0
-68 -14 -202 0
c (0<=(SATLiteral(68) - aux63 + SATLiteral(14)))
14 202 0
68 202 0
68 14 201 0
c ((SATLiteral(-67) - aux64 + SATLiteral(15))<=0)
-15 -204 0
67 -204 0
67 -15 -205 0
c (0<=(SATLiteral(-67) - aux64 + SATLiteral(15)))
15 205 0
-67 205 0
-67 15 204 0
c ((SATLiteral(69) - aux65 + SATLiteral(16))<=0)
-16 -207 0
-69 -207 0
-69 -16 -208 0
c (0<=(SATLiteral(69) - aux65 + SATLiteral(16)))
16 208 0
69 208 0
69 16 207 0
c ((SATLiteral(70) - aux66 + SATLiteral(17))<=0)
-17 -210 0
-70 -210 0
-70 -17 -211 0
c (0<=(SATLiteral(70) - aux66 + SATLiteral(17)))
17 211 0
70 211 0
70 17 210 0
c ((SATLiteral(71) - aux67 + SATLiteral(18))<=0)
-18 -213 0
-71 -213 0
-71 -18 -214 0
c (0<=(SATLiteral(71) - aux67 + SATLiteral(18)))
18 214 0
71 214 0
71 18 213 0
c ((SATLiteral(72) - aux68 + SATLiteral(19))<=0)
-19 -216 0
-72 -216 0
-72 -19 -217 0
c (0<=(SATLiteral(72) - aux68 + SATLiteral(19)))
19 217 0
72 217 0
72 19 216 0
