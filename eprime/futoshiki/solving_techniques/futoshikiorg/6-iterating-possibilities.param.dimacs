p cnf 176 612                                                                                       

1 0
c Encoding variable: field_00001_00001 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00001_00001' order represents '1' with '2'
c Var 'field_00001_00001' direct represents '1' with '2'
c Var 'field_00001_00001' order represents '2' with '3'
-2 3 0
c Var 'field_00001_00001' direct represents '2' with '4'
2 -3 4 0
-4 3 0
-4 -2 0
c Var 'field_00001_00001' order represents '3' with '5'
-3 5 0
c Var 'field_00001_00001' direct represents '3' with '6'
3 -5 6 0
-6 5 0
-6 -3 0
c Var 'field_00001_00001' direct represents '4' with '-5'
2 4 6 -5 0
c Encoding variable: field_00001_00002 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00001_00002' direct represents '1' with '7'
c Var 'field_00001_00002' direct represents '2' with '8'
c Var 'field_00001_00002' direct represents '3' with '9'
c Var 'field_00001_00002' direct represents '4' with '10'
7 8 9 10 0
-7 -8 0
-7 -9 0
-7 -10 0
-8 -9 0
-8 -10 0
-9 -10 0
c Encoding variable: field_00001_00003 with domain: int(4) (representing constraint )
c Var 'field_00001_00003' direct represents '4' with '11'
11 0
c Encoding variable: field_00001_00004 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00001_00004' direct represents '1' with '12'
c Var 'field_00001_00004' direct represents '2' with '13'
c Var 'field_00001_00004' direct represents '3' with '14'
c Var 'field_00001_00004' direct represents '4' with '15'
12 13 14 15 0
-12 -13 0
-12 -14 0
-12 -15 0
-13 -14 0
-13 -15 0
-14 -15 0
c Encoding variable: field_00002_00001 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00002_00001' order represents '1' with '16'
c Var 'field_00002_00001' direct represents '1' with '16'
c Var 'field_00002_00001' order represents '2' with '17'
-16 17 0
c Var 'field_00002_00001' direct represents '2' with '18'
16 -17 18 0
-18 17 0
-18 -16 0
c Var 'field_00002_00001' order represents '3' with '19'
-17 19 0
c Var 'field_00002_00001' direct represents '3' with '20'
17 -19 20 0
-20 19 0
-20 -17 0
c Var 'field_00002_00001' direct represents '4' with '-19'
16 18 20 -19 0
c Encoding variable: field_00002_00002 with domain: int(4) (representing constraint )
c Var 'field_00002_00002' direct represents '4' with '21'
21 0
c Encoding variable: field_00002_00003 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00002_00003' order represents '1' with '22'
c Var 'field_00002_00003' direct represents '1' with '22'
c Var 'field_00002_00003' order represents '2' with '23'
-22 23 0
c Var 'field_00002_00003' direct represents '2' with '24'
22 -23 24 0
-24 23 0
-24 -22 0
c Var 'field_00002_00003' order represents '3' with '25'
-23 25 0
c Var 'field_00002_00003' direct represents '3' with '26'
23 -25 26 0
-26 25 0
-26 -23 0
c Var 'field_00002_00003' direct represents '4' with '-25'
22 24 26 -25 0
c Encoding variable: field_00002_00004 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00002_00004' direct represents '1' with '27'
c Var 'field_00002_00004' direct represents '2' with '28'
c Var 'field_00002_00004' direct represents '3' with '29'
c Var 'field_00002_00004' direct represents '4' with '30'
27 28 29 30 0
-27 -28 0
-27 -29 0
-27 -30 0
-28 -29 0
-28 -30 0
-29 -30 0
c Encoding variable: field_00003_00001 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00003_00001' direct represents '1' with '31'
c Var 'field_00003_00001' direct represents '2' with '32'
c Var 'field_00003_00001' direct represents '3' with '33'
c Var 'field_00003_00001' direct represents '4' with '34'
31 32 33 34 0
-31 -32 0
-31 -33 0
-31 -34 0
-32 -33 0
-32 -34 0
-33 -34 0
c Encoding variable: field_00003_00002 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00003_00002' order represents '1' with '35'
c Var 'field_00003_00002' direct represents '1' with '35'
c Var 'field_00003_00002' order represents '2' with '36'
-35 36 0
c Var 'field_00003_00002' direct represents '2' with '37'
35 -36 37 0
-37 36 0
-37 -35 0
c Var 'field_00003_00002' order represents '3' with '38'
-36 38 0
c Var 'field_00003_00002' direct represents '3' with '39'
36 -38 39 0
-39 38 0
-39 -36 0
c Var 'field_00003_00002' direct represents '4' with '-38'
35 37 39 -38 0
c Encoding variable: field_00003_00003 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00003_00003' order represents '1' with '40'
c Var 'field_00003_00003' direct represents '1' with '40'
c Var 'field_00003_00003' order represents '2' with '41'
-40 41 0
c Var 'field_00003_00003' direct represents '2' with '42'
40 -41 42 0
-42 41 0
-42 -40 0
c Var 'field_00003_00003' order represents '3' with '43'
-41 43 0
c Var 'field_00003_00003' direct represents '3' with '44'
41 -43 44 0
-44 43 0
-44 -41 0
c Var 'field_00003_00003' direct represents '4' with '-43'
40 42 44 -43 0
c Encoding variable: field_00003_00004 with domain: int(4) (representing constraint )
c Var 'field_00003_00004' direct represents '4' with '45'
45 0
c Encoding variable: field_00004_00001 with domain: int(4) (representing constraint )
c Var 'field_00004_00001' direct represents '4' with '46'
46 0
c Encoding variable: field_00004_00002 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00004_00002' direct represents '1' with '47'
c Var 'field_00004_00002' direct represents '2' with '48'
c Var 'field_00004_00002' direct represents '3' with '49'
c Var 'field_00004_00002' direct represents '4' with '50'
47 48 49 50 0
-47 -48 0
-47 -49 0
-47 -50 0
-48 -49 0
-48 -50 0
-49 -50 0
c Encoding variable: field_00004_00003 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00004_00003' order represents '1' with '51'
c Var 'field_00004_00003' direct represents '1' with '51'
c Var 'field_00004_00003' order represents '2' with '52'
-51 52 0
c Var 'field_00004_00003' direct represents '2' with '53'
51 -52 53 0
-53 52 0
-53 -51 0
c Var 'field_00004_00003' order represents '3' with '54'
-52 54 0
c Var 'field_00004_00003' direct represents '3' with '55'
52 -54 55 0
-55 54 0
-55 -52 0
c Var 'field_00004_00003' direct represents '4' with '-54'
51 53 55 -54 0
c Encoding variable: field_00004_00004 with domain: int(3) (representing constraint )
c Var 'field_00004_00004' direct represents '3' with '56'
56 0
c Encoding variable: row_alldiff_00001 with domain: bool (representing constraint )
c Var 'row_alldiff_00001' direct represents '0' with '-57'
c Var 'row_alldiff_00001' direct represents '1' with '57'
c Var 'row_alldiff_00001' order represents '1' with '1'
c Var 'row_alldiff_00001' order represents '0' with '-57'
c Encoding variable: row_alldiff_00002 with domain: bool (representing constraint )
c Var 'row_alldiff_00002' direct represents '0' with '-58'
c Var 'row_alldiff_00002' direct represents '1' with '58'
c Var 'row_alldiff_00002' order represents '1' with '1'
c Var 'row_alldiff_00002' order represents '0' with '-58'
c Encoding variable: row_alldiff_00003 with domain: bool (representing constraint )
c Var 'row_alldiff_00003' direct represents '0' with '-59'
c Var 'row_alldiff_00003' direct represents '1' with '59'
c Var 'row_alldiff_00003' order represents '1' with '1'
c Var 'row_alldiff_00003' order represents '0' with '-59'
c Encoding variable: row_alldiff_00004 with domain: bool (representing constraint )
c Var 'row_alldiff_00004' direct represents '0' with '-60'
c Var 'row_alldiff_00004' direct represents '1' with '60'
c Var 'row_alldiff_00004' order represents '1' with '1'
c Var 'row_alldiff_00004' order represents '0' with '-60'
c Encoding variable: col_alldiff_00001 with domain: bool (representing constraint )
c Var 'col_alldiff_00001' direct represents '0' with '-61'
c Var 'col_alldiff_00001' direct represents '1' with '61'
c Var 'col_alldiff_00001' order represents '1' with '1'
c Var 'col_alldiff_00001' order represents '0' with '-61'
c Encoding variable: col_alldiff_00002 with domain: bool (representing constraint )
c Var 'col_alldiff_00002' direct represents '0' with '-62'
c Var 'col_alldiff_00002' direct represents '1' with '62'
c Var 'col_alldiff_00002' order represents '1' with '1'
c Var 'col_alldiff_00002' order represents '0' with '-62'
c Encoding variable: col_alldiff_00003 with domain: bool (representing constraint )
c Var 'col_alldiff_00003' direct represents '0' with '-63'
c Var 'col_alldiff_00003' direct represents '1' with '63'
c Var 'col_alldiff_00003' order represents '1' with '1'
c Var 'col_alldiff_00003' order represents '0' with '-63'
c Encoding variable: col_alldiff_00004 with domain: bool (representing constraint )
c Var 'col_alldiff_00004' direct represents '0' with '-64'
c Var 'col_alldiff_00004' direct represents '1' with '64'
c Var 'col_alldiff_00004' order represents '1' with '1'
c Var 'col_alldiff_00004' order represents '0' with '-64'
c Encoding variable: less_than_00000 with domain: bool (representing constraint )
c Var 'less_than_00000' direct represents '0' with '-65'
c Var 'less_than_00000' direct represents '1' with '65'
c Var 'less_than_00000' order represents '1' with '1'
c Var 'less_than_00000' order represents '0' with '-65'
c Encoding variable: less_than_00001 with domain: bool (representing constraint )
c Var 'less_than_00001' direct represents '0' with '-66'
c Var 'less_than_00001' direct represents '1' with '66'
c Var 'less_than_00001' order represents '1' with '1'
c Var 'less_than_00001' order represents '0' with '-66'
c Encoding variable: less_than_00002 with domain: bool (representing constraint )
c Var 'less_than_00002' direct represents '0' with '-67'
c Var 'less_than_00002' direct represents '1' with '67'
c Var 'less_than_00002' order represents '1' with '1'
c Var 'less_than_00002' order represents '0' with '-67'
c Encoding variable: less_than_00003 with domain: bool (representing constraint )
c Var 'less_than_00003' direct represents '0' with '-68'
c Var 'less_than_00003' direct represents '1' with '68'
c Var 'less_than_00003' order represents '1' with '1'
c Var 'less_than_00003' order represents '0' with '-68'
c Encoding variable: less_than_00004 with domain: bool (representing constraint )
c Var 'less_than_00004' direct represents '0' with '-69'
c Var 'less_than_00004' direct represents '1' with '69'
c Var 'less_than_00004' order represents '1' with '1'
c Var 'less_than_00004' order represents '0' with '-69'
c Encoding variable: aux0 with domain: bool (representing constraint (field_00002_00001<field_00001_00001))
c Var 'aux0' direct represents '0' with '-70'
c Var 'aux0' direct represents '1' with '70'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-70'
c Encoding variable: aux1 with domain: bool (representing constraint (field_00002_00003<field_00002_00002))
c Var 'aux1' direct represents '0' with '-71'
c Var 'aux1' direct represents '1' with '71'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-71'
c Encoding variable: aux2 with domain: bool (representing constraint (field_00003_00002<field_00003_00003))
c Var 'aux2' direct represents '0' with '-72'
c Var 'aux2' direct represents '1' with '72'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-72'
c Encoding variable: aux3 with domain: bool (representing constraint (field_00003_00003<field_00003_00004))
c Var 'aux3' direct represents '0' with '-73'
c Var 'aux3' direct represents '1' with '73'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-73'
c Encoding variable: aux4 with domain: bool (representing constraint (field_00004_00003<field_00004_00004))
c Var 'aux4' direct represents '0' with '-74'
c Var 'aux4' direct represents '1' with '74'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-74'
c Encoding variable: aux5 with domain: bool (representing constraint (((field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00004=1))=tv=1))
c Var 'aux5' direct represents '0' with '-75'
c Var 'aux5' direct represents '1' with '75'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-75'
c Encoding variable: aux6 with domain: bool (representing constraint (((field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00004=2))=tv=1))
c Var 'aux6' direct represents '0' with '-76'
c Var 'aux6' direct represents '1' with '76'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-76'
c Encoding variable: aux7 with domain: bool (representing constraint (((field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00004=3))=tv=1))
c Var 'aux7' direct represents '0' with '-77'
c Var 'aux7' direct represents '1' with '77'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-77'
c Encoding variable: aux8 with domain: bool (representing constraint (((field_00001_00001=4) + (field_00001_00002=4) + (field_00001_00003=4) + (field_00001_00004=4))=tv=1))
c Var 'aux8' direct represents '0' with '-78'
c Var 'aux8' direct represents '1' with '78'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-78'
c Encoding variable: aux9 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00002_00003=1) + (field_00002_00004=1))=tv=1))
c Var 'aux9' direct represents '0' with '-79'
c Var 'aux9' direct represents '1' with '79'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-79'
c Encoding variable: aux10 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00002_00003=2) + (field_00002_00004=2))=tv=1))
c Var 'aux10' direct represents '0' with '-80'
c Var 'aux10' direct represents '1' with '80'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-80'
c Encoding variable: aux11 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00002_00003=3) + (field_00002_00004=3))=tv=1))
c Var 'aux11' direct represents '0' with '-81'
c Var 'aux11' direct represents '1' with '81'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-81'
c Encoding variable: aux12 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00002_00002=4) + (field_00002_00003=4) + (field_00002_00004=4))=tv=1))
c Var 'aux12' direct represents '0' with '-82'
c Var 'aux12' direct represents '1' with '82'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-82'
c Encoding variable: aux13 with domain: bool (representing constraint (((field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1))=tv=1))
c Var 'aux13' direct represents '0' with '-83'
c Var 'aux13' direct represents '1' with '83'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-83'
c Encoding variable: aux14 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))=tv=1))
c Var 'aux14' direct represents '0' with '-84'
c Var 'aux14' direct represents '1' with '84'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-84'
c Encoding variable: aux15 with domain: bool (representing constraint (((field_00003_00001=3) + (field_00003_00002=3) + (field_00003_00003=3))=tv=1))
c Var 'aux15' direct represents '0' with '-85'
c Var 'aux15' direct represents '1' with '85'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-85'
c Encoding variable: aux16 with domain: bool (representing constraint (((field_00003_00001=4) + (field_00003_00002=4) + (field_00003_00003=4) + (field_00003_00004=4))=tv=1))
c Var 'aux16' direct represents '0' with '-86'
c Var 'aux16' direct represents '1' with '86'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-86'
c Encoding variable: aux17 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1))=tv=1))
c Var 'aux17' direct represents '0' with '-87'
c Var 'aux17' direct represents '1' with '87'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-87'
c Encoding variable: aux18 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00004_00003=2))=tv=1))
c Var 'aux18' direct represents '0' with '-88'
c Var 'aux18' direct represents '1' with '88'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-88'
c Encoding variable: aux19 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00004_00003=3) + (field_00004_00004=3))=tv=1))
c Var 'aux19' direct represents '0' with '-89'
c Var 'aux19' direct represents '1' with '89'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-89'
c Encoding variable: aux20 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00004_00002=4) + (field_00004_00003=4))=tv=1))
c Var 'aux20' direct represents '0' with '-90'
c Var 'aux20' direct represents '1' with '90'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-90'
c Encoding variable: aux21 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00003_00001=1) + (field_00001_00001=1))=tv=1))
c Var 'aux21' direct represents '0' with '-91'
c Var 'aux21' direct represents '1' with '91'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-91'
c Encoding variable: aux22 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00003_00001=2) + (field_00001_00001=2))=tv=1))
c Var 'aux22' direct represents '0' with '-92'
c Var 'aux22' direct represents '1' with '92'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-92'
c Encoding variable: aux23 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00003_00001=3) + (field_00001_00001=3))=tv=1))
c Var 'aux23' direct represents '0' with '-93'
c Var 'aux23' direct represents '1' with '93'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-93'
c Encoding variable: aux24 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00002_00001=4) + (field_00003_00001=4) + (field_00001_00001=4))=tv=1))
c Var 'aux24' direct represents '0' with '-94'
c Var 'aux24' direct represents '1' with '94'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-94'
c Encoding variable: aux25 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00003_00002=1) + (field_00001_00002=1))=tv=1))
c Var 'aux25' direct represents '0' with '-95'
c Var 'aux25' direct represents '1' with '95'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-95'
c Encoding variable: aux26 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00003_00002=2) + (field_00001_00002=2))=tv=1))
c Var 'aux26' direct represents '0' with '-96'
c Var 'aux26' direct represents '1' with '96'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-96'
c Encoding variable: aux27 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00003_00002=3) + (field_00001_00002=3))=tv=1))
c Var 'aux27' direct represents '0' with '-97'
c Var 'aux27' direct represents '1' with '97'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-97'
c Encoding variable: aux28 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00002_00002=4) + (field_00003_00002=4) + (field_00001_00002=4))=tv=1))
c Var 'aux28' direct represents '0' with '-98'
c Var 'aux28' direct represents '1' with '98'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-98'
c Encoding variable: aux29 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00002_00003=1) + (field_00003_00003=1))=tv=1))
c Var 'aux29' direct represents '0' with '-99'
c Var 'aux29' direct represents '1' with '99'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-99'
c Encoding variable: aux30 with domain: bool (representing constraint (((field_00004_00003=2) + (field_00002_00003=2) + (field_00003_00003=2))=tv=1))
c Var 'aux30' direct represents '0' with '-100'
c Var 'aux30' direct represents '1' with '100'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-100'
c Encoding variable: aux31 with domain: bool (representing constraint (((field_00004_00003=3) + (field_00002_00003=3) + (field_00003_00003=3))=tv=1))
c Var 'aux31' direct represents '0' with '-101'
c Var 'aux31' direct represents '1' with '101'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-101'
c Encoding variable: aux32 with domain: bool (representing constraint (((field_00004_00003=4) + (field_00002_00003=4) + (field_00003_00003=4) + (field_00001_00003=4))=tv=1))
c Var 'aux32' direct represents '0' with '-102'
c Var 'aux32' direct represents '1' with '102'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-102'
c Encoding variable: aux33 with domain: bool (representing constraint (((field_00002_00004=1) + (field_00001_00004=1))=tv=1))
c Var 'aux33' direct represents '0' with '-103'
c Var 'aux33' direct represents '1' with '103'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-103'
c Encoding variable: aux34 with domain: bool (representing constraint (((field_00002_00004=2) + (field_00001_00004=2))=tv=1))
c Var 'aux34' direct represents '0' with '-104'
c Var 'aux34' direct represents '1' with '104'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-104'
c Encoding variable: aux35 with domain: bool (representing constraint (((field_00004_00004=3) + (field_00002_00004=3) + (field_00001_00004=3))=tv=1))
c Var 'aux35' direct represents '0' with '-105'
c Var 'aux35' direct represents '1' with '105'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-105'
c Encoding variable: aux36 with domain: bool (representing constraint (((field_00002_00004=4) + (field_00003_00004=4) + (field_00001_00004=4))=tv=1))
c Var 'aux36' direct represents '0' with '-106'
c Var 'aux36' direct represents '1' with '106'
c Var 'aux36' order represents '1' with '1'
c Var 'aux36' order represents '0' with '-106'
c Encoding variable: aux37 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00001_00004=4)))
c Both direct and order encoding.
c Var 'aux37' order represents '0' with '107'
c Var 'aux37' direct represents '0' with '107'
c Var 'aux37' order represents '1' with '108'
-107 108 0
c Var 'aux37' direct represents '1' with '109'
107 -108 109 0
-109 108 0
-109 -107 0
c Var 'aux37' direct represents '2' with '-108'
107 109 -108 0
c Encoding variable: aux38 with domain: int(0..2) (representing constraint ((field_00002_00001=4) + (field_00002_00004=4)))
c Both direct and order encoding.
c Var 'aux38' order represents '0' with '110'
c Var 'aux38' direct represents '0' with '110'
c Var 'aux38' order represents '1' with '111'
-110 111 0
c Var 'aux38' direct represents '1' with '112'
110 -111 112 0
-112 111 0
-112 -110 0
c Var 'aux38' direct represents '2' with '-111'
110 112 -111 0
c Encoding variable: aux39 with domain: int(1..2) (representing constraint ((field_00003_00001=4) + (field_00003_00004=4)))
c Var 'aux39' direct represents '1' with '-113'
c Var 'aux39' direct represents '2' with '113'
c Var 'aux39' order represents '2' with '1'
c Var 'aux39' order represents '1' with '-113'
c Encoding variable: aux40 with domain: int(1..2) (representing constraint ((field_00004_00001=4) + (field_00001_00001=4)))
c Var 'aux40' direct represents '1' with '-114'
c Var 'aux40' direct represents '2' with '114'
c Var 'aux40' order represents '2' with '1'
c Var 'aux40' order represents '1' with '-114'
c Encoding variable: aux41 with domain: int(0..2) (representing constraint ((field_00004_00002=4) + (field_00001_00002=4)))
c Both direct and order encoding.
c Var 'aux41' order represents '0' with '115'
c Var 'aux41' direct represents '0' with '115'
c Var 'aux41' order represents '1' with '116'
-115 116 0
c Var 'aux41' direct represents '1' with '117'
115 -116 117 0
-117 116 0
-117 -115 0
c Var 'aux41' direct represents '2' with '-116'
115 117 -116 0
c Encoding variable: aux42 with domain: int(1..2) (representing constraint ((field_00004_00003=4) + (field_00001_00003=4)))
c Var 'aux42' direct represents '1' with '-118'
c Var 'aux42' direct represents '2' with '118'
c Var 'aux42' order represents '2' with '1'
c Var 'aux42' order represents '1' with '-118'
c Encoding variable: aux43 with domain: bool (representing constraint (((field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00004=1))<=1))
c Var 'aux43' direct represents '0' with '-119'
c Var 'aux43' direct represents '1' with '119'
c Var 'aux43' order represents '1' with '1'
c Var 'aux43' order represents '0' with '-119'
c Encoding variable: aux44 with domain: bool (representing constraint (1<=((field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00004=1))))
c Var 'aux44' direct represents '0' with '-120'
c Var 'aux44' direct represents '1' with '120'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-120'
c Encoding variable: aux45 with domain: bool (representing constraint (((field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00004=2))<=1))
c Var 'aux45' direct represents '0' with '-121'
c Var 'aux45' direct represents '1' with '121'
c Var 'aux45' order represents '1' with '1'
c Var 'aux45' order represents '0' with '-121'
c Encoding variable: aux46 with domain: bool (representing constraint (1<=((field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00004=2))))
c Var 'aux46' direct represents '0' with '-122'
c Var 'aux46' direct represents '1' with '122'
c Var 'aux46' order represents '1' with '1'
c Var 'aux46' order represents '0' with '-122'
c Encoding variable: aux47 with domain: bool (representing constraint (((field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00004=3))<=1))
c Var 'aux47' direct represents '0' with '-123'
c Var 'aux47' direct represents '1' with '123'
c Var 'aux47' order represents '1' with '1'
c Var 'aux47' order represents '0' with '-123'
c Encoding variable: aux48 with domain: bool (representing constraint (1<=((field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00004=3))))
c Var 'aux48' direct represents '0' with '-124'
c Var 'aux48' direct represents '1' with '124'
c Var 'aux48' order represents '1' with '1'
c Var 'aux48' order represents '0' with '-124'
c Encoding variable: aux49 with domain: bool (representing constraint ((aux37 + (field_00001_00002=4) + (field_00001_00003=4))<=1))
c Var 'aux49' direct represents '0' with '-125'
c Var 'aux49' direct represents '1' with '125'
c Var 'aux49' order represents '1' with '1'
c Var 'aux49' order represents '0' with '-125'
c Encoding variable: aux50 with domain: bool (representing constraint (1<=(aux37 + (field_00001_00002=4) + (field_00001_00003=4))))
c Var 'aux50' direct represents '0' with '-126'
c Var 'aux50' direct represents '1' with '126'
c Var 'aux50' order represents '1' with '1'
c Var 'aux50' order represents '0' with '-126'
c Encoding variable: aux51 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00002_00003=1) + (field_00002_00004=1))<=1))
c Var 'aux51' direct represents '0' with '-127'
c Var 'aux51' direct represents '1' with '127'
c Var 'aux51' order represents '1' with '1'
c Var 'aux51' order represents '0' with '-127'
c Encoding variable: aux52 with domain: bool (representing constraint (1<=((field_00002_00001=1) + (field_00002_00003=1) + (field_00002_00004=1))))
c Var 'aux52' direct represents '0' with '-128'
c Var 'aux52' direct represents '1' with '128'
c Var 'aux52' order represents '1' with '1'
c Var 'aux52' order represents '0' with '-128'
c Encoding variable: aux53 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00002_00003=2) + (field_00002_00004=2))<=1))
c Var 'aux53' direct represents '0' with '-129'
c Var 'aux53' direct represents '1' with '129'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-129'
c Encoding variable: aux54 with domain: bool (representing constraint (1<=((field_00002_00001=2) + (field_00002_00003=2) + (field_00002_00004=2))))
c Var 'aux54' direct represents '0' with '-130'
c Var 'aux54' direct represents '1' with '130'
c Var 'aux54' order represents '1' with '1'
c Var 'aux54' order represents '0' with '-130'
c Encoding variable: aux55 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00002_00003=3) + (field_00002_00004=3))<=1))
c Var 'aux55' direct represents '0' with '-131'
c Var 'aux55' direct represents '1' with '131'
c Var 'aux55' order represents '1' with '1'
c Var 'aux55' order represents '0' with '-131'
c Encoding variable: aux56 with domain: bool (representing constraint (1<=((field_00002_00001=3) + (field_00002_00003=3) + (field_00002_00004=3))))
c Var 'aux56' direct represents '0' with '-132'
c Var 'aux56' direct represents '1' with '132'
c Var 'aux56' order represents '1' with '1'
c Var 'aux56' order represents '0' with '-132'
c Encoding variable: aux57 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00002_00003=4) + aux38)<=1))
c Var 'aux57' direct represents '0' with '-133'
c Var 'aux57' direct represents '1' with '133'
c Var 'aux57' order represents '1' with '1'
c Var 'aux57' order represents '0' with '-133'
c Encoding variable: aux58 with domain: bool (representing constraint (1<=((field_00002_00002=4) + (field_00002_00003=4) + aux38)))
c Var 'aux58' direct represents '0' with '-134'
c Var 'aux58' direct represents '1' with '134'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-134'
c Encoding variable: aux59 with domain: bool (representing constraint (((field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1))<=1))
c Var 'aux59' direct represents '0' with '-135'
c Var 'aux59' direct represents '1' with '135'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-135'
c Encoding variable: aux60 with domain: bool (representing constraint (1<=((field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1))))
c Var 'aux60' direct represents '0' with '-136'
c Var 'aux60' direct represents '1' with '136'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-136'
c Encoding variable: aux61 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))<=1))
c Var 'aux61' direct represents '0' with '-137'
c Var 'aux61' direct represents '1' with '137'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-137'
c Encoding variable: aux62 with domain: bool (representing constraint (1<=((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2))))
c Var 'aux62' direct represents '0' with '-138'
c Var 'aux62' direct represents '1' with '138'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-138'
c Encoding variable: aux63 with domain: bool (representing constraint (((field_00003_00001=3) + (field_00003_00002=3) + (field_00003_00003=3))<=1))
c Var 'aux63' direct represents '0' with '-139'
c Var 'aux63' direct represents '1' with '139'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-139'
c Encoding variable: aux64 with domain: bool (representing constraint (1<=((field_00003_00001=3) + (field_00003_00002=3) + (field_00003_00003=3))))
c Var 'aux64' direct represents '0' with '-140'
c Var 'aux64' direct represents '1' with '140'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-140'
c Encoding variable: aux65 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1))<=1))
c Var 'aux65' direct represents '0' with '-141'
c Var 'aux65' direct represents '1' with '141'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-141'
c Encoding variable: aux66 with domain: bool (representing constraint (1<=((field_00004_00002=1) + (field_00004_00003=1))))
c Var 'aux66' direct represents '0' with '-142'
c Var 'aux66' direct represents '1' with '142'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-142'
c Encoding variable: aux67 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00004_00003=2))<=1))
c Var 'aux67' direct represents '0' with '-143'
c Var 'aux67' direct represents '1' with '143'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-143'
c Encoding variable: aux68 with domain: bool (representing constraint (1<=((field_00004_00002=2) + (field_00004_00003=2))))
c Var 'aux68' direct represents '0' with '-144'
c Var 'aux68' direct represents '1' with '144'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-144'
c Encoding variable: aux69 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00004_00003=3) + (field_00004_00004=3))<=1))
c Var 'aux69' direct represents '0' with '-145'
c Var 'aux69' direct represents '1' with '145'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-145'
c Encoding variable: aux70 with domain: bool (representing constraint (1<=((field_00004_00002=3) + (field_00004_00003=3) + (field_00004_00004=3))))
c Var 'aux70' direct represents '0' with '-146'
c Var 'aux70' direct represents '1' with '146'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-146'
c Encoding variable: aux71 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00004_00002=4) + (field_00004_00003=4))<=1))
c Var 'aux71' direct represents '0' with '-147'
c Var 'aux71' direct represents '1' with '147'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-147'
c Encoding variable: aux72 with domain: bool (representing constraint (1<=((field_00004_00001=4) + (field_00004_00002=4) + (field_00004_00003=4))))
c Var 'aux72' direct represents '0' with '-148'
c Var 'aux72' direct represents '1' with '148'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-148'
c Encoding variable: aux73 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00003_00001=1) + (field_00001_00001=1))<=1))
c Var 'aux73' direct represents '0' with '-149'
c Var 'aux73' direct represents '1' with '149'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-149'
c Encoding variable: aux74 with domain: bool (representing constraint (1<=((field_00002_00001=1) + (field_00003_00001=1) + (field_00001_00001=1))))
c Var 'aux74' direct represents '0' with '-150'
c Var 'aux74' direct represents '1' with '150'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-150'
c Encoding variable: aux75 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00003_00001=2) + (field_00001_00001=2))<=1))
c Var 'aux75' direct represents '0' with '-151'
c Var 'aux75' direct represents '1' with '151'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-151'
c Encoding variable: aux76 with domain: bool (representing constraint (1<=((field_00002_00001=2) + (field_00003_00001=2) + (field_00001_00001=2))))
c Var 'aux76' direct represents '0' with '-152'
c Var 'aux76' direct represents '1' with '152'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-152'
c Encoding variable: aux77 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00003_00001=3) + (field_00001_00001=3))<=1))
c Var 'aux77' direct represents '0' with '-153'
c Var 'aux77' direct represents '1' with '153'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-153'
c Encoding variable: aux78 with domain: bool (representing constraint (1<=((field_00002_00001=3) + (field_00003_00001=3) + (field_00001_00001=3))))
c Var 'aux78' direct represents '0' with '-154'
c Var 'aux78' direct represents '1' with '154'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-154'
c Encoding variable: aux79 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00003_00002=1) + (field_00001_00002=1))<=1))
c Var 'aux79' direct represents '0' with '-155'
c Var 'aux79' direct represents '1' with '155'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-155'
c Encoding variable: aux80 with domain: bool (representing constraint (1<=((field_00004_00002=1) + (field_00003_00002=1) + (field_00001_00002=1))))
c Var 'aux80' direct represents '0' with '-156'
c Var 'aux80' direct represents '1' with '156'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-156'
c Encoding variable: aux81 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00003_00002=2) + (field_00001_00002=2))<=1))
c Var 'aux81' direct represents '0' with '-157'
c Var 'aux81' direct represents '1' with '157'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-157'
c Encoding variable: aux82 with domain: bool (representing constraint (1<=((field_00004_00002=2) + (field_00003_00002=2) + (field_00001_00002=2))))
c Var 'aux82' direct represents '0' with '-158'
c Var 'aux82' direct represents '1' with '158'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-158'
c Encoding variable: aux83 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00003_00002=3) + (field_00001_00002=3))<=1))
c Var 'aux83' direct represents '0' with '-159'
c Var 'aux83' direct represents '1' with '159'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-159'
c Encoding variable: aux84 with domain: bool (representing constraint (1<=((field_00004_00002=3) + (field_00003_00002=3) + (field_00001_00002=3))))
c Var 'aux84' direct represents '0' with '-160'
c Var 'aux84' direct represents '1' with '160'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-160'
c Encoding variable: aux85 with domain: bool (representing constraint (((field_00002_00002=4) + aux41 + (field_00003_00002=4))<=1))
c Var 'aux85' direct represents '0' with '-161'
c Var 'aux85' direct represents '1' with '161'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-161'
c Encoding variable: aux86 with domain: bool (representing constraint (1<=((field_00002_00002=4) + aux41 + (field_00003_00002=4))))
c Var 'aux86' direct represents '0' with '-162'
c Var 'aux86' direct represents '1' with '162'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-162'
c Encoding variable: aux87 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00002_00003=1) + (field_00003_00003=1))<=1))
c Var 'aux87' direct represents '0' with '-163'
c Var 'aux87' direct represents '1' with '163'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-163'
c Encoding variable: aux88 with domain: bool (representing constraint (1<=((field_00004_00003=1) + (field_00002_00003=1) + (field_00003_00003=1))))
c Var 'aux88' direct represents '0' with '-164'
c Var 'aux88' direct represents '1' with '164'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-164'
c Encoding variable: aux89 with domain: bool (representing constraint (((field_00004_00003=2) + (field_00002_00003=2) + (field_00003_00003=2))<=1))
c Var 'aux89' direct represents '0' with '-165'
c Var 'aux89' direct represents '1' with '165'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-165'
c Encoding variable: aux90 with domain: bool (representing constraint (1<=((field_00004_00003=2) + (field_00002_00003=2) + (field_00003_00003=2))))
c Var 'aux90' direct represents '0' with '-166'
c Var 'aux90' direct represents '1' with '166'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-166'
c Encoding variable: aux91 with domain: bool (representing constraint (((field_00004_00003=3) + (field_00002_00003=3) + (field_00003_00003=3))<=1))
c Var 'aux91' direct represents '0' with '-167'
c Var 'aux91' direct represents '1' with '167'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-167'
c Encoding variable: aux92 with domain: bool (representing constraint (1<=((field_00004_00003=3) + (field_00002_00003=3) + (field_00003_00003=3))))
c Var 'aux92' direct represents '0' with '-168'
c Var 'aux92' direct represents '1' with '168'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-168'
c Encoding variable: aux93 with domain: bool (representing constraint (((field_00002_00004=1) + (field_00001_00004=1))<=1))
c Var 'aux93' direct represents '0' with '-169'
c Var 'aux93' direct represents '1' with '169'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-169'
c Encoding variable: aux94 with domain: bool (representing constraint (1<=((field_00002_00004=1) + (field_00001_00004=1))))
c Var 'aux94' direct represents '0' with '-170'
c Var 'aux94' direct represents '1' with '170'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-170'
c Encoding variable: aux95 with domain: bool (representing constraint (((field_00002_00004=2) + (field_00001_00004=2))<=1))
c Var 'aux95' direct represents '0' with '-171'
c Var 'aux95' direct represents '1' with '171'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-171'
c Encoding variable: aux96 with domain: bool (representing constraint (1<=((field_00002_00004=2) + (field_00001_00004=2))))
c Var 'aux96' direct represents '0' with '-172'
c Var 'aux96' direct represents '1' with '172'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-172'
c Encoding variable: aux97 with domain: bool (representing constraint (((field_00004_00004=3) + (field_00002_00004=3) + (field_00001_00004=3))<=1))
c Var 'aux97' direct represents '0' with '-173'
c Var 'aux97' direct represents '1' with '173'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-173'
c Encoding variable: aux98 with domain: bool (representing constraint (1<=((field_00004_00004=3) + (field_00002_00004=3) + (field_00001_00004=3))))
c Var 'aux98' direct represents '0' with '-174'
c Var 'aux98' direct represents '1' with '174'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-174'
c Encoding variable: aux99 with domain: bool (representing constraint (((field_00002_00004=4) + (field_00003_00004=4) + (field_00001_00004=4))<=1))
c Var 'aux99' direct represents '0' with '-175'
c Var 'aux99' direct represents '1' with '175'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-175'
c Encoding variable: aux100 with domain: bool (representing constraint (1<=((field_00002_00004=4) + (field_00003_00004=4) + (field_00001_00004=4))))
c Var 'aux100' direct represents '0' with '-176'
c Var 'aux100' direct represents '1' with '176'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-176'
c (((SATLiteral(2) + SATLiteral(7) + SATLiteral(12))<=1)=tv=SATLiteral(119))
-119 -7 -12 0
-119 -2 -12 0
-119 -2 -7 0
119 7 12 0
119 2 12 0
119 2 7 0
c ((1<=(SATLiteral(2) + SATLiteral(7) + SATLiteral(12)))=tv=SATLiteral(120))
-120 2 7 12 0
120 -12 0
120 -7 0
120 -2 0
120 -2 -7 0
c (((SATLiteral(4) + SATLiteral(8) + SATLiteral(13))<=1)=tv=SATLiteral(121))
-121 -8 -13 0
-121 -4 -13 0
-121 -4 -8 0
121 8 13 0
121 4 13 0
121 4 8 0
c ((1<=(SATLiteral(4) + SATLiteral(8) + SATLiteral(13)))=tv=SATLiteral(122))
-122 4 8 13 0
122 -13 0
122 -8 0
122 -4 0
122 -4 -8 0
c (((SATLiteral(6) + SATLiteral(9) + SATLiteral(14))<=1)=tv=SATLiteral(123))
-123 -9 -14 0
-123 -6 -14 0
-123 -6 -9 0
123 9 14 0
123 6 14 0
123 6 9 0
c ((1<=(SATLiteral(6) + SATLiteral(9) + SATLiteral(14)))=tv=SATLiteral(124))
-124 6 9 14 0
124 -14 0
124 -9 0
124 -6 0
124 -6 -9 0
c (((aux37 + SATLiteral(10) + SATLiteral(11))<=1)=tv=SATLiteral(125))
-125 108 0
-125 -11 107 0
-125 -10 107 0
-125 -10 -11 0
125 11 -107 0
125 10 -107 0
125 10 11 -108 0
c ((1<=(aux37 + SATLiteral(10) + SATLiteral(11)))=tv=SATLiteral(126))
-126 10 11 -107 0
126 107 0
126 -11 0
126 -10 0
126 -10 -11 0
c (((SATLiteral(16) + SATLiteral(22) + SATLiteral(27))<=1)=tv=SATLiteral(127))
-127 -22 -27 0
-127 -16 -27 0
-127 -16 -22 0
127 22 27 0
127 16 27 0
127 16 22 0
c ((1<=(SATLiteral(16) + SATLiteral(22) + SATLiteral(27)))=tv=SATLiteral(128))
-128 16 22 27 0
128 -27 0
128 -22 0
128 -16 0
128 -16 -22 0
c (((SATLiteral(18) + SATLiteral(24) + SATLiteral(28))<=1)=tv=SATLiteral(129))
-129 -24 -28 0
-129 -18 -28 0
-129 -18 -24 0
129 24 28 0
129 18 28 0
129 18 24 0
c ((1<=(SATLiteral(18) + SATLiteral(24) + SATLiteral(28)))=tv=SATLiteral(130))
-130 18 24 28 0
130 -28 0
130 -24 0
130 -18 0
130 -18 -24 0
c (((SATLiteral(20) + SATLiteral(26) + SATLiteral(29))<=1)=tv=SATLiteral(131))
-131 -26 -29 0
-131 -20 -29 0
-131 -20 -26 0
131 26 29 0
131 20 29 0
131 20 26 0
c ((1<=(SATLiteral(20) + SATLiteral(26) + SATLiteral(29)))=tv=SATLiteral(132))
-132 20 26 29 0
132 -29 0
132 -26 0
132 -20 0
132 -20 -26 0
c (((SATLiteral(21) + SATLiteral(-25) + aux38)<=1)=tv=SATLiteral(133))
-133 111 0
-133 25 110 0
-133 -21 110 0
-133 -21 25 0
133 -25 -110 0
133 21 -110 0
133 21 -25 -111 0
c ((1<=(SATLiteral(21) + SATLiteral(-25) + aux38))=tv=SATLiteral(134))
-134 21 -25 -110 0
134 110 0
134 25 0
134 -21 0
134 -21 25 0
c (((SATLiteral(31) + SATLiteral(35) + SATLiteral(40))<=1)=tv=SATLiteral(135))
-135 -35 -40 0
-135 -31 -40 0
-135 -31 -35 0
135 35 40 0
135 31 40 0
135 31 35 0
c ((1<=(SATLiteral(31) + SATLiteral(35) + SATLiteral(40)))=tv=SATLiteral(136))
-136 31 35 40 0
136 -40 0
136 -35 0
136 -31 0
136 -31 -35 0
c (((SATLiteral(32) + SATLiteral(37) + SATLiteral(42))<=1)=tv=SATLiteral(137))
-137 -37 -42 0
-137 -32 -42 0
-137 -32 -37 0
137 37 42 0
137 32 42 0
137 32 37 0
c ((1<=(SATLiteral(32) + SATLiteral(37) + SATLiteral(42)))=tv=SATLiteral(138))
-138 32 37 42 0
138 -42 0
138 -37 0
138 -32 0
138 -32 -37 0
c (((SATLiteral(33) + SATLiteral(39) + SATLiteral(44))<=1)=tv=SATLiteral(139))
-139 -39 -44 0
-139 -33 -44 0
-139 -33 -39 0
139 39 44 0
139 33 44 0
139 33 39 0
c ((1<=(SATLiteral(33) + SATLiteral(39) + SATLiteral(44)))=tv=SATLiteral(140))
-140 33 39 44 0
140 -44 0
140 -39 0
140 -33 0
140 -33 -39 0
c (((SATLiteral(47) + SATLiteral(51))<=1)=tv=SATLiteral(141))
-141 -47 -51 0
141 51 0
141 47 0
c ((1<=(SATLiteral(47) + SATLiteral(51)))=tv=SATLiteral(142))
-142 47 51 0
142 -51 0
142 -47 0
c (((SATLiteral(48) + SATLiteral(53))<=1)=tv=SATLiteral(143))
-143 -48 -53 0
143 53 0
143 48 0
c ((1<=(SATLiteral(48) + SATLiteral(53)))=tv=SATLiteral(144))
-144 48 53 0
144 -53 0
144 -48 0
c (((SATLiteral(49) + SATLiteral(55) + SATLiteral(56))<=1)=tv=SATLiteral(145))
-145 -55 -56 0
-145 -49 -56 0
-145 -49 -55 0
145 55 56 0
145 49 56 0
145 49 55 0
c ((1<=(SATLiteral(49) + SATLiteral(55) + SATLiteral(56)))=tv=SATLiteral(146))
-146 49 55 56 0
146 -56 0
146 -55 0
146 -49 0
146 -49 -55 0
c (((SATLiteral(46) + SATLiteral(50) + SATLiteral(-54))<=1)=tv=SATLiteral(147))
-147 -50 54 0
-147 -46 54 0
-147 -46 -50 0
147 50 -54 0
147 46 -54 0
147 46 50 0
c ((1<=(SATLiteral(46) + SATLiteral(50) + SATLiteral(-54)))=tv=SATLiteral(148))
-148 46 50 -54 0
148 54 0
148 -50 0
148 -46 0
148 -46 -50 0
c (((SATLiteral(16) + SATLiteral(31) + SATLiteral(2))<=1)=tv=SATLiteral(149))
-149 -31 -2 0
-149 -16 -2 0
-149 -16 -31 0
149 31 2 0
149 16 2 0
149 16 31 0
c ((1<=(SATLiteral(16) + SATLiteral(31) + SATLiteral(2)))=tv=SATLiteral(150))
-150 16 31 2 0
150 -2 0
150 -31 0
150 -16 0
150 -16 -31 0
c (((SATLiteral(18) + SATLiteral(32) + SATLiteral(4))<=1)=tv=SATLiteral(151))
-151 -32 -4 0
-151 -18 -4 0
-151 -18 -32 0
151 32 4 0
151 18 4 0
151 18 32 0
c ((1<=(SATLiteral(18) + SATLiteral(32) + SATLiteral(4)))=tv=SATLiteral(152))
-152 18 32 4 0
152 -4 0
152 -32 0
152 -18 0
152 -18 -32 0
c (((SATLiteral(20) + SATLiteral(33) + SATLiteral(6))<=1)=tv=SATLiteral(153))
-153 -33 -6 0
-153 -20 -6 0
-153 -20 -33 0
153 33 6 0
153 20 6 0
153 20 33 0
c ((1<=(SATLiteral(20) + SATLiteral(33) + SATLiteral(6)))=tv=SATLiteral(154))
-154 20 33 6 0
154 -6 0
154 -33 0
154 -20 0
154 -20 -33 0
c (((SATLiteral(47) + SATLiteral(35) + SATLiteral(7))<=1)=tv=SATLiteral(155))
-155 -35 -7 0
-155 -47 -7 0
-155 -47 -35 0
155 35 7 0
155 47 7 0
155 47 35 0
c ((1<=(SATLiteral(47) + SATLiteral(35) + SATLiteral(7)))=tv=SATLiteral(156))
-156 47 35 7 0
156 -7 0
156 -35 0
156 -47 0
156 -47 -35 0
c (((SATLiteral(48) + SATLiteral(37) + SATLiteral(8))<=1)=tv=SATLiteral(157))
-157 -37 -8 0
-157 -48 -8 0
-157 -48 -37 0
157 37 8 0
157 48 8 0
157 48 37 0
c ((1<=(SATLiteral(48) + SATLiteral(37) + SATLiteral(8)))=tv=SATLiteral(158))
-158 48 37 8 0
158 -8 0
158 -37 0
158 -48 0
158 -48 -37 0
c (((SATLiteral(49) + SATLiteral(39) + SATLiteral(9))<=1)=tv=SATLiteral(159))
-159 -39 -9 0
-159 -49 -9 0
-159 -49 -39 0
159 39 9 0
159 49 9 0
159 49 39 0
c ((1<=(SATLiteral(49) + SATLiteral(39) + SATLiteral(9)))=tv=SATLiteral(160))
-160 49 39 9 0
160 -9 0
160 -39 0
160 -49 0
160 -49 -39 0
c (((SATLiteral(21) + aux41 + SATLiteral(-38))<=1)=tv=SATLiteral(161))
-161 116 0
-161 38 115 0
-161 -21 115 0
-161 -21 38 0
161 -38 -115 0
161 21 -115 0
161 21 -38 -116 0
c ((1<=(SATLiteral(21) + aux41 + SATLiteral(-38)))=tv=SATLiteral(162))
-162 21 -38 -115 0
162 115 0
162 38 0
162 -21 0
162 -21 38 0
c (((SATLiteral(51) + SATLiteral(22) + SATLiteral(40))<=1)=tv=SATLiteral(163))
-163 -22 -40 0
-163 -51 -40 0
-163 -51 -22 0
163 22 40 0
163 51 40 0
163 51 22 0
c ((1<=(SATLiteral(51) + SATLiteral(22) + SATLiteral(40)))=tv=SATLiteral(164))
-164 51 22 40 0
164 -40 0
164 -22 0
164 -51 0
164 -51 -22 0
c (((SATLiteral(53) + SATLiteral(24) + SATLiteral(42))<=1)=tv=SATLiteral(165))
-165 -24 -42 0
-165 -53 -42 0
-165 -53 -24 0
165 24 42 0
165 53 42 0
165 53 24 0
c ((1<=(SATLiteral(53) + SATLiteral(24) + SATLiteral(42)))=tv=SATLiteral(166))
-166 53 24 42 0
166 -42 0
166 -24 0
166 -53 0
166 -53 -24 0
c (((SATLiteral(55) + SATLiteral(26) + SATLiteral(44))<=1)=tv=SATLiteral(167))
-167 -26 -44 0
-167 -55 -44 0
-167 -55 -26 0
167 26 44 0
167 55 44 0
167 55 26 0
c ((1<=(SATLiteral(55) + SATLiteral(26) + SATLiteral(44)))=tv=SATLiteral(168))
-168 55 26 44 0
168 -44 0
168 -26 0
168 -55 0
168 -55 -26 0
c (((SATLiteral(27) + SATLiteral(12))<=1)=tv=SATLiteral(169))
-169 -27 -12 0
169 12 0
169 27 0
c ((1<=(SATLiteral(27) + SATLiteral(12)))=tv=SATLiteral(170))
-170 27 12 0
170 -12 0
170 -27 0
c (((SATLiteral(28) + SATLiteral(13))<=1)=tv=SATLiteral(171))
-171 -28 -13 0
171 13 0
171 28 0
c ((1<=(SATLiteral(28) + SATLiteral(13)))=tv=SATLiteral(172))
-172 28 13 0
172 -13 0
172 -28 0
c (((SATLiteral(56) + SATLiteral(29) + SATLiteral(14))<=1)=tv=SATLiteral(173))
-173 -29 -14 0
-173 -56 -14 0
-173 -56 -29 0
173 29 14 0
173 56 14 0
173 56 29 0
c ((1<=(SATLiteral(56) + SATLiteral(29) + SATLiteral(14)))=tv=SATLiteral(174))
-174 56 29 14 0
174 -14 0
174 -29 0
174 -56 0
174 -56 -29 0
c (((SATLiteral(30) + SATLiteral(45) + SATLiteral(15))<=1)=tv=SATLiteral(175))
-175 -45 -15 0
-175 -30 -15 0
-175 -30 -45 0
175 45 15 0
175 30 15 0
175 30 45 0
c ((1<=(SATLiteral(30) + SATLiteral(45) + SATLiteral(15)))=tv=SATLiteral(176))
-176 30 45 15 0
176 -15 0
176 -45 0
176 -30 0
176 -30 -45 0
c ((field_00002_00001<field_00001_00001)=tv=SATLiteral(70))
-2 -70 0
16 -3 -70 0
17 -5 -70 0
19 -70 0
2 -16 70 0
3 -17 70 0
5 -19 70 0
c ((field_00002_00003<field_00002_00002)=tv=SATLiteral(71))
25 -71 0
-22 71 0
-23 71 0
-25 71 0
c ((field_00003_00002<field_00003_00003)=tv=SATLiteral(72))
-40 -72 0
35 -41 -72 0
36 -43 -72 0
38 -72 0
40 -35 72 0
41 -36 72 0
43 -38 72 0
c ((field_00003_00003<field_00003_00004)=tv=SATLiteral(73))
43 -73 0
-40 73 0
-41 73 0
-43 73 0
c ((field_00004_00003<field_00004_00004)=tv=SATLiteral(74))
52 -74 0
54 -74 0
-51 74 0
-52 74 0
c ((SATLiteral(119) /\ SATLiteral(120))=tv=SATLiteral(75))
75 -119 -120 0
119 -75 0
120 -75 0
c ((SATLiteral(121) /\ SATLiteral(122))=tv=SATLiteral(76))
76 -121 -122 0
121 -76 0
122 -76 0
c ((SATLiteral(123) /\ SATLiteral(124))=tv=SATLiteral(77))
77 -123 -124 0
123 -77 0
124 -77 0
c ((SATLiteral(125) /\ SATLiteral(126))=tv=SATLiteral(78))
78 -125 -126 0
125 -78 0
126 -78 0
c ((SATLiteral(127) /\ SATLiteral(128))=tv=SATLiteral(79))
79 -127 -128 0
127 -79 0
128 -79 0
c ((SATLiteral(129) /\ SATLiteral(130))=tv=SATLiteral(80))
80 -129 -130 0
129 -80 0
130 -80 0
c ((SATLiteral(131) /\ SATLiteral(132))=tv=SATLiteral(81))
81 -131 -132 0
131 -81 0
132 -81 0
c ((SATLiteral(133) /\ SATLiteral(134))=tv=SATLiteral(82))
82 -133 -134 0
133 -82 0
134 -82 0
c ((SATLiteral(135) /\ SATLiteral(136))=tv=SATLiteral(83))
83 -135 -136 0
135 -83 0
136 -83 0
c ((SATLiteral(137) /\ SATLiteral(138))=tv=SATLiteral(84))
84 -137 -138 0
137 -84 0
138 -84 0
c ((SATLiteral(139) /\ SATLiteral(140))=tv=SATLiteral(85))
85 -139 -140 0
139 -85 0
140 -85 0
c (((aux39 + SATLiteral(-38) + SATLiteral(-43))<=1)=tv=SATLiteral(86))
-86 43 0
-86 38 0
-86 -113 0
-86 -113 38 0
86 113 -38 -43 0
c ((SATLiteral(141) /\ SATLiteral(142))=tv=SATLiteral(87))
87 -141 -142 0
141 -87 0
142 -87 0
c ((SATLiteral(143) /\ SATLiteral(144))=tv=SATLiteral(88))
88 -143 -144 0
143 -88 0
144 -88 0
c ((SATLiteral(145) /\ SATLiteral(146))=tv=SATLiteral(89))
89 -145 -146 0
145 -89 0
146 -89 0
c ((SATLiteral(147) /\ SATLiteral(148))=tv=SATLiteral(90))
90 -147 -148 0
147 -90 0
148 -90 0
c ((SATLiteral(149) /\ SATLiteral(150))=tv=SATLiteral(91))
91 -149 -150 0
149 -91 0
150 -91 0
c ((SATLiteral(151) /\ SATLiteral(152))=tv=SATLiteral(92))
92 -151 -152 0
151 -92 0
152 -92 0
c ((SATLiteral(153) /\ SATLiteral(154))=tv=SATLiteral(93))
93 -153 -154 0
153 -93 0
154 -93 0
c (((SATLiteral(-19) + aux40 + SATLiteral(34))<=1)=tv=SATLiteral(94))
-94 -34 0
-94 -114 0
-94 19 0
-94 19 -114 0
94 -19 114 34 0
c ((SATLiteral(155) /\ SATLiteral(156))=tv=SATLiteral(95))
95 -155 -156 0
155 -95 0
156 -95 0
c ((SATLiteral(157) /\ SATLiteral(158))=tv=SATLiteral(96))
96 -157 -158 0
157 -96 0
158 -96 0
c ((SATLiteral(159) /\ SATLiteral(160))=tv=SATLiteral(97))
97 -159 -160 0
159 -97 0
160 -97 0
c ((SATLiteral(161) /\ SATLiteral(162))=tv=SATLiteral(98))
98 -161 -162 0
161 -98 0
162 -98 0
c ((SATLiteral(163) /\ SATLiteral(164))=tv=SATLiteral(99))
99 -163 -164 0
163 -99 0
164 -99 0
c ((SATLiteral(165) /\ SATLiteral(166))=tv=SATLiteral(100))
100 -165 -166 0
165 -100 0
166 -100 0
c ((SATLiteral(167) /\ SATLiteral(168))=tv=SATLiteral(101))
101 -167 -168 0
167 -101 0
168 -101 0
c (((SATLiteral(-25) + aux42 + SATLiteral(-43))<=1)=tv=SATLiteral(102))
-102 43 0
-102 -118 0
-102 25 0
-102 25 -118 0
102 -25 118 -43 0
c ((SATLiteral(169) /\ SATLiteral(170))=tv=SATLiteral(103))
103 -169 -170 0
169 -103 0
170 -103 0
c ((SATLiteral(171) /\ SATLiteral(172))=tv=SATLiteral(104))
104 -171 -172 0
171 -104 0
172 -104 0
c ((SATLiteral(173) /\ SATLiteral(174))=tv=SATLiteral(105))
105 -173 -174 0
173 -105 0
174 -105 0
c ((SATLiteral(175) /\ SATLiteral(176))=tv=SATLiteral(106))
106 -175 -176 0
175 -106 0
176 -106 0
c (SATLiteral(65) -> SATLiteral(70))
-65 70 0
c (SATLiteral(66) -> SATLiteral(71))
-66 71 0
c (SATLiteral(67) -> SATLiteral(72))
-67 72 0
c (SATLiteral(68) -> SATLiteral(73))
-68 73 0
c (SATLiteral(69) -> SATLiteral(74))
-69 74 0
c SATLiteral(11)
11 0
c SATLiteral(21)
21 0
c SATLiteral(45)
45 0
c SATLiteral(46)
46 0
c SATLiteral(56)
56 0
c (SATLiteral(57) -> SATLiteral(75))
-57 75 0
c (SATLiteral(57) -> SATLiteral(76))
-57 76 0
c (SATLiteral(57) -> SATLiteral(77))
-57 77 0
c (SATLiteral(57) -> SATLiteral(78))
-57 78 0
c (SATLiteral(58) -> SATLiteral(79))
-58 79 0
c (SATLiteral(58) -> SATLiteral(80))
-58 80 0
c (SATLiteral(58) -> SATLiteral(81))
-58 81 0
c (SATLiteral(58) -> SATLiteral(82))
-58 82 0
c (SATLiteral(59) -> SATLiteral(83))
-59 83 0
c (SATLiteral(59) -> SATLiteral(84))
-59 84 0
c (SATLiteral(59) -> SATLiteral(85))
-59 85 0
c (SATLiteral(59) -> SATLiteral(86))
-59 86 0
c (SATLiteral(60) -> SATLiteral(87))
-60 87 0
c (SATLiteral(60) -> SATLiteral(88))
-60 88 0
c (SATLiteral(60) -> SATLiteral(89))
-60 89 0
c (SATLiteral(60) -> SATLiteral(90))
-60 90 0
c (SATLiteral(61) -> SATLiteral(91))
-61 91 0
c (SATLiteral(61) -> SATLiteral(92))
-61 92 0
c (SATLiteral(61) -> SATLiteral(93))
-61 93 0
c (SATLiteral(61) -> SATLiteral(94))
-61 94 0
c (SATLiteral(62) -> SATLiteral(95))
-62 95 0
c (SATLiteral(62) -> SATLiteral(96))
-62 96 0
c (SATLiteral(62) -> SATLiteral(97))
-62 97 0
c (SATLiteral(62) -> SATLiteral(98))
-62 98 0
c (SATLiteral(63) -> SATLiteral(99))
-63 99 0
c (SATLiteral(63) -> SATLiteral(100))
-63 100 0
c (SATLiteral(63) -> SATLiteral(101))
-63 101 0
c (SATLiteral(63) -> SATLiteral(102))
-63 102 0
c (SATLiteral(64) -> SATLiteral(103))
-64 103 0
c (SATLiteral(64) -> SATLiteral(104))
-64 104 0
c (SATLiteral(64) -> SATLiteral(105))
-64 105 0
c (SATLiteral(64) -> SATLiteral(106))
-64 106 0
c (( - aux37 + SATLiteral(-5) + SATLiteral(15))<=0)
-15 -107 0
5 -107 0
5 -15 -108 0
c (0<=( - aux37 + SATLiteral(-5) + SATLiteral(15)))
15 108 0
-5 108 0
-5 15 107 0
c ((SATLiteral(-19) + SATLiteral(30) - aux38)<=0)
-30 -110 0
19 -110 0
19 -30 -111 0
c (0<=(SATLiteral(-19) + SATLiteral(30) - aux38))
30 111 0
-19 111 0
-19 30 110 0
c (( - aux39 + SATLiteral(34) + SATLiteral(45))<=0)
113 -34 -45 0
c (0<=( - aux39 + SATLiteral(34) + SATLiteral(45)))
34 45 0
-113 45 0
-113 34 0
c ((SATLiteral(46) - aux40 + SATLiteral(-5))<=0)
-46 114 5 0
c (0<=(SATLiteral(46) - aux40 + SATLiteral(-5)))
-114 -5 0
46 -5 0
46 -114 0
c ((SATLiteral(50) - aux41 + SATLiteral(10))<=0)
-10 -115 0
-50 -115 0
-50 -10 -116 0
c (0<=(SATLiteral(50) - aux41 + SATLiteral(10)))
10 116 0
50 116 0
50 10 115 0
c ((SATLiteral(-54) - aux42 + SATLiteral(11))<=0)
54 118 -11 0
c (0<=(SATLiteral(-54) - aux42 + SATLiteral(11)))
-118 11 0
-54 11 0
-54 -118 0
