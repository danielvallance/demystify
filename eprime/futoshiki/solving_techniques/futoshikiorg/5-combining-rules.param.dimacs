p cnf 236 849                                                                                       

1 0
c Encoding variable: field_00001_00001 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00001_00001' direct represents '1' with '2'
c Var 'field_00001_00001' direct represents '2' with '3'
c Var 'field_00001_00001' direct represents '3' with '4'
c Var 'field_00001_00001' direct represents '4' with '5'
2 3 4 5 0
-2 -3 0
-2 -4 0
-2 -5 0
-3 -4 0
-3 -5 0
-4 -5 0
c Encoding variable: field_00001_00002 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00001_00002' direct represents '1' with '6'
c Var 'field_00001_00002' direct represents '2' with '7'
c Var 'field_00001_00002' direct represents '3' with '8'
c Var 'field_00001_00002' direct represents '4' with '9'
6 7 8 9 0
-6 -7 0
-6 -8 0
-6 -9 0
-7 -8 0
-7 -9 0
-8 -9 0
c Encoding variable: field_00001_00003 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00001_00003' direct represents '1' with '10'
c Var 'field_00001_00003' direct represents '2' with '11'
c Var 'field_00001_00003' direct represents '3' with '12'
c Var 'field_00001_00003' direct represents '4' with '13'
10 11 12 13 0
-10 -11 0
-10 -12 0
-10 -13 0
-11 -12 0
-11 -13 0
-12 -13 0
c Encoding variable: field_00001_00004 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00001_00004' direct represents '1' with '14'
c Var 'field_00001_00004' direct represents '2' with '15'
c Var 'field_00001_00004' direct represents '3' with '16'
c Var 'field_00001_00004' direct represents '4' with '17'
14 15 16 17 0
-14 -15 0
-14 -16 0
-14 -17 0
-15 -16 0
-15 -17 0
-16 -17 0
c Encoding variable: field_00002_00001 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00002_00001' direct represents '1' with '18'
c Var 'field_00002_00001' direct represents '2' with '19'
c Var 'field_00002_00001' direct represents '3' with '20'
c Var 'field_00002_00001' direct represents '4' with '21'
18 19 20 21 0
-18 -19 0
-18 -20 0
-18 -21 0
-19 -20 0
-19 -21 0
-20 -21 0
c Encoding variable: field_00002_00002 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00002_00002' order represents '1' with '22'
c Var 'field_00002_00002' direct represents '1' with '22'
c Var 'field_00002_00002' order represents '2' with '23'
-22 23 0
c Var 'field_00002_00002' direct represents '2' with '24'
22 -23 24 0
-24 23 0
-24 -22 0
c Var 'field_00002_00002' order represents '3' with '25'
-23 25 0
c Var 'field_00002_00002' direct represents '3' with '26'
23 -25 26 0
-26 25 0
-26 -23 0
c Var 'field_00002_00002' direct represents '4' with '-25'
22 24 26 -25 0
c Encoding variable: field_00002_00003 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00002_00003' order represents '1' with '27'
c Var 'field_00002_00003' direct represents '1' with '27'
c Var 'field_00002_00003' order represents '2' with '28'
-27 28 0
c Var 'field_00002_00003' direct represents '2' with '29'
27 -28 29 0
-29 28 0
-29 -27 0
c Var 'field_00002_00003' order represents '3' with '30'
-28 30 0
c Var 'field_00002_00003' direct represents '3' with '31'
28 -30 31 0
-31 30 0
-31 -28 0
c Var 'field_00002_00003' direct represents '4' with '-30'
27 29 31 -30 0
c Encoding variable: field_00002_00004 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00002_00004' order represents '1' with '32'
c Var 'field_00002_00004' direct represents '1' with '32'
c Var 'field_00002_00004' order represents '2' with '33'
-32 33 0
c Var 'field_00002_00004' direct represents '2' with '34'
32 -33 34 0
-34 33 0
-34 -32 0
c Var 'field_00002_00004' order represents '3' with '35'
-33 35 0
c Var 'field_00002_00004' direct represents '3' with '36'
33 -35 36 0
-36 35 0
-36 -33 0
c Var 'field_00002_00004' direct represents '4' with '-35'
32 34 36 -35 0
c Encoding variable: field_00003_00001 with domain: int(1) (representing constraint )
c Var 'field_00003_00001' direct represents '1' with '37'
37 0
c Encoding variable: field_00003_00002 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00003_00002' order represents '1' with '38'
c Var 'field_00003_00002' direct represents '1' with '38'
c Var 'field_00003_00002' order represents '2' with '39'
-38 39 0
c Var 'field_00003_00002' direct represents '2' with '40'
38 -39 40 0
-40 39 0
-40 -38 0
c Var 'field_00003_00002' order represents '3' with '41'
-39 41 0
c Var 'field_00003_00002' direct represents '3' with '42'
39 -41 42 0
-42 41 0
-42 -39 0
c Var 'field_00003_00002' direct represents '4' with '-41'
38 40 42 -41 0
c Encoding variable: field_00003_00003 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00003_00003' order represents '1' with '43'
c Var 'field_00003_00003' direct represents '1' with '43'
c Var 'field_00003_00003' order represents '2' with '44'
-43 44 0
c Var 'field_00003_00003' direct represents '2' with '45'
43 -44 45 0
-45 44 0
-45 -43 0
c Var 'field_00003_00003' order represents '3' with '46'
-44 46 0
c Var 'field_00003_00003' direct represents '3' with '47'
44 -46 47 0
-47 46 0
-47 -44 0
c Var 'field_00003_00003' direct represents '4' with '-46'
43 45 47 -46 0
c Encoding variable: field_00003_00004 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00003_00004' order represents '1' with '48'
c Var 'field_00003_00004' direct represents '1' with '48'
c Var 'field_00003_00004' order represents '2' with '49'
-48 49 0
c Var 'field_00003_00004' direct represents '2' with '50'
48 -49 50 0
-50 49 0
-50 -48 0
c Var 'field_00003_00004' order represents '3' with '51'
-49 51 0
c Var 'field_00003_00004' direct represents '3' with '52'
49 -51 52 0
-52 51 0
-52 -49 0
c Var 'field_00003_00004' direct represents '4' with '-51'
48 50 52 -51 0
c Encoding variable: field_00004_00001 with domain: int(3) (representing constraint )
c Var 'field_00004_00001' direct represents '3' with '53'
53 0
c Encoding variable: field_00004_00002 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00004_00002' direct represents '1' with '54'
c Var 'field_00004_00002' direct represents '2' with '55'
c Var 'field_00004_00002' direct represents '3' with '56'
c Var 'field_00004_00002' direct represents '4' with '57'
54 55 56 57 0
-54 -55 0
-54 -56 0
-54 -57 0
-55 -56 0
-55 -57 0
-56 -57 0
c Encoding variable: field_00004_00003 with domain: int(1..4) (representing constraint )
c Direct encoding.
c Var 'field_00004_00003' direct represents '1' with '58'
c Var 'field_00004_00003' direct represents '2' with '59'
c Var 'field_00004_00003' direct represents '3' with '60'
c Var 'field_00004_00003' direct represents '4' with '61'
58 59 60 61 0
-58 -59 0
-58 -60 0
-58 -61 0
-59 -60 0
-59 -61 0
-60 -61 0
c Encoding variable: field_00004_00004 with domain: int(1..4) (representing constraint )
c Both direct and order encoding.
c Var 'field_00004_00004' order represents '1' with '62'
c Var 'field_00004_00004' direct represents '1' with '62'
c Var 'field_00004_00004' order represents '2' with '63'
-62 63 0
c Var 'field_00004_00004' direct represents '2' with '64'
62 -63 64 0
-64 63 0
-64 -62 0
c Var 'field_00004_00004' order represents '3' with '65'
-63 65 0
c Var 'field_00004_00004' direct represents '3' with '66'
63 -65 66 0
-66 65 0
-66 -63 0
c Var 'field_00004_00004' direct represents '4' with '-65'
62 64 66 -65 0
c Encoding variable: row_alldiff_00001 with domain: bool (representing constraint )
c Var 'row_alldiff_00001' direct represents '0' with '-67'
c Var 'row_alldiff_00001' direct represents '1' with '67'
c Var 'row_alldiff_00001' order represents '1' with '1'
c Var 'row_alldiff_00001' order represents '0' with '-67'
c Encoding variable: row_alldiff_00002 with domain: bool (representing constraint )
c Var 'row_alldiff_00002' direct represents '0' with '-68'
c Var 'row_alldiff_00002' direct represents '1' with '68'
c Var 'row_alldiff_00002' order represents '1' with '1'
c Var 'row_alldiff_00002' order represents '0' with '-68'
c Encoding variable: row_alldiff_00003 with domain: bool (representing constraint )
c Var 'row_alldiff_00003' direct represents '0' with '-69'
c Var 'row_alldiff_00003' direct represents '1' with '69'
c Var 'row_alldiff_00003' order represents '1' with '1'
c Var 'row_alldiff_00003' order represents '0' with '-69'
c Encoding variable: row_alldiff_00004 with domain: bool (representing constraint )
c Var 'row_alldiff_00004' direct represents '0' with '-70'
c Var 'row_alldiff_00004' direct represents '1' with '70'
c Var 'row_alldiff_00004' order represents '1' with '1'
c Var 'row_alldiff_00004' order represents '0' with '-70'
c Encoding variable: col_alldiff_00001 with domain: bool (representing constraint )
c Var 'col_alldiff_00001' direct represents '0' with '-71'
c Var 'col_alldiff_00001' direct represents '1' with '71'
c Var 'col_alldiff_00001' order represents '1' with '1'
c Var 'col_alldiff_00001' order represents '0' with '-71'
c Encoding variable: col_alldiff_00002 with domain: bool (representing constraint )
c Var 'col_alldiff_00002' direct represents '0' with '-72'
c Var 'col_alldiff_00002' direct represents '1' with '72'
c Var 'col_alldiff_00002' order represents '1' with '1'
c Var 'col_alldiff_00002' order represents '0' with '-72'
c Encoding variable: col_alldiff_00003 with domain: bool (representing constraint )
c Var 'col_alldiff_00003' direct represents '0' with '-73'
c Var 'col_alldiff_00003' direct represents '1' with '73'
c Var 'col_alldiff_00003' order represents '1' with '1'
c Var 'col_alldiff_00003' order represents '0' with '-73'
c Encoding variable: col_alldiff_00004 with domain: bool (representing constraint )
c Var 'col_alldiff_00004' direct represents '0' with '-74'
c Var 'col_alldiff_00004' direct represents '1' with '74'
c Var 'col_alldiff_00004' order represents '1' with '1'
c Var 'col_alldiff_00004' order represents '0' with '-74'
c Encoding variable: less_than_00000 with domain: bool (representing constraint )
c Var 'less_than_00000' direct represents '0' with '-75'
c Var 'less_than_00000' direct represents '1' with '75'
c Var 'less_than_00000' order represents '1' with '1'
c Var 'less_than_00000' order represents '0' with '-75'
c Encoding variable: less_than_00001 with domain: bool (representing constraint )
c Var 'less_than_00001' direct represents '0' with '-76'
c Var 'less_than_00001' direct represents '1' with '76'
c Var 'less_than_00001' order represents '1' with '1'
c Var 'less_than_00001' order represents '0' with '-76'
c Encoding variable: less_than_00002 with domain: bool (representing constraint )
c Var 'less_than_00002' direct represents '0' with '-77'
c Var 'less_than_00002' direct represents '1' with '77'
c Var 'less_than_00002' order represents '1' with '1'
c Var 'less_than_00002' order represents '0' with '-77'
c Encoding variable: less_than_00003 with domain: bool (representing constraint )
c Var 'less_than_00003' direct represents '0' with '-78'
c Var 'less_than_00003' direct represents '1' with '78'
c Var 'less_than_00003' order represents '1' with '1'
c Var 'less_than_00003' order represents '0' with '-78'
c Encoding variable: aux0 with domain: bool (representing constraint (field_00002_00002<field_00002_00003))
c Var 'aux0' direct represents '0' with '-79'
c Var 'aux0' direct represents '1' with '79'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-79'
c Encoding variable: aux1 with domain: bool (representing constraint (field_00003_00002<field_00003_00003))
c Var 'aux1' direct represents '0' with '-80'
c Var 'aux1' direct represents '1' with '80'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-80'
c Encoding variable: aux2 with domain: bool (representing constraint (field_00003_00004<field_00002_00004))
c Var 'aux2' direct represents '0' with '-81'
c Var 'aux2' direct represents '1' with '81'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-81'
c Encoding variable: aux3 with domain: bool (representing constraint (field_00003_00004<field_00004_00004))
c Var 'aux3' direct represents '0' with '-82'
c Var 'aux3' direct represents '1' with '82'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-82'
c Encoding variable: aux4 with domain: bool (representing constraint (((field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00003=1) + (field_00001_00004=1))=tv=1))
c Var 'aux4' direct represents '0' with '-83'
c Var 'aux4' direct represents '1' with '83'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-83'
c Encoding variable: aux5 with domain: bool (representing constraint (((field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00003=2) + (field_00001_00004=2))=tv=1))
c Var 'aux5' direct represents '0' with '-84'
c Var 'aux5' direct represents '1' with '84'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-84'
c Encoding variable: aux6 with domain: bool (representing constraint (((field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00003=3) + (field_00001_00004=3))=tv=1))
c Var 'aux6' direct represents '0' with '-85'
c Var 'aux6' direct represents '1' with '85'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-85'
c Encoding variable: aux7 with domain: bool (representing constraint (((field_00001_00001=4) + (field_00001_00002=4) + (field_00001_00003=4) + (field_00001_00004=4))=tv=1))
c Var 'aux7' direct represents '0' with '-86'
c Var 'aux7' direct represents '1' with '86'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-86'
c Encoding variable: aux8 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00002_00002=1) + (field_00002_00003=1) + (field_00002_00004=1))=tv=1))
c Var 'aux8' direct represents '0' with '-87'
c Var 'aux8' direct represents '1' with '87'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-87'
c Encoding variable: aux9 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00002_00002=2) + (field_00002_00003=2) + (field_00002_00004=2))=tv=1))
c Var 'aux9' direct represents '0' with '-88'
c Var 'aux9' direct represents '1' with '88'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-88'
c Encoding variable: aux10 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00002_00002=3) + (field_00002_00003=3) + (field_00002_00004=3))=tv=1))
c Var 'aux10' direct represents '0' with '-89'
c Var 'aux10' direct represents '1' with '89'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-89'
c Encoding variable: aux11 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00002_00002=4) + (field_00002_00003=4) + (field_00002_00004=4))=tv=1))
c Var 'aux11' direct represents '0' with '-90'
c Var 'aux11' direct represents '1' with '90'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-90'
c Encoding variable: aux12 with domain: bool (representing constraint (((field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1) + (field_00003_00004=1))=tv=1))
c Var 'aux12' direct represents '0' with '-91'
c Var 'aux12' direct represents '1' with '91'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-91'
c Encoding variable: aux13 with domain: bool (representing constraint (((field_00003_00002=2) + (field_00003_00003=2) + (field_00003_00004=2))=tv=1))
c Var 'aux13' direct represents '0' with '-92'
c Var 'aux13' direct represents '1' with '92'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-92'
c Encoding variable: aux14 with domain: bool (representing constraint (((field_00003_00002=3) + (field_00003_00003=3) + (field_00003_00004=3))=tv=1))
c Var 'aux14' direct represents '0' with '-93'
c Var 'aux14' direct represents '1' with '93'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-93'
c Encoding variable: aux15 with domain: bool (representing constraint (((field_00003_00002=4) + (field_00003_00003=4) + (field_00003_00004=4))=tv=1))
c Var 'aux15' direct represents '0' with '-94'
c Var 'aux15' direct represents '1' with '94'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-94'
c Encoding variable: aux16 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1) + (field_00004_00004=1))=tv=1))
c Var 'aux16' direct represents '0' with '-95'
c Var 'aux16' direct represents '1' with '95'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-95'
c Encoding variable: aux17 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00004_00003=2) + (field_00004_00004=2))=tv=1))
c Var 'aux17' direct represents '0' with '-96'
c Var 'aux17' direct represents '1' with '96'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-96'
c Encoding variable: aux18 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00004_00002=3) + (field_00004_00003=3) + (field_00004_00004=3))=tv=1))
c Var 'aux18' direct represents '0' with '-97'
c Var 'aux18' direct represents '1' with '97'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-97'
c Encoding variable: aux19 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00004_00003=4) + (field_00004_00004=4))=tv=1))
c Var 'aux19' direct represents '0' with '-98'
c Var 'aux19' direct represents '1' with '98'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-98'
c Encoding variable: aux20 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00003_00001=1) + (field_00001_00001=1))=tv=1))
c Var 'aux20' direct represents '0' with '-99'
c Var 'aux20' direct represents '1' with '99'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-99'
c Encoding variable: aux21 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00001_00001=2))=tv=1))
c Var 'aux21' direct represents '0' with '-100'
c Var 'aux21' direct represents '1' with '100'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-100'
c Encoding variable: aux22 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00002_00001=3) + (field_00001_00001=3))=tv=1))
c Var 'aux22' direct represents '0' with '-101'
c Var 'aux22' direct represents '1' with '101'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-101'
c Encoding variable: aux23 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00001_00001=4))=tv=1))
c Var 'aux23' direct represents '0' with '-102'
c Var 'aux23' direct represents '1' with '102'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-102'
c Encoding variable: aux24 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00002_00002=1) + (field_00003_00002=1) + (field_00001_00002=1))=tv=1))
c Var 'aux24' direct represents '0' with '-103'
c Var 'aux24' direct represents '1' with '103'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-103'
c Encoding variable: aux25 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00002_00002=2) + (field_00003_00002=2) + (field_00001_00002=2))=tv=1))
c Var 'aux25' direct represents '0' with '-104'
c Var 'aux25' direct represents '1' with '104'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-104'
c Encoding variable: aux26 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00002_00002=3) + (field_00003_00002=3) + (field_00001_00002=3))=tv=1))
c Var 'aux26' direct represents '0' with '-105'
c Var 'aux26' direct represents '1' with '105'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-105'
c Encoding variable: aux27 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00002_00002=4) + (field_00003_00002=4) + (field_00001_00002=4))=tv=1))
c Var 'aux27' direct represents '0' with '-106'
c Var 'aux27' direct represents '1' with '106'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-106'
c Encoding variable: aux28 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00002_00003=1) + (field_00003_00003=1) + (field_00001_00003=1))=tv=1))
c Var 'aux28' direct represents '0' with '-107'
c Var 'aux28' direct represents '1' with '107'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-107'
c Encoding variable: aux29 with domain: bool (representing constraint (((field_00004_00003=2) + (field_00002_00003=2) + (field_00003_00003=2) + (field_00001_00003=2))=tv=1))
c Var 'aux29' direct represents '0' with '-108'
c Var 'aux29' direct represents '1' with '108'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-108'
c Encoding variable: aux30 with domain: bool (representing constraint (((field_00004_00003=3) + (field_00002_00003=3) + (field_00003_00003=3) + (field_00001_00003=3))=tv=1))
c Var 'aux30' direct represents '0' with '-109'
c Var 'aux30' direct represents '1' with '109'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-109'
c Encoding variable: aux31 with domain: bool (representing constraint (((field_00004_00003=4) + (field_00002_00003=4) + (field_00003_00003=4) + (field_00001_00003=4))=tv=1))
c Var 'aux31' direct represents '0' with '-110'
c Var 'aux31' direct represents '1' with '110'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-110'
c Encoding variable: aux32 with domain: bool (representing constraint (((field_00004_00004=1) + (field_00002_00004=1) + (field_00003_00004=1) + (field_00001_00004=1))=tv=1))
c Var 'aux32' direct represents '0' with '-111'
c Var 'aux32' direct represents '1' with '111'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-111'
c Encoding variable: aux33 with domain: bool (representing constraint (((field_00004_00004=2) + (field_00002_00004=2) + (field_00003_00004=2) + (field_00001_00004=2))=tv=1))
c Var 'aux33' direct represents '0' with '-112'
c Var 'aux33' direct represents '1' with '112'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-112'
c Encoding variable: aux34 with domain: bool (representing constraint (((field_00004_00004=3) + (field_00002_00004=3) + (field_00003_00004=3) + (field_00001_00004=3))=tv=1))
c Var 'aux34' direct represents '0' with '-113'
c Var 'aux34' direct represents '1' with '113'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-113'
c Encoding variable: aux35 with domain: bool (representing constraint (((field_00004_00004=4) + (field_00002_00004=4) + (field_00003_00004=4) + (field_00001_00004=4))=tv=1))
c Var 'aux35' direct represents '0' with '-114'
c Var 'aux35' direct represents '1' with '114'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-114'
c Encoding variable: aux36 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00001_00004=1)))
c Both direct and order encoding.
c Var 'aux36' order represents '0' with '115'
c Var 'aux36' direct represents '0' with '115'
c Var 'aux36' order represents '1' with '116'
-115 116 0
c Var 'aux36' direct represents '1' with '117'
115 -116 117 0
-117 116 0
-117 -115 0
c Var 'aux36' direct represents '2' with '-116'
115 117 -116 0
c Encoding variable: aux37 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00001_00004=2)))
c Both direct and order encoding.
c Var 'aux37' order represents '0' with '118'
c Var 'aux37' direct represents '0' with '118'
c Var 'aux37' order represents '1' with '119'
-118 119 0
c Var 'aux37' direct represents '1' with '120'
118 -119 120 0
-120 119 0
-120 -118 0
c Var 'aux37' direct represents '2' with '-119'
118 120 -119 0
c Encoding variable: aux38 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00001_00004=3)))
c Both direct and order encoding.
c Var 'aux38' order represents '0' with '121'
c Var 'aux38' direct represents '0' with '121'
c Var 'aux38' order represents '1' with '122'
-121 122 0
c Var 'aux38' direct represents '1' with '123'
121 -122 123 0
-123 122 0
-123 -121 0
c Var 'aux38' direct represents '2' with '-122'
121 123 -122 0
c Encoding variable: aux39 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00001_00004=4)))
c Both direct and order encoding.
c Var 'aux39' order represents '0' with '124'
c Var 'aux39' direct represents '0' with '124'
c Var 'aux39' order represents '1' with '125'
-124 125 0
c Var 'aux39' direct represents '1' with '126'
124 -125 126 0
-126 125 0
-126 -124 0
c Var 'aux39' direct represents '2' with '-125'
124 126 -125 0
c Encoding variable: aux40 with domain: int(0..2) (representing constraint ((field_00002_00001=1) + (field_00002_00004=1)))
c Both direct and order encoding.
c Var 'aux40' order represents '0' with '127'
c Var 'aux40' direct represents '0' with '127'
c Var 'aux40' order represents '1' with '128'
-127 128 0
c Var 'aux40' direct represents '1' with '129'
127 -128 129 0
-129 128 0
-129 -127 0
c Var 'aux40' direct represents '2' with '-128'
127 129 -128 0
c Encoding variable: aux41 with domain: int(0..2) (representing constraint ((field_00002_00001=2) + (field_00002_00004=2)))
c Both direct and order encoding.
c Var 'aux41' order represents '0' with '130'
c Var 'aux41' direct represents '0' with '130'
c Var 'aux41' order represents '1' with '131'
-130 131 0
c Var 'aux41' direct represents '1' with '132'
130 -131 132 0
-132 131 0
-132 -130 0
c Var 'aux41' direct represents '2' with '-131'
130 132 -131 0
c Encoding variable: aux42 with domain: int(0..2) (representing constraint ((field_00002_00001=3) + (field_00002_00004=3)))
c Both direct and order encoding.
c Var 'aux42' order represents '0' with '133'
c Var 'aux42' direct represents '0' with '133'
c Var 'aux42' order represents '1' with '134'
-133 134 0
c Var 'aux42' direct represents '1' with '135'
133 -134 135 0
-135 134 0
-135 -133 0
c Var 'aux42' direct represents '2' with '-134'
133 135 -134 0
c Encoding variable: aux43 with domain: int(0..2) (representing constraint ((field_00002_00001=4) + (field_00002_00004=4)))
c Both direct and order encoding.
c Var 'aux43' order represents '0' with '136'
c Var 'aux43' direct represents '0' with '136'
c Var 'aux43' order represents '1' with '137'
-136 137 0
c Var 'aux43' direct represents '1' with '138'
136 -137 138 0
-138 137 0
-138 -136 0
c Var 'aux43' direct represents '2' with '-137'
136 138 -137 0
c Encoding variable: aux44 with domain: int(1..2) (representing constraint ((field_00003_00001=1) + (field_00003_00004=1)))
c Var 'aux44' direct represents '1' with '-139'
c Var 'aux44' direct represents '2' with '139'
c Var 'aux44' order represents '2' with '1'
c Var 'aux44' order represents '1' with '-139'
c Encoding variable: aux45 with domain: int(1..2) (representing constraint ((field_00004_00001=3) + (field_00004_00004=3)))
c Var 'aux45' direct represents '1' with '-140'
c Var 'aux45' direct represents '2' with '140'
c Var 'aux45' order represents '2' with '1'
c Var 'aux45' order represents '1' with '-140'
c Encoding variable: aux46 with domain: int(0..2) (representing constraint ((field_00004_00002=1) + (field_00001_00002=1)))
c Both direct and order encoding.
c Var 'aux46' order represents '0' with '141'
c Var 'aux46' direct represents '0' with '141'
c Var 'aux46' order represents '1' with '142'
-141 142 0
c Var 'aux46' direct represents '1' with '143'
141 -142 143 0
-143 142 0
-143 -141 0
c Var 'aux46' direct represents '2' with '-142'
141 143 -142 0
c Encoding variable: aux47 with domain: int(0..2) (representing constraint ((field_00004_00002=2) + (field_00001_00002=2)))
c Both direct and order encoding.
c Var 'aux47' order represents '0' with '144'
c Var 'aux47' direct represents '0' with '144'
c Var 'aux47' order represents '1' with '145'
-144 145 0
c Var 'aux47' direct represents '1' with '146'
144 -145 146 0
-146 145 0
-146 -144 0
c Var 'aux47' direct represents '2' with '-145'
144 146 -145 0
c Encoding variable: aux48 with domain: int(0..2) (representing constraint ((field_00004_00002=3) + (field_00001_00002=3)))
c Both direct and order encoding.
c Var 'aux48' order represents '0' with '147'
c Var 'aux48' direct represents '0' with '147'
c Var 'aux48' order represents '1' with '148'
-147 148 0
c Var 'aux48' direct represents '1' with '149'
147 -148 149 0
-149 148 0
-149 -147 0
c Var 'aux48' direct represents '2' with '-148'
147 149 -148 0
c Encoding variable: aux49 with domain: int(0..2) (representing constraint ((field_00004_00002=4) + (field_00001_00002=4)))
c Both direct and order encoding.
c Var 'aux49' order represents '0' with '150'
c Var 'aux49' direct represents '0' with '150'
c Var 'aux49' order represents '1' with '151'
-150 151 0
c Var 'aux49' direct represents '1' with '152'
150 -151 152 0
-152 151 0
-152 -150 0
c Var 'aux49' direct represents '2' with '-151'
150 152 -151 0
c Encoding variable: aux50 with domain: int(0..2) (representing constraint ((field_00004_00003=1) + (field_00001_00003=1)))
c Both direct and order encoding.
c Var 'aux50' order represents '0' with '153'
c Var 'aux50' direct represents '0' with '153'
c Var 'aux50' order represents '1' with '154'
-153 154 0
c Var 'aux50' direct represents '1' with '155'
153 -154 155 0
-155 154 0
-155 -153 0
c Var 'aux50' direct represents '2' with '-154'
153 155 -154 0
c Encoding variable: aux51 with domain: int(0..2) (representing constraint ((field_00004_00003=2) + (field_00001_00003=2)))
c Both direct and order encoding.
c Var 'aux51' order represents '0' with '156'
c Var 'aux51' direct represents '0' with '156'
c Var 'aux51' order represents '1' with '157'
-156 157 0
c Var 'aux51' direct represents '1' with '158'
156 -157 158 0
-158 157 0
-158 -156 0
c Var 'aux51' direct represents '2' with '-157'
156 158 -157 0
c Encoding variable: aux52 with domain: int(0..2) (representing constraint ((field_00004_00003=3) + (field_00001_00003=3)))
c Both direct and order encoding.
c Var 'aux52' order represents '0' with '159'
c Var 'aux52' direct represents '0' with '159'
c Var 'aux52' order represents '1' with '160'
-159 160 0
c Var 'aux52' direct represents '1' with '161'
159 -160 161 0
-161 160 0
-161 -159 0
c Var 'aux52' direct represents '2' with '-160'
159 161 -160 0
c Encoding variable: aux53 with domain: int(0..2) (representing constraint ((field_00004_00003=4) + (field_00001_00003=4)))
c Both direct and order encoding.
c Var 'aux53' order represents '0' with '162'
c Var 'aux53' direct represents '0' with '162'
c Var 'aux53' order represents '1' with '163'
-162 163 0
c Var 'aux53' direct represents '1' with '164'
162 -163 164 0
-164 163 0
-164 -162 0
c Var 'aux53' direct represents '2' with '-163'
162 164 -163 0
c Encoding variable: aux54 with domain: int(0..2) (representing constraint ((field_00004_00004=1) + (field_00001_00004=1)))
c Both direct and order encoding.
c Var 'aux54' order represents '0' with '165'
c Var 'aux54' direct represents '0' with '165'
c Var 'aux54' order represents '1' with '166'
-165 166 0
c Var 'aux54' direct represents '1' with '167'
165 -166 167 0
-167 166 0
-167 -165 0
c Var 'aux54' direct represents '2' with '-166'
165 167 -166 0
c Encoding variable: aux55 with domain: int(0..2) (representing constraint ((field_00004_00004=2) + (field_00001_00004=2)))
c Both direct and order encoding.
c Var 'aux55' order represents '0' with '168'
c Var 'aux55' direct represents '0' with '168'
c Var 'aux55' order represents '1' with '169'
-168 169 0
c Var 'aux55' direct represents '1' with '170'
168 -169 170 0
-170 169 0
-170 -168 0
c Var 'aux55' direct represents '2' with '-169'
168 170 -169 0
c Encoding variable: aux56 with domain: int(0..2) (representing constraint ((field_00004_00004=3) + (field_00001_00004=3)))
c Both direct and order encoding.
c Var 'aux56' order represents '0' with '171'
c Var 'aux56' direct represents '0' with '171'
c Var 'aux56' order represents '1' with '172'
-171 172 0
c Var 'aux56' direct represents '1' with '173'
171 -172 173 0
-173 172 0
-173 -171 0
c Var 'aux56' direct represents '2' with '-172'
171 173 -172 0
c Encoding variable: aux57 with domain: int(0..2) (representing constraint ((field_00004_00004=4) + (field_00001_00004=4)))
c Both direct and order encoding.
c Var 'aux57' order represents '0' with '174'
c Var 'aux57' direct represents '0' with '174'
c Var 'aux57' order represents '1' with '175'
-174 175 0
c Var 'aux57' direct represents '1' with '176'
174 -175 176 0
-176 175 0
-176 -174 0
c Var 'aux57' direct represents '2' with '-175'
174 176 -175 0
c Encoding variable: aux58 with domain: bool (representing constraint ((aux36 + (field_00001_00002=1) + (field_00001_00003=1))<=1))
c Var 'aux58' direct represents '0' with '-177'
c Var 'aux58' direct represents '1' with '177'
c Var 'aux58' order represents '1' with '1'
c Var 'aux58' order represents '0' with '-177'
c Encoding variable: aux59 with domain: bool (representing constraint (1<=(aux36 + (field_00001_00002=1) + (field_00001_00003=1))))
c Var 'aux59' direct represents '0' with '-178'
c Var 'aux59' direct represents '1' with '178'
c Var 'aux59' order represents '1' with '1'
c Var 'aux59' order represents '0' with '-178'
c Encoding variable: aux60 with domain: bool (representing constraint ((aux37 + (field_00001_00002=2) + (field_00001_00003=2))<=1))
c Var 'aux60' direct represents '0' with '-179'
c Var 'aux60' direct represents '1' with '179'
c Var 'aux60' order represents '1' with '1'
c Var 'aux60' order represents '0' with '-179'
c Encoding variable: aux61 with domain: bool (representing constraint (1<=(aux37 + (field_00001_00002=2) + (field_00001_00003=2))))
c Var 'aux61' direct represents '0' with '-180'
c Var 'aux61' direct represents '1' with '180'
c Var 'aux61' order represents '1' with '1'
c Var 'aux61' order represents '0' with '-180'
c Encoding variable: aux62 with domain: bool (representing constraint ((aux38 + (field_00001_00002=3) + (field_00001_00003=3))<=1))
c Var 'aux62' direct represents '0' with '-181'
c Var 'aux62' direct represents '1' with '181'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-181'
c Encoding variable: aux63 with domain: bool (representing constraint (1<=(aux38 + (field_00001_00002=3) + (field_00001_00003=3))))
c Var 'aux63' direct represents '0' with '-182'
c Var 'aux63' direct represents '1' with '182'
c Var 'aux63' order represents '1' with '1'
c Var 'aux63' order represents '0' with '-182'
c Encoding variable: aux64 with domain: bool (representing constraint ((aux39 + (field_00001_00002=4) + (field_00001_00003=4))<=1))
c Var 'aux64' direct represents '0' with '-183'
c Var 'aux64' direct represents '1' with '183'
c Var 'aux64' order represents '1' with '1'
c Var 'aux64' order represents '0' with '-183'
c Encoding variable: aux65 with domain: bool (representing constraint (1<=(aux39 + (field_00001_00002=4) + (field_00001_00003=4))))
c Var 'aux65' direct represents '0' with '-184'
c Var 'aux65' direct represents '1' with '184'
c Var 'aux65' order represents '1' with '1'
c Var 'aux65' order represents '0' with '-184'
c Encoding variable: aux66 with domain: bool (representing constraint (((field_00002_00002=1) + (field_00002_00003=1) + aux40)<=1))
c Var 'aux66' direct represents '0' with '-185'
c Var 'aux66' direct represents '1' with '185'
c Var 'aux66' order represents '1' with '1'
c Var 'aux66' order represents '0' with '-185'
c Encoding variable: aux67 with domain: bool (representing constraint (1<=((field_00002_00002=1) + (field_00002_00003=1) + aux40)))
c Var 'aux67' direct represents '0' with '-186'
c Var 'aux67' direct represents '1' with '186'
c Var 'aux67' order represents '1' with '1'
c Var 'aux67' order represents '0' with '-186'
c Encoding variable: aux68 with domain: bool (representing constraint (((field_00002_00002=2) + (field_00002_00003=2) + aux41)<=1))
c Var 'aux68' direct represents '0' with '-187'
c Var 'aux68' direct represents '1' with '187'
c Var 'aux68' order represents '1' with '1'
c Var 'aux68' order represents '0' with '-187'
c Encoding variable: aux69 with domain: bool (representing constraint (1<=((field_00002_00002=2) + (field_00002_00003=2) + aux41)))
c Var 'aux69' direct represents '0' with '-188'
c Var 'aux69' direct represents '1' with '188'
c Var 'aux69' order represents '1' with '1'
c Var 'aux69' order represents '0' with '-188'
c Encoding variable: aux70 with domain: bool (representing constraint (((field_00002_00002=3) + (field_00002_00003=3) + aux42)<=1))
c Var 'aux70' direct represents '0' with '-189'
c Var 'aux70' direct represents '1' with '189'
c Var 'aux70' order represents '1' with '1'
c Var 'aux70' order represents '0' with '-189'
c Encoding variable: aux71 with domain: bool (representing constraint (1<=((field_00002_00002=3) + (field_00002_00003=3) + aux42)))
c Var 'aux71' direct represents '0' with '-190'
c Var 'aux71' direct represents '1' with '190'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-190'
c Encoding variable: aux72 with domain: bool (representing constraint (((field_00002_00002=4) + (field_00002_00003=4) + aux43)<=1))
c Var 'aux72' direct represents '0' with '-191'
c Var 'aux72' direct represents '1' with '191'
c Var 'aux72' order represents '1' with '1'
c Var 'aux72' order represents '0' with '-191'
c Encoding variable: aux73 with domain: bool (representing constraint (1<=((field_00002_00002=4) + (field_00002_00003=4) + aux43)))
c Var 'aux73' direct represents '0' with '-192'
c Var 'aux73' direct represents '1' with '192'
c Var 'aux73' order represents '1' with '1'
c Var 'aux73' order represents '0' with '-192'
c Encoding variable: aux74 with domain: bool (representing constraint (((field_00003_00002=2) + (field_00003_00003=2) + (field_00003_00004=2))<=1))
c Var 'aux74' direct represents '0' with '-193'
c Var 'aux74' direct represents '1' with '193'
c Var 'aux74' order represents '1' with '1'
c Var 'aux74' order represents '0' with '-193'
c Encoding variable: aux75 with domain: bool (representing constraint (1<=((field_00003_00002=2) + (field_00003_00003=2) + (field_00003_00004=2))))
c Var 'aux75' direct represents '0' with '-194'
c Var 'aux75' direct represents '1' with '194'
c Var 'aux75' order represents '1' with '1'
c Var 'aux75' order represents '0' with '-194'
c Encoding variable: aux76 with domain: bool (representing constraint (((field_00003_00002=3) + (field_00003_00003=3) + (field_00003_00004=3))<=1))
c Var 'aux76' direct represents '0' with '-195'
c Var 'aux76' direct represents '1' with '195'
c Var 'aux76' order represents '1' with '1'
c Var 'aux76' order represents '0' with '-195'
c Encoding variable: aux77 with domain: bool (representing constraint (1<=((field_00003_00002=3) + (field_00003_00003=3) + (field_00003_00004=3))))
c Var 'aux77' direct represents '0' with '-196'
c Var 'aux77' direct represents '1' with '196'
c Var 'aux77' order represents '1' with '1'
c Var 'aux77' order represents '0' with '-196'
c Encoding variable: aux78 with domain: bool (representing constraint (((field_00003_00002=4) + (field_00003_00003=4) + (field_00003_00004=4))<=1))
c Var 'aux78' direct represents '0' with '-197'
c Var 'aux78' direct represents '1' with '197'
c Var 'aux78' order represents '1' with '1'
c Var 'aux78' order represents '0' with '-197'
c Encoding variable: aux79 with domain: bool (representing constraint (1<=((field_00003_00002=4) + (field_00003_00003=4) + (field_00003_00004=4))))
c Var 'aux79' direct represents '0' with '-198'
c Var 'aux79' direct represents '1' with '198'
c Var 'aux79' order represents '1' with '1'
c Var 'aux79' order represents '0' with '-198'
c Encoding variable: aux80 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00004_00003=1) + (field_00004_00004=1))<=1))
c Var 'aux80' direct represents '0' with '-199'
c Var 'aux80' direct represents '1' with '199'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-199'
c Encoding variable: aux81 with domain: bool (representing constraint (1<=((field_00004_00002=1) + (field_00004_00003=1) + (field_00004_00004=1))))
c Var 'aux81' direct represents '0' with '-200'
c Var 'aux81' direct represents '1' with '200'
c Var 'aux81' order represents '1' with '1'
c Var 'aux81' order represents '0' with '-200'
c Encoding variable: aux82 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00004_00003=2) + (field_00004_00004=2))<=1))
c Var 'aux82' direct represents '0' with '-201'
c Var 'aux82' direct represents '1' with '201'
c Var 'aux82' order represents '1' with '1'
c Var 'aux82' order represents '0' with '-201'
c Encoding variable: aux83 with domain: bool (representing constraint (1<=((field_00004_00002=2) + (field_00004_00003=2) + (field_00004_00004=2))))
c Var 'aux83' direct represents '0' with '-202'
c Var 'aux83' direct represents '1' with '202'
c Var 'aux83' order represents '1' with '1'
c Var 'aux83' order represents '0' with '-202'
c Encoding variable: aux84 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00004_00003=4) + (field_00004_00004=4))<=1))
c Var 'aux84' direct represents '0' with '-203'
c Var 'aux84' direct represents '1' with '203'
c Var 'aux84' order represents '1' with '1'
c Var 'aux84' order represents '0' with '-203'
c Encoding variable: aux85 with domain: bool (representing constraint (1<=((field_00004_00002=4) + (field_00004_00003=4) + (field_00004_00004=4))))
c Var 'aux85' direct represents '0' with '-204'
c Var 'aux85' direct represents '1' with '204'
c Var 'aux85' order represents '1' with '1'
c Var 'aux85' order represents '0' with '-204'
c Encoding variable: aux86 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00003_00001=1) + (field_00001_00001=1))<=1))
c Var 'aux86' direct represents '0' with '-205'
c Var 'aux86' direct represents '1' with '205'
c Var 'aux86' order represents '1' with '1'
c Var 'aux86' order represents '0' with '-205'
c Encoding variable: aux87 with domain: bool (representing constraint (1<=((field_00002_00001=1) + (field_00003_00001=1) + (field_00001_00001=1))))
c Var 'aux87' direct represents '0' with '-206'
c Var 'aux87' direct represents '1' with '206'
c Var 'aux87' order represents '1' with '1'
c Var 'aux87' order represents '0' with '-206'
c Encoding variable: aux88 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00001_00001=2))<=1))
c Var 'aux88' direct represents '0' with '-207'
c Var 'aux88' direct represents '1' with '207'
c Var 'aux88' order represents '1' with '1'
c Var 'aux88' order represents '0' with '-207'
c Encoding variable: aux89 with domain: bool (representing constraint (1<=((field_00002_00001=2) + (field_00001_00001=2))))
c Var 'aux89' direct represents '0' with '-208'
c Var 'aux89' direct represents '1' with '208'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-208'
c Encoding variable: aux90 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00002_00001=3) + (field_00001_00001=3))<=1))
c Var 'aux90' direct represents '0' with '-209'
c Var 'aux90' direct represents '1' with '209'
c Var 'aux90' order represents '1' with '1'
c Var 'aux90' order represents '0' with '-209'
c Encoding variable: aux91 with domain: bool (representing constraint (1<=((field_00004_00001=3) + (field_00002_00001=3) + (field_00001_00001=3))))
c Var 'aux91' direct represents '0' with '-210'
c Var 'aux91' direct represents '1' with '210'
c Var 'aux91' order represents '1' with '1'
c Var 'aux91' order represents '0' with '-210'
c Encoding variable: aux92 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00001_00001=4))<=1))
c Var 'aux92' direct represents '0' with '-211'
c Var 'aux92' direct represents '1' with '211'
c Var 'aux92' order represents '1' with '1'
c Var 'aux92' order represents '0' with '-211'
c Encoding variable: aux93 with domain: bool (representing constraint (1<=((field_00002_00001=4) + (field_00001_00001=4))))
c Var 'aux93' direct represents '0' with '-212'
c Var 'aux93' direct represents '1' with '212'
c Var 'aux93' order represents '1' with '1'
c Var 'aux93' order represents '0' with '-212'
c Encoding variable: aux94 with domain: bool (representing constraint (((field_00002_00002=1) + aux46 + (field_00003_00002=1))<=1))
c Var 'aux94' direct represents '0' with '-213'
c Var 'aux94' direct represents '1' with '213'
c Var 'aux94' order represents '1' with '1'
c Var 'aux94' order represents '0' with '-213'
c Encoding variable: aux95 with domain: bool (representing constraint (1<=((field_00002_00002=1) + aux46 + (field_00003_00002=1))))
c Var 'aux95' direct represents '0' with '-214'
c Var 'aux95' direct represents '1' with '214'
c Var 'aux95' order represents '1' with '1'
c Var 'aux95' order represents '0' with '-214'
c Encoding variable: aux96 with domain: bool (representing constraint (((field_00002_00002=2) + aux47 + (field_00003_00002=2))<=1))
c Var 'aux96' direct represents '0' with '-215'
c Var 'aux96' direct represents '1' with '215'
c Var 'aux96' order represents '1' with '1'
c Var 'aux96' order represents '0' with '-215'
c Encoding variable: aux97 with domain: bool (representing constraint (1<=((field_00002_00002=2) + aux47 + (field_00003_00002=2))))
c Var 'aux97' direct represents '0' with '-216'
c Var 'aux97' direct represents '1' with '216'
c Var 'aux97' order represents '1' with '1'
c Var 'aux97' order represents '0' with '-216'
c Encoding variable: aux98 with domain: bool (representing constraint (((field_00002_00002=3) + aux48 + (field_00003_00002=3))<=1))
c Var 'aux98' direct represents '0' with '-217'
c Var 'aux98' direct represents '1' with '217'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-217'
c Encoding variable: aux99 with domain: bool (representing constraint (1<=((field_00002_00002=3) + aux48 + (field_00003_00002=3))))
c Var 'aux99' direct represents '0' with '-218'
c Var 'aux99' direct represents '1' with '218'
c Var 'aux99' order represents '1' with '1'
c Var 'aux99' order represents '0' with '-218'
c Encoding variable: aux100 with domain: bool (representing constraint (((field_00002_00002=4) + aux49 + (field_00003_00002=4))<=1))
c Var 'aux100' direct represents '0' with '-219'
c Var 'aux100' direct represents '1' with '219'
c Var 'aux100' order represents '1' with '1'
c Var 'aux100' order represents '0' with '-219'
c Encoding variable: aux101 with domain: bool (representing constraint (1<=((field_00002_00002=4) + aux49 + (field_00003_00002=4))))
c Var 'aux101' direct represents '0' with '-220'
c Var 'aux101' direct represents '1' with '220'
c Var 'aux101' order represents '1' with '1'
c Var 'aux101' order represents '0' with '-220'
c Encoding variable: aux102 with domain: bool (representing constraint (((field_00002_00003=1) + aux50 + (field_00003_00003=1))<=1))
c Var 'aux102' direct represents '0' with '-221'
c Var 'aux102' direct represents '1' with '221'
c Var 'aux102' order represents '1' with '1'
c Var 'aux102' order represents '0' with '-221'
c Encoding variable: aux103 with domain: bool (representing constraint (1<=((field_00002_00003=1) + aux50 + (field_00003_00003=1))))
c Var 'aux103' direct represents '0' with '-222'
c Var 'aux103' direct represents '1' with '222'
c Var 'aux103' order represents '1' with '1'
c Var 'aux103' order represents '0' with '-222'
c Encoding variable: aux104 with domain: bool (representing constraint (((field_00002_00003=2) + aux51 + (field_00003_00003=2))<=1))
c Var 'aux104' direct represents '0' with '-223'
c Var 'aux104' direct represents '1' with '223'
c Var 'aux104' order represents '1' with '1'
c Var 'aux104' order represents '0' with '-223'
c Encoding variable: aux105 with domain: bool (representing constraint (1<=((field_00002_00003=2) + aux51 + (field_00003_00003=2))))
c Var 'aux105' direct represents '0' with '-224'
c Var 'aux105' direct represents '1' with '224'
c Var 'aux105' order represents '1' with '1'
c Var 'aux105' order represents '0' with '-224'
c Encoding variable: aux106 with domain: bool (representing constraint (((field_00002_00003=3) + aux52 + (field_00003_00003=3))<=1))
c Var 'aux106' direct represents '0' with '-225'
c Var 'aux106' direct represents '1' with '225'
c Var 'aux106' order represents '1' with '1'
c Var 'aux106' order represents '0' with '-225'
c Encoding variable: aux107 with domain: bool (representing constraint (1<=((field_00002_00003=3) + aux52 + (field_00003_00003=3))))
c Var 'aux107' direct represents '0' with '-226'
c Var 'aux107' direct represents '1' with '226'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-226'
c Encoding variable: aux108 with domain: bool (representing constraint (((field_00002_00003=4) + aux53 + (field_00003_00003=4))<=1))
c Var 'aux108' direct represents '0' with '-227'
c Var 'aux108' direct represents '1' with '227'
c Var 'aux108' order represents '1' with '1'
c Var 'aux108' order represents '0' with '-227'
c Encoding variable: aux109 with domain: bool (representing constraint (1<=((field_00002_00003=4) + aux53 + (field_00003_00003=4))))
c Var 'aux109' direct represents '0' with '-228'
c Var 'aux109' direct represents '1' with '228'
c Var 'aux109' order represents '1' with '1'
c Var 'aux109' order represents '0' with '-228'
c Encoding variable: aux110 with domain: bool (representing constraint (((field_00002_00004=1) + aux54 + (field_00003_00004=1))<=1))
c Var 'aux110' direct represents '0' with '-229'
c Var 'aux110' direct represents '1' with '229'
c Var 'aux110' order represents '1' with '1'
c Var 'aux110' order represents '0' with '-229'
c Encoding variable: aux111 with domain: bool (representing constraint (1<=((field_00002_00004=1) + aux54 + (field_00003_00004=1))))
c Var 'aux111' direct represents '0' with '-230'
c Var 'aux111' direct represents '1' with '230'
c Var 'aux111' order represents '1' with '1'
c Var 'aux111' order represents '0' with '-230'
c Encoding variable: aux112 with domain: bool (representing constraint (((field_00002_00004=2) + aux55 + (field_00003_00004=2))<=1))
c Var 'aux112' direct represents '0' with '-231'
c Var 'aux112' direct represents '1' with '231'
c Var 'aux112' order represents '1' with '1'
c Var 'aux112' order represents '0' with '-231'
c Encoding variable: aux113 with domain: bool (representing constraint (1<=((field_00002_00004=2) + aux55 + (field_00003_00004=2))))
c Var 'aux113' direct represents '0' with '-232'
c Var 'aux113' direct represents '1' with '232'
c Var 'aux113' order represents '1' with '1'
c Var 'aux113' order represents '0' with '-232'
c Encoding variable: aux114 with domain: bool (representing constraint (((field_00002_00004=3) + aux56 + (field_00003_00004=3))<=1))
c Var 'aux114' direct represents '0' with '-233'
c Var 'aux114' direct represents '1' with '233'
c Var 'aux114' order represents '1' with '1'
c Var 'aux114' order represents '0' with '-233'
c Encoding variable: aux115 with domain: bool (representing constraint (1<=((field_00002_00004=3) + aux56 + (field_00003_00004=3))))
c Var 'aux115' direct represents '0' with '-234'
c Var 'aux115' direct represents '1' with '234'
c Var 'aux115' order represents '1' with '1'
c Var 'aux115' order represents '0' with '-234'
c Encoding variable: aux116 with domain: bool (representing constraint (((field_00002_00004=4) + aux57 + (field_00003_00004=4))<=1))
c Var 'aux116' direct represents '0' with '-235'
c Var 'aux116' direct represents '1' with '235'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-235'
c Encoding variable: aux117 with domain: bool (representing constraint (1<=((field_00002_00004=4) + aux57 + (field_00003_00004=4))))
c Var 'aux117' direct represents '0' with '-236'
c Var 'aux117' direct represents '1' with '236'
c Var 'aux117' order represents '1' with '1'
c Var 'aux117' order represents '0' with '-236'
c (((aux36 + SATLiteral(6) + SATLiteral(10))<=1)=tv=SATLiteral(177))
-177 116 0
-177 -10 115 0
-177 -6 115 0
-177 -6 -10 0
177 10 -115 0
177 6 -115 0
177 6 10 -116 0
c ((1<=(aux36 + SATLiteral(6) + SATLiteral(10)))=tv=SATLiteral(178))
-178 6 10 -115 0
178 115 0
178 -10 0
178 -6 0
178 -6 -10 0
c (((aux37 + SATLiteral(7) + SATLiteral(11))<=1)=tv=SATLiteral(179))
-179 119 0
-179 -11 118 0
-179 -7 118 0
-179 -7 -11 0
179 11 -118 0
179 7 -118 0
179 7 11 -119 0
c ((1<=(aux37 + SATLiteral(7) + SATLiteral(11)))=tv=SATLiteral(180))
-180 7 11 -118 0
180 118 0
180 -11 0
180 -7 0
180 -7 -11 0
c (((aux38 + SATLiteral(8) + SATLiteral(12))<=1)=tv=SATLiteral(181))
-181 122 0
-181 -12 121 0
-181 -8 121 0
-181 -8 -12 0
181 12 -121 0
181 8 -121 0
181 8 12 -122 0
c ((1<=(aux38 + SATLiteral(8) + SATLiteral(12)))=tv=SATLiteral(182))
-182 8 12 -121 0
182 121 0
182 -12 0
182 -8 0
182 -8 -12 0
c (((aux39 + SATLiteral(9) + SATLiteral(13))<=1)=tv=SATLiteral(183))
-183 125 0
-183 -13 124 0
-183 -9 124 0
-183 -9 -13 0
183 13 -124 0
183 9 -124 0
183 9 13 -125 0
c ((1<=(aux39 + SATLiteral(9) + SATLiteral(13)))=tv=SATLiteral(184))
-184 9 13 -124 0
184 124 0
184 -13 0
184 -9 0
184 -9 -13 0
c (((SATLiteral(22) + SATLiteral(27) + aux40)<=1)=tv=SATLiteral(185))
-185 128 0
-185 -27 127 0
-185 -22 127 0
-185 -22 -27 0
185 27 -127 0
185 22 -127 0
185 22 27 -128 0
c ((1<=(SATLiteral(22) + SATLiteral(27) + aux40))=tv=SATLiteral(186))
-186 22 27 -127 0
186 127 0
186 -27 0
186 -22 0
186 -22 -27 0
c (((SATLiteral(24) + SATLiteral(29) + aux41)<=1)=tv=SATLiteral(187))
-187 131 0
-187 -29 130 0
-187 -24 130 0
-187 -24 -29 0
187 29 -130 0
187 24 -130 0
187 24 29 -131 0
c ((1<=(SATLiteral(24) + SATLiteral(29) + aux41))=tv=SATLiteral(188))
-188 24 29 -130 0
188 130 0
188 -29 0
188 -24 0
188 -24 -29 0
c (((SATLiteral(26) + SATLiteral(31) + aux42)<=1)=tv=SATLiteral(189))
-189 134 0
-189 -31 133 0
-189 -26 133 0
-189 -26 -31 0
189 31 -133 0
189 26 -133 0
189 26 31 -134 0
c ((1<=(SATLiteral(26) + SATLiteral(31) + aux42))=tv=SATLiteral(190))
-190 26 31 -133 0
190 133 0
190 -31 0
190 -26 0
190 -26 -31 0
c (((SATLiteral(-25) + SATLiteral(-30) + aux43)<=1)=tv=SATLiteral(191))
-191 137 0
-191 30 136 0
-191 25 136 0
-191 25 30 0
191 -30 -136 0
191 -25 -136 0
191 -25 -30 -137 0
c ((1<=(SATLiteral(-25) + SATLiteral(-30) + aux43))=tv=SATLiteral(192))
-192 -25 -30 -136 0
192 136 0
192 30 0
192 25 0
192 25 30 0
c (((SATLiteral(40) + SATLiteral(45) + SATLiteral(50))<=1)=tv=SATLiteral(193))
-193 -45 -50 0
-193 -40 -50 0
-193 -40 -45 0
193 45 50 0
193 40 50 0
193 40 45 0
c ((1<=(SATLiteral(40) + SATLiteral(45) + SATLiteral(50)))=tv=SATLiteral(194))
-194 40 45 50 0
194 -50 0
194 -45 0
194 -40 0
194 -40 -45 0
c (((SATLiteral(42) + SATLiteral(47) + SATLiteral(52))<=1)=tv=SATLiteral(195))
-195 -47 -52 0
-195 -42 -52 0
-195 -42 -47 0
195 47 52 0
195 42 52 0
195 42 47 0
c ((1<=(SATLiteral(42) + SATLiteral(47) + SATLiteral(52)))=tv=SATLiteral(196))
-196 42 47 52 0
196 -52 0
196 -47 0
196 -42 0
196 -42 -47 0
c (((SATLiteral(-41) + SATLiteral(-46) + SATLiteral(-51))<=1)=tv=SATLiteral(197))
-197 46 51 0
-197 41 51 0
-197 41 46 0
197 -46 -51 0
197 -41 -51 0
197 -41 -46 0
c ((1<=(SATLiteral(-41) + SATLiteral(-46) + SATLiteral(-51)))=tv=SATLiteral(198))
-198 -41 -46 -51 0
198 51 0
198 46 0
198 41 0
198 41 46 0
c (((SATLiteral(54) + SATLiteral(58) + SATLiteral(62))<=1)=tv=SATLiteral(199))
-199 -58 -62 0
-199 -54 -62 0
-199 -54 -58 0
199 58 62 0
199 54 62 0
199 54 58 0
c ((1<=(SATLiteral(54) + SATLiteral(58) + SATLiteral(62)))=tv=SATLiteral(200))
-200 54 58 62 0
200 -62 0
200 -58 0
200 -54 0
200 -54 -58 0
c (((SATLiteral(55) + SATLiteral(59) + SATLiteral(64))<=1)=tv=SATLiteral(201))
-201 -59 -64 0
-201 -55 -64 0
-201 -55 -59 0
201 59 64 0
201 55 64 0
201 55 59 0
c ((1<=(SATLiteral(55) + SATLiteral(59) + SATLiteral(64)))=tv=SATLiteral(202))
-202 55 59 64 0
202 -64 0
202 -59 0
202 -55 0
202 -55 -59 0
c (((SATLiteral(57) + SATLiteral(61) + SATLiteral(-65))<=1)=tv=SATLiteral(203))
-203 -61 65 0
-203 -57 65 0
-203 -57 -61 0
203 61 -65 0
203 57 -65 0
203 57 61 0
c ((1<=(SATLiteral(57) + SATLiteral(61) + SATLiteral(-65)))=tv=SATLiteral(204))
-204 57 61 -65 0
204 65 0
204 -61 0
204 -57 0
204 -57 -61 0
c (((SATLiteral(18) + SATLiteral(37) + SATLiteral(2))<=1)=tv=SATLiteral(205))
-205 -37 -2 0
-205 -18 -2 0
-205 -18 -37 0
205 37 2 0
205 18 2 0
205 18 37 0
c ((1<=(SATLiteral(18) + SATLiteral(37) + SATLiteral(2)))=tv=SATLiteral(206))
-206 18 37 2 0
206 -2 0
206 -37 0
206 -18 0
206 -18 -37 0
c (((SATLiteral(19) + SATLiteral(3))<=1)=tv=SATLiteral(207))
-207 -19 -3 0
207 3 0
207 19 0
c ((1<=(SATLiteral(19) + SATLiteral(3)))=tv=SATLiteral(208))
-208 19 3 0
208 -3 0
208 -19 0
c (((SATLiteral(53) + SATLiteral(20) + SATLiteral(4))<=1)=tv=SATLiteral(209))
-209 -20 -4 0
-209 -53 -4 0
-209 -53 -20 0
209 20 4 0
209 53 4 0
209 53 20 0
c ((1<=(SATLiteral(53) + SATLiteral(20) + SATLiteral(4)))=tv=SATLiteral(210))
-210 53 20 4 0
210 -4 0
210 -20 0
210 -53 0
210 -53 -20 0
c (((SATLiteral(21) + SATLiteral(5))<=1)=tv=SATLiteral(211))
-211 -21 -5 0
211 5 0
211 21 0
c ((1<=(SATLiteral(21) + SATLiteral(5)))=tv=SATLiteral(212))
-212 21 5 0
212 -5 0
212 -21 0
c (((SATLiteral(22) + aux46 + SATLiteral(38))<=1)=tv=SATLiteral(213))
-213 142 0
-213 -38 141 0
-213 -22 141 0
-213 -22 -38 0
213 38 -141 0
213 22 -141 0
213 22 38 -142 0
c ((1<=(SATLiteral(22) + aux46 + SATLiteral(38)))=tv=SATLiteral(214))
-214 22 38 -141 0
214 141 0
214 -38 0
214 -22 0
214 -22 -38 0
c (((SATLiteral(24) + aux47 + SATLiteral(40))<=1)=tv=SATLiteral(215))
-215 145 0
-215 -40 144 0
-215 -24 144 0
-215 -24 -40 0
215 40 -144 0
215 24 -144 0
215 24 40 -145 0
c ((1<=(SATLiteral(24) + aux47 + SATLiteral(40)))=tv=SATLiteral(216))
-216 24 40 -144 0
216 144 0
216 -40 0
216 -24 0
216 -24 -40 0
c (((SATLiteral(26) + aux48 + SATLiteral(42))<=1)=tv=SATLiteral(217))
-217 148 0
-217 -42 147 0
-217 -26 147 0
-217 -26 -42 0
217 42 -147 0
217 26 -147 0
217 26 42 -148 0
c ((1<=(SATLiteral(26) + aux48 + SATLiteral(42)))=tv=SATLiteral(218))
-218 26 42 -147 0
218 147 0
218 -42 0
218 -26 0
218 -26 -42 0
c (((SATLiteral(-25) + aux49 + SATLiteral(-41))<=1)=tv=SATLiteral(219))
-219 151 0
-219 41 150 0
-219 25 150 0
-219 25 41 0
219 -41 -150 0
219 -25 -150 0
219 -25 -41 -151 0
c ((1<=(SATLiteral(-25) + aux49 + SATLiteral(-41)))=tv=SATLiteral(220))
-220 -25 -41 -150 0
220 150 0
220 41 0
220 25 0
220 25 41 0
c (((SATLiteral(27) + aux50 + SATLiteral(43))<=1)=tv=SATLiteral(221))
-221 154 0
-221 -43 153 0
-221 -27 153 0
-221 -27 -43 0
221 43 -153 0
221 27 -153 0
221 27 43 -154 0
c ((1<=(SATLiteral(27) + aux50 + SATLiteral(43)))=tv=SATLiteral(222))
-222 27 43 -153 0
222 153 0
222 -43 0
222 -27 0
222 -27 -43 0
c (((SATLiteral(29) + aux51 + SATLiteral(45))<=1)=tv=SATLiteral(223))
-223 157 0
-223 -45 156 0
-223 -29 156 0
-223 -29 -45 0
223 45 -156 0
223 29 -156 0
223 29 45 -157 0
c ((1<=(SATLiteral(29) + aux51 + SATLiteral(45)))=tv=SATLiteral(224))
-224 29 45 -156 0
224 156 0
224 -45 0
224 -29 0
224 -29 -45 0
c (((SATLiteral(31) + aux52 + SATLiteral(47))<=1)=tv=SATLiteral(225))
-225 160 0
-225 -47 159 0
-225 -31 159 0
-225 -31 -47 0
225 47 -159 0
225 31 -159 0
225 31 47 -160 0
c ((1<=(SATLiteral(31) + aux52 + SATLiteral(47)))=tv=SATLiteral(226))
-226 31 47 -159 0
226 159 0
226 -47 0
226 -31 0
226 -31 -47 0
c (((SATLiteral(-30) + aux53 + SATLiteral(-46))<=1)=tv=SATLiteral(227))
-227 163 0
-227 46 162 0
-227 30 162 0
-227 30 46 0
227 -46 -162 0
227 -30 -162 0
227 -30 -46 -163 0
c ((1<=(SATLiteral(-30) + aux53 + SATLiteral(-46)))=tv=SATLiteral(228))
-228 -30 -46 -162 0
228 162 0
228 46 0
228 30 0
228 30 46 0
c (((SATLiteral(32) + aux54 + SATLiteral(48))<=1)=tv=SATLiteral(229))
-229 166 0
-229 -48 165 0
-229 -32 165 0
-229 -32 -48 0
229 48 -165 0
229 32 -165 0
229 32 48 -166 0
c ((1<=(SATLiteral(32) + aux54 + SATLiteral(48)))=tv=SATLiteral(230))
-230 32 48 -165 0
230 165 0
230 -48 0
230 -32 0
230 -32 -48 0
c (((SATLiteral(34) + aux55 + SATLiteral(50))<=1)=tv=SATLiteral(231))
-231 169 0
-231 -50 168 0
-231 -34 168 0
-231 -34 -50 0
231 50 -168 0
231 34 -168 0
231 34 50 -169 0
c ((1<=(SATLiteral(34) + aux55 + SATLiteral(50)))=tv=SATLiteral(232))
-232 34 50 -168 0
232 168 0
232 -50 0
232 -34 0
232 -34 -50 0
c (((SATLiteral(36) + aux56 + SATLiteral(52))<=1)=tv=SATLiteral(233))
-233 172 0
-233 -52 171 0
-233 -36 171 0
-233 -36 -52 0
233 52 -171 0
233 36 -171 0
233 36 52 -172 0
c ((1<=(SATLiteral(36) + aux56 + SATLiteral(52)))=tv=SATLiteral(234))
-234 36 52 -171 0
234 171 0
234 -52 0
234 -36 0
234 -36 -52 0
c (((SATLiteral(-35) + aux57 + SATLiteral(-51))<=1)=tv=SATLiteral(235))
-235 175 0
-235 51 174 0
-235 35 174 0
-235 35 51 0
235 -51 -174 0
235 -35 -174 0
235 -35 -51 -175 0
c ((1<=(SATLiteral(-35) + aux57 + SATLiteral(-51)))=tv=SATLiteral(236))
-236 -35 -51 -174 0
236 174 0
236 51 0
236 35 0
236 35 51 0
c ((field_00002_00002<field_00002_00003)=tv=SATLiteral(79))
-27 -79 0
22 -28 -79 0
23 -30 -79 0
25 -79 0
27 -22 79 0
28 -23 79 0
30 -25 79 0
c ((field_00003_00002<field_00003_00003)=tv=SATLiteral(80))
-43 -80 0
38 -44 -80 0
39 -46 -80 0
41 -80 0
43 -38 80 0
44 -39 80 0
46 -41 80 0
c ((field_00003_00004<field_00002_00004)=tv=SATLiteral(81))
-32 -81 0
48 -33 -81 0
49 -35 -81 0
51 -81 0
32 -48 81 0
33 -49 81 0
35 -51 81 0
c ((field_00003_00004<field_00004_00004)=tv=SATLiteral(82))
-62 -82 0
48 -63 -82 0
49 -65 -82 0
51 -82 0
62 -48 82 0
63 -49 82 0
65 -51 82 0
c ((SATLiteral(177) /\ SATLiteral(178))=tv=SATLiteral(83))
83 -177 -178 0
177 -83 0
178 -83 0
c ((SATLiteral(179) /\ SATLiteral(180))=tv=SATLiteral(84))
84 -179 -180 0
179 -84 0
180 -84 0
c ((SATLiteral(181) /\ SATLiteral(182))=tv=SATLiteral(85))
85 -181 -182 0
181 -85 0
182 -85 0
c ((SATLiteral(183) /\ SATLiteral(184))=tv=SATLiteral(86))
86 -183 -184 0
183 -86 0
184 -86 0
c ((SATLiteral(185) /\ SATLiteral(186))=tv=SATLiteral(87))
87 -185 -186 0
185 -87 0
186 -87 0
c ((SATLiteral(187) /\ SATLiteral(188))=tv=SATLiteral(88))
88 -187 -188 0
187 -88 0
188 -88 0
c ((SATLiteral(189) /\ SATLiteral(190))=tv=SATLiteral(89))
89 -189 -190 0
189 -89 0
190 -89 0
c ((SATLiteral(191) /\ SATLiteral(192))=tv=SATLiteral(90))
90 -191 -192 0
191 -90 0
192 -90 0
c (((aux44 + SATLiteral(38) + SATLiteral(43))<=1)=tv=SATLiteral(91))
-91 -43 0
-91 -38 0
-91 -139 0
-91 -139 -38 0
91 139 38 43 0
c ((SATLiteral(193) /\ SATLiteral(194))=tv=SATLiteral(92))
92 -193 -194 0
193 -92 0
194 -92 0
c ((SATLiteral(195) /\ SATLiteral(196))=tv=SATLiteral(93))
93 -195 -196 0
195 -93 0
196 -93 0
c ((SATLiteral(197) /\ SATLiteral(198))=tv=SATLiteral(94))
94 -197 -198 0
197 -94 0
198 -94 0
c ((SATLiteral(199) /\ SATLiteral(200))=tv=SATLiteral(95))
95 -199 -200 0
199 -95 0
200 -95 0
c ((SATLiteral(201) /\ SATLiteral(202))=tv=SATLiteral(96))
96 -201 -202 0
201 -96 0
202 -96 0
c (((SATLiteral(56) + SATLiteral(60) + aux45)<=1)=tv=SATLiteral(97))
-97 -140 0
-97 -60 0
-97 -56 0
-97 -56 -60 0
97 56 60 140 0
c ((SATLiteral(203) /\ SATLiteral(204))=tv=SATLiteral(98))
98 -203 -204 0
203 -98 0
204 -98 0
c ((SATLiteral(205) /\ SATLiteral(206))=tv=SATLiteral(99))
99 -205 -206 0
205 -99 0
206 -99 0
c ((SATLiteral(207) /\ SATLiteral(208))=tv=SATLiteral(100))
100 -207 -208 0
207 -100 0
208 -100 0
c ((SATLiteral(209) /\ SATLiteral(210))=tv=SATLiteral(101))
101 -209 -210 0
209 -101 0
210 -101 0
c ((SATLiteral(211) /\ SATLiteral(212))=tv=SATLiteral(102))
102 -211 -212 0
211 -102 0
212 -102 0
c ((SATLiteral(213) /\ SATLiteral(214))=tv=SATLiteral(103))
103 -213 -214 0
213 -103 0
214 -103 0
c ((SATLiteral(215) /\ SATLiteral(216))=tv=SATLiteral(104))
104 -215 -216 0
215 -104 0
216 -104 0
c ((SATLiteral(217) /\ SATLiteral(218))=tv=SATLiteral(105))
105 -217 -218 0
217 -105 0
218 -105 0
c ((SATLiteral(219) /\ SATLiteral(220))=tv=SATLiteral(106))
106 -219 -220 0
219 -106 0
220 -106 0
c ((SATLiteral(221) /\ SATLiteral(222))=tv=SATLiteral(107))
107 -221 -222 0
221 -107 0
222 -107 0
c ((SATLiteral(223) /\ SATLiteral(224))=tv=SATLiteral(108))
108 -223 -224 0
223 -108 0
224 -108 0
c ((SATLiteral(225) /\ SATLiteral(226))=tv=SATLiteral(109))
109 -225 -226 0
225 -109 0
226 -109 0
c ((SATLiteral(227) /\ SATLiteral(228))=tv=SATLiteral(110))
110 -227 -228 0
227 -110 0
228 -110 0
c ((SATLiteral(229) /\ SATLiteral(230))=tv=SATLiteral(111))
111 -229 -230 0
229 -111 0
230 -111 0
c ((SATLiteral(231) /\ SATLiteral(232))=tv=SATLiteral(112))
112 -231 -232 0
231 -112 0
232 -112 0
c ((SATLiteral(233) /\ SATLiteral(234))=tv=SATLiteral(113))
113 -233 -234 0
233 -113 0
234 -113 0
c ((SATLiteral(235) /\ SATLiteral(236))=tv=SATLiteral(114))
114 -235 -236 0
235 -114 0
236 -114 0
c (SATLiteral(75) -> SATLiteral(79))
-75 79 0
c (SATLiteral(76) -> SATLiteral(80))
-76 80 0
c (SATLiteral(77) -> SATLiteral(81))
-77 81 0
c (SATLiteral(78) -> SATLiteral(82))
-78 82 0
c SATLiteral(37)
37 0
c SATLiteral(53)
53 0
c (SATLiteral(67) -> SATLiteral(83))
-67 83 0
c (SATLiteral(67) -> SATLiteral(84))
-67 84 0
c (SATLiteral(67) -> SATLiteral(85))
-67 85 0
c (SATLiteral(67) -> SATLiteral(86))
-67 86 0
c (SATLiteral(68) -> SATLiteral(87))
-68 87 0
c (SATLiteral(68) -> SATLiteral(88))
-68 88 0
c (SATLiteral(68) -> SATLiteral(89))
-68 89 0
c (SATLiteral(68) -> SATLiteral(90))
-68 90 0
c (SATLiteral(69) -> SATLiteral(91))
-69 91 0
c (SATLiteral(69) -> SATLiteral(92))
-69 92 0
c (SATLiteral(69) -> SATLiteral(93))
-69 93 0
c (SATLiteral(69) -> SATLiteral(94))
-69 94 0
c (SATLiteral(70) -> SATLiteral(95))
-70 95 0
c (SATLiteral(70) -> SATLiteral(96))
-70 96 0
c (SATLiteral(70) -> SATLiteral(97))
-70 97 0
c (SATLiteral(70) -> SATLiteral(98))
-70 98 0
c (SATLiteral(71) -> SATLiteral(99))
-71 99 0
c (SATLiteral(71) -> SATLiteral(100))
-71 100 0
c (SATLiteral(71) -> SATLiteral(101))
-71 101 0
c (SATLiteral(71) -> SATLiteral(102))
-71 102 0
c (SATLiteral(72) -> SATLiteral(103))
-72 103 0
c (SATLiteral(72) -> SATLiteral(104))
-72 104 0
c (SATLiteral(72) -> SATLiteral(105))
-72 105 0
c (SATLiteral(72) -> SATLiteral(106))
-72 106 0
c (SATLiteral(73) -> SATLiteral(107))
-73 107 0
c (SATLiteral(73) -> SATLiteral(108))
-73 108 0
c (SATLiteral(73) -> SATLiteral(109))
-73 109 0
c (SATLiteral(73) -> SATLiteral(110))
-73 110 0
c (SATLiteral(74) -> SATLiteral(111))
-74 111 0
c (SATLiteral(74) -> SATLiteral(112))
-74 112 0
c (SATLiteral(74) -> SATLiteral(113))
-74 113 0
c (SATLiteral(74) -> SATLiteral(114))
-74 114 0
c (( - aux36 + SATLiteral(2) + SATLiteral(14))<=0)
-14 -115 0
-2 -115 0
-2 -14 -116 0
c (0<=( - aux36 + SATLiteral(2) + SATLiteral(14)))
14 116 0
2 116 0
2 14 115 0
c (( - aux37 + SATLiteral(3) + SATLiteral(15))<=0)
-15 -118 0
-3 -118 0
-3 -15 -119 0
c (0<=( - aux37 + SATLiteral(3) + SATLiteral(15)))
15 119 0
3 119 0
3 15 118 0
c (( - aux38 + SATLiteral(4) + SATLiteral(16))<=0)
-16 -121 0
-4 -121 0
-4 -16 -122 0
c (0<=( - aux38 + SATLiteral(4) + SATLiteral(16)))
16 122 0
4 122 0
4 16 121 0
c (( - aux39 + SATLiteral(5) + SATLiteral(17))<=0)
-17 -124 0
-5 -124 0
-5 -17 -125 0
c (0<=( - aux39 + SATLiteral(5) + SATLiteral(17)))
17 125 0
5 125 0
5 17 124 0
c ((SATLiteral(18) + SATLiteral(32) - aux40)<=0)
-32 -127 0
-18 -127 0
-18 -32 -128 0
c (0<=(SATLiteral(18) + SATLiteral(32) - aux40))
32 128 0
18 128 0
18 32 127 0
c ((SATLiteral(19) + SATLiteral(34) - aux41)<=0)
-34 -130 0
-19 -130 0
-19 -34 -131 0
c (0<=(SATLiteral(19) + SATLiteral(34) - aux41))
34 131 0
19 131 0
19 34 130 0
c ((SATLiteral(20) + SATLiteral(36) - aux42)<=0)
-36 -133 0
-20 -133 0
-20 -36 -134 0
c (0<=(SATLiteral(20) + SATLiteral(36) - aux42))
36 134 0
20 134 0
20 36 133 0
c ((SATLiteral(21) + SATLiteral(-35) - aux43)<=0)
35 -136 0
-21 -136 0
-21 35 -137 0
c (0<=(SATLiteral(21) + SATLiteral(-35) - aux43))
-35 137 0
21 137 0
21 -35 136 0
c (( - aux44 + SATLiteral(37) + SATLiteral(48))<=0)
139 -37 -48 0
c (0<=( - aux44 + SATLiteral(37) + SATLiteral(48)))
37 48 0
-139 48 0
-139 37 0
c ((SATLiteral(53) + SATLiteral(66) - aux45)<=0)
-53 -66 140 0
c (0<=(SATLiteral(53) + SATLiteral(66) - aux45))
66 -140 0
53 -140 0
53 66 0
c ((SATLiteral(54) - aux46 + SATLiteral(6))<=0)
-6 -141 0
-54 -141 0
-54 -6 -142 0
c (0<=(SATLiteral(54) - aux46 + SATLiteral(6)))
6 142 0
54 142 0
54 6 141 0
c ((SATLiteral(55) - aux47 + SATLiteral(7))<=0)
-7 -144 0
-55 -144 0
-55 -7 -145 0
c (0<=(SATLiteral(55) - aux47 + SATLiteral(7)))
7 145 0
55 145 0
55 7 144 0
c ((SATLiteral(56) - aux48 + SATLiteral(8))<=0)
-8 -147 0
-56 -147 0
-56 -8 -148 0
c (0<=(SATLiteral(56) - aux48 + SATLiteral(8)))
8 148 0
56 148 0
56 8 147 0
c ((SATLiteral(57) - aux49 + SATLiteral(9))<=0)
-9 -150 0
-57 -150 0
-57 -9 -151 0
c (0<=(SATLiteral(57) - aux49 + SATLiteral(9)))
9 151 0
57 151 0
57 9 150 0
c ((SATLiteral(58) - aux50 + SATLiteral(10))<=0)
-10 -153 0
-58 -153 0
-58 -10 -154 0
c (0<=(SATLiteral(58) - aux50 + SATLiteral(10)))
10 154 0
58 154 0
58 10 153 0
c ((SATLiteral(59) - aux51 + SATLiteral(11))<=0)
-11 -156 0
-59 -156 0
-59 -11 -157 0
c (0<=(SATLiteral(59) - aux51 + SATLiteral(11)))
11 157 0
59 157 0
59 11 156 0
c ((SATLiteral(60) - aux52 + SATLiteral(12))<=0)
-12 -159 0
-60 -159 0
-60 -12 -160 0
c (0<=(SATLiteral(60) - aux52 + SATLiteral(12)))
12 160 0
60 160 0
60 12 159 0
c ((SATLiteral(61) - aux53 + SATLiteral(13))<=0)
-13 -162 0
-61 -162 0
-61 -13 -163 0
c (0<=(SATLiteral(61) - aux53 + SATLiteral(13)))
13 163 0
61 163 0
61 13 162 0
c ((SATLiteral(62) - aux54 + SATLiteral(14))<=0)
-14 -165 0
-62 -165 0
-62 -14 -166 0
c (0<=(SATLiteral(62) - aux54 + SATLiteral(14)))
14 166 0
62 166 0
62 14 165 0
c ((SATLiteral(64) - aux55 + SATLiteral(15))<=0)
-15 -168 0
-64 -168 0
-64 -15 -169 0
c (0<=(SATLiteral(64) - aux55 + SATLiteral(15)))
15 169 0
64 169 0
64 15 168 0
c ((SATLiteral(66) - aux56 + SATLiteral(16))<=0)
-16 -171 0
-66 -171 0
-66 -16 -172 0
c (0<=(SATLiteral(66) - aux56 + SATLiteral(16)))
16 172 0
66 172 0
66 16 171 0
c ((SATLiteral(-65) - aux57 + SATLiteral(17))<=0)
-17 -174 0
65 -174 0
65 -17 -175 0
c (0<=(SATLiteral(-65) - aux57 + SATLiteral(17)))
17 175 0
-65 175 0
-65 17 174 0
